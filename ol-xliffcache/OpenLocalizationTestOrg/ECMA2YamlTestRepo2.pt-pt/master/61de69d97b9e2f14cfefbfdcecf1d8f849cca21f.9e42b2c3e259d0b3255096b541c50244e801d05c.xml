{"nodes":[{"pos":[2949,3081],"content":"Retrieves exports which match a specified <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.ImportDefinition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Retrieves exports which match a specified <xref href=\"System.ComponentModel.Composition.Primitives.ImportDefinition\"></xref> object."},{"pos":[3706,3824],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.ExportProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Hosting.ExportProvider\"></xref> class."},{"pos":[4484,4600],"content":"Occurs when the exports in the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.ExportProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> change.","needQuote":true,"needEscape":true,"source":"Occurs when the exports in the <xref href=\"System.ComponentModel.Composition.Hosting.ExportProvider\"></xref> change."},{"pos":[4861,4873],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5391,5437],"content":"Occurs when the provided exports are changing.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the provided exports are changing.","pos":[0,46]}]},{"pos":[5699,5711],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6333,6345],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7124,7136],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7195,7207],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7954,7966],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8787,8799],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8872,8884],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9626,9638],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10460,10472],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10518,10530],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11319,11331],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12216,12228],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12274,12286],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13116,13128],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13997,14009],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14095,14107],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14872,14950],"content":"Gets all exports that match the conditions of the specified import definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets all exports that match the conditions of the specified import definition.","pos":[0,78]}]},{"pos":[15290,15424],"content":"The object that defines the conditions of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.Export\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects to get.","needQuote":true,"needEscape":true,"source":"The object that defines the conditions of the <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> objects to get."},{"pos":[15560,15725],"content":"A collection of all the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.Export\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects matching the condition specified by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">definition</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A collection of all the <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> objects matching the condition specified by <code>definition</code>."},{"pos":[16004,16926],"content":"&lt;xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality<bpt id=\"p1\">*</bpt>&gt; is <bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.ImportCardinality\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and there are zero <bpt id=\"p3\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.Export\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> objects that match the conditions of the specified <bpt id=\"p4\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.ImportDefinition\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.       -or-       &lt;xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality<ept id=\"p1\">*</ept>&gt; is <bpt id=\"p5\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.ImportCardinality\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept> or <bpt id=\"p6\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.ImportCardinality\"&gt;</bpt><ept id=\"p6\">&lt;/xref&gt;</ept> and there is more than one <bpt id=\"p7\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.Export\"&gt;</bpt><ept id=\"p7\">&lt;/xref&gt;</ept> object that matches the conditions of the specified <bpt id=\"p8\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.ImportDefinition\"&gt;</bpt><ept id=\"p8\">&lt;/xref&gt;</ept>.","needQuote":false,"needEscape":true,"source":"<xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality*> is <xref href=\"System.ComponentModel.Composition.Primitives.ImportCardinality\"></xref> and there are zero <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> objects that match the conditions of the specified <xref href=\"System.ComponentModel.Composition.Primitives.ImportDefinition\"></xref>.       -or-       <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality*> is <xref href=\"System.ComponentModel.Composition.Primitives.ImportCardinality\"></xref> or <xref href=\"System.ComponentModel.Composition.Primitives.ImportCardinality\"></xref> and there is more than one <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> object that matches the conditions of the specified <xref href=\"System.ComponentModel.Composition.Primitives.ImportDefinition\"></xref>."},{"pos":[17030,17118],"content":"<ph id=\"ph1\">&lt;code&gt;definition&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>definition</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[17949,18043],"content":"Gets all exports that match the conditions of the specified import definition and composition.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets all exports that match the conditions of the specified import definition and composition.","pos":[0,94]}]},{"pos":[18462,18596],"content":"The object that defines the conditions of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.Export\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects to get.","needQuote":true,"needEscape":true,"source":"The object that defines the conditions of the <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> objects to get."},{"pos":[18716,18764],"content":"The transactional container for the composition.","needQuote":true,"needEscape":true,"nodes":[{"content":"The transactional container for the composition.","pos":[0,48]}]},{"pos":[18900,19100],"content":"A collection of all the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.Export\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects matching the condition specified by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">definition</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">atomicComposition</ph><ept id=\"p3\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A collection of all the <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> objects matching the condition specified by <code>definition</code> and <code>atomicComposition</code>."},{"pos":[19379,20301],"content":"&lt;xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality<bpt id=\"p1\">*</bpt>&gt; is <bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.ImportCardinality\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and there are zero <bpt id=\"p3\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.Export\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> objects that match the conditions of the specified <bpt id=\"p4\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.ImportDefinition\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.       -or-       &lt;xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality<ept id=\"p1\">*</ept>&gt; is <bpt id=\"p5\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.ImportCardinality\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept> or <bpt id=\"p6\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.ImportCardinality\"&gt;</bpt><ept id=\"p6\">&lt;/xref&gt;</ept> and there is more than one <bpt id=\"p7\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.Export\"&gt;</bpt><ept id=\"p7\">&lt;/xref&gt;</ept> object that matches the conditions of the specified <bpt id=\"p8\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.ImportDefinition\"&gt;</bpt><ept id=\"p8\">&lt;/xref&gt;</ept>.","needQuote":false,"needEscape":true,"source":"<xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality*> is <xref href=\"System.ComponentModel.Composition.Primitives.ImportCardinality\"></xref> and there are zero <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> objects that match the conditions of the specified <xref href=\"System.ComponentModel.Composition.Primitives.ImportDefinition\"></xref>.       -or-       <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality*> is <xref href=\"System.ComponentModel.Composition.Primitives.ImportCardinality\"></xref> or <xref href=\"System.ComponentModel.Composition.Primitives.ImportCardinality\"></xref> and there is more than one <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> object that matches the conditions of the specified <xref href=\"System.ComponentModel.Composition.Primitives.ImportDefinition\"></xref>."},{"pos":[20406,20623],"content":"<code>definition</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>atomicComposition</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;definition&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,88],"source":"<code>definition</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;atomicComposition&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[95,201],"source":"       -or-       <code>atomicComposition</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[21233,21287],"content":"Gets all the exports with the specified contract name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets all the exports with the specified contract name.","pos":[0,54]}]},{"pos":[21300,21612],"content":"The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `type`.       The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default contract name is the result of calling the &lt;xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A&gt; method on <ph id=\"ph1\">`type`</ph>.","pos":[0,156],"source":"The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `type`."},{"content":"The contract name is compared by using the &lt;xref:System.StringComparer.Ordinal%2A&gt; property to perform a case-sensitive, non-linguistic comparison.","pos":[163,310],"source":"       The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison."}]},{"pos":[21846,21919],"content":"The type parameter of the &lt;xref:System.Lazy%602&gt; objects to return.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type parameter of the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Lazy%602<ph id=\"ph2\">&amp;gt;</ph> objects to return.","pos":[0,73],"source":"The type parameter of the &lt;xref:System.Lazy%602&gt; objects to return."}]},{"pos":[21990,22074],"content":"The type of the metadata view of the &lt;xref:System.Lazy%602&gt; objects to return.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the metadata view of the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Lazy%602<ph id=\"ph2\">&amp;gt;</ph> objects to return.","pos":[0,84],"source":"The type of the metadata view of the &lt;xref:System.Lazy%602&gt; objects to return."}]},{"pos":[22143,22336],"content":"The contract name of the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Lazy%602<ph id=\"ph2\">&amp;gt;</ph> object to return, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or an empty string (\"\") to use the default contract name.","needQuote":true,"needEscape":true,"source":"The contract name of the &lt;xref:System.Lazy%602&gt; object to return, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string (\"\") to use the default contract name."},{"pos":[22461,22574],"content":"A collection of all the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Lazy%602<ph id=\"ph2\">&amp;gt;</ph> objects for the contract matching <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">contractName</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A collection of all the &lt;xref:System.Lazy%602&gt; objects for the contract matching <code>contractName</code>."},{"pos":[22776,22892],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.CompositionContainer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object has been disposed of.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.Composition.Hosting.CompositionContainer\"></xref> object has been disposed of."},{"pos":[22995,23077],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[23188,23252],"content":"<ph id=\"ph1\">&lt;code&gt;metadataViewType&lt;/code&gt;</ph> is not a valid metadata view type.","needQuote":true,"needEscape":true,"source":"<code>metadataViewType</code> is not a valid metadata view type."},{"pos":[23943,23955],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24781,24793],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24892,24904],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25738,25750],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26618,26630],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26743,26755],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27721,27804],"content":"Gets all the exports that match the constraint defined by the specified definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets all the exports that match the constraint defined by the specified definition.","pos":[0,83]}]},{"pos":[27816,28409],"content":"Overrides of this method should not treat cardinality-related mismatches as errors, and should not throw exceptions in those cases. For example, if <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality%2A> is <xref:System.ComponentModel.Composition.Primitives.ImportCardinality> and there are zero <xref:System.ComponentModel.Composition.Primitives.Export> objects that match the conditions of the specified <xref:System.ComponentModel.Composition.Primitives.ImportDefinition>, an empty <xref:System.Collections.Generic.IEnumerable%601> collection should be returned.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Overrides of this method should not treat cardinality-related mismatches as errors, and should not throw exceptions in those cases. For example, if <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality%2A> is <xref:System.ComponentModel.Composition.Primitives.ImportCardinality> and there are zero <xref:System.ComponentModel.Composition.Primitives.Export> objects that match the conditions of the specified <xref:System.ComponentModel.Composition.Primitives.ImportDefinition>, an empty <xref:System.Collections.Generic.IEnumerable%601> collection should be returned.","pos":[0,593],"nodes":[{"content":"Overrides of this method should not treat cardinality-related mismatches as errors, and should not throw exceptions in those cases.","pos":[0,131]},{"content":"For example, if &lt;xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality%2A&gt; is &lt;xref:System.ComponentModel.Composition.Primitives.ImportCardinality&gt; and there are zero &lt;xref:System.ComponentModel.Composition.Primitives.Export&gt; objects that match the conditions of the specified &lt;xref:System.ComponentModel.Composition.Primitives.ImportDefinition&gt;, an empty &lt;xref:System.Collections.Generic.IEnumerable%601&gt; collection should be returned.","pos":[132,593],"source":" For example, if <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality%2A> is <xref:System.ComponentModel.Composition.Primitives.ImportCardinality> and there are zero <xref:System.ComponentModel.Composition.Primitives.Export> objects that match the conditions of the specified <xref:System.ComponentModel.Composition.Primitives.ImportDefinition>, an empty <xref:System.Collections.Generic.IEnumerable%601> collection should be returned."}]}]},{"pos":[28844,28981],"content":"The object that defines the conditions of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.Export\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects to return.","needQuote":true,"needEscape":true,"source":"The object that defines the conditions of the <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> objects to return."},{"pos":[29101,29149],"content":"The transactional container for the composition.","needQuote":true,"needEscape":true,"nodes":[{"content":"The transactional container for the composition.","pos":[0,48]}]},{"pos":[29285,29363],"content":"A collection that contains all the exports that match the specified condition.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection that contains all the exports that match the specified condition.","pos":[0,78]}]},{"pos":[30176,30286],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged\"></xref> event."},{"pos":[30544,30662],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs\"></xref> that contains the event data."},{"pos":[31482,31593],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging\"></xref> event."},{"pos":[31852,31970],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs\"></xref> that contains the event data."},{"pos":[33167,33238],"content":"Gets all the exports that match the conditions of the specified import.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets all the exports that match the conditions of the specified import.","pos":[0,71]}]},{"pos":[33678,33812],"content":"The object that defines the conditions of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.Export\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects to get.","needQuote":true,"needEscape":true,"source":"The object that defines the conditions of the <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> objects to get."},{"pos":[33932,33980],"content":"The transactional container for the composition.","needQuote":true,"needEscape":true,"nodes":[{"content":"The transactional container for the composition.","pos":[0,48]}]},{"pos":[34122,34508],"content":"When this method returns, contains a collection of <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> objects that match the conditions defined by <xref href=\"System.ComponentModel.Composition.Primitives.ImportDefinition\"></xref>, if found; otherwise, an empty &lt;xref:System.Collections.Generic.IEnumerable%601&gt; object. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains a collection of <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.Export\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects that match the conditions defined by <bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.ImportDefinition\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, if found; otherwise, an empty <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.Generic.IEnumerable%601<ph id=\"ph2\">&amp;gt;</ph> object.","pos":[0,346],"source":"When this method returns, contains a collection of <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> objects that match the conditions defined by <xref href=\"System.ComponentModel.Composition.Primitives.ImportDefinition\"></xref>, if found; otherwise, an empty &lt;xref:System.Collections.Generic.IEnumerable%601&gt; object."},{"content":"This parameter is passed uninitialized.","pos":[347,386]}]},{"pos":[34567,35735],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if &lt;xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality<bpt id=\"p2\">*</bpt>&gt; is <bpt id=\"p3\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.ImportCardinality\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> or <bpt id=\"p4\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.ImportCardinality\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> and there are zero <bpt id=\"p5\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.Export\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept> objects that match the conditions of the specified <bpt id=\"p6\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.ImportDefinition\"&gt;</bpt><ept id=\"p6\">&lt;/xref&gt;</ept>; <bpt id=\"p7\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p7\">&lt;/xref&gt;</ept> if &lt;xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality<ept id=\"p2\">*</ept>&gt; is <bpt id=\"p8\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.ImportCardinality\"&gt;</bpt><ept id=\"p8\">&lt;/xref&gt;</ept> or <bpt id=\"p9\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.ImportCardinality\"&gt;</bpt><ept id=\"p9\">&lt;/xref&gt;</ept> and there is exactly one <bpt id=\"p10\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.Export\"&gt;</bpt><ept id=\"p10\">&lt;/xref&gt;</ept> that matches the conditions of the specified <bpt id=\"p11\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.ImportDefinition\"&gt;</bpt><ept id=\"p11\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p12\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p12\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality*> is <xref href=\"System.ComponentModel.Composition.Primitives.ImportCardinality\"></xref> or <xref href=\"System.ComponentModel.Composition.Primitives.ImportCardinality\"></xref> and there are zero <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> objects that match the conditions of the specified <xref href=\"System.ComponentModel.Composition.Primitives.ImportDefinition\"></xref>; <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality*> is <xref href=\"System.ComponentModel.Composition.Primitives.ImportCardinality\"></xref> or <xref href=\"System.ComponentModel.Composition.Primitives.ImportCardinality\"></xref> and there is exactly one <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> that matches the conditions of the specified <xref href=\"System.ComponentModel.Composition.Primitives.ImportDefinition\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[35936,36024],"content":"<ph id=\"ph1\">&lt;code&gt;definition&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>definition</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider\n  id: ExportProvider\n  children:\n  - System.ComponentModel.Composition.Hosting.ExportProvider.#ctor\n  - System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged\n  - System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging\n  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1\n  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)\n  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2\n  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2(System.String)\n  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1\n  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)\n  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1\n  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)\n  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1\n  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)\n  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)\n  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)\n  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1\n  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)\n  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2\n  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2(System.String)\n  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)\n  - System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)\n  - System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)\n  - System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)\n  langs:\n  - csharp\n  name: ExportProvider\n  nameWithType: ExportProvider\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider\n  type: Class\n  summary: Retrieves exports which match a specified <xref href=\"System.ComponentModel.Composition.Primitives.ImportDefinition\"></xref> object.\n  syntax:\n    content: public abstract class ExportProvider\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  langs:\n  - csharp\n  name: ExportProvider()\n  nameWithType: ExportProvider.ExportProvider()\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.ExportProvider()\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Hosting.ExportProvider\"></xref> class.\n  syntax:\n    content: protected ExportProvider ();\n    parameters: []\n  overload: System.ComponentModel.Composition.Hosting.ExportProvider.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged\n  id: ExportsChanged\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  langs:\n  - csharp\n  name: ExportsChanged\n  nameWithType: ExportProvider.ExportsChanged\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged\n  type: Event\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Occurs when the exports in the <xref href=\"System.ComponentModel.Composition.Hosting.ExportProvider\"></xref> change.\n  syntax:\n    content: public event EventHandler<System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs> ExportsChanged;\n    return:\n      type: System.EventHandler{System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging\n  id: ExportsChanging\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  langs:\n  - csharp\n  name: ExportsChanging\n  nameWithType: ExportProvider.ExportsChanging\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging\n  type: Event\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Occurs when the provided exports are changing.\n  syntax:\n    content: public event EventHandler<System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs> ExportsChanging;\n    return:\n      type: System.EventHandler{System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1\n  id: GetExport``1\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  langs:\n  - csharp\n  name: GetExport()\n  nameWithType: ExportProvider.GetExport()\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport()\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  syntax:\n    content: public Lazy<T> GetExport<T> ();\n    parameters: []\n    return:\n      type: System.Lazy{T}\n      description: To be added.\n  overload: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)\n  id: GetExport``1(System.String)\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  langs:\n  - csharp\n  name: GetExport(String)\n  nameWithType: ExportProvider.GetExport(String)\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport(String)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  syntax:\n    content: public Lazy<T> GetExport<T> (string contractName);\n    parameters:\n    - id: contractName\n      type: System.String\n      description: To be added.\n    return:\n      type: System.Lazy{T}\n      description: To be added.\n  overload: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2\n  id: GetExport``2\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  langs:\n  - csharp\n  name: GetExport()\n  nameWithType: ExportProvider.GetExport()\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport()\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  syntax:\n    content: public Lazy<T,TMetadataView> GetExport<T,TMetadataView> ();\n    parameters: []\n    return:\n      type: System.Lazy{T,TMetadataView}\n      description: To be added.\n  overload: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport<T,TMetadataView>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2(System.String)\n  id: GetExport``2(System.String)\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  langs:\n  - csharp\n  name: GetExport(String)\n  nameWithType: ExportProvider.GetExport(String)\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport(String)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  syntax:\n    content: public Lazy<T,TMetadataView> GetExport<T,TMetadataView> (string contractName);\n    parameters:\n    - id: contractName\n      type: System.String\n      description: To be added.\n    return:\n      type: System.Lazy{T,TMetadataView}\n      description: To be added.\n  overload: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport<T,TMetadataView>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1\n  id: GetExportedValue``1\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  langs:\n  - csharp\n  name: GetExportedValue()\n  nameWithType: ExportProvider.GetExportedValue()\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue()\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  syntax:\n    content: public T GetExportedValue<T> ();\n    parameters: []\n    return:\n      type: T\n      description: To be added.\n  overload: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)\n  id: GetExportedValue``1(System.String)\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  langs:\n  - csharp\n  name: GetExportedValue(String)\n  nameWithType: ExportProvider.GetExportedValue(String)\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue(String)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  syntax:\n    content: public T GetExportedValue<T> (string contractName);\n    parameters:\n    - id: contractName\n      type: System.String\n      description: To be added.\n    return:\n      type: T\n      description: To be added.\n  overload: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1\n  id: GetExportedValueOrDefault``1\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  langs:\n  - csharp\n  name: GetExportedValueOrDefault()\n  nameWithType: ExportProvider.GetExportedValueOrDefault()\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault()\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  syntax:\n    content: public T GetExportedValueOrDefault<T> ();\n    parameters: []\n    return:\n      type: T\n      description: To be added.\n  overload: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)\n  id: GetExportedValueOrDefault``1(System.String)\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  langs:\n  - csharp\n  name: GetExportedValueOrDefault(String)\n  nameWithType: ExportProvider.GetExportedValueOrDefault(String)\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault(String)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  syntax:\n    content: public T GetExportedValueOrDefault<T> (string contractName);\n    parameters:\n    - id: contractName\n      type: System.String\n      description: To be added.\n    return:\n      type: T\n      description: To be added.\n  overload: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1\n  id: GetExportedValues``1\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  langs:\n  - csharp\n  name: GetExportedValues()\n  nameWithType: ExportProvider.GetExportedValues()\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues()\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<T> GetExportedValues<T> ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{T}\n      description: To be added.\n  overload: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)\n  id: GetExportedValues``1(System.String)\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  langs:\n  - csharp\n  name: GetExportedValues(String)\n  nameWithType: ExportProvider.GetExportedValues(String)\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues(String)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<T> GetExportedValues<T> (string contractName);\n    parameters:\n    - id: contractName\n      type: System.String\n      description: To be added.\n    return:\n      type: System.Collections.Generic.IEnumerable{T}\n      description: To be added.\n  overload: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  id: GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  langs:\n  - csharp\n  name: GetExports(ImportDefinition)\n  nameWithType: ExportProvider.GetExports(ImportDefinition)\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(ImportDefinition)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Gets all exports that match the conditions of the specified import definition.\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.Export> GetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition);\n    parameters:\n    - id: definition\n      type: System.ComponentModel.Composition.Primitives.ImportDefinition\n      description: The object that defines the conditions of the <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> objects to get.\n    return:\n      type: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}\n      description: A collection of all the <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> objects matching the condition specified by <code>definition</code>.\n  overload: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports*\n  exceptions:\n  - type: System.ComponentModel.Composition.ImportCardinalityMismatchException\n    commentId: T:System.ComponentModel.Composition.ImportCardinalityMismatchException\n    description: \"<xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality*> is <xref href=\\\"System.ComponentModel.Composition.Primitives.ImportCardinality\\\"></xref> and there are zero <xref href=\\\"System.ComponentModel.Composition.Primitives.Export\\\"></xref> objects that match the conditions of the specified <xref href=\\\"System.ComponentModel.Composition.Primitives.ImportDefinition\\\"></xref>.  \\n  \\n -or-  \\n  \\n <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality*> is <xref href=\\\"System.ComponentModel.Composition.Primitives.ImportCardinality\\\"></xref> or <xref href=\\\"System.ComponentModel.Composition.Primitives.ImportCardinality\\\"></xref> and there is more than one <xref href=\\\"System.ComponentModel.Composition.Primitives.Export\\\"></xref> object that matches the conditions of the specified <xref href=\\\"System.ComponentModel.Composition.Primitives.ImportDefinition\\\"></xref>.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>definition</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)\n  id: GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  langs:\n  - csharp\n  name: GetExports(ImportDefinition,AtomicComposition)\n  nameWithType: ExportProvider.GetExports(ImportDefinition,AtomicComposition)\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(ImportDefinition,AtomicComposition)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Gets all exports that match the conditions of the specified import definition and composition.\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.Export> GetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition, System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition);\n    parameters:\n    - id: definition\n      type: System.ComponentModel.Composition.Primitives.ImportDefinition\n      description: The object that defines the conditions of the <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> objects to get.\n    - id: atomicComposition\n      type: System.ComponentModel.Composition.Hosting.AtomicComposition\n      description: The transactional container for the composition.\n    return:\n      type: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}\n      description: A collection of all the <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> objects matching the condition specified by <code>definition</code> and <code>atomicComposition</code>.\n  overload: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports*\n  exceptions:\n  - type: System.ComponentModel.Composition.ImportCardinalityMismatchException\n    commentId: T:System.ComponentModel.Composition.ImportCardinalityMismatchException\n    description: \"<xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality*> is <xref href=\\\"System.ComponentModel.Composition.Primitives.ImportCardinality\\\"></xref> and there are zero <xref href=\\\"System.ComponentModel.Composition.Primitives.Export\\\"></xref> objects that match the conditions of the specified <xref href=\\\"System.ComponentModel.Composition.Primitives.ImportDefinition\\\"></xref>.  \\n  \\n -or-  \\n  \\n <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality*> is <xref href=\\\"System.ComponentModel.Composition.Primitives.ImportCardinality\\\"></xref> or <xref href=\\\"System.ComponentModel.Composition.Primitives.ImportCardinality\\\"></xref> and there is more than one <xref href=\\\"System.ComponentModel.Composition.Primitives.Export\\\"></xref> object that matches the conditions of the specified <xref href=\\\"System.ComponentModel.Composition.Primitives.ImportDefinition\\\"></xref>.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>definition</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>atomicComposition</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)\n  id: GetExports(System.Type,System.Type,System.String)\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  langs:\n  - csharp\n  name: GetExports(Type,Type,String)\n  nameWithType: ExportProvider.GetExports(Type,Type,String)\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(Type,Type,String)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Gets all the exports with the specified contract name.\n  remarks: \"The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `type`.  \\n  \\n The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.\"\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<Lazy<object,object>> GetExports (Type type, Type metadataViewType, string contractName);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type parameter of the &lt;xref:System.Lazy%602&gt; objects to return.\n    - id: metadataViewType\n      type: System.Type\n      description: The type of the metadata view of the &lt;xref:System.Lazy%602&gt; objects to return.\n    - id: contractName\n      type: System.String\n      description: The contract name of the &lt;xref:System.Lazy%602&gt; object to return, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string (\"\") to use the default contract name.\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Lazy{System.Object,System.Object}}\n      description: A collection of all the &lt;xref:System.Lazy%602&gt; objects for the contract matching <code>contractName</code>.\n  overload: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.ComponentModel.Composition.Hosting.CompositionContainer\"></xref> object has been disposed of.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>metadataViewType</code> is not a valid metadata view type.\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1\n  id: GetExports``1\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  langs:\n  - csharp\n  name: GetExports()\n  nameWithType: ExportProvider.GetExports()\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports()\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<Lazy<T>> GetExports<T> ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Lazy{T}}\n      description: To be added.\n  overload: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)\n  id: GetExports``1(System.String)\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  langs:\n  - csharp\n  name: GetExports(String)\n  nameWithType: ExportProvider.GetExports(String)\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(String)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<Lazy<T>> GetExports<T> (string contractName);\n    parameters:\n    - id: contractName\n      type: System.String\n      description: To be added.\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Lazy{T}}\n      description: To be added.\n  overload: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2\n  id: GetExports``2\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  langs:\n  - csharp\n  name: GetExports()\n  nameWithType: ExportProvider.GetExports()\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports()\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<Lazy<T,TMetadataView>> GetExports<T,TMetadataView> ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Lazy{T,TMetadataView}}\n      description: To be added.\n  overload: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports<T,TMetadataView>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2(System.String)\n  id: GetExports``2(System.String)\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  langs:\n  - csharp\n  name: GetExports(String)\n  nameWithType: ExportProvider.GetExports(String)\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(String)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<Lazy<T,TMetadataView>> GetExports<T,TMetadataView> (string contractName);\n    parameters:\n    - id: contractName\n      type: System.String\n      description: To be added.\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Lazy{T,TMetadataView}}\n      description: To be added.\n  overload: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports<T,TMetadataView>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)\n  id: GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  langs:\n  - csharp\n  name: GetExportsCore(ImportDefinition,AtomicComposition)\n  nameWithType: ExportProvider.GetExportsCore(ImportDefinition,AtomicComposition)\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportsCore(ImportDefinition,AtomicComposition)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Gets all the exports that match the constraint defined by the specified definition.\n  remarks: Overrides of this method should not treat cardinality-related mismatches as errors, and should not throw exceptions in those cases. For example, if <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality%2A> is <xref:System.ComponentModel.Composition.Primitives.ImportCardinality> and there are zero <xref:System.ComponentModel.Composition.Primitives.Export> objects that match the conditions of the specified <xref:System.ComponentModel.Composition.Primitives.ImportDefinition>, an empty <xref:System.Collections.Generic.IEnumerable%601> collection should be returned.\n  syntax:\n    content: protected abstract System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.Export> GetExportsCore (System.ComponentModel.Composition.Primitives.ImportDefinition definition, System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition);\n    parameters:\n    - id: definition\n      type: System.ComponentModel.Composition.Primitives.ImportDefinition\n      description: The object that defines the conditions of the <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> objects to return.\n    - id: atomicComposition\n      type: System.ComponentModel.Composition.Hosting.AtomicComposition\n      description: The transactional container for the composition.\n    return:\n      type: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}\n      description: A collection that contains all the exports that match the specified condition.\n  overload: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportsCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)\n  id: OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  langs:\n  - csharp\n  name: OnExportsChanged(ExportsChangeEventArgs)\n  nameWithType: ExportProvider.OnExportsChanged(ExportsChangeEventArgs)\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(ExportsChangeEventArgs)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Raises the <xref href=\"System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged\"></xref> event.\n  syntax:\n    content: protected virtual void OnExportsChanged (System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs e);\n    parameters:\n    - id: e\n      type: System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs\n      description: An <xref href=\"System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs\"></xref> that contains the event data.\n  overload: System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)\n  id: OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  langs:\n  - csharp\n  name: OnExportsChanging(ExportsChangeEventArgs)\n  nameWithType: ExportProvider.OnExportsChanging(ExportsChangeEventArgs)\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(ExportsChangeEventArgs)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Raises the <xref href=\"System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging\"></xref> event.\n  syntax:\n    content: protected virtual void OnExportsChanging (System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs e);\n    parameters:\n    - id: e\n      type: System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs\n      description: An <xref href=\"System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs\"></xref> that contains the event data.\n  overload: System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)\n  id: TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  langs:\n  - csharp\n  name: TryGetExports(ImportDefinition,AtomicComposition,IEnumerable<Export>)\n  nameWithType: ExportProvider.TryGetExports(ImportDefinition,AtomicComposition,IEnumerable<Export>)\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(ImportDefinition,AtomicComposition,IEnumerable<Export>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Gets all the exports that match the conditions of the specified import.\n  syntax:\n    content: public bool TryGetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition, System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition, out System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.Export> exports);\n    parameters:\n    - id: definition\n      type: System.ComponentModel.Composition.Primitives.ImportDefinition\n      description: The object that defines the conditions of the <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> objects to get.\n    - id: atomicComposition\n      type: System.ComponentModel.Composition.Hosting.AtomicComposition\n      description: The transactional container for the composition.\n    - id: exports\n      type: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}\n      description: When this method returns, contains a collection of <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> objects that match the conditions defined by <xref href=\"System.ComponentModel.Composition.Primitives.ImportDefinition\"></xref>, if found; otherwise, an empty &lt;xref:System.Collections.Generic.IEnumerable%601&gt; object. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality*> is <xref href=\"System.ComponentModel.Composition.Primitives.ImportCardinality\"></xref> or <xref href=\"System.ComponentModel.Composition.Primitives.ImportCardinality\"></xref> and there are zero <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> objects that match the conditions of the specified <xref href=\"System.ComponentModel.Composition.Primitives.ImportDefinition\"></xref>; <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality*> is <xref href=\"System.ComponentModel.Composition.Primitives.ImportCardinality\"></xref> or <xref href=\"System.ComponentModel.Composition.Primitives.ImportCardinality\"></xref> and there is exactly one <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> that matches the conditions of the specified <xref href=\"System.ComponentModel.Composition.Primitives.ImportDefinition\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>definition</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ComponentModel.Composition.ImportCardinalityMismatchException\n  parent: System.ComponentModel.Composition\n  isExternal: false\n  name: ImportCardinalityMismatchException\n  nameWithType: ImportCardinalityMismatchException\n  fullName: System.ComponentModel.Composition.ImportCardinalityMismatchException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ObjectDisposedException\n  isExternal: true\n  name: System.ObjectDisposedException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.#ctor\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  isExternal: false\n  name: ExportProvider()\n  nameWithType: ExportProvider.ExportProvider()\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.ExportProvider()\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  isExternal: false\n  name: ExportsChanged\n  nameWithType: ExportProvider.ExportsChanged\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged\n- uid: System.EventHandler{System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs}\n  parent: System\n  isExternal: true\n  name: EventHandler<ExportsChangeEventArgs>\n  nameWithType: EventHandler<ExportsChangeEventArgs>\n  fullName: System.EventHandler<System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: EventHandler<System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs\n    name: ExportsChangeEventArgs\n    nameWithType: ExportsChangeEventArgs\n    fullName: ExportsChangeEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  isExternal: false\n  name: ExportsChanging\n  nameWithType: ExportProvider.ExportsChanging\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  isExternal: false\n  name: GetExport()\n  nameWithType: ExportProvider.GetExport()\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport()\n- uid: System.Lazy{T}\n  parent: System\n  isExternal: true\n  name: Lazy<T>\n  nameWithType: Lazy<T>\n  fullName: System.Lazy<T>\n  spec.csharp:\n  - uid: System.Lazy`1\n    name: Lazy\n    nameWithType: Lazy\n    fullName: Lazy<T>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  isExternal: false\n  name: GetExport(String)\n  nameWithType: ExportProvider.GetExport(String)\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  isExternal: false\n  name: GetExport()\n  nameWithType: ExportProvider.GetExport()\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport()\n- uid: System.Lazy{T,TMetadataView}\n  parent: System\n  isExternal: true\n  name: Lazy<T,TMetadataView>\n  nameWithType: Lazy<T,TMetadataView>\n  fullName: System.Lazy<T,TMetadataView>\n  spec.csharp:\n  - uid: System.Lazy`2\n    name: Lazy\n    nameWithType: Lazy\n    fullName: Lazy<T,TMetadataView>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TMetadataView\n    name: TMetadataView\n    nameWithType: TMetadataView\n    fullName: TMetadataView\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2(System.String)\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  isExternal: false\n  name: GetExport(String)\n  nameWithType: ExportProvider.GetExport(String)\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport(String)\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  isExternal: false\n  name: GetExportedValue()\n  nameWithType: ExportProvider.GetExportedValue()\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue()\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  isExternal: false\n  name: GetExportedValue(String)\n  nameWithType: ExportProvider.GetExportedValue(String)\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue(String)\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  isExternal: false\n  name: GetExportedValueOrDefault()\n  nameWithType: ExportProvider.GetExportedValueOrDefault()\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault()\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  isExternal: false\n  name: GetExportedValueOrDefault(String)\n  nameWithType: ExportProvider.GetExportedValueOrDefault(String)\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault(String)\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  isExternal: false\n  name: GetExportedValues()\n  nameWithType: ExportProvider.GetExportedValues()\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues()\n- uid: System.Collections.Generic.IEnumerable{T}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<T>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  isExternal: false\n  name: GetExportedValues(String)\n  nameWithType: ExportProvider.GetExportedValues(String)\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues(String)\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  isExternal: false\n  name: GetExports(ImportDefinition)\n  nameWithType: ExportProvider.GetExports(ImportDefinition)\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(ImportDefinition)\n- uid: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<Export>\n  nameWithType: IEnumerable<Export>\n  fullName: System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.Export>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.ComponentModel.Composition.Primitives.Export>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ComponentModel.Composition.Primitives.Export\n    name: Export\n    nameWithType: Export\n    fullName: Export\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Primitives.ImportDefinition\n  parent: System.ComponentModel.Composition.Primitives\n  isExternal: false\n  name: ImportDefinition\n  nameWithType: ImportDefinition\n  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  isExternal: false\n  name: GetExports(ImportDefinition,AtomicComposition)\n  nameWithType: ExportProvider.GetExports(ImportDefinition,AtomicComposition)\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(ImportDefinition,AtomicComposition)\n- uid: System.ComponentModel.Composition.Hosting.AtomicComposition\n  parent: System.ComponentModel.Composition.Hosting\n  isExternal: false\n  name: AtomicComposition\n  nameWithType: AtomicComposition\n  fullName: System.ComponentModel.Composition.Hosting.AtomicComposition\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  isExternal: false\n  name: GetExports(Type,Type,String)\n  nameWithType: ExportProvider.GetExports(Type,Type,String)\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(Type,Type,String)\n- uid: System.Collections.Generic.IEnumerable{System.Lazy{System.Object,System.Object}}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<Lazy<Object,Object>>\n  nameWithType: IEnumerable<Lazy<Object,Object>>\n  fullName: System.Collections.Generic.IEnumerable<System.Lazy<System.Object,System.Object>>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Lazy<System.Object,System.Object>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Lazy`2\n    name: Lazy\n    nameWithType: Lazy\n    fullName: Lazy<System.Object,System.Object>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  isExternal: false\n  name: GetExports()\n  nameWithType: ExportProvider.GetExports()\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports()\n- uid: System.Collections.Generic.IEnumerable{System.Lazy{T}}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<Lazy<T>>\n  nameWithType: IEnumerable<Lazy<T>>\n  fullName: System.Collections.Generic.IEnumerable<System.Lazy<T>>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Lazy<T>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Lazy`1\n    name: Lazy\n    nameWithType: Lazy\n    fullName: Lazy<T>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  isExternal: false\n  name: GetExports(String)\n  nameWithType: ExportProvider.GetExports(String)\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(String)\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  isExternal: false\n  name: GetExports()\n  nameWithType: ExportProvider.GetExports()\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports()\n- uid: System.Collections.Generic.IEnumerable{System.Lazy{T,TMetadataView}}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<Lazy<T,TMetadataView>>\n  nameWithType: IEnumerable<Lazy<T,TMetadataView>>\n  fullName: System.Collections.Generic.IEnumerable<System.Lazy<T,TMetadataView>>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Lazy<T,TMetadataView>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Lazy`2\n    name: Lazy\n    nameWithType: Lazy\n    fullName: Lazy<T,TMetadataView>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TMetadataView\n    name: TMetadataView\n    nameWithType: TMetadataView\n    fullName: TMetadataView\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2(System.String)\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  isExternal: false\n  name: GetExports(String)\n  nameWithType: ExportProvider.GetExports(String)\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(String)\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  isExternal: false\n  name: GetExportsCore(ImportDefinition,AtomicComposition)\n  nameWithType: ExportProvider.GetExportsCore(ImportDefinition,AtomicComposition)\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportsCore(ImportDefinition,AtomicComposition)\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  isExternal: false\n  name: OnExportsChanged(ExportsChangeEventArgs)\n  nameWithType: ExportProvider.OnExportsChanged(ExportsChangeEventArgs)\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(ExportsChangeEventArgs)\n- uid: System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs\n  parent: System.ComponentModel.Composition.Hosting\n  isExternal: false\n  name: ExportsChangeEventArgs\n  nameWithType: ExportsChangeEventArgs\n  fullName: System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  isExternal: false\n  name: OnExportsChanging(ExportsChangeEventArgs)\n  nameWithType: ExportProvider.OnExportsChanging(ExportsChangeEventArgs)\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(ExportsChangeEventArgs)\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  isExternal: false\n  name: TryGetExports(ImportDefinition,AtomicComposition,IEnumerable<Export>)\n  nameWithType: ExportProvider.TryGetExports(ImportDefinition,AtomicComposition,IEnumerable<Export>)\n  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(ImportDefinition,AtomicComposition,IEnumerable<Export>)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.#ctor*\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  isExternal: false\n  name: ExportProvider\n  nameWithType: ExportProvider.ExportProvider\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport<T>*\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  isExternal: false\n  name: GetExport<T>\n  nameWithType: ExportProvider.GetExport<T>\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport<T,TMetadataView>*\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  isExternal: false\n  name: GetExport<T,TMetadataView>\n  nameWithType: ExportProvider.GetExport<T,TMetadataView>\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue<T>*\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  isExternal: false\n  name: GetExportedValue<T>\n  nameWithType: ExportProvider.GetExportedValue<T>\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault<T>*\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  isExternal: false\n  name: GetExportedValueOrDefault<T>\n  nameWithType: ExportProvider.GetExportedValueOrDefault<T>\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues<T>*\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  isExternal: false\n  name: GetExportedValues<T>\n  nameWithType: ExportProvider.GetExportedValues<T>\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports*\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  isExternal: false\n  name: GetExports\n  nameWithType: ExportProvider.GetExports\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports<T>*\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  isExternal: false\n  name: GetExports<T>\n  nameWithType: ExportProvider.GetExports<T>\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports<T,TMetadataView>*\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  isExternal: false\n  name: GetExports<T,TMetadataView>\n  nameWithType: ExportProvider.GetExports<T,TMetadataView>\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportsCore*\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  isExternal: false\n  name: GetExportsCore\n  nameWithType: ExportProvider.GetExportsCore\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged*\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  isExternal: false\n  name: OnExportsChanged\n  nameWithType: ExportProvider.OnExportsChanged\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging*\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  isExternal: false\n  name: OnExportsChanging\n  nameWithType: ExportProvider.OnExportsChanging\n- uid: System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports*\n  parent: System.ComponentModel.Composition.Hosting.ExportProvider\n  isExternal: false\n  name: TryGetExports\n  nameWithType: ExportProvider.TryGetExports\n"}