{"nodes":[{"pos":[723,839],"content":"Represents a User Defined Type (UDT) that is to be included in the service contract. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a User Defined Type (UDT) that is to be included in the service contract. This class cannot be inherited.","pos":[0,116],"nodes":[{"content":"Represents a User Defined Type (UDT) that is to be included in the service contract.","pos":[0,84]},{"content":"This class cannot be inherited.","pos":[85,116]}]}]},{"pos":[852,2506],"content":"The COM+ integration runtime creates services by inspecting the type library. When a COM+ component contains methods that pass a `VARIANT`, the system cannot determine the actual types to be passed prior to runtime. Therefore, when you attempt to pass a User Defined Type (UDT) within a `VARIANT`, it fails because it is not a known type for serialization.       To circumvent this problem, you can add the UDTs to the configuration file so that they can be included as known types on the appropriate service contract. In order to do so, you have to uniquely identify the UDT and the contract(s), that is, the original COM interface(s) that uses it.       The following example demonstrates adding two specific UDTs to the <`userDefinedTypes`> section of the configuration file for this purpose.       [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]       The attributes of the <`userDefinedType`> element are defined as follows:      -   `typeName`: an optional attribute that provides the readable type name. This is not used by the runtime but helps a reader to distinguish the types.      -   `typeLibID`: a GUID string that specifies the registered type library that defines the type.      -   `typeLibVersion`: a string that specifies the type library version that defines the type.      -   `typeDefID`: a GUID string that specifies the specific UDT type within the registered type library.       When the service is initialized, the COM+ integration runtime looks up the specified types and adds them to the known types collection for the specified contracts.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The COM+ integration runtime creates services by inspecting the type library.","pos":[0,77]},{"content":"When a COM+ component contains methods that pass a <ph id=\"ph1\">`VARIANT`</ph>, the system cannot determine the actual types to be passed prior to runtime.","pos":[78,215],"source":" When a COM+ component contains methods that pass a `VARIANT`, the system cannot determine the actual types to be passed prior to runtime."},{"content":"Therefore, when you attempt to pass a User Defined Type (UDT) within a <ph id=\"ph1\">`VARIANT`</ph>, it fails because it is not a known type for serialization.","pos":[216,356],"source":" Therefore, when you attempt to pass a User Defined Type (UDT) within a `VARIANT`, it fails because it is not a known type for serialization."},{"content":"To circumvent this problem, you can add the UDTs to the configuration file so that they can be included as known types on the appropriate service contract.","pos":[363,518]},{"content":"In order to do so, you have to uniquely identify the UDT and the contract(s), that is, the original COM interface(s) that uses it.","pos":[519,649]},{"content":"The following example demonstrates adding two specific UDTs to the &lt;<ph id=\"ph1\">`userDefinedTypes`</ph>&gt; section of the configuration file for this purpose.","pos":[656,795],"source":"       The following example demonstrates adding two specific UDTs to the <`userDefinedTypes`> section of the configuration file for this purpose."},{"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>XpsCreate#XpsCreateAddPkgContent<ept id=\"p2\">](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)</ept><ept id=\"p1\">]</ept>       The attributes of the &lt;<ph id=\"ph1\">`userDefinedType`</ph>&gt; element are defined as follows:      -   <ph id=\"ph2\">`typeName`</ph>: an optional attribute that provides the readable type name.","pos":[802,1079],"source":"[!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]       The attributes of the <`userDefinedType`> element are defined as follows:      -   `typeName`: an optional attribute that provides the readable type name."},{"content":"This is not used by the runtime but helps a reader to distinguish the types.","pos":[1080,1156]},{"content":"-   <ph id=\"ph1\">`typeLibID`</ph>: a GUID string that specifies the registered type library that defines the type.","pos":[1162,1258],"source":"      -   `typeLibID`: a GUID string that specifies the registered type library that defines the type."},{"content":"-   <ph id=\"ph1\">`typeLibVersion`</ph>: a string that specifies the type library version that defines the type.","pos":[1264,1357],"source":"      -   `typeLibVersion`: a string that specifies the type library version that defines the type."},{"content":"-   <ph id=\"ph1\">`typeDefID`</ph>: a GUID string that specifies the specific UDT type within the registered type library.","pos":[1363,1466],"source":"      -   `typeDefID`: a GUID string that specifies the specific UDT type within the registered type library."},{"content":"When the service is initialized, the COM+ integration runtime looks up the specified types and adds them to the known types collection for the specified contracts.","pos":[1473,1636]}]},{"pos":[6143,6252],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Configuration.ComUdtElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.ComUdtElement\"></xref> class."},{"pos":[6890,7030],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Configuration.ComUdtElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified GUID string.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.ComUdtElement\"></xref> class with the specified GUID string."},{"pos":[7176,7263],"content":"A GUID string that identifies the specific UDT type within the registered type library.","needQuote":true,"needEscape":true,"nodes":[{"content":"A GUID string that identifies the specific UDT type within the registered type library.","pos":[0,87]}]},{"pos":[7746,7782],"content":"Gets or sets the readable type name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the readable type name.","pos":[0,36]}]},{"pos":[7896,7919],"content":"The readable type name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The readable type name.","pos":[0,23]}]},{"pos":[8631,8643],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9156,9256],"content":"Gets or sets a GUID string that identifies the specific UDT type within the registered type library.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a GUID string that identifies the specific UDT type within the registered type library.","pos":[0,100]}]},{"pos":[9375,9432],"content":"The specific UDT type within the registered type library.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specific UDT type within the registered type library.","pos":[0,57]}]},{"pos":[9944,10037],"content":"Gets or sets a GUID string that identifies the registered type library that defines the type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a GUID string that identifies the registered type library that defines the type.","pos":[0,93]}]},{"pos":[10156,10206],"content":"The registered type library that defines the type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The registered type library that defines the type.","pos":[0,50]}]},{"pos":[10743,10828],"content":"Gets or sets a string that identifies the type library version that defines the type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a string that identifies the type library version that defines the type.","pos":[0,85]}]},{"pos":[10952,10999],"content":"The type library version that defines the type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type library version that defines the type.","pos":[0,47]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Configuration.ComUdtElement\n  id: ComUdtElement\n  children:\n  - System.ServiceModel.Configuration.ComUdtElement.#ctor\n  - System.ServiceModel.Configuration.ComUdtElement.#ctor(System.String)\n  - System.ServiceModel.Configuration.ComUdtElement.Name\n  - System.ServiceModel.Configuration.ComUdtElement.Properties\n  - System.ServiceModel.Configuration.ComUdtElement.TypeDefID\n  - System.ServiceModel.Configuration.ComUdtElement.TypeLibID\n  - System.ServiceModel.Configuration.ComUdtElement.TypeLibVersion\n  langs:\n  - csharp\n  name: ComUdtElement\n  nameWithType: ComUdtElement\n  fullName: System.ServiceModel.Configuration.ComUdtElement\n  type: Class\n  summary: Represents a User Defined Type (UDT) that is to be included in the service contract. This class cannot be inherited.\n  remarks: \"The COM+ integration runtime creates services by inspecting the type library. When a COM+ component contains methods that pass a `VARIANT`, the system cannot determine the actual types to be passed prior to runtime. Therefore, when you attempt to pass a User Defined Type (UDT) within a `VARIANT`, it fails because it is not a known type for serialization.  \\n  \\n To circumvent this problem, you can add the UDTs to the configuration file so that they can be included as known types on the appropriate service contract. In order to do so, you have to uniquely identify the UDT and the contract(s), that is, the original COM interface(s) that uses it.  \\n  \\n The following example demonstrates adding two specific UDTs to the <`userDefinedTypes`> section of the configuration file for this purpose.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \\n  \\n The attributes of the <`userDefinedType`> element are defined as follows:  \\n  \\n-   `typeName`: an optional attribute that provides the readable type name. This is not used by the runtime but helps a reader to distinguish the types.  \\n  \\n-   `typeLibID`: a GUID string that specifies the registered type library that defines the type.  \\n  \\n-   `typeLibVersion`: a string that specifies the type library version that defines the type.  \\n  \\n-   `typeDefID`: a GUID string that specifies the specific UDT type within the registered type library.  \\n  \\n When the service is initialized, the COM+ integration runtime looks up the specified types and adds them to the known types collection for the specified contracts.\"\n  example:\n  - \"The following example demonstrates adding two specific UDTs to the <`userDefinedTypes`> section of the configuration file for this purpose.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: 'public sealed class ComUdtElement : System.Configuration.ConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ComUdtElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Configuration.ComUdtElement\n  langs:\n  - csharp\n  name: ComUdtElement()\n  nameWithType: ComUdtElement.ComUdtElement()\n  fullName: System.ServiceModel.Configuration.ComUdtElement.ComUdtElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.ComUdtElement\"></xref> class.\n  syntax:\n    content: public ComUdtElement ();\n    parameters: []\n  overload: System.ServiceModel.Configuration.ComUdtElement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ComUdtElement.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.ServiceModel.Configuration.ComUdtElement\n  langs:\n  - csharp\n  name: ComUdtElement(String)\n  nameWithType: ComUdtElement.ComUdtElement(String)\n  fullName: System.ServiceModel.Configuration.ComUdtElement.ComUdtElement(String)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.ComUdtElement\"></xref> class with the specified GUID string.\n  syntax:\n    content: public ComUdtElement (string typeDefID);\n    parameters:\n    - id: typeDefID\n      type: System.String\n      description: A GUID string that identifies the specific UDT type within the registered type library.\n  overload: System.ServiceModel.Configuration.ComUdtElement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ComUdtElement.Name\n  id: Name\n  parent: System.ServiceModel.Configuration.ComUdtElement\n  langs:\n  - csharp\n  name: Name\n  nameWithType: ComUdtElement.Name\n  fullName: System.ServiceModel.Configuration.ComUdtElement.Name\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the readable type name.\n  syntax:\n    content: public string Name { get; set; }\n    return:\n      type: System.String\n      description: The readable type name.\n  overload: System.ServiceModel.Configuration.ComUdtElement.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ComUdtElement.Properties\n  id: Properties\n  parent: System.ServiceModel.Configuration.ComUdtElement\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: ComUdtElement.Properties\n  fullName: System.ServiceModel.Configuration.ComUdtElement.Properties\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: To be added.\n  overload: System.ServiceModel.Configuration.ComUdtElement.Properties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ComUdtElement.TypeDefID\n  id: TypeDefID\n  parent: System.ServiceModel.Configuration.ComUdtElement\n  langs:\n  - csharp\n  name: TypeDefID\n  nameWithType: ComUdtElement.TypeDefID\n  fullName: System.ServiceModel.Configuration.ComUdtElement.TypeDefID\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a GUID string that identifies the specific UDT type within the registered type library.\n  syntax:\n    content: public string TypeDefID { get; set; }\n    return:\n      type: System.String\n      description: The specific UDT type within the registered type library.\n  overload: System.ServiceModel.Configuration.ComUdtElement.TypeDefID*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ComUdtElement.TypeLibID\n  id: TypeLibID\n  parent: System.ServiceModel.Configuration.ComUdtElement\n  langs:\n  - csharp\n  name: TypeLibID\n  nameWithType: ComUdtElement.TypeLibID\n  fullName: System.ServiceModel.Configuration.ComUdtElement.TypeLibID\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a GUID string that identifies the registered type library that defines the type.\n  syntax:\n    content: public string TypeLibID { get; set; }\n    return:\n      type: System.String\n      description: The registered type library that defines the type.\n  overload: System.ServiceModel.Configuration.ComUdtElement.TypeLibID*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ComUdtElement.TypeLibVersion\n  id: TypeLibVersion\n  parent: System.ServiceModel.Configuration.ComUdtElement\n  langs:\n  - csharp\n  name: TypeLibVersion\n  nameWithType: ComUdtElement.TypeLibVersion\n  fullName: System.ServiceModel.Configuration.ComUdtElement.TypeLibVersion\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a string that identifies the type library version that defines the type.\n  syntax:\n    content: public string TypeLibVersion { get; set; }\n    return:\n      type: System.String\n      description: The type library version that defines the type.\n  overload: System.ServiceModel.Configuration.ComUdtElement.TypeLibVersion*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: System.Configuration.ConfigurationElement\n- uid: System.ServiceModel.Configuration.ComUdtElement.#ctor\n  parent: System.ServiceModel.Configuration.ComUdtElement\n  isExternal: false\n  name: ComUdtElement()\n  nameWithType: ComUdtElement.ComUdtElement()\n  fullName: System.ServiceModel.Configuration.ComUdtElement.ComUdtElement()\n- uid: System.ServiceModel.Configuration.ComUdtElement.#ctor(System.String)\n  parent: System.ServiceModel.Configuration.ComUdtElement\n  isExternal: false\n  name: ComUdtElement(String)\n  nameWithType: ComUdtElement.ComUdtElement(String)\n  fullName: System.ServiceModel.Configuration.ComUdtElement.ComUdtElement(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Configuration.ComUdtElement.Name\n  parent: System.ServiceModel.Configuration.ComUdtElement\n  isExternal: false\n  name: Name\n  nameWithType: ComUdtElement.Name\n  fullName: System.ServiceModel.Configuration.ComUdtElement.Name\n- uid: System.ServiceModel.Configuration.ComUdtElement.Properties\n  parent: System.ServiceModel.Configuration.ComUdtElement\n  isExternal: false\n  name: Properties\n  nameWithType: ComUdtElement.Properties\n  fullName: System.ServiceModel.Configuration.ComUdtElement.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.ServiceModel.Configuration.ComUdtElement.TypeDefID\n  parent: System.ServiceModel.Configuration.ComUdtElement\n  isExternal: false\n  name: TypeDefID\n  nameWithType: ComUdtElement.TypeDefID\n  fullName: System.ServiceModel.Configuration.ComUdtElement.TypeDefID\n- uid: System.ServiceModel.Configuration.ComUdtElement.TypeLibID\n  parent: System.ServiceModel.Configuration.ComUdtElement\n  isExternal: false\n  name: TypeLibID\n  nameWithType: ComUdtElement.TypeLibID\n  fullName: System.ServiceModel.Configuration.ComUdtElement.TypeLibID\n- uid: System.ServiceModel.Configuration.ComUdtElement.TypeLibVersion\n  parent: System.ServiceModel.Configuration.ComUdtElement\n  isExternal: false\n  name: TypeLibVersion\n  nameWithType: ComUdtElement.TypeLibVersion\n  fullName: System.ServiceModel.Configuration.ComUdtElement.TypeLibVersion\n- uid: System.ServiceModel.Configuration.ComUdtElement.#ctor*\n  parent: System.ServiceModel.Configuration.ComUdtElement\n  isExternal: false\n  name: ComUdtElement\n  nameWithType: ComUdtElement.ComUdtElement\n- uid: System.ServiceModel.Configuration.ComUdtElement.Name*\n  parent: System.ServiceModel.Configuration.ComUdtElement\n  isExternal: false\n  name: Name\n  nameWithType: ComUdtElement.Name\n- uid: System.ServiceModel.Configuration.ComUdtElement.Properties*\n  parent: System.ServiceModel.Configuration.ComUdtElement\n  isExternal: false\n  name: Properties\n  nameWithType: ComUdtElement.Properties\n- uid: System.ServiceModel.Configuration.ComUdtElement.TypeDefID*\n  parent: System.ServiceModel.Configuration.ComUdtElement\n  isExternal: false\n  name: TypeDefID\n  nameWithType: ComUdtElement.TypeDefID\n- uid: System.ServiceModel.Configuration.ComUdtElement.TypeLibID*\n  parent: System.ServiceModel.Configuration.ComUdtElement\n  isExternal: false\n  name: TypeLibID\n  nameWithType: ComUdtElement.TypeLibID\n- uid: System.ServiceModel.Configuration.ComUdtElement.TypeLibVersion*\n  parent: System.ServiceModel.Configuration.ComUdtElement\n  isExternal: false\n  name: TypeLibVersion\n  nameWithType: ComUdtElement.TypeLibVersion\n"}