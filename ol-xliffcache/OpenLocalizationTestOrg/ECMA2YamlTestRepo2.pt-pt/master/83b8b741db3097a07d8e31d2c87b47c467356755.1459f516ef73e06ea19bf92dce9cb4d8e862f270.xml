{"nodes":[{"pos":[360,442],"content":"Provides a means to parse elements that permit mixtures of child elements or text.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a means to parse elements that permit mixtures of child elements or text.","pos":[0,82]}]},{"pos":[455,1646],"content":"For purposes of establishing or defining a content property or content model in WPF, IAddChild is obsolete. Apply the <xref:System.Windows.Markup.ContentPropertyAttribute> to a custom class instead.       For purposes of XAML parser/processor behavior, IAddChild is obsolete. Collection behavior is now integrally part of the XAML type system and XAML processor implementations should use the dedicated APIs in the System.Xaml assembly. General user code should use the `Add` methods on the collection type used for the relevant type's child collection property.       The main remaining scenario for IAddChild is to support a <xref:System.Windows.FrameworkElementFactory> that can handle child object creation, which is an advanced scenario. See <xref:System.Windows.FrameworkElementFactory>.       Callers in .NET Framework 4.5 Beta targeted applications that attempt to use the IAddChild API for one of its original [!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)] era purposes (WPF content model, XAML processing) should expect that many current IAddChild-implementing classes will return <xref:System.NotImplementedException> or similar results for the IAddChild API.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"For purposes of establishing or defining a content property or content model in WPF, IAddChild is obsolete.","pos":[0,107]},{"content":"Apply the &lt;xref:System.Windows.Markup.ContentPropertyAttribute&gt; to a custom class instead.","pos":[108,198],"source":" Apply the <xref:System.Windows.Markup.ContentPropertyAttribute> to a custom class instead."},{"content":"For purposes of XAML parser/processor behavior, IAddChild is obsolete.","pos":[205,275]},{"content":"Collection behavior is now integrally part of the XAML type system and XAML processor implementations should use the dedicated APIs in the System.Xaml assembly.","pos":[276,436]},{"content":"General user code should use the <ph id=\"ph1\">`Add`</ph> methods on the collection type used for the relevant type's child collection property.","pos":[437,562],"source":" General user code should use the `Add` methods on the collection type used for the relevant type's child collection property."},{"content":"The main remaining scenario for IAddChild is to support a &lt;xref:System.Windows.FrameworkElementFactory&gt; that can handle child object creation, which is an advanced scenario.","pos":[569,742],"source":"       The main remaining scenario for IAddChild is to support a <xref:System.Windows.FrameworkElementFactory> that can handle child object creation, which is an advanced scenario."},{"content":"See &lt;xref:System.Windows.FrameworkElementFactory&gt;.","pos":[743,793],"source":" See <xref:System.Windows.FrameworkElementFactory>."},{"content":"Callers in .NET Framework 4.5 Beta targeted applications that attempt to use the IAddChild API for one of its original <ph id=\"ph1\">[!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)]</ph> era purposes (WPF content model, XAML processing) should expect that many current IAddChild-implementing classes will return &lt;xref:System.NotImplementedException&gt; or similar results for the IAddChild API.","pos":[800,1185],"source":"       Callers in .NET Framework 4.5 Beta targeted applications that attempt to use the IAddChild API for one of its original [!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)] era purposes (WPF content model, XAML processing) should expect that many current IAddChild-implementing classes will return <xref:System.NotImplementedException> or similar results for the IAddChild API."}]},{"pos":[2118,2138],"content":"Adds a child object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a child object.","pos":[0,20]}]},{"pos":[2150,2377],"content":"For purposes of establishing or defining a content property or content model in WPF, <xref:System.Windows.Markup.IAddChild> is obsolete. Apply the <xref:System.Windows.Markup.ContentPropertyAttribute> to a custom class instead.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"For purposes of establishing or defining a content property or content model in WPF, <xref:System.Windows.Markup.IAddChild> is obsolete. Apply the <xref:System.Windows.Markup.ContentPropertyAttribute> to a custom class instead.","pos":[0,227],"nodes":[{"content":"For purposes of establishing or defining a content property or content model in WPF, &lt;xref:System.Windows.Markup.IAddChild&gt; is obsolete.","pos":[0,136],"source":"For purposes of establishing or defining a content property or content model in WPF, <xref:System.Windows.Markup.IAddChild> is obsolete."},{"content":"Apply the &lt;xref:System.Windows.Markup.ContentPropertyAttribute&gt; to a custom class instead.","pos":[137,227],"source":" Apply the <xref:System.Windows.Markup.ContentPropertyAttribute> to a custom class instead."}]}]},{"pos":[2515,2539],"content":"The child object to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The child object to add.","pos":[0,24]}]},{"pos":[3009,3055],"content":"Adds the text content of a node to the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the text content of a node to the object.","pos":[0,46]}]},{"pos":[3067,3121],"content":"See Remarks in <xref:System.Windows.Markup.IAddChild>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"See Remarks in &lt;xref:System.Windows.Markup.IAddChild&gt;.","pos":[0,54],"source":"See Remarks in <xref:System.Windows.Markup.IAddChild>."}]},{"pos":[3256,3286],"content":"The text to add to the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The text to add to the object.","pos":[0,30]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Markup.IAddChild\n  id: IAddChild\n  children:\n  - System.Windows.Markup.IAddChild.AddChild(System.Object)\n  - System.Windows.Markup.IAddChild.AddText(System.String)\n  langs:\n  - csharp\n  name: IAddChild\n  nameWithType: IAddChild\n  fullName: System.Windows.Markup.IAddChild\n  type: Interface\n  summary: Provides a means to parse elements that permit mixtures of child elements or text.\n  remarks: \"For purposes of establishing or defining a content property or content model in WPF, IAddChild is obsolete. Apply the <xref:System.Windows.Markup.ContentPropertyAttribute> to a custom class instead.  \\n  \\n For purposes of XAML parser/processor behavior, IAddChild is obsolete. Collection behavior is now integrally part of the XAML type system and XAML processor implementations should use the dedicated APIs in the System.Xaml assembly. General user code should use the `Add` methods on the collection type used for the relevant type's child collection property.  \\n  \\n The main remaining scenario for IAddChild is to support a <xref:System.Windows.FrameworkElementFactory> that can handle child object creation, which is an advanced scenario. See <xref:System.Windows.FrameworkElementFactory>.  \\n  \\n Callers in .NET Framework 4.5 Beta targeted applications that attempt to use the IAddChild API for one of its original [!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)] era purposes (WPF content model, XAML processing) should expect that many current IAddChild-implementing classes will return <xref:System.NotImplementedException> or similar results for the IAddChild API.\"\n  syntax:\n    content: public interface IAddChild\n  implements: []\n  platform:\n  - net462\n- uid: System.Windows.Markup.IAddChild.AddChild(System.Object)\n  id: AddChild(System.Object)\n  parent: System.Windows.Markup.IAddChild\n  langs:\n  - csharp\n  name: AddChild(Object)\n  nameWithType: IAddChild.AddChild(Object)\n  fullName: System.Windows.Markup.IAddChild.AddChild(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Markup\n  summary: Adds a child object.\n  remarks: For purposes of establishing or defining a content property or content model in WPF, <xref:System.Windows.Markup.IAddChild> is obsolete. Apply the <xref:System.Windows.Markup.ContentPropertyAttribute> to a custom class instead.\n  syntax:\n    content: public void AddChild (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The child object to add.\n  overload: System.Windows.Markup.IAddChild.AddChild*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Markup.IAddChild.AddText(System.String)\n  id: AddText(System.String)\n  parent: System.Windows.Markup.IAddChild\n  langs:\n  - csharp\n  name: AddText(String)\n  nameWithType: IAddChild.AddText(String)\n  fullName: System.Windows.Markup.IAddChild.AddText(String)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Markup\n  summary: Adds the text content of a node to the object.\n  remarks: See Remarks in <xref:System.Windows.Markup.IAddChild>.\n  syntax:\n    content: public void AddText (string text);\n    parameters:\n    - id: text\n      type: System.String\n      description: The text to add to the object.\n  overload: System.Windows.Markup.IAddChild.AddText*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Markup.IAddChild.AddChild(System.Object)\n  parent: System.Windows.Markup.IAddChild\n  isExternal: false\n  name: AddChild(Object)\n  nameWithType: IAddChild.AddChild(Object)\n  fullName: System.Windows.Markup.IAddChild.AddChild(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Markup.IAddChild.AddText(System.String)\n  parent: System.Windows.Markup.IAddChild\n  isExternal: false\n  name: AddText(String)\n  nameWithType: IAddChild.AddText(String)\n  fullName: System.Windows.Markup.IAddChild.AddText(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Markup.IAddChild.AddChild*\n  parent: System.Windows.Markup.IAddChild\n  isExternal: false\n  name: AddChild\n  nameWithType: IAddChild.AddChild\n- uid: System.Windows.Markup.IAddChild.AddText*\n  parent: System.Windows.Markup.IAddChild\n  isExternal: false\n  name: AddText\n  nameWithType: IAddChild.AddText\n"}