{"nodes":[{"pos":[2138,2150],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3539,3551],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3645,3657],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3716,3728],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4873,4885],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4979,4991],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5050,5062],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6313,6325],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6460,6472],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6531,6543],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7849,7861],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7996,8008],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8067,8079],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9041,9053],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9113,9125],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9184,9196],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10210,10222],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10282,10294],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10353,10365],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11486,11498],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11600,11612],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11671,11683],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12859,12871],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12973,12985],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13044,13056],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1\n  id: IMessageFilterTable`1\n  children:\n  - System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)\n  - System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)\n  - System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  - System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  - System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)\n  - System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)\n  - System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})\n  - System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})\n  langs:\n  - csharp\n  name: IMessageFilterTable<TFilterData>\n  nameWithType: IMessageFilterTable<TFilterData>\n  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>\n  type: Interface\n  syntax:\n    content: 'public interface IMessageFilterTable<TFilterData> : System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>>, System.Collections.Generic.IDictionary<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>>'\n    typeParameters:\n    - id: TFilterData\n      description: To be added.\n  implements:\n  - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>>\n  - System.Collections.Generic.IDictionary<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>\n  - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>>\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)\n  id: GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)\n  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingFilter(Message,MessageFilter)\n  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingFilter(Message,MessageFilter)\n  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>.GetMatchingFilter(Message,MessageFilter)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool GetMatchingFilter (System.ServiceModel.Channels.Message message, out System.ServiceModel.Dispatcher.MessageFilter filter);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: To be added.\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)\n  id: GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)\n  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingFilter(MessageBuffer,MessageFilter)\n  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingFilter(MessageBuffer,MessageFilter)\n  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>.GetMatchingFilter(MessageBuffer,MessageFilter)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool GetMatchingFilter (System.ServiceModel.Channels.MessageBuffer messageBuffer, out System.ServiceModel.Dispatcher.MessageFilter filter);\n    parameters:\n    - id: messageBuffer\n      type: System.ServiceModel.Channels.MessageBuffer\n      description: To be added.\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  id: GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingFilters(Message,ICollection<MessageFilter>)\n  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingFilters(Message,ICollection<MessageFilter>)\n  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>.GetMatchingFilters(Message,ICollection<MessageFilter>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool GetMatchingFilters (System.ServiceModel.Channels.Message message, System.Collections.Generic.ICollection<System.ServiceModel.Dispatcher.MessageFilter> results);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: To be added.\n    - id: results\n      type: System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter}\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  id: GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingFilters(MessageBuffer,ICollection<MessageFilter>)\n  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingFilters(MessageBuffer,ICollection<MessageFilter>)\n  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>.GetMatchingFilters(MessageBuffer,ICollection<MessageFilter>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool GetMatchingFilters (System.ServiceModel.Channels.MessageBuffer messageBuffer, System.Collections.Generic.ICollection<System.ServiceModel.Dispatcher.MessageFilter> results);\n    parameters:\n    - id: messageBuffer\n      type: System.ServiceModel.Channels.MessageBuffer\n      description: To be added.\n    - id: results\n      type: System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter}\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)\n  id: GetMatchingValue(System.ServiceModel.Channels.Message,`0@)\n  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingValue(Message,TFilterData)\n  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingValue(Message,TFilterData)\n  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>.GetMatchingValue(Message,TFilterData)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool GetMatchingValue (System.ServiceModel.Channels.Message message, out TFilterData value);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: To be added.\n    - id: value\n      type: TFilterData\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)\n  id: GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)\n  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingValue(MessageBuffer,TFilterData)\n  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingValue(MessageBuffer,TFilterData)\n  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>.GetMatchingValue(MessageBuffer,TFilterData)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool GetMatchingValue (System.ServiceModel.Channels.MessageBuffer messageBuffer, out TFilterData value);\n    parameters:\n    - id: messageBuffer\n      type: System.ServiceModel.Channels.MessageBuffer\n      description: To be added.\n    - id: value\n      type: TFilterData\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})\n  id: GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})\n  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingValues(Message,ICollection<TFilterData>)\n  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingValues(Message,ICollection<TFilterData>)\n  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>.GetMatchingValues(Message,ICollection<TFilterData>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool GetMatchingValues (System.ServiceModel.Channels.Message message, System.Collections.Generic.ICollection<TFilterData> results);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: To be added.\n    - id: results\n      type: System.Collections.Generic.ICollection{TFilterData}\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})\n  id: GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})\n  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingValues(MessageBuffer,ICollection<TFilterData>)\n  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingValues(MessageBuffer,ICollection<TFilterData>)\n  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>.GetMatchingValues(MessageBuffer,ICollection<TFilterData>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool GetMatchingValues (System.ServiceModel.Channels.MessageBuffer messageBuffer, System.Collections.Generic.ICollection<TFilterData> results);\n    parameters:\n    - id: messageBuffer\n      type: System.ServiceModel.Channels.MessageBuffer\n      description: To be added.\n    - id: results\n      type: System.Collections.Generic.ICollection{TFilterData}\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)\n  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingFilter(Message,MessageFilter)\n  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingFilter(Message,MessageFilter)\n  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>.GetMatchingFilter(Message,MessageFilter)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Channels.Message\n  parent: System.ServiceModel.Channels\n  isExternal: true\n  name: Message\n  nameWithType: Message\n  fullName: System.ServiceModel.Channels.Message\n- uid: System.ServiceModel.Dispatcher.MessageFilter\n  parent: System.ServiceModel.Dispatcher\n  isExternal: false\n  name: MessageFilter\n  nameWithType: MessageFilter\n  fullName: System.ServiceModel.Dispatcher.MessageFilter\n- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)\n  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingFilter(MessageBuffer,MessageFilter)\n  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingFilter(MessageBuffer,MessageFilter)\n  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>.GetMatchingFilter(MessageBuffer,MessageFilter)\n- uid: System.ServiceModel.Channels.MessageBuffer\n  parent: System.ServiceModel.Channels\n  isExternal: true\n  name: MessageBuffer\n  nameWithType: MessageBuffer\n  fullName: System.ServiceModel.Channels.MessageBuffer\n- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingFilters(Message,ICollection<MessageFilter>)\n  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingFilters(Message,ICollection<MessageFilter>)\n  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>.GetMatchingFilters(Message,ICollection<MessageFilter>)\n- uid: System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: ICollection<MessageFilter>\n  nameWithType: ICollection<MessageFilter>\n  fullName: System.Collections.Generic.ICollection<System.ServiceModel.Dispatcher.MessageFilter>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: ICollection<System.ServiceModel.Dispatcher.MessageFilter>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Dispatcher.MessageFilter\n    name: MessageFilter\n    nameWithType: MessageFilter\n    fullName: MessageFilter\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingFilters(MessageBuffer,ICollection<MessageFilter>)\n  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingFilters(MessageBuffer,ICollection<MessageFilter>)\n  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>.GetMatchingFilters(MessageBuffer,ICollection<MessageFilter>)\n- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)\n  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingValue(Message,TFilterData)\n  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingValue(Message,TFilterData)\n  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>.GetMatchingValue(Message,TFilterData)\n- uid: TFilterData\n  isExternal: true\n  name: TFilterData\n  nameWithType: TFilterData\n  fullName: TFilterData\n- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)\n  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingValue(MessageBuffer,TFilterData)\n  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingValue(MessageBuffer,TFilterData)\n  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>.GetMatchingValue(MessageBuffer,TFilterData)\n- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})\n  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingValues(Message,ICollection<TFilterData>)\n  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingValues(Message,ICollection<TFilterData>)\n  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>.GetMatchingValues(Message,ICollection<TFilterData>)\n- uid: System.Collections.Generic.ICollection{TFilterData}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: ICollection<TFilterData>\n  nameWithType: ICollection<TFilterData>\n  fullName: System.Collections.Generic.ICollection<TFilterData>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: ICollection<TFilterData>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TFilterData\n    name: TFilterData\n    nameWithType: TFilterData\n    fullName: TFilterData\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})\n  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingValues(MessageBuffer,ICollection<TFilterData>)\n  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingValues(MessageBuffer,ICollection<TFilterData>)\n  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>.GetMatchingValues(MessageBuffer,ICollection<TFilterData>)\n- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter*\n  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingFilter\n  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingFilter\n- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters*\n  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingFilters\n  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingFilters\n- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue*\n  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingValue\n  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingValue\n- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues*\n  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingValues\n  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingValues\n"}