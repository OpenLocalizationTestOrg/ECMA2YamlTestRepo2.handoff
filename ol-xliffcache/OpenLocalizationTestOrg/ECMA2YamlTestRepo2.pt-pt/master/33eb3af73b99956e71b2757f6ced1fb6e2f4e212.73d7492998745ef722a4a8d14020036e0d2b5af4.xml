{"nodes":[{"pos":[1202,1279],"content":"Defines the constraints set on a certificate. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines the constraints set on a certificate. This class cannot be inherited.","pos":[0,77],"nodes":[{"content":"Defines the constraints set on a certificate.","pos":[0,45]},{"content":"This class cannot be inherited.","pos":[46,77]}]}]},{"pos":[1291,1377],"content":"This class provides properties that define the basic constraints set on a certificate.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This class provides properties that define the basic constraints set on a certificate.","pos":[0,86]}]},{"pos":[3157,3294],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\"></xref> class."},{"pos":[4942,5222],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using an <bpt id=\"p2\">&lt;xref href=\"System.Security.Cryptography.AsnEncodedData\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object and a value that identifies whether the extension is critical.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\"></xref> class using an <xref href=\"System.Security.Cryptography.AsnEncodedData\"></xref> object and a value that identifies whether the extension is critical."},{"pos":[5234,5372],"content":"Use this constructor if the information to create an extension is already in an <xref:System.Security.Cryptography.AsnEncodedData> object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this constructor if the information to create an extension is already in an &lt;xref:System.Security.Cryptography.AsnEncodedData&gt; object.","pos":[0,138],"source":"Use this constructor if the information to create an extension is already in an <xref:System.Security.Cryptography.AsnEncodedData> object."}]},{"pos":[5644,5692],"content":"The encoded data to use to create the extension.","needQuote":true,"needEscape":true,"nodes":[{"content":"The encoded data to use to create the extension.","pos":[0,48]}]},{"pos":[5758,5923],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the extension is critical; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the extension is critical; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6826,7293],"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\"></xref> class. Parameters specify a value that indicates whether a certificate is a certificate authority (CA) certificate, a value that indicates whether the certificate has a restriction on the number of path levels it allows, the number of levels allowed in a certificate's path, and a value that indicates whether the extension is critical.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","pos":[0,137],"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\"></xref> class."},{"content":"Parameters specify a value that indicates whether a certificate is a certificate authority (CA) certificate, a value that indicates whether the certificate has a restriction on the number of path levels it allows, the number of levels allowed in a certificate's path, and a value that indicates whether the extension is critical.","pos":[138,467]}]},{"pos":[7547,7746],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the certificate is a certificate authority (CA) certificate; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the certificate is a certificate authority (CA) certificate; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7827,8039],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the certificate has a restriction on the number of path levels it allows; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the certificate has a restriction on the number of path levels it allows; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8115,8168],"content":"The number of levels allowed in a certificate's path.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of levels allowed in a certificate's path.","pos":[0,53]}]},{"pos":[8234,8399],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the extension is critical; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the extension is critical; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9089,9179],"content":"Gets a value indicating whether a certificate is a certificate authority (CA) certificate.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether a certificate is a certificate authority (CA) certificate.","pos":[0,90]}]},{"pos":[9191,9285],"content":"Use this property to determine if the certificate is a certificate authority (CA) certificate.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this property to determine if the certificate is a certificate authority (CA) certificate.","pos":[0,94]}]},{"pos":[10076,10275],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the certificate is a certificate authority (CA) certificate, otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the certificate is a certificate authority (CA) certificate, otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11056,11274],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using an <bpt id=\"p2\">&lt;xref href=\"System.Security.Cryptography.AsnEncodedData\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\"></xref> class using an <xref href=\"System.Security.Cryptography.AsnEncodedData\"></xref> object."},{"pos":[11286,11424],"content":"Use this constructor if the information to create an extension is already in an <xref:System.Security.Cryptography.AsnEncodedData> object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this constructor if the information to create an extension is already in an &lt;xref:System.Security.Cryptography.AsnEncodedData&gt; object.","pos":[0,138],"source":"Use this constructor if the information to create an extension is already in an <xref:System.Security.Cryptography.AsnEncodedData> object."}]},{"pos":[11656,11704],"content":"The encoded data to use to create the extension.","needQuote":true,"needEscape":true,"nodes":[{"content":"The encoded data to use to create the extension.","pos":[0,48]}]},{"pos":[12412,12515],"content":"Gets a value indicating whether a certificate has a restriction on the number of path levels it allows.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether a certificate has a restriction on the number of path levels it allows.","pos":[0,103]}]},{"pos":[12527,12874],"content":"A certificate issuer can restrict the number of levels in a certificate path. This property indicates whether the certificate has this restriction. If this value is `true`, you can use the <xref:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.PathLengthConstraint%2A> property to determine the number of levels allowed.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A certificate issuer can restrict the number of levels in a certificate path.","pos":[0,77]},{"content":"This property indicates whether the certificate has this restriction.","pos":[78,147]},{"content":"If this value is <ph id=\"ph1\">`true`</ph>, you can use the &lt;xref:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.PathLengthConstraint%2A&gt; property to determine the number of levels allowed.","pos":[148,347],"source":" If this value is `true`, you can use the <xref:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.PathLengthConstraint%2A> property to determine the number of levels allowed."}]},{"pos":[13668,13880],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the certificate has a restriction on the number of path levels it allows, otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the certificate has a restriction on the number of path levels it allows, otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[14156,14188],"content":"The extension cannot be decoded.","needQuote":true,"needEscape":true,"nodes":[{"content":"The extension cannot be decoded.","pos":[0,32]}]},{"pos":[14766,14824],"content":"Gets the number of levels allowed in a certificate's path.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of levels allowed in a certificate's path.","pos":[0,58]}]},{"pos":[14836,14962],"content":"If a certificate has a constraint on the number of path levels it allows, this property indicates how many levels are allowed.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If a certificate has a constraint on the number of path levels it allows, this property indicates how many levels are allowed.","pos":[0,126]}]},{"pos":[15750,15825],"content":"An integer indicating the number of levels allowed in a certificate's path.","needQuote":true,"needEscape":true,"nodes":[{"content":"An integer indicating the number of levels allowed in a certificate's path.","pos":[0,75]}]},{"pos":[16098,16130],"content":"The extension cannot be decoded.","needQuote":true,"needEscape":true,"nodes":[{"content":"The extension cannot be decoded.","pos":[0,32]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  id: X509BasicConstraintsExtension\n  children:\n  - System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor\n  - System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)\n  - System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor(System.Boolean,System.Boolean,System.Int32,System.Boolean)\n  - System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CertificateAuthority\n  - System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CopyFrom(System.Security.Cryptography.AsnEncodedData)\n  - System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.HasPathLengthConstraint\n  - System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.PathLengthConstraint\n  langs:\n  - csharp\n  name: X509BasicConstraintsExtension\n  nameWithType: X509BasicConstraintsExtension\n  fullName: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  type: Class\n  summary: Defines the constraints set on a certificate. This class cannot be inherited.\n  remarks: This class provides properties that define the basic constraints set on a certificate.\n  example:\n  - \"The following code example demonstrates how to open a user’s personal certificate store and display information about each certificate in the store.  This example uses the X509BasicConstraintsExtension class to display the information.  \\n  \\n [!code-cs[Cryptography.X509Certificates.X509Extensions#1](~/add/codesnippet/csharp/t-system.security.crypto_64_1.cs)]\\n [!code-vb[Cryptography.X509Certificates.X509Extensions#1](~/add/codesnippet/visualbasic/t-system.security.crypto_64_1.vb)]\\n [!code-cpp[Cryptography.X509Certificates.X509Extensions#1](~/add/codesnippet/cpp/t-system.security.crypto_64_1.cpp)]\"\n  syntax:\n    content: 'public sealed class X509BasicConstraintsExtension : System.Security.Cryptography.X509Certificates.X509Extension'\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.AsnEncodedData\n  - System.Security.Cryptography.X509Certificates.X509Extension\n  implements: []\n  inheritedMembers:\n  - System.Security.Cryptography.AsnEncodedData.Format(System.Boolean)\n  - System.Security.Cryptography.AsnEncodedData.Oid\n  - System.Security.Cryptography.AsnEncodedData.RawData\n  - System.Security.Cryptography.X509Certificates.X509Extension.Critical\n  platform:\n  - net462\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  langs:\n  - csharp\n  name: X509BasicConstraintsExtension()\n  nameWithType: X509BasicConstraintsExtension.X509BasicConstraintsExtension()\n  fullName: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.X509BasicConstraintsExtension()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to open a user’s personal certificate store and display information about each certificate in the store.  This example uses the <xref:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension> class to display the information.  \\n  \\n [!code-cs[Cryptography.X509Certificates.X509Extensions#1](~/add/codesnippet/csharp/61f39d50-05d0-49a3-b816-_1.cs)]\\n [!code-vb[Cryptography.X509Certificates.X509Extensions#1](~/add/codesnippet/visualbasic/61f39d50-05d0-49a3-b816-_1.vb)]\\n [!code-cpp[Cryptography.X509Certificates.X509Extensions#1](~/add/codesnippet/cpp/61f39d50-05d0-49a3-b816-_1.cpp)]\"\n  syntax:\n    content: public X509BasicConstraintsExtension ();\n    parameters: []\n  overload: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)\n  id: '#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)'\n  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  langs:\n  - csharp\n  name: X509BasicConstraintsExtension(AsnEncodedData,Boolean)\n  nameWithType: X509BasicConstraintsExtension.X509BasicConstraintsExtension(AsnEncodedData,Boolean)\n  fullName: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.X509BasicConstraintsExtension(AsnEncodedData,Boolean)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\"></xref> class using an <xref href=\"System.Security.Cryptography.AsnEncodedData\"></xref> object and a value that identifies whether the extension is critical.\n  remarks: Use this constructor if the information to create an extension is already in an <xref:System.Security.Cryptography.AsnEncodedData> object.\n  syntax:\n    content: public X509BasicConstraintsExtension (System.Security.Cryptography.AsnEncodedData encodedBasicConstraints, bool critical);\n    parameters:\n    - id: encodedBasicConstraints\n      type: System.Security.Cryptography.AsnEncodedData\n      description: The encoded data to use to create the extension.\n    - id: critical\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the extension is critical; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor(System.Boolean,System.Boolean,System.Int32,System.Boolean)\n  id: '#ctor(System.Boolean,System.Boolean,System.Int32,System.Boolean)'\n  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  langs:\n  - csharp\n  name: X509BasicConstraintsExtension(Boolean,Boolean,Int32,Boolean)\n  nameWithType: X509BasicConstraintsExtension.X509BasicConstraintsExtension(Boolean,Boolean,Int32,Boolean)\n  fullName: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.X509BasicConstraintsExtension(Boolean,Boolean,Int32,Boolean)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\"></xref> class. Parameters specify a value that indicates whether a certificate is a certificate authority (CA) certificate, a value that indicates whether the certificate has a restriction on the number of path levels it allows, the number of levels allowed in a certificate's path, and a value that indicates whether the extension is critical.\n  syntax:\n    content: public X509BasicConstraintsExtension (bool certificateAuthority, bool hasPathLengthConstraint, int pathLengthConstraint, bool critical);\n    parameters:\n    - id: certificateAuthority\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the certificate is a certificate authority (CA) certificate; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: hasPathLengthConstraint\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the certificate has a restriction on the number of path levels it allows; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: pathLengthConstraint\n      type: System.Int32\n      description: The number of levels allowed in a certificate's path.\n    - id: critical\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the extension is critical; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CertificateAuthority\n  id: CertificateAuthority\n  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  langs:\n  - csharp\n  name: CertificateAuthority\n  nameWithType: X509BasicConstraintsExtension.CertificateAuthority\n  fullName: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CertificateAuthority\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Gets a value indicating whether a certificate is a certificate authority (CA) certificate.\n  remarks: Use this property to determine if the certificate is a certificate authority (CA) certificate.\n  example:\n  - \"The following code example demonstrates how to open a user’s personal certificate store and display information about each certificate in the store.  This example uses the <xref:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension> class to display the information.  \\n  \\n [!code-cs[Cryptography.X509Certificates.X509Extensions#1](~/add/codesnippet/csharp/81d2d95c-6fb7-46bc-8d4d-_1.cs)]\\n [!code-vb[Cryptography.X509Certificates.X509Extensions#1](~/add/codesnippet/visualbasic/81d2d95c-6fb7-46bc-8d4d-_1.vb)]\\n [!code-cpp[Cryptography.X509Certificates.X509Extensions#1](~/add/codesnippet/cpp/81d2d95c-6fb7-46bc-8d4d-_1.cpp)]\"\n  syntax:\n    content: public bool CertificateAuthority { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the certificate is a certificate authority (CA) certificate, otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CertificateAuthority*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CopyFrom(System.Security.Cryptography.AsnEncodedData)\n  id: CopyFrom(System.Security.Cryptography.AsnEncodedData)\n  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  langs:\n  - csharp\n  name: CopyFrom(AsnEncodedData)\n  nameWithType: X509BasicConstraintsExtension.CopyFrom(AsnEncodedData)\n  fullName: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CopyFrom(AsnEncodedData)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\"></xref> class using an <xref href=\"System.Security.Cryptography.AsnEncodedData\"></xref> object.\n  remarks: Use this constructor if the information to create an extension is already in an <xref:System.Security.Cryptography.AsnEncodedData> object.\n  syntax:\n    content: public override void CopyFrom (System.Security.Cryptography.AsnEncodedData asnEncodedData);\n    parameters:\n    - id: asnEncodedData\n      type: System.Security.Cryptography.AsnEncodedData\n      description: The encoded data to use to create the extension.\n  overload: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CopyFrom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.HasPathLengthConstraint\n  id: HasPathLengthConstraint\n  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  langs:\n  - csharp\n  name: HasPathLengthConstraint\n  nameWithType: X509BasicConstraintsExtension.HasPathLengthConstraint\n  fullName: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.HasPathLengthConstraint\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Gets a value indicating whether a certificate has a restriction on the number of path levels it allows.\n  remarks: A certificate issuer can restrict the number of levels in a certificate path. This property indicates whether the certificate has this restriction. If this value is `true`, you can use the <xref:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.PathLengthConstraint%2A> property to determine the number of levels allowed.\n  example:\n  - \"The following code example demonstrates how to open a user’s personal certificate store and display information about each certificate in the store.  This example uses the <xref:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension> class to display the information.  \\n  \\n [!code-cs[Cryptography.X509Certificates.X509Extensions#1](~/add/codesnippet/csharp/a312dc6e-560d-4b07-a1b5-_1.cs)]\\n [!code-vb[Cryptography.X509Certificates.X509Extensions#1](~/add/codesnippet/visualbasic/a312dc6e-560d-4b07-a1b5-_1.vb)]\\n [!code-cpp[Cryptography.X509Certificates.X509Extensions#1](~/add/codesnippet/cpp/a312dc6e-560d-4b07-a1b5-_1.cpp)]\"\n  syntax:\n    content: public bool HasPathLengthConstraint { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the certificate has a restriction on the number of path levels it allows, otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.HasPathLengthConstraint*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The extension cannot be decoded.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.PathLengthConstraint\n  id: PathLengthConstraint\n  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  langs:\n  - csharp\n  name: PathLengthConstraint\n  nameWithType: X509BasicConstraintsExtension.PathLengthConstraint\n  fullName: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.PathLengthConstraint\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Gets the number of levels allowed in a certificate's path.\n  remarks: If a certificate has a constraint on the number of path levels it allows, this property indicates how many levels are allowed.\n  example:\n  - \"The following code example demonstrates how to open a user’s personal certificate store and display information about each certificate in the store.  This example uses the <xref:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension> class to display the information.  \\n  \\n [!code-cs[Cryptography.X509Certificates.X509Extensions#1](~/add/codesnippet/csharp/43c6ba08-6598-4ea2-96d7-_1.cs)]\\n [!code-vb[Cryptography.X509Certificates.X509Extensions#1](~/add/codesnippet/visualbasic/43c6ba08-6598-4ea2-96d7-_1.vb)]\\n [!code-cpp[Cryptography.X509Certificates.X509Extensions#1](~/add/codesnippet/cpp/43c6ba08-6598-4ea2-96d7-_1.cpp)]\"\n  syntax:\n    content: public int PathLengthConstraint { get; }\n    return:\n      type: System.Int32\n      description: An integer indicating the number of levels allowed in a certificate's path.\n  overload: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.PathLengthConstraint*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The extension cannot be decoded.\n  platform:\n  - net462\nreferences:\n- uid: System.Security.Cryptography.X509Certificates.X509Extension\n  isExternal: false\n  name: System.Security.Cryptography.X509Certificates.X509Extension\n- uid: System.Security.Cryptography.CryptographicException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicException\n  nameWithType: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor\n  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  isExternal: false\n  name: X509BasicConstraintsExtension()\n  nameWithType: X509BasicConstraintsExtension.X509BasicConstraintsExtension()\n  fullName: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.X509BasicConstraintsExtension()\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)\n  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  isExternal: false\n  name: X509BasicConstraintsExtension(AsnEncodedData,Boolean)\n  nameWithType: X509BasicConstraintsExtension.X509BasicConstraintsExtension(AsnEncodedData,Boolean)\n  fullName: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.X509BasicConstraintsExtension(AsnEncodedData,Boolean)\n- uid: System.Security.Cryptography.AsnEncodedData\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: AsnEncodedData\n  nameWithType: AsnEncodedData\n  fullName: System.Security.Cryptography.AsnEncodedData\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor(System.Boolean,System.Boolean,System.Int32,System.Boolean)\n  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  isExternal: false\n  name: X509BasicConstraintsExtension(Boolean,Boolean,Int32,Boolean)\n  nameWithType: X509BasicConstraintsExtension.X509BasicConstraintsExtension(Boolean,Boolean,Int32,Boolean)\n  fullName: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.X509BasicConstraintsExtension(Boolean,Boolean,Int32,Boolean)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CertificateAuthority\n  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  isExternal: false\n  name: CertificateAuthority\n  nameWithType: X509BasicConstraintsExtension.CertificateAuthority\n  fullName: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CertificateAuthority\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CopyFrom(System.Security.Cryptography.AsnEncodedData)\n  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  isExternal: false\n  name: CopyFrom(AsnEncodedData)\n  nameWithType: X509BasicConstraintsExtension.CopyFrom(AsnEncodedData)\n  fullName: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CopyFrom(AsnEncodedData)\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.HasPathLengthConstraint\n  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  isExternal: false\n  name: HasPathLengthConstraint\n  nameWithType: X509BasicConstraintsExtension.HasPathLengthConstraint\n  fullName: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.HasPathLengthConstraint\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.PathLengthConstraint\n  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  isExternal: false\n  name: PathLengthConstraint\n  nameWithType: X509BasicConstraintsExtension.PathLengthConstraint\n  fullName: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.PathLengthConstraint\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor*\n  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  isExternal: false\n  name: X509BasicConstraintsExtension\n  nameWithType: X509BasicConstraintsExtension.X509BasicConstraintsExtension\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CertificateAuthority*\n  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  isExternal: false\n  name: CertificateAuthority\n  nameWithType: X509BasicConstraintsExtension.CertificateAuthority\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CopyFrom*\n  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  isExternal: false\n  name: CopyFrom\n  nameWithType: X509BasicConstraintsExtension.CopyFrom\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.HasPathLengthConstraint*\n  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  isExternal: false\n  name: HasPathLengthConstraint\n  nameWithType: X509BasicConstraintsExtension.HasPathLengthConstraint\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.PathLengthConstraint*\n  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  isExternal: false\n  name: PathLengthConstraint\n  nameWithType: X509BasicConstraintsExtension.PathLengthConstraint\n"}