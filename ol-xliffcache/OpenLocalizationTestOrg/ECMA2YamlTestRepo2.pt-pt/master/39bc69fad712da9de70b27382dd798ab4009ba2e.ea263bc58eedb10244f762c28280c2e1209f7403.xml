{"nodes":[{"pos":[750,892],"content":"Represents a substitute output string that is emitted when the original input byte sequence cannot be decoded. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a substitute output string that is emitted when the original input byte sequence cannot be decoded. This class cannot be inherited.","pos":[0,142],"nodes":[{"content":"Represents a substitute output string that is emitted when the original input byte sequence cannot be decoded.","pos":[0,110]},{"content":"This class cannot be inherited.","pos":[111,142]}]}]},{"pos":[905,1918],"content":"It might not be possible to convert an encoded byte sequence to an equivalent character if no suitable decoding exists. A common reason for a decoding to fail is that the conversion operation uses a code page that cannot represent the character to decode.       If the input byte sequence cannot be converted to an output character, a <xref:System.Text.DecoderReplacementFallback?displayProperty=fullName> object provides a replacement string that is substituted for the output character. The replacement string initializes the value of the <xref:System.Text.DecoderReplacementFallback> object, and the value of the <xref:System.Text.DecoderReplacementFallback> object initializes the value of a DecoderReplacementFallbackBuffer object. The value of a DecoderReplacementFallbackBuffer object is called the replacement fallback buffer. The conversion operation uses the replacement fallback buffer to emit a replacement string instead of a decoded character, then continues to process the remainder of the input.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"It might not be possible to convert an encoded byte sequence to an equivalent character if no suitable decoding exists. A common reason for a decoding to fail is that the conversion operation uses a code page that cannot represent the character to decode.       If the input byte sequence cannot be converted to an output character, a <xref:System.Text.DecoderReplacementFallback?displayProperty=fullName> object provides a replacement string that is substituted for the output character. The replacement string initializes the value of the <xref:System.Text.DecoderReplacementFallback> object, and the value of the <xref:System.Text.DecoderReplacementFallback> object initializes the value of a DecoderReplacementFallbackBuffer object. The value of a DecoderReplacementFallbackBuffer object is called the replacement fallback buffer. The conversion operation uses the replacement fallback buffer to emit a replacement string instead of a decoded character, then continues to process the remainder of the input.","pos":[0,1011],"nodes":[{"content":"It might not be possible to convert an encoded byte sequence to an equivalent character if no suitable decoding exists.","pos":[0,119]},{"content":"A common reason for a decoding to fail is that the conversion operation uses a code page that cannot represent the character to decode.","pos":[120,255]},{"content":"If the input byte sequence cannot be converted to an output character, a &lt;xref:System.Text.DecoderReplacementFallback?displayProperty=fullName&gt; object provides a replacement string that is substituted for the output character.","pos":[262,488],"source":"       If the input byte sequence cannot be converted to an output character, a <xref:System.Text.DecoderReplacementFallback?displayProperty=fullName> object provides a replacement string that is substituted for the output character."},{"content":"The replacement string initializes the value of the &lt;xref:System.Text.DecoderReplacementFallback&gt; object, and the value of the &lt;xref:System.Text.DecoderReplacementFallback&gt; object initializes the value of a DecoderReplacementFallbackBuffer object.","pos":[489,736],"source":" The replacement string initializes the value of the <xref:System.Text.DecoderReplacementFallback> object, and the value of the <xref:System.Text.DecoderReplacementFallback> object initializes the value of a DecoderReplacementFallbackBuffer object."},{"content":"The value of a DecoderReplacementFallbackBuffer object is called the replacement fallback buffer.","pos":[737,834]},{"content":"The conversion operation uses the replacement fallback buffer to emit a replacement string instead of a decoded character, then continues to process the remainder of the input.","pos":[835,1011]}]}]},{"pos":[2757,2937],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Text.DecoderReplacementFallbackBuffer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the value of a &lt;xref:System.Text.DecoderReplacementFallback&gt; object.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Text.DecoderReplacementFallbackBuffer\"></xref> class using the value of a <xref:System.Text.DecoderReplacementFallback> object."},{"pos":[3157,3247],"content":"A <xref:System.Text.DecoderReplacementFallback> object that contains a replacement string.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Text.DecoderReplacementFallback&gt; object that contains a replacement string.","pos":[0,90],"source":"A <xref:System.Text.DecoderReplacementFallback> object that contains a replacement string."}]},{"pos":[3820,3899],"content":"Prepares the replacement fallback buffer to use the current replacement string.","needQuote":true,"needEscape":true,"nodes":[{"content":"Prepares the replacement fallback buffer to use the current replacement string.","pos":[0,79]}]},{"pos":[3911,4291],"content":"The <xref:System.Text.Encoding.GetBytes%2A> and <xref:System.Text.Encoder.Convert%2A> methods call Fallback if they encounter an unknown input byte sequence that cannot be decoded. If the return value of Fallback is `true`, the calling method can invoke the <xref:System.Text.DecoderReplacementFallbackBuffer.GetNextChar%2A> method to obtain each character of the fallback buffer.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Text.Encoding.GetBytes%2A&gt; and &lt;xref:System.Text.Encoder.Convert%2A&gt; methods call Fallback if they encounter an unknown input byte sequence that cannot be decoded.","pos":[0,180],"source":"The <xref:System.Text.Encoding.GetBytes%2A> and <xref:System.Text.Encoder.Convert%2A> methods call Fallback if they encounter an unknown input byte sequence that cannot be decoded."},{"content":"If the return value of Fallback is <ph id=\"ph1\">`true`</ph>, the calling method can invoke the &lt;xref:System.Text.DecoderReplacementFallbackBuffer.GetNextChar%2A&gt; method to obtain each character of the fallback buffer.","pos":[181,380],"source":" If the return value of Fallback is `true`, the calling method can invoke the <xref:System.Text.DecoderReplacementFallbackBuffer.GetNextChar%2A> method to obtain each character of the fallback buffer."}]},{"pos":[4463,4543],"content":"An input byte sequence. This parameter is ignored unless an exception is thrown.","needQuote":true,"needEscape":true,"nodes":[{"content":"An input byte sequence. This parameter is ignored unless an exception is thrown.","pos":[0,80],"nodes":[{"content":"An input byte sequence.","pos":[0,23]},{"content":"This parameter is ignored unless an exception is thrown.","pos":[24,80]}]}]},{"pos":[4604,4698],"content":"The index position of the byte in `bytesUnknown`. This parameter is ignored in this operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index position of the byte in <ph id=\"ph1\">`bytesUnknown`</ph>.","pos":[0,49],"source":"The index position of the byte in `bytesUnknown`."},{"content":"This parameter is ignored in this operation.","pos":[50,94]}]},{"pos":[4757,4956],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the replacement string is not empty; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the replacement string is empty.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the replacement string is not empty; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the replacement string is empty."},{"pos":[5132,5306],"content":"This method is called again before the <xref:System.Text.DecoderReplacementFallbackBuffer.GetNextChar*> method has read all the characters in the replacement fallback buffer.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is called again before the &lt;xref:System.Text.DecoderReplacementFallbackBuffer.GetNextChar*&gt; method has read all the characters in the replacement fallback buffer.","pos":[0,174],"source":"This method is called again before the <xref:System.Text.DecoderReplacementFallbackBuffer.GetNextChar*> method has read all the characters in the replacement fallback buffer."}]},{"pos":[5721,5785],"content":"Retrieves the next character in the replacement fallback buffer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the next character in the replacement fallback buffer.","pos":[0,64]}]},{"pos":[5797,6283],"content":"The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=fullName> and <xref:System.Text.Decoder.Convert%2A?displayProperty=fullName> methods call <xref:System.Text.DecoderReplacementFallbackBuffer.Fallback%2A> if they encounter an unknown surrogate pair or character in their input. If the return value of <xref:System.Text.DecoderReplacementFallbackBuffer.Fallback%2A> is `true`, the calling method can invoke GetNextChar to obtain each character of the replacement fallback buffer.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Text.Encoding.GetBytes%2A?displayProperty=fullName&gt; and &lt;xref:System.Text.Decoder.Convert%2A?displayProperty=fullName&gt; methods call &lt;xref:System.Text.DecoderReplacementFallbackBuffer.Fallback%2A&gt; if they encounter an unknown surrogate pair or character in their input.","pos":[0,285],"source":"The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=fullName> and <xref:System.Text.Decoder.Convert%2A?displayProperty=fullName> methods call <xref:System.Text.DecoderReplacementFallbackBuffer.Fallback%2A> if they encounter an unknown surrogate pair or character in their input."},{"content":"If the return value of &lt;xref:System.Text.DecoderReplacementFallbackBuffer.Fallback%2A&gt; is <ph id=\"ph1\">`true`</ph>, the calling method can invoke GetNextChar to obtain each character of the replacement fallback buffer.","pos":[286,486],"source":" If the return value of <xref:System.Text.DecoderReplacementFallbackBuffer.Fallback%2A> is `true`, the calling method can invoke GetNextChar to obtain each character of the replacement fallback buffer."}]},{"pos":[6418,6472],"content":"The next character in the replacement fallback buffer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The next character in the replacement fallback buffer.","pos":[0,54]}]},{"pos":[6979,7176],"content":"Causes the next call to <xref:System.Text.DecoderReplacementFallbackBuffer.GetNextChar*> to access the character position in the replacement fallback buffer prior to the current character position.","needQuote":true,"needEscape":true,"nodes":[{"content":"Causes the next call to &lt;xref:System.Text.DecoderReplacementFallbackBuffer.GetNextChar*&gt; to access the character position in the replacement fallback buffer prior to the current character position.","pos":[0,197],"source":"Causes the next call to <xref:System.Text.DecoderReplacementFallbackBuffer.GetNextChar*> to access the character position in the replacement fallback buffer prior to the current character position."}]},{"pos":[7315,7496],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the MovePrevious operation was successful; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the MovePrevious operation was successful; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7985,8078],"content":"Gets the number of characters in the replacement fallback buffer that remain to be processed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of characters in the replacement fallback buffer that remain to be processed.","pos":[0,93]}]},{"pos":[8090,8217],"content":"The &lt;xref:System.Text.DecoderReplacementFallbackBuffer.Fallback%2A&gt; method returns <ph id=\"ph1\">`true`</ph> if the Remaining property is nonzero.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The <xref:System.Text.DecoderReplacementFallbackBuffer.Fallback%2A> method returns `true` if the Remaining property is nonzero."},{"pos":[8336,8429],"content":"The number of characters in the replacement fallback buffer that have not yet been processed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of characters in the replacement fallback buffer that have not yet been processed.","pos":[0,93]}]},{"pos":[8899,9031],"content":"Initializes all internal state information and data in the <bpt id=\"p1\">&lt;xref href=\"System.Text.DecoderReplacementFallbackBuffer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Initializes all internal state information and data in the <xref href=\"System.Text.DecoderReplacementFallbackBuffer\"></xref> object."},{"pos":[9043,9258],"content":"The Reset method discards any persisted state information and data that govern the emitting of a replacement string. Unpredictable results occur if the decoding operation continues after the Reset method is invoked.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Reset method discards any persisted state information and data that govern the emitting of a replacement string. Unpredictable results occur if the decoding operation continues after the Reset method is invoked.","pos":[0,215],"nodes":[{"content":"The Reset method discards any persisted state information and data that govern the emitting of a replacement string.","pos":[0,116]},{"content":"Unpredictable results occur if the decoding operation continues after the Reset method is invoked.","pos":[117,215]}]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Text.DecoderReplacementFallbackBuffer\n  id: DecoderReplacementFallbackBuffer\n  children:\n  - System.Text.DecoderReplacementFallbackBuffer.#ctor(System.Text.DecoderReplacementFallback)\n  - System.Text.DecoderReplacementFallbackBuffer.Fallback(System.Byte[],System.Int32)\n  - System.Text.DecoderReplacementFallbackBuffer.GetNextChar\n  - System.Text.DecoderReplacementFallbackBuffer.MovePrevious\n  - System.Text.DecoderReplacementFallbackBuffer.Remaining\n  - System.Text.DecoderReplacementFallbackBuffer.Reset\n  langs:\n  - csharp\n  name: DecoderReplacementFallbackBuffer\n  nameWithType: DecoderReplacementFallbackBuffer\n  fullName: System.Text.DecoderReplacementFallbackBuffer\n  type: Class\n  summary: Represents a substitute output string that is emitted when the original input byte sequence cannot be decoded. This class cannot be inherited.\n  remarks: \"It might not be possible to convert an encoded byte sequence to an equivalent character if no suitable decoding exists. A common reason for a decoding to fail is that the conversion operation uses a code page that cannot represent the character to decode.  \\n  \\n If the input byte sequence cannot be converted to an output character, a <xref:System.Text.DecoderReplacementFallback?displayProperty=fullName> object provides a replacement string that is substituted for the output character. The replacement string initializes the value of the <xref:System.Text.DecoderReplacementFallback> object, and the value of the <xref:System.Text.DecoderReplacementFallback> object initializes the value of a DecoderReplacementFallbackBuffer object. The value of a DecoderReplacementFallbackBuffer object is called the replacement fallback buffer. The conversion operation uses the replacement fallback buffer to emit a replacement string instead of a decoded character, then continues to process the remainder of the input.\"\n  syntax:\n    content: 'public sealed class DecoderReplacementFallbackBuffer : System.Text.DecoderFallbackBuffer'\n  inheritance:\n  - System.Text.DecoderFallbackBuffer\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Text.DecoderReplacementFallbackBuffer.#ctor(System.Text.DecoderReplacementFallback)\n  id: '#ctor(System.Text.DecoderReplacementFallback)'\n  parent: System.Text.DecoderReplacementFallbackBuffer\n  langs:\n  - csharp\n  name: DecoderReplacementFallbackBuffer(DecoderReplacementFallback)\n  nameWithType: DecoderReplacementFallbackBuffer.DecoderReplacementFallbackBuffer(DecoderReplacementFallback)\n  fullName: System.Text.DecoderReplacementFallbackBuffer.DecoderReplacementFallbackBuffer(DecoderReplacementFallback)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  summary: Initializes a new instance of the <xref href=\"System.Text.DecoderReplacementFallbackBuffer\"></xref> class using the value of a <xref:System.Text.DecoderReplacementFallback> object.\n  syntax:\n    content: public DecoderReplacementFallbackBuffer (System.Text.DecoderReplacementFallback fallback);\n    parameters:\n    - id: fallback\n      type: System.Text.DecoderReplacementFallback\n      description: A <xref:System.Text.DecoderReplacementFallback> object that contains a replacement string.\n  overload: System.Text.DecoderReplacementFallbackBuffer.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Text.DecoderReplacementFallbackBuffer.Fallback(System.Byte[],System.Int32)\n  id: Fallback(System.Byte[],System.Int32)\n  parent: System.Text.DecoderReplacementFallbackBuffer\n  langs:\n  - csharp\n  name: Fallback(Byte[],Int32)\n  nameWithType: DecoderReplacementFallbackBuffer.Fallback(Byte[],Int32)\n  fullName: System.Text.DecoderReplacementFallbackBuffer.Fallback(Byte[],Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  summary: Prepares the replacement fallback buffer to use the current replacement string.\n  remarks: The <xref:System.Text.Encoding.GetBytes%2A> and <xref:System.Text.Encoder.Convert%2A> methods call Fallback if they encounter an unknown input byte sequence that cannot be decoded. If the return value of Fallback is `true`, the calling method can invoke the <xref:System.Text.DecoderReplacementFallbackBuffer.GetNextChar%2A> method to obtain each character of the fallback buffer.\n  syntax:\n    content: public override bool Fallback (byte[] bytesUnknown, int index);\n    parameters:\n    - id: bytesUnknown\n      type: System.Byte[]\n      description: An input byte sequence. This parameter is ignored unless an exception is thrown.\n    - id: index\n      type: System.Int32\n      description: The index position of the byte in `bytesUnknown`. This parameter is ignored in this operation.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the replacement string is not empty; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the replacement string is empty.\n  overload: System.Text.DecoderReplacementFallbackBuffer.Fallback*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: This method is called again before the <xref:System.Text.DecoderReplacementFallbackBuffer.GetNextChar*> method has read all the characters in the replacement fallback buffer.\n  platform:\n  - net462\n- uid: System.Text.DecoderReplacementFallbackBuffer.GetNextChar\n  id: GetNextChar\n  parent: System.Text.DecoderReplacementFallbackBuffer\n  langs:\n  - csharp\n  name: GetNextChar()\n  nameWithType: DecoderReplacementFallbackBuffer.GetNextChar()\n  fullName: System.Text.DecoderReplacementFallbackBuffer.GetNextChar()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  summary: Retrieves the next character in the replacement fallback buffer.\n  remarks: The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=fullName> and <xref:System.Text.Decoder.Convert%2A?displayProperty=fullName> methods call <xref:System.Text.DecoderReplacementFallbackBuffer.Fallback%2A> if they encounter an unknown surrogate pair or character in their input. If the return value of <xref:System.Text.DecoderReplacementFallbackBuffer.Fallback%2A> is `true`, the calling method can invoke GetNextChar to obtain each character of the replacement fallback buffer.\n  syntax:\n    content: public override char GetNextChar ();\n    parameters: []\n    return:\n      type: System.Char\n      description: The next character in the replacement fallback buffer.\n  overload: System.Text.DecoderReplacementFallbackBuffer.GetNextChar*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Text.DecoderReplacementFallbackBuffer.MovePrevious\n  id: MovePrevious\n  parent: System.Text.DecoderReplacementFallbackBuffer\n  langs:\n  - csharp\n  name: MovePrevious()\n  nameWithType: DecoderReplacementFallbackBuffer.MovePrevious()\n  fullName: System.Text.DecoderReplacementFallbackBuffer.MovePrevious()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  summary: Causes the next call to <xref:System.Text.DecoderReplacementFallbackBuffer.GetNextChar*> to access the character position in the replacement fallback buffer prior to the current character position.\n  syntax:\n    content: public override bool MovePrevious ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the MovePrevious operation was successful; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Text.DecoderReplacementFallbackBuffer.MovePrevious*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Text.DecoderReplacementFallbackBuffer.Remaining\n  id: Remaining\n  parent: System.Text.DecoderReplacementFallbackBuffer\n  langs:\n  - csharp\n  name: Remaining\n  nameWithType: DecoderReplacementFallbackBuffer.Remaining\n  fullName: System.Text.DecoderReplacementFallbackBuffer.Remaining\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  summary: Gets the number of characters in the replacement fallback buffer that remain to be processed.\n  remarks: The <xref:System.Text.DecoderReplacementFallbackBuffer.Fallback%2A> method returns `true` if the Remaining property is nonzero.\n  syntax:\n    content: public override int Remaining { get; }\n    return:\n      type: System.Int32\n      description: The number of characters in the replacement fallback buffer that have not yet been processed.\n  overload: System.Text.DecoderReplacementFallbackBuffer.Remaining*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Text.DecoderReplacementFallbackBuffer.Reset\n  id: Reset\n  parent: System.Text.DecoderReplacementFallbackBuffer\n  langs:\n  - csharp\n  name: Reset()\n  nameWithType: DecoderReplacementFallbackBuffer.Reset()\n  fullName: System.Text.DecoderReplacementFallbackBuffer.Reset()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  summary: Initializes all internal state information and data in the <xref href=\"System.Text.DecoderReplacementFallbackBuffer\"></xref> object.\n  remarks: The Reset method discards any persisted state information and data that govern the emitting of a replacement string. Unpredictable results occur if the decoding operation continues after the Reset method is invoked.\n  syntax:\n    content: public override void Reset ();\n    parameters: []\n  overload: System.Text.DecoderReplacementFallbackBuffer.Reset*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Text.DecoderFallbackBuffer\n  isExternal: false\n  name: System.Text.DecoderFallbackBuffer\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Text.DecoderReplacementFallbackBuffer.#ctor(System.Text.DecoderReplacementFallback)\n  parent: System.Text.DecoderReplacementFallbackBuffer\n  isExternal: false\n  name: DecoderReplacementFallbackBuffer(DecoderReplacementFallback)\n  nameWithType: DecoderReplacementFallbackBuffer.DecoderReplacementFallbackBuffer(DecoderReplacementFallback)\n  fullName: System.Text.DecoderReplacementFallbackBuffer.DecoderReplacementFallbackBuffer(DecoderReplacementFallback)\n- uid: System.Text.DecoderReplacementFallback\n  parent: System.Text\n  isExternal: true\n  name: DecoderReplacementFallback\n  nameWithType: DecoderReplacementFallback\n  fullName: System.Text.DecoderReplacementFallback\n- uid: System.Text.DecoderReplacementFallbackBuffer.Fallback(System.Byte[],System.Int32)\n  parent: System.Text.DecoderReplacementFallbackBuffer\n  isExternal: false\n  name: Fallback(Byte[],Int32)\n  nameWithType: DecoderReplacementFallbackBuffer.Fallback(Byte[],Int32)\n  fullName: System.Text.DecoderReplacementFallbackBuffer.Fallback(Byte[],Int32)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.DecoderReplacementFallbackBuffer.GetNextChar\n  parent: System.Text.DecoderReplacementFallbackBuffer\n  isExternal: false\n  name: GetNextChar()\n  nameWithType: DecoderReplacementFallbackBuffer.GetNextChar()\n  fullName: System.Text.DecoderReplacementFallbackBuffer.GetNextChar()\n- uid: System.Char\n  parent: System\n  isExternal: true\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.Text.DecoderReplacementFallbackBuffer.MovePrevious\n  parent: System.Text.DecoderReplacementFallbackBuffer\n  isExternal: false\n  name: MovePrevious()\n  nameWithType: DecoderReplacementFallbackBuffer.MovePrevious()\n  fullName: System.Text.DecoderReplacementFallbackBuffer.MovePrevious()\n- uid: System.Text.DecoderReplacementFallbackBuffer.Remaining\n  parent: System.Text.DecoderReplacementFallbackBuffer\n  isExternal: false\n  name: Remaining\n  nameWithType: DecoderReplacementFallbackBuffer.Remaining\n  fullName: System.Text.DecoderReplacementFallbackBuffer.Remaining\n- uid: System.Text.DecoderReplacementFallbackBuffer.Reset\n  parent: System.Text.DecoderReplacementFallbackBuffer\n  isExternal: false\n  name: Reset()\n  nameWithType: DecoderReplacementFallbackBuffer.Reset()\n  fullName: System.Text.DecoderReplacementFallbackBuffer.Reset()\n- uid: System.Text.DecoderReplacementFallbackBuffer.#ctor*\n  parent: System.Text.DecoderReplacementFallbackBuffer\n  isExternal: false\n  name: DecoderReplacementFallbackBuffer\n  nameWithType: DecoderReplacementFallbackBuffer.DecoderReplacementFallbackBuffer\n- uid: System.Text.DecoderReplacementFallbackBuffer.Fallback*\n  parent: System.Text.DecoderReplacementFallbackBuffer\n  isExternal: false\n  name: Fallback\n  nameWithType: DecoderReplacementFallbackBuffer.Fallback\n- uid: System.Text.DecoderReplacementFallbackBuffer.GetNextChar*\n  parent: System.Text.DecoderReplacementFallbackBuffer\n  isExternal: false\n  name: GetNextChar\n  nameWithType: DecoderReplacementFallbackBuffer.GetNextChar\n- uid: System.Text.DecoderReplacementFallbackBuffer.MovePrevious*\n  parent: System.Text.DecoderReplacementFallbackBuffer\n  isExternal: false\n  name: MovePrevious\n  nameWithType: DecoderReplacementFallbackBuffer.MovePrevious\n- uid: System.Text.DecoderReplacementFallbackBuffer.Remaining*\n  parent: System.Text.DecoderReplacementFallbackBuffer\n  isExternal: false\n  name: Remaining\n  nameWithType: DecoderReplacementFallbackBuffer.Remaining\n- uid: System.Text.DecoderReplacementFallbackBuffer.Reset*\n  parent: System.Text.DecoderReplacementFallbackBuffer\n  isExternal: false\n  name: Reset\n  nameWithType: DecoderReplacementFallbackBuffer.Reset\n"}