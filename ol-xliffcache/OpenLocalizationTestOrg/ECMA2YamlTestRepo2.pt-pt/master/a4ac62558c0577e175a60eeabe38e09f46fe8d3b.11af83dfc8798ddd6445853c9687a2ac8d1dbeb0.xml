{"nodes":[{"pos":[2538,2664],"content":"Represents an XML Schema Definition Language (XSD) Schema validation engine. The XmlSchemaValidator class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents an XML Schema Definition Language (XSD) Schema validation engine. The XmlSchemaValidator class cannot be inherited.","pos":[0,126],"nodes":[{"content":"Represents an XML Schema Definition Language (XSD) Schema validation engine.","pos":[0,76]},{"content":"The XmlSchemaValidator class cannot be inherited.","pos":[77,126]}]}]},{"pos":[2677,4298],"content":"> [!IMPORTANT] >  -   Do not use schemas from unknown or untrusted sources or locations. Doing so will compromise the security of your code.   > -   XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios.   > -   Schema validation error messages and exceptions may expose sensitive information about the content model or URI paths to the schema file. Be careful not to expose this information to untrusted callers.       The XmlSchemaValidator class provides an efficient, high-performance mechanism to validate XML data against XML schemas in a push-based manner. For example, the XmlSchemaValidator class allows you to validate an XML infoset in-place without having to serialize it as an XML document and then reparse the document using a validating XML reader. The XmlSchemaValidator class can also be used to build validation engines over custom XML data sources or as a way to build a validating XML writer.       For more information about the XmlSchemaValidator class, see the [XmlSchemaValidator Push-Based Validation](~/add/includes/ajax-current-ext-md.md) topic.      > [!IMPORTANT] >  The <xref:System.Xml.Schema.XmlSchemaValidationFlags> and <xref:System.Xml.Schema.XmlSchemaValidationFlags> validation flags of an XmlSchemaValidator object are not set be default. Additionally, the <xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A> property of an XmlSchemaValidator object is `null` by default. As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">&gt; [!IMPORTANT]</ph> &gt;  -   Do not use schemas from unknown or untrusted sources or locations.","pos":[0,88],"source":"> [!IMPORTANT] >  -   Do not use schemas from unknown or untrusted sources or locations."},{"content":"Doing so will compromise the security of your code.","pos":[89,140]},{"content":"&gt; -   XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios.","pos":[143,286],"source":"   > -   XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios."},{"content":"&gt; -   Schema validation error messages and exceptions may expose sensitive information about the content model or URI paths to the schema file.","pos":[289,432],"source":"   > -   Schema validation error messages and exceptions may expose sensitive information about the content model or URI paths to the schema file."},{"content":"Be careful not to expose this information to untrusted callers.","pos":[433,496]},{"content":"The XmlSchemaValidator class provides an efficient, high-performance mechanism to validate XML data against XML schemas in a push-based manner.","pos":[503,646]},{"content":"For example, the XmlSchemaValidator class allows you to validate an XML infoset in-place without having to serialize it as an XML document and then reparse the document using a validating XML reader.","pos":[647,846]},{"content":"The XmlSchemaValidator class can also be used to build validation engines over custom XML data sources or as a way to build a validating XML writer.","pos":[847,995]},{"content":"For more information about the XmlSchemaValidator class, see the <bpt id=\"p1\">[</bpt>XmlSchemaValidator Push-Based Validation<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> topic.","pos":[1002,1155],"source":"       For more information about the XmlSchemaValidator class, see the [XmlSchemaValidator Push-Based Validation](~/add/includes/ajax-current-ext-md.md) topic."},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  The &lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; and &lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; validation flags of an XmlSchemaValidator object are not set be default.","pos":[1161,1359],"source":"      > [!IMPORTANT] >  The <xref:System.Xml.Schema.XmlSchemaValidationFlags> and <xref:System.Xml.Schema.XmlSchemaValidationFlags> validation flags of an XmlSchemaValidator object are not set be default."},{"content":"Additionally, the &lt;xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt; property of an XmlSchemaValidator object is <ph id=\"ph1\">`null`</ph> by default.","pos":[1360,1499],"source":" Additionally, the <xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A> property of an XmlSchemaValidator object is `null` by default."},{"content":"As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.","pos":[1500,1611]}]},{"pos":[6167,6265],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaValidator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xml.Schema.XmlSchemaValidator\"></xref> class."},{"pos":[6278,7908],"content":"The following are important notes to consider when using the XmlSchemaValidator constructor.      -   The contents of the <xref:System.Xml.Schema.XmlSchemaSet> parameter are copied into an internal <xref:System.Xml.Schema.XmlSchemaSet> object when the <xref:System.Xml.Schema.XmlSchemaValidationFlags> or the <xref:System.Xml.Schema.XmlSchemaValidationFlags> validation options are set. As a result, changes to the input <xref:System.Xml.Schema.XmlSchemaSet> object during validation do not affect the outcome of validation.      -   If the <xref:System.Xml.Schema.XmlSchemaSet> parameter specified is not compiled, its <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> method is called.      -   The <xref:System.Xml.IXmlNamespaceResolver> parameter is especially important for validating `xs:QName` types. The <xref:System.Xml.Schema.XmlSchemaValidator> class does not copy the in-scope namespaces from the <xref:System.Xml.IXmlNamespaceResolver> object but instead holds a reference to it. This allows new namespaces to be added to the <xref:System.Xml.IXmlNamespaceResolver> object during the validation process.      > [!IMPORTANT] >  The <xref:System.Xml.Schema.XmlSchemaValidationFlags> and <xref:System.Xml.Schema.XmlSchemaValidationFlags> validation flags of an <xref:System.Xml.Schema.XmlSchemaValidator> object are not set be default. Additionally, the <xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A> property of an <xref:System.Xml.Schema.XmlSchemaValidator> object is `null` by default. As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The following are important notes to consider when using the XmlSchemaValidator constructor.","pos":[0,92]},{"content":"-   The contents of the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; parameter are copied into an internal &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; object when the &lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; or the &lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; validation options are set.","pos":[98,386],"source":"      -   The contents of the <xref:System.Xml.Schema.XmlSchemaSet> parameter are copied into an internal <xref:System.Xml.Schema.XmlSchemaSet> object when the <xref:System.Xml.Schema.XmlSchemaValidationFlags> or the <xref:System.Xml.Schema.XmlSchemaValidationFlags> validation options are set."},{"content":"As a result, changes to the input &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; object during validation do not affect the outcome of validation.","pos":[387,524],"source":" As a result, changes to the input <xref:System.Xml.Schema.XmlSchemaSet> object during validation do not affect the outcome of validation."},{"content":"-   If the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; parameter specified is not compiled, its &lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt; method is called.","pos":[530,686],"source":"      -   If the <xref:System.Xml.Schema.XmlSchemaSet> parameter specified is not compiled, its <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> method is called."},{"content":"-   The &lt;xref:System.Xml.IXmlNamespaceResolver&gt; parameter is especially important for validating <ph id=\"ph1\">`xs:QName`</ph> types.","pos":[692,806],"source":"      -   The <xref:System.Xml.IXmlNamespaceResolver> parameter is especially important for validating `xs:QName` types."},{"content":"The &lt;xref:System.Xml.Schema.XmlSchemaValidator&gt; class does not copy the in-scope namespaces from the &lt;xref:System.Xml.IXmlNamespaceResolver&gt; object but instead holds a reference to it.","pos":[807,991],"source":" The <xref:System.Xml.Schema.XmlSchemaValidator> class does not copy the in-scope namespaces from the <xref:System.Xml.IXmlNamespaceResolver> object but instead holds a reference to it."},{"content":"This allows new namespaces to be added to the &lt;xref:System.Xml.IXmlNamespaceResolver&gt; object during the validation process.","pos":[992,1115],"source":" This allows new namespaces to be added to the <xref:System.Xml.IXmlNamespaceResolver> object during the validation process."},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  The &lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; and &lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; validation flags of an &lt;xref:System.Xml.Schema.XmlSchemaValidator&gt; object are not set be default.","pos":[1121,1344],"source":"      > [!IMPORTANT] >  The <xref:System.Xml.Schema.XmlSchemaValidationFlags> and <xref:System.Xml.Schema.XmlSchemaValidationFlags> validation flags of an <xref:System.Xml.Schema.XmlSchemaValidator> object are not set be default."},{"content":"Additionally, the &lt;xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt; property of an &lt;xref:System.Xml.Schema.XmlSchemaValidator&gt; object is <ph id=\"ph1\">`null`</ph> by default.","pos":[1345,1509],"source":" Additionally, the <xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A> property of an <xref:System.Xml.Schema.XmlSchemaValidator> object is `null` by default."},{"content":"As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.","pos":[1510,1621]}]},{"pos":[8383,8483],"content":"An <xref:System.Xml.XmlNameTable> object containing element and attribute names as atomized strings.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Xml.XmlNameTable&gt; object containing element and attribute names as atomized strings.","pos":[0,100],"source":"An <xref:System.Xml.XmlNameTable> object containing element and attribute names as atomized strings."}]},{"pos":[8564,8706],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object containing the XML Schema Definition Language (XSD) schemas used for validation.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> object containing the XML Schema Definition Language (XSD) schemas used for validation."},{"pos":[8799,8909],"content":"An <xref:System.Xml.IXmlNamespaceResolver> object used for resolving namespaces encountered during validation.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Xml.IXmlNamespaceResolver&gt; object used for resolving namespaces encountered during validation.","pos":[0,110],"source":"An <xref:System.Xml.IXmlNamespaceResolver> object used for resolving namespaces encountered during validation."}]},{"pos":[9010,9120],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaValidationFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value specifying schema validation options.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Xml.Schema.XmlSchemaValidationFlags\"></xref> value specifying schema validation options."},{"pos":[9293,9398],"content":"One or more of the parameters specified are <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"One or more of the parameters specified are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[9517,9628],"content":"An error occurred while compiling schemas in the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"An error occurred while compiling schemas in the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> parameter."},{"pos":[10088,10182],"content":"Adds an XML Schema Definition Language (XSD) schema to the set of schemas used for validation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds an XML Schema Definition Language (XSD) schema to the set of schemas used for validation.","pos":[0,94]}]},{"pos":[10195,10756],"content":"The following are important notes to consider when using the AddSchema method.      -   The AddSchema method can be used to simulate the effect of encountering an inline XML schema in the XML document being validated.      -   The target namespace of the <xref:System.Xml.Schema.XmlSchema> parameter cannot match that of any element or attribute already encountered by the <xref:System.Xml.Schema.XmlSchemaValidator> object.      -   If the <xref:System.Xml.Schema.XmlSchemaValidationFlags> validation option is not set, the AddSchema method does nothing.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The following are important notes to consider when using the AddSchema method.      -   The AddSchema method can be used to simulate the effect of encountering an inline XML schema in the XML document being validated.      -   The target namespace of the <xref:System.Xml.Schema.XmlSchema> parameter cannot match that of any element or attribute already encountered by the <xref:System.Xml.Schema.XmlSchemaValidator> object.      -   If the <xref:System.Xml.Schema.XmlSchemaValidationFlags> validation option is not set, the AddSchema method does nothing.","pos":[0,555],"nodes":[{"content":"The following are important notes to consider when using the AddSchema method.","pos":[0,78]},{"content":"-   The AddSchema method can be used to simulate the effect of encountering an inline XML schema in the XML document being validated.","pos":[84,217]},{"content":"-   The target namespace of the &lt;xref:System.Xml.Schema.XmlSchema&gt; parameter cannot match that of any element or attribute already encountered by the &lt;xref:System.Xml.Schema.XmlSchemaValidator&gt; object.","pos":[223,424],"source":"      -   The target namespace of the <xref:System.Xml.Schema.XmlSchema> parameter cannot match that of any element or attribute already encountered by the <xref:System.Xml.Schema.XmlSchemaValidator> object."},{"content":"-   If the &lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; validation option is not set, the AddSchema method does nothing.","pos":[430,555],"source":"      -   If the <xref:System.Xml.Schema.XmlSchemaValidationFlags> validation option is not set, the AddSchema method does nothing."}]}]},{"pos":[10933,11027],"content":"An <xref:System.Xml.Schema.XmlSchema> object to add to the set of schemas used for validation.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Xml.Schema.XmlSchema&gt; object to add to the set of schemas used for validation.","pos":[0,94],"source":"An <xref:System.Xml.Schema.XmlSchema> object to add to the set of schemas used for validation."}]},{"pos":[11204,11327],"content":"The &lt;xref:System.Xml.Schema.XmlSchema&gt; parameter specified is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Xml.Schema.XmlSchema> parameter specified is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[11466,11672],"content":"The target namespace of the &lt;xref:System.Xml.Schema.XmlSchema&gt; parameter matches that of any element or attribute already encountered by the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaValidator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The target namespace of the <xref:System.Xml.Schema.XmlSchema> parameter matches that of any element or attribute already encountered by the <xref href=\"System.Xml.Schema.XmlSchemaValidator\"></xref> object."},{"pos":[11791,11851],"content":"The <xref:System.Xml.Schema.XmlSchema> parameter is invalid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Xml.Schema.XmlSchema&gt; parameter is invalid.","pos":[0,60],"source":"The <xref:System.Xml.Schema.XmlSchema> parameter is invalid."}]},{"pos":[12246,12322],"content":"Ends validation and checks identity constraints for the entire XML document.","needQuote":true,"needEscape":true,"nodes":[{"content":"Ends validation and checks identity constraints for the entire XML document.","pos":[0,76]}]},{"pos":[12334,12517],"content":"The EndValidation method ends validation and checks identity constraints for the entire XML document if the <xref:System.Xml.Schema.XmlSchemaValidationFlags> validation option is set.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The EndValidation method ends validation and checks identity constraints for the entire XML document if the &lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; validation option is set.","pos":[0,183],"source":"The EndValidation method ends validation and checks identity constraints for the entire XML document if the <xref:System.Xml.Schema.XmlSchemaValidationFlags> validation option is set."}]},{"pos":[12806,12865],"content":"An identity constraint error was found in the XML document.","needQuote":true,"needEscape":true,"nodes":[{"content":"An identity constraint error was found in the XML document.","pos":[0,59]}]},{"pos":[13300,13364],"content":"Returns the expected attributes for the current element context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the expected attributes for the current element context.","pos":[0,64]}]},{"pos":[13377,13934],"content":"The following are important notes to consider when using the GetExpectedAttributes method.      -   If the GetExpectedAttributes method is called immediately after the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A> method, all the attributes that could appear in the XML document are returned.      -   If the GetExpectedAttributes method is called after one or more calls to the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> method, the attributes that haven't yet been validated for the current element are returned.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The following are important notes to consider when using the GetExpectedAttributes method.      -   If the GetExpectedAttributes method is called immediately after the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A> method, all the attributes that could appear in the XML document are returned.      -   If the GetExpectedAttributes method is called after one or more calls to the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> method, the attributes that haven't yet been validated for the current element are returned.","pos":[0,553],"nodes":[{"content":"The following are important notes to consider when using the GetExpectedAttributes method.","pos":[0,90]},{"content":"-   If the GetExpectedAttributes method is called immediately after the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A&gt; method, all the attributes that could appear in the XML document are returned.","pos":[96,309],"source":"      -   If the GetExpectedAttributes method is called immediately after the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A> method, all the attributes that could appear in the XML document are returned."},{"content":"-   If the GetExpectedAttributes method is called after one or more calls to the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt; method, the attributes that haven't yet been validated for the current element are returned.","pos":[315,553],"source":"      -   If the GetExpectedAttributes method is called after one or more calls to the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> method, the attributes that haven't yet been validated for the current element are returned."}]}]},{"pos":[14132,14264],"content":"An array of <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects or an empty array if there are no expected attributes.","needQuote":true,"needEscape":true,"source":"An array of <xref href=\"System.Xml.Schema.XmlSchemaAttribute\"></xref> objects or an empty array if there are no expected attributes."},{"pos":[14783,14845],"content":"Returns the expected particles in the current element context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the expected particles in the current element context.","pos":[0,62]}]},{"pos":[14858,20515],"content":"The valid particles that can be returned by the GetExpectedParticles method are instances of the <xref:System.Xml.Schema.XmlSchemaElement> and <xref:System.Xml.Schema.XmlSchemaAny> classes.       When the compositor for the content model is an `xs:sequence`, only the next particle in the sequence is returned. If the compositor for the content model is an `xs:all` or an `xs:choice`, then all valid particles that could follow in the current element context are returned.       For example, in the XML Schema Definition Language (XSD) schema and XML document that follow, after validating the `book` element, the `book` element is the current element context. The GetExpectedParticles method returns an array containing a single <xref:System.Xml.Schema.XmlSchemaElement> object representing the `title` element. When the validation context is the `title` element, the GetExpectedParticles method returns an empty array. If the GetExpectedParticles method is called after the `title` element has been validated but before the `description` element has been validated, it returns an array containing a single <xref:System.Xml.Schema.XmlSchemaElement> object representing the `description` element. If the GetExpectedParticles method is called after the `description` element has been validated then it returns an array containing a single <xref:System.Xml.Schema.XmlSchemaAny> object representing the wildcard.      ```vb#   Dim reader As XmlReader =  XmlReader.Create(\"input.xml\")       Dim schemaSet As XmlSchemaSet =  New XmlSchemaSet()    schemaSet.Add(Nothing, \"schema.xsd\")   Dim manager As XmlNamespaceManager =  New XmlNamespaceManager(reader.NameTable)       Dim validator As XmlSchemaValidator =  New XmlSchemaValidator(reader.NameTable,schemaSet,manager,XmlSchemaValidationFlags.None)   validator.Initialize()      validator.ValidateElement(\"book\", \"\", Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   For Each element As XmlSchemaElement In validator.GetExpectedParticles()       Console.WriteLine(element.Name)   Next      validator.ValidateElement(\"title\", \"\", Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   For Each element As XmlSchemaElement In validator.GetExpectedParticles()       Console.WriteLine(element.Name)   Next   validator.ValidateEndElement(Nothing)      For Each element As XmlSchemaElement In validator.GetExpectedParticles()       Console.WriteLine(element.Name)   Next      validator.ValidateElement(\"description\", \"\", Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   validator.ValidateEndElement(Nothing)      For Each particle As XmlSchemaParticle In validator.GetExpectedParticles()       Console.WriteLine(particle.GetType())   Next      validator.ValidateElement(\"namespace\", \"\", Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   validator.ValidateEndElement(Nothing)      validator.ValidateEndElement(Nothing)   ```      ```c#   XmlReader reader = XmlReader.Create(\"input.xml\");      XmlSchemaSet schemaSet = new XmlSchemaSet();   schemaSet.Add(null, \"schema.xsd\");   XmlNamespaceManager manager = new XmlNamespaceManager(reader.NameTable);      XmlSchemaValidator validator = new XmlSchemaValidator(reader.NameTable, schemaSet, manager, XmlSchemaValidationFlags.None);   validator.Initialize();      validator.ValidateElement(\"book\", \"\", null);      validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   foreach (XmlSchemaElement element in validator.GetExpectedParticles())   {       Console.WriteLine(element.Name);   }      validator.ValidateElement(\"title\", \"\", null);   validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   foreach (XmlSchemaElement element in validator.GetExpectedParticles())   {       Console.WriteLine(element.Name);   }   validator.ValidateEndElement(null);      foreach (XmlSchemaElement element in validator.GetExpectedParticles())   {       Console.WriteLine(element.Name);   }      validator.ValidateElement(\"description\", \"\", null);   validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   validator.ValidateEndElement(null);      foreach (XmlSchemaParticle particle in validator.GetExpectedParticles())   {       Console.WriteLine(particle.GetType());   }      validator.ValidateElement(\"namespace\", \"\", null);   validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   validator.ValidateEndElement(null);      validator.ValidateEndElement(null);   ```       The example takes the following XML as input.       `<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">`       `<xs:element name=\"book\">`       `<xs:complexType>`       `<xs:sequence>`       `<xs:element name=\"title\" type=\"xs:string\" />`       `<xs:element name=\"description\" type=\"xs:string\" />`       `<xs:any processContents =\"lax\"/>`       `</xs:sequence>`       `</xs:complexType>`       `</xs:element>`       `</xs:schema>`       The example takes the following XSD schema as input.       `<book>`       `<title>My Book</title>`       `<description>My Book's Description</description>`       `<namespace>System.Xml.Schema</namespace>`       `</book>`","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The valid particles that can be returned by the GetExpectedParticles method are instances of the &lt;xref:System.Xml.Schema.XmlSchemaElement&gt; and &lt;xref:System.Xml.Schema.XmlSchemaAny&gt; classes.","pos":[0,189],"source":"The valid particles that can be returned by the GetExpectedParticles method are instances of the <xref:System.Xml.Schema.XmlSchemaElement> and <xref:System.Xml.Schema.XmlSchemaAny> classes."},{"content":"When the compositor for the content model is an <ph id=\"ph1\">`xs:sequence`</ph>, only the next particle in the sequence is returned.","pos":[196,310],"source":"       When the compositor for the content model is an `xs:sequence`, only the next particle in the sequence is returned."},{"content":"If the compositor for the content model is an <ph id=\"ph1\">`xs:all`</ph> or an <ph id=\"ph2\">`xs:choice`</ph>, then all valid particles that could follow in the current element context are returned.","pos":[311,472],"source":" If the compositor for the content model is an `xs:all` or an `xs:choice`, then all valid particles that could follow in the current element context are returned."},{"content":"For example, in the XML Schema Definition Language (XSD) schema and XML document that follow, after validating the <ph id=\"ph1\">`book`</ph> element, the <ph id=\"ph2\">`book`</ph> element is the current element context.","pos":[479,660],"source":"       For example, in the XML Schema Definition Language (XSD) schema and XML document that follow, after validating the `book` element, the `book` element is the current element context."},{"content":"The GetExpectedParticles method returns an array containing a single &lt;xref:System.Xml.Schema.XmlSchemaElement&gt; object representing the <ph id=\"ph1\">`title`</ph> element.","pos":[661,812],"source":" The GetExpectedParticles method returns an array containing a single <xref:System.Xml.Schema.XmlSchemaElement> object representing the `title` element."},{"content":"When the validation context is the <ph id=\"ph1\">`title`</ph> element, the GetExpectedParticles method returns an empty array.","pos":[813,920],"source":" When the validation context is the `title` element, the GetExpectedParticles method returns an empty array."},{"content":"If the GetExpectedParticles method is called after the <ph id=\"ph1\">`title`</ph> element has been validated but before the <ph id=\"ph2\">`description`</ph> element has been validated, it returns an array containing a single &lt;xref:System.Xml.Schema.XmlSchemaElement&gt; object representing the <ph id=\"ph3\">`description`</ph> element.","pos":[921,1196],"source":" If the GetExpectedParticles method is called after the `title` element has been validated but before the `description` element has been validated, it returns an array containing a single <xref:System.Xml.Schema.XmlSchemaElement> object representing the `description` element."},{"content":"If the GetExpectedParticles method is called after the <ph id=\"ph1\">`description`</ph> element has been validated then it returns an array containing a single &lt;xref:System.Xml.Schema.XmlSchemaAny&gt; object representing the wildcard.","pos":[1197,1409],"source":" If the GetExpectedParticles method is called after the `description` element has been validated then it returns an array containing a single <xref:System.Xml.Schema.XmlSchemaAny> object representing the wildcard."},{"content":"<ph id=\"ph1\">```vb#   Dim reader As XmlReader =  XmlReader.Create(\"input.xml\")       Dim schemaSet As XmlSchemaSet =  New XmlSchemaSet()    schemaSet.Add(Nothing, \"schema.xsd\")   Dim manager As XmlNamespaceManager =  New XmlNamespaceManager(reader.NameTable)       Dim validator As XmlSchemaValidator =  New XmlSchemaValidator(reader.NameTable,schemaSet,manager,XmlSchemaValidationFlags.None)   validator.Initialize()      validator.ValidateElement(\"book\", \"\", Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   For Each element As XmlSchemaElement In validator.GetExpectedParticles()       Console.WriteLine(element.Name)   Next      validator.ValidateElement(\"title\", \"\", Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   For Each element As XmlSchemaElement In validator.GetExpectedParticles()       Console.WriteLine(element.Name)   Next   validator.ValidateEndElement(Nothing)      For Each element As XmlSchemaElement In validator.GetExpectedParticles()       Console.WriteLine(element.Name)   Next      validator.ValidateElement(\"description\", \"\", Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   validator.ValidateEndElement(Nothing)      For Each particle As XmlSchemaParticle In validator.GetExpectedParticles()       Console.WriteLine(particle.GetType())   Next      validator.ValidateElement(\"namespace\", \"\", Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   validator.ValidateEndElement(Nothing)      validator.ValidateEndElement(Nothing)   ```</ph>      <ph id=\"ph2\">```c#   XmlReader reader = XmlReader.Create(\"input.xml\");      XmlSchemaSet schemaSet = new XmlSchemaSet();   schemaSet.Add(null, \"schema.xsd\");   XmlNamespaceManager manager = new XmlNamespaceManager(reader.NameTable);      XmlSchemaValidator validator = new XmlSchemaValidator(reader.NameTable, schemaSet, manager, XmlSchemaValidationFlags.None);   validator.Initialize();      validator.ValidateElement(\"book\", \"\", null);      validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   foreach (XmlSchemaElement element in validator.GetExpectedParticles())   {       Console.WriteLine(element.Name);   }      validator.ValidateElement(\"title\", \"\", null);   validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   foreach (XmlSchemaElement element in validator.GetExpectedParticles())   {       Console.WriteLine(element.Name);   }   validator.ValidateEndElement(null);      foreach (XmlSchemaElement element in validator.GetExpectedParticles())   {       Console.WriteLine(element.Name);   }      validator.ValidateElement(\"description\", \"\", null);   validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   validator.ValidateEndElement(null);      foreach (XmlSchemaParticle particle in validator.GetExpectedParticles())   {       Console.WriteLine(particle.GetType());   }      validator.ValidateElement(\"namespace\", \"\", null);   validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   validator.ValidateEndElement(null);      validator.ValidateEndElement(null);   ```</ph>       The example takes the following XML as input.","pos":[1415,4850],"source":"```vb#   Dim reader As XmlReader =  XmlReader.Create(\"input.xml\")       Dim schemaSet As XmlSchemaSet =  New XmlSchemaSet()    schemaSet.Add(Nothing, \"schema.xsd\")   Dim manager As XmlNamespaceManager =  New XmlNamespaceManager(reader.NameTable)       Dim validator As XmlSchemaValidator =  New XmlSchemaValidator(reader.NameTable,schemaSet,manager,XmlSchemaValidationFlags.None)   validator.Initialize()      validator.ValidateElement(\"book\", \"\", Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   For Each element As XmlSchemaElement In validator.GetExpectedParticles()       Console.WriteLine(element.Name)   Next      validator.ValidateElement(\"title\", \"\", Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   For Each element As XmlSchemaElement In validator.GetExpectedParticles()       Console.WriteLine(element.Name)   Next   validator.ValidateEndElement(Nothing)      For Each element As XmlSchemaElement In validator.GetExpectedParticles()       Console.WriteLine(element.Name)   Next      validator.ValidateElement(\"description\", \"\", Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   validator.ValidateEndElement(Nothing)      For Each particle As XmlSchemaParticle In validator.GetExpectedParticles()       Console.WriteLine(particle.GetType())   Next      validator.ValidateElement(\"namespace\", \"\", Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   validator.ValidateEndElement(Nothing)      validator.ValidateEndElement(Nothing)   ```      ```c#   XmlReader reader = XmlReader.Create(\"input.xml\");      XmlSchemaSet schemaSet = new XmlSchemaSet();   schemaSet.Add(null, \"schema.xsd\");   XmlNamespaceManager manager = new XmlNamespaceManager(reader.NameTable);      XmlSchemaValidator validator = new XmlSchemaValidator(reader.NameTable, schemaSet, manager, XmlSchemaValidationFlags.None);   validator.Initialize();      validator.ValidateElement(\"book\", \"\", null);      validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   foreach (XmlSchemaElement element in validator.GetExpectedParticles())   {       Console.WriteLine(element.Name);   }      validator.ValidateElement(\"title\", \"\", null);   validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   foreach (XmlSchemaElement element in validator.GetExpectedParticles())   {       Console.WriteLine(element.Name);   }   validator.ValidateEndElement(null);      foreach (XmlSchemaElement element in validator.GetExpectedParticles())   {       Console.WriteLine(element.Name);   }      validator.ValidateElement(\"description\", \"\", null);   validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   validator.ValidateEndElement(null);      foreach (XmlSchemaParticle particle in validator.GetExpectedParticles())   {       Console.WriteLine(particle.GetType());   }      validator.ValidateElement(\"namespace\", \"\", null);   validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   validator.ValidateEndElement(null);      validator.ValidateEndElement(null);   ```       The example takes the following XML as input."},{"content":"<ph id=\"ph1\">`&lt;xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"&gt;`</ph>       <ph id=\"ph2\">`&lt;xs:element name=\"book\"&gt;`</ph>       <ph id=\"ph3\">`&lt;xs:complexType&gt;`</ph>       <ph id=\"ph4\">`&lt;xs:sequence&gt;`</ph>       <ph id=\"ph5\">`&lt;xs:element name=\"title\" type=\"xs:string\" /&gt;`</ph>       <ph id=\"ph6\">`&lt;xs:element name=\"description\" type=\"xs:string\" /&gt;`</ph>       <ph id=\"ph7\">`&lt;xs:any processContents =\"lax\"/&gt;`</ph>       <ph id=\"ph8\">`&lt;/xs:sequence&gt;`</ph>       <ph id=\"ph9\">`&lt;/xs:complexType&gt;`</ph>       <ph id=\"ph10\">`&lt;/xs:element&gt;`</ph>       <ph id=\"ph11\">`&lt;/xs:schema&gt;`</ph>       The example takes the following XSD schema as input.","pos":[4857,5298],"source":"`<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">`       `<xs:element name=\"book\">`       `<xs:complexType>`       `<xs:sequence>`       `<xs:element name=\"title\" type=\"xs:string\" />`       `<xs:element name=\"description\" type=\"xs:string\" />`       `<xs:any processContents =\"lax\"/>`       `</xs:sequence>`       `</xs:complexType>`       `</xs:element>`       `</xs:schema>`       The example takes the following XSD schema as input."},{"content":"<ph id=\"ph1\">`&lt;book&gt;`</ph>       <ph id=\"ph2\">`&lt;title&gt;My Book&lt;/title&gt;`</ph>       <ph id=\"ph3\">`&lt;description&gt;My Book's Description&lt;/description&gt;`</ph>       <ph id=\"ph4\">`&lt;namespace&gt;System.Xml.Schema&lt;/namespace&gt;`</ph>       <ph id=\"ph5\">`&lt;/book&gt;`</ph>","pos":[5305,5466],"source":"`<book>`       `<title>My Book</title>`       `<description>My Book's Description</description>`       `<namespace>System.Xml.Schema</namespace>`       `</book>`"}]},{"pos":[20710,20840],"content":"An array of <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaParticle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects or an empty array if there are no expected particles.","needQuote":true,"needEscape":true,"source":"An array of <xref href=\"System.Xml.Schema.XmlSchemaParticle\"></xref> objects or an empty array if there are no expected particles."},{"pos":[21500,21888],"content":"Validates identity constraints on the default attributes and populates the <bpt id=\"p1\">&lt;xref href=\"System.Collections.ArrayList\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> specified with <bpt id=\"p2\">&lt;xref href=\"System.Xml.Schema.XmlSchemaAttribute\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects for any attributes with default values that have not been previously validated using the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt; method in the element context.","needQuote":true,"needEscape":true,"source":"Validates identity constraints on the default attributes and populates the <xref href=\"System.Collections.ArrayList\"></xref> specified with <xref href=\"System.Xml.Schema.XmlSchemaAttribute\"></xref> objects for any attributes with default values that have not been previously validated using the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*> method in the element context."},{"pos":[21900,22252],"content":"The GetUnspecifiedDefaultAttributes method must be called after validating all the attributes for the current element with the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> method. The GetUnspecifiedDefaultAttributes method should be used to determine what default attributes are to be inserted into the XML document being validated.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetUnspecifiedDefaultAttributes method must be called after validating all the attributes for the current element with the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> method. The GetUnspecifiedDefaultAttributes method should be used to determine what default attributes are to be inserted into the XML document being validated.","pos":[0,352],"nodes":[{"content":"The GetUnspecifiedDefaultAttributes method must be called after validating all the attributes for the current element with the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt; method.","pos":[0,199],"source":"The GetUnspecifiedDefaultAttributes method must be called after validating all the attributes for the current element with the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> method."},{"content":"The GetUnspecifiedDefaultAttributes method should be used to determine what default attributes are to be inserted into the XML document being validated.","pos":[200,352]}]}]},{"pos":[22474,22690],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Collections.ArrayList\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to populate with <bpt id=\"p2\">&lt;xref href=\"System.Xml.Schema.XmlSchemaAttribute\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects for any attributes not yet encountered during validation in the element context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Collections.ArrayList\"></xref> to populate with <xref href=\"System.Xml.Schema.XmlSchemaAttribute\"></xref> objects for any attributes not yet encountered during validation in the element context."},{"pos":[23169,23263],"content":"Initializes the state of the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaValidator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Initializes the state of the <xref href=\"System.Xml.Schema.XmlSchemaValidator\"></xref> object."},{"pos":[23275,23493],"content":"The Initialize method is only valid if called immediately after the construction of an <xref:System.Xml.Schema.XmlSchemaValidator> object or after a call to <xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Initialize method is only valid if called immediately after the construction of an &lt;xref:System.Xml.Schema.XmlSchemaValidator&gt; object or after a call to &lt;xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A&gt;.","pos":[0,218],"source":"The Initialize method is only valid if called immediately after the construction of an <xref:System.Xml.Schema.XmlSchemaValidator> object or after a call to <xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A>."}]},{"pos":[24621,24894],"content":"Calling the &lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize<bpt id=\"p1\">*</bpt>&gt; method is valid immediately after the construction of an <bpt id=\"p2\">&lt;xref href=\"System.Xml.Schema.XmlSchemaValidator\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object or after a call to &lt;xref:System.Xml.Schema.XmlSchemaValidator.EndValidation<ept id=\"p1\">*</ept>&gt; only.","needQuote":true,"needEscape":true,"source":"Calling the <xref:System.Xml.Schema.XmlSchemaValidator.Initialize*> method is valid immediately after the construction of an <xref href=\"System.Xml.Schema.XmlSchemaValidator\"></xref> object or after a call to <xref:System.Xml.Schema.XmlSchemaValidator.EndValidation*> only."},{"pos":[25389,25581],"content":"Initializes the state of the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaValidator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object using the <bpt id=\"p2\">&lt;xref href=\"System.Xml.Schema.XmlSchemaObject\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> specified for partial validation.","needQuote":true,"needEscape":true,"source":"Initializes the state of the <xref href=\"System.Xml.Schema.XmlSchemaValidator\"></xref> object using the <xref href=\"System.Xml.Schema.XmlSchemaObject\"></xref> specified for partial validation."},{"pos":[25593,25796],"content":"The Initialize method that takes an <xref:System.Xml.Schema.XmlSchemaObject> as a parameter initializes an <xref:System.Xml.Schema.XmlSchemaValidator> object to its starting state for partial validation.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Initialize method that takes an &lt;xref:System.Xml.Schema.XmlSchemaObject&gt; as a parameter initializes an &lt;xref:System.Xml.Schema.XmlSchemaValidator&gt; object to its starting state for partial validation.","pos":[0,203],"source":"The Initialize method that takes an <xref:System.Xml.Schema.XmlSchemaObject> as a parameter initializes an <xref:System.Xml.Schema.XmlSchemaValidator> object to its starting state for partial validation."}]},{"pos":[28225,28544],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, <bpt id=\"p2\">&lt;xref href=\"System.Xml.Schema.XmlSchemaAttribute\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, or <bpt id=\"p3\">&lt;xref href=\"System.Xml.Schema.XmlSchemaType\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> object used to initialize the validation context of the <bpt id=\"p4\">&lt;xref href=\"System.Xml.Schema.XmlSchemaValidator\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> object for partial validation.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Xml.Schema.XmlSchemaElement\"></xref>, <xref href=\"System.Xml.Schema.XmlSchemaAttribute\"></xref>, or <xref href=\"System.Xml.Schema.XmlSchemaType\"></xref> object used to initialize the validation context of the <xref href=\"System.Xml.Schema.XmlSchemaValidator\"></xref> object for partial validation."},{"pos":[28730,29003],"content":"Calling the &lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize<bpt id=\"p1\">*</bpt>&gt; method is valid immediately after the construction of an <bpt id=\"p2\">&lt;xref href=\"System.Xml.Schema.XmlSchemaValidator\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object or after a call to &lt;xref:System.Xml.Schema.XmlSchemaValidator.EndValidation<ept id=\"p1\">*</ept>&gt; only.","needQuote":true,"needEscape":true,"source":"Calling the <xref:System.Xml.Schema.XmlSchemaValidator.Initialize*> method is valid immediately after the construction of an <xref href=\"System.Xml.Schema.XmlSchemaValidator\"></xref> object or after a call to <xref:System.Xml.Schema.XmlSchemaValidator.EndValidation*> only."},{"pos":[29098,29356],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaObject\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameter is not an <bpt id=\"p2\">&lt;xref href=\"System.Xml.Schema.XmlSchemaElement\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, <bpt id=\"p3\">&lt;xref href=\"System.Xml.Schema.XmlSchemaAttribute\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, or <bpt id=\"p4\">&lt;xref href=\"System.Xml.Schema.XmlSchemaType\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Xml.Schema.XmlSchemaObject\"></xref> parameter is not an <xref href=\"System.Xml.Schema.XmlSchemaElement\"></xref>, <xref href=\"System.Xml.Schema.XmlSchemaAttribute\"></xref>, or <xref href=\"System.Xml.Schema.XmlSchemaType\"></xref> object."},{"pos":[29459,29599],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaObject\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameter cannot be <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Xml.Schema.XmlSchemaObject\"></xref> parameter cannot be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[30005,30079],"content":"Gets or sets the line number information for the XML node being validated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the line number information for the XML node being validated.","pos":[0,74]}]},{"pos":[30092,30452],"content":"-   Line information is reported by any <xref:System.Xml.Schema.XmlSchemaValidationException> thrown during the validation process.      -   The default <xref:System.Xml.IXmlLineInfo> object returned by the LineInfoProvider property returns 0 for the <xref:System.Xml.IXmlLineInfo.LineNumber%2A> and <xref:System.Xml.IXmlLineInfo.LinePosition%2A> properties.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Line information is reported by any <xref:System.Xml.Schema.XmlSchemaValidationException> thrown during the validation process.      -   The default <xref:System.Xml.IXmlLineInfo> object returned by the LineInfoProvider property returns 0 for the <xref:System.Xml.IXmlLineInfo.LineNumber%2A> and <xref:System.Xml.IXmlLineInfo.LinePosition%2A> properties.","pos":[4,358],"nodes":[{"content":"Line information is reported by any &lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt; thrown during the validation process.","pos":[0,127],"source":"Line information is reported by any <xref:System.Xml.Schema.XmlSchemaValidationException> thrown during the validation process."},{"content":"-   The default &lt;xref:System.Xml.IXmlLineInfo&gt; object returned by the LineInfoProvider property returns 0 for the &lt;xref:System.Xml.IXmlLineInfo.LineNumber%2A&gt; and &lt;xref:System.Xml.IXmlLineInfo.LinePosition%2A&gt; properties.","pos":[133,354],"source":"      -   The default <xref:System.Xml.IXmlLineInfo> object returned by the LineInfoProvider property returns 0 for the <xref:System.Xml.IXmlLineInfo.LineNumber%2A> and <xref:System.Xml.IXmlLineInfo.LinePosition%2A> properties."}]}]},{"pos":[30606,30647],"content":"An <xref:System.Xml.IXmlLineInfo> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Xml.IXmlLineInfo&gt; object.","pos":[0,41],"source":"An <xref:System.Xml.IXmlLineInfo> object."}]},{"pos":[31246,31428],"content":"Skips validation of the current element content and prepares the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaValidator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to validate content in the parent element's context.","needQuote":true,"needEscape":true,"source":"Skips validation of the current element content and prepares the <xref href=\"System.Xml.Schema.XmlSchemaValidator\"></xref> object to validate content in the parent element's context."},{"pos":[31441,32236],"content":"The following are important notes to consider when using the SkipToEndElement method.      -   The SkipToEndElement method skips validation of the current element content and prepares the <xref:System.Xml.Schema.XmlSchemaValidator> object to validate content in the parent element's context; it is equivalent to skipping validation for all the children of the current element and then calling the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method.      -   If the current element content is successfully skipped, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> property is set to <xref:System.Xml.Schema.XmlSchemaValidity>.      > [!NOTE] >  No validation errors are reported on skipped content.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The following are important notes to consider when using the SkipToEndElement method.","pos":[0,85]},{"content":"-   The SkipToEndElement method skips validation of the current element content and prepares the &lt;xref:System.Xml.Schema.XmlSchemaValidator&gt; object to validate content in the parent element's context; it is equivalent to skipping validation for all the children of the current element and then calling the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt; method.","pos":[91,470],"source":"      -   The SkipToEndElement method skips validation of the current element content and prepares the <xref:System.Xml.Schema.XmlSchemaValidator> object to validate content in the parent element's context; it is equivalent to skipping validation for all the children of the current element and then calling the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method."},{"content":"-   If the current element content is successfully skipped, the &lt;xref:System.Xml.Schema.XmlSchemaInfo&gt; object's (if specified) &lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; property is set to &lt;xref:System.Xml.Schema.XmlSchemaValidity&gt;.","pos":[476,716],"source":"      -   If the current element content is successfully skipped, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> property is set to <xref:System.Xml.Schema.XmlSchemaValidity>."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  No validation errors are reported on skipped content.","pos":[722,788],"source":"      > [!NOTE] >  No validation errors are reported on skipped content."}]},{"pos":[32436,32663],"content":"An <xref href=\"System.Xml.Schema.XmlSchemaInfo\"></xref> object whose properties are set if the current element content is successfully skipped. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object whose properties are set if the current element content is successfully skipped.","pos":[0,143],"source":"An <xref href=\"System.Xml.Schema.XmlSchemaInfo\"></xref> object whose properties are set if the current element content is successfully skipped."},{"content":"This parameter can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[144,227],"source":" This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[32855,32992],"content":"The SkipToEndElement method was not called in the correct sequence. For example, calling SkipToEndElement after calling SkipToEndElement.","needQuote":true,"needEscape":true,"nodes":[{"content":"The SkipToEndElement method was not called in the correct sequence. For example, calling SkipToEndElement after calling SkipToEndElement.","pos":[0,137],"nodes":[{"content":"The SkipToEndElement method was not called in the correct sequence.","pos":[0,67]},{"content":"For example, calling SkipToEndElement after calling SkipToEndElement.","pos":[68,137]}]}]},{"pos":[33363,33424],"content":"Gets or sets the source URI for the XML node being validated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the source URI for the XML node being validated.","pos":[0,61]}]},{"pos":[33437,33710],"content":"-   The source URI is reported by any <xref:System.Xml.Schema.XmlSchemaValidationException> thrown during the validation process.      -   If the SourceUri property is not set, the file name for the XML document is <xref:System.String.Empty> in validation error messages.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The source URI is reported by any <xref:System.Xml.Schema.XmlSchemaValidationException> thrown during the validation process.      -   If the SourceUri property is not set, the file name for the XML document is <xref:System.String.Empty> in validation error messages.","pos":[4,271],"nodes":[{"content":"The source URI is reported by any &lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt; thrown during the validation process.","pos":[0,125],"source":"The source URI is reported by any <xref:System.Xml.Schema.XmlSchemaValidationException> thrown during the validation process."},{"content":"-   If the SourceUri property is not set, the file name for the XML document is &lt;xref:System.String.Empty&gt; in validation error messages.","pos":[131,267],"source":"      -   If the SourceUri property is not set, the file name for the XML document is <xref:System.String.Empty> in validation error messages."}]}]},{"pos":[33824,33989],"content":"A &lt;xref:System.Uri&gt; object representing the source URI for the XML node being validated; the default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref:System.Uri> object representing the source URI for the XML node being validated; the default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[34733,34819],"content":"Validates the attribute name, namespace URI, and value in the current element context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Validates the attribute name, namespace URI, and value in the current element context.","pos":[0,86]}]},{"pos":[34832,35875],"content":"The following are important notes to consider when using the ValidateAttribute method.      -   The <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> method must be called after validating all the attributes for the current element with the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> method.      -   If an <xref:System.Xml.Schema.XmlSchemaAttribute> object was passed to the <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> method, the ValidateAttribute method validates the attribute against the <xref:System.Xml.Schema.XmlSchemaAttribute> object.      -   If the attribute is successfully validated in the current element context, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, and <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> properties are set with the results of the validation.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The following are important notes to consider when using the ValidateAttribute method.      -   The <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> method must be called after validating all the attributes for the current element with the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> method.      -   If an <xref:System.Xml.Schema.XmlSchemaAttribute> object was passed to the <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> method, the ValidateAttribute method validates the attribute against the <xref:System.Xml.Schema.XmlSchemaAttribute> object.      -   If the attribute is successfully validated in the current element context, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, and <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> properties are set with the results of the validation.","pos":[0,1037],"nodes":[{"content":"The following are important notes to consider when using the ValidateAttribute method.","pos":[0,86]},{"content":"-   The &lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt; method must be called after validating all the attributes for the current element with the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt; method.","pos":[92,342],"source":"      -   The <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> method must be called after validating all the attributes for the current element with the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> method."},{"content":"-   If an &lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt; object was passed to the &lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt; method, the ValidateAttribute method validates the attribute against the &lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt; object.","pos":[348,609],"source":"      -   If an <xref:System.Xml.Schema.XmlSchemaAttribute> object was passed to the <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> method, the ValidateAttribute method validates the attribute against the <xref:System.Xml.Schema.XmlSchemaAttribute> object."},{"content":"-   If the attribute is successfully validated in the current element context, the &lt;xref:System.Xml.Schema.XmlSchemaInfo&gt; object's (if specified) &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A&gt;, &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;, &lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;, and &lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; properties are set with the results of the validation.","pos":[615,1037],"source":"      -   If the attribute is successfully validated in the current element context, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, and <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> properties are set with the results of the validation."}]}]},{"pos":[36986,37030],"content":"The local name of the attribute to validate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The local name of the attribute to validate.","pos":[0,44]}]},{"pos":[37099,37146],"content":"The namespace URI of the attribute to validate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The namespace URI of the attribute to validate.","pos":[0,47]}]},{"pos":[37217,37256],"content":"The value of the attribute to validate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the attribute to validate.","pos":[0,39]}]},{"pos":[37341,37555],"content":"An <xref href=\"System.Xml.Schema.XmlSchemaInfo\"></xref> object whose properties are set on successful validation of the attribute. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object whose properties are set on successful validation of the attribute.","pos":[0,130],"source":"An <xref href=\"System.Xml.Schema.XmlSchemaInfo\"></xref> object whose properties are set on successful validation of the attribute."},{"content":"This parameter can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[131,214],"source":" This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[37613,37645],"content":"The validated attribute's value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The validated attribute's value.","pos":[0,32]}]},{"pos":[37866,37924],"content":"The attribute is not valid in the current element context.","needQuote":true,"needEscape":true,"nodes":[{"content":"The attribute is not valid in the current element context.","pos":[0,58]}]},{"pos":[38035,38316],"content":"The &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute<bpt id=\"p1\">*</bpt>&gt; method was not called in the correct sequence. For example, calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute<ept id=\"p1\">*</ept>&gt; after calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*&gt;.","needQuote":true,"needEscape":true,"source":"The <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*> method was not called in the correct sequence. For example, calling <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*> after calling <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*>."},{"pos":[38419,38524],"content":"One or more of the parameters specified are <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"One or more of the parameters specified are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[39253,39339],"content":"Validates the attribute name, namespace URI, and value in the current element context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Validates the attribute name, namespace URI, and value in the current element context.","pos":[0,86]}]},{"pos":[39352,40395],"content":"The following are important notes to consider when using the ValidateAttribute method.      -   The <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> method must be called after validating all the attributes for the current element with the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> method.      -   If an <xref:System.Xml.Schema.XmlSchemaAttribute> object was passed to the <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> method, the ValidateAttribute method validates the attribute against the <xref:System.Xml.Schema.XmlSchemaAttribute> object.      -   If the attribute is successfully validated in the current element context, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, and <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> properties are set with the results of the validation.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The following are important notes to consider when using the ValidateAttribute method.      -   The <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> method must be called after validating all the attributes for the current element with the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> method.      -   If an <xref:System.Xml.Schema.XmlSchemaAttribute> object was passed to the <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> method, the ValidateAttribute method validates the attribute against the <xref:System.Xml.Schema.XmlSchemaAttribute> object.      -   If the attribute is successfully validated in the current element context, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, and <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> properties are set with the results of the validation.","pos":[0,1037],"nodes":[{"content":"The following are important notes to consider when using the ValidateAttribute method.","pos":[0,86]},{"content":"-   The &lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt; method must be called after validating all the attributes for the current element with the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt; method.","pos":[92,342],"source":"      -   The <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> method must be called after validating all the attributes for the current element with the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> method."},{"content":"-   If an &lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt; object was passed to the &lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt; method, the ValidateAttribute method validates the attribute against the &lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt; object.","pos":[348,609],"source":"      -   If an <xref:System.Xml.Schema.XmlSchemaAttribute> object was passed to the <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> method, the ValidateAttribute method validates the attribute against the <xref:System.Xml.Schema.XmlSchemaAttribute> object."},{"content":"-   If the attribute is successfully validated in the current element context, the &lt;xref:System.Xml.Schema.XmlSchemaInfo&gt; object's (if specified) &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A&gt;, &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;, &lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;, and &lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; properties are set with the results of the validation.","pos":[615,1037],"source":"      -   If the attribute is successfully validated in the current element context, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, and <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> properties are set with the results of the validation."}]}]},{"pos":[41532,41576],"content":"The local name of the attribute to validate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The local name of the attribute to validate.","pos":[0,44]}]},{"pos":[41645,41692],"content":"The namespace URI of the attribute to validate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The namespace URI of the attribute to validate.","pos":[0,47]}]},{"pos":[41782,42061],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlValueGetter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept><bpt id=\"p2\">&lt;xref uid=\"langword_csharp_delegate\" name=\"delegate\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> used to pass the attribute's value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Xml.Schema.XmlValueGetter\"></xref><xref uid=\"langword_csharp_delegate\" name=\"delegate\" href=\"\"></xref> used to pass the attribute's value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute."},{"pos":[42146,42364],"content":"An <xref href=\"System.Xml.Schema.XmlSchemaInfo\"></xref> object whose properties are set on successful validation of the attribute. This parameter and can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object whose properties are set on successful validation of the attribute.","pos":[0,130],"source":"An <xref href=\"System.Xml.Schema.XmlSchemaInfo\"></xref> object whose properties are set on successful validation of the attribute."},{"content":"This parameter and can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[131,218],"source":" This parameter and can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[42422,42454],"content":"The validated attribute's value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The validated attribute's value.","pos":[0,32]}]},{"pos":[42675,42733],"content":"The attribute is not valid in the current element context.","needQuote":true,"needEscape":true,"nodes":[{"content":"The attribute is not valid in the current element context.","pos":[0,58]}]},{"pos":[42844,43125],"content":"The &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute<bpt id=\"p1\">*</bpt>&gt; method was not called in the correct sequence. For example, calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute<ept id=\"p1\">*</ept>&gt; after calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*&gt;.","needQuote":true,"needEscape":true,"source":"The <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*> method was not called in the correct sequence. For example, calling <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*> after calling <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*>."},{"pos":[43228,43333],"content":"One or more of the parameters specified are <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"One or more of the parameters specified are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[43941,43986],"content":"Validates the element in the current context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Validates the element in the current context.","pos":[0,45]}]},{"pos":[43999,44836],"content":"The following are important notes to consider when using the ValidateElement method.      -   If the element name is successfully validated in the current context, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A>, and <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> properties are set with the results of the validation.      -   If the element name or any of its attributes are invalid the current context, the <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> property is set to <xref:System.Xml.Schema.XmlSchemaValidity>; otherwise the <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> property is set to <xref:System.Xml.Schema.XmlSchemaValidity>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The following are important notes to consider when using the ValidateElement method.      -   If the element name is successfully validated in the current context, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A>, and <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> properties are set with the results of the validation.      -   If the element name or any of its attributes are invalid the current context, the <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> property is set to <xref:System.Xml.Schema.XmlSchemaValidity>; otherwise the <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> property is set to <xref:System.Xml.Schema.XmlSchemaValidity>.","pos":[0,833],"nodes":[{"content":"The following are important notes to consider when using the ValidateElement method.","pos":[0,84]},{"content":"-   If the element name is successfully validated in the current context, the &lt;xref:System.Xml.Schema.XmlSchemaInfo&gt; object's (if specified) &lt;xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A&gt;, &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;, &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A&gt;, and &lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; properties are set with the results of the validation.","pos":[90,500],"source":"      -   If the element name is successfully validated in the current context, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A>, and <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> properties are set with the results of the validation."},{"content":"-   If the element name or any of its attributes are invalid the current context, the &lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; property is set to &lt;xref:System.Xml.Schema.XmlSchemaValidity&gt;; otherwise the &lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; property is set to &lt;xref:System.Xml.Schema.XmlSchemaValidity&gt;.","pos":[506,833],"source":"      -   If the element name or any of its attributes are invalid the current context, the <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> property is set to <xref:System.Xml.Schema.XmlSchemaValidity>; otherwise the <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> property is set to <xref:System.Xml.Schema.XmlSchemaValidity>."}]}]},{"pos":[45920,45962],"content":"The local name of the element to validate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The local name of the element to validate.","pos":[0,42]}]},{"pos":[46031,46076],"content":"The namespace URI of the element to validate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The namespace URI of the element to validate.","pos":[0,45]}]},{"pos":[46161,46380],"content":"An <xref href=\"System.Xml.Schema.XmlSchemaInfo\"></xref> object whose properties are set on successful validation of the element's name. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object whose properties are set on successful validation of the element's name.","pos":[0,135],"source":"An <xref href=\"System.Xml.Schema.XmlSchemaInfo\"></xref> object whose properties are set on successful validation of the element's name."},{"content":"This parameter can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[136,219],"source":" This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[46599,46654],"content":"The element's name is not valid in the current context.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element's name is not valid in the current context.","pos":[0,55]}]},{"pos":[46765,47049],"content":"The &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement<bpt id=\"p1\">*</bpt>&gt; method was not called in the correct sequence. For example, the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement<ept id=\"p1\">*</ept>&gt; method is called after calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;.","needQuote":true,"needEscape":true,"source":"The <xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement*> method was not called in the correct sequence. For example, the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement*> method is called after calling <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>."},{"pos":[47853,48015],"content":"Validates the element in the current context with the <ph id=\"ph1\">`xsi:Type`</ph>, <ph id=\"ph2\">`xsi:Nil`</ph>, <ph id=\"ph3\">`xsi:SchemaLocation`</ph>, and <ph id=\"ph4\">`xsi:NoNamespaceSchemaLocation`</ph> attribute values specified.","needQuote":true,"needEscape":true,"source":"Validates the element in the current context with the `xsi:Type`, `xsi:Nil`, `xsi:SchemaLocation`, and `xsi:NoNamespaceSchemaLocation` attribute values specified."},{"pos":[48028,49134],"content":"The following are important notes to consider when using the ValidateElement method.      -   If the element name is successfully validated in the current context, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A>, and <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> properties are set with the results of the validation.      -   If the element name or any of its attributes are invalid in the current context, the <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> property is set to <xref:System.Xml.Schema.XmlSchemaValidity>; otherwise the <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> property is set to <xref:System.Xml.Schema.XmlSchemaValidity>.      -   If the <xref:System.Xml.Schema.XmlSchemaValidationFlags> value was not passed as a parameter to the <xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A> constructor, `xsi:SchemaLocation` and `xsi:NoNamespaceSchemaLocation` attribute values are ignored.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The following are important notes to consider when using the ValidateElement method.","pos":[0,84]},{"content":"-   If the element name is successfully validated in the current context, the &lt;xref:System.Xml.Schema.XmlSchemaInfo&gt; object's (if specified) &lt;xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A&gt;, &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;, &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A&gt;, and &lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; properties are set with the results of the validation.","pos":[90,500],"source":"      -   If the element name is successfully validated in the current context, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A>, and <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> properties are set with the results of the validation."},{"content":"-   If the element name or any of its attributes are invalid in the current context, the &lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; property is set to &lt;xref:System.Xml.Schema.XmlSchemaValidity&gt;; otherwise the &lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; property is set to &lt;xref:System.Xml.Schema.XmlSchemaValidity&gt;.","pos":[506,836],"source":"      -   If the element name or any of its attributes are invalid in the current context, the <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> property is set to <xref:System.Xml.Schema.XmlSchemaValidity>; otherwise the <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> property is set to <xref:System.Xml.Schema.XmlSchemaValidity>."},{"content":"-   If the &lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; value was not passed as a parameter to the &lt;xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A&gt; constructor, <ph id=\"ph1\">`xsi:SchemaLocation`</ph> and <ph id=\"ph2\">`xsi:NoNamespaceSchemaLocation`</ph> attribute values are ignored.","pos":[842,1100],"source":"      -   If the <xref:System.Xml.Schema.XmlSchemaValidationFlags> value was not passed as a parameter to the <xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A> constructor, `xsi:SchemaLocation` and `xsi:NoNamespaceSchemaLocation` attribute values are ignored."}]},{"pos":[49447,49489],"content":"The local name of the element to validate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The local name of the element to validate.","pos":[0,42]}]},{"pos":[49558,49603],"content":"The namespace URI of the element to validate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The namespace URI of the element to validate.","pos":[0,45]}]},{"pos":[49688,49907],"content":"An <xref href=\"System.Xml.Schema.XmlSchemaInfo\"></xref> object whose properties are set on successful validation of the element's name. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object whose properties are set on successful validation of the element's name.","pos":[0,135],"source":"An <xref href=\"System.Xml.Schema.XmlSchemaInfo\"></xref> object whose properties are set on successful validation of the element's name."},{"content":"This parameter can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[136,219],"source":" This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[49971,50101],"content":"The `xsi:Type` attribute value of the element. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`xsi:Type`</ph> attribute value of the element.","pos":[0,46],"source":"The `xsi:Type` attribute value of the element."},{"content":"This parameter can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[47,130],"source":" This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[50164,50293],"content":"The `xsi:Nil` attribute value of the element. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`xsi:Nil`</ph> attribute value of the element.","pos":[0,45],"source":"The `xsi:Nil` attribute value of the element."},{"content":"This parameter can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[46,129],"source":" This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[50367,50507],"content":"The `xsi:SchemaLocation` attribute value of the element. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`xsi:SchemaLocation`</ph> attribute value of the element.","pos":[0,56],"source":"The `xsi:SchemaLocation` attribute value of the element."},{"content":"This parameter can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[57,140],"source":" This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[50592,50743],"content":"The `xsi:NoNamespaceSchemaLocation` attribute value of the element. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`xsi:NoNamespaceSchemaLocation`</ph> attribute value of the element.","pos":[0,67],"source":"The `xsi:NoNamespaceSchemaLocation` attribute value of the element."},{"content":"This parameter can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[68,151],"source":" This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[50962,51017],"content":"The element's name is not valid in the current context.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element's name is not valid in the current context.","pos":[0,55]}]},{"pos":[51128,51412],"content":"The &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement<bpt id=\"p1\">*</bpt>&gt; method was not called in the correct sequence. For example, the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement<ept id=\"p1\">*</ept>&gt; method is called after calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;.","needQuote":true,"needEscape":true,"source":"The <xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement*> method was not called in the correct sequence. For example, the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement*> method is called after calling <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>."},{"pos":[51937,52148],"content":"Verifies if the text content of the element is valid according to its data type for elements with simple content, and verifies if the content of the current element is complete for elements with complex content.","needQuote":true,"needEscape":true,"nodes":[{"content":"Verifies if the text content of the element is valid according to its data type for elements with simple content, and verifies if the content of the current element is complete for elements with complex content.","pos":[0,211]}]},{"pos":[52161,53488],"content":"The following are important notes to consider when using the ValidateEndElement method.      -   For elements with simple content, the ValidateEndElement method verifies that the text content of the element is valid according to its data type and returns the parsed typed value. The text content of the element is obtained from the results of previous calls to <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A>.      -   For elements with complex content, the ValidateEndElement method verifies if the content of the current element is complete.      -   If the element has a default value, the value returned from the ValidateEndElement method is the default value for the element.      -   If the <xref:System.Xml.Schema.XmlSchemaValidator> object was constructed with the <xref:System.Xml.Schema.XmlSchemaValidationFlags> value as a parameter, the ValidateEndElement method checks the identity constraint rules (if any) that apply to the element.      -   If the element is successfully validated in the current context, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, and <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> properties are set with the results of the validation.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The following are important notes to consider when using the ValidateEndElement method.      -   For elements with simple content, the ValidateEndElement method verifies that the text content of the element is valid according to its data type and returns the parsed typed value. The text content of the element is obtained from the results of previous calls to <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A>.      -   For elements with complex content, the ValidateEndElement method verifies if the content of the current element is complete.      -   If the element has a default value, the value returned from the ValidateEndElement method is the default value for the element.      -   If the <xref:System.Xml.Schema.XmlSchemaValidator> object was constructed with the <xref:System.Xml.Schema.XmlSchemaValidationFlags> value as a parameter, the ValidateEndElement method checks the identity constraint rules (if any) that apply to the element.      -   If the element is successfully validated in the current context, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, and <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> properties are set with the results of the validation.","pos":[0,1317],"nodes":[{"content":"The following are important notes to consider when using the ValidateEndElement method.","pos":[0,87]},{"content":"-   For elements with simple content, the ValidateEndElement method verifies that the text content of the element is valid according to its data type and returns the parsed typed value.","pos":[93,278]},{"content":"The text content of the element is obtained from the results of previous calls to &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;.","pos":[279,421],"source":" The text content of the element is obtained from the results of previous calls to <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A>."},{"content":"-   For elements with complex content, the ValidateEndElement method verifies if the content of the current element is complete.","pos":[427,555]},{"content":"-   If the element has a default value, the value returned from the ValidateEndElement method is the default value for the element.","pos":[561,692]},{"content":"-   If the &lt;xref:System.Xml.Schema.XmlSchemaValidator&gt; object was constructed with the &lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; value as a parameter, the ValidateEndElement method checks the identity constraint rules (if any) that apply to the element.","pos":[698,959],"source":"      -   If the <xref:System.Xml.Schema.XmlSchemaValidator> object was constructed with the <xref:System.Xml.Schema.XmlSchemaValidationFlags> value as a parameter, the ValidateEndElement method checks the identity constraint rules (if any) that apply to the element."},{"content":"-   If the element is successfully validated in the current context, the &lt;xref:System.Xml.Schema.XmlSchemaInfo&gt; object's (if specified) &lt;xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A&gt;, &lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;, and &lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; properties are set with the results of the validation.","pos":[965,1317],"source":"      -   If the element is successfully validated in the current context, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, and <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> properties are set with the results of the validation."}]}]},{"pos":[53692,53904],"content":"An <xref href=\"System.Xml.Schema.XmlSchemaInfo\"></xref> object whose properties are set on successful validation of the element. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object whose properties are set on successful validation of the element.","pos":[0,128],"source":"An <xref href=\"System.Xml.Schema.XmlSchemaInfo\"></xref> object whose properties are set on successful validation of the element."},{"content":"This parameter can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[129,212],"source":" This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[53962,54040],"content":"The parsed, typed text value of the element if the element has simple content.","needQuote":true,"needEscape":true,"nodes":[{"content":"The parsed, typed text value of the element if the element has simple content.","pos":[0,78]}]},{"pos":[54262,54297],"content":"The element's content is not valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element's content is not valid.","pos":[0,35]}]},{"pos":[54408,54700],"content":"The &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement<bpt id=\"p1\">*</bpt>&gt; method was not called in the correct sequence. For example, if the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement<ept id=\"p1\">*</ept>&gt; method is called after calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*&gt;.","needQuote":true,"needEscape":true,"source":"The <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement*> method was not called in the correct sequence. For example, if the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement*> method is called after calling <xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*>."},{"pos":[55274,55364],"content":"Verifies if the text content of the element specified is valid according to its data type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Verifies if the text content of the element specified is valid according to its data type.","pos":[0,90]}]},{"pos":[55377,57195],"content":"> [!IMPORTANT] >  If you are validating against the `xs:key`, `xs:keyref`, or `xs:unique` identity constraints, do not use the ValidateEndElement method overload. Instead, call the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> method and pass it the value of the element. Then call the  <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method overload, which takes <xref:System.Xml.Schema.XmlSchemaInfo> as an argument, to verify that the text content of the element is valid according to its data type.       The following are important notes to consider when using the ValidateEndElement method.      -   For elements with simple content, the ValidateEndElement method verifies that the text content of the element is valid according to its data type and returns the parsed typed value. The text content of the element is obtained from the typed content passed as a parameter.      -   If calls to the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> method have been previously made, an <xref:System.InvalidOperationException> is thrown.      -   If the element has complex content an <xref:System.InvalidOperationException> is thrown.      -   If the <xref:System.Xml.Schema.XmlSchemaValidator> object was constructed with the <xref:System.Xml.Schema.XmlSchemaValidationFlags> value as a parameter, the ValidateEndElement method checks the identity constraint rules (if any) that apply to the element.      -   If the element is successfully validated in the current context, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, and <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> properties are set with the results of the validation.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">&gt; [!IMPORTANT]</ph> &gt;  If you are validating against the <ph id=\"ph2\">`xs:key`</ph>, <ph id=\"ph3\">`xs:keyref`</ph>, or <ph id=\"ph4\">`xs:unique`</ph> identity constraints, do not use the ValidateEndElement method overload.","pos":[0,162],"source":"> [!IMPORTANT] >  If you are validating against the `xs:key`, `xs:keyref`, or `xs:unique` identity constraints, do not use the ValidateEndElement method overload."},{"content":"Instead, call the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt; method and pass it the value of the element.","pos":[163,285],"source":" Instead, call the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> method and pass it the value of the element."},{"content":"Then call the  &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt; method overload, which takes &lt;xref:System.Xml.Schema.XmlSchemaInfo&gt; as an argument, to verify that the text content of the element is valid according to its data type.","pos":[286,534],"source":" Then call the  <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method overload, which takes <xref:System.Xml.Schema.XmlSchemaInfo> as an argument, to verify that the text content of the element is valid according to its data type."},{"content":"The following are important notes to consider when using the ValidateEndElement method.","pos":[541,628]},{"content":"-   For elements with simple content, the ValidateEndElement method verifies that the text content of the element is valid according to its data type and returns the parsed typed value.","pos":[634,819]},{"content":"The text content of the element is obtained from the typed content passed as a parameter.","pos":[820,909]},{"content":"-   If calls to the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt; method have been previously made, an &lt;xref:System.InvalidOperationException&gt; is thrown.","pos":[915,1082],"source":"      -   If calls to the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> method have been previously made, an <xref:System.InvalidOperationException> is thrown."},{"content":"-   If the element has complex content an &lt;xref:System.InvalidOperationException&gt; is thrown.","pos":[1088,1180],"source":"      -   If the element has complex content an <xref:System.InvalidOperationException> is thrown."},{"content":"-   If the &lt;xref:System.Xml.Schema.XmlSchemaValidator&gt; object was constructed with the &lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; value as a parameter, the ValidateEndElement method checks the identity constraint rules (if any) that apply to the element.","pos":[1186,1447],"source":"      -   If the <xref:System.Xml.Schema.XmlSchemaValidator> object was constructed with the <xref:System.Xml.Schema.XmlSchemaValidationFlags> value as a parameter, the ValidateEndElement method checks the identity constraint rules (if any) that apply to the element."},{"content":"-   If the element is successfully validated in the current context, the &lt;xref:System.Xml.Schema.XmlSchemaInfo&gt; object's (if specified) &lt;xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A&gt;, &lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;, and &lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; properties are set with the results of the validation.","pos":[1453,1805],"source":"      -   If the element is successfully validated in the current context, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, and <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> properties are set with the results of the validation."}]},{"pos":[58283,58515],"content":"An <xref href=\"System.Xml.Schema.XmlSchemaInfo\"></xref> object whose properties are set on successful validation of the text content of the element. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object whose properties are set on successful validation of the text content of the element.","pos":[0,148],"source":"An <xref href=\"System.Xml.Schema.XmlSchemaInfo\"></xref> object whose properties are set on successful validation of the text content of the element."},{"content":"This parameter can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[149,232],"source":" This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[58582,58620],"content":"The typed text content of the element.","needQuote":true,"needEscape":true,"nodes":[{"content":"The typed text content of the element.","pos":[0,38]}]},{"pos":[58678,58726],"content":"The parsed, typed simple content of the element.","needQuote":true,"needEscape":true,"nodes":[{"content":"The parsed, typed simple content of the element.","pos":[0,48]}]},{"pos":[58948,58988],"content":"The element's text content is not valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element's text content is not valid.","pos":[0,40]}]},{"pos":[59099,59533],"content":"The &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement<bpt id=\"p1\">*</bpt>&gt; method was not called in the correct sequence (for example, if the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement<ept id=\"p1\">*</ept>&gt; method is called after calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement<bpt id=\"p2\">*</bpt>&gt;), calls to the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText<ept id=\"p2\">*</ept>&gt; method have been previously made, or the element has complex content.","needQuote":true,"needEscape":true,"source":"The <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement*> method was not called in the correct sequence (for example, if the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement*> method is called after calling <xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*>), calls to the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText*> method have been previously made, or the element has complex content."},{"pos":[59636,59740],"content":"The typed text content parameter cannot be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The typed text content parameter cannot be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[60290,60497],"content":"Verifies whether all the required attributes in the element context are present and prepares the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaValidator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to validate the child content of the element.","needQuote":true,"needEscape":true,"source":"Verifies whether all the required attributes in the element context are present and prepares the <xref href=\"System.Xml.Schema.XmlSchemaValidator\"></xref> object to validate the child content of the element."},{"pos":[60510,61138],"content":"The following are important notes to consider when using the ValidateEndOfAttributes method.      -   The <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> method should always be called before ValidateEndOfAttributes.      -   The ValidateEndOfAttributes method must be called before proceeding with validation of an element's content.      -   If all the required attributes in the element context are present, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> property is set to <xref:System.Xml.Schema.XmlSchemaValidity>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The following are important notes to consider when using the ValidateEndOfAttributes method.      -   The <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> method should always be called before ValidateEndOfAttributes.      -   The ValidateEndOfAttributes method must be called before proceeding with validation of an element's content.      -   If all the required attributes in the element context are present, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> property is set to <xref:System.Xml.Schema.XmlSchemaValidity>.","pos":[0,622],"nodes":[{"content":"The following are important notes to consider when using the ValidateEndOfAttributes method.","pos":[0,92]},{"content":"-   The &lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt; method should always be called before ValidateEndOfAttributes.","pos":[98,247],"source":"      -   The <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> method should always be called before ValidateEndOfAttributes."},{"content":"-   The ValidateEndOfAttributes method must be called before proceeding with validation of an element's content.","pos":[253,365]},{"content":"-   If all the required attributes in the element context are present, the &lt;xref:System.Xml.Schema.XmlSchemaInfo&gt; object's (if specified) &lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; property is set to &lt;xref:System.Xml.Schema.XmlSchemaValidity&gt;.","pos":[371,622],"source":"      -   If all the required attributes in the element context are present, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> property is set to <xref:System.Xml.Schema.XmlSchemaValidity>."}]}]},{"pos":[62210,62477],"content":"An <xref href=\"System.Xml.Schema.XmlSchemaInfo\"></xref> object whose properties are set on successful verification that all the required attributes in the element context are present. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object whose properties are set on successful verification that all the required attributes in the element context are present.","pos":[0,183],"source":"An <xref href=\"System.Xml.Schema.XmlSchemaInfo\"></xref> object whose properties are set on successful verification that all the required attributes in the element context are present."},{"content":"This parameter can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[184,267],"source":" This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[62704,62789],"content":"One or more of the required attributes in the current element context were not found.","needQuote":true,"needEscape":true,"nodes":[{"content":"One or more of the required attributes in the current element context were not found.","pos":[0,85]}]},{"pos":[62900,63096],"content":"The ValidateEndOfAttributes method was not called in the correct sequence. For example, calling ValidateEndOfAttributes after calling <xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ValidateEndOfAttributes method was not called in the correct sequence. For example, calling ValidateEndOfAttributes after calling <xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*>.","pos":[0,196],"nodes":[{"content":"The ValidateEndOfAttributes method was not called in the correct sequence.","pos":[0,74]},{"content":"For example, calling ValidateEndOfAttributes after calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*&gt;.","pos":[75,196],"source":" For example, calling ValidateEndOfAttributes after calling <xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*>."}]}]},{"pos":[63199,63304],"content":"One or more of the parameters specified are <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"One or more of the parameters specified are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[63742,63969],"content":"Validates whether the text <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> specified is allowed in the current element context, and accumulates the text for validation if the current element has simple content.","needQuote":true,"needEscape":true,"source":"Validates whether the text <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref> specified is allowed in the current element context, and accumulates the text for validation if the current element has simple content."},{"pos":[63982,64484],"content":"The following are important notes to consider when using the ValidateText method.      -   If the element has simple content, the text `string` specified is concatenated on each call to the ValidateText method until the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method is called. When the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method is called, all the text is validated.      -   If the element has complex content, no text concatenation occurs.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The following are important notes to consider when using the ValidateText method.","pos":[0,81]},{"content":"-   If the element has simple content, the text <ph id=\"ph1\">`string`</ph> specified is concatenated on each call to the ValidateText method until the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt; method is called.","pos":[87,303],"source":"      -   If the element has simple content, the text `string` specified is concatenated on each call to the ValidateText method until the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method is called."},{"content":"When the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt; method is called, all the text is validated.","pos":[304,423],"source":" When the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method is called, all the text is validated."},{"content":"-   If the element has complex content, no text concatenation occurs.","pos":[429,498]}]},{"pos":[64641,64756],"content":"A text <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to validate in the current element context.","needQuote":true,"needEscape":true,"source":"A text <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref> to validate in the current element context."},{"pos":[64972,65102],"content":"The text <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> specified is not allowed in the current element context.","needQuote":true,"needEscape":true,"source":"The text <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref> specified is not allowed in the current element context."},{"pos":[65213,65491],"content":"The &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText<bpt id=\"p1\">*</bpt>&gt; method was not called in the correct sequence. For example, the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText<ept id=\"p1\">*</ept>&gt; method is called after calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;.","needQuote":true,"needEscape":true,"source":"The <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText*> method was not called in the correct sequence. For example, the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText*> method is called after calling <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>."},{"pos":[65594,65749],"content":"The text <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameter cannot be <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The text <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref> parameter cannot be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[66249,66488],"content":"Validates whether the text returned by the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlValueGetter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object specified is allowed in the current element context, and accumulates the text for validation if the current element has simple content.","needQuote":true,"needEscape":true,"source":"Validates whether the text returned by the <xref href=\"System.Xml.Schema.XmlValueGetter\"></xref> object specified is allowed in the current element context, and accumulates the text for validation if the current element has simple content."},{"pos":[66501,67003],"content":"The following are important notes to consider when using the ValidateText method.      -   If the element has simple content, the text `string` specified is concatenated on each call to the ValidateText method until the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method is called. When the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method is called, all the text is validated.      -   If the element has complex content, no text concatenation occurs.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The following are important notes to consider when using the ValidateText method.","pos":[0,81]},{"content":"-   If the element has simple content, the text <ph id=\"ph1\">`string`</ph> specified is concatenated on each call to the ValidateText method until the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt; method is called.","pos":[87,303],"source":"      -   If the element has simple content, the text `string` specified is concatenated on each call to the ValidateText method until the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method is called."},{"content":"When the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt; method is called, all the text is validated.","pos":[304,423],"source":" When the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method is called, all the text is validated."},{"content":"-   If the element has complex content, no text concatenation occurs.","pos":[429,498]}]},{"pos":[67205,67477],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlValueGetter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept><bpt id=\"p2\">&lt;xref uid=\"langword_csharp_delegate\" name=\"delegate\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> used to pass the text value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Xml.Schema.XmlValueGetter\"></xref><xref uid=\"langword_csharp_delegate\" name=\"delegate\" href=\"\"></xref> used to pass the text value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute."},{"pos":[67693,67823],"content":"The text <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> specified is not allowed in the current element context.","needQuote":true,"needEscape":true,"source":"The text <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref> specified is not allowed in the current element context."},{"pos":[67934,68212],"content":"The &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText<bpt id=\"p1\">*</bpt>&gt; method was not called in the correct sequence. For example, the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText<ept id=\"p1\">*</ept>&gt; method is called after calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;.","needQuote":true,"needEscape":true,"source":"The <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText*> method was not called in the correct sequence. For example, the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText*> method is called after calling <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>."},{"pos":[68315,68470],"content":"The text <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameter cannot be <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The text <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref> parameter cannot be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[68938,69186],"content":"Validates whether the white space in the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> specified is allowed in the current element context, and accumulates the white space for validation if the current element has simple content.","needQuote":true,"needEscape":true,"source":"Validates whether the white space in the <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref> specified is allowed in the current element context, and accumulates the white space for validation if the current element has simple content."},{"pos":[69348,69470],"content":"A white space <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to validate in the current element context.","needQuote":true,"needEscape":true,"source":"A white space <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref> to validate in the current element context."},{"pos":[69692,69750],"content":"White space is not allowed in the current element context.","needQuote":true,"needEscape":true,"nodes":[{"content":"White space is not allowed in the current element context.","pos":[0,58]}]},{"pos":[69861,70154],"content":"The &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace<bpt id=\"p1\">*</bpt>&gt; method was not called in the correct sequence. For example, if the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace<ept id=\"p1\">*</ept>&gt; method is called after calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;.","needQuote":true,"needEscape":true,"source":"The <xref:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace*> method was not called in the correct sequence. For example, if the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace*> method is called after calling <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>."},{"pos":[70684,70937],"content":"Validates whether the white space returned by the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlValueGetter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object specified is allowed in the current element context, and accumulates the white space for validation if the current element has simple content.","needQuote":true,"needEscape":true,"source":"Validates whether the white space returned by the <xref href=\"System.Xml.Schema.XmlValueGetter\"></xref> object specified is allowed in the current element context, and accumulates the white space for validation if the current element has simple content."},{"pos":[71144,71423],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlValueGetter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept><bpt id=\"p2\">&lt;xref uid=\"langword_csharp_delegate\" name=\"delegate\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> used to pass the white space value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Xml.Schema.XmlValueGetter\"></xref><xref uid=\"langword_csharp_delegate\" name=\"delegate\" href=\"\"></xref> used to pass the white space value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute."},{"pos":[71645,71703],"content":"White space is not allowed in the current element context.","needQuote":true,"needEscape":true,"nodes":[{"content":"White space is not allowed in the current element context.","pos":[0,58]}]},{"pos":[71814,72107],"content":"The &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace<bpt id=\"p1\">*</bpt>&gt; method was not called in the correct sequence. For example, if the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace<ept id=\"p1\">*</ept>&gt; method is called after calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;.","needQuote":true,"needEscape":true,"source":"The <xref:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace*> method was not called in the correct sequence. For example, if the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace*> method is called after calling <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>."},{"pos":[72540,72695],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.ValidationEventHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that receives schema validation warnings and errors encountered during schema validation.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Xml.Schema.ValidationEventHandler\"></xref> that receives schema validation warnings and errors encountered during schema validation."},{"pos":[72707,73169],"content":"If no <xref:System.Xml.Schema.ValidationEventHandler> is specified, an <xref:System.Xml.Schema.XmlSchemaValidationException> is thrown for all schema validation errors with an <xref:System.Xml.Schema.XmlSeverityType> value of <xref:System.Xml.Schema.XmlSeverityType>. An <xref:System.Xml.Schema.XmlSchemaValidationException> is not thrown for validation warnings with an <xref:System.Xml.Schema.XmlSeverityType> value of <xref:System.Xml.Schema.XmlSeverityType>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If no <xref:System.Xml.Schema.ValidationEventHandler> is specified, an <xref:System.Xml.Schema.XmlSchemaValidationException> is thrown for all schema validation errors with an <xref:System.Xml.Schema.XmlSeverityType> value of <xref:System.Xml.Schema.XmlSeverityType>. An <xref:System.Xml.Schema.XmlSchemaValidationException> is not thrown for validation warnings with an <xref:System.Xml.Schema.XmlSeverityType> value of <xref:System.Xml.Schema.XmlSeverityType>.","pos":[0,462],"nodes":[{"content":"If no &lt;xref:System.Xml.Schema.ValidationEventHandler&gt; is specified, an &lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt; is thrown for all schema validation errors with an &lt;xref:System.Xml.Schema.XmlSeverityType&gt; value of &lt;xref:System.Xml.Schema.XmlSeverityType&gt;.","pos":[0,267],"source":"If no <xref:System.Xml.Schema.ValidationEventHandler> is specified, an <xref:System.Xml.Schema.XmlSchemaValidationException> is thrown for all schema validation errors with an <xref:System.Xml.Schema.XmlSeverityType> value of <xref:System.Xml.Schema.XmlSeverityType>."},{"content":"An &lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt; is not thrown for validation warnings with an &lt;xref:System.Xml.Schema.XmlSeverityType&gt; value of &lt;xref:System.Xml.Schema.XmlSeverityType&gt;.","pos":[268,462],"source":" An <xref:System.Xml.Schema.XmlSchemaValidationException> is not thrown for validation warnings with an <xref:System.Xml.Schema.XmlSeverityType> value of <xref:System.Xml.Schema.XmlSeverityType>."}]}]},{"pos":[74228,74240],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[74688,74760],"content":"Gets or sets the object sent as the sender object of a validation event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the object sent as the sender object of a validation event.","pos":[0,72]}]},{"pos":[75040,75150],"content":"An &lt;xref:System.Object&gt;; the default is this <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaValidator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An <xref:System.Object>; the default is this <xref href=\"System.Xml.Schema.XmlSchemaValidator\"></xref> object."},{"pos":[75620,75813],"content":"Sets the <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object used to resolve <ph id=\"ph1\">`xs:import`</ph> and <ph id=\"ph2\">`xs:include`</ph> elements as well as <ph id=\"ph3\">`xsi:schemaLocation`</ph> and <ph id=\"ph4\">`xsi:noNamespaceSchemaLocation`</ph> attributes.","needQuote":true,"needEscape":true,"source":"Sets the <xref href=\"System.Xml.XmlResolver\"></xref> object used to resolve `xs:import` and `xs:include` elements as well as `xsi:schemaLocation` and `xsi:noNamespaceSchemaLocation` attributes."},{"pos":[76431,76558],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object; the default is an <bpt id=\"p2\">&lt;xref href=\"System.Xml.XmlUrlResolver\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Xml.XmlResolver\"></xref> object; the default is an <xref href=\"System.Xml.XmlUrlResolver\"></xref> object."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xml.Schema.XmlSchemaValidator\n  id: XmlSchemaValidator\n  children:\n  - System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)\n  - System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)\n  - System.Xml.Schema.XmlSchemaValidator.EndValidation\n  - System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes\n  - System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles\n  - System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)\n  - System.Xml.Schema.XmlSchemaValidator.Initialize\n  - System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)\n  - System.Xml.Schema.XmlSchemaValidator.LineInfoProvider\n  - System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)\n  - System.Xml.Schema.XmlSchemaValidator.SourceUri\n  - System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)\n  - System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)\n  - System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)\n  - System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)\n  - System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)\n  - System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)\n  - System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)\n  - System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)\n  - System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)\n  - System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)\n  - System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)\n  - System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler\n  - System.Xml.Schema.XmlSchemaValidator.ValidationEventSender\n  - System.Xml.Schema.XmlSchemaValidator.XmlResolver\n  langs:\n  - csharp\n  name: XmlSchemaValidator\n  nameWithType: XmlSchemaValidator\n  fullName: System.Xml.Schema.XmlSchemaValidator\n  type: Class\n  summary: Represents an XML Schema Definition Language (XSD) Schema validation engine. The XmlSchemaValidator class cannot be inherited.\n  remarks: \"> [!IMPORTANT]\\n>  -   Do not use schemas from unknown or untrusted sources or locations. Doing so will compromise the security of your code.  \\n> -   XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios.  \\n> -   Schema validation error messages and exceptions may expose sensitive information about the content model or URI paths to the schema file. Be careful not to expose this information to untrusted callers.  \\n  \\n The XmlSchemaValidator class provides an efficient, high-performance mechanism to validate XML data against XML schemas in a push-based manner. For example, the XmlSchemaValidator class allows you to validate an XML infoset in-place without having to serialize it as an XML document and then reparse the document using a validating XML reader. The XmlSchemaValidator class can also be used to build validation engines over custom XML data sources or as a way to build a validating XML writer.  \\n  \\n For more information about the XmlSchemaValidator class, see the [XmlSchemaValidator Push-Based Validation](~/add/includes/ajax-current-ext-md.md) topic.  \\n  \\n> [!IMPORTANT]\\n>  The <xref:System.Xml.Schema.XmlSchemaValidationFlags> and <xref:System.Xml.Schema.XmlSchemaValidationFlags> validation flags of an XmlSchemaValidator object are not set be default. Additionally, the <xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A> property of an XmlSchemaValidator object is `null` by default. As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.\"\n  example:\n  - \"The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the XmlSchemaValidator class.  \\n  \\n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/t-system.xml.schema.xmls_19_1.cs)]\\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/t-system.xml.schema.xmls_19_1.vb)]  \\n  \\n The example takes the `contosoBooks.xml` file as input.  \\n  \\n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/t-system.xml.schema.xmls_19_2.xml)]  \\n  \\n The example also takes the `contosoBooks.xsd` as an input.  \\n  \\n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/t-system.xml.schema.xmls_19_3.xsd)]\"\n  syntax:\n    content: public sealed class XmlSchemaValidator\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)\n  id: '#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)'\n  parent: System.Xml.Schema.XmlSchemaValidator\n  langs:\n  - csharp\n  name: XmlSchemaValidator(XmlNameTable,XmlSchemaSet,IXmlNamespaceResolver,XmlSchemaValidationFlags)\n  nameWithType: XmlSchemaValidator.XmlSchemaValidator(XmlNameTable,XmlSchemaSet,IXmlNamespaceResolver,XmlSchemaValidationFlags)\n  fullName: System.Xml.Schema.XmlSchemaValidator.XmlSchemaValidator(XmlNameTable,XmlSchemaSet,IXmlNamespaceResolver,XmlSchemaValidationFlags)\n  type: Constructor\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Initializes a new instance of the <xref href=\"System.Xml.Schema.XmlSchemaValidator\"></xref> class.\n  remarks: \"The following are important notes to consider when using the XmlSchemaValidator constructor.  \\n  \\n-   The contents of the <xref:System.Xml.Schema.XmlSchemaSet> parameter are copied into an internal <xref:System.Xml.Schema.XmlSchemaSet> object when the <xref:System.Xml.Schema.XmlSchemaValidationFlags> or the <xref:System.Xml.Schema.XmlSchemaValidationFlags> validation options are set. As a result, changes to the input <xref:System.Xml.Schema.XmlSchemaSet> object during validation do not affect the outcome of validation.  \\n  \\n-   If the <xref:System.Xml.Schema.XmlSchemaSet> parameter specified is not compiled, its <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> method is called.  \\n  \\n-   The <xref:System.Xml.IXmlNamespaceResolver> parameter is especially important for validating `xs:QName` types. The <xref:System.Xml.Schema.XmlSchemaValidator> class does not copy the in-scope namespaces from the <xref:System.Xml.IXmlNamespaceResolver> object but instead holds a reference to it. This allows new namespaces to be added to the <xref:System.Xml.IXmlNamespaceResolver> object during the validation process.  \\n  \\n> [!IMPORTANT]\\n>  The <xref:System.Xml.Schema.XmlSchemaValidationFlags> and <xref:System.Xml.Schema.XmlSchemaValidationFlags> validation flags of an <xref:System.Xml.Schema.XmlSchemaValidator> object are not set be default. Additionally, the <xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A> property of an <xref:System.Xml.Schema.XmlSchemaValidator> object is `null` by default. As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.\"\n  example:\n  - For an example of the XmlSchemaValidator constructor, see the <xref:System.Xml.Schema.XmlSchemaValidator> class reference topic.\n  syntax:\n    content: public XmlSchemaValidator (System.Xml.XmlNameTable nameTable, System.Xml.Schema.XmlSchemaSet schemas, System.Xml.IXmlNamespaceResolver namespaceResolver, System.Xml.Schema.XmlSchemaValidationFlags validationFlags);\n    parameters:\n    - id: nameTable\n      type: System.Xml.XmlNameTable\n      description: An <xref:System.Xml.XmlNameTable> object containing element and attribute names as atomized strings.\n    - id: schemas\n      type: System.Xml.Schema.XmlSchemaSet\n      description: An <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> object containing the XML Schema Definition Language (XSD) schemas used for validation.\n    - id: namespaceResolver\n      type: System.Xml.IXmlNamespaceResolver\n      description: An <xref:System.Xml.IXmlNamespaceResolver> object used for resolving namespaces encountered during validation.\n    - id: validationFlags\n      type: System.Xml.Schema.XmlSchemaValidationFlags\n      description: An <xref href=\"System.Xml.Schema.XmlSchemaValidationFlags\"></xref> value specifying schema validation options.\n  overload: System.Xml.Schema.XmlSchemaValidator.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: One or more of the parameters specified are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Xml.Schema.XmlSchemaException\n    commentId: T:System.Xml.Schema.XmlSchemaException\n    description: An error occurred while compiling schemas in the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> parameter.\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)\n  id: AddSchema(System.Xml.Schema.XmlSchema)\n  parent: System.Xml.Schema.XmlSchemaValidator\n  langs:\n  - csharp\n  name: AddSchema(XmlSchema)\n  nameWithType: XmlSchemaValidator.AddSchema(XmlSchema)\n  fullName: System.Xml.Schema.XmlSchemaValidator.AddSchema(XmlSchema)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Adds an XML Schema Definition Language (XSD) schema to the set of schemas used for validation.\n  remarks: \"The following are important notes to consider when using the AddSchema method.  \\n  \\n-   The AddSchema method can be used to simulate the effect of encountering an inline XML schema in the XML document being validated.  \\n  \\n-   The target namespace of the <xref:System.Xml.Schema.XmlSchema> parameter cannot match that of any element or attribute already encountered by the <xref:System.Xml.Schema.XmlSchemaValidator> object.  \\n  \\n-   If the <xref:System.Xml.Schema.XmlSchemaValidationFlags> validation option is not set, the AddSchema method does nothing.\"\n  syntax:\n    content: public void AddSchema (System.Xml.Schema.XmlSchema schema);\n    parameters:\n    - id: schema\n      type: System.Xml.Schema.XmlSchema\n      description: An <xref:System.Xml.Schema.XmlSchema> object to add to the set of schemas used for validation.\n  overload: System.Xml.Schema.XmlSchemaValidator.AddSchema*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <xref:System.Xml.Schema.XmlSchema> parameter specified is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Xml.Schema.XmlSchemaValidationException\n    commentId: T:System.Xml.Schema.XmlSchemaValidationException\n    description: The target namespace of the <xref:System.Xml.Schema.XmlSchema> parameter matches that of any element or attribute already encountered by the <xref href=\"System.Xml.Schema.XmlSchemaValidator\"></xref> object.\n  - type: System.Xml.Schema.XmlSchemaException\n    commentId: T:System.Xml.Schema.XmlSchemaException\n    description: The <xref:System.Xml.Schema.XmlSchema> parameter is invalid.\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaValidator.EndValidation\n  id: EndValidation\n  parent: System.Xml.Schema.XmlSchemaValidator\n  langs:\n  - csharp\n  name: EndValidation()\n  nameWithType: XmlSchemaValidator.EndValidation()\n  fullName: System.Xml.Schema.XmlSchemaValidator.EndValidation()\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Ends validation and checks identity constraints for the entire XML document.\n  remarks: The EndValidation method ends validation and checks identity constraints for the entire XML document if the <xref:System.Xml.Schema.XmlSchemaValidationFlags> validation option is set.\n  syntax:\n    content: public void EndValidation ();\n    parameters: []\n  overload: System.Xml.Schema.XmlSchemaValidator.EndValidation*\n  exceptions:\n  - type: System.Xml.Schema.XmlSchemaValidationException\n    commentId: T:System.Xml.Schema.XmlSchemaValidationException\n    description: An identity constraint error was found in the XML document.\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes\n  id: GetExpectedAttributes\n  parent: System.Xml.Schema.XmlSchemaValidator\n  langs:\n  - csharp\n  name: GetExpectedAttributes()\n  nameWithType: XmlSchemaValidator.GetExpectedAttributes()\n  fullName: System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes()\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Returns the expected attributes for the current element context.\n  remarks: \"The following are important notes to consider when using the GetExpectedAttributes method.  \\n  \\n-   If the GetExpectedAttributes method is called immediately after the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A> method, all the attributes that could appear in the XML document are returned.  \\n  \\n-   If the GetExpectedAttributes method is called after one or more calls to the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> method, the attributes that haven't yet been validated for the current element are returned.\"\n  syntax:\n    content: public System.Xml.Schema.XmlSchemaAttribute[] GetExpectedAttributes ();\n    parameters: []\n    return:\n      type: System.Xml.Schema.XmlSchemaAttribute[]\n      description: An array of <xref href=\"System.Xml.Schema.XmlSchemaAttribute\"></xref> objects or an empty array if there are no expected attributes.\n  overload: System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles\n  id: GetExpectedParticles\n  parent: System.Xml.Schema.XmlSchemaValidator\n  langs:\n  - csharp\n  name: GetExpectedParticles()\n  nameWithType: XmlSchemaValidator.GetExpectedParticles()\n  fullName: System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles()\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Returns the expected particles in the current element context.\n  remarks: \"The valid particles that can be returned by the GetExpectedParticles method are instances of the <xref:System.Xml.Schema.XmlSchemaElement> and <xref:System.Xml.Schema.XmlSchemaAny> classes.  \\n  \\n When the compositor for the content model is an `xs:sequence`, only the next particle in the sequence is returned. If the compositor for the content model is an `xs:all` or an `xs:choice`, then all valid particles that could follow in the current element context are returned.  \\n  \\n For example, in the XML Schema Definition Language (XSD) schema and XML document that follow, after validating the `book` element, the `book` element is the current element context. The GetExpectedParticles method returns an array containing a single <xref:System.Xml.Schema.XmlSchemaElement> object representing the `title` element. When the validation context is the `title` element, the GetExpectedParticles method returns an empty array. If the GetExpectedParticles method is called after the `title` element has been validated but before the `description` element has been validated, it returns an array containing a single <xref:System.Xml.Schema.XmlSchemaElement> object representing the `description` element. If the GetExpectedParticles method is called after the `description` element has been validated then it returns an array containing a single <xref:System.Xml.Schema.XmlSchemaAny> object representing the wildcard.  \\n  \\n```vb#  \\nDim reader As XmlReader =  XmlReader.Create(\\\"input.xml\\\")   \\n  \\nDim schemaSet As XmlSchemaSet =  New XmlSchemaSet()   \\nschemaSet.Add(Nothing, \\\"schema.xsd\\\")  \\nDim manager As XmlNamespaceManager =  New XmlNamespaceManager(reader.NameTable)   \\n  \\nDim validator As XmlSchemaValidator =  New XmlSchemaValidator(reader.NameTable,schemaSet,manager,XmlSchemaValidationFlags.None)  \\nvalidator.Initialize()  \\n  \\nvalidator.ValidateElement(\\\"book\\\", \\\"\\\", Nothing)  \\nvalidator.GetUnspecifiedDefaultAttributes(New ArrayList())  \\nvalidator.ValidateEndOfAttributes(Nothing)  \\nFor Each element As XmlSchemaElement In validator.GetExpectedParticles()  \\n    Console.WriteLine(element.Name)  \\nNext  \\n  \\nvalidator.ValidateElement(\\\"title\\\", \\\"\\\", Nothing)  \\nvalidator.GetUnspecifiedDefaultAttributes(New ArrayList())  \\nvalidator.ValidateEndOfAttributes(Nothing)  \\nFor Each element As XmlSchemaElement In validator.GetExpectedParticles()  \\n    Console.WriteLine(element.Name)  \\nNext  \\nvalidator.ValidateEndElement(Nothing)  \\n  \\nFor Each element As XmlSchemaElement In validator.GetExpectedParticles()  \\n    Console.WriteLine(element.Name)  \\nNext  \\n  \\nvalidator.ValidateElement(\\\"description\\\", \\\"\\\", Nothing)  \\nvalidator.GetUnspecifiedDefaultAttributes(New ArrayList())  \\nvalidator.ValidateEndOfAttributes(Nothing)  \\nvalidator.ValidateEndElement(Nothing)  \\n  \\nFor Each particle As XmlSchemaParticle In validator.GetExpectedParticles()  \\n    Console.WriteLine(particle.GetType())  \\nNext  \\n  \\nvalidator.ValidateElement(\\\"namespace\\\", \\\"\\\", Nothing)  \\nvalidator.GetUnspecifiedDefaultAttributes(New ArrayList())  \\nvalidator.ValidateEndOfAttributes(Nothing)  \\nvalidator.ValidateEndElement(Nothing)  \\n  \\nvalidator.ValidateEndElement(Nothing)  \\n```  \\n  \\n```c#  \\nXmlReader reader = XmlReader.Create(\\\"input.xml\\\");  \\n  \\nXmlSchemaSet schemaSet = new XmlSchemaSet();  \\nschemaSet.Add(null, \\\"schema.xsd\\\");  \\nXmlNamespaceManager manager = new XmlNamespaceManager(reader.NameTable);  \\n  \\nXmlSchemaValidator validator = new XmlSchemaValidator(reader.NameTable, schemaSet, manager, XmlSchemaValidationFlags.None);  \\nvalidator.Initialize();  \\n  \\nvalidator.ValidateElement(\\\"book\\\", \\\"\\\", null);  \\n  \\nvalidator.GetUnspecifiedDefaultAttributes(new ArrayList());  \\nvalidator.ValidateEndOfAttributes(null);  \\nforeach (XmlSchemaElement element in validator.GetExpectedParticles())  \\n{  \\n    Console.WriteLine(element.Name);  \\n}  \\n  \\nvalidator.ValidateElement(\\\"title\\\", \\\"\\\", null);  \\nvalidator.GetUnspecifiedDefaultAttributes(new ArrayList());  \\nvalidator.ValidateEndOfAttributes(null);  \\nforeach (XmlSchemaElement element in validator.GetExpectedParticles())  \\n{  \\n    Console.WriteLine(element.Name);  \\n}  \\nvalidator.ValidateEndElement(null);  \\n  \\nforeach (XmlSchemaElement element in validator.GetExpectedParticles())  \\n{  \\n    Console.WriteLine(element.Name);  \\n}  \\n  \\nvalidator.ValidateElement(\\\"description\\\", \\\"\\\", null);  \\nvalidator.GetUnspecifiedDefaultAttributes(new ArrayList());  \\nvalidator.ValidateEndOfAttributes(null);  \\nvalidator.ValidateEndElement(null);  \\n  \\nforeach (XmlSchemaParticle particle in validator.GetExpectedParticles())  \\n{  \\n    Console.WriteLine(particle.GetType());  \\n}  \\n  \\nvalidator.ValidateElement(\\\"namespace\\\", \\\"\\\", null);  \\nvalidator.GetUnspecifiedDefaultAttributes(new ArrayList());  \\nvalidator.ValidateEndOfAttributes(null);  \\nvalidator.ValidateEndElement(null);  \\n  \\nvalidator.ValidateEndElement(null);  \\n```  \\n  \\n The example takes the following XML as input.  \\n  \\n `<xs:schema xmlns:xs=\\\"http://www.w3.org/2001/XMLSchema\\\">`  \\n  \\n `<xs:element name=\\\"book\\\">`  \\n  \\n `<xs:complexType>`  \\n  \\n `<xs:sequence>`  \\n  \\n `<xs:element name=\\\"title\\\" type=\\\"xs:string\\\" />`  \\n  \\n `<xs:element name=\\\"description\\\" type=\\\"xs:string\\\" />`  \\n  \\n `<xs:any processContents =\\\"lax\\\"/>`  \\n  \\n `</xs:sequence>`  \\n  \\n `</xs:complexType>`  \\n  \\n `</xs:element>`  \\n  \\n `</xs:schema>`  \\n  \\n The example takes the following XSD schema as input.  \\n  \\n `<book>`  \\n  \\n `<title>My Book</title>`  \\n  \\n `<description>My Book's Description</description>`  \\n  \\n `<namespace>System.Xml.Schema</namespace>`  \\n  \\n `</book>`\"\n  syntax:\n    content: public System.Xml.Schema.XmlSchemaParticle[] GetExpectedParticles ();\n    parameters: []\n    return:\n      type: System.Xml.Schema.XmlSchemaParticle[]\n      description: An array of <xref href=\"System.Xml.Schema.XmlSchemaParticle\"></xref> objects or an empty array if there are no expected particles.\n  overload: System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)\n  id: GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)\n  parent: System.Xml.Schema.XmlSchemaValidator\n  langs:\n  - csharp\n  name: GetUnspecifiedDefaultAttributes(ArrayList)\n  nameWithType: XmlSchemaValidator.GetUnspecifiedDefaultAttributes(ArrayList)\n  fullName: System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(ArrayList)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Validates identity constraints on the default attributes and populates the <xref href=\"System.Collections.ArrayList\"></xref> specified with <xref href=\"System.Xml.Schema.XmlSchemaAttribute\"></xref> objects for any attributes with default values that have not been previously validated using the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*> method in the element context.\n  remarks: The GetUnspecifiedDefaultAttributes method must be called after validating all the attributes for the current element with the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> method. The GetUnspecifiedDefaultAttributes method should be used to determine what default attributes are to be inserted into the XML document being validated.\n  syntax:\n    content: public void GetUnspecifiedDefaultAttributes (System.Collections.ArrayList defaultAttributes);\n    parameters:\n    - id: defaultAttributes\n      type: System.Collections.ArrayList\n      description: An <xref href=\"System.Collections.ArrayList\"></xref> to populate with <xref href=\"System.Xml.Schema.XmlSchemaAttribute\"></xref> objects for any attributes not yet encountered during validation in the element context.\n  overload: System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaValidator.Initialize\n  id: Initialize\n  parent: System.Xml.Schema.XmlSchemaValidator\n  langs:\n  - csharp\n  name: Initialize()\n  nameWithType: XmlSchemaValidator.Initialize()\n  fullName: System.Xml.Schema.XmlSchemaValidator.Initialize()\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Initializes the state of the <xref href=\"System.Xml.Schema.XmlSchemaValidator\"></xref> object.\n  remarks: The Initialize method is only valid if called immediately after the construction of an <xref:System.Xml.Schema.XmlSchemaValidator> object or after a call to <xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A>.\n  example:\n  - \"The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \\n  \\n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/m-system.xml.schema.xmls_4_1.cs)]\\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/m-system.xml.schema.xmls_4_1.vb)]  \\n  \\n The example takes the `contosoBooks.xml` file as input.  \\n  \\n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/m-system.xml.schema.xmls_4_2.xml)]  \\n  \\n The example also takes the `contosoBooks.xsd` as an input.  \\n  \\n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/m-system.xml.schema.xmls_4_3.xsd)]\"\n  syntax:\n    content: public void Initialize ();\n    parameters: []\n  overload: System.Xml.Schema.XmlSchemaValidator.Initialize*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Calling the <xref:System.Xml.Schema.XmlSchemaValidator.Initialize*> method is valid immediately after the construction of an <xref href=\"System.Xml.Schema.XmlSchemaValidator\"></xref> object or after a call to <xref:System.Xml.Schema.XmlSchemaValidator.EndValidation*> only.\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)\n  id: Initialize(System.Xml.Schema.XmlSchemaObject)\n  parent: System.Xml.Schema.XmlSchemaValidator\n  langs:\n  - csharp\n  name: Initialize(XmlSchemaObject)\n  nameWithType: XmlSchemaValidator.Initialize(XmlSchemaObject)\n  fullName: System.Xml.Schema.XmlSchemaValidator.Initialize(XmlSchemaObject)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Initializes the state of the <xref href=\"System.Xml.Schema.XmlSchemaValidator\"></xref> object using the <xref href=\"System.Xml.Schema.XmlSchemaObject\"></xref> specified for partial validation.\n  remarks: The Initialize method that takes an <xref:System.Xml.Schema.XmlSchemaObject> as a parameter initializes an <xref:System.Xml.Schema.XmlSchemaValidator> object to its starting state for partial validation.\n  example:\n  - \"In the following example, an <xref:System.Xml.Schema.XmlSchemaObject> is initialized for partial validation using the Initialize method. The `orderNumber` schema element is passed by selecting the schema element by <xref:System.Xml.XmlQualifiedName> in the <xref:System.Xml.Schema.XmlSchemaObjectTable> collection returned by the <xref:System.Xml.Schema.XmlSchemaSet.GlobalElements%2A> property of the <xref:System.Xml.Schema.XmlSchemaSet> object. The <xref:System.Xml.Schema.XmlSchemaValidator> object then validates this specific element.  \\n  \\n```vb#  \\nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \\nschemaSet.Add(Nothing, \\\"schema.xsd\\\")  \\nschemaSet.Compile()  \\nDim nameTable As NameTable = New NameTable()  \\nDim manager As XmlNamespaceManager = New XmlNamespaceManager(nameTable)  \\n  \\nDim validator As XmlSchemaValidator = New XmlSchemaValidator(nameTable, schemaSet, manager, XmlSchemaValidationFlags.None)  \\nvalidator.Initialize(schemaSet.GlobalElements.Item(New XmlQualifiedName(\\\"orderNumber\\\")))  \\n  \\nvalidator.ValidateElement(\\\"orderNumber\\\", \\\"\\\", Nothing)  \\nvalidator.GetUnspecifiedDefaultAttributes(New ArrayList())  \\nvalidator.ValidateEndOfAttributes(Nothing)  \\nvalidator.ValidateText(\\\"123\\\")  \\nvalidator.ValidateEndElement(Nothing)  \\n```  \\n  \\n```c#  \\nXmlSchemaSet schemaSet = new XmlSchemaSet();  \\nschemaSet.Add(null, \\\"schema.xsd\\\");  \\nschemaSet.Compile();  \\nNameTable nameTable = new NameTable();  \\nXmlNamespaceManager manager = new XmlNamespaceManager(nameTable);  \\n  \\nXmlSchemaValidator validator = new XmlSchemaValidator(nameTable, schemaSet, manager, XmlSchemaValidationFlags.None);  \\nvalidator.Initialize(schemaSet.GlobalElements[new XmlQualifiedName(\\\"orderNumber\\\")]);  \\n  \\nvalidator.ValidateElement(\\\"orderNumber\\\", \\\"\\\", null);  \\nvalidator.GetUnspecifiedDefaultAttributes(new ArrayList());  \\nvalidator.ValidateEndOfAttributes(null);  \\nvalidator.ValidateText(\\\"123\\\");  \\nvalidator.ValidateEndElement(null);  \\n```  \\n  \\n The example takes the following XML schema as input.  \\n  \\n `<xs:schema xmlns:xs=\\\"http://www.w3.org/2001/XMLSchema\\\">`  \\n  \\n `<xs:element name=\\\"orderNumber\\\" type=\\\"xs:int\\\" />`  \\n  \\n `</xs:schema>`\"\n  syntax:\n    content: public void Initialize (System.Xml.Schema.XmlSchemaObject partialValidationType);\n    parameters:\n    - id: partialValidationType\n      type: System.Xml.Schema.XmlSchemaObject\n      description: An <xref href=\"System.Xml.Schema.XmlSchemaElement\"></xref>, <xref href=\"System.Xml.Schema.XmlSchemaAttribute\"></xref>, or <xref href=\"System.Xml.Schema.XmlSchemaType\"></xref> object used to initialize the validation context of the <xref href=\"System.Xml.Schema.XmlSchemaValidator\"></xref> object for partial validation.\n  overload: System.Xml.Schema.XmlSchemaValidator.Initialize*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Calling the <xref:System.Xml.Schema.XmlSchemaValidator.Initialize*> method is valid immediately after the construction of an <xref href=\"System.Xml.Schema.XmlSchemaValidator\"></xref> object or after a call to <xref:System.Xml.Schema.XmlSchemaValidator.EndValidation*> only.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <xref href=\"System.Xml.Schema.XmlSchemaObject\"></xref> parameter is not an <xref href=\"System.Xml.Schema.XmlSchemaElement\"></xref>, <xref href=\"System.Xml.Schema.XmlSchemaAttribute\"></xref>, or <xref href=\"System.Xml.Schema.XmlSchemaType\"></xref> object.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <xref href=\"System.Xml.Schema.XmlSchemaObject\"></xref> parameter cannot be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaValidator.LineInfoProvider\n  id: LineInfoProvider\n  parent: System.Xml.Schema.XmlSchemaValidator\n  langs:\n  - csharp\n  name: LineInfoProvider\n  nameWithType: XmlSchemaValidator.LineInfoProvider\n  fullName: System.Xml.Schema.XmlSchemaValidator.LineInfoProvider\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Gets or sets the line number information for the XML node being validated.\n  remarks: \"-   Line information is reported by any <xref:System.Xml.Schema.XmlSchemaValidationException> thrown during the validation process.  \\n  \\n-   The default <xref:System.Xml.IXmlLineInfo> object returned by the LineInfoProvider property returns 0 for the <xref:System.Xml.IXmlLineInfo.LineNumber%2A> and <xref:System.Xml.IXmlLineInfo.LinePosition%2A> properties.\"\n  syntax:\n    content: public System.Xml.IXmlLineInfo LineInfoProvider { get; set; }\n    return:\n      type: System.Xml.IXmlLineInfo\n      description: An <xref:System.Xml.IXmlLineInfo> object.\n  overload: System.Xml.Schema.XmlSchemaValidator.LineInfoProvider*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)\n  id: SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)\n  parent: System.Xml.Schema.XmlSchemaValidator\n  langs:\n  - csharp\n  name: SkipToEndElement(XmlSchemaInfo)\n  nameWithType: XmlSchemaValidator.SkipToEndElement(XmlSchemaInfo)\n  fullName: System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(XmlSchemaInfo)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Skips validation of the current element content and prepares the <xref href=\"System.Xml.Schema.XmlSchemaValidator\"></xref> object to validate content in the parent element's context.\n  remarks: \"The following are important notes to consider when using the SkipToEndElement method.  \\n  \\n-   The SkipToEndElement method skips validation of the current element content and prepares the <xref:System.Xml.Schema.XmlSchemaValidator> object to validate content in the parent element's context; it is equivalent to skipping validation for all the children of the current element and then calling the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method.  \\n  \\n-   If the current element content is successfully skipped, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> property is set to <xref:System.Xml.Schema.XmlSchemaValidity>.  \\n  \\n> [!NOTE]\\n>  No validation errors are reported on skipped content.\"\n  syntax:\n    content: public void SkipToEndElement (System.Xml.Schema.XmlSchemaInfo schemaInfo);\n    parameters:\n    - id: schemaInfo\n      type: System.Xml.Schema.XmlSchemaInfo\n      description: An <xref href=\"System.Xml.Schema.XmlSchemaInfo\"></xref> object whose properties are set if the current element content is successfully skipped. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The SkipToEndElement method was not called in the correct sequence. For example, calling SkipToEndElement after calling SkipToEndElement.\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaValidator.SourceUri\n  id: SourceUri\n  parent: System.Xml.Schema.XmlSchemaValidator\n  langs:\n  - csharp\n  name: SourceUri\n  nameWithType: XmlSchemaValidator.SourceUri\n  fullName: System.Xml.Schema.XmlSchemaValidator.SourceUri\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Gets or sets the source URI for the XML node being validated.\n  remarks: \"-   The source URI is reported by any <xref:System.Xml.Schema.XmlSchemaValidationException> thrown during the validation process.  \\n  \\n-   If the SourceUri property is not set, the file name for the XML document is <xref:System.String.Empty> in validation error messages.\"\n  syntax:\n    content: public Uri SourceUri { get; set; }\n    return:\n      type: System.Uri\n      description: A <xref:System.Uri> object representing the source URI for the XML node being validated; the default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Xml.Schema.XmlSchemaValidator.SourceUri*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)\n  id: ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)\n  parent: System.Xml.Schema.XmlSchemaValidator\n  langs:\n  - csharp\n  name: ValidateAttribute(String,String,String,XmlSchemaInfo)\n  nameWithType: XmlSchemaValidator.ValidateAttribute(String,String,String,XmlSchemaInfo)\n  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(String,String,String,XmlSchemaInfo)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Validates the attribute name, namespace URI, and value in the current element context.\n  remarks: \"The following are important notes to consider when using the ValidateAttribute method.  \\n  \\n-   The <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> method must be called after validating all the attributes for the current element with the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> method.  \\n  \\n-   If an <xref:System.Xml.Schema.XmlSchemaAttribute> object was passed to the <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> method, the ValidateAttribute method validates the attribute against the <xref:System.Xml.Schema.XmlSchemaAttribute> object.  \\n  \\n-   If the attribute is successfully validated in the current element context, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, and <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> properties are set with the results of the validation.\"\n  example:\n  - \"The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \\n  \\n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/a1f6d4e1-a580-41fa-b406-_1.cs)]\\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/a1f6d4e1-a580-41fa-b406-_1.vb)]  \\n  \\n The example takes the `contosoBooks.xml` file as input.  \\n  \\n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/a1f6d4e1-a580-41fa-b406-_2.xml)]  \\n  \\n The example also takes the `contosoBooks.xsd` as an input.  \\n  \\n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/a1f6d4e1-a580-41fa-b406-_3.xsd)]\"\n  syntax:\n    content: public object ValidateAttribute (string localName, string namespaceUri, string attributeValue, System.Xml.Schema.XmlSchemaInfo schemaInfo);\n    parameters:\n    - id: localName\n      type: System.String\n      description: The local name of the attribute to validate.\n    - id: namespaceUri\n      type: System.String\n      description: The namespace URI of the attribute to validate.\n    - id: attributeValue\n      type: System.String\n      description: The value of the attribute to validate.\n    - id: schemaInfo\n      type: System.Xml.Schema.XmlSchemaInfo\n      description: An <xref href=\"System.Xml.Schema.XmlSchemaInfo\"></xref> object whose properties are set on successful validation of the attribute. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    return:\n      type: System.Object\n      description: The validated attribute's value.\n  overload: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*\n  exceptions:\n  - type: System.Xml.Schema.XmlSchemaValidationException\n    commentId: T:System.Xml.Schema.XmlSchemaValidationException\n    description: The attribute is not valid in the current element context.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*> method was not called in the correct sequence. For example, calling <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*> after calling <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: One or more of the parameters specified are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)\n  id: ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)\n  parent: System.Xml.Schema.XmlSchemaValidator\n  langs:\n  - csharp\n  name: ValidateAttribute(String,String,XmlValueGetter,XmlSchemaInfo)\n  nameWithType: XmlSchemaValidator.ValidateAttribute(String,String,XmlValueGetter,XmlSchemaInfo)\n  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(String,String,XmlValueGetter,XmlSchemaInfo)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Validates the attribute name, namespace URI, and value in the current element context.\n  remarks: \"The following are important notes to consider when using the ValidateAttribute method.  \\n  \\n-   The <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> method must be called after validating all the attributes for the current element with the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> method.  \\n  \\n-   If an <xref:System.Xml.Schema.XmlSchemaAttribute> object was passed to the <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> method, the ValidateAttribute method validates the attribute against the <xref:System.Xml.Schema.XmlSchemaAttribute> object.  \\n  \\n-   If the attribute is successfully validated in the current element context, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, and <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> properties are set with the results of the validation.\"\n  example:\n  - \"The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \\n  \\n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/bdf9cba1-e5e2-4a4d-8a5a-_1.cs)]\\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/bdf9cba1-e5e2-4a4d-8a5a-_1.vb)]  \\n  \\n The example takes the `contosoBooks.xml` file as input.  \\n  \\n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/bdf9cba1-e5e2-4a4d-8a5a-_2.xml)]  \\n  \\n The example also takes the `contosoBooks.xsd` as an input.  \\n  \\n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/bdf9cba1-e5e2-4a4d-8a5a-_3.xsd)]\"\n  syntax:\n    content: public object ValidateAttribute (string localName, string namespaceUri, System.Xml.Schema.XmlValueGetter attributeValue, System.Xml.Schema.XmlSchemaInfo schemaInfo);\n    parameters:\n    - id: localName\n      type: System.String\n      description: The local name of the attribute to validate.\n    - id: namespaceUri\n      type: System.String\n      description: The namespace URI of the attribute to validate.\n    - id: attributeValue\n      type: System.Xml.Schema.XmlValueGetter\n      description: An <xref href=\"System.Xml.Schema.XmlValueGetter\"></xref><xref uid=\"langword_csharp_delegate\" name=\"delegate\" href=\"\"></xref> used to pass the attribute's value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.\n    - id: schemaInfo\n      type: System.Xml.Schema.XmlSchemaInfo\n      description: An <xref href=\"System.Xml.Schema.XmlSchemaInfo\"></xref> object whose properties are set on successful validation of the attribute. This parameter and can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    return:\n      type: System.Object\n      description: The validated attribute's value.\n  overload: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*\n  exceptions:\n  - type: System.Xml.Schema.XmlSchemaValidationException\n    commentId: T:System.Xml.Schema.XmlSchemaValidationException\n    description: The attribute is not valid in the current element context.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*> method was not called in the correct sequence. For example, calling <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*> after calling <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: One or more of the parameters specified are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)\n  id: ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)\n  parent: System.Xml.Schema.XmlSchemaValidator\n  langs:\n  - csharp\n  name: ValidateElement(String,String,XmlSchemaInfo)\n  nameWithType: XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo)\n  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Validates the element in the current context.\n  remarks: \"The following are important notes to consider when using the ValidateElement method.  \\n  \\n-   If the element name is successfully validated in the current context, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A>, and <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> properties are set with the results of the validation.  \\n  \\n-   If the element name or any of its attributes are invalid the current context, the <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> property is set to <xref:System.Xml.Schema.XmlSchemaValidity>; otherwise the <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> property is set to <xref:System.Xml.Schema.XmlSchemaValidity>.\"\n  example:\n  - \"The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \\n  \\n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/0c1583e7-54af-4d75-b62c-_1.cs)]\\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/0c1583e7-54af-4d75-b62c-_1.vb)]  \\n  \\n The example takes the `contosoBooks.xml` file as input.  \\n  \\n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/0c1583e7-54af-4d75-b62c-_2.xml)]  \\n  \\n The example also takes the `contosoBooks.xsd` as an input.  \\n  \\n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/0c1583e7-54af-4d75-b62c-_3.xsd)]\"\n  syntax:\n    content: public void ValidateElement (string localName, string namespaceUri, System.Xml.Schema.XmlSchemaInfo schemaInfo);\n    parameters:\n    - id: localName\n      type: System.String\n      description: The local name of the element to validate.\n    - id: namespaceUri\n      type: System.String\n      description: The namespace URI of the element to validate.\n    - id: schemaInfo\n      type: System.Xml.Schema.XmlSchemaInfo\n      description: An <xref href=\"System.Xml.Schema.XmlSchemaInfo\"></xref> object whose properties are set on successful validation of the element's name. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Xml.Schema.XmlSchemaValidator.ValidateElement*\n  exceptions:\n  - type: System.Xml.Schema.XmlSchemaValidationException\n    commentId: T:System.Xml.Schema.XmlSchemaValidationException\n    description: The element's name is not valid in the current context.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement*> method was not called in the correct sequence. For example, the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement*> method is called after calling <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>.\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)\n  id: ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)\n  parent: System.Xml.Schema.XmlSchemaValidator\n  langs:\n  - csharp\n  name: ValidateElement(String,String,XmlSchemaInfo,String,String,String,String)\n  nameWithType: XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo,String,String,String,String)\n  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo,String,String,String,String)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Validates the element in the current context with the `xsi:Type`, `xsi:Nil`, `xsi:SchemaLocation`, and `xsi:NoNamespaceSchemaLocation` attribute values specified.\n  remarks: \"The following are important notes to consider when using the ValidateElement method.  \\n  \\n-   If the element name is successfully validated in the current context, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A>, and <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> properties are set with the results of the validation.  \\n  \\n-   If the element name or any of its attributes are invalid in the current context, the <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> property is set to <xref:System.Xml.Schema.XmlSchemaValidity>; otherwise the <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> property is set to <xref:System.Xml.Schema.XmlSchemaValidity>.  \\n  \\n-   If the <xref:System.Xml.Schema.XmlSchemaValidationFlags> value was not passed as a parameter to the <xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A> constructor, `xsi:SchemaLocation` and `xsi:NoNamespaceSchemaLocation` attribute values are ignored.\"\n  syntax:\n    content: public void ValidateElement (string localName, string namespaceUri, System.Xml.Schema.XmlSchemaInfo schemaInfo, string xsiType, string xsiNil, string xsiSchemaLocation, string xsiNoNamespaceSchemaLocation);\n    parameters:\n    - id: localName\n      type: System.String\n      description: The local name of the element to validate.\n    - id: namespaceUri\n      type: System.String\n      description: The namespace URI of the element to validate.\n    - id: schemaInfo\n      type: System.Xml.Schema.XmlSchemaInfo\n      description: An <xref href=\"System.Xml.Schema.XmlSchemaInfo\"></xref> object whose properties are set on successful validation of the element's name. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    - id: xsiType\n      type: System.String\n      description: The `xsi:Type` attribute value of the element. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    - id: xsiNil\n      type: System.String\n      description: The `xsi:Nil` attribute value of the element. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    - id: xsiSchemaLocation\n      type: System.String\n      description: The `xsi:SchemaLocation` attribute value of the element. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    - id: xsiNoNamespaceSchemaLocation\n      type: System.String\n      description: The `xsi:NoNamespaceSchemaLocation` attribute value of the element. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Xml.Schema.XmlSchemaValidator.ValidateElement*\n  exceptions:\n  - type: System.Xml.Schema.XmlSchemaValidationException\n    commentId: T:System.Xml.Schema.XmlSchemaValidationException\n    description: The element's name is not valid in the current context.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement*> method was not called in the correct sequence. For example, the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement*> method is called after calling <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>.\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)\n  id: ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)\n  parent: System.Xml.Schema.XmlSchemaValidator\n  langs:\n  - csharp\n  name: ValidateEndElement(XmlSchemaInfo)\n  nameWithType: XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo)\n  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Verifies if the text content of the element is valid according to its data type for elements with simple content, and verifies if the content of the current element is complete for elements with complex content.\n  remarks: \"The following are important notes to consider when using the ValidateEndElement method.  \\n  \\n-   For elements with simple content, the ValidateEndElement method verifies that the text content of the element is valid according to its data type and returns the parsed typed value. The text content of the element is obtained from the results of previous calls to <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A>.  \\n  \\n-   For elements with complex content, the ValidateEndElement method verifies if the content of the current element is complete.  \\n  \\n-   If the element has a default value, the value returned from the ValidateEndElement method is the default value for the element.  \\n  \\n-   If the <xref:System.Xml.Schema.XmlSchemaValidator> object was constructed with the <xref:System.Xml.Schema.XmlSchemaValidationFlags> value as a parameter, the ValidateEndElement method checks the identity constraint rules (if any) that apply to the element.  \\n  \\n-   If the element is successfully validated in the current context, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, and <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> properties are set with the results of the validation.\"\n  syntax:\n    content: public object ValidateEndElement (System.Xml.Schema.XmlSchemaInfo schemaInfo);\n    parameters:\n    - id: schemaInfo\n      type: System.Xml.Schema.XmlSchemaInfo\n      description: An <xref href=\"System.Xml.Schema.XmlSchemaInfo\"></xref> object whose properties are set on successful validation of the element. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    return:\n      type: System.Object\n      description: The parsed, typed text value of the element if the element has simple content.\n  overload: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement*\n  exceptions:\n  - type: System.Xml.Schema.XmlSchemaValidationException\n    commentId: T:System.Xml.Schema.XmlSchemaValidationException\n    description: The element's content is not valid.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement*> method was not called in the correct sequence. For example, if the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement*> method is called after calling <xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*>.\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)\n  id: ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)\n  parent: System.Xml.Schema.XmlSchemaValidator\n  langs:\n  - csharp\n  name: ValidateEndElement(XmlSchemaInfo,Object)\n  nameWithType: XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo,Object)\n  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo,Object)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Verifies if the text content of the element specified is valid according to its data type.\n  remarks: \"> [!IMPORTANT]\\n>  If you are validating against the `xs:key`, `xs:keyref`, or `xs:unique` identity constraints, do not use the ValidateEndElement method overload. Instead, call the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> method and pass it the value of the element. Then call the  <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method overload, which takes <xref:System.Xml.Schema.XmlSchemaInfo> as an argument, to verify that the text content of the element is valid according to its data type.  \\n  \\n The following are important notes to consider when using the ValidateEndElement method.  \\n  \\n-   For elements with simple content, the ValidateEndElement method verifies that the text content of the element is valid according to its data type and returns the parsed typed value. The text content of the element is obtained from the typed content passed as a parameter.  \\n  \\n-   If calls to the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> method have been previously made, an <xref:System.InvalidOperationException> is thrown.  \\n  \\n-   If the element has complex content an <xref:System.InvalidOperationException> is thrown.  \\n  \\n-   If the <xref:System.Xml.Schema.XmlSchemaValidator> object was constructed with the <xref:System.Xml.Schema.XmlSchemaValidationFlags> value as a parameter, the ValidateEndElement method checks the identity constraint rules (if any) that apply to the element.  \\n  \\n-   If the element is successfully validated in the current context, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, and <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> properties are set with the results of the validation.\"\n  example:\n  - \"The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \\n  \\n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/2cd331b9-caa2-4647-acb8-_1.cs)]\\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/2cd331b9-caa2-4647-acb8-_1.vb)]  \\n  \\n The example takes the `contosoBooks.xml` file as input.  \\n  \\n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/2cd331b9-caa2-4647-acb8-_2.xml)]  \\n  \\n The example also takes the `contosoBooks.xsd` as an input.  \\n  \\n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/2cd331b9-caa2-4647-acb8-_3.xsd)]\"\n  syntax:\n    content: public object ValidateEndElement (System.Xml.Schema.XmlSchemaInfo schemaInfo, object typedValue);\n    parameters:\n    - id: schemaInfo\n      type: System.Xml.Schema.XmlSchemaInfo\n      description: An <xref href=\"System.Xml.Schema.XmlSchemaInfo\"></xref> object whose properties are set on successful validation of the text content of the element. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    - id: typedValue\n      type: System.Object\n      description: The typed text content of the element.\n    return:\n      type: System.Object\n      description: The parsed, typed simple content of the element.\n  overload: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement*\n  exceptions:\n  - type: System.Xml.Schema.XmlSchemaValidationException\n    commentId: T:System.Xml.Schema.XmlSchemaValidationException\n    description: The element's text content is not valid.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement*> method was not called in the correct sequence (for example, if the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement*> method is called after calling <xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*>), calls to the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText*> method have been previously made, or the element has complex content.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The typed text content parameter cannot be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)\n  id: ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)\n  parent: System.Xml.Schema.XmlSchemaValidator\n  langs:\n  - csharp\n  name: ValidateEndOfAttributes(XmlSchemaInfo)\n  nameWithType: XmlSchemaValidator.ValidateEndOfAttributes(XmlSchemaInfo)\n  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(XmlSchemaInfo)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Verifies whether all the required attributes in the element context are present and prepares the <xref href=\"System.Xml.Schema.XmlSchemaValidator\"></xref> object to validate the child content of the element.\n  remarks: \"The following are important notes to consider when using the ValidateEndOfAttributes method.  \\n  \\n-   The <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> method should always be called before ValidateEndOfAttributes.  \\n  \\n-   The ValidateEndOfAttributes method must be called before proceeding with validation of an element's content.  \\n  \\n-   If all the required attributes in the element context are present, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> property is set to <xref:System.Xml.Schema.XmlSchemaValidity>.\"\n  example:\n  - \"The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \\n  \\n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/2739ac73-0581-4d83-ad9c-_1.cs)]\\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/2739ac73-0581-4d83-ad9c-_1.vb)]  \\n  \\n The example takes the `contosoBooks.xml` file as input.  \\n  \\n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/2739ac73-0581-4d83-ad9c-_2.xml)]  \\n  \\n The example also takes the `contosoBooks.xsd` as an input.  \\n  \\n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/2739ac73-0581-4d83-ad9c-_3.xsd)]\"\n  syntax:\n    content: public void ValidateEndOfAttributes (System.Xml.Schema.XmlSchemaInfo schemaInfo);\n    parameters:\n    - id: schemaInfo\n      type: System.Xml.Schema.XmlSchemaInfo\n      description: An <xref href=\"System.Xml.Schema.XmlSchemaInfo\"></xref> object whose properties are set on successful verification that all the required attributes in the element context are present. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*\n  exceptions:\n  - type: System.Xml.Schema.XmlSchemaValidationException\n    commentId: T:System.Xml.Schema.XmlSchemaValidationException\n    description: One or more of the required attributes in the current element context were not found.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The ValidateEndOfAttributes method was not called in the correct sequence. For example, calling ValidateEndOfAttributes after calling <xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: One or more of the parameters specified are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)\n  id: ValidateText(System.String)\n  parent: System.Xml.Schema.XmlSchemaValidator\n  langs:\n  - csharp\n  name: ValidateText(String)\n  nameWithType: XmlSchemaValidator.ValidateText(String)\n  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateText(String)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Validates whether the text <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref> specified is allowed in the current element context, and accumulates the text for validation if the current element has simple content.\n  remarks: \"The following are important notes to consider when using the ValidateText method.  \\n  \\n-   If the element has simple content, the text `string` specified is concatenated on each call to the ValidateText method until the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method is called. When the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method is called, all the text is validated.  \\n  \\n-   If the element has complex content, no text concatenation occurs.\"\n  syntax:\n    content: public void ValidateText (string elementValue);\n    parameters:\n    - id: elementValue\n      type: System.String\n      description: A text <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref> to validate in the current element context.\n  overload: System.Xml.Schema.XmlSchemaValidator.ValidateText*\n  exceptions:\n  - type: System.Xml.Schema.XmlSchemaValidationException\n    commentId: T:System.Xml.Schema.XmlSchemaValidationException\n    description: The text <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref> specified is not allowed in the current element context.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText*> method was not called in the correct sequence. For example, the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText*> method is called after calling <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The text <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref> parameter cannot be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)\n  id: ValidateText(System.Xml.Schema.XmlValueGetter)\n  parent: System.Xml.Schema.XmlSchemaValidator\n  langs:\n  - csharp\n  name: ValidateText(XmlValueGetter)\n  nameWithType: XmlSchemaValidator.ValidateText(XmlValueGetter)\n  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateText(XmlValueGetter)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Validates whether the text returned by the <xref href=\"System.Xml.Schema.XmlValueGetter\"></xref> object specified is allowed in the current element context, and accumulates the text for validation if the current element has simple content.\n  remarks: \"The following are important notes to consider when using the ValidateText method.  \\n  \\n-   If the element has simple content, the text `string` specified is concatenated on each call to the ValidateText method until the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method is called. When the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method is called, all the text is validated.  \\n  \\n-   If the element has complex content, no text concatenation occurs.\"\n  syntax:\n    content: public void ValidateText (System.Xml.Schema.XmlValueGetter elementValue);\n    parameters:\n    - id: elementValue\n      type: System.Xml.Schema.XmlValueGetter\n      description: An <xref href=\"System.Xml.Schema.XmlValueGetter\"></xref><xref uid=\"langword_csharp_delegate\" name=\"delegate\" href=\"\"></xref> used to pass the text value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.\n  overload: System.Xml.Schema.XmlSchemaValidator.ValidateText*\n  exceptions:\n  - type: System.Xml.Schema.XmlSchemaValidationException\n    commentId: T:System.Xml.Schema.XmlSchemaValidationException\n    description: The text <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref> specified is not allowed in the current element context.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText*> method was not called in the correct sequence. For example, the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText*> method is called after calling <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The text <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref> parameter cannot be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)\n  id: ValidateWhitespace(System.String)\n  parent: System.Xml.Schema.XmlSchemaValidator\n  langs:\n  - csharp\n  name: ValidateWhitespace(String)\n  nameWithType: XmlSchemaValidator.ValidateWhitespace(String)\n  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(String)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Validates whether the white space in the <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref> specified is allowed in the current element context, and accumulates the white space for validation if the current element has simple content.\n  syntax:\n    content: public void ValidateWhitespace (string elementValue);\n    parameters:\n    - id: elementValue\n      type: System.String\n      description: A white space <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref> to validate in the current element context.\n  overload: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace*\n  exceptions:\n  - type: System.Xml.Schema.XmlSchemaValidationException\n    commentId: T:System.Xml.Schema.XmlSchemaValidationException\n    description: White space is not allowed in the current element context.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace*> method was not called in the correct sequence. For example, if the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace*> method is called after calling <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>.\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)\n  id: ValidateWhitespace(System.Xml.Schema.XmlValueGetter)\n  parent: System.Xml.Schema.XmlSchemaValidator\n  langs:\n  - csharp\n  name: ValidateWhitespace(XmlValueGetter)\n  nameWithType: XmlSchemaValidator.ValidateWhitespace(XmlValueGetter)\n  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(XmlValueGetter)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Validates whether the white space returned by the <xref href=\"System.Xml.Schema.XmlValueGetter\"></xref> object specified is allowed in the current element context, and accumulates the white space for validation if the current element has simple content.\n  syntax:\n    content: public void ValidateWhitespace (System.Xml.Schema.XmlValueGetter elementValue);\n    parameters:\n    - id: elementValue\n      type: System.Xml.Schema.XmlValueGetter\n      description: An <xref href=\"System.Xml.Schema.XmlValueGetter\"></xref><xref uid=\"langword_csharp_delegate\" name=\"delegate\" href=\"\"></xref> used to pass the white space value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.\n  overload: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace*\n  exceptions:\n  - type: System.Xml.Schema.XmlSchemaValidationException\n    commentId: T:System.Xml.Schema.XmlSchemaValidationException\n    description: White space is not allowed in the current element context.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace*> method was not called in the correct sequence. For example, if the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace*> method is called after calling <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>.\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler\n  id: ValidationEventHandler\n  parent: System.Xml.Schema.XmlSchemaValidator\n  langs:\n  - csharp\n  name: ValidationEventHandler\n  nameWithType: XmlSchemaValidator.ValidationEventHandler\n  fullName: System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler\n  type: Event\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: The <xref href=\"System.Xml.Schema.ValidationEventHandler\"></xref> that receives schema validation warnings and errors encountered during schema validation.\n  remarks: If no <xref:System.Xml.Schema.ValidationEventHandler> is specified, an <xref:System.Xml.Schema.XmlSchemaValidationException> is thrown for all schema validation errors with an <xref:System.Xml.Schema.XmlSeverityType> value of <xref:System.Xml.Schema.XmlSeverityType>. An <xref:System.Xml.Schema.XmlSchemaValidationException> is not thrown for validation warnings with an <xref:System.Xml.Schema.XmlSeverityType> value of <xref:System.Xml.Schema.XmlSeverityType>.\n  example:\n  - \"The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \\n  \\n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/e-system.xml.schema.xmls_0_1.cs)]\\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/e-system.xml.schema.xmls_0_1.vb)]  \\n  \\n The example takes the `contosoBooks.xml` file as input.  \\n  \\n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/e-system.xml.schema.xmls_0_2.xml)]  \\n  \\n The example also takes the `contosoBooks.xsd` as an input.  \\n  \\n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/e-system.xml.schema.xmls_0_3.xsd)]\"\n  syntax:\n    content: public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;\n    return:\n      type: System.Xml.Schema.ValidationEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaValidator.ValidationEventSender\n  id: ValidationEventSender\n  parent: System.Xml.Schema.XmlSchemaValidator\n  langs:\n  - csharp\n  name: ValidationEventSender\n  nameWithType: XmlSchemaValidator.ValidationEventSender\n  fullName: System.Xml.Schema.XmlSchemaValidator.ValidationEventSender\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Gets or sets the object sent as the sender object of a validation event.\n  remarks: ''\n  example:\n  - For an example of a validation event, see the <xref:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler> event.\n  syntax:\n    content: public object ValidationEventSender { get; set; }\n    return:\n      type: System.Object\n      description: An <xref:System.Object>; the default is this <xref href=\"System.Xml.Schema.XmlSchemaValidator\"></xref> object.\n  overload: System.Xml.Schema.XmlSchemaValidator.ValidationEventSender*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaValidator.XmlResolver\n  id: XmlResolver\n  parent: System.Xml.Schema.XmlSchemaValidator\n  langs:\n  - csharp\n  name: XmlResolver\n  nameWithType: XmlSchemaValidator.XmlResolver\n  fullName: System.Xml.Schema.XmlSchemaValidator.XmlResolver\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Sets the <xref href=\"System.Xml.XmlResolver\"></xref> object used to resolve `xs:import` and `xs:include` elements as well as `xsi:schemaLocation` and `xsi:noNamespaceSchemaLocation` attributes.\n  remarks: >-\n    > [!IMPORTANT]\n\n    >  The <xref:System.Xml.Schema.XmlSchemaValidationFlags> and <xref:System.Xml.Schema.XmlSchemaValidationFlags> validation flags of an <xref:System.Xml.Schema.XmlSchemaValidator> object are not set be default. Additionally, the XmlResolver property of an <xref:System.Xml.Schema.XmlSchemaValidator> object is `null` by default. As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.\n  syntax:\n    content: public System.Xml.XmlResolver XmlResolver { set; }\n    return:\n      type: System.Xml.XmlResolver\n      description: An <xref href=\"System.Xml.XmlResolver\"></xref> object; the default is an <xref href=\"System.Xml.XmlUrlResolver\"></xref> object.\n  overload: System.Xml.Schema.XmlSchemaValidator.XmlResolver*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Xml.Schema.XmlSchemaException\n  parent: System.Xml.Schema\n  isExternal: false\n  name: XmlSchemaException\n  nameWithType: XmlSchemaException\n  fullName: System.Xml.Schema.XmlSchemaException\n- uid: System.Xml.Schema.XmlSchemaValidationException\n  parent: System.Xml.Schema\n  isExternal: false\n  name: XmlSchemaValidationException\n  nameWithType: XmlSchemaValidationException\n  fullName: System.Xml.Schema.XmlSchemaValidationException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: XmlSchemaValidator(XmlNameTable,XmlSchemaSet,IXmlNamespaceResolver,XmlSchemaValidationFlags)\n  nameWithType: XmlSchemaValidator.XmlSchemaValidator(XmlNameTable,XmlSchemaSet,IXmlNamespaceResolver,XmlSchemaValidationFlags)\n  fullName: System.Xml.Schema.XmlSchemaValidator.XmlSchemaValidator(XmlNameTable,XmlSchemaSet,IXmlNamespaceResolver,XmlSchemaValidationFlags)\n- uid: System.Xml.XmlNameTable\n  parent: System.Xml\n  isExternal: true\n  name: XmlNameTable\n  nameWithType: XmlNameTable\n  fullName: System.Xml.XmlNameTable\n- uid: System.Xml.Schema.XmlSchemaSet\n  parent: System.Xml.Schema\n  isExternal: false\n  name: XmlSchemaSet\n  nameWithType: XmlSchemaSet\n  fullName: System.Xml.Schema.XmlSchemaSet\n- uid: System.Xml.IXmlNamespaceResolver\n  parent: System.Xml\n  isExternal: true\n  name: IXmlNamespaceResolver\n  nameWithType: IXmlNamespaceResolver\n  fullName: System.Xml.IXmlNamespaceResolver\n- uid: System.Xml.Schema.XmlSchemaValidationFlags\n  parent: System.Xml.Schema\n  isExternal: false\n  name: XmlSchemaValidationFlags\n  nameWithType: XmlSchemaValidationFlags\n  fullName: System.Xml.Schema.XmlSchemaValidationFlags\n- uid: System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: AddSchema(XmlSchema)\n  nameWithType: XmlSchemaValidator.AddSchema(XmlSchema)\n  fullName: System.Xml.Schema.XmlSchemaValidator.AddSchema(XmlSchema)\n- uid: System.Xml.Schema.XmlSchema\n  parent: System.Xml.Schema\n  isExternal: true\n  name: XmlSchema\n  nameWithType: XmlSchema\n  fullName: System.Xml.Schema.XmlSchema\n- uid: System.Xml.Schema.XmlSchemaValidator.EndValidation\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: EndValidation()\n  nameWithType: XmlSchemaValidator.EndValidation()\n  fullName: System.Xml.Schema.XmlSchemaValidator.EndValidation()\n- uid: System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: GetExpectedAttributes()\n  nameWithType: XmlSchemaValidator.GetExpectedAttributes()\n  fullName: System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes()\n- uid: System.Xml.Schema.XmlSchemaAttribute[]\n  parent: System.Xml.Schema\n  isExternal: false\n  name: XmlSchemaAttribute\n  nameWithType: XmlSchemaAttribute\n  fullName: System.Xml.Schema.XmlSchemaAttribute[]\n  spec.csharp:\n  - uid: System.Xml.Schema.XmlSchemaAttribute\n    name: XmlSchemaAttribute\n    nameWithType: XmlSchemaAttribute\n    fullName: XmlSchemaAttribute[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: GetExpectedParticles()\n  nameWithType: XmlSchemaValidator.GetExpectedParticles()\n  fullName: System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles()\n- uid: System.Xml.Schema.XmlSchemaParticle[]\n  parent: System.Xml.Schema\n  isExternal: false\n  name: XmlSchemaParticle\n  nameWithType: XmlSchemaParticle\n  fullName: System.Xml.Schema.XmlSchemaParticle[]\n  spec.csharp:\n  - uid: System.Xml.Schema.XmlSchemaParticle\n    name: XmlSchemaParticle\n    nameWithType: XmlSchemaParticle\n    fullName: XmlSchemaParticle[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: GetUnspecifiedDefaultAttributes(ArrayList)\n  nameWithType: XmlSchemaValidator.GetUnspecifiedDefaultAttributes(ArrayList)\n  fullName: System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(ArrayList)\n- uid: System.Collections.ArrayList\n  parent: System.Collections\n  isExternal: false\n  name: ArrayList\n  nameWithType: ArrayList\n  fullName: System.Collections.ArrayList\n- uid: System.Xml.Schema.XmlSchemaValidator.Initialize\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: Initialize()\n  nameWithType: XmlSchemaValidator.Initialize()\n  fullName: System.Xml.Schema.XmlSchemaValidator.Initialize()\n- uid: System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: Initialize(XmlSchemaObject)\n  nameWithType: XmlSchemaValidator.Initialize(XmlSchemaObject)\n  fullName: System.Xml.Schema.XmlSchemaValidator.Initialize(XmlSchemaObject)\n- uid: System.Xml.Schema.XmlSchemaObject\n  parent: System.Xml.Schema\n  isExternal: false\n  name: XmlSchemaObject\n  nameWithType: XmlSchemaObject\n  fullName: System.Xml.Schema.XmlSchemaObject\n- uid: System.Xml.Schema.XmlSchemaValidator.LineInfoProvider\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: LineInfoProvider\n  nameWithType: XmlSchemaValidator.LineInfoProvider\n  fullName: System.Xml.Schema.XmlSchemaValidator.LineInfoProvider\n- uid: System.Xml.IXmlLineInfo\n  parent: System.Xml\n  isExternal: true\n  name: IXmlLineInfo\n  nameWithType: IXmlLineInfo\n  fullName: System.Xml.IXmlLineInfo\n- uid: System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: SkipToEndElement(XmlSchemaInfo)\n  nameWithType: XmlSchemaValidator.SkipToEndElement(XmlSchemaInfo)\n  fullName: System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(XmlSchemaInfo)\n- uid: System.Xml.Schema.XmlSchemaInfo\n  parent: System.Xml.Schema\n  isExternal: false\n  name: XmlSchemaInfo\n  nameWithType: XmlSchemaInfo\n  fullName: System.Xml.Schema.XmlSchemaInfo\n- uid: System.Xml.Schema.XmlSchemaValidator.SourceUri\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: SourceUri\n  nameWithType: XmlSchemaValidator.SourceUri\n  fullName: System.Xml.Schema.XmlSchemaValidator.SourceUri\n- uid: System.Uri\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: ValidateAttribute(String,String,String,XmlSchemaInfo)\n  nameWithType: XmlSchemaValidator.ValidateAttribute(String,String,String,XmlSchemaInfo)\n  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(String,String,String,XmlSchemaInfo)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: ValidateAttribute(String,String,XmlValueGetter,XmlSchemaInfo)\n  nameWithType: XmlSchemaValidator.ValidateAttribute(String,String,XmlValueGetter,XmlSchemaInfo)\n  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(String,String,XmlValueGetter,XmlSchemaInfo)\n- uid: System.Xml.Schema.XmlValueGetter\n  parent: System.Xml.Schema\n  isExternal: false\n  name: XmlValueGetter\n  nameWithType: XmlValueGetter\n  fullName: System.Xml.Schema.XmlValueGetter\n- uid: System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: ValidateElement(String,String,XmlSchemaInfo)\n  nameWithType: XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo)\n  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo)\n- uid: System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: ValidateElement(String,String,XmlSchemaInfo,String,String,String,String)\n  nameWithType: XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo,String,String,String,String)\n  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo,String,String,String,String)\n- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: ValidateEndElement(XmlSchemaInfo)\n  nameWithType: XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo)\n  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo)\n- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: ValidateEndElement(XmlSchemaInfo,Object)\n  nameWithType: XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo,Object)\n  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo,Object)\n- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: ValidateEndOfAttributes(XmlSchemaInfo)\n  nameWithType: XmlSchemaValidator.ValidateEndOfAttributes(XmlSchemaInfo)\n  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(XmlSchemaInfo)\n- uid: System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: ValidateText(String)\n  nameWithType: XmlSchemaValidator.ValidateText(String)\n  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateText(String)\n- uid: System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: ValidateText(XmlValueGetter)\n  nameWithType: XmlSchemaValidator.ValidateText(XmlValueGetter)\n  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateText(XmlValueGetter)\n- uid: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: ValidateWhitespace(String)\n  nameWithType: XmlSchemaValidator.ValidateWhitespace(String)\n  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(String)\n- uid: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: ValidateWhitespace(XmlValueGetter)\n  nameWithType: XmlSchemaValidator.ValidateWhitespace(XmlValueGetter)\n  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(XmlValueGetter)\n- uid: System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: ValidationEventHandler\n  nameWithType: XmlSchemaValidator.ValidationEventHandler\n  fullName: System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler\n- uid: System.Xml.Schema.ValidationEventHandler\n  parent: System.Xml.Schema\n  isExternal: false\n  name: ValidationEventHandler\n  nameWithType: ValidationEventHandler\n  fullName: System.Xml.Schema.ValidationEventHandler\n- uid: System.Xml.Schema.XmlSchemaValidator.ValidationEventSender\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: ValidationEventSender\n  nameWithType: XmlSchemaValidator.ValidationEventSender\n  fullName: System.Xml.Schema.XmlSchemaValidator.ValidationEventSender\n- uid: System.Xml.Schema.XmlSchemaValidator.XmlResolver\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: XmlResolver\n  nameWithType: XmlSchemaValidator.XmlResolver\n  fullName: System.Xml.Schema.XmlSchemaValidator.XmlResolver\n- uid: System.Xml.XmlResolver\n  parent: System.Xml\n  isExternal: false\n  name: XmlResolver\n  nameWithType: XmlResolver\n  fullName: System.Xml.XmlResolver\n- uid: System.Xml.Schema.XmlSchemaValidator.#ctor*\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: XmlSchemaValidator\n  nameWithType: XmlSchemaValidator.XmlSchemaValidator\n- uid: System.Xml.Schema.XmlSchemaValidator.AddSchema*\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: AddSchema\n  nameWithType: XmlSchemaValidator.AddSchema\n- uid: System.Xml.Schema.XmlSchemaValidator.EndValidation*\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: EndValidation\n  nameWithType: XmlSchemaValidator.EndValidation\n- uid: System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes*\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: GetExpectedAttributes\n  nameWithType: XmlSchemaValidator.GetExpectedAttributes\n- uid: System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles*\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: GetExpectedParticles\n  nameWithType: XmlSchemaValidator.GetExpectedParticles\n- uid: System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes*\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: GetUnspecifiedDefaultAttributes\n  nameWithType: XmlSchemaValidator.GetUnspecifiedDefaultAttributes\n- uid: System.Xml.Schema.XmlSchemaValidator.Initialize*\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: Initialize\n  nameWithType: XmlSchemaValidator.Initialize\n- uid: System.Xml.Schema.XmlSchemaValidator.LineInfoProvider*\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: LineInfoProvider\n  nameWithType: XmlSchemaValidator.LineInfoProvider\n- uid: System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: SkipToEndElement\n  nameWithType: XmlSchemaValidator.SkipToEndElement\n- uid: System.Xml.Schema.XmlSchemaValidator.SourceUri*\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: SourceUri\n  nameWithType: XmlSchemaValidator.SourceUri\n- uid: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: ValidateAttribute\n  nameWithType: XmlSchemaValidator.ValidateAttribute\n- uid: System.Xml.Schema.XmlSchemaValidator.ValidateElement*\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: ValidateElement\n  nameWithType: XmlSchemaValidator.ValidateElement\n- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement*\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: ValidateEndElement\n  nameWithType: XmlSchemaValidator.ValidateEndElement\n- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: ValidateEndOfAttributes\n  nameWithType: XmlSchemaValidator.ValidateEndOfAttributes\n- uid: System.Xml.Schema.XmlSchemaValidator.ValidateText*\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: ValidateText\n  nameWithType: XmlSchemaValidator.ValidateText\n- uid: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace*\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: ValidateWhitespace\n  nameWithType: XmlSchemaValidator.ValidateWhitespace\n- uid: System.Xml.Schema.XmlSchemaValidator.ValidationEventSender*\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: ValidationEventSender\n  nameWithType: XmlSchemaValidator.ValidationEventSender\n- uid: System.Xml.Schema.XmlSchemaValidator.XmlResolver*\n  parent: System.Xml.Schema.XmlSchemaValidator\n  isExternal: false\n  name: XmlResolver\n  nameWithType: XmlSchemaValidator.XmlResolver\n"}