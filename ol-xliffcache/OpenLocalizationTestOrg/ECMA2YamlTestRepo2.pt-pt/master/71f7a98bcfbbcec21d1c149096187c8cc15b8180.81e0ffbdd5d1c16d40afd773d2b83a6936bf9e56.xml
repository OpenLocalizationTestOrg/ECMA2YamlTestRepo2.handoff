{"nodes":[{"pos":[592,641],"content":"Specifies the serialization flags for a property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the serialization flags for a property.","pos":[0,49]}]},{"pos":[654,2270],"content":"DesignerSerializationOptionsAttribute provides a constraint hint for the form that designers and design surfaces should use when interacting with the attributed property. Generally the reason for doing so is to hint <xref:System.Windows.Markup.DesignerSerializationOptions>. You might do this in cases where interacting with that property as a content-serialized form of the string has risk of introducing spurious white space. An example case where DesignerSerializationOptionsAttribute is applied for this reason is <xref:System.Windows.FrameworkElement.Name%2A?displayProperty=fullName>.       Attribute usage for DesignerSerializationOptionsAttribute supports assigning to a method. This enables you to declare serialization options for a XAML attached property, by assigning DesignerSerializationOptionsAttribute on the `Get` accessor method that supports the attached property usage pattern. An example of this in the WPF types is <xref:System.Windows.Markup.XmlAttributeProperties.XmlSpace%2A> and its `Get` accessor <xref:System.Windows.Markup.XmlAttributeProperties.GetXmlSpace%2A>.       Note that DesignerSerializationOptionsAttribute hints the desired serialization form, not whether the property is or is not serialized. If you want to influence other aspects of property serialization, you can use <xref:System.ComponentModel.DesignerSerializationVisibilityAttribute>, or can implement `ShouldSerialize` pattern methods on the owner class. For more information on the general .NET serialization patterns for design time, see [Designer Serialization Overview](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"DesignerSerializationOptionsAttribute provides a constraint hint for the form that designers and design surfaces should use when interacting with the attributed property.","pos":[0,170]},{"content":"Generally the reason for doing so is to hint &lt;xref:System.Windows.Markup.DesignerSerializationOptions&gt;.","pos":[171,274],"source":" Generally the reason for doing so is to hint <xref:System.Windows.Markup.DesignerSerializationOptions>."},{"content":"You might do this in cases where interacting with that property as a content-serialized form of the string has risk of introducing spurious white space.","pos":[275,427]},{"content":"An example case where DesignerSerializationOptionsAttribute is applied for this reason is &lt;xref:System.Windows.FrameworkElement.Name%2A?displayProperty=fullName&gt;.","pos":[428,590],"source":" An example case where DesignerSerializationOptionsAttribute is applied for this reason is <xref:System.Windows.FrameworkElement.Name%2A?displayProperty=fullName>."},{"content":"Attribute usage for DesignerSerializationOptionsAttribute supports assigning to a method.","pos":[597,686]},{"content":"This enables you to declare serialization options for a XAML attached property, by assigning DesignerSerializationOptionsAttribute on the <ph id=\"ph1\">`Get`</ph> accessor method that supports the attached property usage pattern.","pos":[687,897],"source":" This enables you to declare serialization options for a XAML attached property, by assigning DesignerSerializationOptionsAttribute on the `Get` accessor method that supports the attached property usage pattern."},{"content":"An example of this in the WPF types is &lt;xref:System.Windows.Markup.XmlAttributeProperties.XmlSpace%2A&gt; and its <ph id=\"ph1\">`Get`</ph> accessor &lt;xref:System.Windows.Markup.XmlAttributeProperties.GetXmlSpace%2A&gt;.","pos":[898,1091],"source":" An example of this in the WPF types is <xref:System.Windows.Markup.XmlAttributeProperties.XmlSpace%2A> and its `Get` accessor <xref:System.Windows.Markup.XmlAttributeProperties.GetXmlSpace%2A>."},{"content":"Note that DesignerSerializationOptionsAttribute hints the desired serialization form, not whether the property is or is not serialized.","pos":[1098,1233]},{"content":"If you want to influence other aspects of property serialization, you can use &lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute&gt;, or can implement <ph id=\"ph1\">`ShouldSerialize`</ph> pattern methods on the owner class.","pos":[1234,1453],"source":" If you want to influence other aspects of property serialization, you can use <xref:System.ComponentModel.DesignerSerializationVisibilityAttribute>, or can implement `ShouldSerialize` pattern methods on the owner class."},{"content":"For more information on the general .NET serialization patterns for design time, see <bpt id=\"p1\">[</bpt>Designer Serialization Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1454,1612],"source":" For more information on the general .NET serialization patterns for design time, see [Designer Serialization Overview](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[3339,3460],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Markup.DesignerSerializationOptionsAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Markup.DesignerSerializationOptionsAttribute\"></xref> class."},{"pos":[3749,3796],"content":"Specifies how the property is to be serialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies how the property is to be serialized.","pos":[0,47]}]},{"pos":[4036,4171],"content":"<ph id=\"ph1\">&lt;code&gt;designerSerializationOptions&lt;/code&gt;</ph> is not a valid <bpt id=\"p1\">&lt;xref href=\"System.Windows.Markup.DesignerSerializationOptions\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"<code>designerSerializationOptions</code> is not a valid <xref href=\"System.Windows.Markup.DesignerSerializationOptions\"></xref> value."},{"pos":[4730,4832],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Markup.DesignerSerializationOptions\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> set on the attribute.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Windows.Markup.DesignerSerializationOptions\"></xref> set on the attribute."},{"pos":[4844,4964],"content":"Currently the only possible value is <xref:System.Windows.Markup.DesignerSerializationOptions?displayProperty=fullName>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Currently the only possible value is &lt;xref:System.Windows.Markup.DesignerSerializationOptions?displayProperty=fullName&gt;.","pos":[0,120],"source":"Currently the only possible value is <xref:System.Windows.Markup.DesignerSerializationOptions?displayProperty=fullName>."}]},{"pos":[5178,5234],"content":"The serialization option, as a value of the enumeration.","needQuote":true,"needEscape":true,"nodes":[{"content":"The serialization option, as a value of the enumeration.","pos":[0,56]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Markup.DesignerSerializationOptionsAttribute\n  id: DesignerSerializationOptionsAttribute\n  children:\n  - System.Windows.Markup.DesignerSerializationOptionsAttribute.#ctor(System.Windows.Markup.DesignerSerializationOptions)\n  - System.Windows.Markup.DesignerSerializationOptionsAttribute.DesignerSerializationOptions\n  langs:\n  - csharp\n  name: DesignerSerializationOptionsAttribute\n  nameWithType: DesignerSerializationOptionsAttribute\n  fullName: System.Windows.Markup.DesignerSerializationOptionsAttribute\n  type: Class\n  summary: Specifies the serialization flags for a property.\n  remarks: \"DesignerSerializationOptionsAttribute provides a constraint hint for the form that designers and design surfaces should use when interacting with the attributed property. Generally the reason for doing so is to hint <xref:System.Windows.Markup.DesignerSerializationOptions>. You might do this in cases where interacting with that property as a content-serialized form of the string has risk of introducing spurious white space. An example case where DesignerSerializationOptionsAttribute is applied for this reason is <xref:System.Windows.FrameworkElement.Name%2A?displayProperty=fullName>.  \\n  \\n Attribute usage for DesignerSerializationOptionsAttribute supports assigning to a method. This enables you to declare serialization options for a XAML attached property, by assigning DesignerSerializationOptionsAttribute on the `Get` accessor method that supports the attached property usage pattern. An example of this in the WPF types is <xref:System.Windows.Markup.XmlAttributeProperties.XmlSpace%2A> and its `Get` accessor <xref:System.Windows.Markup.XmlAttributeProperties.GetXmlSpace%2A>.  \\n  \\n Note that DesignerSerializationOptionsAttribute hints the desired serialization form, not whether the property is or is not serialized. If you want to influence other aspects of property serialization, you can use <xref:System.ComponentModel.DesignerSerializationVisibilityAttribute>, or can implement `ShouldSerialize` pattern methods on the owner class. For more information on the general .NET serialization patterns for design time, see [Designer Serialization Overview](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Method | System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=false)]\n\n      public sealed class DesignerSerializationOptionsAttribute : Attribute\n  inheritance:\n  - System.Attribute\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.Markup.DesignerSerializationOptionsAttribute.#ctor(System.Windows.Markup.DesignerSerializationOptions)\n  id: '#ctor(System.Windows.Markup.DesignerSerializationOptions)'\n  parent: System.Windows.Markup.DesignerSerializationOptionsAttribute\n  langs:\n  - csharp\n  name: DesignerSerializationOptionsAttribute(DesignerSerializationOptions)\n  nameWithType: DesignerSerializationOptionsAttribute.DesignerSerializationOptionsAttribute(DesignerSerializationOptions)\n  fullName: System.Windows.Markup.DesignerSerializationOptionsAttribute.DesignerSerializationOptionsAttribute(DesignerSerializationOptions)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Markup\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Markup.DesignerSerializationOptionsAttribute\"></xref> class.\n  syntax:\n    content: public DesignerSerializationOptionsAttribute (System.Windows.Markup.DesignerSerializationOptions designerSerializationOptions);\n    parameters:\n    - id: designerSerializationOptions\n      type: System.Windows.Markup.DesignerSerializationOptions\n      description: Specifies how the property is to be serialized.\n  overload: System.Windows.Markup.DesignerSerializationOptionsAttribute.#ctor*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: <code>designerSerializationOptions</code> is not a valid <xref href=\"System.Windows.Markup.DesignerSerializationOptions\"></xref> value.\n  platform:\n  - net462\n- uid: System.Windows.Markup.DesignerSerializationOptionsAttribute.DesignerSerializationOptions\n  id: DesignerSerializationOptions\n  parent: System.Windows.Markup.DesignerSerializationOptionsAttribute\n  langs:\n  - csharp\n  name: DesignerSerializationOptions\n  nameWithType: DesignerSerializationOptionsAttribute.DesignerSerializationOptions\n  fullName: System.Windows.Markup.DesignerSerializationOptionsAttribute.DesignerSerializationOptions\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Markup\n  summary: Gets the <xref href=\"System.Windows.Markup.DesignerSerializationOptions\"></xref> set on the attribute.\n  remarks: Currently the only possible value is <xref:System.Windows.Markup.DesignerSerializationOptions?displayProperty=fullName>.\n  syntax:\n    content: public System.Windows.Markup.DesignerSerializationOptions DesignerSerializationOptions { get; }\n    return:\n      type: System.Windows.Markup.DesignerSerializationOptions\n      description: The serialization option, as a value of the enumeration.\n  overload: System.Windows.Markup.DesignerSerializationOptionsAttribute.DesignerSerializationOptions*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Attribute\n  isExternal: false\n  name: System.Attribute\n- uid: System.ComponentModel.InvalidEnumArgumentException\n  parent: System.ComponentModel\n  isExternal: false\n  name: InvalidEnumArgumentException\n  nameWithType: InvalidEnumArgumentException\n  fullName: System.ComponentModel.InvalidEnumArgumentException\n- uid: System.Windows.Markup.DesignerSerializationOptionsAttribute.#ctor(System.Windows.Markup.DesignerSerializationOptions)\n  parent: System.Windows.Markup.DesignerSerializationOptionsAttribute\n  isExternal: false\n  name: DesignerSerializationOptionsAttribute(DesignerSerializationOptions)\n  nameWithType: DesignerSerializationOptionsAttribute.DesignerSerializationOptionsAttribute(DesignerSerializationOptions)\n  fullName: System.Windows.Markup.DesignerSerializationOptionsAttribute.DesignerSerializationOptionsAttribute(DesignerSerializationOptions)\n- uid: System.Windows.Markup.DesignerSerializationOptions\n  parent: System.Windows.Markup\n  isExternal: false\n  name: DesignerSerializationOptions\n  nameWithType: DesignerSerializationOptions\n  fullName: System.Windows.Markup.DesignerSerializationOptions\n- uid: System.Windows.Markup.DesignerSerializationOptionsAttribute.DesignerSerializationOptions\n  parent: System.Windows.Markup.DesignerSerializationOptionsAttribute\n  isExternal: false\n  name: DesignerSerializationOptions\n  nameWithType: DesignerSerializationOptionsAttribute.DesignerSerializationOptions\n  fullName: System.Windows.Markup.DesignerSerializationOptionsAttribute.DesignerSerializationOptions\n- uid: System.Windows.Markup.DesignerSerializationOptionsAttribute.#ctor*\n  parent: System.Windows.Markup.DesignerSerializationOptionsAttribute\n  isExternal: false\n  name: DesignerSerializationOptionsAttribute\n  nameWithType: DesignerSerializationOptionsAttribute.DesignerSerializationOptionsAttribute\n- uid: System.Windows.Markup.DesignerSerializationOptionsAttribute.DesignerSerializationOptions*\n  parent: System.Windows.Markup.DesignerSerializationOptionsAttribute\n  isExternal: false\n  name: DesignerSerializationOptions\n  nameWithType: DesignerSerializationOptionsAttribute.DesignerSerializationOptions\n"}