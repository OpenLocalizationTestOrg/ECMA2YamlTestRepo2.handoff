{"nodes":[{"pos":[526,607],"content":"This interface enables an application to clear the Windows token cache on demand.","needQuote":true,"needEscape":true,"nodes":[{"content":"This interface enables an application to clear the Windows token cache on demand.","pos":[0,81]}]},{"pos":[620,1105],"content":"Without this interface, there is no way to remove Windows tokens obtained by logging on with the user name and password supplied with the message from the Windows logon tokens cache. When an application needs to log off a user by providing a logoff operation on its contract, there is no way to remove all traces of the user from the system: the cached Windows token that represents the user is held in the memory until its time-to-live expires and the token is removed from the cache.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Without this interface, there is no way to remove Windows tokens obtained by logging on with the user name and password supplied with the message from the Windows logon tokens cache. When an application needs to log off a user by providing a logoff operation on its contract, there is no way to remove all traces of the user from the system: the cached Windows token that represents the user is held in the memory until its time-to-live expires and the token is removed from the cache.","pos":[0,485],"nodes":[{"content":"Without this interface, there is no way to remove Windows tokens obtained by logging on with the user name and password supplied with the message from the Windows logon tokens cache.","pos":[0,182]},{"content":"When an application needs to log off a user by providing a logoff operation on its contract, there is no way to remove all traces of the user from the system: the cached Windows token that represents the user is held in the memory until its time-to-live expires and the token is removed from the cache.","pos":[183,485]}]}]},{"pos":[1718,1758],"content":"Removes all tokens from the logon cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes all tokens from the logon cache.","pos":[0,40]}]},{"pos":[1770,1821],"content":"When implemented, this method will empty the cache.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When implemented, this method will empty the cache.","pos":[0,51]}]},{"pos":[2600,2649],"content":"Removes the specified token from the logon cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the specified token from the logon cache.","pos":[0,49]}]},{"pos":[2661,2750],"content":"This method, when implemented, removes the token identified by <ph id=\"ph1\">`username`</ph> from the cache.","needQuote":true,"needEscape":true,"extradata":"MT","source":"This method, when implemented, removes the token identified by `username` from the cache."},{"pos":[2908,2945],"content":"The user name on the token to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user name on the token to remove.","pos":[0,37]}]},{"pos":[3004,3185],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the user's token was successfully removed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user's token was successfully removed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Security.Tokens.ILogonTokenCacheManager\n  id: ILogonTokenCacheManager\n  children:\n  - System.ServiceModel.Security.Tokens.ILogonTokenCacheManager.FlushLogonTokenCache\n  - System.ServiceModel.Security.Tokens.ILogonTokenCacheManager.RemoveCachedLogonToken(System.String)\n  langs:\n  - csharp\n  name: ILogonTokenCacheManager\n  nameWithType: ILogonTokenCacheManager\n  fullName: System.ServiceModel.Security.Tokens.ILogonTokenCacheManager\n  type: Interface\n  summary: This interface enables an application to clear the Windows token cache on demand.\n  remarks: 'Without this interface, there is no way to remove Windows tokens obtained by logging on with the user name and password supplied with the message from the Windows logon tokens cache. When an application needs to log off a user by providing a logoff operation on its contract, there is no way to remove all traces of the user from the system: the cached Windows token that represents the user is held in the memory until its time-to-live expires and the token is removed from the cache.'\n  syntax:\n    content: public interface ILogonTokenCacheManager\n  implements: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Tokens.ILogonTokenCacheManager.FlushLogonTokenCache\n  id: FlushLogonTokenCache\n  parent: System.ServiceModel.Security.Tokens.ILogonTokenCacheManager\n  langs:\n  - csharp\n  name: FlushLogonTokenCache()\n  nameWithType: ILogonTokenCacheManager.FlushLogonTokenCache()\n  fullName: System.ServiceModel.Security.Tokens.ILogonTokenCacheManager.FlushLogonTokenCache()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Removes all tokens from the logon cache.\n  remarks: When implemented, this method will empty the cache.\n  syntax:\n    content: public void FlushLogonTokenCache ();\n    parameters: []\n  overload: System.ServiceModel.Security.Tokens.ILogonTokenCacheManager.FlushLogonTokenCache*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Tokens.ILogonTokenCacheManager.RemoveCachedLogonToken(System.String)\n  id: RemoveCachedLogonToken(System.String)\n  parent: System.ServiceModel.Security.Tokens.ILogonTokenCacheManager\n  langs:\n  - csharp\n  name: RemoveCachedLogonToken(String)\n  nameWithType: ILogonTokenCacheManager.RemoveCachedLogonToken(String)\n  fullName: System.ServiceModel.Security.Tokens.ILogonTokenCacheManager.RemoveCachedLogonToken(String)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Removes the specified token from the logon cache.\n  remarks: This method, when implemented, removes the token identified by `username` from the cache.\n  syntax:\n    content: public bool RemoveCachedLogonToken (string username);\n    parameters:\n    - id: username\n      type: System.String\n      description: The user name on the token to remove.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user's token was successfully removed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Security.Tokens.ILogonTokenCacheManager.RemoveCachedLogonToken*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ServiceModel.Security.Tokens.ILogonTokenCacheManager.FlushLogonTokenCache\n  parent: System.ServiceModel.Security.Tokens.ILogonTokenCacheManager\n  isExternal: false\n  name: FlushLogonTokenCache()\n  nameWithType: ILogonTokenCacheManager.FlushLogonTokenCache()\n  fullName: System.ServiceModel.Security.Tokens.ILogonTokenCacheManager.FlushLogonTokenCache()\n- uid: System.ServiceModel.Security.Tokens.ILogonTokenCacheManager.RemoveCachedLogonToken(System.String)\n  parent: System.ServiceModel.Security.Tokens.ILogonTokenCacheManager\n  isExternal: false\n  name: RemoveCachedLogonToken(String)\n  nameWithType: ILogonTokenCacheManager.RemoveCachedLogonToken(String)\n  fullName: System.ServiceModel.Security.Tokens.ILogonTokenCacheManager.RemoveCachedLogonToken(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Security.Tokens.ILogonTokenCacheManager.FlushLogonTokenCache*\n  parent: System.ServiceModel.Security.Tokens.ILogonTokenCacheManager\n  isExternal: false\n  name: FlushLogonTokenCache\n  nameWithType: ILogonTokenCacheManager.FlushLogonTokenCache\n- uid: System.ServiceModel.Security.Tokens.ILogonTokenCacheManager.RemoveCachedLogonToken*\n  parent: System.ServiceModel.Security.Tokens.ILogonTokenCacheManager\n  isExternal: false\n  name: RemoveCachedLogonToken\n  nameWithType: ILogonTokenCacheManager.RemoveCachedLogonToken\n"}