{"nodes":[{"pos":[3071,3115],"content":"Represents a pop-up window that has content.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a pop-up window that has content.","pos":[0,44]}]},{"pos":[3128,5702],"content":"**Content Model**:  Popup has one content property: <xref:System.Windows.Controls.Primitives.Popup.Child%2A>. A Popup can have a maximum of one child, which can be any <xref:System.Windows.UIElement>.       The following illustration shows a Popup control that has a <xref:System.Windows.Controls.Button> as its parent.       ![Popup illustration](~/add/media/popuppicture.JPG \"Popup illustration\")       You can position a popup by setting the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> properties. For more information, see [Popup Placement Behavior](~/add/includes/ajax-current-ext-md.md). When Popup is displayed on the screen, it does not reposition itself if its parent is repositioned.       A Popup displays its content in its own window on the screen. A Popup control supports animation when the <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> property is set to `true` and the application is running with full trust. An application that is running with full trust has complete access to system resources and is typically installed on the user's system. For more information, see[Security (WPF)](~/add/includes/ajax-current-ext-md.md).       For bitmap and opacity effects to appear on the content of a Popup, you must set the effects directly on the Popup content. The content of a Popup does not inherit effects that are set on the Popup control or on any other element that is in the parent window.       A Popup is sized to its content by default. When this occurs, applying a <xref:System.Windows.UIElement.RenderTransform%2A> or bitmap effects may cause the Popup to be obscured. This occurs because the default size of the content does not provide enough area for the effects to display. If more space is required, you can define a margin around the Popup content to increase the area that is available to the control.       The <xref:System.Windows.FrameworkElement.Parent%2A> property must be set on the Popup when used in a [!INCLUDE[TLA#tla_winfxwebapp](~/add/includes/ajax-current-ext-md.md)].       To create a tooltip, use the <xref:System.Windows.Controls.ToolTip> and <xref:System.Windows.Controls.ToolTipService> classes. For more information, see [ToolTip Overview](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<bpt id=\"p1\">**</bpt>Content Model<ept id=\"p1\">**</ept>:  Popup has one content property: &lt;xref:System.Windows.Controls.Primitives.Popup.Child%2A&gt;.","pos":[0,109],"source":"**Content Model**:  Popup has one content property: <xref:System.Windows.Controls.Primitives.Popup.Child%2A>."},{"content":"A Popup can have a maximum of one child, which can be any &lt;xref:System.Windows.UIElement&gt;.","pos":[110,200],"source":" A Popup can have a maximum of one child, which can be any <xref:System.Windows.UIElement>."},{"content":"The following illustration shows a Popup control that has a &lt;xref:System.Windows.Controls.Button&gt; as its parent.","pos":[207,319],"source":"       The following illustration shows a Popup control that has a <xref:System.Windows.Controls.Button> as its parent."},{"content":"<bpt id=\"p1\">![</bpt>Popup illustration<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/popuppicture.JPG \"</bpt>Popup illustration<ept id=\"p2\">\")</ept>       You can position a popup by setting the &lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;, &lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;, &lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;, &lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;, and &lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty&gt; properties.","pos":[326,801],"source":"![Popup illustration](~/add/media/popuppicture.JPG \"Popup illustration\")       You can position a popup by setting the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> properties."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Popup Placement Behavior<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[802,894],"source":" For more information, see [Popup Placement Behavior](~/add/includes/ajax-current-ext-md.md)."},{"content":"When Popup is displayed on the screen, it does not reposition itself if its parent is repositioned.","pos":[895,994]},{"content":"A Popup displays its content in its own window on the screen.","pos":[1001,1062]},{"content":"A Popup control supports animation when the &lt;xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A&gt; property is set to <ph id=\"ph1\">`true`</ph> and the application is running with full trust.","pos":[1063,1250],"source":" A Popup control supports animation when the <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> property is set to `true` and the application is running with full trust."},{"content":"An application that is running with full trust has complete access to system resources and is typically installed on the user's system.","pos":[1251,1386]},{"content":"For more information, see<bpt id=\"p1\">[</bpt>Security (WPF)<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1387,1468],"source":" For more information, see[Security (WPF)](~/add/includes/ajax-current-ext-md.md)."},{"content":"For bitmap and opacity effects to appear on the content of a Popup, you must set the effects directly on the Popup content.","pos":[1475,1598]},{"content":"The content of a Popup does not inherit effects that are set on the Popup control or on any other element that is in the parent window.","pos":[1599,1734]},{"content":"A Popup is sized to its content by default.","pos":[1741,1784]},{"content":"When this occurs, applying a &lt;xref:System.Windows.UIElement.RenderTransform%2A&gt; or bitmap effects may cause the Popup to be obscured.","pos":[1785,1918],"source":" When this occurs, applying a <xref:System.Windows.UIElement.RenderTransform%2A> or bitmap effects may cause the Popup to be obscured."},{"content":"This occurs because the default size of the content does not provide enough area for the effects to display.","pos":[1919,2027]},{"content":"If more space is required, you can define a margin around the Popup content to increase the area that is available to the control.","pos":[2028,2158]},{"content":"The &lt;xref:System.Windows.FrameworkElement.Parent%2A&gt; property must be set on the Popup when used in a <ph id=\"ph1\">[!INCLUDE[TLA#tla_winfxwebapp](~/add/includes/ajax-current-ext-md.md)]</ph>.","pos":[2165,2338],"source":"       The <xref:System.Windows.FrameworkElement.Parent%2A> property must be set on the Popup when used in a [!INCLUDE[TLA#tla_winfxwebapp](~/add/includes/ajax-current-ext-md.md)]."},{"content":"To create a tooltip, use the &lt;xref:System.Windows.Controls.ToolTip&gt; and &lt;xref:System.Windows.Controls.ToolTipService&gt; classes.","pos":[2345,2471],"source":"       To create a tooltip, use the <xref:System.Windows.Controls.ToolTip> and <xref:System.Windows.Controls.ToolTipService> classes."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>ToolTip Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[2472,2556],"source":" For more information, see [ToolTip Overview](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[41470,41572],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Primitives.Popup\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> class."},{"pos":[42151,42299],"content":"Gets or sets a value that indicates whether a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Primitives.Popup\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control can contain transparent content.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that indicates whether a <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control can contain transparent content."},{"pos":[42312,43396],"content":"A <xref:System.Windows.Controls.Primitives.Popup> control can only contain transparent content when the application runs with full trust. An application that runs with full trust has complete access to system resources and is typically installed on the local system. For more information, see[Security (WPF)](~/add/includes/ajax-current-ext-md.md).       This property cannot be set to `true` when the <xref:System.Windows.Controls.Primitives.Popup> is hosted in a [!INCLUDE[TLA#tla_winfxwebapp](~/add/includes/ajax-current-ext-md.md)].       If the AllowsTransparency property is set to `true` in an application that does not run in full trust, the AllowsTransparency property value is changed to `false`. An application that is hosted in a browser is an example of an application that does not run in full trust.      <a name=\"dependencyPropertyInfo_AllowsTransparency\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.Popup.AllowsTransparencyProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A &lt;xref:System.Windows.Controls.Primitives.Popup&gt; control can only contain transparent content when the application runs with full trust.","pos":[0,137],"source":"A <xref:System.Windows.Controls.Primitives.Popup> control can only contain transparent content when the application runs with full trust."},{"content":"An application that runs with full trust has complete access to system resources and is typically installed on the local system.","pos":[138,266]},{"content":"For more information, see<bpt id=\"p1\">[</bpt>Security (WPF)<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[267,348],"source":" For more information, see[Security (WPF)](~/add/includes/ajax-current-ext-md.md)."},{"content":"This property cannot be set to <ph id=\"ph1\">`true`</ph> when the &lt;xref:System.Windows.Controls.Primitives.Popup&gt; is hosted in a <ph id=\"ph2\">[!INCLUDE[TLA#tla_winfxwebapp](~/add/includes/ajax-current-ext-md.md)]</ph>.","pos":[355,536],"source":"       This property cannot be set to `true` when the <xref:System.Windows.Controls.Primitives.Popup> is hosted in a [!INCLUDE[TLA#tla_winfxwebapp](~/add/includes/ajax-current-ext-md.md)]."},{"content":"If the AllowsTransparency property is set to <ph id=\"ph1\">`true`</ph> in an application that does not run in full trust, the AllowsTransparency property value is changed to <ph id=\"ph2\">`false`</ph>.","pos":[543,706],"source":"       If the AllowsTransparency property is set to `true` in an application that does not run in full trust, the AllowsTransparency property value is changed to `false`."},{"content":"An application that is hosted in a browser is an example of an application that does not run in full trust.","pos":[707,814]},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_AllowsTransparency\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Primitives.Popup.AllowsTransparencyProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[820,1070],"source":"<a name=\"dependencyPropertyInfo_AllowsTransparency\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.Popup.AllowsTransparencyProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[44029,44353],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control can contain transparent content; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.Primitives.Popup\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control can contain transparent content; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,245],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control can contain transparent content; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[246,324],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[44923,45026],"content":"Identifies the <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency*&gt; dependency property.","pos":[0,103],"source":"Identifies the <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency*> dependency property."}]},{"pos":[45038,45151],"content":"The identifier for the <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> dependency property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The identifier for the &lt;xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A&gt; dependency property.","pos":[0,113],"source":"The identifier for the <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> dependency property."}]},{"pos":[45426,45438],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[45833,45935],"content":"Gets or sets the content of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Primitives.Popup\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets or sets the content of the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control."},{"pos":[45948,47303],"content":"**Content Model**: The Child property is the only content property for the <xref:System.Windows.Controls.Primitives.Popup> control. A <xref:System.Windows.Controls.Primitives.Popup> can only have one <xref:System.Windows.UIElement> as a child, but that child can contain complex embedded content. For example, the child can be a <xref:System.Windows.Controls.StackPanel> that contains an <xref:System.Windows.Controls.Image>, text, and other types of controls.       When content is added to a <xref:System.Windows.Controls.Primitives.Popup> control, the <xref:System.Windows.Controls.Primitives.Popup> control becomes the logical parent to the content. Similarly, the <xref:System.Windows.Controls.Primitives.Popup> content is considered to be the logical child of the <xref:System.Windows.Controls.Primitives.Popup>. The child content is not added to the visual tree that contains the <xref:System.Windows.Controls.Primitives.Popup> control. Instead, the child content is rendered in a separate window with its own visual tree when the <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> is set to `true`.      <a name=\"dependencyPropertyInfo_Child\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.Popup.ChildProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<bpt id=\"p1\">**</bpt>Content Model<ept id=\"p1\">**</ept>: The Child property is the only content property for the &lt;xref:System.Windows.Controls.Primitives.Popup&gt; control.","pos":[0,131],"source":"**Content Model**: The Child property is the only content property for the <xref:System.Windows.Controls.Primitives.Popup> control."},{"content":"A &lt;xref:System.Windows.Controls.Primitives.Popup&gt; can only have one &lt;xref:System.Windows.UIElement&gt; as a child, but that child can contain complex embedded content.","pos":[132,296],"source":" A <xref:System.Windows.Controls.Primitives.Popup> can only have one <xref:System.Windows.UIElement> as a child, but that child can contain complex embedded content."},{"content":"For example, the child can be a &lt;xref:System.Windows.Controls.StackPanel&gt; that contains an &lt;xref:System.Windows.Controls.Image&gt;, text, and other types of controls.","pos":[297,460],"source":" For example, the child can be a <xref:System.Windows.Controls.StackPanel> that contains an <xref:System.Windows.Controls.Image>, text, and other types of controls."},{"content":"When content is added to a &lt;xref:System.Windows.Controls.Primitives.Popup&gt; control, the &lt;xref:System.Windows.Controls.Primitives.Popup&gt; control becomes the logical parent to the content.","pos":[467,653],"source":"       When content is added to a <xref:System.Windows.Controls.Primitives.Popup> control, the <xref:System.Windows.Controls.Primitives.Popup> control becomes the logical parent to the content."},{"content":"Similarly, the &lt;xref:System.Windows.Controls.Primitives.Popup&gt; content is considered to be the logical child of the &lt;xref:System.Windows.Controls.Primitives.Popup&gt;.","pos":[654,818],"source":" Similarly, the <xref:System.Windows.Controls.Primitives.Popup> content is considered to be the logical child of the <xref:System.Windows.Controls.Primitives.Popup>."},{"content":"The child content is not added to the visual tree that contains the &lt;xref:System.Windows.Controls.Primitives.Popup&gt; control.","pos":[819,943],"source":" The child content is not added to the visual tree that contains the <xref:System.Windows.Controls.Primitives.Popup> control."},{"content":"Instead, the child content is rendered in a separate window with its own visual tree when the &lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt; is set to <ph id=\"ph1\">`true`</ph>.","pos":[944,1113],"source":" Instead, the child content is rendered in a separate window with its own visual tree when the <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> is set to `true`."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_Child\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Primitives.Popup.ChildProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[1119,1343],"source":"<a name=\"dependencyPropertyInfo_Child\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.Popup.ChildProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[47851,48063],"content":"The <xref href=\"System.Windows.UIElement\"></xref> content of the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> content of the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.Primitives.Popup\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","pos":[0,135],"source":"The <xref href=\"System.Windows.UIElement\"></xref> content of the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[136,212],"source":" The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[48555,48645],"content":"Identifies the <xref:System.Windows.Controls.Primitives.Popup.Child*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.Primitives.Popup.Child*&gt; dependency property.","pos":[0,90],"source":"Identifies the <xref:System.Windows.Controls.Primitives.Popup.Child*> dependency property."}]},{"pos":[48818,48830],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[49227,49382],"content":"Occurs when the &lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen*&gt; property changes to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Occurs when the <xref:System.Windows.Controls.Primitives.Popup.IsOpen*> property changes to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[49394,49548],"content":"A <xref:System.Windows.Controls.Primitives.Popup> is opened and closed by toggling the <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A &lt;xref:System.Windows.Controls.Primitives.Popup&gt; is opened and closed by toggling the &lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt; property.","pos":[0,154],"source":"A <xref:System.Windows.Controls.Primitives.Popup> is opened and closed by toggling the <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> property."}]},{"pos":[50050,50062],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[50690,50790],"content":"Attaches a child element to a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Primitives.Popup\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Attaches a child element to a <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control."},{"pos":[50803,52357],"content":"You might want to create a custom control that has the same functionality as an existing control and also exhibits the behavior of a <xref:System.Windows.Controls.Primitives.Popup>.  You can make your control behave like a <xref:System.Windows.Controls.Primitives.Popup> by adding a <xref:System.Windows.Controls.Primitives.Popup> to your control and calling the CreateRootPopup method.       This method assigns `child` to the child property and binds the following properties to `child`.      -   <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A>      -   <xref:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback%2A>      -   <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>      -   <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>      -   <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>      -   <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A>      -   <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>      -   <xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A>       You should implement these as dependency properties in your control so it can be used the same way as a <xref:System.Windows.Controls.Primitives.Popup>. For more information, see [Custom Dependency Properties](~/add/includes/ajax-current-ext-md.md).       When you call CreateRootPopup, `child` cannot be a child of a <xref:System.Windows.UIElement>. Also, `PlacementTarget` should be set on your control before you call this method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You might want to create a custom control that has the same functionality as an existing control and also exhibits the behavior of a &lt;xref:System.Windows.Controls.Primitives.Popup&gt;.","pos":[0,181],"source":"You might want to create a custom control that has the same functionality as an existing control and also exhibits the behavior of a <xref:System.Windows.Controls.Primitives.Popup>."},{"content":"You can make your control behave like a &lt;xref:System.Windows.Controls.Primitives.Popup&gt; by adding a &lt;xref:System.Windows.Controls.Primitives.Popup&gt; to your control and calling the CreateRootPopup method.","pos":[183,386],"source":"  You can make your control behave like a <xref:System.Windows.Controls.Primitives.Popup> by adding a <xref:System.Windows.Controls.Primitives.Popup> to your control and calling the CreateRootPopup method."},{"content":"This method assigns <ph id=\"ph1\">`child`</ph> to the child property and binds the following properties to <ph id=\"ph2\">`child`</ph>.","pos":[393,489],"source":"       This method assigns `child` to the child property and binds the following properties to `child`."},{"content":"-   &lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt;      -   &lt;xref:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback%2A&gt;      -   &lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;      -   &lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;      -   &lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;      -   &lt;xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A&gt;      -   &lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;      -   &lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A&gt;       You should implement these as dependency properties in your control so it can be used the same way as a &lt;xref:System.Windows.Controls.Primitives.Popup&gt;.","pos":[495,1251],"source":"      -   <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A>      -   <xref:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback%2A>      -   <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>      -   <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>      -   <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>      -   <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A>      -   <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>      -   <xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A>       You should implement these as dependency properties in your control so it can be used the same way as a <xref:System.Windows.Controls.Primitives.Popup>."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Custom Dependency Properties<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1252,1348],"source":" For more information, see [Custom Dependency Properties](~/add/includes/ajax-current-ext-md.md)."},{"content":"When you call CreateRootPopup, <ph id=\"ph1\">`child`</ph> cannot be a child of a &lt;xref:System.Windows.UIElement&gt;.","pos":[1355,1449],"source":"       When you call CreateRootPopup, `child` cannot be a child of a <xref:System.Windows.UIElement>."},{"content":"Also, <ph id=\"ph1\">`PlacementTarget`</ph> should be set on your control before you call this method.","pos":[1450,1532],"source":" Also, `PlacementTarget` should be set on your control before you call this method."}]},{"pos":[52603,52699],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Primitives.Popup\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to which to add child content.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> to which to add child content."},{"pos":[52772,52836],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> child content.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.UIElement\"></xref> child content."},{"pos":[53416,53544],"content":"Gets or sets a delegate handler method that positions the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Primitives.Popup\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets or sets a delegate handler method that positions the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control."},{"pos":[53557,53835],"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_CustomPopupPlacementCallback\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallbackProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","needQuote":false,"needEscape":true,"extradata":"MT","source":"<a name=\"dependencyPropertyInfo_CustomPopupPlacementCallback\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallbackProperty>|   |Metadata properties set to `true`|None|"},{"pos":[54736,55032],"content":"The <xref href=\"System.Windows.Controls.Primitives.CustomPopupPlacementCallback\"></xref> delegate method that provides placement information for the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Primitives.CustomPopupPlacementCallback\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> delegate method that provides placement information for the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.Primitives.Popup\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","pos":[0,219],"source":"The <xref href=\"System.Windows.Controls.Primitives.CustomPopupPlacementCallback\"></xref> delegate method that provides placement information for the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[220,296],"source":" The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[55662,55782],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Primitives.CustomPopupPlacementCallback\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> dependency property.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.Controls.Primitives.CustomPopupPlacementCallback\"></xref> dependency property."},{"pos":[55978,55990],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[56439,56533],"content":"Returns the logical parent of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Primitives.Popup\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the logical parent of a <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref>."},{"pos":[56722,57180],"content":"If the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> does not have a defined parent and the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget*> is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget*> is returned. Otherwise, the return values are the same as &lt;xref:System.Windows.FrameworkElement.GetUIParentCore%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Primitives.Popup\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> does not have a defined parent and the &lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget<bpt id=\"p2\">*</bpt>&gt; is not <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, the &lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget<ept id=\"p2\">*</ept>&gt; is returned.","pos":[0,323],"source":"If the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> does not have a defined parent and the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget*> is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget*> is returned."},{"content":"Otherwise, the return values are the same as <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.FrameworkElement.GetUIParentCore%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[324,458],"source":" Otherwise, the return values are the same as &lt;xref:System.Windows.FrameworkElement.GetUIParentCore%2A?displayProperty=fullName&gt;."}]},{"pos":[57685,57824],"content":"Gets a value that indicates whether a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Primitives.Popup\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is displayed with a drop shadow effect.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether a <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> is displayed with a drop shadow effect."},{"pos":[57837,58349],"content":"A drop shadow effect displays when the <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=fullName> property and the <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A?displayProperty=fullName> property are set to `true`.      <a name=\"dependencyPropertyInfo_HasDropShadow\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.Popup.HasDropShadowProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A drop shadow effect displays when the &lt;xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=fullName&gt; property and the &lt;xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A?displayProperty=fullName&gt; property are set to <ph id=\"ph1\">`true`</ph>.","pos":[0,256],"source":"A drop shadow effect displays when the <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=fullName> property and the <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A?displayProperty=fullName> property are set to `true`."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_HasDropShadow\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Primitives.Popup.HasDropShadowProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[262,502],"source":"<a name=\"dependencyPropertyInfo_HasDropShadow\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.Popup.HasDropShadowProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[58787,59024],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.Primitives.Popup\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is displayed with a drop shadow; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> is displayed with a drop shadow; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[59564,59662],"content":"Identifies the <xref:System.Windows.Controls.Primitives.Popup.HasDropShadow*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.Primitives.Popup.HasDropShadow*&gt; dependency property.","pos":[0,98],"source":"Identifies the <xref:System.Windows.Controls.Primitives.Popup.HasDropShadow*> dependency property."}]},{"pos":[59674,59782],"content":"The identifier for the <xref:System.Windows.Controls.Primitives.Popup.HasDropShadow%2A> dependency property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The identifier for the &lt;xref:System.Windows.Controls.Primitives.Popup.HasDropShadow%2A&gt; dependency property.","pos":[0,108],"source":"The identifier for the <xref:System.Windows.Controls.Primitives.Popup.HasDropShadow%2A> dependency property."}]},{"pos":[60052,60064],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[60514,60606],"content":"Get or sets the horizontal distance between the target origin and the popup alignment point.","needQuote":true,"needEscape":true,"nodes":[{"content":"Get or sets the horizontal distance between the target origin and the popup alignment point.","pos":[0,92]}]},{"pos":[60619,62436],"content":"You can position a popup by setting the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, HorizontalOffset, and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> properties. For more information, see [Popup Placement Behavior](../Topic/Popup%20Placement%20Behavior.md).      <a name=\"dependencyPropertyInfo_HorizontalOffset\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.Popup.HorizontalOffsetProperty>|   |Metadata properties set to `true`|None|      <a name=\"xamlAttributeUsage_HorizontalOffset\"></a>    ## XAML Attribute Usage      ```   <object HorizontalOffset=\"double\"/>   - or -   <object HorizontalOffset=\"qualifiedDouble\"/>   ```      <a name=\"xamlValues_HorizontallOffset\"></a>    ## XAML Values    `double`    <xref:System.Double>       A string representation of a <xref:System.Double> value. This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)] measurement. Strings do not have to explicitly include decimal points. For example, a value of `1` is acceptable.       The same <xref:System.Double> range restrictions apply as those that are mentioned in the Property Value section of this topic.       `qualifiedDouble`    A `double` value as described earlier in this table, followed by one of the following unit declaration strings: `px`, `in`, `cm`, or `pt`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in=96px       `cm` is centimeters; 1cm=(96/2.54) px       `pt` is points; 1pt=(96/72) px","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can position a popup by setting the &lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;, &lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;, &lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;, HorizontalOffset, and &lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty&gt; properties.","pos":[0,345],"source":"You can position a popup by setting the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, HorizontalOffset, and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> properties."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Popup Placement Behavior<ept id=\"p1\">](../Topic/Popup%20Placement%20Behavior.md)</ept>.","pos":[346,441],"source":" For more information, see [Popup Placement Behavior](../Topic/Popup%20Placement%20Behavior.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_HorizontalOffset\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffsetProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|      <bpt id=\"p2\">&lt;a name=\"xamlAttributeUsage_HorizontalOffset\"&gt;</bpt><ept id=\"p2\">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id=\"ph2\">```   &lt;object HorizontalOffset=\"double\"/&gt;   - or -   &lt;object HorizontalOffset=\"qualifiedDouble\"/&gt;   ```</ph>      <bpt id=\"p3\">&lt;a name=\"xamlValues_HorizontallOffset\"&gt;</bpt><ept id=\"p3\">&lt;/a&gt;</ept>    ## XAML Values    <ph id=\"ph3\">`double`</ph>    &lt;xref:System.Double&gt;       A string representation of a &lt;xref:System.Double&gt; value.","pos":[447,1051],"source":"<a name=\"dependencyPropertyInfo_HorizontalOffset\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.Popup.HorizontalOffsetProperty>|   |Metadata properties set to `true`|None|      <a name=\"xamlAttributeUsage_HorizontalOffset\"></a>    ## XAML Attribute Usage      ```   <object HorizontalOffset=\"double\"/>   - or -   <object HorizontalOffset=\"qualifiedDouble\"/>   ```      <a name=\"xamlValues_HorizontallOffset\"></a>    ## XAML Values    `double`    <xref:System.Double>       A string representation of a <xref:System.Double> value."},{"content":"This is interpreted as a <ph id=\"ph1\">[!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)]</ph> measurement.","pos":[1052,1159],"source":" This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)] measurement."},{"content":"Strings do not have to explicitly include decimal points.","pos":[1160,1217]},{"content":"For example, a value of <ph id=\"ph1\">`1`</ph> is acceptable.","pos":[1218,1260],"source":" For example, a value of `1` is acceptable."},{"content":"The same &lt;xref:System.Double&gt; range restrictions apply as those that are mentioned in the Property Value section of this topic.","pos":[1267,1394],"source":"       The same <xref:System.Double> range restrictions apply as those that are mentioned in the Property Value section of this topic."},{"content":"<ph id=\"ph1\">`qualifiedDouble`</ph>    A <ph id=\"ph2\">`double`</ph> value as described earlier in this table, followed by one of the following unit declaration strings: <ph id=\"ph3\">`px`</ph>, <ph id=\"ph4\">`in`</ph>, <ph id=\"ph5\">`cm`</ph>, or <ph id=\"ph6\">`pt`</ph>.","pos":[1401,1560],"source":"`qualifiedDouble`    A `double` value as described earlier in this table, followed by one of the following unit declaration strings: `px`, `in`, `cm`, or `pt`."},{"content":"<ph id=\"ph1\">`px`</ph> (default) is <ph id=\"ph2\">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>       <ph id=\"ph3\">`in`</ph> is inches; 1in=96px       <ph id=\"ph4\">`cm`</ph> is centimeters; 1cm=(96/2.54) px       <ph id=\"ph5\">`pt`</ph> is points; 1pt=(96/72) px","pos":[1567,1770],"source":"`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in=96px       `cm` is centimeters; 1cm=(96/2.54) px       `pt` is points; 1pt=(96/72) px"}]},{"pos":[63322,63558],"content":"The horizontal distance between the target origin and the popup alignment point. For information about the target origin and popup alignment point, see [Popup Placement Behavior](~/add/includes/ajax-current-ext-md.md). The default is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The horizontal distance between the target origin and the popup alignment point.","pos":[0,80]},{"content":"For information about the target origin and popup alignment point, see <bpt id=\"p1\">[</bpt>Popup Placement Behavior<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[81,218],"source":" For information about the target origin and popup alignment point, see [Popup Placement Behavior](~/add/includes/ajax-current-ext-md.md)."},{"content":"The default is 0.","pos":[219,236]}]},{"pos":[64116,64217],"content":"Identifies the <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset*&gt; dependency property.","pos":[0,101],"source":"Identifies the <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset*> dependency property."}]},{"pos":[64401,64413],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[64813,64934],"content":"Gets or sets a value that indicates whether the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Primitives.Popup\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is visible.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that indicates whether the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> is visible."},{"pos":[64947,65788],"content":"If a control uses a <xref:System.Windows.Controls.Primitives.Popup> as part of its default style, bind the IsOpen property of the <xref:System.Windows.Controls.Primitives.Popup> to a property of the control. For example, a <xref:System.Windows.Controls.ComboBox> can bind its <xref:System.Windows.Controls.ComboBox.IsDropDownOpen%2A> property to the IsOpen property of the <xref:System.Windows.Controls.Primitives.Popup>. This simplifies the logic for controlling when the <xref:System.Windows.Controls.Primitives.Popup> is visible.      <a name=\"dependencyPropertyInfo_IsOpen\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.Popup.IsOpenProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If a control uses a &lt;xref:System.Windows.Controls.Primitives.Popup&gt; as part of its default style, bind the IsOpen property of the &lt;xref:System.Windows.Controls.Primitives.Popup&gt; to a property of the control.","pos":[0,207],"source":"If a control uses a <xref:System.Windows.Controls.Primitives.Popup> as part of its default style, bind the IsOpen property of the <xref:System.Windows.Controls.Primitives.Popup> to a property of the control."},{"content":"For example, a &lt;xref:System.Windows.Controls.ComboBox&gt; can bind its &lt;xref:System.Windows.Controls.ComboBox.IsDropDownOpen%2A&gt; property to the IsOpen property of the &lt;xref:System.Windows.Controls.Primitives.Popup&gt;.","pos":[208,421],"source":" For example, a <xref:System.Windows.Controls.ComboBox> can bind its <xref:System.Windows.Controls.ComboBox.IsDropDownOpen%2A> property to the IsOpen property of the <xref:System.Windows.Controls.Primitives.Popup>."},{"content":"This simplifies the logic for controlling when the &lt;xref:System.Windows.Controls.Primitives.Popup&gt; is visible.","pos":[422,532],"source":" This simplifies the logic for controlling when the <xref:System.Windows.Controls.Primitives.Popup> is visible."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_IsOpen\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Primitives.Popup.IsOpenProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A&gt;|","pos":[538,831],"source":"<a name=\"dependencyPropertyInfo_IsOpen\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.Popup.IsOpenProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|"}]},{"pos":[66264,66559],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> is visible; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.Primitives.Popup\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is visible; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,216],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> is visible; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[217,295],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[67057,67148],"content":"Identifies the <xref:System.Windows.Controls.Primitives.Popup.IsOpen*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen*&gt; dependency property.","pos":[0,91],"source":"Identifies the <xref:System.Windows.Controls.Primitives.Popup.IsOpen*> dependency property."}]},{"pos":[67322,67334],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[67779,67929],"content":"Gets an enumerator that you can use to access the logical child elements of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Primitives.Popup\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets an enumerator that you can use to access the logical child elements of the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control."},{"pos":[67941,68599],"content":"When you add content to a <xref:System.Windows.Controls.Primitives.Popup> control, the <xref:System.Windows.Controls.Primitives.Popup> control becomes the logical parent to the content. Similarly, the <xref:System.Windows.Controls.Primitives.Popup> content is considered to be the logical child of the <xref:System.Windows.Controls.Primitives.Popup>. The child content is not added to the visual tree that contains the <xref:System.Windows.Controls.Primitives.Popup> control. Instead, the child content is rendered in a separate window that has its own visual tree when the <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> property is set to `true`.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When you add content to a &lt;xref:System.Windows.Controls.Primitives.Popup&gt; control, the &lt;xref:System.Windows.Controls.Primitives.Popup&gt; control becomes the logical parent to the content.","pos":[0,185],"source":"When you add content to a <xref:System.Windows.Controls.Primitives.Popup> control, the <xref:System.Windows.Controls.Primitives.Popup> control becomes the logical parent to the content."},{"content":"Similarly, the &lt;xref:System.Windows.Controls.Primitives.Popup&gt; content is considered to be the logical child of the &lt;xref:System.Windows.Controls.Primitives.Popup&gt;.","pos":[186,350],"source":" Similarly, the <xref:System.Windows.Controls.Primitives.Popup> content is considered to be the logical child of the <xref:System.Windows.Controls.Primitives.Popup>."},{"content":"The child content is not added to the visual tree that contains the &lt;xref:System.Windows.Controls.Primitives.Popup&gt; control.","pos":[351,475],"source":" The child content is not added to the visual tree that contains the <xref:System.Windows.Controls.Primitives.Popup> control."},{"content":"Instead, the child content is rendered in a separate window that has its own visual tree when the &lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt; property is set to <ph id=\"ph1\">`true`</ph>.","pos":[476,658],"source":" Instead, the child content is rendered in a separate window that has its own visual tree when the <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> property is set to `true`."}]},{"pos":[68772,69019],"content":"An <xref:System.Collections.IEnumerator> that you can use to access the logical child elements of a <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IEnumerator&gt; that you can use to access the logical child elements of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Primitives.Popup\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","pos":[0,170],"source":"An <xref:System.Collections.IEnumerator> that you can use to access the logical child elements of a <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[171,247],"source":" The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[69592,69743],"content":"Determines the required size of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Primitives.Popup\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> content within the visual tree of the logical parent.","needQuote":true,"needEscape":true,"source":"Determines the required size of the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> content within the visual tree of the logical parent."},{"pos":[69755,70123],"content":"This method always returns a <xref:System.Windows.Size> that has a width and height of zero (0), because <xref:System.Windows.Controls.Primitives.Popup> content is not located in the visual tree of its logical parent or <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>. The child content is created in a different window that has its own visual tree.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method always returns a <xref:System.Windows.Size> that has a width and height of zero (0), because <xref:System.Windows.Controls.Primitives.Popup> content is not located in the visual tree of its logical parent or <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>. The child content is created in a different window that has its own visual tree.","pos":[0,368],"nodes":[{"content":"This method always returns a &lt;xref:System.Windows.Size&gt; that has a width and height of zero (0), because &lt;xref:System.Windows.Controls.Primitives.Popup&gt; content is not located in the visual tree of its logical parent or &lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;.","pos":[0,287],"source":"This method always returns a <xref:System.Windows.Size> that has a width and height of zero (0), because <xref:System.Windows.Controls.Primitives.Popup> content is not located in the visual tree of its logical parent or <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>."},{"content":"The child content is created in a different window that has its own visual tree.","pos":[288,368]}]}]},{"pos":[70330,70493],"content":"The available size that this element can give to the child. You can use infinity as a value to indicate that the element can size to whatever content is available.","needQuote":true,"needEscape":true,"nodes":[{"content":"The available size that this element can give to the child. You can use infinity as a value to indicate that the element can size to whatever content is available.","pos":[0,163],"nodes":[{"content":"The available size that this element can give to the child.","pos":[0,59]},{"content":"You can use infinity as a value to indicate that the element can size to whatever content is available.","pos":[60,163]}]}]},{"pos":[70557,70730],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that has the &lt;xref:System.Windows.Size.Height<bpt id=\"p2\">*</bpt>&gt; and &lt;xref:System.Windows.Size.Width<ept id=\"p2\">*</ept>&gt; properties both equal to zero (0).","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Size\"></xref> structure that has the <xref:System.Windows.Size.Height*> and <xref:System.Windows.Size.Width*> properties both equal to zero (0)."},{"pos":[71277,71516],"content":"Responds when the value of the &lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen*&gt; property changes from to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Responds when the value of the <xref:System.Windows.Controls.Primitives.Popup.IsOpen*> property changes from to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[71663,71678],"content":"The event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event data.","pos":[0,15]}]},{"pos":[72218,72475],"content":"Responds to the condition in which the value of the &lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen*&gt; property changes from <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Responds to the condition in which the value of the <xref:System.Windows.Controls.Primitives.Popup.IsOpen*> property changes from <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."},{"pos":[72622,72642],"content":"The event arguments.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event arguments.","pos":[0,20]}]},{"pos":[73365,73476],"content":"Provides class handling for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement.PreviewMouseLeftButtonDown\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Provides class handling for the <xref href=\"System.Windows.UIElement.PreviewMouseLeftButtonDown\"></xref> event."},{"pos":[73488,73764],"content":"This implementation makes sure that a &lt;xref:System.Windows.Controls.Primitives.Popup&gt; closes when a mouse event occurs outside the &lt;xref:System.Windows.Controls.Primitives.Popup&gt; when the &lt;xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A&gt; property is set to <ph id=\"ph1\">`false`</ph>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"This implementation makes sure that a <xref:System.Windows.Controls.Primitives.Popup> closes when a mouse event occurs outside the <xref:System.Windows.Controls.Primitives.Popup> when the <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> property is set to `false`."},{"pos":[73989,74004],"content":"The event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event data.","pos":[0,15]}]},{"pos":[74737,74846],"content":"Provides class handling for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement.PreviewMouseLeftButtonUp\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Provides class handling for the <xref href=\"System.Windows.UIElement.PreviewMouseLeftButtonUp\"></xref> event."},{"pos":[74858,75134],"content":"This implementation makes sure that a &lt;xref:System.Windows.Controls.Primitives.Popup&gt; closes when a mouse event occurs outside the &lt;xref:System.Windows.Controls.Primitives.Popup&gt; when the &lt;xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A&gt; property is set to <ph id=\"ph1\">`false`</ph>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"This implementation makes sure that a <xref:System.Windows.Controls.Primitives.Popup> closes when a mouse event occurs outside the <xref:System.Windows.Controls.Primitives.Popup> when the <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> property is set to `false`."},{"pos":[75357,75372],"content":"The event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event data.","pos":[0,15]}]},{"pos":[76118,76228],"content":"Provides class handling for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement.PreviewMouseRightButtonUp\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Provides class handling for the <xref href=\"System.Windows.UIElement.PreviewMouseRightButtonUp\"></xref> event."},{"pos":[76240,76516],"content":"This implementation makes sure that a &lt;xref:System.Windows.Controls.Primitives.Popup&gt; closes when a mouse event occurs outside the &lt;xref:System.Windows.Controls.Primitives.Popup&gt; when the &lt;xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A&gt; property is set to <ph id=\"ph1\">`false`</ph>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"This implementation makes sure that a <xref:System.Windows.Controls.Primitives.Popup> closes when a mouse event occurs outside the <xref:System.Windows.Controls.Primitives.Popup> when the <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> property is set to `false`."},{"pos":[76742,76757],"content":"The event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event data.","pos":[0,15]}]},{"pos":[77496,77608],"content":"Provides class handling for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement.PreviewMouseRightButtonDown\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Provides class handling for the <xref href=\"System.Windows.UIElement.PreviewMouseRightButtonDown\"></xref> event."},{"pos":[77620,77896],"content":"This implementation makes sure that a &lt;xref:System.Windows.Controls.Primitives.Popup&gt; closes when a mouse event occurs outside the &lt;xref:System.Windows.Controls.Primitives.Popup&gt; when the &lt;xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A&gt; property is set to <ph id=\"ph1\">`false`</ph>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"This implementation makes sure that a <xref:System.Windows.Controls.Primitives.Popup> closes when a mouse event occurs outside the <xref:System.Windows.Controls.Primitives.Popup> when the <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> property is set to `false`."},{"pos":[78120,78135],"content":"The event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event data.","pos":[0,15]}]},{"pos":[78614,78767],"content":"Occurs when the &lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen*&gt; property changes to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Occurs when the <xref:System.Windows.Controls.Primitives.Popup.IsOpen*> property changes to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."},{"pos":[78779,78933],"content":"A <xref:System.Windows.Controls.Primitives.Popup> is opened and closed by toggling the <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A &lt;xref:System.Windows.Controls.Primitives.Popup&gt; is opened and closed by toggling the &lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt; property.","pos":[0,154],"source":"A <xref:System.Windows.Controls.Primitives.Popup> is opened and closed by toggling the <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> property."}]},{"pos":[79435,79447],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[79862,80131],"content":"Gets or sets the orientation of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Primitives.Popup\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control when the control opens, and specifies the behavior of the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.Primitives.Popup\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control when it overlaps screen boundaries.","needQuote":true,"needEscape":true,"source":"Gets or sets the orientation of the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control when the control opens, and specifies the behavior of the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control when it overlaps screen boundaries."},{"pos":[80144,81622],"content":"You can position a popup by setting the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, Placement, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> properties. For more information, see [Popup Placement Behavior](~/add/includes/ajax-current-ext-md.md).       If the <xref:System.Windows.SystemParameters.MenuDropAlignment%2A> property is `true`, setting Placement to <xref:System.Windows.Controls.Primitives.PlacementMode> or <xref:System.Windows.Controls.Primitives.PlacementMode> reverses the position of the <xref:System.Windows.Controls.Primitives.Popup>; a <xref:System.Windows.Controls.Primitives.Popup> with Placement set to <xref:System.Windows.Controls.Primitives.PlacementMode> aligns its left edge with the right edge of <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A> and a <xref:System.Windows.Controls.Primitives.Popup> with Placement set to <xref:System.Windows.Controls.Primitives.PlacementMode> aligns its right edge with the left edge of <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>.      <a name=\"dependencyPropertyInfo_Placement\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.Popup.PlacementProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can position a popup by setting the &lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;, &lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;, Placement, &lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;, and &lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty&gt; properties.","pos":[0,345],"source":"You can position a popup by setting the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, Placement, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> properties."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Popup Placement Behavior<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[346,438],"source":" For more information, see [Popup Placement Behavior](~/add/includes/ajax-current-ext-md.md)."},{"content":"If the &lt;xref:System.Windows.SystemParameters.MenuDropAlignment%2A&gt; property is <ph id=\"ph1\">`true`</ph>, setting Placement to &lt;xref:System.Windows.Controls.Primitives.PlacementMode&gt; or &lt;xref:System.Windows.Controls.Primitives.PlacementMode&gt; reverses the position of the &lt;xref:System.Windows.Controls.Primitives.Popup&gt;; a &lt;xref:System.Windows.Controls.Primitives.Popup&gt; with Placement set to &lt;xref:System.Windows.Controls.Primitives.PlacementMode&gt; aligns its left edge with the right edge of &lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt; and a &lt;xref:System.Windows.Controls.Primitives.Popup&gt; with Placement set to &lt;xref:System.Windows.Controls.Primitives.PlacementMode&gt; aligns its right edge with the left edge of &lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;.","pos":[445,1228],"source":"       If the <xref:System.Windows.SystemParameters.MenuDropAlignment%2A> property is `true`, setting Placement to <xref:System.Windows.Controls.Primitives.PlacementMode> or <xref:System.Windows.Controls.Primitives.PlacementMode> reverses the position of the <xref:System.Windows.Controls.Primitives.Popup>; a <xref:System.Windows.Controls.Primitives.Popup> with Placement set to <xref:System.Windows.Controls.Primitives.PlacementMode> aligns its left edge with the right edge of <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A> and a <xref:System.Windows.Controls.Primitives.Popup> with Placement set to <xref:System.Windows.Controls.Primitives.PlacementMode> aligns its right edge with the left edge of <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_Placement\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[1234,1466],"source":"<a name=\"dependencyPropertyInfo_Placement\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.Popup.PlacementProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[82266,82643],"content":"A <xref href=\"System.Windows.Controls.Primitives.PlacementMode\"></xref> enumeration value that determines the orientation of the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control when the control opens, and that specifies how the control interacts with screen boundaries. The default is <xref href=\"System.Windows.Controls.Primitives.PlacementMode\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Primitives.PlacementMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration value that determines the orientation of the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.Primitives.Popup\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control when the control opens, and that specifies how the control interacts with screen boundaries.","pos":[0,291],"source":"A <xref href=\"System.Windows.Controls.Primitives.PlacementMode\"></xref> enumeration value that determines the orientation of the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control when the control opens, and that specifies how the control interacts with screen boundaries."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Primitives.PlacementMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[292,377],"source":" The default is <xref href=\"System.Windows.Controls.Primitives.PlacementMode\"></xref>."}]},{"pos":[83159,83253],"content":"Identifies the <xref:System.Windows.Controls.Primitives.Popup.Placement*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.Primitives.Popup.Placement*&gt; dependency property.","pos":[0,94],"source":"Identifies the <xref:System.Windows.Controls.Primitives.Popup.Placement*> dependency property."}]},{"pos":[83430,83442],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[83902,84049],"content":"Gets or sets the rectangle relative to which the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Primitives.Popup\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control is positioned when it opens.","needQuote":true,"needEscape":true,"source":"Gets or sets the rectangle relative to which the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control is positioned when it opens."},{"pos":[84062,84766],"content":"You can position a popup by setting the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, PlacementRectangle, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> properties. For more information, see [Popup Placement Behavior](~/add/includes/ajax-current-ext-md.md).      <a name=\"dependencyPropertyInfo_PlacementRectangle\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.Popup.PlacementRectangleProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can position a popup by setting the &lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;, PlacementRectangle, &lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;, &lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;, and &lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty&gt; properties.","pos":[0,345],"source":"You can position a popup by setting the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, PlacementRectangle, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> properties."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Popup Placement Behavior<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[346,438],"source":" For more information, see [Popup Placement Behavior](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_PlacementRectangle\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangleProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[444,694],"source":"<a name=\"dependencyPropertyInfo_PlacementRectangle\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.Popup.PlacementRectangleProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[85801,85991],"content":"The rectangle that is used to position the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The rectangle that is used to position the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Primitives.Popup\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","pos":[0,113],"source":"The rectangle that is used to position the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[114,190],"source":" The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[86561,86664],"content":"Identifies the <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle*&gt; dependency property.","pos":[0,103],"source":"Identifies the <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle*> dependency property."}]},{"pos":[86850,86862],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[87307,87444],"content":"Gets or sets the element relative to which the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Primitives.Popup\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is positioned when it opens.","needQuote":true,"needEscape":true,"source":"Gets or sets the element relative to which the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> is positioned when it opens."},{"pos":[87457,88155],"content":"You can position a popup by setting the PlacementTarget, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> properties. For more information, see [Popup Placement Behavior](~/add/includes/ajax-current-ext-md.md).      <a name=\"dependencyPropertyInfo_PlacementTarget\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.Popup.PlacementTargetProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can position a popup by setting the PlacementTarget, &lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;, &lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;, &lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;, and &lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty&gt; properties.","pos":[0,345],"source":"You can position a popup by setting the PlacementTarget, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> properties."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Popup Placement Behavior<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[346,438],"source":" For more information, see [Popup Placement Behavior](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_PlacementTarget\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTargetProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[444,688],"source":"<a name=\"dependencyPropertyInfo_PlacementTarget\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.Popup.PlacementTargetProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[88783,89014],"content":"The <xref href=\"System.Windows.UIElement\"></xref> that is the logical parent of the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is the logical parent of the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.Primitives.Popup\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","pos":[0,154],"source":"The <xref href=\"System.Windows.UIElement\"></xref> that is the logical parent of the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[155,231],"source":" The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[89566,89666],"content":"Identifies the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget*&gt; dependency property.","pos":[0,100],"source":"Identifies the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget*> dependency property."}]},{"pos":[89849,89861],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[90301,90430],"content":"Gets or sets an animation for the opening and closing of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Primitives.Popup\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets or sets an animation for the opening and closing of a <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control."},{"pos":[90443,91169],"content":"A <xref:System.Windows.Controls.Primitives.Popup> can only animate when the <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> property is set to `true`. This requires the application that creates the <xref:System.Windows.Controls.Primitives.Popup> control to run with full trust.       If the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A> is animated, the <xref:System.Windows.Controls.Primitives.Popup> will not be animated.      <a name=\"dependencyPropertyInfo_PopupAnimation\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.Popup.PopupAnimationProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A &lt;xref:System.Windows.Controls.Primitives.Popup&gt; can only animate when the &lt;xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A&gt; property is set to <ph id=\"ph1\">`true`</ph>.","pos":[0,172],"source":"A <xref:System.Windows.Controls.Primitives.Popup> can only animate when the <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> property is set to `true`."},{"content":"This requires the application that creates the &lt;xref:System.Windows.Controls.Primitives.Popup&gt; control to run with full trust.","pos":[173,299],"source":" This requires the application that creates the <xref:System.Windows.Controls.Primitives.Popup> control to run with full trust."},{"content":"If the &lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt; is animated, the &lt;xref:System.Windows.Controls.Primitives.Popup&gt; will not be animated.","pos":[306,466],"source":"       If the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A> is animated, the <xref:System.Windows.Controls.Primitives.Popup> will not be animated."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_PopupAnimation\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Primitives.Popup.PopupAnimationProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[472,714],"source":"<a name=\"dependencyPropertyInfo_PopupAnimation\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.Popup.PopupAnimationProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[92020,92316],"content":"The <xref href=\"System.Windows.Controls.Primitives.PopupAnimation\"></xref> enumeration value that defines an animation to open and close a <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control. The default is <xref href=\"System.Windows.Controls.Primitives.PopupAnimation\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Primitives.PopupAnimation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration value that defines an animation to open and close a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.Primitives.Popup\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","pos":[0,209],"source":"The <xref href=\"System.Windows.Controls.Primitives.PopupAnimation\"></xref> enumeration value that defines an animation to open and close a <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Primitives.PopupAnimation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[210,296],"source":" The default is <xref href=\"System.Windows.Controls.Primitives.PopupAnimation\"></xref>."}]},{"pos":[92862,92961],"content":"Identifies the <xref:System.Windows.Controls.Primitives.Popup.PopupAnimation*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.Primitives.Popup.PopupAnimation*&gt; dependency property.","pos":[0,99],"source":"Identifies the <xref:System.Windows.Controls.Primitives.Popup.PopupAnimation*> dependency property."}]},{"pos":[93143,93155],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[93570,93734],"content":"Gets or sets a value that indicates whether the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Primitives.Popup\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control closes when the control is no longer in focus.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that indicates whether the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control closes when the control is no longer in focus."},{"pos":[93747,94465],"content":"When the StaysOpen property is set to `true`, <xref:System.Windows.Controls.Primitives.Popup> stays open until it is explicitly closed by setting the <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> property to `false`. When StaysOpen is `false`, the <xref:System.Windows.Controls.Primitives.Popup> control intercepts all mouse and keyboard events to determine when one of these events occurs outside the <xref:System.Windows.Controls.Primitives.Popup> control.      <a name=\"dependencyPropertyInfo_StaysOpen\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.Popup.StaysOpenProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When the StaysOpen property is set to <ph id=\"ph1\">`true`</ph>, &lt;xref:System.Windows.Controls.Primitives.Popup&gt; stays open until it is explicitly closed by setting the &lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt; property to <ph id=\"ph2\">`false`</ph>.","pos":[0,228],"source":"When the StaysOpen property is set to `true`, <xref:System.Windows.Controls.Primitives.Popup> stays open until it is explicitly closed by setting the <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> property to `false`."},{"content":"When StaysOpen is <ph id=\"ph1\">`false`</ph>, the &lt;xref:System.Windows.Controls.Primitives.Popup&gt; control intercepts all mouse and keyboard events to determine when one of these events occurs outside the &lt;xref:System.Windows.Controls.Primitives.Popup&gt; control.","pos":[229,470],"source":" When StaysOpen is `false`, the <xref:System.Windows.Controls.Primitives.Popup> control intercepts all mouse and keyboard events to determine when one of these events occurs outside the <xref:System.Windows.Controls.Primitives.Popup> control."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_StaysOpen\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Primitives.Popup.StaysOpenProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[476,708],"source":"<a name=\"dependencyPropertyInfo_StaysOpen\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.Popup.StaysOpenProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[94965,95598],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control closes when <xref:System.Windows.Controls.Primitives.Popup.IsOpen*> property is set to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control closes when a mouse or keyboard event occurs outside the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.Primitives.Popup\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control closes when &lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen*&gt; property is set to <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>; <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> if the <bpt id=\"p5\">&lt;xref href=\"System.Windows.Controls.Primitives.Popup\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept> control closes when a mouse or keyboard event occurs outside the <bpt id=\"p6\">&lt;xref href=\"System.Windows.Controls.Primitives.Popup\"&gt;</bpt><ept id=\"p6\">&lt;/xref&gt;</ept> control.","pos":[0,556],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control closes when <xref:System.Windows.Controls.Primitives.Popup.IsOpen*> property is set to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control closes when a mouse or keyboard event occurs outside the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[557,633],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[96114,96208],"content":"Identifies the <xref:System.Windows.Controls.Primitives.Popup.StaysOpen*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.Primitives.Popup.StaysOpen*&gt; dependency property.","pos":[0,94],"source":"Identifies the <xref:System.Windows.Controls.Primitives.Popup.StaysOpen*> dependency property."}]},{"pos":[96385,96397],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[97033,97204],"content":"This member supports the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> infrastructure and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"source":"This member supports the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code."},{"pos":[97345,97373],"content":"An object to add as a child.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object to add as a child.","pos":[0,28]}]},{"pos":[98099,98270],"content":"This member supports the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> infrastructure and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"source":"This member supports the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code."},{"pos":[98408,98438],"content":"A string to add to the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string to add to the object.","pos":[0,30]}]},{"pos":[98972,99063],"content":"Gets or sets the vertical distance between the target origin and the popup alignment point.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the vertical distance between the target origin and the popup alignment point.","pos":[0,91]}]},{"pos":[99076,100931],"content":"You can position a popup by setting the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> properties. For more information, see [Popup Placement Behavior](../Topic/Popup%20Placement%20Behavior.md).      <a name=\"xamlAttributeUsage_VerticalOffset\"></a>    ## XAML Attribute Usage      ```   <object VerticalOffset=\"double\"/>   - or -   <object VerticalOffset=\"qualifiedDouble\"/>   ```      <a name=\"xamlValues_VerticalOffset\"></a>    ## XAML Values    `double`    <xref:System.Double>       A string representation of a <xref:System.Double> value. This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)] measurement. Strings do not have to explicitly include decimal points. For example, a value of `1` is acceptable.       The same <xref:System.Double> range restrictions apply as those that are mentioned in the Property Value section of this topic.       `qualifiedDouble`    A `double` value as described earlier in this table, followed by one of the following unit declaration strings: `px`, `in`, `cm`, or `pt`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in=96px       `cm` is centimeters; 1cm=(96/2.54) px       `pt` is points; 1pt=(96/72) px      <a name=\"dependencyPropertyInfo_VerticalOffset\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can position a popup by setting the &lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;, &lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;, &lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;, &lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;, and &lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty&gt; properties.","pos":[0,396],"source":"You can position a popup by setting the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> properties."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Popup Placement Behavior<ept id=\"p1\">](../Topic/Popup%20Placement%20Behavior.md)</ept>.","pos":[397,492],"source":" For more information, see [Popup Placement Behavior](../Topic/Popup%20Placement%20Behavior.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlAttributeUsage_VerticalOffset\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id=\"ph1\">```   &lt;object VerticalOffset=\"double\"/&gt;   - or -   &lt;object VerticalOffset=\"qualifiedDouble\"/&gt;   ```</ph>      <bpt id=\"p2\">&lt;a name=\"xamlValues_VerticalOffset\"&gt;</bpt><ept id=\"p2\">&lt;/a&gt;</ept>    ## XAML Values    <ph id=\"ph2\">`double`</ph>    &lt;xref:System.Double&gt;       A string representation of a &lt;xref:System.Double&gt; value.","pos":[498,841],"source":"<a name=\"xamlAttributeUsage_VerticalOffset\"></a>    ## XAML Attribute Usage      ```   <object VerticalOffset=\"double\"/>   - or -   <object VerticalOffset=\"qualifiedDouble\"/>   ```      <a name=\"xamlValues_VerticalOffset\"></a>    ## XAML Values    `double`    <xref:System.Double>       A string representation of a <xref:System.Double> value."},{"content":"This is interpreted as a <ph id=\"ph1\">[!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)]</ph> measurement.","pos":[842,949],"source":" This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)] measurement."},{"content":"Strings do not have to explicitly include decimal points.","pos":[950,1007]},{"content":"For example, a value of <ph id=\"ph1\">`1`</ph> is acceptable.","pos":[1008,1050],"source":" For example, a value of `1` is acceptable."},{"content":"The same &lt;xref:System.Double&gt; range restrictions apply as those that are mentioned in the Property Value section of this topic.","pos":[1057,1184],"source":"       The same <xref:System.Double> range restrictions apply as those that are mentioned in the Property Value section of this topic."},{"content":"<ph id=\"ph1\">`qualifiedDouble`</ph>    A <ph id=\"ph2\">`double`</ph> value as described earlier in this table, followed by one of the following unit declaration strings: <ph id=\"ph3\">`px`</ph>, <ph id=\"ph4\">`in`</ph>, <ph id=\"ph5\">`cm`</ph>, or <ph id=\"ph6\">`pt`</ph>.","pos":[1191,1350],"source":"`qualifiedDouble`    A `double` value as described earlier in this table, followed by one of the following unit declaration strings: `px`, `in`, `cm`, or `pt`."},{"content":"<ph id=\"ph1\">`px`</ph> (default) is <ph id=\"ph2\">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>       <ph id=\"ph3\">`in`</ph> is inches; 1in=96px       <ph id=\"ph4\">`cm`</ph> is centimeters; 1cm=(96/2.54) px       <ph id=\"ph5\">`pt`</ph> is points; 1pt=(96/72) px      <bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_VerticalOffset\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty&gt;|   |Metadata properties set to <ph id=\"ph6\">`true`</ph>|None|","pos":[1357,1808],"source":"`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in=96px       `cm` is centimeters; 1cm=(96/2.54) px       `pt` is points; 1pt=(96/72) px      <a name=\"dependencyPropertyInfo_VerticalOffset\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[101816,102050],"content":"The vertical distance between the target origin and the popup alignment point. For information about the target origin and popup alignment point, see [Popup Placement Behavior](~/add/includes/ajax-current-ext-md.md). The default is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The vertical distance between the target origin and the popup alignment point.","pos":[0,78]},{"content":"For information about the target origin and popup alignment point, see <bpt id=\"p1\">[</bpt>Popup Placement Behavior<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[79,216],"source":" For information about the target origin and popup alignment point, see [Popup Placement Behavior](~/add/includes/ajax-current-ext-md.md)."},{"content":"The default is 0.","pos":[217,234]}]},{"pos":[102596,102695],"content":"Identifies the <xref:System.Windows.Controls.Primitives.Popup.VerticalOffset*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffset*&gt; dependency property.","pos":[0,99],"source":"Identifies the <xref:System.Windows.Controls.Primitives.Popup.VerticalOffset*> dependency property."}]},{"pos":[102877,102889],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Controls.Primitives.Popup\n  id: Popup\n  children:\n  - System.Windows.Controls.Primitives.Popup.#ctor\n  - System.Windows.Controls.Primitives.Popup.AllowsTransparency\n  - System.Windows.Controls.Primitives.Popup.AllowsTransparencyProperty\n  - System.Windows.Controls.Primitives.Popup.Child\n  - System.Windows.Controls.Primitives.Popup.ChildProperty\n  - System.Windows.Controls.Primitives.Popup.Closed\n  - System.Windows.Controls.Primitives.Popup.CreateRootPopup(System.Windows.Controls.Primitives.Popup,System.Windows.UIElement)\n  - System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback\n  - System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallbackProperty\n  - System.Windows.Controls.Primitives.Popup.GetUIParentCore\n  - System.Windows.Controls.Primitives.Popup.HasDropShadow\n  - System.Windows.Controls.Primitives.Popup.HasDropShadowProperty\n  - System.Windows.Controls.Primitives.Popup.HorizontalOffset\n  - System.Windows.Controls.Primitives.Popup.HorizontalOffsetProperty\n  - System.Windows.Controls.Primitives.Popup.IsOpen\n  - System.Windows.Controls.Primitives.Popup.IsOpenProperty\n  - System.Windows.Controls.Primitives.Popup.LogicalChildren\n  - System.Windows.Controls.Primitives.Popup.MeasureOverride(System.Windows.Size)\n  - System.Windows.Controls.Primitives.Popup.OnClosed(System.EventArgs)\n  - System.Windows.Controls.Primitives.Popup.OnOpened(System.EventArgs)\n  - System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.Controls.Primitives.Popup.Opened\n  - System.Windows.Controls.Primitives.Popup.Placement\n  - System.Windows.Controls.Primitives.Popup.PlacementProperty\n  - System.Windows.Controls.Primitives.Popup.PlacementRectangle\n  - System.Windows.Controls.Primitives.Popup.PlacementRectangleProperty\n  - System.Windows.Controls.Primitives.Popup.PlacementTarget\n  - System.Windows.Controls.Primitives.Popup.PlacementTargetProperty\n  - System.Windows.Controls.Primitives.Popup.PopupAnimation\n  - System.Windows.Controls.Primitives.Popup.PopupAnimationProperty\n  - System.Windows.Controls.Primitives.Popup.StaysOpen\n  - System.Windows.Controls.Primitives.Popup.StaysOpenProperty\n  - System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddChild(System.Object)\n  - System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddText(System.String)\n  - System.Windows.Controls.Primitives.Popup.VerticalOffset\n  - System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty\n  langs:\n  - csharp\n  name: Popup\n  nameWithType: Popup\n  fullName: System.Windows.Controls.Primitives.Popup\n  type: Class\n  summary: Represents a pop-up window that has content.\n  remarks: \"**Content Model**:  Popup has one content property: <xref:System.Windows.Controls.Primitives.Popup.Child%2A>. A Popup can have a maximum of one child, which can be any <xref:System.Windows.UIElement>.  \\n  \\n The following illustration shows a Popup control that has a <xref:System.Windows.Controls.Button> as its parent.  \\n  \\n ![Popup illustration](~/add/media/popuppicture.JPG \\\"Popup illustration\\\")  \\n  \\n You can position a popup by setting the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> properties. For more information, see [Popup Placement Behavior](~/add/includes/ajax-current-ext-md.md). When Popup is displayed on the screen, it does not reposition itself if its parent is repositioned.  \\n  \\n A Popup displays its content in its own window on the screen. A Popup control supports animation when the <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> property is set to `true` and the application is running with full trust. An application that is running with full trust has complete access to system resources and is typically installed on the user's system. For more information, see[Security (WPF)](~/add/includes/ajax-current-ext-md.md).  \\n  \\n For bitmap and opacity effects to appear on the content of a Popup, you must set the effects directly on the Popup content. The content of a Popup does not inherit effects that are set on the Popup control or on any other element that is in the parent window.  \\n  \\n A Popup is sized to its content by default. When this occurs, applying a <xref:System.Windows.UIElement.RenderTransform%2A> or bitmap effects may cause the Popup to be obscured. This occurs because the default size of the content does not provide enough area for the effects to display. If more space is required, you can define a margin around the Popup content to increase the area that is available to the control.  \\n  \\n The <xref:System.Windows.FrameworkElement.Parent%2A> property must be set on the Popup when used in a [!INCLUDE[TLA#tla_winfxwebapp](~/add/includes/ajax-current-ext-md.md)].  \\n  \\n To create a tooltip, use the <xref:System.Windows.Controls.ToolTip> and <xref:System.Windows.Controls.ToolTipService> classes. For more information, see [ToolTip Overview](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following example shows how to create a Popup control.  \\n  \\n [!code-xml[PopupSimple#2](~/add/codesnippet/xaml/PopupPropertiesSample/Window1.xaml#2)]  \\n  \\n [!code-cs[PopupSimple#CreatePopup](~/add/codesnippet/csharp/PopupPropertiesSample/Window1.xaml.cs#createpopup)]\\n [!code-vb[PopupSimple#CreatePopup](~/add/codesnippet/visualbasic/PopupSample/Window1.xaml.vb#createpopup)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.DefaultEvent(\"Opened\")]\n\n      [System.ComponentModel.DefaultProperty(\"Child\")]\n\n      [System.Windows.Localizability(System.Windows.LocalizationCategory.None)]\n\n      [System.Windows.Markup.ContentProperty(\"Child\")]\n\n      public class Popup : System.Windows.FrameworkElement, System.Windows.Markup.IAddChild\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Media.Visual\n  - System.Windows.UIElement\n  - System.Windows.FrameworkElement\n  implements:\n  - System.Windows.Markup.IAddChild\n  inheritedMembers:\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.FrameworkElement.ActualHeight\n  - System.Windows.FrameworkElement.ActualHeightProperty\n  - System.Windows.FrameworkElement.ActualWidth\n  - System.Windows.FrameworkElement.ActualWidthProperty\n  - System.Windows.FrameworkElement.AddLogicalChild(System.Object)\n  - System.Windows.FrameworkElement.ApplyTemplate\n  - System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)\n  - System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)\n  - System.Windows.FrameworkElement.BeginInit\n  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)\n  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)\n  - System.Windows.FrameworkElement.BindingGroup\n  - System.Windows.FrameworkElement.BindingGroupProperty\n  - System.Windows.FrameworkElement.BringIntoView\n  - System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)\n  - System.Windows.FrameworkElement.ContextMenu\n  - System.Windows.FrameworkElement.ContextMenuClosing\n  - System.Windows.FrameworkElement.ContextMenuClosingEvent\n  - System.Windows.FrameworkElement.ContextMenuOpening\n  - System.Windows.FrameworkElement.ContextMenuOpeningEvent\n  - System.Windows.FrameworkElement.ContextMenuProperty\n  - System.Windows.FrameworkElement.Cursor\n  - System.Windows.FrameworkElement.CursorProperty\n  - System.Windows.FrameworkElement.DataContext\n  - System.Windows.FrameworkElement.DataContextChanged\n  - System.Windows.FrameworkElement.DataContextProperty\n  - System.Windows.FrameworkElement.DefaultStyleKey\n  - System.Windows.FrameworkElement.DefaultStyleKeyProperty\n  - System.Windows.FrameworkElement.EndInit\n  - System.Windows.FrameworkElement.FindName(System.String)\n  - System.Windows.FrameworkElement.FindResource(System.Object)\n  - System.Windows.FrameworkElement.FlowDirection\n  - System.Windows.FrameworkElement.FlowDirectionProperty\n  - System.Windows.FrameworkElement.FocusVisualStyle\n  - System.Windows.FrameworkElement.FocusVisualStyleProperty\n  - System.Windows.FrameworkElement.ForceCursor\n  - System.Windows.FrameworkElement.ForceCursorProperty\n  - System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)\n  - System.Windows.FrameworkElement.GetFlowDirection(System.Windows.DependencyObject)\n  - System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)\n  - System.Windows.FrameworkElement.GetTemplateChild(System.String)\n  - System.Windows.FrameworkElement.GetVisualChild(System.Int32)\n  - System.Windows.FrameworkElement.Height\n  - System.Windows.FrameworkElement.HeightProperty\n  - System.Windows.FrameworkElement.HorizontalAlignment\n  - System.Windows.FrameworkElement.HorizontalAlignmentProperty\n  - System.Windows.FrameworkElement.InheritanceBehavior\n  - System.Windows.FrameworkElement.Initialized\n  - System.Windows.FrameworkElement.InputScope\n  - System.Windows.FrameworkElement.InputScopeProperty\n  - System.Windows.FrameworkElement.IsInitialized\n  - System.Windows.FrameworkElement.IsLoaded\n  - System.Windows.FrameworkElement.Language\n  - System.Windows.FrameworkElement.LanguageProperty\n  - System.Windows.FrameworkElement.LayoutTransform\n  - System.Windows.FrameworkElement.LayoutTransformProperty\n  - System.Windows.FrameworkElement.Loaded\n  - System.Windows.FrameworkElement.LoadedEvent\n  - System.Windows.FrameworkElement.Margin\n  - System.Windows.FrameworkElement.MarginProperty\n  - System.Windows.FrameworkElement.MaxHeight\n  - System.Windows.FrameworkElement.MaxHeightProperty\n  - System.Windows.FrameworkElement.MaxWidth\n  - System.Windows.FrameworkElement.MaxWidthProperty\n  - System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)\n  - System.Windows.FrameworkElement.MinHeight\n  - System.Windows.FrameworkElement.MinHeightProperty\n  - System.Windows.FrameworkElement.MinWidth\n  - System.Windows.FrameworkElement.MinWidthProperty\n  - System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)\n  - System.Windows.FrameworkElement.Name\n  - System.Windows.FrameworkElement.NameProperty\n  - System.Windows.FrameworkElement.OnApplyTemplate\n  - System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)\n  - System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)\n  - System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)\n  - System.Windows.FrameworkElement.OnInitialized(System.EventArgs)\n  - System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)\n  - System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)\n  - System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)\n  - System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)\n  - System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)\n  - System.Windows.FrameworkElement.OverridesDefaultStyle\n  - System.Windows.FrameworkElement.OverridesDefaultStyleProperty\n  - System.Windows.FrameworkElement.Parent\n  - System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)\n  - System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)\n  - System.Windows.FrameworkElement.RegisterName(System.String,System.Object)\n  - System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)\n  - System.Windows.FrameworkElement.RequestBringIntoView\n  - System.Windows.FrameworkElement.RequestBringIntoViewEvent\n  - System.Windows.FrameworkElement.Resources\n  - System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)\n  - System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)\n  - System.Windows.FrameworkElement.SetFlowDirection(System.Windows.DependencyObject,System.Windows.FlowDirection)\n  - System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.FrameworkElement.ShouldSerializeResources\n  - System.Windows.FrameworkElement.ShouldSerializeStyle\n  - System.Windows.FrameworkElement.ShouldSerializeTriggers\n  - System.Windows.FrameworkElement.SizeChanged\n  - System.Windows.FrameworkElement.SizeChangedEvent\n  - System.Windows.FrameworkElement.SourceUpdated\n  - System.Windows.FrameworkElement.Style\n  - System.Windows.FrameworkElement.StyleProperty\n  - System.Windows.FrameworkElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)\n  - System.Windows.FrameworkElement.Tag\n  - System.Windows.FrameworkElement.TagProperty\n  - System.Windows.FrameworkElement.TargetUpdated\n  - System.Windows.FrameworkElement.TemplatedParent\n  - System.Windows.FrameworkElement.ToolTip\n  - System.Windows.FrameworkElement.ToolTipClosing\n  - System.Windows.FrameworkElement.ToolTipClosingEvent\n  - System.Windows.FrameworkElement.ToolTipOpening\n  - System.Windows.FrameworkElement.ToolTipOpeningEvent\n  - System.Windows.FrameworkElement.ToolTipProperty\n  - System.Windows.FrameworkElement.Triggers\n  - System.Windows.FrameworkElement.TryFindResource(System.Object)\n  - System.Windows.FrameworkElement.Unloaded\n  - System.Windows.FrameworkElement.UnloadedEvent\n  - System.Windows.FrameworkElement.UnregisterName(System.String)\n  - System.Windows.FrameworkElement.UpdateDefaultStyle\n  - System.Windows.FrameworkElement.UseLayoutRounding\n  - System.Windows.FrameworkElement.UseLayoutRoundingProperty\n  - System.Windows.FrameworkElement.VerticalAlignment\n  - System.Windows.FrameworkElement.VerticalAlignmentProperty\n  - System.Windows.FrameworkElement.VisualChildrenCount\n  - System.Windows.FrameworkElement.Width\n  - System.Windows.FrameworkElement.WidthProperty\n  - System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)\n  - System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)\n  - System.Windows.Media.Visual.PointToScreen(System.Windows.Point)\n  - System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)\n  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.VisualBitmapEffect\n  - System.Windows.Media.Visual.VisualBitmapEffectInput\n  - System.Windows.Media.Visual.VisualBitmapScalingMode\n  - System.Windows.Media.Visual.VisualCacheMode\n  - System.Windows.Media.Visual.VisualClearTypeHint\n  - System.Windows.Media.Visual.VisualClip\n  - System.Windows.Media.Visual.VisualEdgeMode\n  - System.Windows.Media.Visual.VisualEffect\n  - System.Windows.Media.Visual.VisualOffset\n  - System.Windows.Media.Visual.VisualOpacity\n  - System.Windows.Media.Visual.VisualOpacityMask\n  - System.Windows.Media.Visual.VisualParent\n  - System.Windows.Media.Visual.VisualScrollableAreaClip\n  - System.Windows.Media.Visual.VisualTextHintingMode\n  - System.Windows.Media.Visual.VisualTextRenderingMode\n  - System.Windows.Media.Visual.VisualTransform\n  - System.Windows.Media.Visual.VisualXSnappingGuidelines\n  - System.Windows.Media.Visual.VisualYSnappingGuidelines\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)\n  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)\n  - System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)\n  - System.Windows.UIElement.AllowDrop\n  - System.Windows.UIElement.AllowDropProperty\n  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.UIElement.AreAnyTouchesCaptured\n  - System.Windows.UIElement.AreAnyTouchesCapturedProperty\n  - System.Windows.UIElement.AreAnyTouchesCapturedWithin\n  - System.Windows.UIElement.AreAnyTouchesCapturedWithinProperty\n  - System.Windows.UIElement.AreAnyTouchesDirectlyOver\n  - System.Windows.UIElement.AreAnyTouchesDirectlyOverProperty\n  - System.Windows.UIElement.AreAnyTouchesOver\n  - System.Windows.UIElement.AreAnyTouchesOverProperty\n  - System.Windows.UIElement.Arrange(System.Windows.Rect)\n  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.UIElement.BitmapEffect\n  - System.Windows.UIElement.BitmapEffectInput\n  - System.Windows.UIElement.BitmapEffectInputProperty\n  - System.Windows.UIElement.BitmapEffectProperty\n  - System.Windows.UIElement.CacheMode\n  - System.Windows.UIElement.CacheModeProperty\n  - System.Windows.UIElement.CaptureMouse\n  - System.Windows.UIElement.CaptureStylus\n  - System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)\n  - System.Windows.UIElement.Clip\n  - System.Windows.UIElement.ClipProperty\n  - System.Windows.UIElement.ClipToBounds\n  - System.Windows.UIElement.ClipToBoundsProperty\n  - System.Windows.UIElement.CommandBindings\n  - System.Windows.UIElement.DesiredSize\n  - System.Windows.UIElement.DragEnter\n  - System.Windows.UIElement.DragEnterEvent\n  - System.Windows.UIElement.DragLeave\n  - System.Windows.UIElement.DragLeaveEvent\n  - System.Windows.UIElement.DragOver\n  - System.Windows.UIElement.DragOverEvent\n  - System.Windows.UIElement.Drop\n  - System.Windows.UIElement.DropEvent\n  - System.Windows.UIElement.Effect\n  - System.Windows.UIElement.EffectProperty\n  - System.Windows.UIElement.Focus\n  - System.Windows.UIElement.Focusable\n  - System.Windows.UIElement.FocusableChanged\n  - System.Windows.UIElement.FocusableProperty\n  - System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.UIElement.GiveFeedback\n  - System.Windows.UIElement.GiveFeedbackEvent\n  - System.Windows.UIElement.GotFocus\n  - System.Windows.UIElement.GotFocusEvent\n  - System.Windows.UIElement.GotKeyboardFocus\n  - System.Windows.UIElement.GotKeyboardFocusEvent\n  - System.Windows.UIElement.GotMouseCapture\n  - System.Windows.UIElement.GotMouseCaptureEvent\n  - System.Windows.UIElement.GotStylusCapture\n  - System.Windows.UIElement.GotStylusCaptureEvent\n  - System.Windows.UIElement.GotTouchCapture\n  - System.Windows.UIElement.GotTouchCaptureEvent\n  - System.Windows.UIElement.HasAnimatedProperties\n  - System.Windows.UIElement.HasEffectiveKeyboardFocus\n  - System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)\n  - System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters)\n  - System.Windows.UIElement.InputBindings\n  - System.Windows.UIElement.InputHitTest(System.Windows.Point)\n  - System.Windows.UIElement.InvalidateArrange\n  - System.Windows.UIElement.InvalidateMeasure\n  - System.Windows.UIElement.InvalidateVisual\n  - System.Windows.UIElement.IsArrangeValid\n  - System.Windows.UIElement.IsEnabled\n  - System.Windows.UIElement.IsEnabledChanged\n  - System.Windows.UIElement.IsEnabledCore\n  - System.Windows.UIElement.IsEnabledProperty\n  - System.Windows.UIElement.IsFocused\n  - System.Windows.UIElement.IsFocusedProperty\n  - System.Windows.UIElement.IsHitTestVisible\n  - System.Windows.UIElement.IsHitTestVisibleChanged\n  - System.Windows.UIElement.IsHitTestVisibleProperty\n  - System.Windows.UIElement.IsInputMethodEnabled\n  - System.Windows.UIElement.IsKeyboardFocused\n  - System.Windows.UIElement.IsKeyboardFocusedChanged\n  - System.Windows.UIElement.IsKeyboardFocusedProperty\n  - System.Windows.UIElement.IsKeyboardFocusWithin\n  - System.Windows.UIElement.IsKeyboardFocusWithinChanged\n  - System.Windows.UIElement.IsKeyboardFocusWithinProperty\n  - System.Windows.UIElement.IsManipulationEnabled\n  - System.Windows.UIElement.IsManipulationEnabledProperty\n  - System.Windows.UIElement.IsMeasureValid\n  - System.Windows.UIElement.IsMouseCaptured\n  - System.Windows.UIElement.IsMouseCapturedChanged\n  - System.Windows.UIElement.IsMouseCapturedProperty\n  - System.Windows.UIElement.IsMouseCaptureWithin\n  - System.Windows.UIElement.IsMouseCaptureWithinChanged\n  - System.Windows.UIElement.IsMouseCaptureWithinProperty\n  - System.Windows.UIElement.IsMouseDirectlyOver\n  - System.Windows.UIElement.IsMouseDirectlyOverChanged\n  - System.Windows.UIElement.IsMouseDirectlyOverProperty\n  - System.Windows.UIElement.IsMouseOver\n  - System.Windows.UIElement.IsMouseOverProperty\n  - System.Windows.UIElement.IsStylusCaptured\n  - System.Windows.UIElement.IsStylusCapturedChanged\n  - System.Windows.UIElement.IsStylusCapturedProperty\n  - System.Windows.UIElement.IsStylusCaptureWithin\n  - System.Windows.UIElement.IsStylusCaptureWithinChanged\n  - System.Windows.UIElement.IsStylusCaptureWithinProperty\n  - System.Windows.UIElement.IsStylusDirectlyOver\n  - System.Windows.UIElement.IsStylusDirectlyOverChanged\n  - System.Windows.UIElement.IsStylusDirectlyOverProperty\n  - System.Windows.UIElement.IsStylusOver\n  - System.Windows.UIElement.IsStylusOverProperty\n  - System.Windows.UIElement.IsVisible\n  - System.Windows.UIElement.IsVisibleChanged\n  - System.Windows.UIElement.IsVisibleProperty\n  - System.Windows.UIElement.KeyDown\n  - System.Windows.UIElement.KeyDownEvent\n  - System.Windows.UIElement.KeyUp\n  - System.Windows.UIElement.KeyUpEvent\n  - System.Windows.UIElement.LayoutUpdated\n  - System.Windows.UIElement.LostFocus\n  - System.Windows.UIElement.LostFocusEvent\n  - System.Windows.UIElement.LostKeyboardFocus\n  - System.Windows.UIElement.LostKeyboardFocusEvent\n  - System.Windows.UIElement.LostMouseCapture\n  - System.Windows.UIElement.LostMouseCaptureEvent\n  - System.Windows.UIElement.LostStylusCapture\n  - System.Windows.UIElement.LostStylusCaptureEvent\n  - System.Windows.UIElement.LostTouchCapture\n  - System.Windows.UIElement.LostTouchCaptureEvent\n  - System.Windows.UIElement.ManipulationBoundaryFeedback\n  - System.Windows.UIElement.ManipulationBoundaryFeedbackEvent\n  - System.Windows.UIElement.ManipulationCompleted\n  - System.Windows.UIElement.ManipulationCompletedEvent\n  - System.Windows.UIElement.ManipulationDelta\n  - System.Windows.UIElement.ManipulationDeltaEvent\n  - System.Windows.UIElement.ManipulationInertiaStarting\n  - System.Windows.UIElement.ManipulationInertiaStartingEvent\n  - System.Windows.UIElement.ManipulationStarted\n  - System.Windows.UIElement.ManipulationStartedEvent\n  - System.Windows.UIElement.ManipulationStarting\n  - System.Windows.UIElement.ManipulationStartingEvent\n  - System.Windows.UIElement.Measure(System.Windows.Size)\n  - System.Windows.UIElement.MouseDown\n  - System.Windows.UIElement.MouseDownEvent\n  - System.Windows.UIElement.MouseEnter\n  - System.Windows.UIElement.MouseEnterEvent\n  - System.Windows.UIElement.MouseLeave\n  - System.Windows.UIElement.MouseLeaveEvent\n  - System.Windows.UIElement.MouseLeftButtonDown\n  - System.Windows.UIElement.MouseLeftButtonDownEvent\n  - System.Windows.UIElement.MouseLeftButtonUp\n  - System.Windows.UIElement.MouseLeftButtonUpEvent\n  - System.Windows.UIElement.MouseMove\n  - System.Windows.UIElement.MouseMoveEvent\n  - System.Windows.UIElement.MouseRightButtonDown\n  - System.Windows.UIElement.MouseRightButtonDownEvent\n  - System.Windows.UIElement.MouseRightButtonUp\n  - System.Windows.UIElement.MouseRightButtonUpEvent\n  - System.Windows.UIElement.MouseUp\n  - System.Windows.UIElement.MouseUpEvent\n  - System.Windows.UIElement.MouseWheel\n  - System.Windows.UIElement.MouseWheelEvent\n  - System.Windows.UIElement.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)\n  - System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)\n  - System.Windows.UIElement.OnCreateAutomationPeer\n  - System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)\n  - System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)\n  - System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)\n  - System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)\n  - System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)\n  - System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)\n  - System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)\n  - System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)\n  - System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)\n  - System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)\n  - System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)\n  - System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)\n  - System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)\n  - System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)\n  - System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)\n  - System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)\n  - System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)\n  - System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)\n  - System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.Opacity\n  - System.Windows.UIElement.OpacityMask\n  - System.Windows.UIElement.OpacityMaskProperty\n  - System.Windows.UIElement.OpacityProperty\n  - System.Windows.UIElement.PersistId\n  - System.Windows.UIElement.PreviewDragEnter\n  - System.Windows.UIElement.PreviewDragEnterEvent\n  - System.Windows.UIElement.PreviewDragLeave\n  - System.Windows.UIElement.PreviewDragLeaveEvent\n  - System.Windows.UIElement.PreviewDragOver\n  - System.Windows.UIElement.PreviewDragOverEvent\n  - System.Windows.UIElement.PreviewDrop\n  - System.Windows.UIElement.PreviewDropEvent\n  - System.Windows.UIElement.PreviewGiveFeedback\n  - System.Windows.UIElement.PreviewGiveFeedbackEvent\n  - System.Windows.UIElement.PreviewGotKeyboardFocus\n  - System.Windows.UIElement.PreviewGotKeyboardFocusEvent\n  - System.Windows.UIElement.PreviewKeyDown\n  - System.Windows.UIElement.PreviewKeyDownEvent\n  - System.Windows.UIElement.PreviewKeyUp\n  - System.Windows.UIElement.PreviewKeyUpEvent\n  - System.Windows.UIElement.PreviewLostKeyboardFocus\n  - System.Windows.UIElement.PreviewLostKeyboardFocusEvent\n  - System.Windows.UIElement.PreviewMouseDown\n  - System.Windows.UIElement.PreviewMouseDownEvent\n  - System.Windows.UIElement.PreviewMouseLeftButtonDown\n  - System.Windows.UIElement.PreviewMouseLeftButtonDownEvent\n  - System.Windows.UIElement.PreviewMouseLeftButtonUp\n  - System.Windows.UIElement.PreviewMouseLeftButtonUpEvent\n  - System.Windows.UIElement.PreviewMouseMove\n  - System.Windows.UIElement.PreviewMouseMoveEvent\n  - System.Windows.UIElement.PreviewMouseRightButtonDown\n  - System.Windows.UIElement.PreviewMouseRightButtonDownEvent\n  - System.Windows.UIElement.PreviewMouseRightButtonUp\n  - System.Windows.UIElement.PreviewMouseRightButtonUpEvent\n  - System.Windows.UIElement.PreviewMouseUp\n  - System.Windows.UIElement.PreviewMouseUpEvent\n  - System.Windows.UIElement.PreviewMouseWheel\n  - System.Windows.UIElement.PreviewMouseWheelEvent\n  - System.Windows.UIElement.PreviewQueryContinueDrag\n  - System.Windows.UIElement.PreviewQueryContinueDragEvent\n  - System.Windows.UIElement.PreviewStylusButtonDown\n  - System.Windows.UIElement.PreviewStylusButtonDownEvent\n  - System.Windows.UIElement.PreviewStylusButtonUp\n  - System.Windows.UIElement.PreviewStylusButtonUpEvent\n  - System.Windows.UIElement.PreviewStylusDown\n  - System.Windows.UIElement.PreviewStylusDownEvent\n  - System.Windows.UIElement.PreviewStylusInAirMove\n  - System.Windows.UIElement.PreviewStylusInAirMoveEvent\n  - System.Windows.UIElement.PreviewStylusInRange\n  - System.Windows.UIElement.PreviewStylusInRangeEvent\n  - System.Windows.UIElement.PreviewStylusMove\n  - System.Windows.UIElement.PreviewStylusMoveEvent\n  - System.Windows.UIElement.PreviewStylusOutOfRange\n  - System.Windows.UIElement.PreviewStylusOutOfRangeEvent\n  - System.Windows.UIElement.PreviewStylusSystemGesture\n  - System.Windows.UIElement.PreviewStylusSystemGestureEvent\n  - System.Windows.UIElement.PreviewStylusUp\n  - System.Windows.UIElement.PreviewStylusUpEvent\n  - System.Windows.UIElement.PreviewTextInput\n  - System.Windows.UIElement.PreviewTextInputEvent\n  - System.Windows.UIElement.PreviewTouchDown\n  - System.Windows.UIElement.PreviewTouchDownEvent\n  - System.Windows.UIElement.PreviewTouchMove\n  - System.Windows.UIElement.PreviewTouchMoveEvent\n  - System.Windows.UIElement.PreviewTouchUp\n  - System.Windows.UIElement.PreviewTouchUpEvent\n  - System.Windows.UIElement.QueryContinueDrag\n  - System.Windows.UIElement.QueryContinueDragEvent\n  - System.Windows.UIElement.QueryCursor\n  - System.Windows.UIElement.QueryCursorEvent\n  - System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)\n  - System.Windows.UIElement.ReleaseAllTouchCaptures\n  - System.Windows.UIElement.ReleaseMouseCapture\n  - System.Windows.UIElement.ReleaseStylusCapture\n  - System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)\n  - System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)\n  - System.Windows.UIElement.RenderSize\n  - System.Windows.UIElement.RenderTransform\n  - System.Windows.UIElement.RenderTransformOrigin\n  - System.Windows.UIElement.RenderTransformOriginProperty\n  - System.Windows.UIElement.RenderTransformProperty\n  - System.Windows.UIElement.ShouldSerializeCommandBindings\n  - System.Windows.UIElement.ShouldSerializeInputBindings\n  - System.Windows.UIElement.SnapsToDevicePixels\n  - System.Windows.UIElement.SnapsToDevicePixelsProperty\n  - System.Windows.UIElement.StylusButtonDown\n  - System.Windows.UIElement.StylusButtonDownEvent\n  - System.Windows.UIElement.StylusButtonUp\n  - System.Windows.UIElement.StylusButtonUpEvent\n  - System.Windows.UIElement.StylusDown\n  - System.Windows.UIElement.StylusDownEvent\n  - System.Windows.UIElement.StylusEnter\n  - System.Windows.UIElement.StylusEnterEvent\n  - System.Windows.UIElement.StylusInAirMove\n  - System.Windows.UIElement.StylusInAirMoveEvent\n  - System.Windows.UIElement.StylusInRange\n  - System.Windows.UIElement.StylusInRangeEvent\n  - System.Windows.UIElement.StylusLeave\n  - System.Windows.UIElement.StylusLeaveEvent\n  - System.Windows.UIElement.StylusMove\n  - System.Windows.UIElement.StylusMoveEvent\n  - System.Windows.UIElement.StylusOutOfRange\n  - System.Windows.UIElement.StylusOutOfRangeEvent\n  - System.Windows.UIElement.StylusPlugIns\n  - System.Windows.UIElement.StylusSystemGesture\n  - System.Windows.UIElement.StylusSystemGestureEvent\n  - System.Windows.UIElement.StylusUp\n  - System.Windows.UIElement.StylusUpEvent\n  - System.Windows.UIElement.TextInput\n  - System.Windows.UIElement.TextInputEvent\n  - System.Windows.UIElement.TouchDown\n  - System.Windows.UIElement.TouchDownEvent\n  - System.Windows.UIElement.TouchEnter\n  - System.Windows.UIElement.TouchEnterEvent\n  - System.Windows.UIElement.TouchesCaptured\n  - System.Windows.UIElement.TouchesCapturedWithin\n  - System.Windows.UIElement.TouchesDirectlyOver\n  - System.Windows.UIElement.TouchesOver\n  - System.Windows.UIElement.TouchLeave\n  - System.Windows.UIElement.TouchLeaveEvent\n  - System.Windows.UIElement.TouchMove\n  - System.Windows.UIElement.TouchMoveEvent\n  - System.Windows.UIElement.TouchUp\n  - System.Windows.UIElement.TouchUpEvent\n  - System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)\n  - System.Windows.UIElement.Uid\n  - System.Windows.UIElement.UidProperty\n  - System.Windows.UIElement.UpdateLayout\n  - System.Windows.UIElement.Visibility\n  - System.Windows.UIElement.VisibilityProperty\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.#ctor\n  id: '#ctor'\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: Popup()\n  nameWithType: Popup.Popup()\n  fullName: System.Windows.Controls.Primitives.Popup.Popup()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> class.\n  syntax:\n    content: public Popup ();\n    parameters: []\n  overload: System.Windows.Controls.Primitives.Popup.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.AllowsTransparency\n  id: AllowsTransparency\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: AllowsTransparency\n  nameWithType: Popup.AllowsTransparency\n  fullName: System.Windows.Controls.Primitives.Popup.AllowsTransparency\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Gets or sets a value that indicates whether a <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control can contain transparent content.\n  remarks: \"A <xref:System.Windows.Controls.Primitives.Popup> control can only contain transparent content when the application runs with full trust. An application that runs with full trust has complete access to system resources and is typically installed on the local system. For more information, see[Security (WPF)](~/add/includes/ajax-current-ext-md.md).  \\n  \\n This property cannot be set to `true` when the <xref:System.Windows.Controls.Primitives.Popup> is hosted in a [!INCLUDE[TLA#tla_winfxwebapp](~/add/includes/ajax-current-ext-md.md)].  \\n  \\n If the AllowsTransparency property is set to `true` in an application that does not run in full trust, the AllowsTransparency property value is changed to `false`. An application that is hosted in a browser is an example of an application that does not run in full trust.  \\n  \\n<a name=\\\"dependencyPropertyInfo_AllowsTransparency\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.Primitives.Popup.AllowsTransparencyProperty>|  \\n|Metadata properties set to `true`|None|\"\n  example:\n  - \"The following example shows how to set the AllowsTransparency property on a <xref:System.Windows.Controls.Primitives.Popup> control.  \\n  \\n [!code-cs[PopupSnips#AllowsTransparency](~/add/codesnippet/csharp/PopupSnips/Window1.xaml.cs#allowstransparency)]\\n [!code-xml[PopupSnips#AllowsTransparency](~/add/codesnippet/xaml/PopupSnips/Window1.xaml#allowstransparency)]\\n [!code-vb[PopupSnips#AllowsTransparency](~/add/codesnippet/visualbasic/popupsnips/window1.xaml.vb#allowstransparency)]\"\n  syntax:\n    content: public bool AllowsTransparency { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control can contain transparent content; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.Primitives.Popup.AllowsTransparency*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.AllowsTransparencyProperty\n  id: AllowsTransparencyProperty\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: AllowsTransparencyProperty\n  nameWithType: Popup.AllowsTransparencyProperty\n  fullName: System.Windows.Controls.Primitives.Popup.AllowsTransparencyProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Identifies the <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency*> dependency property.\n  remarks: The identifier for the <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> dependency property.\n  example:\n  - '[Dependency Properties Overview](~/add/includes/ajax-current-ext-md.md)'\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty AllowsTransparencyProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.Child\n  id: Child\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: Child\n  nameWithType: Popup.Child\n  fullName: System.Windows.Controls.Primitives.Popup.Child\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Gets or sets the content of the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control.\n  remarks: \"**Content Model**: The Child property is the only content property for the <xref:System.Windows.Controls.Primitives.Popup> control. A <xref:System.Windows.Controls.Primitives.Popup> can only have one <xref:System.Windows.UIElement> as a child, but that child can contain complex embedded content. For example, the child can be a <xref:System.Windows.Controls.StackPanel> that contains an <xref:System.Windows.Controls.Image>, text, and other types of controls.  \\n  \\n When content is added to a <xref:System.Windows.Controls.Primitives.Popup> control, the <xref:System.Windows.Controls.Primitives.Popup> control becomes the logical parent to the content. Similarly, the <xref:System.Windows.Controls.Primitives.Popup> content is considered to be the logical child of the <xref:System.Windows.Controls.Primitives.Popup>. The child content is not added to the visual tree that contains the <xref:System.Windows.Controls.Primitives.Popup> control. Instead, the child content is rendered in a separate window with its own visual tree when the <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> is set to `true`.  \\n  \\n<a name=\\\"dependencyPropertyInfo_Child\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.Primitives.Popup.ChildProperty>|  \\n|Metadata properties set to `true`|None|\"\n  example:\n  - \"The following example shows how to add content to a <xref:System.Windows.Controls.Primitives.Popup> control.  \\n  \\n [!code-cs[PopupSnips#Child](~/add/codesnippet/csharp/PopupSnips/Window1.xaml.cs#child)]\\n [!code-xml[PopupSnips#Child](~/add/codesnippet/xaml/PopupSnips/Window1.xaml#child)]\\n [!code-vb[PopupSnips#Child](~/add/codesnippet/visualbasic/popupsnips/window1.xaml.vb#child)]\"\n  syntax:\n    content: public System.Windows.UIElement Child { get; set; }\n    return:\n      type: System.Windows.UIElement\n      description: The <xref href=\"System.Windows.UIElement\"></xref> content of the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Windows.Controls.Primitives.Popup.Child*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.ChildProperty\n  id: ChildProperty\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: ChildProperty\n  nameWithType: Popup.ChildProperty\n  fullName: System.Windows.Controls.Primitives.Popup.ChildProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Identifies the <xref:System.Windows.Controls.Primitives.Popup.Child*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty ChildProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.Closed\n  id: Closed\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: Closed\n  nameWithType: Popup.Closed\n  fullName: System.Windows.Controls.Primitives.Popup.Closed\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Occurs when the <xref:System.Windows.Controls.Primitives.Popup.IsOpen*> property changes to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  remarks: A <xref:System.Windows.Controls.Primitives.Popup> is opened and closed by toggling the <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> property.\n  example:\n  - \"The following example shows how to define an event handler for the Closed event.  \\n  \\n [!code-cs[PopupSnips#Closed](~/add/codesnippet/csharp/PopupSnips/Window1.xaml.cs#closed)]\\n [!code-xml[PopupSnips#Closed](~/add/codesnippet/xaml/PopupSnips/Window1.xaml#closed)]\\n [!code-vb[PopupSnips#Closed](~/add/codesnippet/visualbasic/popupsnips/window1.xaml.vb#closed)]\"\n  syntax:\n    content: public event EventHandler Closed;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.CreateRootPopup(System.Windows.Controls.Primitives.Popup,System.Windows.UIElement)\n  id: CreateRootPopup(System.Windows.Controls.Primitives.Popup,System.Windows.UIElement)\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: CreateRootPopup(Popup,UIElement)\n  nameWithType: Popup.CreateRootPopup(Popup,UIElement)\n  fullName: System.Windows.Controls.Primitives.Popup.CreateRootPopup(Popup,UIElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Attaches a child element to a <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control.\n  remarks: \"You might want to create a custom control that has the same functionality as an existing control and also exhibits the behavior of a <xref:System.Windows.Controls.Primitives.Popup>.  You can make your control behave like a <xref:System.Windows.Controls.Primitives.Popup> by adding a <xref:System.Windows.Controls.Primitives.Popup> to your control and calling the CreateRootPopup method.  \\n  \\n This method assigns `child` to the child property and binds the following properties to `child`.  \\n  \\n-   <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A>  \\n  \\n-   <xref:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback%2A>  \\n  \\n-   <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>  \\n  \\n-   <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>  \\n  \\n-   <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>  \\n  \\n-   <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A>  \\n  \\n-   <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>  \\n  \\n-   <xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A>  \\n  \\n You should implement these as dependency properties in your control so it can be used the same way as a <xref:System.Windows.Controls.Primitives.Popup>. For more information, see [Custom Dependency Properties](~/add/includes/ajax-current-ext-md.md).  \\n  \\n When you call CreateRootPopup, `child` cannot be a child of a <xref:System.Windows.UIElement>. Also, `PlacementTarget` should be set on your control before you call this method.\"\n  syntax:\n    content: public static void CreateRootPopup (System.Windows.Controls.Primitives.Popup popup, System.Windows.UIElement child);\n    parameters:\n    - id: popup\n      type: System.Windows.Controls.Primitives.Popup\n      description: The <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> to which to add child content.\n    - id: child\n      type: System.Windows.UIElement\n      description: The <xref href=\"System.Windows.UIElement\"></xref> child content.\n  overload: System.Windows.Controls.Primitives.Popup.CreateRootPopup*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback\n  id: CustomPopupPlacementCallback\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: CustomPopupPlacementCallback\n  nameWithType: Popup.CustomPopupPlacementCallback\n  fullName: System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Gets or sets a delegate handler method that positions the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control.\n  remarks: \"<a name=\\\"dependencyPropertyInfo_CustomPopupPlacementCallback\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallbackProperty>|  \\n|Metadata properties set to `true`|None|\"\n  example:\n  - \"The following example shows how to set a CustomPopupPlacementCallback delegate.  \\n  \\n [!code-cs[PopupCustomPlacement#DelegateDefinition](~/add/codesnippet/csharp/PopupCustomPlacement/Window1.xaml.cs#delegatedefinition)]\\n [!code-vb[PopupCustomPlacement#DelegateDefinition](~/add/codesnippet/visualbasic/popupcustomplacement/window1.xaml.vb#delegatedefinition)]  \\n  \\n [!code-cs[PopupCustomPlacement#DelegateInstance](~/add/codesnippet/csharp/PopupCustomPlacement/Window1.xaml.cs#delegateinstance)]\\n [!code-vb[PopupCustomPlacement#DelegateInstance](~/add/codesnippet/visualbasic/popupcustomplacement/window1.xaml.vb#delegateinstance)]\"\n  syntax:\n    content: public System.Windows.Controls.Primitives.CustomPopupPlacementCallback CustomPopupPlacementCallback { get; set; }\n    return:\n      type: System.Windows.Controls.Primitives.CustomPopupPlacementCallback\n      description: The <xref href=\"System.Windows.Controls.Primitives.CustomPopupPlacementCallback\"></xref> delegate method that provides placement information for the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallbackProperty\n  id: CustomPopupPlacementCallbackProperty\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: CustomPopupPlacementCallbackProperty\n  nameWithType: Popup.CustomPopupPlacementCallbackProperty\n  fullName: System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallbackProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Identifies the <xref href=\"System.Windows.Controls.Primitives.CustomPopupPlacementCallback\"></xref> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty CustomPopupPlacementCallbackProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.GetUIParentCore\n  id: GetUIParentCore\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: GetUIParentCore()\n  nameWithType: Popup.GetUIParentCore()\n  fullName: System.Windows.Controls.Primitives.Popup.GetUIParentCore()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Returns the logical parent of a <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref>.\n  syntax:\n    content: protected override System.Windows.DependencyObject GetUIParentCore ();\n    parameters: []\n    return:\n      type: System.Windows.DependencyObject\n      description: If the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> does not have a defined parent and the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget*> is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget*> is returned. Otherwise, the return values are the same as &lt;xref:System.Windows.FrameworkElement.GetUIParentCore%2A?displayProperty=fullName&gt;.\n  overload: System.Windows.Controls.Primitives.Popup.GetUIParentCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.HasDropShadow\n  id: HasDropShadow\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: HasDropShadow\n  nameWithType: Popup.HasDropShadow\n  fullName: System.Windows.Controls.Primitives.Popup.HasDropShadow\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Gets a value that indicates whether a <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> is displayed with a drop shadow effect.\n  remarks: \"A drop shadow effect displays when the <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=fullName> property and the <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A?displayProperty=fullName> property are set to `true`.  \\n  \\n<a name=\\\"dependencyPropertyInfo_HasDropShadow\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.Primitives.Popup.HasDropShadowProperty>|  \\n|Metadata properties set to `true`|None|\"\n  example:\n  - \"The following example shows how to get the value of the HasDropShadow property.  \\n  \\n [!code-cs[PopupSnips#HasDropShadow](~/add/codesnippet/csharp/PopupSnips/Window1.xaml.cs#hasdropshadow)]\\n [!code-vb[PopupSnips#HasDropShadow](~/add/codesnippet/visualbasic/popupsnips/window1.xaml.vb#hasdropshadow)]\"\n  syntax:\n    content: public bool HasDropShadow { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> is displayed with a drop shadow; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.Primitives.Popup.HasDropShadow*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.HasDropShadowProperty\n  id: HasDropShadowProperty\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: HasDropShadowProperty\n  nameWithType: Popup.HasDropShadowProperty\n  fullName: System.Windows.Controls.Primitives.Popup.HasDropShadowProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Identifies the <xref:System.Windows.Controls.Primitives.Popup.HasDropShadow*> dependency property.\n  remarks: The identifier for the <xref:System.Windows.Controls.Primitives.Popup.HasDropShadow%2A> dependency property.\n  example:\n  - '[Dependency Properties Overview](~/add/includes/ajax-current-ext-md.md)'\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty HasDropShadowProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.HorizontalOffset\n  id: HorizontalOffset\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: HorizontalOffset\n  nameWithType: Popup.HorizontalOffset\n  fullName: System.Windows.Controls.Primitives.Popup.HorizontalOffset\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Get or sets the horizontal distance between the target origin and the popup alignment point.\n  remarks: \"You can position a popup by setting the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, HorizontalOffset, and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> properties. For more information, see [Popup Placement Behavior](../Topic/Popup%20Placement%20Behavior.md).  \\n  \\n<a name=\\\"dependencyPropertyInfo_HorizontalOffset\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.Primitives.Popup.HorizontalOffsetProperty>|  \\n|Metadata properties set to `true`|None|  \\n  \\n<a name=\\\"xamlAttributeUsage_HorizontalOffset\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object HorizontalOffset=\\\"double\\\"/>  \\n- or -  \\n<object HorizontalOffset=\\\"qualifiedDouble\\\"/>  \\n```  \\n  \\n<a name=\\\"xamlValues_HorizontallOffset\\\"></a>   \\n## XAML Values  \\n `double`  \\n <xref:System.Double>  \\n  \\n A string representation of a <xref:System.Double> value. This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)] measurement. Strings do not have to explicitly include decimal points. For example, a value of `1` is acceptable.  \\n  \\n The same <xref:System.Double> range restrictions apply as those that are mentioned in the Property Value section of this topic.  \\n  \\n `qualifiedDouble`  \\n A `double` value as described earlier in this table, followed by one of the following unit declaration strings: `px`, `in`, `cm`, or `pt`.  \\n  \\n `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n `in` is inches; 1in=96px  \\n  \\n `cm` is centimeters; 1cm=(96/2.54) px  \\n  \\n `pt` is points; 1pt=(96/72) px\"\n  example:\n  - \"The following example creates a <xref:System.Windows.Controls.Primitives.Popup> and sets the HorizontalOffset and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A> properties to 20.  The <xref:System.Windows.Controls.Primitives.Popup.Placement%2A> property is set to <xref:System.Windows.Controls.Primitives.PlacementMode> (which is the default), so the target origin is the bottom left corner of the target area and the popup alignment point is the top left corner of the <xref:System.Windows.Controls.Primitives.Popup>.  \\n  \\n [!code-xml[PopupPositionSnippets#5](~/add/codesnippet/xaml/p-system.windows.control_425_1.xaml)]\\n [!code-xml[PopupPositionSnippets#5](~/add/codesnippet/xaml/p-system.windows.control_425_1.xaml)]\"\n  syntax:\n    content: public double HorizontalOffset { get; set; }\n    return:\n      type: System.Double\n      description: The horizontal distance between the target origin and the popup alignment point. For information about the target origin and popup alignment point, see [Popup Placement Behavior](~/add/includes/ajax-current-ext-md.md). The default is 0.\n  overload: System.Windows.Controls.Primitives.Popup.HorizontalOffset*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.HorizontalOffsetProperty\n  id: HorizontalOffsetProperty\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: HorizontalOffsetProperty\n  nameWithType: Popup.HorizontalOffsetProperty\n  fullName: System.Windows.Controls.Primitives.Popup.HorizontalOffsetProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Identifies the <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty HorizontalOffsetProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.IsOpen\n  id: IsOpen\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: IsOpen\n  nameWithType: Popup.IsOpen\n  fullName: System.Windows.Controls.Primitives.Popup.IsOpen\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Gets or sets a value that indicates whether the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> is visible.\n  remarks: \"If a control uses a <xref:System.Windows.Controls.Primitives.Popup> as part of its default style, bind the IsOpen property of the <xref:System.Windows.Controls.Primitives.Popup> to a property of the control. For example, a <xref:System.Windows.Controls.ComboBox> can bind its <xref:System.Windows.Controls.ComboBox.IsDropDownOpen%2A> property to the IsOpen property of the <xref:System.Windows.Controls.Primitives.Popup>. This simplifies the logic for controlling when the <xref:System.Windows.Controls.Primitives.Popup> is visible.  \\n  \\n<a name=\\\"dependencyPropertyInfo_IsOpen\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.Primitives.Popup.IsOpenProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|\"\n  example:\n  - \"The following example shows how to set the IsOpen property.  \\n  \\n [!code-cs[PopupSnips#IsOpen](~/add/codesnippet/csharp/PopupSnips/Window1.xaml.cs#isopen)]\\n [!code-xml[PopupSnips#IsOpen](~/add/codesnippet/xaml/PopupSnips/Window1.xaml#isopen)]\\n [!code-vb[PopupSnips#IsOpen](~/add/codesnippet/visualbasic/popupsnips/window1.xaml.vb#isopen)]\"\n  syntax:\n    content: public bool IsOpen { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> is visible; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.Primitives.Popup.IsOpen*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.IsOpenProperty\n  id: IsOpenProperty\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: IsOpenProperty\n  nameWithType: Popup.IsOpenProperty\n  fullName: System.Windows.Controls.Primitives.Popup.IsOpenProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Identifies the <xref:System.Windows.Controls.Primitives.Popup.IsOpen*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty IsOpenProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.LogicalChildren\n  id: LogicalChildren\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: LogicalChildren\n  nameWithType: Popup.LogicalChildren\n  fullName: System.Windows.Controls.Primitives.Popup.LogicalChildren\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Gets an enumerator that you can use to access the logical child elements of the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control.\n  remarks: When you add content to a <xref:System.Windows.Controls.Primitives.Popup> control, the <xref:System.Windows.Controls.Primitives.Popup> control becomes the logical parent to the content. Similarly, the <xref:System.Windows.Controls.Primitives.Popup> content is considered to be the logical child of the <xref:System.Windows.Controls.Primitives.Popup>. The child content is not added to the visual tree that contains the <xref:System.Windows.Controls.Primitives.Popup> control. Instead, the child content is rendered in a separate window that has its own visual tree when the <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> property is set to `true`.\n  syntax:\n    content: protected override System.Collections.IEnumerator LogicalChildren { get; }\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref:System.Collections.IEnumerator> that you can use to access the logical child elements of a <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Windows.Controls.Primitives.Popup.LogicalChildren*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.MeasureOverride(System.Windows.Size)\n  id: MeasureOverride(System.Windows.Size)\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: MeasureOverride(Size)\n  nameWithType: Popup.MeasureOverride(Size)\n  fullName: System.Windows.Controls.Primitives.Popup.MeasureOverride(Size)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Determines the required size of the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> content within the visual tree of the logical parent.\n  remarks: This method always returns a <xref:System.Windows.Size> that has a width and height of zero (0), because <xref:System.Windows.Controls.Primitives.Popup> content is not located in the visual tree of its logical parent or <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>. The child content is created in a different window that has its own visual tree.\n  syntax:\n    content: protected override System.Windows.Size MeasureOverride (System.Windows.Size availableSize);\n    parameters:\n    - id: availableSize\n      type: System.Windows.Size\n      description: The available size that this element can give to the child. You can use infinity as a value to indicate that the element can size to whatever content is available.\n    return:\n      type: System.Windows.Size\n      description: A <xref href=\"System.Windows.Size\"></xref> structure that has the <xref:System.Windows.Size.Height*> and <xref:System.Windows.Size.Width*> properties both equal to zero (0).\n  overload: System.Windows.Controls.Primitives.Popup.MeasureOverride*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.OnClosed(System.EventArgs)\n  id: OnClosed(System.EventArgs)\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: OnClosed(EventArgs)\n  nameWithType: Popup.OnClosed(EventArgs)\n  fullName: System.Windows.Controls.Primitives.Popup.OnClosed(EventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Responds when the value of the <xref:System.Windows.Controls.Primitives.Popup.IsOpen*> property changes from to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  syntax:\n    content: protected virtual void OnClosed (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: The event data.\n  overload: System.Windows.Controls.Primitives.Popup.OnClosed*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.OnOpened(System.EventArgs)\n  id: OnOpened(System.EventArgs)\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: OnOpened(EventArgs)\n  nameWithType: Popup.OnOpened(EventArgs)\n  fullName: System.Windows.Controls.Primitives.Popup.OnOpened(EventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Responds to the condition in which the value of the <xref:System.Windows.Controls.Primitives.Popup.IsOpen*> property changes from <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  syntax:\n    content: protected virtual void OnOpened (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: The event arguments.\n  overload: System.Windows.Controls.Primitives.Popup.OnOpened*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  id: OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)\n  nameWithType: Popup.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)\n  fullName: System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Provides class handling for the <xref href=\"System.Windows.UIElement.PreviewMouseLeftButtonDown\"></xref> event.\n  remarks: This implementation makes sure that a <xref:System.Windows.Controls.Primitives.Popup> closes when a mouse event occurs outside the <xref:System.Windows.Controls.Primitives.Popup> when the <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> property is set to `false`.\n  syntax:\n    content: protected override void OnPreviewMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.MouseButtonEventArgs\n      description: The event data.\n  overload: System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonDown*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  id: OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)\n  nameWithType: Popup.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)\n  fullName: System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Provides class handling for the <xref href=\"System.Windows.UIElement.PreviewMouseLeftButtonUp\"></xref> event.\n  remarks: This implementation makes sure that a <xref:System.Windows.Controls.Primitives.Popup> closes when a mouse event occurs outside the <xref:System.Windows.Controls.Primitives.Popup> when the <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> property is set to `false`.\n  syntax:\n    content: protected override void OnPreviewMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.MouseButtonEventArgs\n      description: The event data.\n  overload: System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonUp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  id: OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: OnPreviewMouseRightButtonDown(MouseButtonEventArgs)\n  nameWithType: Popup.OnPreviewMouseRightButtonDown(MouseButtonEventArgs)\n  fullName: System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonDown(MouseButtonEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Provides class handling for the <xref href=\"System.Windows.UIElement.PreviewMouseRightButtonUp\"></xref> event.\n  remarks: This implementation makes sure that a <xref:System.Windows.Controls.Primitives.Popup> closes when a mouse event occurs outside the <xref:System.Windows.Controls.Primitives.Popup> when the <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> property is set to `false`.\n  syntax:\n    content: protected override void OnPreviewMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.MouseButtonEventArgs\n      description: The event data.\n  overload: System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonDown*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  id: OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: OnPreviewMouseRightButtonUp(MouseButtonEventArgs)\n  nameWithType: Popup.OnPreviewMouseRightButtonUp(MouseButtonEventArgs)\n  fullName: System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonUp(MouseButtonEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Provides class handling for the <xref href=\"System.Windows.UIElement.PreviewMouseRightButtonDown\"></xref> event.\n  remarks: This implementation makes sure that a <xref:System.Windows.Controls.Primitives.Popup> closes when a mouse event occurs outside the <xref:System.Windows.Controls.Primitives.Popup> when the <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> property is set to `false`.\n  syntax:\n    content: protected override void OnPreviewMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.MouseButtonEventArgs\n      description: The event data.\n  overload: System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonUp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.Opened\n  id: Opened\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: Opened\n  nameWithType: Popup.Opened\n  fullName: System.Windows.Controls.Primitives.Popup.Opened\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Occurs when the <xref:System.Windows.Controls.Primitives.Popup.IsOpen*> property changes to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  remarks: A <xref:System.Windows.Controls.Primitives.Popup> is opened and closed by toggling the <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> property.\n  example:\n  - \"The following example shows how to define an event handler for the Opened event.  \\n  \\n [!code-cs[PopupSnips#Opened](~/add/codesnippet/csharp/PopupSnips/Window1.xaml.cs#opened)]\\n [!code-xml[PopupSnips#Opened](~/add/codesnippet/xaml/PopupSnips/Window1.xaml#opened)]\\n [!code-vb[PopupSnips#Opened](~/add/codesnippet/visualbasic/popupsnips/window1.xaml.vb#opened)]\"\n  syntax:\n    content: public event EventHandler Opened;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.Placement\n  id: Placement\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: Placement\n  nameWithType: Popup.Placement\n  fullName: System.Windows.Controls.Primitives.Popup.Placement\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Gets or sets the orientation of the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control when the control opens, and specifies the behavior of the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control when it overlaps screen boundaries.\n  remarks: \"You can position a popup by setting the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, Placement, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> properties. For more information, see [Popup Placement Behavior](~/add/includes/ajax-current-ext-md.md).  \\n  \\n If the <xref:System.Windows.SystemParameters.MenuDropAlignment%2A> property is `true`, setting Placement to <xref:System.Windows.Controls.Primitives.PlacementMode> or <xref:System.Windows.Controls.Primitives.PlacementMode> reverses the position of the <xref:System.Windows.Controls.Primitives.Popup>; a <xref:System.Windows.Controls.Primitives.Popup> with Placement set to <xref:System.Windows.Controls.Primitives.PlacementMode> aligns its left edge with the right edge of <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A> and a <xref:System.Windows.Controls.Primitives.Popup> with Placement set to <xref:System.Windows.Controls.Primitives.PlacementMode> aligns its right edge with the left edge of <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>.  \\n  \\n<a name=\\\"dependencyPropertyInfo_Placement\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.Primitives.Popup.PlacementProperty>|  \\n|Metadata properties set to `true`|None|\"\n  example:\n  - \"The following example creates four <xref:System.Windows.Controls.Primitives.Popup> controls that are relative to an image. Each <xref:System.Windows.Controls.Primitives.Popup> has a different value for the placement property.  \\n  \\n [!code-xml[PopupPositionSnippets#3](~/add/codesnippet/xaml/p-system.windows.control_390_1.xaml)]\\n [!code-xml[PopupPositionSnippets#3](~/add/codesnippet/xaml/p-system.windows.control_390_1.xaml)]\"\n  syntax:\n    content: public System.Windows.Controls.Primitives.PlacementMode Placement { get; set; }\n    return:\n      type: System.Windows.Controls.Primitives.PlacementMode\n      description: A <xref href=\"System.Windows.Controls.Primitives.PlacementMode\"></xref> enumeration value that determines the orientation of the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control when the control opens, and that specifies how the control interacts with screen boundaries. The default is <xref href=\"System.Windows.Controls.Primitives.PlacementMode\"></xref>.\n  overload: System.Windows.Controls.Primitives.Popup.Placement*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.PlacementProperty\n  id: PlacementProperty\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: PlacementProperty\n  nameWithType: Popup.PlacementProperty\n  fullName: System.Windows.Controls.Primitives.Popup.PlacementProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Identifies the <xref:System.Windows.Controls.Primitives.Popup.Placement*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty PlacementProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.PlacementRectangle\n  id: PlacementRectangle\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: PlacementRectangle\n  nameWithType: Popup.PlacementRectangle\n  fullName: System.Windows.Controls.Primitives.Popup.PlacementRectangle\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Gets or sets the rectangle relative to which the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control is positioned when it opens.\n  remarks: \"You can position a popup by setting the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, PlacementRectangle, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> properties. For more information, see [Popup Placement Behavior](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"dependencyPropertyInfo_PlacementRectangle\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.Primitives.Popup.PlacementRectangleProperty>|  \\n|Metadata properties set to `true`|None|\"\n  example:\n  - \"The following example sets the PlacementRectangle property of a <xref:System.Windows.Controls.Primitives.Popup>. The <xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>, <xref:System.Windows.Rect.Width%2A>, and <xref:System.Windows.Rect.Height%2A> properties of the PlacementRectangle are 50, 50, 50, and 100, respectively. The <xref:System.Windows.Controls.Primitives.Popup> is relative to the bounds of the PlacementRectangle property. Note that the PlacementRectangle property does not create a visible element in the application; the example creates a <xref:System.Windows.Shapes.Rectangle> with the same bounds to represent the PlacementRectangle.  \\n  \\n [!code-xml[PopupPositionSnippets#6](~/add/codesnippet/xaml/p-system.windows.control_138_1.xaml)]\\n [!code-xml[PopupPositionSnippets#6](~/add/codesnippet/xaml/p-system.windows.control_138_1.xaml)]\"\n  syntax:\n    content: public System.Windows.Rect PlacementRectangle { get; set; }\n    return:\n      type: System.Windows.Rect\n      description: The rectangle that is used to position the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Windows.Controls.Primitives.Popup.PlacementRectangle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.PlacementRectangleProperty\n  id: PlacementRectangleProperty\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: PlacementRectangleProperty\n  nameWithType: Popup.PlacementRectangleProperty\n  fullName: System.Windows.Controls.Primitives.Popup.PlacementRectangleProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Identifies the <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty PlacementRectangleProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.PlacementTarget\n  id: PlacementTarget\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: PlacementTarget\n  nameWithType: Popup.PlacementTarget\n  fullName: System.Windows.Controls.Primitives.Popup.PlacementTarget\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Gets or sets the element relative to which the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> is positioned when it opens.\n  remarks: \"You can position a popup by setting the PlacementTarget, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> properties. For more information, see [Popup Placement Behavior](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"dependencyPropertyInfo_PlacementTarget\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.Primitives.Popup.PlacementTargetProperty>|  \\n|Metadata properties set to `true`|None|\"\n  example:\n  - \"The following example creates a <xref:System.Windows.Controls.Primitives.Popup> that is the child of a <xref:System.Windows.Controls.Canvas>, and sets PlacementTarget to `ellipse1`, so the popup is relative to the <xref:System.Windows.Shapes.Ellipse>.  \\n  \\n [!code-xml[PopupPositionSnippets#2](~/add/codesnippet/xaml/p-system.windows.control_309_1.xaml)]\\n [!code-xml[PopupPositionSnippets#2](~/add/codesnippet/xaml/p-system.windows.control_309_1.xaml)]\"\n  syntax:\n    content: public System.Windows.UIElement PlacementTarget { get; set; }\n    return:\n      type: System.Windows.UIElement\n      description: The <xref href=\"System.Windows.UIElement\"></xref> that is the logical parent of the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Windows.Controls.Primitives.Popup.PlacementTarget*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.PlacementTargetProperty\n  id: PlacementTargetProperty\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: PlacementTargetProperty\n  nameWithType: Popup.PlacementTargetProperty\n  fullName: System.Windows.Controls.Primitives.Popup.PlacementTargetProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Identifies the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty PlacementTargetProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.PopupAnimation\n  id: PopupAnimation\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: PopupAnimation\n  nameWithType: Popup.PopupAnimation\n  fullName: System.Windows.Controls.Primitives.Popup.PopupAnimation\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Gets or sets an animation for the opening and closing of a <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control.\n  remarks: \"A <xref:System.Windows.Controls.Primitives.Popup> can only animate when the <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> property is set to `true`. This requires the application that creates the <xref:System.Windows.Controls.Primitives.Popup> control to run with full trust.  \\n  \\n If the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A> is animated, the <xref:System.Windows.Controls.Primitives.Popup> will not be animated.  \\n  \\n<a name=\\\"dependencyPropertyInfo_PopupAnimation\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.Primitives.Popup.PopupAnimationProperty>|  \\n|Metadata properties set to `true`|None|\"\n  example:\n  - \"The following example shows how to set the PopupAnimation property.  \\n  \\n [!code-cs[PopupSnips#AllowsTransparency](~/add/codesnippet/csharp/PopupSnips/Window1.xaml.cs#allowstransparency)]\\n [!code-xml[PopupSnips#AllowsTransparency](~/add/codesnippet/xaml/PopupSnips/Window1.xaml#allowstransparency)]\\n [!code-vb[PopupSnips#AllowsTransparency](~/add/codesnippet/visualbasic/popupsnips/window1.xaml.vb#allowstransparency)]  \\n  \\n [!code-cs[PopupSnips#Animation](~/add/codesnippet/csharp/PopupSnips/Window1.xaml.cs#animation)]\\n [!code-vb[PopupSnips#Animation](~/add/codesnippet/visualbasic/popupsnips/window1.xaml.vb#animation)]\"\n  syntax:\n    content: public System.Windows.Controls.Primitives.PopupAnimation PopupAnimation { get; set; }\n    return:\n      type: System.Windows.Controls.Primitives.PopupAnimation\n      description: The <xref href=\"System.Windows.Controls.Primitives.PopupAnimation\"></xref> enumeration value that defines an animation to open and close a <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control. The default is <xref href=\"System.Windows.Controls.Primitives.PopupAnimation\"></xref>.\n  overload: System.Windows.Controls.Primitives.Popup.PopupAnimation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.PopupAnimationProperty\n  id: PopupAnimationProperty\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: PopupAnimationProperty\n  nameWithType: Popup.PopupAnimationProperty\n  fullName: System.Windows.Controls.Primitives.Popup.PopupAnimationProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Identifies the <xref:System.Windows.Controls.Primitives.Popup.PopupAnimation*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty PopupAnimationProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.StaysOpen\n  id: StaysOpen\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: StaysOpen\n  nameWithType: Popup.StaysOpen\n  fullName: System.Windows.Controls.Primitives.Popup.StaysOpen\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Gets or sets a value that indicates whether the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control closes when the control is no longer in focus.\n  remarks: \"When the StaysOpen property is set to `true`, <xref:System.Windows.Controls.Primitives.Popup> stays open until it is explicitly closed by setting the <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> property to `false`. When StaysOpen is `false`, the <xref:System.Windows.Controls.Primitives.Popup> control intercepts all mouse and keyboard events to determine when one of these events occurs outside the <xref:System.Windows.Controls.Primitives.Popup> control.  \\n  \\n<a name=\\\"dependencyPropertyInfo_StaysOpen\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.Primitives.Popup.StaysOpenProperty>|  \\n|Metadata properties set to `true`|None|\"\n  example:\n  - \"The following example shows how to set the StaysOpen property.  \\n  \\n [!code-cs[PopupSnips#StaysOpen](~/add/codesnippet/csharp/PopupSnips/Window1.xaml.cs#staysopen)]\\n [!code-xml[PopupSnips#StaysOpen](~/add/codesnippet/xaml/PopupSnips/Window1.xaml#staysopen)]\\n [!code-vb[PopupSnips#StaysOpen](~/add/codesnippet/visualbasic/popupsnips/window1.xaml.vb#staysopen)]\"\n  syntax:\n    content: public bool StaysOpen { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control closes when <xref:System.Windows.Controls.Primitives.Popup.IsOpen*> property is set to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control closes when a mouse or keyboard event occurs outside the <xref href=\"System.Windows.Controls.Primitives.Popup\"></xref> control. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Windows.Controls.Primitives.Popup.StaysOpen*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.StaysOpenProperty\n  id: StaysOpenProperty\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: StaysOpenProperty\n  nameWithType: Popup.StaysOpenProperty\n  fullName: System.Windows.Controls.Primitives.Popup.StaysOpenProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Identifies the <xref:System.Windows.Controls.Primitives.Popup.StaysOpen*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty StaysOpenProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddChild(System.Object)\n  id: System#Windows#Markup#IAddChild#AddChild(System.Object)\n  isEii: true\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: System.Windows.Markup.IAddChild.AddChild(Object)\n  nameWithType: Popup.System.Windows.Markup.IAddChild.AddChild(Object)\n  fullName: System.Windows.Controls.Primitives.Popup.System.Windows.Markup.IAddChild.AddChild(Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: This member supports the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.\n  syntax:\n    content: void IAddChild.AddChild (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: An object to add as a child.\n  overload: System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddChild*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddText(System.String)\n  id: System#Windows#Markup#IAddChild#AddText(System.String)\n  isEii: true\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: System.Windows.Markup.IAddChild.AddText(String)\n  nameWithType: Popup.System.Windows.Markup.IAddChild.AddText(String)\n  fullName: System.Windows.Controls.Primitives.Popup.System.Windows.Markup.IAddChild.AddText(String)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: This member supports the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.\n  syntax:\n    content: void IAddChild.AddText (string text);\n    parameters:\n    - id: text\n      type: System.String\n      description: A string to add to the object.\n  overload: System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddText*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.VerticalOffset\n  id: VerticalOffset\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: VerticalOffset\n  nameWithType: Popup.VerticalOffset\n  fullName: System.Windows.Controls.Primitives.Popup.VerticalOffset\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Gets or sets the vertical distance between the target origin and the popup alignment point.\n  remarks: \"You can position a popup by setting the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> properties. For more information, see [Popup Placement Behavior](../Topic/Popup%20Placement%20Behavior.md).  \\n  \\n<a name=\\\"xamlAttributeUsage_VerticalOffset\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object VerticalOffset=\\\"double\\\"/>  \\n- or -  \\n<object VerticalOffset=\\\"qualifiedDouble\\\"/>  \\n```  \\n  \\n<a name=\\\"xamlValues_VerticalOffset\\\"></a>   \\n## XAML Values  \\n `double`  \\n <xref:System.Double>  \\n  \\n A string representation of a <xref:System.Double> value. This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)] measurement. Strings do not have to explicitly include decimal points. For example, a value of `1` is acceptable.  \\n  \\n The same <xref:System.Double> range restrictions apply as those that are mentioned in the Property Value section of this topic.  \\n  \\n `qualifiedDouble`  \\n A `double` value as described earlier in this table, followed by one of the following unit declaration strings: `px`, `in`, `cm`, or `pt`.  \\n  \\n `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n `in` is inches; 1in=96px  \\n  \\n `cm` is centimeters; 1cm=(96/2.54) px  \\n  \\n `pt` is points; 1pt=(96/72) px  \\n  \\n<a name=\\\"dependencyPropertyInfo_VerticalOffset\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty>|  \\n|Metadata properties set to `true`|None|\"\n  example:\n  - \"The following example creates a <xref:System.Windows.Controls.Primitives.Popup> and sets the <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A> and VerticalOffset properties to 20.  The <xref:System.Windows.Controls.Primitives.Popup.Placement%2A> property is set to <xref:System.Windows.Controls.Primitives.PlacementMode> (which is the default), so the target origin is the bottom left corner of the target area, and the popup alignment point is the top left corner of the <xref:System.Windows.Controls.Primitives.Popup>.  \\n  \\n [!code-xml[PopupPositionSnippets#5](~/add/codesnippet/xaml/p-system.windows.control_291_1.xaml)]\\n [!code-xml[PopupPositionSnippets#5](~/add/codesnippet/xaml/p-system.windows.control_291_1.xaml)]\"\n  syntax:\n    content: public double VerticalOffset { get; set; }\n    return:\n      type: System.Double\n      description: The vertical distance between the target origin and the popup alignment point. For information about the target origin and popup alignment point, see [Popup Placement Behavior](~/add/includes/ajax-current-ext-md.md). The default is 0.\n  overload: System.Windows.Controls.Primitives.Popup.VerticalOffset*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty\n  id: VerticalOffsetProperty\n  parent: System.Windows.Controls.Primitives.Popup\n  langs:\n  - csharp\n  name: VerticalOffsetProperty\n  nameWithType: Popup.VerticalOffsetProperty\n  fullName: System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Identifies the <xref:System.Windows.Controls.Primitives.Popup.VerticalOffset*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty VerticalOffsetProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.FrameworkElement\n  isExternal: false\n  name: System.Windows.FrameworkElement\n- uid: System.Windows.Controls.Primitives.Popup.#ctor\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: Popup()\n  nameWithType: Popup.Popup()\n  fullName: System.Windows.Controls.Primitives.Popup.Popup()\n- uid: System.Windows.Controls.Primitives.Popup.AllowsTransparency\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: AllowsTransparency\n  nameWithType: Popup.AllowsTransparency\n  fullName: System.Windows.Controls.Primitives.Popup.AllowsTransparency\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Controls.Primitives.Popup.AllowsTransparencyProperty\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: AllowsTransparencyProperty\n  nameWithType: Popup.AllowsTransparencyProperty\n  fullName: System.Windows.Controls.Primitives.Popup.AllowsTransparencyProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Controls.Primitives.Popup.Child\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: Child\n  nameWithType: Popup.Child\n  fullName: System.Windows.Controls.Primitives.Popup.Child\n- uid: System.Windows.UIElement\n  parent: System.Windows\n  isExternal: false\n  name: UIElement\n  nameWithType: UIElement\n  fullName: System.Windows.UIElement\n- uid: System.Windows.Controls.Primitives.Popup.ChildProperty\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: ChildProperty\n  nameWithType: Popup.ChildProperty\n  fullName: System.Windows.Controls.Primitives.Popup.ChildProperty\n- uid: System.Windows.Controls.Primitives.Popup.Closed\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: Closed\n  nameWithType: Popup.Closed\n  fullName: System.Windows.Controls.Primitives.Popup.Closed\n- uid: System.EventHandler\n  parent: System\n  isExternal: true\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Windows.Controls.Primitives.Popup.CreateRootPopup(System.Windows.Controls.Primitives.Popup,System.Windows.UIElement)\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: CreateRootPopup(Popup,UIElement)\n  nameWithType: Popup.CreateRootPopup(Popup,UIElement)\n  fullName: System.Windows.Controls.Primitives.Popup.CreateRootPopup(Popup,UIElement)\n- uid: System.Windows.Controls.Primitives.Popup\n  parent: System.Windows.Controls.Primitives\n  isExternal: false\n  name: Popup\n  nameWithType: Popup\n  fullName: System.Windows.Controls.Primitives.Popup\n- uid: System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: CustomPopupPlacementCallback\n  nameWithType: Popup.CustomPopupPlacementCallback\n  fullName: System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback\n- uid: System.Windows.Controls.Primitives.CustomPopupPlacementCallback\n  parent: System.Windows.Controls.Primitives\n  isExternal: false\n  name: CustomPopupPlacementCallback\n  nameWithType: CustomPopupPlacementCallback\n  fullName: System.Windows.Controls.Primitives.CustomPopupPlacementCallback\n- uid: System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallbackProperty\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: CustomPopupPlacementCallbackProperty\n  nameWithType: Popup.CustomPopupPlacementCallbackProperty\n  fullName: System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallbackProperty\n- uid: System.Windows.Controls.Primitives.Popup.GetUIParentCore\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: GetUIParentCore()\n  nameWithType: Popup.GetUIParentCore()\n  fullName: System.Windows.Controls.Primitives.Popup.GetUIParentCore()\n- uid: System.Windows.DependencyObject\n  parent: System.Windows\n  isExternal: false\n  name: DependencyObject\n  nameWithType: DependencyObject\n  fullName: System.Windows.DependencyObject\n- uid: System.Windows.Controls.Primitives.Popup.HasDropShadow\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: HasDropShadow\n  nameWithType: Popup.HasDropShadow\n  fullName: System.Windows.Controls.Primitives.Popup.HasDropShadow\n- uid: System.Windows.Controls.Primitives.Popup.HasDropShadowProperty\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: HasDropShadowProperty\n  nameWithType: Popup.HasDropShadowProperty\n  fullName: System.Windows.Controls.Primitives.Popup.HasDropShadowProperty\n- uid: System.Windows.Controls.Primitives.Popup.HorizontalOffset\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: HorizontalOffset\n  nameWithType: Popup.HorizontalOffset\n  fullName: System.Windows.Controls.Primitives.Popup.HorizontalOffset\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Controls.Primitives.Popup.HorizontalOffsetProperty\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: HorizontalOffsetProperty\n  nameWithType: Popup.HorizontalOffsetProperty\n  fullName: System.Windows.Controls.Primitives.Popup.HorizontalOffsetProperty\n- uid: System.Windows.Controls.Primitives.Popup.IsOpen\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: IsOpen\n  nameWithType: Popup.IsOpen\n  fullName: System.Windows.Controls.Primitives.Popup.IsOpen\n- uid: System.Windows.Controls.Primitives.Popup.IsOpenProperty\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: IsOpenProperty\n  nameWithType: Popup.IsOpenProperty\n  fullName: System.Windows.Controls.Primitives.Popup.IsOpenProperty\n- uid: System.Windows.Controls.Primitives.Popup.LogicalChildren\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: LogicalChildren\n  nameWithType: Popup.LogicalChildren\n  fullName: System.Windows.Controls.Primitives.Popup.LogicalChildren\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Windows.Controls.Primitives.Popup.MeasureOverride(System.Windows.Size)\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: MeasureOverride(Size)\n  nameWithType: Popup.MeasureOverride(Size)\n  fullName: System.Windows.Controls.Primitives.Popup.MeasureOverride(Size)\n- uid: System.Windows.Size\n  parent: System.Windows\n  isExternal: false\n  name: Size\n  nameWithType: Size\n  fullName: System.Windows.Size\n- uid: System.Windows.Controls.Primitives.Popup.OnClosed(System.EventArgs)\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: OnClosed(EventArgs)\n  nameWithType: Popup.OnClosed(EventArgs)\n  fullName: System.Windows.Controls.Primitives.Popup.OnClosed(EventArgs)\n- uid: System.EventArgs\n  parent: System\n  isExternal: true\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Windows.Controls.Primitives.Popup.OnOpened(System.EventArgs)\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: OnOpened(EventArgs)\n  nameWithType: Popup.OnOpened(EventArgs)\n  fullName: System.Windows.Controls.Primitives.Popup.OnOpened(EventArgs)\n- uid: System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)\n  nameWithType: Popup.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)\n  fullName: System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)\n- uid: System.Windows.Input.MouseButtonEventArgs\n  parent: System.Windows.Input\n  isExternal: false\n  name: MouseButtonEventArgs\n  nameWithType: MouseButtonEventArgs\n  fullName: System.Windows.Input.MouseButtonEventArgs\n- uid: System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)\n  nameWithType: Popup.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)\n  fullName: System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)\n- uid: System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: OnPreviewMouseRightButtonDown(MouseButtonEventArgs)\n  nameWithType: Popup.OnPreviewMouseRightButtonDown(MouseButtonEventArgs)\n  fullName: System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonDown(MouseButtonEventArgs)\n- uid: System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: OnPreviewMouseRightButtonUp(MouseButtonEventArgs)\n  nameWithType: Popup.OnPreviewMouseRightButtonUp(MouseButtonEventArgs)\n  fullName: System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonUp(MouseButtonEventArgs)\n- uid: System.Windows.Controls.Primitives.Popup.Opened\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: Opened\n  nameWithType: Popup.Opened\n  fullName: System.Windows.Controls.Primitives.Popup.Opened\n- uid: System.Windows.Controls.Primitives.Popup.Placement\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: Placement\n  nameWithType: Popup.Placement\n  fullName: System.Windows.Controls.Primitives.Popup.Placement\n- uid: System.Windows.Controls.Primitives.PlacementMode\n  parent: System.Windows.Controls.Primitives\n  isExternal: false\n  name: PlacementMode\n  nameWithType: PlacementMode\n  fullName: System.Windows.Controls.Primitives.PlacementMode\n- uid: System.Windows.Controls.Primitives.Popup.PlacementProperty\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: PlacementProperty\n  nameWithType: Popup.PlacementProperty\n  fullName: System.Windows.Controls.Primitives.Popup.PlacementProperty\n- uid: System.Windows.Controls.Primitives.Popup.PlacementRectangle\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: PlacementRectangle\n  nameWithType: Popup.PlacementRectangle\n  fullName: System.Windows.Controls.Primitives.Popup.PlacementRectangle\n- uid: System.Windows.Rect\n  parent: System.Windows\n  isExternal: false\n  name: Rect\n  nameWithType: Rect\n  fullName: System.Windows.Rect\n- uid: System.Windows.Controls.Primitives.Popup.PlacementRectangleProperty\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: PlacementRectangleProperty\n  nameWithType: Popup.PlacementRectangleProperty\n  fullName: System.Windows.Controls.Primitives.Popup.PlacementRectangleProperty\n- uid: System.Windows.Controls.Primitives.Popup.PlacementTarget\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: PlacementTarget\n  nameWithType: Popup.PlacementTarget\n  fullName: System.Windows.Controls.Primitives.Popup.PlacementTarget\n- uid: System.Windows.Controls.Primitives.Popup.PlacementTargetProperty\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: PlacementTargetProperty\n  nameWithType: Popup.PlacementTargetProperty\n  fullName: System.Windows.Controls.Primitives.Popup.PlacementTargetProperty\n- uid: System.Windows.Controls.Primitives.Popup.PopupAnimation\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: PopupAnimation\n  nameWithType: Popup.PopupAnimation\n  fullName: System.Windows.Controls.Primitives.Popup.PopupAnimation\n- uid: System.Windows.Controls.Primitives.PopupAnimation\n  parent: System.Windows.Controls.Primitives\n  isExternal: false\n  name: PopupAnimation\n  nameWithType: PopupAnimation\n  fullName: System.Windows.Controls.Primitives.PopupAnimation\n- uid: System.Windows.Controls.Primitives.Popup.PopupAnimationProperty\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: PopupAnimationProperty\n  nameWithType: Popup.PopupAnimationProperty\n  fullName: System.Windows.Controls.Primitives.Popup.PopupAnimationProperty\n- uid: System.Windows.Controls.Primitives.Popup.StaysOpen\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: StaysOpen\n  nameWithType: Popup.StaysOpen\n  fullName: System.Windows.Controls.Primitives.Popup.StaysOpen\n- uid: System.Windows.Controls.Primitives.Popup.StaysOpenProperty\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: StaysOpenProperty\n  nameWithType: Popup.StaysOpenProperty\n  fullName: System.Windows.Controls.Primitives.Popup.StaysOpenProperty\n- uid: System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddChild(System.Object)\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: System.Windows.Markup.IAddChild.AddChild(Object)\n  nameWithType: Popup.System.Windows.Markup.IAddChild.AddChild(Object)\n  fullName: System.Windows.Controls.Primitives.Popup.System.Windows.Markup.IAddChild.AddChild(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddText(System.String)\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: System.Windows.Markup.IAddChild.AddText(String)\n  nameWithType: Popup.System.Windows.Markup.IAddChild.AddText(String)\n  fullName: System.Windows.Controls.Primitives.Popup.System.Windows.Markup.IAddChild.AddText(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Controls.Primitives.Popup.VerticalOffset\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: VerticalOffset\n  nameWithType: Popup.VerticalOffset\n  fullName: System.Windows.Controls.Primitives.Popup.VerticalOffset\n- uid: System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: VerticalOffsetProperty\n  nameWithType: Popup.VerticalOffsetProperty\n  fullName: System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty\n- uid: System.Windows.Controls.Primitives.Popup.#ctor*\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: Popup\n  nameWithType: Popup.Popup\n- uid: System.Windows.Controls.Primitives.Popup.AllowsTransparency*\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: AllowsTransparency\n  nameWithType: Popup.AllowsTransparency\n- uid: System.Windows.Controls.Primitives.Popup.Child*\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: Child\n  nameWithType: Popup.Child\n- uid: System.Windows.Controls.Primitives.Popup.CreateRootPopup*\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: CreateRootPopup\n  nameWithType: Popup.CreateRootPopup\n- uid: System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback*\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: CustomPopupPlacementCallback\n  nameWithType: Popup.CustomPopupPlacementCallback\n- uid: System.Windows.Controls.Primitives.Popup.GetUIParentCore*\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: GetUIParentCore\n  nameWithType: Popup.GetUIParentCore\n- uid: System.Windows.Controls.Primitives.Popup.HasDropShadow*\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: HasDropShadow\n  nameWithType: Popup.HasDropShadow\n- uid: System.Windows.Controls.Primitives.Popup.HorizontalOffset*\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: HorizontalOffset\n  nameWithType: Popup.HorizontalOffset\n- uid: System.Windows.Controls.Primitives.Popup.IsOpen*\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: IsOpen\n  nameWithType: Popup.IsOpen\n- uid: System.Windows.Controls.Primitives.Popup.LogicalChildren*\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: LogicalChildren\n  nameWithType: Popup.LogicalChildren\n- uid: System.Windows.Controls.Primitives.Popup.MeasureOverride*\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: MeasureOverride\n  nameWithType: Popup.MeasureOverride\n- uid: System.Windows.Controls.Primitives.Popup.OnClosed*\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: OnClosed\n  nameWithType: Popup.OnClosed\n- uid: System.Windows.Controls.Primitives.Popup.OnOpened*\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: OnOpened\n  nameWithType: Popup.OnOpened\n- uid: System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonDown*\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: OnPreviewMouseLeftButtonDown\n  nameWithType: Popup.OnPreviewMouseLeftButtonDown\n- uid: System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonUp*\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: OnPreviewMouseLeftButtonUp\n  nameWithType: Popup.OnPreviewMouseLeftButtonUp\n- uid: System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonDown*\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: OnPreviewMouseRightButtonDown\n  nameWithType: Popup.OnPreviewMouseRightButtonDown\n- uid: System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonUp*\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: OnPreviewMouseRightButtonUp\n  nameWithType: Popup.OnPreviewMouseRightButtonUp\n- uid: System.Windows.Controls.Primitives.Popup.Placement*\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: Placement\n  nameWithType: Popup.Placement\n- uid: System.Windows.Controls.Primitives.Popup.PlacementRectangle*\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: PlacementRectangle\n  nameWithType: Popup.PlacementRectangle\n- uid: System.Windows.Controls.Primitives.Popup.PlacementTarget*\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: PlacementTarget\n  nameWithType: Popup.PlacementTarget\n- uid: System.Windows.Controls.Primitives.Popup.PopupAnimation*\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: PopupAnimation\n  nameWithType: Popup.PopupAnimation\n- uid: System.Windows.Controls.Primitives.Popup.StaysOpen*\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: StaysOpen\n  nameWithType: Popup.StaysOpen\n- uid: System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddChild*\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: System.Windows.Markup.IAddChild.AddChild\n  nameWithType: Popup.System.Windows.Markup.IAddChild.AddChild\n- uid: System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddText*\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: System.Windows.Markup.IAddChild.AddText\n  nameWithType: Popup.System.Windows.Markup.IAddChild.AddText\n- uid: System.Windows.Controls.Primitives.Popup.VerticalOffset*\n  parent: System.Windows.Controls.Primitives.Popup\n  isExternal: false\n  name: VerticalOffset\n  nameWithType: Popup.VerticalOffset\n"}