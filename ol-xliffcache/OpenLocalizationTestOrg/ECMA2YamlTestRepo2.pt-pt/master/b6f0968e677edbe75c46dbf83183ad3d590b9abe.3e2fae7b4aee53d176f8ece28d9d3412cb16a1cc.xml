{"nodes":[{"pos":[674,887],"content":"Terminates the running workflow instance, raises the <xref:System.Activities.WorkflowApplication.Completed*> event in the host, and reports error information. Once the workflow is terminated, it cannot be resumed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Terminates the running workflow instance, raises the <xref:System.Activities.WorkflowApplication.Completed*> event in the host, and reports error information. Once the workflow is terminated, it cannot be resumed.","pos":[0,213],"nodes":[{"content":"Terminates the running workflow instance, raises the &lt;xref:System.Activities.WorkflowApplication.Completed*&gt; event in the host, and reports error information.","pos":[0,158],"source":"Terminates the running workflow instance, raises the <xref:System.Activities.WorkflowApplication.Completed*> event in the host, and reports error information."},{"content":"Once the workflow is terminated, it cannot be resumed.","pos":[159,213]}]}]},{"pos":[2655,2759],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.TerminateWorkflow\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.Activities.Statements.TerminateWorkflow\"></xref> class."},{"pos":[3715,3727],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4236,4302],"content":"Gets or sets the exception that provoked the instance termination.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the exception that provoked the instance termination.","pos":[0,66]}]},{"pos":[4314,5117],"content":"The exception that is passed to <xref:System.Activities.WorkflowApplication.Terminate%2A> is a <xref:System.Activities.WorkflowApplicationTerminatedException> if only <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A> is set. If only Exception is set, that exception is passed to <xref:System.Activities.WorkflowApplication.Terminate%2A>. If both <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A> and Exception are set, a <xref:System.Activities.WorkflowApplicationTerminatedException> is passed with the specified <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A>, and Exception is set as the exception’s <xref:System.Exception.InnerException%2A> property. If neither is set, a default <xref:System.Activities.WorkflowApplicationTerminatedException> is created.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The exception that is passed to <xref:System.Activities.WorkflowApplication.Terminate%2A> is a <xref:System.Activities.WorkflowApplicationTerminatedException> if only <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A> is set. If only Exception is set, that exception is passed to <xref:System.Activities.WorkflowApplication.Terminate%2A>. If both <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A> and Exception are set, a <xref:System.Activities.WorkflowApplicationTerminatedException> is passed with the specified <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A>, and Exception is set as the exception’s <xref:System.Exception.InnerException%2A> property. If neither is set, a default <xref:System.Activities.WorkflowApplicationTerminatedException> is created.","pos":[0,803],"nodes":[{"content":"The exception that is passed to &lt;xref:System.Activities.WorkflowApplication.Terminate%2A&gt; is a &lt;xref:System.Activities.WorkflowApplicationTerminatedException&gt; if only &lt;xref:System.Activities.Statements.TerminateWorkflow.Reason%2A&gt; is set.","pos":[0,238],"source":"The exception that is passed to <xref:System.Activities.WorkflowApplication.Terminate%2A> is a <xref:System.Activities.WorkflowApplicationTerminatedException> if only <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A> is set."},{"content":"If only Exception is set, that exception is passed to &lt;xref:System.Activities.WorkflowApplication.Terminate%2A&gt;.","pos":[239,351],"source":" If only Exception is set, that exception is passed to <xref:System.Activities.WorkflowApplication.Terminate%2A>."},{"content":"If both &lt;xref:System.Activities.Statements.TerminateWorkflow.Reason%2A&gt; and Exception are set, a &lt;xref:System.Activities.WorkflowApplicationTerminatedException&gt; is passed with the specified &lt;xref:System.Activities.Statements.TerminateWorkflow.Reason%2A&gt;, and Exception is set as the exception’s &lt;xref:System.Exception.InnerException%2A&gt; property.","pos":[352,698],"source":" If both <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A> and Exception are set, a <xref:System.Activities.WorkflowApplicationTerminatedException> is passed with the specified <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A>, and Exception is set as the exception’s <xref:System.Exception.InnerException%2A> property."},{"content":"If neither is set, a default &lt;xref:System.Activities.WorkflowApplicationTerminatedException&gt; is created.","pos":[699,803],"source":" If neither is set, a default <xref:System.Activities.WorkflowApplicationTerminatedException> is created."}]}]},{"pos":[5302,5316],"content":"The exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"The exception.","pos":[0,14]}]},{"pos":[6160,6172],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6660,6738],"content":"A string input argument with the reason for the workflow instance termination.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string input argument with the reason for the workflow instance termination.","pos":[0,78]}]},{"pos":[6750,7553],"content":"The exception that is passed to <xref:System.Activities.WorkflowApplication.Terminate%2A> is a <xref:System.Activities.WorkflowApplicationTerminatedException> if only Reason is set. If only <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> is set, that exception is passed to <xref:System.Activities.WorkflowApplication.Terminate%2A>. If both Reason and <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> are set, a <xref:System.Activities.WorkflowApplicationTerminatedException> is passed with the specified Reason, and <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> is set as the exception’s <xref:System.Exception.InnerException%2A> property. If neither is set, a default <xref:System.Activities.WorkflowApplicationTerminatedException> is created.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The exception that is passed to <xref:System.Activities.WorkflowApplication.Terminate%2A> is a <xref:System.Activities.WorkflowApplicationTerminatedException> if only Reason is set. If only <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> is set, that exception is passed to <xref:System.Activities.WorkflowApplication.Terminate%2A>. If both Reason and <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> are set, a <xref:System.Activities.WorkflowApplicationTerminatedException> is passed with the specified Reason, and <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> is set as the exception’s <xref:System.Exception.InnerException%2A> property. If neither is set, a default <xref:System.Activities.WorkflowApplicationTerminatedException> is created.","pos":[0,803],"nodes":[{"content":"The exception that is passed to &lt;xref:System.Activities.WorkflowApplication.Terminate%2A&gt; is a &lt;xref:System.Activities.WorkflowApplicationTerminatedException&gt; if only Reason is set.","pos":[0,181],"source":"The exception that is passed to <xref:System.Activities.WorkflowApplication.Terminate%2A> is a <xref:System.Activities.WorkflowApplicationTerminatedException> if only Reason is set."},{"content":"If only &lt;xref:System.Activities.Statements.TerminateWorkflow.Exception%2A&gt; is set, that exception is passed to &lt;xref:System.Activities.WorkflowApplication.Terminate%2A&gt;.","pos":[182,351],"source":" If only <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> is set, that exception is passed to <xref:System.Activities.WorkflowApplication.Terminate%2A>."},{"content":"If both Reason and &lt;xref:System.Activities.Statements.TerminateWorkflow.Exception%2A&gt; are set, a &lt;xref:System.Activities.WorkflowApplicationTerminatedException&gt; is passed with the specified Reason, and &lt;xref:System.Activities.Statements.TerminateWorkflow.Exception%2A&gt; is set as the exception’s &lt;xref:System.Exception.InnerException%2A&gt; property.","pos":[352,698],"source":" If both Reason and <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> are set, a <xref:System.Activities.WorkflowApplicationTerminatedException> is passed with the specified Reason, and <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> is set as the exception’s <xref:System.Exception.InnerException%2A> property."},{"content":"If neither is set, a default &lt;xref:System.Activities.WorkflowApplicationTerminatedException&gt; is created.","pos":[699,803],"source":" If neither is set, a default <xref:System.Activities.WorkflowApplicationTerminatedException> is created."}]}]},{"pos":[7729,7765],"content":"The reason for workflow termination.","needQuote":true,"needEscape":true,"nodes":[{"content":"The reason for workflow termination.","pos":[0,36]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Statements.TerminateWorkflow\n  id: TerminateWorkflow\n  children:\n  - System.Activities.Statements.TerminateWorkflow.#ctor\n  - System.Activities.Statements.TerminateWorkflow.CacheMetadata(System.Activities.NativeActivityMetadata)\n  - System.Activities.Statements.TerminateWorkflow.Exception\n  - System.Activities.Statements.TerminateWorkflow.Execute(System.Activities.NativeActivityContext)\n  - System.Activities.Statements.TerminateWorkflow.Reason\n  langs:\n  - csharp\n  name: TerminateWorkflow\n  nameWithType: TerminateWorkflow\n  fullName: System.Activities.Statements.TerminateWorkflow\n  type: Class\n  summary: Terminates the running workflow instance, raises the <xref:System.Activities.WorkflowApplication.Completed*> event in the host, and reports error information. Once the workflow is terminated, it cannot be resumed.\n  syntax:\n    content: 'public sealed class TerminateWorkflow : System.Activities.NativeActivity'\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.NativeActivity\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)\n  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)\n  - System.Activities.NativeActivity.CanInduceIdle\n  - System.Activities.NativeActivity.Implementation\n  - System.Activities.NativeActivity.ImplementationVersion\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  platform:\n  - net462\n- uid: System.Activities.Statements.TerminateWorkflow.#ctor\n  id: '#ctor'\n  parent: System.Activities.Statements.TerminateWorkflow\n  langs:\n  - csharp\n  name: TerminateWorkflow()\n  nameWithType: TerminateWorkflow.TerminateWorkflow()\n  fullName: System.Activities.Statements.TerminateWorkflow.TerminateWorkflow()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Creates a new instance of the <xref href=\"System.Activities.Statements.TerminateWorkflow\"></xref> class.\n  syntax:\n    content: public TerminateWorkflow ();\n    parameters: []\n  overload: System.Activities.Statements.TerminateWorkflow.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.TerminateWorkflow.CacheMetadata(System.Activities.NativeActivityMetadata)\n  id: CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.TerminateWorkflow\n  langs:\n  - csharp\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: TerminateWorkflow.CacheMetadata(NativeActivityMetadata)\n  fullName: System.Activities.Statements.TerminateWorkflow.CacheMetadata(NativeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.NativeActivityMetadata\n      description: To be added.\n  overload: System.Activities.Statements.TerminateWorkflow.CacheMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.TerminateWorkflow.Exception\n  id: Exception\n  parent: System.Activities.Statements.TerminateWorkflow\n  langs:\n  - csharp\n  name: Exception\n  nameWithType: TerminateWorkflow.Exception\n  fullName: System.Activities.Statements.TerminateWorkflow.Exception\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Gets or sets the exception that provoked the instance termination.\n  remarks: The exception that is passed to <xref:System.Activities.WorkflowApplication.Terminate%2A> is a <xref:System.Activities.WorkflowApplicationTerminatedException> if only <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A> is set. If only Exception is set, that exception is passed to <xref:System.Activities.WorkflowApplication.Terminate%2A>. If both <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A> and Exception are set, a <xref:System.Activities.WorkflowApplicationTerminatedException> is passed with the specified <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A>, and Exception is set as the exception’s <xref:System.Exception.InnerException%2A> property. If neither is set, a default <xref:System.Activities.WorkflowApplicationTerminatedException> is created.\n  syntax:\n    content: public System.Activities.InArgument<Exception> Exception { get; set; }\n    return:\n      type: System.Activities.InArgument{System.Exception}\n      description: The exception.\n  overload: System.Activities.Statements.TerminateWorkflow.Exception*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.TerminateWorkflow.Execute(System.Activities.NativeActivityContext)\n  id: Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.TerminateWorkflow\n  langs:\n  - csharp\n  name: Execute(NativeActivityContext)\n  nameWithType: TerminateWorkflow.Execute(NativeActivityContext)\n  fullName: System.Activities.Statements.TerminateWorkflow.Execute(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Execute (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: To be added.\n  overload: System.Activities.Statements.TerminateWorkflow.Execute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.TerminateWorkflow.Reason\n  id: Reason\n  parent: System.Activities.Statements.TerminateWorkflow\n  langs:\n  - csharp\n  name: Reason\n  nameWithType: TerminateWorkflow.Reason\n  fullName: System.Activities.Statements.TerminateWorkflow.Reason\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: A string input argument with the reason for the workflow instance termination.\n  remarks: The exception that is passed to <xref:System.Activities.WorkflowApplication.Terminate%2A> is a <xref:System.Activities.WorkflowApplicationTerminatedException> if only Reason is set. If only <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> is set, that exception is passed to <xref:System.Activities.WorkflowApplication.Terminate%2A>. If both Reason and <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> are set, a <xref:System.Activities.WorkflowApplicationTerminatedException> is passed with the specified Reason, and <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> is set as the exception’s <xref:System.Exception.InnerException%2A> property. If neither is set, a default <xref:System.Activities.WorkflowApplicationTerminatedException> is created.\n  syntax:\n    content: public System.Activities.InArgument<string> Reason { get; set; }\n    return:\n      type: System.Activities.InArgument{System.String}\n      description: The reason for workflow termination.\n  overload: System.Activities.Statements.TerminateWorkflow.Reason*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.NativeActivity\n  isExternal: false\n  name: System.Activities.NativeActivity\n- uid: System.Activities.Statements.TerminateWorkflow.#ctor\n  parent: System.Activities.Statements.TerminateWorkflow\n  isExternal: false\n  name: TerminateWorkflow()\n  nameWithType: TerminateWorkflow.TerminateWorkflow()\n  fullName: System.Activities.Statements.TerminateWorkflow.TerminateWorkflow()\n- uid: System.Activities.Statements.TerminateWorkflow.CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.TerminateWorkflow\n  isExternal: false\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: TerminateWorkflow.CacheMetadata(NativeActivityMetadata)\n  fullName: System.Activities.Statements.TerminateWorkflow.CacheMetadata(NativeActivityMetadata)\n- uid: System.Activities.NativeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityMetadata\n  nameWithType: NativeActivityMetadata\n  fullName: System.Activities.NativeActivityMetadata\n- uid: System.Activities.Statements.TerminateWorkflow.Exception\n  parent: System.Activities.Statements.TerminateWorkflow\n  isExternal: false\n  name: Exception\n  nameWithType: TerminateWorkflow.Exception\n  fullName: System.Activities.Statements.TerminateWorkflow.Exception\n- uid: System.Activities.InArgument{System.Exception}\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<Exception>\n  nameWithType: InArgument<Exception>\n  fullName: System.Activities.InArgument<System.Exception>\n  spec.csharp:\n  - uid: System.Activities.InArgument`1\n    name: InArgument\n    nameWithType: InArgument\n    fullName: InArgument<System.Exception>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Exception\n    name: Exception\n    nameWithType: Exception\n    fullName: Exception\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.TerminateWorkflow.Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.TerminateWorkflow\n  isExternal: false\n  name: Execute(NativeActivityContext)\n  nameWithType: TerminateWorkflow.Execute(NativeActivityContext)\n  fullName: System.Activities.Statements.TerminateWorkflow.Execute(NativeActivityContext)\n- uid: System.Activities.NativeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityContext\n  nameWithType: NativeActivityContext\n  fullName: System.Activities.NativeActivityContext\n- uid: System.Activities.Statements.TerminateWorkflow.Reason\n  parent: System.Activities.Statements.TerminateWorkflow\n  isExternal: false\n  name: Reason\n  nameWithType: TerminateWorkflow.Reason\n  fullName: System.Activities.Statements.TerminateWorkflow.Reason\n- uid: System.Activities.InArgument{System.String}\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<String>\n  nameWithType: InArgument<String>\n  fullName: System.Activities.InArgument<System.String>\n  spec.csharp:\n  - uid: System.Activities.InArgument`1\n    name: InArgument\n    nameWithType: InArgument\n    fullName: InArgument<System.String>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.TerminateWorkflow.#ctor*\n  parent: System.Activities.Statements.TerminateWorkflow\n  isExternal: false\n  name: TerminateWorkflow\n  nameWithType: TerminateWorkflow.TerminateWorkflow\n- uid: System.Activities.Statements.TerminateWorkflow.CacheMetadata*\n  parent: System.Activities.Statements.TerminateWorkflow\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: TerminateWorkflow.CacheMetadata\n- uid: System.Activities.Statements.TerminateWorkflow.Exception*\n  parent: System.Activities.Statements.TerminateWorkflow\n  isExternal: false\n  name: Exception\n  nameWithType: TerminateWorkflow.Exception\n- uid: System.Activities.Statements.TerminateWorkflow.Execute*\n  parent: System.Activities.Statements.TerminateWorkflow\n  isExternal: false\n  name: Execute\n  nameWithType: TerminateWorkflow.Execute\n- uid: System.Activities.Statements.TerminateWorkflow.Reason*\n  parent: System.Activities.Statements.TerminateWorkflow\n  isExternal: false\n  name: Reason\n  nameWithType: TerminateWorkflow.Reason\n"}