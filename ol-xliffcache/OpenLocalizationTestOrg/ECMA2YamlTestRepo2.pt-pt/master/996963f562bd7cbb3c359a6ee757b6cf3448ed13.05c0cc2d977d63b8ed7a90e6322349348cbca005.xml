{"nodes":[{"pos":[684,816],"content":"Represents the exception that is thrown when an action is tried on a <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRow\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that has been deleted.","needQuote":true,"needEscape":true,"source":"Represents the exception that is thrown when an action is tried on a <xref href=\"System.Data.DataRow\"></xref> that has been deleted."},{"pos":[829,1766],"content":"To delete a <xref:System.Data.DataRow>, use the <xref:System.Data.DataRow.Delete%2A> method of a <xref:System.Data.DataRow> class. As soon as you have deleted a row, any attempts to modify it will generate the DeletedRowInaccessibleException.       The DeletedRowInaccessibleException is thrown when you use one of the following properties or methods that try to get or set the value of a deleted <xref:System.Data.DataRow>:      -   <xref:System.Data.DataRow.Item%2A> property      -   <xref:System.Data.DataRow.ItemArray%2A> property      -   <xref:System.Data.DataRow.BeginEdit%2A> method       Use the <xref:System.Data.DataRow.RowState%2A> of a <xref:System.Data.DataRow> class to determine whether a row has been deleted. If it has been deleted, you can use the <xref:System.Data.DataRow.Original%2A> method to retrieve it because deleted rows have no values available for the <xref:System.Data.DataRow.Current%2A> state.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"To delete a <xref:System.Data.DataRow>, use the <xref:System.Data.DataRow.Delete%2A> method of a <xref:System.Data.DataRow> class. As soon as you have deleted a row, any attempts to modify it will generate the DeletedRowInaccessibleException.       The DeletedRowInaccessibleException is thrown when you use one of the following properties or methods that try to get or set the value of a deleted <xref:System.Data.DataRow>:      -   <xref:System.Data.DataRow.Item%2A> property      -   <xref:System.Data.DataRow.ItemArray%2A> property      -   <xref:System.Data.DataRow.BeginEdit%2A> method       Use the <xref:System.Data.DataRow.RowState%2A> of a <xref:System.Data.DataRow> class to determine whether a row has been deleted. If it has been deleted, you can use the <xref:System.Data.DataRow.Original%2A> method to retrieve it because deleted rows have no values available for the <xref:System.Data.DataRow.Current%2A> state.","pos":[0,927],"nodes":[{"content":"To delete a &lt;xref:System.Data.DataRow&gt;, use the &lt;xref:System.Data.DataRow.Delete%2A&gt; method of a &lt;xref:System.Data.DataRow&gt; class.","pos":[0,130],"source":"To delete a <xref:System.Data.DataRow>, use the <xref:System.Data.DataRow.Delete%2A> method of a <xref:System.Data.DataRow> class."},{"content":"As soon as you have deleted a row, any attempts to modify it will generate the DeletedRowInaccessibleException.","pos":[131,242]},{"content":"The DeletedRowInaccessibleException is thrown when you use one of the following properties or methods that try to get or set the value of a deleted &lt;xref:System.Data.DataRow&gt;:      -   &lt;xref:System.Data.DataRow.Item%2A&gt; property      -   &lt;xref:System.Data.DataRow.ItemArray%2A&gt; property      -   &lt;xref:System.Data.DataRow.BeginEdit%2A&gt; method       Use the &lt;xref:System.Data.DataRow.RowState%2A&gt; of a &lt;xref:System.Data.DataRow&gt; class to determine whether a row has been deleted.","pos":[249,727],"source":"       The DeletedRowInaccessibleException is thrown when you use one of the following properties or methods that try to get or set the value of a deleted <xref:System.Data.DataRow>:      -   <xref:System.Data.DataRow.Item%2A> property      -   <xref:System.Data.DataRow.ItemArray%2A> property      -   <xref:System.Data.DataRow.BeginEdit%2A> method       Use the <xref:System.Data.DataRow.RowState%2A> of a <xref:System.Data.DataRow> class to determine whether a row has been deleted."},{"content":"If it has been deleted, you can use the &lt;xref:System.Data.DataRow.Original%2A&gt; method to retrieve it because deleted rows have no values available for the &lt;xref:System.Data.DataRow.Current%2A&gt; state.","pos":[728,927],"source":" If it has been deleted, you can use the <xref:System.Data.DataRow.Original%2A> method to retrieve it because deleted rows have no values available for the <xref:System.Data.DataRow.Current%2A> state."}]}]},{"pos":[2467,2572],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.DeletedRowInaccessibleException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.DeletedRowInaccessibleException\"></xref> class."},{"pos":[2584,2713],"content":"Use the <xref:System.Data.DataRow.RowState%2A> of a <xref:System.Data.DataRow> class to determine whether a row has been deleted.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the &lt;xref:System.Data.DataRow.RowState%2A&gt; of a &lt;xref:System.Data.DataRow&gt; class to determine whether a row has been deleted.","pos":[0,129],"source":"Use the <xref:System.Data.DataRow.RowState%2A> of a <xref:System.Data.DataRow> class to determine whether a row has been deleted."}]},{"pos":[3395,3526],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.DeletedRowInaccessibleException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified string.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.DeletedRowInaccessibleException\"></xref> class with the specified string."},{"pos":[3538,3667],"content":"Use the <xref:System.Data.DataRow.RowState%2A> of a <xref:System.Data.DataRow> class to determine whether a row has been deleted.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the &lt;xref:System.Data.DataRow.RowState%2A&gt; of a &lt;xref:System.Data.DataRow&gt; class to determine whether a row has been deleted.","pos":[0,129],"source":"Use the <xref:System.Data.DataRow.RowState%2A> of a <xref:System.Data.DataRow> class to determine whether a row has been deleted."}]},{"pos":[3815,3866],"content":"The string to display when the exception is thrown.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string to display when the exception is thrown.","pos":[0,51]}]},{"pos":[4705,4841],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.DeletedRowInaccessibleException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with serialization information.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.DeletedRowInaccessibleException\"></xref> class with serialization information."},{"pos":[5126,5190],"content":"The data that is required to serialize or deserialize an object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data that is required to serialize or deserialize an object.","pos":[0,64]}]},{"pos":[5286,5363],"content":"Description of the source and destination of the specified serialized stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Description of the source and destination of the specified serialized stream.","pos":[0,77]}]},{"pos":[6024,6235],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.DeletedRowInaccessibleException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with a specified error message and a reference to the inner exception that is the cause of this exception.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.DeletedRowInaccessibleException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception."},{"pos":[6247,6376],"content":"Use the <xref:System.Data.DataRow.RowState%2A> of a <xref:System.Data.DataRow> class to determine whether a row has been deleted.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the &lt;xref:System.Data.DataRow.RowState%2A&gt; of a &lt;xref:System.Data.DataRow&gt; class to determine whether a row has been deleted.","pos":[0,129],"source":"Use the <xref:System.Data.DataRow.RowState%2A> of a <xref:System.Data.DataRow> class to determine whether a row has been deleted."}]},{"pos":[6562,6623],"content":"The error message that explains the reason for the exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"The error message that explains the reason for the exception.","pos":[0,61]}]},{"pos":[6697,6895],"content":"The exception that is the cause of the current exception, or a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic) if no inner exception is specified.","needQuote":true,"needEscape":true,"source":"The exception that is the cause of the current exception, or a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic) if no inner exception is specified."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.DeletedRowInaccessibleException\n  id: DeletedRowInaccessibleException\n  children:\n  - System.Data.DeletedRowInaccessibleException.#ctor\n  - System.Data.DeletedRowInaccessibleException.#ctor(System.String)\n  - System.Data.DeletedRowInaccessibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Data.DeletedRowInaccessibleException.#ctor(System.String,System.Exception)\n  langs:\n  - csharp\n  name: DeletedRowInaccessibleException\n  nameWithType: DeletedRowInaccessibleException\n  fullName: System.Data.DeletedRowInaccessibleException\n  type: Class\n  summary: Represents the exception that is thrown when an action is tried on a <xref href=\"System.Data.DataRow\"></xref> that has been deleted.\n  remarks: \"To delete a <xref:System.Data.DataRow>, use the <xref:System.Data.DataRow.Delete%2A> method of a <xref:System.Data.DataRow> class. As soon as you have deleted a row, any attempts to modify it will generate the DeletedRowInaccessibleException.  \\n  \\n The DeletedRowInaccessibleException is thrown when you use one of the following properties or methods that try to get or set the value of a deleted <xref:System.Data.DataRow>:  \\n  \\n-   <xref:System.Data.DataRow.Item%2A> property  \\n  \\n-   <xref:System.Data.DataRow.ItemArray%2A> property  \\n  \\n-   <xref:System.Data.DataRow.BeginEdit%2A> method  \\n  \\n Use the <xref:System.Data.DataRow.RowState%2A> of a <xref:System.Data.DataRow> class to determine whether a row has been deleted. If it has been deleted, you can use the <xref:System.Data.DataRow.Original%2A> method to retrieve it because deleted rows have no values available for the <xref:System.Data.DataRow.Current%2A> state.\"\n  syntax:\n    content: 'public class DeletedRowInaccessibleException : System.Data.DataException'\n  inheritance:\n  - System.Exception\n  - System.SystemException\n  - System.Data.DataException\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Data.DeletedRowInaccessibleException.#ctor\n  id: '#ctor'\n  parent: System.Data.DeletedRowInaccessibleException\n  langs:\n  - csharp\n  name: DeletedRowInaccessibleException()\n  nameWithType: DeletedRowInaccessibleException.DeletedRowInaccessibleException()\n  fullName: System.Data.DeletedRowInaccessibleException.DeletedRowInaccessibleException()\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Initializes a new instance of the <xref href=\"System.Data.DeletedRowInaccessibleException\"></xref> class.\n  remarks: Use the <xref:System.Data.DataRow.RowState%2A> of a <xref:System.Data.DataRow> class to determine whether a row has been deleted.\n  syntax:\n    content: public DeletedRowInaccessibleException ();\n    parameters: []\n  overload: System.Data.DeletedRowInaccessibleException.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DeletedRowInaccessibleException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Data.DeletedRowInaccessibleException\n  langs:\n  - csharp\n  name: DeletedRowInaccessibleException(String)\n  nameWithType: DeletedRowInaccessibleException.DeletedRowInaccessibleException(String)\n  fullName: System.Data.DeletedRowInaccessibleException.DeletedRowInaccessibleException(String)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Initializes a new instance of the <xref href=\"System.Data.DeletedRowInaccessibleException\"></xref> class with the specified string.\n  remarks: Use the <xref:System.Data.DataRow.RowState%2A> of a <xref:System.Data.DataRow> class to determine whether a row has been deleted.\n  syntax:\n    content: public DeletedRowInaccessibleException (string s);\n    parameters:\n    - id: s\n      type: System.String\n      description: The string to display when the exception is thrown.\n  overload: System.Data.DeletedRowInaccessibleException.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DeletedRowInaccessibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.Data.DeletedRowInaccessibleException\n  langs:\n  - csharp\n  name: DeletedRowInaccessibleException(SerializationInfo,StreamingContext)\n  nameWithType: DeletedRowInaccessibleException.DeletedRowInaccessibleException(SerializationInfo,StreamingContext)\n  fullName: System.Data.DeletedRowInaccessibleException.DeletedRowInaccessibleException(SerializationInfo,StreamingContext)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Initializes a new instance of the <xref href=\"System.Data.DeletedRowInaccessibleException\"></xref> class with serialization information.\n  syntax:\n    content: protected DeletedRowInaccessibleException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The data that is required to serialize or deserialize an object.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: Description of the source and destination of the specified serialized stream.\n  overload: System.Data.DeletedRowInaccessibleException.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DeletedRowInaccessibleException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.Data.DeletedRowInaccessibleException\n  langs:\n  - csharp\n  name: DeletedRowInaccessibleException(String,Exception)\n  nameWithType: DeletedRowInaccessibleException.DeletedRowInaccessibleException(String,Exception)\n  fullName: System.Data.DeletedRowInaccessibleException.DeletedRowInaccessibleException(String,Exception)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Initializes a new instance of the <xref href=\"System.Data.DeletedRowInaccessibleException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.\n  remarks: Use the <xref:System.Data.DataRow.RowState%2A> of a <xref:System.Data.DataRow> class to determine whether a row has been deleted.\n  syntax:\n    content: public DeletedRowInaccessibleException (string message, Exception innerException);\n    parameters:\n    - id: message\n      type: System.String\n      description: The error message that explains the reason for the exception.\n    - id: innerException\n      type: System.Exception\n      description: The exception that is the cause of the current exception, or a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic) if no inner exception is specified.\n  overload: System.Data.DeletedRowInaccessibleException.#ctor*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Data.DataException\n  isExternal: false\n  name: System.Data.DataException\n- uid: System.Data.DeletedRowInaccessibleException.#ctor\n  parent: System.Data.DeletedRowInaccessibleException\n  isExternal: false\n  name: DeletedRowInaccessibleException()\n  nameWithType: DeletedRowInaccessibleException.DeletedRowInaccessibleException()\n  fullName: System.Data.DeletedRowInaccessibleException.DeletedRowInaccessibleException()\n- uid: System.Data.DeletedRowInaccessibleException.#ctor(System.String)\n  parent: System.Data.DeletedRowInaccessibleException\n  isExternal: false\n  name: DeletedRowInaccessibleException(String)\n  nameWithType: DeletedRowInaccessibleException.DeletedRowInaccessibleException(String)\n  fullName: System.Data.DeletedRowInaccessibleException.DeletedRowInaccessibleException(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.DeletedRowInaccessibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Data.DeletedRowInaccessibleException\n  isExternal: false\n  name: DeletedRowInaccessibleException(SerializationInfo,StreamingContext)\n  nameWithType: DeletedRowInaccessibleException.DeletedRowInaccessibleException(SerializationInfo,StreamingContext)\n  fullName: System.Data.DeletedRowInaccessibleException.DeletedRowInaccessibleException(SerializationInfo,StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: true\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Data.DeletedRowInaccessibleException.#ctor(System.String,System.Exception)\n  parent: System.Data.DeletedRowInaccessibleException\n  isExternal: false\n  name: DeletedRowInaccessibleException(String,Exception)\n  nameWithType: DeletedRowInaccessibleException.DeletedRowInaccessibleException(String,Exception)\n  fullName: System.Data.DeletedRowInaccessibleException.DeletedRowInaccessibleException(String,Exception)\n- uid: System.Exception\n  parent: System\n  isExternal: true\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Data.DeletedRowInaccessibleException.#ctor*\n  parent: System.Data.DeletedRowInaccessibleException\n  isExternal: false\n  name: DeletedRowInaccessibleException\n  nameWithType: DeletedRowInaccessibleException.DeletedRowInaccessibleException\n"}