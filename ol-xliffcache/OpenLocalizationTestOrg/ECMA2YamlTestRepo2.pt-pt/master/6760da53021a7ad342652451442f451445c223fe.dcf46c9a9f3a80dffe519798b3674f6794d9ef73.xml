{"nodes":[{"pos":[545,704],"content":"Declaratively instructs the .NET Framework to perform string validation on a configuration property using a regular expression. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Declaratively instructs the .NET Framework to perform string validation on a configuration property using a regular expression. This class cannot be inherited.","pos":[0,159],"nodes":[{"content":"Declaratively instructs the .NET Framework to perform string validation on a configuration property using a regular expression.","pos":[0,127]},{"content":"This class cannot be inherited.","pos":[128,159]}]}]},{"pos":[717,1058],"content":"You use the RegexStringValidatorAttribute to decorate a configuration property, which will instruct the .NET Framework to validate the property using the <xref:System.Configuration.RegexStringValidator> and pass to it the value of the decorating parameters.       You may apply RegexStringValidatorAttribute objects to property types only.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You use the RegexStringValidatorAttribute to decorate a configuration property, which will instruct the .NET Framework to validate the property using the <xref:System.Configuration.RegexStringValidator> and pass to it the value of the decorating parameters.       You may apply RegexStringValidatorAttribute objects to property types only.","pos":[0,339],"nodes":[{"content":"You use the RegexStringValidatorAttribute to decorate a configuration property, which will instruct the .NET Framework to validate the property using the &lt;xref:System.Configuration.RegexStringValidator&gt; and pass to it the value of the decorating parameters.","pos":[0,257],"source":"You use the RegexStringValidatorAttribute to decorate a configuration property, which will instruct the .NET Framework to validate the property using the <xref:System.Configuration.RegexStringValidator> and pass to it the value of the decorating parameters."},{"content":"You may apply RegexStringValidatorAttribute objects to property types only.","pos":[264,339]}]}]},{"pos":[2469,2582],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.RegexStringValidatorAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Configuration.RegexStringValidatorAttribute\"></xref> object."},{"pos":[2595,2916],"content":"The `regex` parameter contains the regular expression pattern that a string must match before it can be assigned to the decorated configuration-element property.       You use this constructor in the attributed model to ensure that the string value assigned to the related property contains only the allowed characters.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`regex`</ph> parameter contains the regular expression pattern that a string must match before it can be assigned to the decorated configuration-element property.","pos":[0,161],"source":"The `regex` parameter contains the regular expression pattern that a string must match before it can be assigned to the decorated configuration-element property."},{"content":"You use this constructor in the attributed model to ensure that the string value assigned to the related property contains only the allowed characters.","pos":[168,319]}]},{"pos":[3441,3493],"content":"The string to use for regular expression validation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string to use for regular expression validation.","pos":[0,52]}]},{"pos":[3997,4059],"content":"Gets the string used to perform regular-expression validation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the string used to perform regular-expression validation.","pos":[0,62]}]},{"pos":[4528,4656],"content":"The string containing the regular expression used to filter the string assigned to the decorated configuration-element property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string containing the regular expression used to filter the string assigned to the decorated configuration-element property.","pos":[0,128]}]},{"pos":[5220,5313],"content":"Gets an instance of the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.RegexStringValidator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Gets an instance of the <xref href=\"System.Configuration.RegexStringValidator\"></xref> class."},{"pos":[5325,5471],"content":"You use the ValidatorInstance property to perform string validation by calling its <xref:System.Configuration.StringValidator.Validate%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"You use the ValidatorInstance property to perform string validation by calling its &lt;xref:System.Configuration.StringValidator.Validate%2A&gt; method.","pos":[0,146],"source":"You use the ValidatorInstance property to perform string validation by calling its <xref:System.Configuration.StringValidator.Validate%2A> method."}]},{"pos":[6032,6124],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationValidatorBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> validator instance.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Configuration.ConfigurationValidatorBase\"></xref> validator instance."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.RegexStringValidatorAttribute\n  id: RegexStringValidatorAttribute\n  children:\n  - System.Configuration.RegexStringValidatorAttribute.#ctor(System.String)\n  - System.Configuration.RegexStringValidatorAttribute.Regex\n  - System.Configuration.RegexStringValidatorAttribute.ValidatorInstance\n  langs:\n  - csharp\n  name: RegexStringValidatorAttribute\n  nameWithType: RegexStringValidatorAttribute\n  fullName: System.Configuration.RegexStringValidatorAttribute\n  type: Class\n  summary: Declaratively instructs the .NET Framework to perform string validation on a configuration property using a regular expression. This class cannot be inherited.\n  remarks: \"You use the RegexStringValidatorAttribute to decorate a configuration property, which will instruct the .NET Framework to validate the property using the <xref:System.Configuration.RegexStringValidator> and pass to it the value of the decorating parameters.  \\n  \\n You may apply RegexStringValidatorAttribute objects to property types only.\"\n  example:\n  - \"The following example shows how to decorate the properties of a custom <xref:System.Configuration.ConfigurationSection> object using the RegexStringValidatorAttribute object.  \\n  \\n [!code-vb[System.Configuration.ConfigurationValidatorAttributes#4](~/add/codesnippet/visualbasic/t-system.configuration.r_2_1.vb)]\\n [!code-cs[System.Configuration.ConfigurationValidatorAttributes#4](~/add/codesnippet/csharp/t-system.configuration.r_2_1.cs)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Property)]\n\n      public sealed class RegexStringValidatorAttribute : System.Configuration.ConfigurationValidatorAttribute\n  inheritance:\n  - System.Attribute\n  - System.Configuration.ConfigurationValidatorAttribute\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationValidatorAttribute.ValidatorType\n  platform:\n  - net462\n- uid: System.Configuration.RegexStringValidatorAttribute.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Configuration.RegexStringValidatorAttribute\n  langs:\n  - csharp\n  name: RegexStringValidatorAttribute(String)\n  nameWithType: RegexStringValidatorAttribute.RegexStringValidatorAttribute(String)\n  fullName: System.Configuration.RegexStringValidatorAttribute.RegexStringValidatorAttribute(String)\n  type: Constructor\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.RegexStringValidatorAttribute\"></xref> object.\n  remarks: \"The `regex` parameter contains the regular expression pattern that a string must match before it can be assigned to the decorated configuration-element property.  \\n  \\n You use this constructor in the attributed model to ensure that the string value assigned to the related property contains only the allowed characters.\"\n  example:\n  - \"The following example shows how to use the RegexStringValidatorAttribute constructor.  \\n  \\n [!code-vb[System.Configuration.ConfigurationValidatorAttributes#4](~/add/codesnippet/visualbasic/m-system.configuration.r_0_1.vb)]\\n [!code-cs[System.Configuration.ConfigurationValidatorAttributes#4](~/add/codesnippet/csharp/m-system.configuration.r_0_1.cs)]\"\n  syntax:\n    content: public RegexStringValidatorAttribute (string regex);\n    parameters:\n    - id: regex\n      type: System.String\n      description: The string to use for regular expression validation.\n  overload: System.Configuration.RegexStringValidatorAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.RegexStringValidatorAttribute.Regex\n  id: Regex\n  parent: System.Configuration.RegexStringValidatorAttribute\n  langs:\n  - csharp\n  name: Regex\n  nameWithType: RegexStringValidatorAttribute.Regex\n  fullName: System.Configuration.RegexStringValidatorAttribute.Regex\n  type: Property\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Gets the string used to perform regular-expression validation.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the Regex property.  \\n  \\n [!code-vb[System.Configuration.ConfigurationValidatorAttributes#16](~/add/codesnippet/visualbasic/p-system.configuration.r_1_1.vb)]\\n [!code-cs[System.Configuration.ConfigurationValidatorAttributes#16](~/add/codesnippet/csharp/p-system.configuration.r_1_1.cs)]\"\n  syntax:\n    content: public string Regex { get; }\n    return:\n      type: System.String\n      description: The string containing the regular expression used to filter the string assigned to the decorated configuration-element property.\n  overload: System.Configuration.RegexStringValidatorAttribute.Regex*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.RegexStringValidatorAttribute.ValidatorInstance\n  id: ValidatorInstance\n  parent: System.Configuration.RegexStringValidatorAttribute\n  langs:\n  - csharp\n  name: ValidatorInstance\n  nameWithType: RegexStringValidatorAttribute.ValidatorInstance\n  fullName: System.Configuration.RegexStringValidatorAttribute.ValidatorInstance\n  type: Property\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Gets an instance of the <xref href=\"System.Configuration.RegexStringValidator\"></xref> class.\n  remarks: You use the ValidatorInstance property to perform string validation by calling its <xref:System.Configuration.StringValidator.Validate%2A> method.\n  example:\n  - \"The following example shows how to use the ValidatorInstance method.  \\n  \\n [!code-vb[System.Configuration.ConfigurationValidatorAttributes#15](~/add/codesnippet/visualbasic/p-system.configuration.r_0_1.vb)]\\n [!code-cs[System.Configuration.ConfigurationValidatorAttributes#15](~/add/codesnippet/csharp/p-system.configuration.r_0_1.cs)]\"\n  syntax:\n    content: public override System.Configuration.ConfigurationValidatorBase ValidatorInstance { get; }\n    return:\n      type: System.Configuration.ConfigurationValidatorBase\n      description: The <xref href=\"System.Configuration.ConfigurationValidatorBase\"></xref> validator instance.\n  overload: System.Configuration.RegexStringValidatorAttribute.ValidatorInstance*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationValidatorAttribute\n  isExternal: false\n  name: System.Configuration.ConfigurationValidatorAttribute\n- uid: System.Configuration.RegexStringValidatorAttribute.#ctor(System.String)\n  parent: System.Configuration.RegexStringValidatorAttribute\n  isExternal: false\n  name: RegexStringValidatorAttribute(String)\n  nameWithType: RegexStringValidatorAttribute.RegexStringValidatorAttribute(String)\n  fullName: System.Configuration.RegexStringValidatorAttribute.RegexStringValidatorAttribute(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Configuration.RegexStringValidatorAttribute.Regex\n  parent: System.Configuration.RegexStringValidatorAttribute\n  isExternal: false\n  name: Regex\n  nameWithType: RegexStringValidatorAttribute.Regex\n  fullName: System.Configuration.RegexStringValidatorAttribute.Regex\n- uid: System.Configuration.RegexStringValidatorAttribute.ValidatorInstance\n  parent: System.Configuration.RegexStringValidatorAttribute\n  isExternal: false\n  name: ValidatorInstance\n  nameWithType: RegexStringValidatorAttribute.ValidatorInstance\n  fullName: System.Configuration.RegexStringValidatorAttribute.ValidatorInstance\n- uid: System.Configuration.ConfigurationValidatorBase\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationValidatorBase\n  nameWithType: ConfigurationValidatorBase\n  fullName: System.Configuration.ConfigurationValidatorBase\n- uid: System.Configuration.RegexStringValidatorAttribute.#ctor*\n  parent: System.Configuration.RegexStringValidatorAttribute\n  isExternal: false\n  name: RegexStringValidatorAttribute\n  nameWithType: RegexStringValidatorAttribute.RegexStringValidatorAttribute\n- uid: System.Configuration.RegexStringValidatorAttribute.Regex*\n  parent: System.Configuration.RegexStringValidatorAttribute\n  isExternal: false\n  name: Regex\n  nameWithType: RegexStringValidatorAttribute.Regex\n- uid: System.Configuration.RegexStringValidatorAttribute.ValidatorInstance*\n  parent: System.Configuration.RegexStringValidatorAttribute\n  isExternal: false\n  name: ValidatorInstance\n  nameWithType: RegexStringValidatorAttribute.ValidatorInstance\n"}