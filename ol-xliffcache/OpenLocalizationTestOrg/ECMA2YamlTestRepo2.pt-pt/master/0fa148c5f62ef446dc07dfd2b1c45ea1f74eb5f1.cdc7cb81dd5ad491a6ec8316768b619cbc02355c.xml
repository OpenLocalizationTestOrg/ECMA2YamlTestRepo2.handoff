{"nodes":[{"pos":[479,555],"content":"Abstract class that, when implemented, describes a change to the model tree.","needQuote":true,"needEscape":true,"nodes":[{"content":"Abstract class that, when implemented, describes a change to the model tree.","pos":[0,76]}]},{"pos":[567,678],"content":"This class is used by the undo/redo infrastructure to keep track of the changes made during an editing episode.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This class is used by the undo/redo infrastructure to keep track of the changes made during an editing episode.","pos":[0,111]}]},{"pos":[1216,1317],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.Model.Change\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.Activities.Presentation.Model.Change\"></xref> class."},{"pos":[1863,1943],"content":"When implemented in a derived class, applies the change to the current instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a derived class, applies the change to the current instance.","pos":[0,80]}]},{"pos":[2075,2261],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the change was applied to the current instance; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the change was applied to the current instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[2770,2840],"content":"When implemented in a derived class, gets a description of the change.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a derived class, gets a description of the change.","pos":[0,70]}]},{"pos":[2965,3038],"content":"Returns a <xref:System.String> that contains a description of the change.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a &lt;xref:System.String&gt; that contains a description of the change.","pos":[0,73],"source":"Returns a <xref:System.String> that contains a description of the change."}]},{"pos":[3552,3625],"content":"When implemented in a derived class, retrieves the inverse of the change.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a derived class, retrieves the inverse of the change.","pos":[0,73]}]},{"pos":[3830,3955],"content":"Returns a <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.Model.Change\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the inverse of the current instance.","needQuote":true,"needEscape":true,"source":"Returns a <xref href=\"System.Activities.Presentation.Model.Change\"></xref> that contains the inverse of the current instance."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Presentation.Model.Change\n  id: Change\n  children:\n  - System.Activities.Presentation.Model.Change.#ctor\n  - System.Activities.Presentation.Model.Change.Apply\n  - System.Activities.Presentation.Model.Change.Description\n  - System.Activities.Presentation.Model.Change.GetInverse\n  langs:\n  - csharp\n  name: Change\n  nameWithType: Change\n  fullName: System.Activities.Presentation.Model.Change\n  type: Class\n  summary: Abstract class that, when implemented, describes a change to the model tree.\n  remarks: This class is used by the undo/redo infrastructure to keep track of the changes made during an editing episode.\n  syntax:\n    content: public abstract class Change\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.Change.#ctor\n  id: '#ctor'\n  parent: System.Activities.Presentation.Model.Change\n  langs:\n  - csharp\n  name: Change()\n  nameWithType: Change.Change()\n  fullName: System.Activities.Presentation.Model.Change.Change()\n  type: Constructor\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Creates a new instance of the <xref href=\"System.Activities.Presentation.Model.Change\"></xref> class.\n  syntax:\n    content: protected Change ();\n    parameters: []\n  overload: System.Activities.Presentation.Model.Change.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.Change.Apply\n  id: Apply\n  parent: System.Activities.Presentation.Model.Change\n  langs:\n  - csharp\n  name: Apply()\n  nameWithType: Change.Apply()\n  fullName: System.Activities.Presentation.Model.Change.Apply()\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: When implemented in a derived class, applies the change to the current instance.\n  syntax:\n    content: public abstract bool Apply ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the change was applied to the current instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Presentation.Model.Change.Apply*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.Change.Description\n  id: Description\n  parent: System.Activities.Presentation.Model.Change\n  langs:\n  - csharp\n  name: Description\n  nameWithType: Change.Description\n  fullName: System.Activities.Presentation.Model.Change.Description\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: When implemented in a derived class, gets a description of the change.\n  syntax:\n    content: public abstract string Description { get; }\n    return:\n      type: System.String\n      description: Returns a <xref:System.String> that contains a description of the change.\n  overload: System.Activities.Presentation.Model.Change.Description*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.Change.GetInverse\n  id: GetInverse\n  parent: System.Activities.Presentation.Model.Change\n  langs:\n  - csharp\n  name: GetInverse()\n  nameWithType: Change.GetInverse()\n  fullName: System.Activities.Presentation.Model.Change.GetInverse()\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: When implemented in a derived class, retrieves the inverse of the change.\n  syntax:\n    content: public abstract System.Activities.Presentation.Model.Change GetInverse ();\n    parameters: []\n    return:\n      type: System.Activities.Presentation.Model.Change\n      description: Returns a <xref href=\"System.Activities.Presentation.Model.Change\"></xref> that contains the inverse of the current instance.\n  overload: System.Activities.Presentation.Model.Change.GetInverse*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Activities.Presentation.Model.Change.#ctor\n  parent: System.Activities.Presentation.Model.Change\n  isExternal: false\n  name: Change()\n  nameWithType: Change.Change()\n  fullName: System.Activities.Presentation.Model.Change.Change()\n- uid: System.Activities.Presentation.Model.Change.Apply\n  parent: System.Activities.Presentation.Model.Change\n  isExternal: false\n  name: Apply()\n  nameWithType: Change.Apply()\n  fullName: System.Activities.Presentation.Model.Change.Apply()\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.Presentation.Model.Change.Description\n  parent: System.Activities.Presentation.Model.Change\n  isExternal: false\n  name: Description\n  nameWithType: Change.Description\n  fullName: System.Activities.Presentation.Model.Change.Description\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.Presentation.Model.Change.GetInverse\n  parent: System.Activities.Presentation.Model.Change\n  isExternal: false\n  name: GetInverse()\n  nameWithType: Change.GetInverse()\n  fullName: System.Activities.Presentation.Model.Change.GetInverse()\n- uid: System.Activities.Presentation.Model.Change\n  parent: System.Activities.Presentation.Model\n  isExternal: false\n  name: Change\n  nameWithType: Change\n  fullName: System.Activities.Presentation.Model.Change\n- uid: System.Activities.Presentation.Model.Change.#ctor*\n  parent: System.Activities.Presentation.Model.Change\n  isExternal: false\n  name: Change\n  nameWithType: Change.Change\n- uid: System.Activities.Presentation.Model.Change.Apply*\n  parent: System.Activities.Presentation.Model.Change\n  isExternal: false\n  name: Apply\n  nameWithType: Change.Apply\n- uid: System.Activities.Presentation.Model.Change.Description*\n  parent: System.Activities.Presentation.Model.Change\n  isExternal: false\n  name: Description\n  nameWithType: Change.Description\n- uid: System.Activities.Presentation.Model.Change.GetInverse*\n  parent: System.Activities.Presentation.Model.Change\n  isExternal: false\n  name: GetInverse\n  nameWithType: Change.GetInverse\n"}