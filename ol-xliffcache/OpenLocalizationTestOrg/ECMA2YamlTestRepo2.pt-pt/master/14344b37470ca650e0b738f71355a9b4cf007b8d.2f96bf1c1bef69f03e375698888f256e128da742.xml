{"nodes":[{"pos":[506,581],"content":"Provides a simple on/off switch that controls debugging and tracing output.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a simple on/off switch that controls debugging and tracing output.","pos":[0,75]}]},{"pos":[594,4328],"content":"You can use a Boolean trace switch to enable or disable messages based on their importance. Use the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> property to get the current value of the switch.       You can enable or disable a BooleanSwitch through the application configuration file and then use the configured BooleanSwitch value in your application. Alternately, you can create a BooleanSwitch in your code and set the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> property directly to instrument a specific section of code.       To configure a BooleanSwitch, edit the configuration file that corresponds to the name of your application. Within this file, you can add or remove a switch, set a switch's value, or clear all the switches previously set by the application. The configuration file should be formatted like the following example.      ```   <configuration>     <system.diagnostics>       <switches>         <add name=\"mySwitch\" value=\"1\"/>       </switches>     </system.diagnostics>   </configuration>   ```       This example configuration section defines a BooleanSwitch with the <xref:System.Diagnostics.Switch.DisplayName%2A> property set to `mySwitch` and the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> value set to `true`. Within your application, you can use the configured switch value by creating a BooleanSwitch with the same name, as shown in the following code example.       [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#2](~/add/codesnippet/cpp/t-system.diagnostics.boo_1.cpp)]  [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#2](~/add/codesnippet/visualbasic/t-system.diagnostics.boo_1.vb)]  [!code-cs[Classic BooleanSwitch.BooleanSwitch Example#2](~/add/codesnippet/csharp/t-system.diagnostics.boo_1.cs)]       By default, the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> property is set using the value specified in the configuration file. Configure the switch with a value of 0 to set the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> property to `false`; configure the switch with a nonzero value to set the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> property to `true`. If the BooleanSwitch constructor cannot find initial switch settings in the configuration file, the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> property of the new switch is set to `false` by default.       You must enable tracing or debugging to use a switch. The following syntax is compiler specific. If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.      -   To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or you can add `#define DEBUG` to the top of your file. In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.      -   To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file. In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.      > [!NOTE] >  These debug and trace compiler switches are not required when using the BooleanSwitch class in isolation. They are only required in conjunction with <xref:System.Diagnostics.Trace> or <xref:System.Diagnostics.Debug> methods that are conditionally compiled.       For more information on instrumenting your application, see <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace>. For more information about configuring and using trace switches, see [Trace Switches](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  To improve performance, you can make BooleanSwitch members `static` in your class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can use a Boolean trace switch to enable or disable messages based on their importance.","pos":[0,91]},{"content":"Use the &lt;xref:System.Diagnostics.BooleanSwitch.Enabled%2A&gt; property to get the current value of the switch.","pos":[92,199],"source":" Use the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> property to get the current value of the switch."},{"content":"You can enable or disable a BooleanSwitch through the application configuration file and then use the configured BooleanSwitch value in your application.","pos":[206,359]},{"content":"Alternately, you can create a BooleanSwitch in your code and set the &lt;xref:System.Diagnostics.BooleanSwitch.Enabled%2A&gt; property directly to instrument a specific section of code.","pos":[360,539],"source":" Alternately, you can create a BooleanSwitch in your code and set the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> property directly to instrument a specific section of code."},{"content":"To configure a BooleanSwitch, edit the configuration file that corresponds to the name of your application.","pos":[546,653]},{"content":"Within this file, you can add or remove a switch, set a switch's value, or clear all the switches previously set by the application.","pos":[654,786]},{"content":"The configuration file should be formatted like the following example.","pos":[787,857]},{"content":"<ph id=\"ph1\">```   &lt;configuration&gt;     &lt;system.diagnostics&gt;       &lt;switches&gt;         &lt;add name=\"mySwitch\" value=\"1\"/&gt;       &lt;/switches&gt;     &lt;/system.diagnostics&gt;   &lt;/configuration&gt;   ```</ph>       This example configuration section defines a BooleanSwitch with the &lt;xref:System.Diagnostics.Switch.DisplayName%2A&gt; property set to <ph id=\"ph2\">`mySwitch`</ph> and the &lt;xref:System.Diagnostics.BooleanSwitch.Enabled%2A&gt; value set to <ph id=\"ph3\">`true`</ph>.","pos":[863,1265],"source":"```   <configuration>     <system.diagnostics>       <switches>         <add name=\"mySwitch\" value=\"1\"/>       </switches>     </system.diagnostics>   </configuration>   ```       This example configuration section defines a BooleanSwitch with the <xref:System.Diagnostics.Switch.DisplayName%2A> property set to `mySwitch` and the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> value set to `true`."},{"content":"Within your application, you can use the configured switch value by creating a BooleanSwitch with the same name, as shown in the following code example.","pos":[1266,1418]},{"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>Classic BooleanSwitch.BooleanSwitch Example#2<ept id=\"p2\">](~/add/codesnippet/cpp/t-system.diagnostics.boo_1.cpp)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>Classic BooleanSwitch.BooleanSwitch Example#2<ept id=\"p4\">](~/add/codesnippet/visualbasic/t-system.diagnostics.boo_1.vb)</ept><ept id=\"p3\">]</ept>  <bpt id=\"p5\">[!code-cs</bpt><bpt id=\"p6\">[</bpt>Classic BooleanSwitch.BooleanSwitch Example#2<ept id=\"p6\">](~/add/codesnippet/csharp/t-system.diagnostics.boo_1.cs)</ept><ept id=\"p5\">]</ept>       By default, the &lt;xref:System.Diagnostics.BooleanSwitch.Enabled%2A&gt; property is set using the value specified in the configuration file.","pos":[1425,1914],"source":"[!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#2](~/add/codesnippet/cpp/t-system.diagnostics.boo_1.cpp)]  [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#2](~/add/codesnippet/visualbasic/t-system.diagnostics.boo_1.vb)]  [!code-cs[Classic BooleanSwitch.BooleanSwitch Example#2](~/add/codesnippet/csharp/t-system.diagnostics.boo_1.cs)]       By default, the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> property is set using the value specified in the configuration file."},{"content":"Configure the switch with a value of 0 to set the &lt;xref:System.Diagnostics.BooleanSwitch.Enabled%2A&gt; property to <ph id=\"ph1\">`false`</ph>; configure the switch with a nonzero value to set the &lt;xref:System.Diagnostics.BooleanSwitch.Enabled%2A&gt; property to <ph id=\"ph2\">`true`</ph>.","pos":[1915,2160],"source":" Configure the switch with a value of 0 to set the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> property to `false`; configure the switch with a nonzero value to set the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> property to `true`."},{"content":"If the BooleanSwitch constructor cannot find initial switch settings in the configuration file, the &lt;xref:System.Diagnostics.BooleanSwitch.Enabled%2A&gt; property of the new switch is set to <ph id=\"ph1\">`false`</ph> by default.","pos":[2161,2368],"source":" If the BooleanSwitch constructor cannot find initial switch settings in the configuration file, the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> property of the new switch is set to `false` by default."},{"content":"You must enable tracing or debugging to use a switch.","pos":[2375,2428]},{"content":"The following syntax is compiler specific.","pos":[2429,2471]},{"content":"If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.","pos":[2472,2569]},{"content":"-   To enable debugging in C#, add the <ph id=\"ph1\">`/d:DEBUG`</ph> flag to the compiler command line when you compile your code, or you can add <ph id=\"ph2\">`#define DEBUG`</ph> to the top of your file.","pos":[2575,2742],"source":"      -   To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or you can add `#define DEBUG` to the top of your file."},{"content":"In Visual Basic, add the <ph id=\"ph1\">`/d:DEBUG=True`</ph> flag to the compiler command line.","pos":[2743,2818],"source":" In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line."},{"content":"-   To enable tracing in C#, add the <ph id=\"ph1\">`/d:TRACE`</ph> flag to the compiler command line when you compile your code, or add <ph id=\"ph2\">`#define TRACE`</ph> to the top of your file.","pos":[2824,2981],"source":"      -   To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file."},{"content":"In Visual Basic, add the <ph id=\"ph1\">`/d:TRACE=True`</ph> flag to the compiler command line.","pos":[2982,3057],"source":" In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  These debug and trace compiler switches are not required when using the BooleanSwitch class in isolation.","pos":[3063,3181],"source":"      > [!NOTE] >  These debug and trace compiler switches are not required when using the BooleanSwitch class in isolation."},{"content":"They are only required in conjunction with &lt;xref:System.Diagnostics.Trace&gt; or &lt;xref:System.Diagnostics.Debug&gt; methods that are conditionally compiled.","pos":[3182,3332],"source":" They are only required in conjunction with <xref:System.Diagnostics.Trace> or <xref:System.Diagnostics.Debug> methods that are conditionally compiled."},{"content":"For more information on instrumenting your application, see &lt;xref:System.Diagnostics.Debug&gt; and &lt;xref:System.Diagnostics.Trace&gt;.","pos":[3339,3467],"source":"       For more information on instrumenting your application, see <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace>."},{"content":"For more information about configuring and using trace switches, see <bpt id=\"p1\">[</bpt>Trace Switches<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[3468,3593],"source":" For more information about configuring and using trace switches, see [Trace Switches](~/add/includes/ajax-current-ext-md.md)."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  To improve performance, you can make BooleanSwitch members <ph id=\"ph2\">`static`</ph> in your class.","pos":[3599,3694],"source":"      > [!NOTE] >  To improve performance, you can make BooleanSwitch members `static` in your class."}]},{"pos":[5998,6140],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.BooleanSwitch\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified display name and description.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Diagnostics.BooleanSwitch\"></xref> class with the specified display name and description."},{"pos":[6153,7170],"content":"When you create a <xref:System.Diagnostics.BooleanSwitch>, the `displayName` parameter is used to find initial switch settings. If the constructor cannot find initial settings, the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> property is set to `false` (disabled).       To set the level of your <xref:System.Diagnostics.BooleanSwitch>, edit the configuration file corresponding to the name of your application. Within this file, you can add a switch and set its value, remove a switch, or clear all switches previously set by the application. The configuration file should be formatted like the following example:      ```   <configuration>       <system.diagnostics>          <switches>             <add name=\"mySwitch\" value=\"10\" />             <add name=\"myNewSwitch\" value=\"20\" />             <remove name=\"mySwitch\" />             <clear/>          </switches>       </system.diagnostics>    </configuration>   ```      > [!NOTE] >  The switches you created should be `static`.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When you create a &lt;xref:System.Diagnostics.BooleanSwitch&gt;, the <ph id=\"ph1\">`displayName`</ph> parameter is used to find initial switch settings.","pos":[0,127],"source":"When you create a <xref:System.Diagnostics.BooleanSwitch>, the `displayName` parameter is used to find initial switch settings."},{"content":"If the constructor cannot find initial settings, the &lt;xref:System.Diagnostics.BooleanSwitch.Enabled%2A&gt; property is set to <ph id=\"ph1\">`false`</ph> (disabled).","pos":[128,270],"source":" If the constructor cannot find initial settings, the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> property is set to `false` (disabled)."},{"content":"To set the level of your &lt;xref:System.Diagnostics.BooleanSwitch&gt;, edit the configuration file corresponding to the name of your application.","pos":[277,417],"source":"       To set the level of your <xref:System.Diagnostics.BooleanSwitch>, edit the configuration file corresponding to the name of your application."},{"content":"Within this file, you can add a switch and set its value, remove a switch, or clear all switches previously set by the application.","pos":[418,549]},{"content":"The configuration file should be formatted like the following example:      <ph id=\"ph1\">```   &lt;configuration&gt;       &lt;system.diagnostics&gt;          &lt;switches&gt;             &lt;add name=\"mySwitch\" value=\"10\" /&gt;             &lt;add name=\"myNewSwitch\" value=\"20\" /&gt;             &lt;remove name=\"mySwitch\" /&gt;             &lt;clear/&gt;          &lt;/switches&gt;       &lt;/system.diagnostics&gt;    &lt;/configuration&gt;   ```</ph><ph id=\"ph2\">      &gt; </ph><ph id=\"ph3\">[!NOTE]</ph> &gt;  The switches you created should be <ph id=\"ph4\">`static`</ph>.","pos":[550,989],"source":" The configuration file should be formatted like the following example:      ```   <configuration>       <system.diagnostics>          <switches>             <add name=\"mySwitch\" value=\"10\" />             <add name=\"myNewSwitch\" value=\"20\" />             <remove name=\"mySwitch\" />             <clear/>          </switches>       </system.diagnostics>    </configuration>   ```      > [!NOTE] >  The switches you created should be `static`."}]},{"pos":[8011,8051],"content":"The name to display on a user interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name to display on a user interface.","pos":[0,40]}]},{"pos":[8119,8149],"content":"The description of the switch.","needQuote":true,"needEscape":true,"nodes":[{"content":"The description of the switch.","pos":[0,30]}]},{"pos":[8730,8895],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.BooleanSwitch\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified display name, description, and default switch value.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Diagnostics.BooleanSwitch\"></xref> class with the specified display name, description, and default switch value."},{"pos":[8907,9446],"content":"The `displayName` parameter is used to set the value of the <xref:System.Diagnostics.Switch.DisplayName%2A> property, and the `description` parameter is use to set the value of the <xref:System.Diagnostics.Switch.Description%2A> property. The `defaultSwitchValue` parameter is saved as a field and used to initialize the <xref:System.Diagnostics.Switch.Value%2A> property on first reference. For more information about constructor use, see the <xref:System.Diagnostics.BooleanSwitch.%23ctor%28System.String%2CSystem.String%29> constructor.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`displayName`</ph> parameter is used to set the value of the &lt;xref:System.Diagnostics.Switch.DisplayName%2A&gt; property, and the <ph id=\"ph2\">`description`</ph> parameter is use to set the value of the &lt;xref:System.Diagnostics.Switch.Description%2A&gt; property.","pos":[0,238],"source":"The `displayName` parameter is used to set the value of the <xref:System.Diagnostics.Switch.DisplayName%2A> property, and the `description` parameter is use to set the value of the <xref:System.Diagnostics.Switch.Description%2A> property."},{"content":"The <ph id=\"ph1\">`defaultSwitchValue`</ph> parameter is saved as a field and used to initialize the &lt;xref:System.Diagnostics.Switch.Value%2A&gt; property on first reference.","pos":[239,391],"source":" The `defaultSwitchValue` parameter is saved as a field and used to initialize the <xref:System.Diagnostics.Switch.Value%2A> property on first reference."},{"content":"For more information about constructor use, see the &lt;xref:System.Diagnostics.BooleanSwitch.%23ctor%28System.String%2CSystem.String%29&gt; constructor.","pos":[392,539],"source":" For more information about constructor use, see the <xref:System.Diagnostics.BooleanSwitch.%23ctor%28System.String%2CSystem.String%29> constructor."}]},{"pos":[9643,9685],"content":"The name to display on the user interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name to display on the user interface.","pos":[0,42]}]},{"pos":[9753,9783],"content":"The description of the switch.","needQuote":true,"needEscape":true,"nodes":[{"content":"The description of the switch.","pos":[0,30]}]},{"pos":[9858,9890],"content":"The default value of the switch.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default value of the switch.","pos":[0,32]}]},{"pos":[10300,10374],"content":"Gets or sets a value indicating whether the switch is enabled or disabled.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the switch is enabled or disabled.","pos":[0,74]}]},{"pos":[10387,11181],"content":"By default, this field is set to `false` (disabled). To enable the switch, assign this field the value of `true`. To disable the switch, assign the value to `false`.  The value of this property is determined by the value of the base class property <xref:System.Diagnostics.Switch.SwitchSetting%2A>.      > [!NOTE] >  This method uses the <xref:System.Security.Permissions.SecurityAction?displayProperty=fullName> flag to prevent being called from untrusted code; only the immediate caller is required to have <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=fullName> permission. If your code can be called from partially trusted code, do not pass the user input to <xref:System.Runtime.InteropServices.Marshal> class methods without validation.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"By default, this field is set to <ph id=\"ph1\">`false`</ph> (disabled).","pos":[0,52],"source":"By default, this field is set to `false` (disabled)."},{"content":"To enable the switch, assign this field the value of <ph id=\"ph1\">`true`</ph>.","pos":[53,113],"source":" To enable the switch, assign this field the value of `true`."},{"content":"To disable the switch, assign the value to <ph id=\"ph1\">`false`</ph>.","pos":[114,165],"source":" To disable the switch, assign the value to `false`."},{"content":"The value of this property is determined by the value of the base class property &lt;xref:System.Diagnostics.Switch.SwitchSetting%2A&gt;.","pos":[167,298],"source":"  The value of this property is determined by the value of the base class property <xref:System.Diagnostics.Switch.SwitchSetting%2A>."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This method uses the &lt;xref:System.Security.Permissions.SecurityAction?displayProperty=fullName&gt; flag to prevent being called from untrusted code; only the immediate caller is required to have &lt;xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=fullName&gt; permission.","pos":[304,625],"source":"      > [!NOTE] >  This method uses the <xref:System.Security.Permissions.SecurityAction?displayProperty=fullName> flag to prevent being called from untrusted code; only the immediate caller is required to have <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=fullName> permission."},{"content":"If your code can be called from partially trusted code, do not pass the user input to &lt;xref:System.Runtime.InteropServices.Marshal&gt; class methods without validation.","pos":[626,791],"source":" If your code can be called from partially trusted code, do not pass the user input to <xref:System.Runtime.InteropServices.Marshal> class methods without validation."}]},{"pos":[11968,12208],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the switch is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the switch is enabled; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,161],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the switch is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[162,240],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[12389,12437],"content":"The caller does not have the correct permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The caller does not have the correct permission.","pos":[0,48]}]},{"pos":[12817,12939],"content":"Determines whether the new value of the <xref:System.Diagnostics.Switch.Value*> property can be parsed as a Boolean value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the new value of the &lt;xref:System.Diagnostics.Switch.Value*&gt; property can be parsed as a Boolean value.","pos":[0,122],"source":"Determines whether the new value of the <xref:System.Diagnostics.Switch.Value*> property can be parsed as a Boolean value."}]},{"pos":[12951,13361],"content":"The OnValueChanged method determines whether the new value is a valid string representation of a Boolean value (\"false\" or \"true\"). If so, the method sets the <xref:System.Diagnostics.Switch.SwitchSetting%2A> property to 0 or 1.  Otherwise, the base method is called, which converts the string value to an integer value, which is then used to set the <xref:System.Diagnostics.Switch.SwitchSetting%2A> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The OnValueChanged method determines whether the new value is a valid string representation of a Boolean value (\"false\" or \"true\"). If so, the method sets the <xref:System.Diagnostics.Switch.SwitchSetting%2A> property to 0 or 1.  Otherwise, the base method is called, which converts the string value to an integer value, which is then used to set the <xref:System.Diagnostics.Switch.SwitchSetting%2A> property.","pos":[0,410],"nodes":[{"content":"The OnValueChanged method determines whether the new value is a valid string representation of a Boolean value (\"false\" or \"true\").","pos":[0,131]},{"content":"If so, the method sets the &lt;xref:System.Diagnostics.Switch.SwitchSetting%2A&gt; property to 0 or 1.","pos":[132,228],"source":" If so, the method sets the <xref:System.Diagnostics.Switch.SwitchSetting%2A> property to 0 or 1."},{"content":"Otherwise, the base method is called, which converts the string value to an integer value, which is then used to set the &lt;xref:System.Diagnostics.Switch.SwitchSetting%2A&gt; property.","pos":[230,410],"source":"  Otherwise, the base method is called, which converts the string value to an integer value, which is then used to set the <xref:System.Diagnostics.Switch.SwitchSetting%2A> property."}]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.BooleanSwitch\n  id: BooleanSwitch\n  children:\n  - System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)\n  - System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)\n  - System.Diagnostics.BooleanSwitch.Enabled\n  - System.Diagnostics.BooleanSwitch.OnValueChanged\n  langs:\n  - csharp\n  name: BooleanSwitch\n  nameWithType: BooleanSwitch\n  fullName: System.Diagnostics.BooleanSwitch\n  type: Class\n  summary: Provides a simple on/off switch that controls debugging and tracing output.\n  remarks: \"You can use a Boolean trace switch to enable or disable messages based on their importance. Use the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> property to get the current value of the switch.  \\n  \\n You can enable or disable a BooleanSwitch through the application configuration file and then use the configured BooleanSwitch value in your application. Alternately, you can create a BooleanSwitch in your code and set the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> property directly to instrument a specific section of code.  \\n  \\n To configure a BooleanSwitch, edit the configuration file that corresponds to the name of your application. Within this file, you can add or remove a switch, set a switch's value, or clear all the switches previously set by the application. The configuration file should be formatted like the following example.  \\n  \\n```  \\n<configuration>  \\n  <system.diagnostics>  \\n    <switches>  \\n      <add name=\\\"mySwitch\\\" value=\\\"1\\\"/>  \\n    </switches>  \\n  </system.diagnostics>  \\n</configuration>  \\n```  \\n  \\n This example configuration section defines a BooleanSwitch with the <xref:System.Diagnostics.Switch.DisplayName%2A> property set to `mySwitch` and the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> value set to `true`. Within your application, you can use the configured switch value by creating a BooleanSwitch with the same name, as shown in the following code example.  \\n  \\n [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#2](~/add/codesnippet/cpp/t-system.diagnostics.boo_1.cpp)]\\n [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#2](~/add/codesnippet/visualbasic/t-system.diagnostics.boo_1.vb)]\\n [!code-cs[Classic BooleanSwitch.BooleanSwitch Example#2](~/add/codesnippet/csharp/t-system.diagnostics.boo_1.cs)]  \\n  \\n By default, the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> property is set using the value specified in the configuration file. Configure the switch with a value of 0 to set the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> property to `false`; configure the switch with a nonzero value to set the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> property to `true`. If the BooleanSwitch constructor cannot find initial switch settings in the configuration file, the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> property of the new switch is set to `false` by default.  \\n  \\n You must enable tracing or debugging to use a switch. The following syntax is compiler specific. If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.  \\n  \\n-   To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or you can add `#define DEBUG` to the top of your file. In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.  \\n  \\n-   To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file. In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.  \\n  \\n> [!NOTE]\\n>  These debug and trace compiler switches are not required when using the BooleanSwitch class in isolation. They are only required in conjunction with <xref:System.Diagnostics.Trace> or <xref:System.Diagnostics.Debug> methods that are conditionally compiled.  \\n  \\n For more information on instrumenting your application, see <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace>. For more information about configuring and using trace switches, see [Trace Switches](~/add/includes/ajax-current-ext-md.md).  \\n  \\n> [!NOTE]\\n>  To improve performance, you can make BooleanSwitch members `static` in your class.\"\n  example:\n  - \"The following example creates a BooleanSwitch and uses the switch to determine whether to print an error message. You create the switch at the class level. The `Main` method passes its location to `MyMethod`, which prints an error message and where the error occurred.  \\n  \\n [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/visualbasic/t-system.diagnostics.boo_2.vb)]\\n [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/cpp/t-system.diagnostics.boo_2.cpp)]\\n [!code-cs[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/csharp/t-system.diagnostics.boo_2.cs)]\"\n  syntax:\n    content: >-\n      [System.Diagnostics.SwitchLevel(typeof(System.Boolean))]\n\n      public class BooleanSwitch : System.Diagnostics.Switch\n  inheritance:\n  - System.Object\n  - System.Diagnostics.Switch\n  implements: []\n  inheritedMembers:\n  - System.Diagnostics.Switch.Attributes\n  - System.Diagnostics.Switch.Description\n  - System.Diagnostics.Switch.DisplayName\n  - System.Diagnostics.Switch.GetSupportedAttributes\n  - System.Diagnostics.Switch.OnSwitchSettingChanged\n  - System.Diagnostics.Switch.SwitchSetting\n  - System.Diagnostics.Switch.Value\n  platform:\n  - net462\n- uid: System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.Diagnostics.BooleanSwitch\n  langs:\n  - csharp\n  name: BooleanSwitch(String,String)\n  nameWithType: BooleanSwitch.BooleanSwitch(String,String)\n  fullName: System.Diagnostics.BooleanSwitch.BooleanSwitch(String,String)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.BooleanSwitch\"></xref> class with the specified display name and description.\n  remarks: \"When you create a <xref:System.Diagnostics.BooleanSwitch>, the `displayName` parameter is used to find initial switch settings. If the constructor cannot find initial settings, the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> property is set to `false` (disabled).  \\n  \\n To set the level of your <xref:System.Diagnostics.BooleanSwitch>, edit the configuration file corresponding to the name of your application. Within this file, you can add a switch and set its value, remove a switch, or clear all switches previously set by the application. The configuration file should be formatted like the following example:  \\n  \\n```  \\n<configuration>  \\n    <system.diagnostics>  \\n       <switches>  \\n          <add name=\\\"mySwitch\\\" value=\\\"10\\\" />  \\n          <add name=\\\"myNewSwitch\\\" value=\\\"20\\\" />  \\n          <remove name=\\\"mySwitch\\\" />  \\n          <clear/>  \\n       </switches>  \\n    </system.diagnostics>  \\n </configuration>  \\n```  \\n  \\n> [!NOTE]\\n>  The switches you created should be `static`.\"\n  example:\n  - \"The following example creates a <xref:System.Diagnostics.BooleanSwitch> and uses the switch to determine whether to print an error message. The switch is created at the class level. The `Main` method passes its location to `MyMethod`, which prints an error message and where the error occurred.  \\n  \\n [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.boo_1.vb)]\\n [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/cpp/m-system.diagnostics.boo_1.cpp)]\\n [!code-cs[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/csharp/m-system.diagnostics.boo_1.cs)]\"\n  syntax:\n    content: public BooleanSwitch (string displayName, string description);\n    parameters:\n    - id: displayName\n      type: System.String\n      description: The name to display on a user interface.\n    - id: description\n      type: System.String\n      description: The description of the switch.\n  overload: System.Diagnostics.BooleanSwitch.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)\n  id: '#ctor(System.String,System.String,System.String)'\n  parent: System.Diagnostics.BooleanSwitch\n  langs:\n  - csharp\n  name: BooleanSwitch(String,String,String)\n  nameWithType: BooleanSwitch.BooleanSwitch(String,String,String)\n  fullName: System.Diagnostics.BooleanSwitch.BooleanSwitch(String,String,String)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.BooleanSwitch\"></xref> class with the specified display name, description, and default switch value.\n  remarks: The `displayName` parameter is used to set the value of the <xref:System.Diagnostics.Switch.DisplayName%2A> property, and the `description` parameter is use to set the value of the <xref:System.Diagnostics.Switch.Description%2A> property. The `defaultSwitchValue` parameter is saved as a field and used to initialize the <xref:System.Diagnostics.Switch.Value%2A> property on first reference. For more information about constructor use, see the <xref:System.Diagnostics.BooleanSwitch.%23ctor%28System.String%2CSystem.String%29> constructor.\n  syntax:\n    content: public BooleanSwitch (string displayName, string description, string defaultSwitchValue);\n    parameters:\n    - id: displayName\n      type: System.String\n      description: The name to display on the user interface.\n    - id: description\n      type: System.String\n      description: The description of the switch.\n    - id: defaultSwitchValue\n      type: System.String\n      description: The default value of the switch.\n  overload: System.Diagnostics.BooleanSwitch.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.BooleanSwitch.Enabled\n  id: Enabled\n  parent: System.Diagnostics.BooleanSwitch\n  langs:\n  - csharp\n  name: Enabled\n  nameWithType: BooleanSwitch.Enabled\n  fullName: System.Diagnostics.BooleanSwitch.Enabled\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Gets or sets a value indicating whether the switch is enabled or disabled.\n  remarks: \"By default, this field is set to `false` (disabled). To enable the switch, assign this field the value of `true`. To disable the switch, assign the value to `false`.  The value of this property is determined by the value of the base class property <xref:System.Diagnostics.Switch.SwitchSetting%2A>.  \\n  \\n> [!NOTE]\\n>  This method uses the <xref:System.Security.Permissions.SecurityAction?displayProperty=fullName> flag to prevent being called from untrusted code; only the immediate caller is required to have <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=fullName> permission. If your code can be called from partially trusted code, do not pass the user input to <xref:System.Runtime.InteropServices.Marshal> class methods without validation.\"\n  example:\n  - \"The following code example creates a <xref:System.Diagnostics.BooleanSwitch> and uses the switch to determine whether to print an error message. The switch is created at the class level. The `Main` method passes its location to `MyMethod`, which prints an error message and the location where the error occurred.  \\n  \\n [!code-cpp[Classic BooleanSwitch.Enabled Example#1](~/add/codesnippet/cpp/p-system.diagnostics.boo_1.cpp)]\\n [!code-cs[Classic BooleanSwitch.Enabled Example#1](~/add/codesnippet/csharp/p-system.diagnostics.boo_1.cs)]\\n [!code-vb[Classic BooleanSwitch.Enabled Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.boo_1.vb)]\"\n  syntax:\n    content: public bool Enabled { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the switch is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Diagnostics.BooleanSwitch.Enabled*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the correct permission.\n  platform:\n  - net462\n- uid: System.Diagnostics.BooleanSwitch.OnValueChanged\n  id: OnValueChanged\n  parent: System.Diagnostics.BooleanSwitch\n  langs:\n  - csharp\n  name: OnValueChanged()\n  nameWithType: BooleanSwitch.OnValueChanged()\n  fullName: System.Diagnostics.BooleanSwitch.OnValueChanged()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Determines whether the new value of the <xref:System.Diagnostics.Switch.Value*> property can be parsed as a Boolean value.\n  remarks: The OnValueChanged method determines whether the new value is a valid string representation of a Boolean value (\"false\" or \"true\"). If so, the method sets the <xref:System.Diagnostics.Switch.SwitchSetting%2A> property to 0 or 1.  Otherwise, the base method is called, which converts the string value to an integer value, which is then used to set the <xref:System.Diagnostics.Switch.SwitchSetting%2A> property.\n  syntax:\n    content: protected override void OnValueChanged ();\n    parameters: []\n  overload: System.Diagnostics.BooleanSwitch.OnValueChanged*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Diagnostics.Switch\n  isExternal: false\n  name: System.Diagnostics.Switch\n- uid: System.Security.SecurityException\n  isExternal: true\n  name: System.Security.SecurityException\n- uid: System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)\n  parent: System.Diagnostics.BooleanSwitch\n  isExternal: false\n  name: BooleanSwitch(String,String)\n  nameWithType: BooleanSwitch.BooleanSwitch(String,String)\n  fullName: System.Diagnostics.BooleanSwitch.BooleanSwitch(String,String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)\n  parent: System.Diagnostics.BooleanSwitch\n  isExternal: false\n  name: BooleanSwitch(String,String,String)\n  nameWithType: BooleanSwitch.BooleanSwitch(String,String,String)\n  fullName: System.Diagnostics.BooleanSwitch.BooleanSwitch(String,String,String)\n- uid: System.Diagnostics.BooleanSwitch.Enabled\n  parent: System.Diagnostics.BooleanSwitch\n  isExternal: false\n  name: Enabled\n  nameWithType: BooleanSwitch.Enabled\n  fullName: System.Diagnostics.BooleanSwitch.Enabled\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.BooleanSwitch.OnValueChanged\n  parent: System.Diagnostics.BooleanSwitch\n  isExternal: false\n  name: OnValueChanged()\n  nameWithType: BooleanSwitch.OnValueChanged()\n  fullName: System.Diagnostics.BooleanSwitch.OnValueChanged()\n- uid: System.Diagnostics.BooleanSwitch.#ctor*\n  parent: System.Diagnostics.BooleanSwitch\n  isExternal: false\n  name: BooleanSwitch\n  nameWithType: BooleanSwitch.BooleanSwitch\n- uid: System.Diagnostics.BooleanSwitch.Enabled*\n  parent: System.Diagnostics.BooleanSwitch\n  isExternal: false\n  name: Enabled\n  nameWithType: BooleanSwitch.Enabled\n- uid: System.Diagnostics.BooleanSwitch.OnValueChanged*\n  parent: System.Diagnostics.BooleanSwitch\n  isExternal: false\n  name: OnValueChanged\n  nameWithType: BooleanSwitch.OnValueChanged\n"}