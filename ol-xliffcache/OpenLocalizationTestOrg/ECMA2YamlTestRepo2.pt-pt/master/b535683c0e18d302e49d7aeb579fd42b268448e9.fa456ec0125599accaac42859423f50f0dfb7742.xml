{"nodes":[{"pos":[688,860],"content":"Represents the <xref uid=\"langword_csharp_&lt;CipherReference&gt;\" name=\"&lt;CipherReference&gt;\" href=\"\"></xref> element in XML encryption. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;CipherReference&amp;gt;\" name=\"&amp;lt;CipherReference&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element in XML encryption.","pos":[0,140],"source":"Represents the <xref uid=\"langword_csharp_&lt;CipherReference&gt;\" name=\"&lt;CipherReference&gt;\" href=\"\"></xref> element in XML encryption."},{"content":"This class cannot be inherited.","pos":[141,172]}]},{"pos":[873,2830],"content":"This class represents the `<CipherReference>` element in XML encryption. It identifies a source which, when processed, yields the encrypted data.       The actual encrypted data referenced by the `<CipherReference>` is obtained by the following process. The `<CipherReference> URI` property contains a Uniform Resource Identifier (URI) that is dereferenced. If the `<CipherReference>` element also contains a transform chain, the data resulting from dereferencing the URI is transformed as specified to produce the encrypted data. For example, if the encrypted data is base64-encoded within an XML document, the transforms would specify an XPath expression followed by a base64 decoding so the encrypted data can be extracted.       The syntax of the URI and transforms is similar to that of XML digital signatures.  However, in XML digital signatures, both generation and validation processing start with the same source data and perform that transform in the same order. In XML encryption, the decrypting application has only the encrypted data and the specified transforms. The transforms are enumerated in the order necessary to obtain the encrypted data.       **Note** By default, you cannot dereference cipher references from documents with unknown sources, such as files from a Web site, because the <xref:System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence%2A> property is **null**. For example, when you attempt to decrypt a file containing a `<CipherReference>` element that references a file on the Web, a <xref:System.Security.SecurityException> is thrown, even if the request is made by a fully trusted assembly.       If you are sure the documents you are decrypting can be trusted, you can change this behavior for fully trusted applications by using the following code:      ```   Evidence ev = new Evidence();   ev.AddHost (new Zone(SecurityZone.MyComputer));   EncryptedXml exml = new EncryptedXml(doc, ev);   ```","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This class represents the <ph id=\"ph1\">`&lt;CipherReference&gt;`</ph> element in XML encryption.","pos":[0,72],"source":"This class represents the `<CipherReference>` element in XML encryption."},{"content":"It identifies a source which, when processed, yields the encrypted data.","pos":[73,145]},{"content":"The actual encrypted data referenced by the <ph id=\"ph1\">`&lt;CipherReference&gt;`</ph> is obtained by the following process.","pos":[152,253],"source":"       The actual encrypted data referenced by the `<CipherReference>` is obtained by the following process."},{"content":"The <ph id=\"ph1\">`&lt;CipherReference&gt; URI`</ph> property contains a Uniform Resource Identifier (URI) that is dereferenced.","pos":[254,357],"source":" The `<CipherReference> URI` property contains a Uniform Resource Identifier (URI) that is dereferenced."},{"content":"If the <ph id=\"ph1\">`&lt;CipherReference&gt;`</ph> element also contains a transform chain, the data resulting from dereferencing the URI is transformed as specified to produce the encrypted data.","pos":[358,530],"source":" If the `<CipherReference>` element also contains a transform chain, the data resulting from dereferencing the URI is transformed as specified to produce the encrypted data."},{"content":"For example, if the encrypted data is base64-encoded within an XML document, the transforms would specify an XPath expression followed by a base64 decoding so the encrypted data can be extracted.","pos":[531,726]},{"content":"The syntax of the URI and transforms is similar to that of XML digital signatures.","pos":[733,815]},{"content":"However, in XML digital signatures, both generation and validation processing start with the same source data and perform that transform in the same order.","pos":[817,972]},{"content":"In XML encryption, the decrypting application has only the encrypted data and the specified transforms.","pos":[973,1076]},{"content":"The transforms are enumerated in the order necessary to obtain the encrypted data.","pos":[1077,1159]},{"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept> By default, you cannot dereference cipher references from documents with unknown sources, such as files from a Web site, because the &lt;xref:System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence%2A&gt; property is <bpt id=\"p2\">**</bpt>null<ept id=\"p2\">**</ept>.","pos":[1166,1402],"source":"**Note** By default, you cannot dereference cipher references from documents with unknown sources, such as files from a Web site, because the <xref:System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence%2A> property is **null**."},{"content":"For example, when you attempt to decrypt a file containing a <ph id=\"ph1\">`&lt;CipherReference&gt;`</ph> element that references a file on the Web, a &lt;xref:System.Security.SecurityException&gt; is thrown, even if the request is made by a fully trusted assembly.","pos":[1403,1637],"source":" For example, when you attempt to decrypt a file containing a `<CipherReference>` element that references a file on the Web, a <xref:System.Security.SecurityException> is thrown, even if the request is made by a fully trusted assembly."},{"content":"If you are sure the documents you are decrypting can be trusted, you can change this behavior for fully trusted applications by using the following code:      <ph id=\"ph1\">```   Evidence ev = new Evidence();   ev.AddHost (new Zone(SecurityZone.MyComputer));   EncryptedXml exml = new EncryptedXml(doc, ev);   ```</ph>","pos":[1644,1943],"source":"       If you are sure the documents you are decrypting can be trusted, you can change this behavior for fully trusted applications by using the following code:      ```   Evidence ev = new Evidence();   ev.AddHost (new Zone(SecurityZone.MyComputer));   EncryptedXml exml = new EncryptedXml(doc, ev);   ```"}]},{"pos":[4322,4432],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.CipherReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.CipherReference\"></xref> class."},{"pos":[4444,4634],"content":"This constructor creates a <xref:System.Security.Cryptography.Xml.CipherReference> object that provides reference information for a <xref:System.Security.Cryptography.Xml.CipherData> object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This constructor creates a &lt;xref:System.Security.Cryptography.Xml.CipherReference&gt; object that provides reference information for a &lt;xref:System.Security.Cryptography.Xml.CipherData&gt; object.","pos":[0,190],"source":"This constructor creates a <xref:System.Security.Cryptography.Xml.CipherReference> object that provides reference information for a <xref:System.Security.Cryptography.Xml.CipherData> object."}]},{"pos":[5745,5909],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.CipherReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified Uniform Resource Identifier (URI).","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.CipherReference\"></xref> class using the specified Uniform Resource Identifier (URI)."},{"pos":[5922,6950],"content":"This constructor creates a <xref:System.Security.Cryptography.Xml.CipherReference> object using a Uniform Resource Identifier (URI) that points to the encrypted data. The object is then used to provide reference information for a <xref:System.Security.Cryptography.Xml.CipherData> object.       You can use a URI to designate an XML file containing encrypted data. For example:       `String uri = \"http://www.woodgrovebank.com/document.xml\";`       You can also use a partial URI to designate that only a portion of an XML document is to be encrypted. For example, assume that an XML document named document.xml contains two `MyForm` elements as shown in the following XML code example:       `<MyForm Id='Form1'>`       `<! -- Form data here -->`       `</MyForm>`       `<MyForm Id='Form2'>`       `<! -- Form data here -->`       `</MyForm>`       You can encrypt only the content in `Form2` using a URI such as the following:       `String uri = \"http://www.woodgrovebank.com/document.xml#Form2\";`","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This constructor creates a &lt;xref:System.Security.Cryptography.Xml.CipherReference&gt; object using a Uniform Resource Identifier (URI) that points to the encrypted data.","pos":[0,166],"source":"This constructor creates a <xref:System.Security.Cryptography.Xml.CipherReference> object using a Uniform Resource Identifier (URI) that points to the encrypted data."},{"content":"The object is then used to provide reference information for a &lt;xref:System.Security.Cryptography.Xml.CipherData&gt; object.","pos":[167,288],"source":" The object is then used to provide reference information for a <xref:System.Security.Cryptography.Xml.CipherData> object."},{"content":"You can use a URI to designate an XML file containing encrypted data.","pos":[295,364]},{"content":"For example:       <ph id=\"ph1\">`String uri = \"http://www.woodgrovebank.com/document.xml\";`</ph>       You can also use a partial URI to designate that only a portion of an XML document is to be encrypted.","pos":[365,552],"source":" For example:       `String uri = \"http://www.woodgrovebank.com/document.xml\";`       You can also use a partial URI to designate that only a portion of an XML document is to be encrypted."},{"content":"For example, assume that an XML document named document.xml contains two <ph id=\"ph1\">`MyForm`</ph> elements as shown in the following XML code example:       <ph id=\"ph2\">`&lt;MyForm Id='Form1'&gt;`</ph>       <ph id=\"ph3\">`&lt;! -- Form data here --&gt;`</ph>       <ph id=\"ph4\">`&lt;/MyForm&gt;`</ph>       <ph id=\"ph5\">`&lt;MyForm Id='Form2'&gt;`</ph>       <ph id=\"ph6\">`&lt;! -- Form data here --&gt;`</ph>       <ph id=\"ph7\">`&lt;/MyForm&gt;`</ph>       You can encrypt only the content in <ph id=\"ph8\">`Form2`</ph> using a URI such as the following:       <ph id=\"ph9\">`String uri = \"http://www.woodgrovebank.com/document.xml#Form2\";`</ph>","pos":[553,1002],"source":" For example, assume that an XML document named document.xml contains two `MyForm` elements as shown in the following XML code example:       `<MyForm Id='Form1'>`       `<! -- Form data here -->`       `</MyForm>`       `<MyForm Id='Form2'>`       `<! -- Form data here -->`       `</MyForm>`       You can encrypt only the content in `Form2` using a URI such as the following:       `String uri = \"http://www.woodgrovebank.com/document.xml#Form2\";`"}]},{"pos":[7551,7618],"content":"A Uniform Resource Identifier (URI) pointing to the encrypted data.","needQuote":true,"needEscape":true,"nodes":[{"content":"A Uniform Resource Identifier (URI) pointing to the encrypted data.","pos":[0,67]}]},{"pos":[8337,8533],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.CipherReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified Uniform Resource Identifier (URI) and transform chain information.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.CipherReference\"></xref> class using the specified Uniform Resource Identifier (URI) and transform chain information."},{"pos":[8545,8850],"content":"This constructor creates a <xref:System.Security.Cryptography.Xml.CipherReference> object using a Uniform Resource Identifier (URI) and transform chain to indicate the encrypted data. The object is then used to provide reference information for a <xref:System.Security.Cryptography.Xml.CipherData> object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This constructor creates a <xref:System.Security.Cryptography.Xml.CipherReference> object using a Uniform Resource Identifier (URI) and transform chain to indicate the encrypted data. The object is then used to provide reference information for a <xref:System.Security.Cryptography.Xml.CipherData> object.","pos":[0,305],"nodes":[{"content":"This constructor creates a &lt;xref:System.Security.Cryptography.Xml.CipherReference&gt; object using a Uniform Resource Identifier (URI) and transform chain to indicate the encrypted data.","pos":[0,183],"source":"This constructor creates a <xref:System.Security.Cryptography.Xml.CipherReference> object using a Uniform Resource Identifier (URI) and transform chain to indicate the encrypted data."},{"content":"The object is then used to provide reference information for a &lt;xref:System.Security.Cryptography.Xml.CipherData&gt; object.","pos":[184,305],"source":" The object is then used to provide reference information for a <xref:System.Security.Cryptography.Xml.CipherData> object."}]}]},{"pos":[9502,9569],"content":"A Uniform Resource Identifier (URI) pointing to the encrypted data.","needQuote":true,"needEscape":true,"nodes":[{"content":"A Uniform Resource Identifier (URI) pointing to the encrypted data.","pos":[0,67]}]},{"pos":[9674,9806],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.TransformChain\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that describes transforms to do on the encrypted data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.Cryptography.Xml.TransformChain\"></xref> object that describes transforms to do on the encrypted data."},{"pos":[10304,10417],"content":"Returns the XML representation of a <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.CipherReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Returns the XML representation of a <xref href=\"System.Security.Cryptography.Xml.CipherReference\"></xref> object."},{"pos":[10429,10494],"content":"Use this method to output the <ph id=\"ph1\">`&lt;CipherReference&gt;`</ph> element in XML.","needQuote":true,"needEscape":true,"extradata":"MT","source":"Use this method to output the `<CipherReference>` element in XML."},{"pos":[11024,11215],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_&amp;lt;CipherReference&amp;gt;\" name=\"&amp;lt;CipherReference&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> element in XML encryption.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Xml.XmlElement\"></xref> that represents the <xref uid=\"langword_csharp_&lt;CipherReference&gt;\" name=\"&lt;CipherReference&gt;\" href=\"\"></xref> element in XML encryption."},{"pos":[11447,11591],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.CipherReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.Cryptography.Xml.CipherReference\"></xref> value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[12085,12241],"content":"Loads XML information into the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;CipherReference&amp;gt;\" name=\"&amp;lt;CipherReference&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element in XML encryption.","needQuote":true,"needEscape":true,"source":"Loads XML information into the <xref uid=\"langword_csharp_&lt;CipherReference&gt;\" name=\"&lt;CipherReference&gt;\" href=\"\"></xref> element in XML encryption."},{"pos":[12253,12373],"content":"Use this method to load an existing XML element into the <xref:System.Security.Cryptography.Xml.CipherReference> object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this method to load an existing XML element into the &lt;xref:System.Security.Cryptography.Xml.CipherReference&gt; object.","pos":[0,120],"source":"Use this method to load an existing XML element into the <xref:System.Security.Cryptography.Xml.CipherReference> object."}]},{"pos":[12542,12650],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents an XML element to use as the reference.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Xml.XmlElement\"></xref> object that represents an XML element to use as the reference."},{"pos":[12837,12933],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> provided is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>value</code> provided is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.Xml.CipherReference\n  id: CipherReference\n  children:\n  - System.Security.Cryptography.Xml.CipherReference.#ctor\n  - System.Security.Cryptography.Xml.CipherReference.#ctor(System.String)\n  - System.Security.Cryptography.Xml.CipherReference.#ctor(System.String,System.Security.Cryptography.Xml.TransformChain)\n  - System.Security.Cryptography.Xml.CipherReference.GetXml\n  - System.Security.Cryptography.Xml.CipherReference.LoadXml(System.Xml.XmlElement)\n  langs:\n  - csharp\n  name: CipherReference\n  nameWithType: CipherReference\n  fullName: System.Security.Cryptography.Xml.CipherReference\n  type: Class\n  summary: Represents the <xref uid=\"langword_csharp_&lt;CipherReference&gt;\" name=\"&lt;CipherReference&gt;\" href=\"\"></xref> element in XML encryption. This class cannot be inherited.\n  remarks: \"This class represents the `<CipherReference>` element in XML encryption. It identifies a source which, when processed, yields the encrypted data.  \\n  \\n The actual encrypted data referenced by the `<CipherReference>` is obtained by the following process. The `<CipherReference> URI` property contains a Uniform Resource Identifier (URI) that is dereferenced. If the `<CipherReference>` element also contains a transform chain, the data resulting from dereferencing the URI is transformed as specified to produce the encrypted data. For example, if the encrypted data is base64-encoded within an XML document, the transforms would specify an XPath expression followed by a base64 decoding so the encrypted data can be extracted.  \\n  \\n The syntax of the URI and transforms is similar to that of XML digital signatures.  However, in XML digital signatures, both generation and validation processing start with the same source data and perform that transform in the same order. In XML encryption, the decrypting application has only the encrypted data and the specified transforms. The transforms are enumerated in the order necessary to obtain the encrypted data.  \\n  \\n **Note** By default, you cannot dereference cipher references from documents with unknown sources, such as files from a Web site, because the <xref:System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence%2A> property is **null**. For example, when you attempt to decrypt a file containing a `<CipherReference>` element that references a file on the Web, a <xref:System.Security.SecurityException> is thrown, even if the request is made by a fully trusted assembly.  \\n  \\n If you are sure the documents you are decrypting can be trusted, you can change this behavior for fully trusted applications by using the following code:  \\n  \\n```  \\nEvidence ev = new Evidence();  \\nev.AddHost (new Zone(SecurityZone.MyComputer));  \\nEncryptedXml exml = new EncryptedXml(doc, ev);  \\n```\"\n  example:\n  - \"The following code example creates a new instance of CipherReference.  \\n  \\n [!code-vb[cryptography.Xml.CipherReference#1](~/add/codesnippet/visualbasic/t-system.security.crypto_127_1.vb)]\\n [!code-cs[cryptography.Xml.CipherReference#1](~/add/codesnippet/csharp/t-system.security.crypto_127_1.cs)]\\n [!code-cpp[cryptography.Xml.CipherReference#1](~/add/codesnippet/cpp/t-system.security.crypto_127_1.cpp)]\"\n  syntax:\n    content: 'public sealed class CipherReference : System.Security.Cryptography.Xml.EncryptedReference'\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.Xml.EncryptedReference\n  implements: []\n  inheritedMembers:\n  - System.Security.Cryptography.Xml.EncryptedReference.AddTransform(System.Security.Cryptography.Xml.Transform)\n  - System.Security.Cryptography.Xml.EncryptedReference.CacheValid\n  - System.Security.Cryptography.Xml.EncryptedReference.ReferenceType\n  - System.Security.Cryptography.Xml.EncryptedReference.TransformChain\n  - System.Security.Cryptography.Xml.EncryptedReference.Uri\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.CipherReference.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.Xml.CipherReference\n  langs:\n  - csharp\n  name: CipherReference()\n  nameWithType: CipherReference.CipherReference()\n  fullName: System.Security.Cryptography.Xml.CipherReference.CipherReference()\n  type: Constructor\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.CipherReference\"></xref> class.\n  remarks: This constructor creates a <xref:System.Security.Cryptography.Xml.CipherReference> object that provides reference information for a <xref:System.Security.Cryptography.Xml.CipherData> object.\n  example:\n  - \"The following code example creates a new instance of <xref:System.Security.Cryptography.Xml.CipherReference>.  \\n  \\n [!code-vb[cryptography.Xml.CipherReference#1](~/add/codesnippet/visualbasic/m-system.security.crypto_105_1.vb)]\\n [!code-cs[cryptography.Xml.CipherReference#1](~/add/codesnippet/csharp/m-system.security.crypto_105_1.cs)]\\n [!code-cpp[cryptography.Xml.CipherReference#1](~/add/codesnippet/cpp/m-system.security.crypto_105_1.cpp)]\"\n  syntax:\n    content: public CipherReference ();\n    parameters: []\n  overload: System.Security.Cryptography.Xml.CipherReference.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.CipherReference.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Security.Cryptography.Xml.CipherReference\n  langs:\n  - csharp\n  name: CipherReference(String)\n  nameWithType: CipherReference.CipherReference(String)\n  fullName: System.Security.Cryptography.Xml.CipherReference.CipherReference(String)\n  type: Constructor\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.CipherReference\"></xref> class using the specified Uniform Resource Identifier (URI).\n  remarks: \"This constructor creates a <xref:System.Security.Cryptography.Xml.CipherReference> object using a Uniform Resource Identifier (URI) that points to the encrypted data. The object is then used to provide reference information for a <xref:System.Security.Cryptography.Xml.CipherData> object.  \\n  \\n You can use a URI to designate an XML file containing encrypted data. For example:  \\n  \\n `String uri = \\\"http://www.woodgrovebank.com/document.xml\\\";`  \\n  \\n You can also use a partial URI to designate that only a portion of an XML document is to be encrypted. For example, assume that an XML document named document.xml contains two `MyForm` elements as shown in the following XML code example:  \\n  \\n `<MyForm Id='Form1'>`  \\n  \\n `<! -- Form data here -->`  \\n  \\n `</MyForm>`  \\n  \\n `<MyForm Id='Form2'>`  \\n  \\n `<! -- Form data here -->`  \\n  \\n `</MyForm>`  \\n  \\n You can encrypt only the content in `Form2` using a URI such as the following:  \\n  \\n `String uri = \\\"http://www.woodgrovebank.com/document.xml#Form2\\\";`\"\n  example:\n  - \"The following code example creates a new instance of <xref:System.Security.Cryptography.Xml.CipherReference>.  \\n  \\n [!code-vb[cryptography.Xml.CipherReference#1](~/add/codesnippet/visualbasic/m-system.security.crypto_103_1.vb)]\\n [!code-cs[cryptography.Xml.CipherReference#1](~/add/codesnippet/csharp/m-system.security.crypto_103_1.cs)]\\n [!code-cpp[cryptography.Xml.CipherReference#1](~/add/codesnippet/cpp/m-system.security.crypto_103_1.cpp)]\"\n  syntax:\n    content: public CipherReference (string uri);\n    parameters:\n    - id: uri\n      type: System.String\n      description: A Uniform Resource Identifier (URI) pointing to the encrypted data.\n  overload: System.Security.Cryptography.Xml.CipherReference.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.CipherReference.#ctor(System.String,System.Security.Cryptography.Xml.TransformChain)\n  id: '#ctor(System.String,System.Security.Cryptography.Xml.TransformChain)'\n  parent: System.Security.Cryptography.Xml.CipherReference\n  langs:\n  - csharp\n  name: CipherReference(String,TransformChain)\n  nameWithType: CipherReference.CipherReference(String,TransformChain)\n  fullName: System.Security.Cryptography.Xml.CipherReference.CipherReference(String,TransformChain)\n  type: Constructor\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.CipherReference\"></xref> class using the specified Uniform Resource Identifier (URI) and transform chain information.\n  remarks: This constructor creates a <xref:System.Security.Cryptography.Xml.CipherReference> object using a Uniform Resource Identifier (URI) and transform chain to indicate the encrypted data. The object is then used to provide reference information for a <xref:System.Security.Cryptography.Xml.CipherData> object.\n  example:\n  - \"The following code example creates a new instance of <xref:System.Security.Cryptography.Xml.CipherReference>.  \\n  \\n [!code-vb[cryptography.Xml.CipherReference#1](~/add/codesnippet/visualbasic/b72a27e7-300b-421f-bbd3-_1.vb)]\\n [!code-cs[cryptography.Xml.CipherReference#1](~/add/codesnippet/csharp/b72a27e7-300b-421f-bbd3-_1.cs)]\\n [!code-cpp[cryptography.Xml.CipherReference#1](~/add/codesnippet/cpp/b72a27e7-300b-421f-bbd3-_1.cpp)]\"\n  syntax:\n    content: public CipherReference (string uri, System.Security.Cryptography.Xml.TransformChain transformChain);\n    parameters:\n    - id: uri\n      type: System.String\n      description: A Uniform Resource Identifier (URI) pointing to the encrypted data.\n    - id: transformChain\n      type: System.Security.Cryptography.Xml.TransformChain\n      description: A <xref href=\"System.Security.Cryptography.Xml.TransformChain\"></xref> object that describes transforms to do on the encrypted data.\n  overload: System.Security.Cryptography.Xml.CipherReference.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.CipherReference.GetXml\n  id: GetXml\n  parent: System.Security.Cryptography.Xml.CipherReference\n  langs:\n  - csharp\n  name: GetXml()\n  nameWithType: CipherReference.GetXml()\n  fullName: System.Security.Cryptography.Xml.CipherReference.GetXml()\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Returns the XML representation of a <xref href=\"System.Security.Cryptography.Xml.CipherReference\"></xref> object.\n  remarks: Use this method to output the `<CipherReference>` element in XML.\n  example:\n  - \"The following code example shows one way to use the GetXml method.  \\n  \\n [!code-vb[CipherReference2#1](~/add/codesnippet/visualbasic/m-system.security.crypto_115_1.vb)]\\n [!code-cpp[CipherReference2#1](~/add/codesnippet/cpp/m-system.security.crypto_115_1.cpp)]\\n [!code-cs[CipherReference2#1](~/add/codesnippet/csharp/m-system.security.crypto_115_1.cs)]\"\n  syntax:\n    content: public override System.Xml.XmlElement GetXml ();\n    parameters: []\n    return:\n      type: System.Xml.XmlElement\n      description: An <xref href=\"System.Xml.XmlElement\"></xref> that represents the <xref uid=\"langword_csharp_&lt;CipherReference&gt;\" name=\"&lt;CipherReference&gt;\" href=\"\"></xref> element in XML encryption.\n  overload: System.Security.Cryptography.Xml.CipherReference.GetXml*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The <xref href=\"System.Security.Cryptography.Xml.CipherReference\"></xref> value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.CipherReference.LoadXml(System.Xml.XmlElement)\n  id: LoadXml(System.Xml.XmlElement)\n  parent: System.Security.Cryptography.Xml.CipherReference\n  langs:\n  - csharp\n  name: LoadXml(XmlElement)\n  nameWithType: CipherReference.LoadXml(XmlElement)\n  fullName: System.Security.Cryptography.Xml.CipherReference.LoadXml(XmlElement)\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Loads XML information into the <xref uid=\"langword_csharp_&lt;CipherReference&gt;\" name=\"&lt;CipherReference&gt;\" href=\"\"></xref> element in XML encryption.\n  remarks: Use this method to load an existing XML element into the <xref:System.Security.Cryptography.Xml.CipherReference> object.\n  syntax:\n    content: public override void LoadXml (System.Xml.XmlElement value);\n    parameters:\n    - id: value\n      type: System.Xml.XmlElement\n      description: An <xref href=\"System.Xml.XmlElement\"></xref> object that represents an XML element to use as the reference.\n  overload: System.Security.Cryptography.Xml.CipherReference.LoadXml*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>value</code> provided is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.Security.Cryptography.Xml.EncryptedReference\n  isExternal: false\n  name: System.Security.Cryptography.Xml.EncryptedReference\n- uid: System.Security.Cryptography.CryptographicException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicException\n  nameWithType: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Security.Cryptography.Xml.CipherReference.#ctor\n  parent: System.Security.Cryptography.Xml.CipherReference\n  isExternal: false\n  name: CipherReference()\n  nameWithType: CipherReference.CipherReference()\n  fullName: System.Security.Cryptography.Xml.CipherReference.CipherReference()\n- uid: System.Security.Cryptography.Xml.CipherReference.#ctor(System.String)\n  parent: System.Security.Cryptography.Xml.CipherReference\n  isExternal: false\n  name: CipherReference(String)\n  nameWithType: CipherReference.CipherReference(String)\n  fullName: System.Security.Cryptography.Xml.CipherReference.CipherReference(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.Xml.CipherReference.#ctor(System.String,System.Security.Cryptography.Xml.TransformChain)\n  parent: System.Security.Cryptography.Xml.CipherReference\n  isExternal: false\n  name: CipherReference(String,TransformChain)\n  nameWithType: CipherReference.CipherReference(String,TransformChain)\n  fullName: System.Security.Cryptography.Xml.CipherReference.CipherReference(String,TransformChain)\n- uid: System.Security.Cryptography.Xml.TransformChain\n  parent: System.Security.Cryptography.Xml\n  isExternal: false\n  name: TransformChain\n  nameWithType: TransformChain\n  fullName: System.Security.Cryptography.Xml.TransformChain\n- uid: System.Security.Cryptography.Xml.CipherReference.GetXml\n  parent: System.Security.Cryptography.Xml.CipherReference\n  isExternal: false\n  name: GetXml()\n  nameWithType: CipherReference.GetXml()\n  fullName: System.Security.Cryptography.Xml.CipherReference.GetXml()\n- uid: System.Xml.XmlElement\n  parent: System.Xml\n  isExternal: false\n  name: XmlElement\n  nameWithType: XmlElement\n  fullName: System.Xml.XmlElement\n- uid: System.Security.Cryptography.Xml.CipherReference.LoadXml(System.Xml.XmlElement)\n  parent: System.Security.Cryptography.Xml.CipherReference\n  isExternal: false\n  name: LoadXml(XmlElement)\n  nameWithType: CipherReference.LoadXml(XmlElement)\n  fullName: System.Security.Cryptography.Xml.CipherReference.LoadXml(XmlElement)\n- uid: System.Security.Cryptography.Xml.CipherReference.#ctor*\n  parent: System.Security.Cryptography.Xml.CipherReference\n  isExternal: false\n  name: CipherReference\n  nameWithType: CipherReference.CipherReference\n- uid: System.Security.Cryptography.Xml.CipherReference.GetXml*\n  parent: System.Security.Cryptography.Xml.CipherReference\n  isExternal: false\n  name: GetXml\n  nameWithType: CipherReference.GetXml\n- uid: System.Security.Cryptography.Xml.CipherReference.LoadXml*\n  parent: System.Security.Cryptography.Xml.CipherReference\n  isExternal: false\n  name: LoadXml\n  nameWithType: CipherReference.LoadXml\n"}