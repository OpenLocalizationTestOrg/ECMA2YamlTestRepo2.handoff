{"nodes":[{"pos":[1193,1244],"content":"Defines identifiers for supported binary operators.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines identifiers for supported binary operators.","pos":[0,51]}]},{"pos":[1256,1488],"content":"CodeBinaryOperatorType defines identifiers for the most common types of binary operators. These operator identifiers are used by <xref:System.CodeDom.CodeBinaryOperatorExpression> to indicate the type of operator in each expression.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"CodeBinaryOperatorType defines identifiers for the most common types of binary operators. These operator identifiers are used by <xref:System.CodeDom.CodeBinaryOperatorExpression> to indicate the type of operator in each expression.","pos":[0,232],"nodes":[{"content":"CodeBinaryOperatorType defines identifiers for the most common types of binary operators.","pos":[0,89]},{"content":"These operator identifiers are used by &lt;xref:System.CodeDom.CodeBinaryOperatorExpression&gt; to indicate the type of operator in each expression.","pos":[90,232],"source":" These operator identifiers are used by <xref:System.CodeDom.CodeBinaryOperatorExpression> to indicate the type of operator in each expression."}]}]},{"pos":[1981,1999],"content":"Addition operator.","needQuote":true,"needEscape":true,"nodes":[{"content":"Addition operator.","pos":[0,18]}]},{"pos":[2108,2120],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2490,2510],"content":"Assignment operator.","needQuote":true,"needEscape":true,"nodes":[{"content":"Assignment operator.","pos":[0,20]}]},{"pos":[2622,2634],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3024,3045],"content":"Bitwise and operator.","needQuote":true,"needEscape":true,"nodes":[{"content":"Bitwise and operator.","pos":[0,21]}]},{"pos":[3161,3173],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3558,3578],"content":"Bitwise or operator.","needQuote":true,"needEscape":true,"nodes":[{"content":"Bitwise or operator.","pos":[0,20]}]},{"pos":[3693,3705],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4095,4275],"content":"Boolean and operator. This represents a short circuiting operator. A short circuiting operator will evaluate only as many expressions as necessary before returning a correct value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean and operator. This represents a short circuiting operator. A short circuiting operator will evaluate only as many expressions as necessary before returning a correct value.","pos":[0,180],"nodes":[{"content":"Boolean and operator.","pos":[0,21]},{"content":"This represents a short circuiting operator.","pos":[22,66]},{"content":"A short circuiting operator will evaluate only as many expressions as necessary before returning a correct value.","pos":[67,180]}]}]},{"pos":[4391,4403],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4788,4967],"content":"Boolean or operator. This represents a short circuiting operator. A short circuiting operator will evaluate only as many expressions as necessary before returning a correct value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean or operator. This represents a short circuiting operator. A short circuiting operator will evaluate only as many expressions as necessary before returning a correct value.","pos":[0,179],"nodes":[{"content":"Boolean or operator.","pos":[0,20]},{"content":"This represents a short circuiting operator.","pos":[21,65]},{"content":"A short circuiting operator will evaluate only as many expressions as necessary before returning a correct value.","pos":[66,179]}]}]},{"pos":[5082,5094],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5464,5482],"content":"Division operator.","needQuote":true,"needEscape":true,"nodes":[{"content":"Division operator.","pos":[0,18]}]},{"pos":[5594,5606],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6001,6023],"content":"Greater than operator.","needQuote":true,"needEscape":true,"nodes":[{"content":"Greater than operator.","pos":[0,22]}]},{"pos":[6140,6152],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6582,6613],"content":"Greater than or equal operator.","needQuote":true,"needEscape":true,"nodes":[{"content":"Greater than or equal operator.","pos":[0,31]}]},{"pos":[6737,6749],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7169,7193],"content":"Identity equal operator.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identity equal operator.","pos":[0,24]}]},{"pos":[7315,7327],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7757,7785],"content":"Identity not equal operator.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identity not equal operator.","pos":[0,28]}]},{"pos":[7909,7921],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8301,8320],"content":"Less than operator.","needQuote":true,"needEscape":true,"nodes":[{"content":"Less than operator.","pos":[0,19]}]},{"pos":[8434,8446],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8861,8889],"content":"Less than or equal operator.","needQuote":true,"needEscape":true,"nodes":[{"content":"Less than or equal operator.","pos":[0,28]}]},{"pos":[9010,9022],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9397,9414],"content":"Modulus operator.","needQuote":true,"needEscape":true,"nodes":[{"content":"Modulus operator.","pos":[0,17]}]},{"pos":[9527,9539],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9919,9943],"content":"Multiplication operator.","needQuote":true,"needEscape":true,"nodes":[{"content":"Multiplication operator.","pos":[0,24]}]},{"pos":[10057,10069],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10449,10470],"content":"Subtraction operator.","needQuote":true,"needEscape":true,"nodes":[{"content":"Subtraction operator.","pos":[0,21]}]},{"pos":[10584,10596],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11001,11022],"content":"Value equal operator.","needQuote":true,"needEscape":true,"nodes":[{"content":"Value equal operator.","pos":[0,21]}]},{"pos":[11141,11153],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.CodeDom.CodeBinaryOperatorType\n  id: CodeBinaryOperatorType\n  children:\n  - System.CodeDom.CodeBinaryOperatorType.Add\n  - System.CodeDom.CodeBinaryOperatorType.Assign\n  - System.CodeDom.CodeBinaryOperatorType.BitwiseAnd\n  - System.CodeDom.CodeBinaryOperatorType.BitwiseOr\n  - System.CodeDom.CodeBinaryOperatorType.BooleanAnd\n  - System.CodeDom.CodeBinaryOperatorType.BooleanOr\n  - System.CodeDom.CodeBinaryOperatorType.Divide\n  - System.CodeDom.CodeBinaryOperatorType.GreaterThan\n  - System.CodeDom.CodeBinaryOperatorType.GreaterThanOrEqual\n  - System.CodeDom.CodeBinaryOperatorType.IdentityEquality\n  - System.CodeDom.CodeBinaryOperatorType.IdentityInequality\n  - System.CodeDom.CodeBinaryOperatorType.LessThan\n  - System.CodeDom.CodeBinaryOperatorType.LessThanOrEqual\n  - System.CodeDom.CodeBinaryOperatorType.Modulus\n  - System.CodeDom.CodeBinaryOperatorType.Multiply\n  - System.CodeDom.CodeBinaryOperatorType.Subtract\n  - System.CodeDom.CodeBinaryOperatorType.ValueEquality\n  langs:\n  - csharp\n  name: CodeBinaryOperatorType\n  nameWithType: CodeBinaryOperatorType\n  fullName: System.CodeDom.CodeBinaryOperatorType\n  type: Enum\n  summary: Defines identifiers for supported binary operators.\n  remarks: CodeBinaryOperatorType defines identifiers for the most common types of binary operators. These operator identifiers are used by <xref:System.CodeDom.CodeBinaryOperatorExpression> to indicate the type of operator in each expression.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public enum CodeBinaryOperatorType\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.CodeDom.CodeBinaryOperatorType.Add\n  id: Add\n  parent: System.CodeDom.CodeBinaryOperatorType\n  langs:\n  - csharp\n  name: Add\n  nameWithType: CodeBinaryOperatorType.Add\n  fullName: System.CodeDom.CodeBinaryOperatorType.Add\n  type: Field\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Addition operator.\n  syntax:\n    content: Add\n    return:\n      type: System.CodeDom.CodeBinaryOperatorType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeBinaryOperatorType.Assign\n  id: Assign\n  parent: System.CodeDom.CodeBinaryOperatorType\n  langs:\n  - csharp\n  name: Assign\n  nameWithType: CodeBinaryOperatorType.Assign\n  fullName: System.CodeDom.CodeBinaryOperatorType.Assign\n  type: Field\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Assignment operator.\n  syntax:\n    content: Assign\n    return:\n      type: System.CodeDom.CodeBinaryOperatorType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeBinaryOperatorType.BitwiseAnd\n  id: BitwiseAnd\n  parent: System.CodeDom.CodeBinaryOperatorType\n  langs:\n  - csharp\n  name: BitwiseAnd\n  nameWithType: CodeBinaryOperatorType.BitwiseAnd\n  fullName: System.CodeDom.CodeBinaryOperatorType.BitwiseAnd\n  type: Field\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Bitwise and operator.\n  syntax:\n    content: BitwiseAnd\n    return:\n      type: System.CodeDom.CodeBinaryOperatorType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeBinaryOperatorType.BitwiseOr\n  id: BitwiseOr\n  parent: System.CodeDom.CodeBinaryOperatorType\n  langs:\n  - csharp\n  name: BitwiseOr\n  nameWithType: CodeBinaryOperatorType.BitwiseOr\n  fullName: System.CodeDom.CodeBinaryOperatorType.BitwiseOr\n  type: Field\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Bitwise or operator.\n  syntax:\n    content: BitwiseOr\n    return:\n      type: System.CodeDom.CodeBinaryOperatorType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeBinaryOperatorType.BooleanAnd\n  id: BooleanAnd\n  parent: System.CodeDom.CodeBinaryOperatorType\n  langs:\n  - csharp\n  name: BooleanAnd\n  nameWithType: CodeBinaryOperatorType.BooleanAnd\n  fullName: System.CodeDom.CodeBinaryOperatorType.BooleanAnd\n  type: Field\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Boolean and operator. This represents a short circuiting operator. A short circuiting operator will evaluate only as many expressions as necessary before returning a correct value.\n  syntax:\n    content: BooleanAnd\n    return:\n      type: System.CodeDom.CodeBinaryOperatorType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeBinaryOperatorType.BooleanOr\n  id: BooleanOr\n  parent: System.CodeDom.CodeBinaryOperatorType\n  langs:\n  - csharp\n  name: BooleanOr\n  nameWithType: CodeBinaryOperatorType.BooleanOr\n  fullName: System.CodeDom.CodeBinaryOperatorType.BooleanOr\n  type: Field\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Boolean or operator. This represents a short circuiting operator. A short circuiting operator will evaluate only as many expressions as necessary before returning a correct value.\n  syntax:\n    content: BooleanOr\n    return:\n      type: System.CodeDom.CodeBinaryOperatorType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeBinaryOperatorType.Divide\n  id: Divide\n  parent: System.CodeDom.CodeBinaryOperatorType\n  langs:\n  - csharp\n  name: Divide\n  nameWithType: CodeBinaryOperatorType.Divide\n  fullName: System.CodeDom.CodeBinaryOperatorType.Divide\n  type: Field\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Division operator.\n  syntax:\n    content: Divide\n    return:\n      type: System.CodeDom.CodeBinaryOperatorType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeBinaryOperatorType.GreaterThan\n  id: GreaterThan\n  parent: System.CodeDom.CodeBinaryOperatorType\n  langs:\n  - csharp\n  name: GreaterThan\n  nameWithType: CodeBinaryOperatorType.GreaterThan\n  fullName: System.CodeDom.CodeBinaryOperatorType.GreaterThan\n  type: Field\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Greater than operator.\n  syntax:\n    content: GreaterThan\n    return:\n      type: System.CodeDom.CodeBinaryOperatorType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeBinaryOperatorType.GreaterThanOrEqual\n  id: GreaterThanOrEqual\n  parent: System.CodeDom.CodeBinaryOperatorType\n  langs:\n  - csharp\n  name: GreaterThanOrEqual\n  nameWithType: CodeBinaryOperatorType.GreaterThanOrEqual\n  fullName: System.CodeDom.CodeBinaryOperatorType.GreaterThanOrEqual\n  type: Field\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Greater than or equal operator.\n  syntax:\n    content: GreaterThanOrEqual\n    return:\n      type: System.CodeDom.CodeBinaryOperatorType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeBinaryOperatorType.IdentityEquality\n  id: IdentityEquality\n  parent: System.CodeDom.CodeBinaryOperatorType\n  langs:\n  - csharp\n  name: IdentityEquality\n  nameWithType: CodeBinaryOperatorType.IdentityEquality\n  fullName: System.CodeDom.CodeBinaryOperatorType.IdentityEquality\n  type: Field\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Identity equal operator.\n  syntax:\n    content: IdentityEquality\n    return:\n      type: System.CodeDom.CodeBinaryOperatorType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeBinaryOperatorType.IdentityInequality\n  id: IdentityInequality\n  parent: System.CodeDom.CodeBinaryOperatorType\n  langs:\n  - csharp\n  name: IdentityInequality\n  nameWithType: CodeBinaryOperatorType.IdentityInequality\n  fullName: System.CodeDom.CodeBinaryOperatorType.IdentityInequality\n  type: Field\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Identity not equal operator.\n  syntax:\n    content: IdentityInequality\n    return:\n      type: System.CodeDom.CodeBinaryOperatorType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeBinaryOperatorType.LessThan\n  id: LessThan\n  parent: System.CodeDom.CodeBinaryOperatorType\n  langs:\n  - csharp\n  name: LessThan\n  nameWithType: CodeBinaryOperatorType.LessThan\n  fullName: System.CodeDom.CodeBinaryOperatorType.LessThan\n  type: Field\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Less than operator.\n  syntax:\n    content: LessThan\n    return:\n      type: System.CodeDom.CodeBinaryOperatorType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeBinaryOperatorType.LessThanOrEqual\n  id: LessThanOrEqual\n  parent: System.CodeDom.CodeBinaryOperatorType\n  langs:\n  - csharp\n  name: LessThanOrEqual\n  nameWithType: CodeBinaryOperatorType.LessThanOrEqual\n  fullName: System.CodeDom.CodeBinaryOperatorType.LessThanOrEqual\n  type: Field\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Less than or equal operator.\n  syntax:\n    content: LessThanOrEqual\n    return:\n      type: System.CodeDom.CodeBinaryOperatorType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeBinaryOperatorType.Modulus\n  id: Modulus\n  parent: System.CodeDom.CodeBinaryOperatorType\n  langs:\n  - csharp\n  name: Modulus\n  nameWithType: CodeBinaryOperatorType.Modulus\n  fullName: System.CodeDom.CodeBinaryOperatorType.Modulus\n  type: Field\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Modulus operator.\n  syntax:\n    content: Modulus\n    return:\n      type: System.CodeDom.CodeBinaryOperatorType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeBinaryOperatorType.Multiply\n  id: Multiply\n  parent: System.CodeDom.CodeBinaryOperatorType\n  langs:\n  - csharp\n  name: Multiply\n  nameWithType: CodeBinaryOperatorType.Multiply\n  fullName: System.CodeDom.CodeBinaryOperatorType.Multiply\n  type: Field\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Multiplication operator.\n  syntax:\n    content: Multiply\n    return:\n      type: System.CodeDom.CodeBinaryOperatorType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeBinaryOperatorType.Subtract\n  id: Subtract\n  parent: System.CodeDom.CodeBinaryOperatorType\n  langs:\n  - csharp\n  name: Subtract\n  nameWithType: CodeBinaryOperatorType.Subtract\n  fullName: System.CodeDom.CodeBinaryOperatorType.Subtract\n  type: Field\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Subtraction operator.\n  syntax:\n    content: Subtract\n    return:\n      type: System.CodeDom.CodeBinaryOperatorType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeBinaryOperatorType.ValueEquality\n  id: ValueEquality\n  parent: System.CodeDom.CodeBinaryOperatorType\n  langs:\n  - csharp\n  name: ValueEquality\n  nameWithType: CodeBinaryOperatorType.ValueEquality\n  fullName: System.CodeDom.CodeBinaryOperatorType.ValueEquality\n  type: Field\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Value equal operator.\n  syntax:\n    content: ValueEquality\n    return:\n      type: System.CodeDom.CodeBinaryOperatorType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.CodeDom.CodeBinaryOperatorType.Add\n  parent: System.CodeDom.CodeBinaryOperatorType\n  isExternal: false\n  name: Add\n  nameWithType: CodeBinaryOperatorType.Add\n  fullName: System.CodeDom.CodeBinaryOperatorType.Add\n- uid: System.CodeDom.CodeBinaryOperatorType\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeBinaryOperatorType\n  nameWithType: CodeBinaryOperatorType\n  fullName: System.CodeDom.CodeBinaryOperatorType\n- uid: System.CodeDom.CodeBinaryOperatorType.Assign\n  parent: System.CodeDom.CodeBinaryOperatorType\n  isExternal: false\n  name: Assign\n  nameWithType: CodeBinaryOperatorType.Assign\n  fullName: System.CodeDom.CodeBinaryOperatorType.Assign\n- uid: System.CodeDom.CodeBinaryOperatorType.BitwiseAnd\n  parent: System.CodeDom.CodeBinaryOperatorType\n  isExternal: false\n  name: BitwiseAnd\n  nameWithType: CodeBinaryOperatorType.BitwiseAnd\n  fullName: System.CodeDom.CodeBinaryOperatorType.BitwiseAnd\n- uid: System.CodeDom.CodeBinaryOperatorType.BitwiseOr\n  parent: System.CodeDom.CodeBinaryOperatorType\n  isExternal: false\n  name: BitwiseOr\n  nameWithType: CodeBinaryOperatorType.BitwiseOr\n  fullName: System.CodeDom.CodeBinaryOperatorType.BitwiseOr\n- uid: System.CodeDom.CodeBinaryOperatorType.BooleanAnd\n  parent: System.CodeDom.CodeBinaryOperatorType\n  isExternal: false\n  name: BooleanAnd\n  nameWithType: CodeBinaryOperatorType.BooleanAnd\n  fullName: System.CodeDom.CodeBinaryOperatorType.BooleanAnd\n- uid: System.CodeDom.CodeBinaryOperatorType.BooleanOr\n  parent: System.CodeDom.CodeBinaryOperatorType\n  isExternal: false\n  name: BooleanOr\n  nameWithType: CodeBinaryOperatorType.BooleanOr\n  fullName: System.CodeDom.CodeBinaryOperatorType.BooleanOr\n- uid: System.CodeDom.CodeBinaryOperatorType.Divide\n  parent: System.CodeDom.CodeBinaryOperatorType\n  isExternal: false\n  name: Divide\n  nameWithType: CodeBinaryOperatorType.Divide\n  fullName: System.CodeDom.CodeBinaryOperatorType.Divide\n- uid: System.CodeDom.CodeBinaryOperatorType.GreaterThan\n  parent: System.CodeDom.CodeBinaryOperatorType\n  isExternal: false\n  name: GreaterThan\n  nameWithType: CodeBinaryOperatorType.GreaterThan\n  fullName: System.CodeDom.CodeBinaryOperatorType.GreaterThan\n- uid: System.CodeDom.CodeBinaryOperatorType.GreaterThanOrEqual\n  parent: System.CodeDom.CodeBinaryOperatorType\n  isExternal: false\n  name: GreaterThanOrEqual\n  nameWithType: CodeBinaryOperatorType.GreaterThanOrEqual\n  fullName: System.CodeDom.CodeBinaryOperatorType.GreaterThanOrEqual\n- uid: System.CodeDom.CodeBinaryOperatorType.IdentityEquality\n  parent: System.CodeDom.CodeBinaryOperatorType\n  isExternal: false\n  name: IdentityEquality\n  nameWithType: CodeBinaryOperatorType.IdentityEquality\n  fullName: System.CodeDom.CodeBinaryOperatorType.IdentityEquality\n- uid: System.CodeDom.CodeBinaryOperatorType.IdentityInequality\n  parent: System.CodeDom.CodeBinaryOperatorType\n  isExternal: false\n  name: IdentityInequality\n  nameWithType: CodeBinaryOperatorType.IdentityInequality\n  fullName: System.CodeDom.CodeBinaryOperatorType.IdentityInequality\n- uid: System.CodeDom.CodeBinaryOperatorType.LessThan\n  parent: System.CodeDom.CodeBinaryOperatorType\n  isExternal: false\n  name: LessThan\n  nameWithType: CodeBinaryOperatorType.LessThan\n  fullName: System.CodeDom.CodeBinaryOperatorType.LessThan\n- uid: System.CodeDom.CodeBinaryOperatorType.LessThanOrEqual\n  parent: System.CodeDom.CodeBinaryOperatorType\n  isExternal: false\n  name: LessThanOrEqual\n  nameWithType: CodeBinaryOperatorType.LessThanOrEqual\n  fullName: System.CodeDom.CodeBinaryOperatorType.LessThanOrEqual\n- uid: System.CodeDom.CodeBinaryOperatorType.Modulus\n  parent: System.CodeDom.CodeBinaryOperatorType\n  isExternal: false\n  name: Modulus\n  nameWithType: CodeBinaryOperatorType.Modulus\n  fullName: System.CodeDom.CodeBinaryOperatorType.Modulus\n- uid: System.CodeDom.CodeBinaryOperatorType.Multiply\n  parent: System.CodeDom.CodeBinaryOperatorType\n  isExternal: false\n  name: Multiply\n  nameWithType: CodeBinaryOperatorType.Multiply\n  fullName: System.CodeDom.CodeBinaryOperatorType.Multiply\n- uid: System.CodeDom.CodeBinaryOperatorType.Subtract\n  parent: System.CodeDom.CodeBinaryOperatorType\n  isExternal: false\n  name: Subtract\n  nameWithType: CodeBinaryOperatorType.Subtract\n  fullName: System.CodeDom.CodeBinaryOperatorType.Subtract\n- uid: System.CodeDom.CodeBinaryOperatorType.ValueEquality\n  parent: System.CodeDom.CodeBinaryOperatorType\n  isExternal: false\n  name: ValueEquality\n  nameWithType: CodeBinaryOperatorType.ValueEquality\n  fullName: System.CodeDom.CodeBinaryOperatorType.ValueEquality\n"}