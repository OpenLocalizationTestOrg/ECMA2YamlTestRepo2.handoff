{"nodes":[{"pos":[847,937],"content":"Contains a collection of <bpt id=\"p1\">&lt;xref href=\"System.Web.Configuration.TagMapInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"Contains a collection of <xref href=\"System.Web.Configuration.TagMapInfo\"></xref> objects."},{"pos":[950,1680],"content":"The <xref:System.Web.Configuration.TagMapInfo> class allows you to remap the types of tags at compile time. This remapping causes the mapped type to be used in place of the original tag type for all pages and controls in the ASP.NET application in the scope of the configuration file.       The TagMapCollection class allows you to programmatically access and modify the `tagMapping` subsection of the `pages` section of a configuration file. Within the `tagMapping` subsection, you can add and remove mappings between tag types by specifying the fully qualified strong names of the types.      > [!NOTE] >  Unlike other attributes and collections in the `pages` section, tag remapping has no matching ASP.NET page directive.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.Configuration.TagMapInfo&gt; class allows you to remap the types of tags at compile time.","pos":[0,107],"source":"The <xref:System.Web.Configuration.TagMapInfo> class allows you to remap the types of tags at compile time."},{"content":"This remapping causes the mapped type to be used in place of the original tag type for all pages and controls in the ASP.NET application in the scope of the configuration file.","pos":[108,284]},{"content":"The TagMapCollection class allows you to programmatically access and modify the <ph id=\"ph1\">`tagMapping`</ph> subsection of the <ph id=\"ph2\">`pages`</ph> section of a configuration file.","pos":[291,442],"source":"       The TagMapCollection class allows you to programmatically access and modify the `tagMapping` subsection of the `pages` section of a configuration file."},{"content":"Within the <ph id=\"ph1\">`tagMapping`</ph> subsection, you can add and remove mappings between tag types by specifying the fully qualified strong names of the types.","pos":[443,589],"source":" Within the `tagMapping` subsection, you can add and remove mappings between tag types by specifying the fully qualified strong names of the types."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Unlike other attributes and collections in the <ph id=\"ph2\">`pages`</ph> section, tag remapping has no matching ASP.NET page directive.","pos":[595,725],"source":"      > [!NOTE] >  Unlike other attributes and collections in the `pages` section, tag remapping has no matching ASP.NET page directive."}]},{"pos":[8751,8854],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Configuration.TagMapCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Configuration.TagMapCollection\"></xref> class."},{"pos":[8866,9135],"content":"The <xref:System.Web.Configuration.PagesSection.TagMapping%2A> property of the <xref:System.Web.Configuration.PagesSection> class always contains an instance of the <xref:System.Web.Configuration.TagMapCollection> type. Use this instance, rather than creating your own.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.Web.Configuration.PagesSection.TagMapping%2A> property of the <xref:System.Web.Configuration.PagesSection> class always contains an instance of the <xref:System.Web.Configuration.TagMapCollection> type. Use this instance, rather than creating your own.","pos":[0,269],"nodes":[{"content":"The &lt;xref:System.Web.Configuration.PagesSection.TagMapping%2A&gt; property of the &lt;xref:System.Web.Configuration.PagesSection&gt; class always contains an instance of the &lt;xref:System.Web.Configuration.TagMapCollection&gt; type.","pos":[0,219],"source":"The <xref:System.Web.Configuration.PagesSection.TagMapping%2A> property of the <xref:System.Web.Configuration.PagesSection> class always contains an instance of the <xref:System.Web.Configuration.TagMapCollection> type."},{"content":"Use this instance, rather than creating your own.","pos":[220,269]}]}]},{"pos":[9752,9841],"content":"Adds a <bpt id=\"p1\">&lt;xref href=\"System.Web.Configuration.TagMapInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to the collection.","needQuote":true,"needEscape":true,"source":"Adds a <xref href=\"System.Web.Configuration.TagMapInfo\"></xref> object to the collection."},{"pos":[9853,10109],"content":"The collection must not already contain a <xref:System.Web.Configuration.TagMapInfo> object with the same <xref:System.Web.Configuration.TagMapInfo.TagType%2A> property value. If it does, a <xref:System.Configuration.ConfigurationException> will be thrown.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The collection must not already contain a <xref:System.Web.Configuration.TagMapInfo> object with the same <xref:System.Web.Configuration.TagMapInfo.TagType%2A> property value. If it does, a <xref:System.Configuration.ConfigurationException> will be thrown.","pos":[0,256],"nodes":[{"content":"The collection must not already contain a &lt;xref:System.Web.Configuration.TagMapInfo&gt; object with the same &lt;xref:System.Web.Configuration.TagMapInfo.TagType%2A&gt; property value.","pos":[0,175],"source":"The collection must not already contain a <xref:System.Web.Configuration.TagMapInfo> object with the same <xref:System.Web.Configuration.TagMapInfo.TagType%2A> property value."},{"content":"If it does, a &lt;xref:System.Configuration.ConfigurationException&gt; will be thrown.","pos":[176,256],"source":" If it does, a <xref:System.Configuration.ConfigurationException> will be thrown."}]}]},{"pos":[10742,10833],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.Configuration.TagMapInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to add to the collection.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.Configuration.TagMapInfo\"></xref> object to add to the collection."},{"pos":[11580,11618],"content":"Clears all object from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears all object from the collection.","pos":[0,38]}]},{"pos":[12388,12400],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13262,13274],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13332,13344],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13845,13958],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Web.Configuration.TagMapInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object at the specified index location.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Web.Configuration.TagMapInfo\"></xref> object at the specified index location."},{"pos":[13970,14158],"content":"If a <xref:System.Web.Configuration.TagMapInfo> object already exists at the specified index, this property overwrites it; otherwise, it creates a new object and adds it to the collection.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If a &lt;xref:System.Web.Configuration.TagMapInfo&gt; object already exists at the specified index, this property overwrites it; otherwise, it creates a new object and adds it to the collection.","pos":[0,188],"source":"If a <xref:System.Web.Configuration.TagMapInfo> object already exists at the specified index, this property overwrites it; otherwise, it creates a new object and adds it to the collection."}]},{"pos":[14760,14857],"content":"The index of a <bpt id=\"p1\">&lt;xref href=\"System.Web.Configuration.TagMapInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object in the collection.","needQuote":true,"needEscape":true,"source":"The index of a <xref href=\"System.Web.Configuration.TagMapInfo\"></xref> object in the collection."},{"pos":[14937,15129],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.Configuration.TagMapInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object at the specified index, or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if there is no object at that index.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.Configuration.TagMapInfo\"></xref> object at the specified index, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is no object at that index."},{"pos":[15802,15814],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16381,16430],"content":"Removes the specified object from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the specified object from the collection.","pos":[0,49]}]},{"pos":[16641,16725],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.Configuration.TagMapInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object in the collection.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.Configuration.TagMapInfo\"></xref> object in the collection."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Configuration.TagMapCollection\n  id: TagMapCollection\n  children:\n  - System.Web.Configuration.TagMapCollection.#ctor\n  - System.Web.Configuration.TagMapCollection.Add(System.Web.Configuration.TagMapInfo)\n  - System.Web.Configuration.TagMapCollection.Clear\n  - System.Web.Configuration.TagMapCollection.CreateNewElement\n  - System.Web.Configuration.TagMapCollection.GetElementKey(System.Configuration.ConfigurationElement)\n  - System.Web.Configuration.TagMapCollection.Item(System.Int32)\n  - System.Web.Configuration.TagMapCollection.Properties\n  - System.Web.Configuration.TagMapCollection.Remove(System.Web.Configuration.TagMapInfo)\n  langs:\n  - csharp\n  name: TagMapCollection\n  nameWithType: TagMapCollection\n  fullName: System.Web.Configuration.TagMapCollection\n  type: Class\n  summary: Contains a collection of <xref href=\"System.Web.Configuration.TagMapInfo\"></xref> objects.\n  remarks: \"The <xref:System.Web.Configuration.TagMapInfo> class allows you to remap the types of tags at compile time. This remapping causes the mapped type to be used in place of the original tag type for all pages and controls in the ASP.NET application in the scope of the configuration file.  \\n  \\n The TagMapCollection class allows you to programmatically access and modify the `tagMapping` subsection of the `pages` section of a configuration file. Within the `tagMapping` subsection, you can add and remove mappings between tag types by specifying the fully qualified strong names of the types.  \\n  \\n> [!NOTE]\\n>  Unlike other attributes and collections in the `pages` section, tag remapping has no matching ASP.NET page directive.\"\n  example:\n  - \"The following configuration file excerpt shows how to declaratively specify values for several properties of the TagMapCollection type.  \\n  \\n```  \\n<system.web>  \\n  <pages>  \\n    <tagMapping>  \\n      <clear />  \\n      <add  \\n        tagType=  \\n          \\\"System.Web.UI.WebControls.WebParts.WebPartManager\\\"  \\n        mappedTagType=  \\n          \\\"Microsoft.Sharepoint.WebPartPartManager,   \\n           MSPS.Web.dll, Version='2.0.0.0'\\\"   \\n      />  \\n      <remove tagType=\\\"SomeOtherNS.Class, Assemblyname\\\" />  \\n    </tagMapping>  \\n   </pages>  \\n</system.web>  \\n```  \\n  \\n The following code example shows how to use the TagMapCollection class to programmatically modify tag-mapping settings. This code example is part of a larger example provided for the <xref:System.Web.Configuration.PagesSection> class.  \\n  \\n [!code-cs[System.Web.Configuration.PagesSection#17](~/add/codesnippet/csharp/t-system.web.configurati_62_1.cs)]\\n [!code-vb[System.Web.Configuration.PagesSection#17](~/add/codesnippet/visualbasic/t-system.web.configurati_62_1.vb)]\"\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationCollection(typeof(System.Web.Configuration.TagMapInfo))]\n\n      public sealed class TagMapCollection : System.Configuration.ConfigurationElementCollection\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  - System.Configuration.ConfigurationElementCollection\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElementCollection.AddElementName\n  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)\n  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElementCollection.BaseClear\n  - System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)\n  - System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)\n  - System.Configuration.ConfigurationElementCollection.BaseGetAllKeys\n  - System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)\n  - System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)\n  - System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)\n  - System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)\n  - System.Configuration.ConfigurationElementCollection.ClearElementName\n  - System.Configuration.ConfigurationElementCollection.CollectionType\n  - System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)\n  - System.Configuration.ConfigurationElementCollection.Count\n  - System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)\n  - System.Configuration.ConfigurationElementCollection.ElementName\n  - System.Configuration.ConfigurationElementCollection.EmitClear\n  - System.Configuration.ConfigurationElementCollection.Equals(System.Object)\n  - System.Configuration.ConfigurationElementCollection.GetEnumerator\n  - System.Configuration.ConfigurationElementCollection.GetHashCode\n  - System.Configuration.ConfigurationElementCollection.IsElementName(System.String)\n  - System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElementCollection.IsModified\n  - System.Configuration.ConfigurationElementCollection.IsReadOnly\n  - System.Configuration.ConfigurationElementCollection.IsSynchronized\n  - System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElementCollection.RemoveElementName\n  - System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElementCollection.ResetModified\n  - System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElementCollection.SetReadOnly\n  - System.Configuration.ConfigurationElementCollection.SyncRoot\n  - System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate\n  - System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  platform:\n  - net462\n- uid: System.Web.Configuration.TagMapCollection.#ctor\n  id: '#ctor'\n  parent: System.Web.Configuration.TagMapCollection\n  langs:\n  - csharp\n  name: TagMapCollection()\n  nameWithType: TagMapCollection.TagMapCollection()\n  fullName: System.Web.Configuration.TagMapCollection.TagMapCollection()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Web.Configuration.TagMapCollection\"></xref> class.\n  remarks: The <xref:System.Web.Configuration.PagesSection.TagMapping%2A> property of the <xref:System.Web.Configuration.PagesSection> class always contains an instance of the <xref:System.Web.Configuration.TagMapCollection> type. Use this instance, rather than creating your own.\n  syntax:\n    content: public TagMapCollection ();\n    parameters: []\n  overload: System.Web.Configuration.TagMapCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.TagMapCollection.Add(System.Web.Configuration.TagMapInfo)\n  id: Add(System.Web.Configuration.TagMapInfo)\n  parent: System.Web.Configuration.TagMapCollection\n  langs:\n  - csharp\n  name: Add(TagMapInfo)\n  nameWithType: TagMapCollection.Add(TagMapInfo)\n  fullName: System.Web.Configuration.TagMapCollection.Add(TagMapInfo)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Adds a <xref href=\"System.Web.Configuration.TagMapInfo\"></xref> object to the collection.\n  remarks: The collection must not already contain a <xref:System.Web.Configuration.TagMapInfo> object with the same <xref:System.Web.Configuration.TagMapInfo.TagType%2A> property value. If it does, a <xref:System.Configuration.ConfigurationException> will be thrown.\n  example:\n  - \"The following code example shows how to use the Add method. This code example is part of a larger example provided for the <xref:System.Web.Configuration.PagesSection> class.  \\n  \\n [!code-cs[System.Web.Configuration.PagesSection#42](~/add/codesnippet/csharp/355b41cd-8c30-46e6-ad2a-_1.cs)]\\n [!code-vb[System.Web.Configuration.PagesSection#42](~/add/codesnippet/visualbasic/355b41cd-8c30-46e6-ad2a-_1.vb)]\"\n  syntax:\n    content: public void Add (System.Web.Configuration.TagMapInfo tagMapInformation);\n    parameters:\n    - id: tagMapInformation\n      type: System.Web.Configuration.TagMapInfo\n      description: A <xref href=\"System.Web.Configuration.TagMapInfo\"></xref> object to add to the collection.\n  overload: System.Web.Configuration.TagMapCollection.Add*\n  exceptions:\n  - type: System.Configuration.ConfigurationException\n    commentId: T:System.Configuration.ConfigurationException\n    description: \"The <xref href=\\\"System.Web.Configuration.TagMapInfo\\\"></xref> object to add already exists in the collection.  \\n  \\n \\\\- or -  \\n  \\n The collection is read-only.\"\n  platform:\n  - net462\n- uid: System.Web.Configuration.TagMapCollection.Clear\n  id: Clear\n  parent: System.Web.Configuration.TagMapCollection\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: TagMapCollection.Clear()\n  fullName: System.Web.Configuration.TagMapCollection.Clear()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Clears all object from the collection.\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Web.Configuration.TagMapCollection.Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.TagMapCollection.CreateNewElement\n  id: CreateNewElement\n  parent: System.Web.Configuration.TagMapCollection\n  langs:\n  - csharp\n  name: CreateNewElement()\n  nameWithType: TagMapCollection.CreateNewElement()\n  fullName: System.Web.Configuration.TagMapCollection.CreateNewElement()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationElement CreateNewElement ();\n    parameters: []\n    return:\n      type: System.Configuration.ConfigurationElement\n      description: To be added.\n  overload: System.Web.Configuration.TagMapCollection.CreateNewElement*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.TagMapCollection.GetElementKey(System.Configuration.ConfigurationElement)\n  id: GetElementKey(System.Configuration.ConfigurationElement)\n  parent: System.Web.Configuration.TagMapCollection\n  langs:\n  - csharp\n  name: GetElementKey(ConfigurationElement)\n  nameWithType: TagMapCollection.GetElementKey(ConfigurationElement)\n  fullName: System.Web.Configuration.TagMapCollection.GetElementKey(ConfigurationElement)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  syntax:\n    content: protected override object GetElementKey (System.Configuration.ConfigurationElement element);\n    parameters:\n    - id: element\n      type: System.Configuration.ConfigurationElement\n      description: To be added.\n    return:\n      type: System.Object\n      description: To be added.\n  overload: System.Web.Configuration.TagMapCollection.GetElementKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.TagMapCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Web.Configuration.TagMapCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: TagMapCollection.Item(Int32)\n  fullName: System.Web.Configuration.TagMapCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets the <xref href=\"System.Web.Configuration.TagMapInfo\"></xref> object at the specified index location.\n  remarks: If a <xref:System.Web.Configuration.TagMapInfo> object already exists at the specified index, this property overwrites it; otherwise, it creates a new object and adds it to the collection.\n  example:\n  - \"The following code example shows how to use the Item property. This example is part of a larger example provided for the <xref:System.Web.Configuration.PagesSection> class.  \\n  \\n [!code-cs[System.Web.Configuration.PagesSection#40](~/add/codesnippet/csharp/p-system.web.configurati_16_1.cs)]\\n [!code-vb[System.Web.Configuration.PagesSection#40](~/add/codesnippet/visualbasic/p-system.web.configurati_16_1.vb)]\"\n  syntax:\n    content: public System.Web.Configuration.TagMapInfo this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index of a <xref href=\"System.Web.Configuration.TagMapInfo\"></xref> object in the collection.\n    return:\n      type: System.Web.Configuration.TagMapInfo\n      description: The <xref href=\"System.Web.Configuration.TagMapInfo\"></xref> object at the specified index, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is no object at that index.\n  overload: System.Web.Configuration.TagMapCollection.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.TagMapCollection.Properties\n  id: Properties\n  parent: System.Web.Configuration.TagMapCollection\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: TagMapCollection.Properties\n  fullName: System.Web.Configuration.TagMapCollection.Properties\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: To be added.\n  overload: System.Web.Configuration.TagMapCollection.Properties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.TagMapCollection.Remove(System.Web.Configuration.TagMapInfo)\n  id: Remove(System.Web.Configuration.TagMapInfo)\n  parent: System.Web.Configuration.TagMapCollection\n  langs:\n  - csharp\n  name: Remove(TagMapInfo)\n  nameWithType: TagMapCollection.Remove(TagMapInfo)\n  fullName: System.Web.Configuration.TagMapCollection.Remove(TagMapInfo)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Removes the specified object from the collection.\n  syntax:\n    content: public void Remove (System.Web.Configuration.TagMapInfo tagMapInformation);\n    parameters:\n    - id: tagMapInformation\n      type: System.Web.Configuration.TagMapInfo\n      description: A <xref href=\"System.Web.Configuration.TagMapInfo\"></xref> object in the collection.\n  overload: System.Web.Configuration.TagMapCollection.Remove*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: System.Configuration.ConfigurationElementCollection\n- uid: System.Configuration.ConfigurationException\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationException\n  nameWithType: ConfigurationException\n  fullName: System.Configuration.ConfigurationException\n- uid: System.Web.Configuration.TagMapCollection.#ctor\n  parent: System.Web.Configuration.TagMapCollection\n  isExternal: false\n  name: TagMapCollection()\n  nameWithType: TagMapCollection.TagMapCollection()\n  fullName: System.Web.Configuration.TagMapCollection.TagMapCollection()\n- uid: System.Web.Configuration.TagMapCollection.Add(System.Web.Configuration.TagMapInfo)\n  parent: System.Web.Configuration.TagMapCollection\n  isExternal: false\n  name: Add(TagMapInfo)\n  nameWithType: TagMapCollection.Add(TagMapInfo)\n  fullName: System.Web.Configuration.TagMapCollection.Add(TagMapInfo)\n- uid: System.Web.Configuration.TagMapInfo\n  parent: System.Web.Configuration\n  isExternal: false\n  name: TagMapInfo\n  nameWithType: TagMapInfo\n  fullName: System.Web.Configuration.TagMapInfo\n- uid: System.Web.Configuration.TagMapCollection.Clear\n  parent: System.Web.Configuration.TagMapCollection\n  isExternal: false\n  name: Clear()\n  nameWithType: TagMapCollection.Clear()\n  fullName: System.Web.Configuration.TagMapCollection.Clear()\n- uid: System.Web.Configuration.TagMapCollection.CreateNewElement\n  parent: System.Web.Configuration.TagMapCollection\n  isExternal: false\n  name: CreateNewElement()\n  nameWithType: TagMapCollection.CreateNewElement()\n  fullName: System.Web.Configuration.TagMapCollection.CreateNewElement()\n- uid: System.Configuration.ConfigurationElement\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationElement\n  nameWithType: ConfigurationElement\n  fullName: System.Configuration.ConfigurationElement\n- uid: System.Web.Configuration.TagMapCollection.GetElementKey(System.Configuration.ConfigurationElement)\n  parent: System.Web.Configuration.TagMapCollection\n  isExternal: false\n  name: GetElementKey(ConfigurationElement)\n  nameWithType: TagMapCollection.GetElementKey(ConfigurationElement)\n  fullName: System.Web.Configuration.TagMapCollection.GetElementKey(ConfigurationElement)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.Configuration.TagMapCollection.Item(System.Int32)\n  parent: System.Web.Configuration.TagMapCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: TagMapCollection.Item(Int32)\n  fullName: System.Web.Configuration.TagMapCollection.Item(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.Configuration.TagMapCollection.Properties\n  parent: System.Web.Configuration.TagMapCollection\n  isExternal: false\n  name: Properties\n  nameWithType: TagMapCollection.Properties\n  fullName: System.Web.Configuration.TagMapCollection.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.Web.Configuration.TagMapCollection.Remove(System.Web.Configuration.TagMapInfo)\n  parent: System.Web.Configuration.TagMapCollection\n  isExternal: false\n  name: Remove(TagMapInfo)\n  nameWithType: TagMapCollection.Remove(TagMapInfo)\n  fullName: System.Web.Configuration.TagMapCollection.Remove(TagMapInfo)\n- uid: System.Web.Configuration.TagMapCollection.#ctor*\n  parent: System.Web.Configuration.TagMapCollection\n  isExternal: false\n  name: TagMapCollection\n  nameWithType: TagMapCollection.TagMapCollection\n- uid: System.Web.Configuration.TagMapCollection.Add*\n  parent: System.Web.Configuration.TagMapCollection\n  isExternal: false\n  name: Add\n  nameWithType: TagMapCollection.Add\n- uid: System.Web.Configuration.TagMapCollection.Clear*\n  parent: System.Web.Configuration.TagMapCollection\n  isExternal: false\n  name: Clear\n  nameWithType: TagMapCollection.Clear\n- uid: System.Web.Configuration.TagMapCollection.CreateNewElement*\n  parent: System.Web.Configuration.TagMapCollection\n  isExternal: false\n  name: CreateNewElement\n  nameWithType: TagMapCollection.CreateNewElement\n- uid: System.Web.Configuration.TagMapCollection.GetElementKey*\n  parent: System.Web.Configuration.TagMapCollection\n  isExternal: false\n  name: GetElementKey\n  nameWithType: TagMapCollection.GetElementKey\n- uid: System.Web.Configuration.TagMapCollection.Item*\n  parent: System.Web.Configuration.TagMapCollection\n  isExternal: false\n  name: Item\n  nameWithType: TagMapCollection.Item\n- uid: System.Web.Configuration.TagMapCollection.Properties*\n  parent: System.Web.Configuration.TagMapCollection\n  isExternal: false\n  name: Properties\n  nameWithType: TagMapCollection.Properties\n- uid: System.Web.Configuration.TagMapCollection.Remove*\n  parent: System.Web.Configuration.TagMapCollection\n  isExternal: false\n  name: Remove\n  nameWithType: TagMapCollection.Remove\n"}