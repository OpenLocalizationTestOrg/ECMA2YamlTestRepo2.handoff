{"nodes":[{"pos":[573,655],"content":"Contains arguments for the <xref:System.Windows.DragDrop.QueryContinueDrag> event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains arguments for the &lt;xref:System.Windows.DragDrop.QueryContinueDrag&gt; event.","pos":[0,82],"source":"Contains arguments for the <xref:System.Windows.DragDrop.QueryContinueDrag> event."}]},{"pos":[667,861],"content":"The <xref:System.Windows.DragDrop.QueryContinueDrag> event occurs during a drag-and-drop operation and allows the drag source to determine whether the drag-and-drop operation should be canceled.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Windows.DragDrop.QueryContinueDrag&gt; event occurs during a drag-and-drop operation and allows the drag source to determine whether the drag-and-drop operation should be canceled.","pos":[0,194],"source":"The <xref:System.Windows.DragDrop.QueryContinueDrag> event occurs during a drag-and-drop operation and allows the drag source to determine whether the drag-and-drop operation should be canceled."}]},{"pos":[1700,1774],"content":"Gets or sets the current status of the associated drag-and-drop operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the current status of the associated drag-and-drop operation.","pos":[0,74]}]},{"pos":[1786,2002],"content":"By default, the &lt;xref:System.Windows.DragDrop.QueryContinueDrag&gt; event sets the Action property to <ph id=\"ph1\">`Cancel`</ph> if the ESC key is pressed, and sets Action to <ph id=\"ph2\">`Drop`</ph> if the left, middle, or right mouse button is released.","needQuote":true,"needEscape":true,"extradata":"MT","source":"By default, the <xref:System.Windows.DragDrop.QueryContinueDrag> event sets the Action property to `Cancel` if the ESC key is pressed, and sets Action to `Drop` if the left, middle, or right mouse button is released."},{"pos":[2149,2296],"content":"A member of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.DragAction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration indicating the current status of the associated drag-and-drop operation.","needQuote":true,"needEscape":true,"source":"A member of the <xref href=\"System.Windows.DragAction\"></xref> enumeration indicating the current status of the associated drag-and-drop operation."},{"pos":[2792,2861],"content":"Gets a Boolean value indicating whether the ESC key has been pressed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a Boolean value indicating whether the ESC key has been pressed.","pos":[0,69]}]},{"pos":[2873,3059],"content":"By default, the &lt;xref:System.Windows.DragDrop.QueryContinueDrag&gt; event sets the &lt;xref:System.Windows.QueryContinueDragEventArgs.Action%2A&gt; property to <ph id=\"ph1\">`Cancel`</ph> if the ESC key is pressed.","needQuote":true,"needEscape":true,"extradata":"MT","source":"By default, the <xref:System.Windows.DragDrop.QueryContinueDrag> event sets the <xref:System.Windows.QueryContinueDragEventArgs.Action%2A> property to `Cancel` if the ESC key is pressed."},{"pos":[3176,3400],"content":"A Boolean value indicating whether the ESC key has been pressed. <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the ESC was pressed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A Boolean value indicating whether the ESC key has been pressed.","pos":[0,64]},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the ESC was pressed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[65,224],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the ESC was pressed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[4231,4243],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4313,4325],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4813,4942],"content":"Gets a flag enumeration indicating the current state of the SHIFT, CTRL, and ALT keys, as well as the state of the mouse buttons.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a flag enumeration indicating the current state of the SHIFT, CTRL, and ALT keys, as well as the state of the mouse buttons.","pos":[0,129]}]},{"pos":[4954,5193],"content":"The effect of a drag-and-drop operation can be adjusted depending on the state of a particular key. For example, data may either be copied or moved depending on whether the CTRL or SHIFT keys are pressed during the drag-and-drop operation.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The effect of a drag-and-drop operation can be adjusted depending on the state of a particular key. For example, data may either be copied or moved depending on whether the CTRL or SHIFT keys are pressed during the drag-and-drop operation.","pos":[0,239],"nodes":[{"content":"The effect of a drag-and-drop operation can be adjusted depending on the state of a particular key.","pos":[0,99]},{"content":"For example, data may either be copied or moved depending on whether the CTRL or SHIFT keys are pressed during the drag-and-drop operation.","pos":[100,239]}]}]},{"pos":[5352,5450],"content":"One or more members of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.DragDropKeyStates\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> flag enumeration.","needQuote":true,"needEscape":true,"source":"One or more members of the <xref href=\"System.Windows.DragDropKeyStates\"></xref> flag enumeration."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.QueryContinueDragEventArgs\n  id: QueryContinueDragEventArgs\n  children:\n  - System.Windows.QueryContinueDragEventArgs.Action\n  - System.Windows.QueryContinueDragEventArgs.EscapePressed\n  - System.Windows.QueryContinueDragEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  - System.Windows.QueryContinueDragEventArgs.KeyStates\n  langs:\n  - csharp\n  name: QueryContinueDragEventArgs\n  nameWithType: QueryContinueDragEventArgs\n  fullName: System.Windows.QueryContinueDragEventArgs\n  type: Class\n  summary: Contains arguments for the <xref:System.Windows.DragDrop.QueryContinueDrag> event.\n  remarks: The <xref:System.Windows.DragDrop.QueryContinueDrag> event occurs during a drag-and-drop operation and allows the drag source to determine whether the drag-and-drop operation should be canceled.\n  syntax:\n    content: 'public sealed class QueryContinueDragEventArgs : System.Windows.RoutedEventArgs'\n  inheritance:\n  - System.EventArgs\n  - System.Windows.RoutedEventArgs\n  implements: []\n  inheritedMembers:\n  - System.Windows.RoutedEventArgs.Handled\n  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)\n  - System.Windows.RoutedEventArgs.OriginalSource\n  - System.Windows.RoutedEventArgs.RoutedEvent\n  - System.Windows.RoutedEventArgs.Source\n  platform:\n  - net462\n- uid: System.Windows.QueryContinueDragEventArgs.Action\n  id: Action\n  parent: System.Windows.QueryContinueDragEventArgs\n  langs:\n  - csharp\n  name: Action\n  nameWithType: QueryContinueDragEventArgs.Action\n  fullName: System.Windows.QueryContinueDragEventArgs.Action\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets or sets the current status of the associated drag-and-drop operation.\n  remarks: By default, the <xref:System.Windows.DragDrop.QueryContinueDrag> event sets the Action property to `Cancel` if the ESC key is pressed, and sets Action to `Drop` if the left, middle, or right mouse button is released.\n  syntax:\n    content: public System.Windows.DragAction Action { get; set; }\n    return:\n      type: System.Windows.DragAction\n      description: A member of the <xref href=\"System.Windows.DragAction\"></xref> enumeration indicating the current status of the associated drag-and-drop operation.\n  overload: System.Windows.QueryContinueDragEventArgs.Action*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.QueryContinueDragEventArgs.EscapePressed\n  id: EscapePressed\n  parent: System.Windows.QueryContinueDragEventArgs\n  langs:\n  - csharp\n  name: EscapePressed\n  nameWithType: QueryContinueDragEventArgs.EscapePressed\n  fullName: System.Windows.QueryContinueDragEventArgs.EscapePressed\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets a Boolean value indicating whether the ESC key has been pressed.\n  remarks: By default, the <xref:System.Windows.DragDrop.QueryContinueDrag> event sets the <xref:System.Windows.QueryContinueDragEventArgs.Action%2A> property to `Cancel` if the ESC key is pressed.\n  syntax:\n    content: public bool EscapePressed { get; }\n    return:\n      type: System.Boolean\n      description: A Boolean value indicating whether the ESC key has been pressed. <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the ESC was pressed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.QueryContinueDragEventArgs.EscapePressed*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.QueryContinueDragEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  id: InvokeEventHandler(System.Delegate,System.Object)\n  parent: System.Windows.QueryContinueDragEventArgs\n  langs:\n  - csharp\n  name: InvokeEventHandler(Delegate,Object)\n  nameWithType: QueryContinueDragEventArgs.InvokeEventHandler(Delegate,Object)\n  fullName: System.Windows.QueryContinueDragEventArgs.InvokeEventHandler(Delegate,Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);\n    parameters:\n    - id: genericHandler\n      type: System.Delegate\n      description: To be added.\n    - id: genericTarget\n      type: System.Object\n      description: To be added.\n  overload: System.Windows.QueryContinueDragEventArgs.InvokeEventHandler*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.QueryContinueDragEventArgs.KeyStates\n  id: KeyStates\n  parent: System.Windows.QueryContinueDragEventArgs\n  langs:\n  - csharp\n  name: KeyStates\n  nameWithType: QueryContinueDragEventArgs.KeyStates\n  fullName: System.Windows.QueryContinueDragEventArgs.KeyStates\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets a flag enumeration indicating the current state of the SHIFT, CTRL, and ALT keys, as well as the state of the mouse buttons.\n  remarks: The effect of a drag-and-drop operation can be adjusted depending on the state of a particular key. For example, data may either be copied or moved depending on whether the CTRL or SHIFT keys are pressed during the drag-and-drop operation.\n  syntax:\n    content: public System.Windows.DragDropKeyStates KeyStates { get; }\n    return:\n      type: System.Windows.DragDropKeyStates\n      description: One or more members of the <xref href=\"System.Windows.DragDropKeyStates\"></xref> flag enumeration.\n  overload: System.Windows.QueryContinueDragEventArgs.KeyStates*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: System.Windows.RoutedEventArgs\n- uid: System.Windows.QueryContinueDragEventArgs.Action\n  parent: System.Windows.QueryContinueDragEventArgs\n  isExternal: false\n  name: Action\n  nameWithType: QueryContinueDragEventArgs.Action\n  fullName: System.Windows.QueryContinueDragEventArgs.Action\n- uid: System.Windows.DragAction\n  parent: System.Windows\n  isExternal: false\n  name: DragAction\n  nameWithType: DragAction\n  fullName: System.Windows.DragAction\n- uid: System.Windows.QueryContinueDragEventArgs.EscapePressed\n  parent: System.Windows.QueryContinueDragEventArgs\n  isExternal: false\n  name: EscapePressed\n  nameWithType: QueryContinueDragEventArgs.EscapePressed\n  fullName: System.Windows.QueryContinueDragEventArgs.EscapePressed\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.QueryContinueDragEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  parent: System.Windows.QueryContinueDragEventArgs\n  isExternal: false\n  name: InvokeEventHandler(Delegate,Object)\n  nameWithType: QueryContinueDragEventArgs.InvokeEventHandler(Delegate,Object)\n  fullName: System.Windows.QueryContinueDragEventArgs.InvokeEventHandler(Delegate,Object)\n- uid: System.Delegate\n  parent: System\n  isExternal: true\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.QueryContinueDragEventArgs.KeyStates\n  parent: System.Windows.QueryContinueDragEventArgs\n  isExternal: false\n  name: KeyStates\n  nameWithType: QueryContinueDragEventArgs.KeyStates\n  fullName: System.Windows.QueryContinueDragEventArgs.KeyStates\n- uid: System.Windows.DragDropKeyStates\n  parent: System.Windows\n  isExternal: false\n  name: DragDropKeyStates\n  nameWithType: DragDropKeyStates\n  fullName: System.Windows.DragDropKeyStates\n- uid: System.Windows.QueryContinueDragEventArgs.Action*\n  parent: System.Windows.QueryContinueDragEventArgs\n  isExternal: false\n  name: Action\n  nameWithType: QueryContinueDragEventArgs.Action\n- uid: System.Windows.QueryContinueDragEventArgs.EscapePressed*\n  parent: System.Windows.QueryContinueDragEventArgs\n  isExternal: false\n  name: EscapePressed\n  nameWithType: QueryContinueDragEventArgs.EscapePressed\n- uid: System.Windows.QueryContinueDragEventArgs.InvokeEventHandler*\n  parent: System.Windows.QueryContinueDragEventArgs\n  isExternal: false\n  name: InvokeEventHandler\n  nameWithType: QueryContinueDragEventArgs.InvokeEventHandler\n- uid: System.Windows.QueryContinueDragEventArgs.KeyStates*\n  parent: System.Windows.QueryContinueDragEventArgs\n  isExternal: false\n  name: KeyStates\n  nameWithType: QueryContinueDragEventArgs.KeyStates\n"}