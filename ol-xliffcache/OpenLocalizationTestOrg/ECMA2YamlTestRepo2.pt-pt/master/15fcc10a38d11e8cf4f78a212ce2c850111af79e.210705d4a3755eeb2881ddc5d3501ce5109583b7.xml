{"nodes":[{"pos":[1632,1750],"content":"Defines a reusable context for interpreting or mapping XAML types, and the types in the assemblies that underlie them.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines a reusable context for interpreting or mapping XAML types, and the types in the assemblies that underlie them.","pos":[0,118]}]},{"pos":[1762,2385],"content":"A XAML schema context provides a layer of abstraction between a schema or vocabulary for XAML, and a specific parser implementation. By inserting the concept of a schema context, the schema can be used with different XAML parsers, and the schema context fills in the details that are needed to interact with a specific XAML parser. For example, the XAML schema context provides query APIs that relate to XAML concepts or to the CLR binding to the XAML type system. The XAML schema context is also responsible for maintaining the assembly list of loaded assemblies, which defines where a XAML parser looks for backing types.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A XAML schema context provides a layer of abstraction between a schema or vocabulary for XAML, and a specific parser implementation. By inserting the concept of a schema context, the schema can be used with different XAML parsers, and the schema context fills in the details that are needed to interact with a specific XAML parser. For example, the XAML schema context provides query APIs that relate to XAML concepts or to the CLR binding to the XAML type system. The XAML schema context is also responsible for maintaining the assembly list of loaded assemblies, which defines where a XAML parser looks for backing types.","pos":[0,623],"nodes":[{"content":"A XAML schema context provides a layer of abstraction between a schema or vocabulary for XAML, and a specific parser implementation.","pos":[0,132]},{"content":"By inserting the concept of a schema context, the schema can be used with different XAML parsers, and the schema context fills in the details that are needed to interact with a specific XAML parser.","pos":[133,331]},{"content":"For example, the XAML schema context provides query APIs that relate to XAML concepts or to the CLR binding to the XAML type system.","pos":[332,464]},{"content":"The XAML schema context is also responsible for maintaining the assembly list of loaded assemblies, which defines where a XAML parser looks for backing types.","pos":[465,623]}]}]},{"pos":[2883,2974],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlSchemaContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xaml.XamlSchemaContext\"></xref> class."},{"pos":[3681,3812],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlSchemaContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, based on a set of reference assemblies.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xaml.XamlSchemaContext\"></xref> class, based on a set of reference assemblies."},{"pos":[4095,4234],"content":"An enumerable set of assembly information items. Each assembly information item is specified by an <xref:System.Reflection.Assembly> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"An enumerable set of assembly information items. Each assembly information item is specified by an <xref:System.Reflection.Assembly> value.","pos":[0,139],"nodes":[{"content":"An enumerable set of assembly information items.","pos":[0,48]},{"content":"Each assembly information item is specified by an &lt;xref:System.Reflection.Assembly&gt; value.","pos":[49,139],"source":" Each assembly information item is specified by an <xref:System.Reflection.Assembly> value."}]}]},{"pos":[4824,4943],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlSchemaContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, based on a settings object.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xaml.XamlSchemaContext\"></xref> class, based on a settings object."},{"pos":[4955,5141],"content":"The settings object stores information about text converter and markup extension specifics for the schema context. For more information, see <xref:System.Xaml.XamlSchemaContextSettings>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The settings object stores information about text converter and markup extension specifics for the schema context. For more information, see <xref:System.Xaml.XamlSchemaContextSettings>.","pos":[0,186],"nodes":[{"content":"The settings object stores information about text converter and markup extension specifics for the schema context.","pos":[0,114]},{"content":"For more information, see &lt;xref:System.Xaml.XamlSchemaContextSettings&gt;.","pos":[115,186],"source":" For more information, see <xref:System.Xaml.XamlSchemaContextSettings>."}]}]},{"pos":[5344,5439],"content":"The settings object to use to construct the <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlSchemaContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The settings object to use to construct the <xref href=\"System.Xaml.XamlSchemaContext\"></xref>."},{"pos":[6229,6382],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlSchemaContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, based on a set of reference assemblies and a settings object.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xaml.XamlSchemaContext\"></xref> class, based on a set of reference assemblies and a settings object."},{"pos":[6713,6846],"content":"An enumerable set of assembly information. Each assembly information item is specified by an <xref:System.Reflection.Assembly> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"An enumerable set of assembly information. Each assembly information item is specified by an <xref:System.Reflection.Assembly> value.","pos":[0,133],"nodes":[{"content":"An enumerable set of assembly information.","pos":[0,42]},{"content":"Each assembly information item is specified by an &lt;xref:System.Reflection.Assembly&gt; value.","pos":[43,133],"source":" Each assembly information item is specified by an <xref:System.Reflection.Assembly> value."}]}]},{"pos":[6935,7030],"content":"The settings object to use to construct the <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlSchemaContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The settings object to use to construct the <xref href=\"System.Xaml.XamlSchemaContext\"></xref>."},{"pos":[7439,7634],"content":"Provides a nonstandard <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Finalize\" name=\"Finalize\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation that does not invoke <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Dispose\" name=\"Dispose\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Provides a nonstandard <xref uid=\"langword_csharp_Finalize\" name=\"Finalize\" href=\"\"></xref> implementation that does not invoke <xref uid=\"langword_csharp_Dispose\" name=\"Dispose\" href=\"\"></xref>."},{"pos":[7647,8130],"content":"XAML schema contexts should not be disposed by automatic garbage collection or by manual operations. Although XAML schema contexts  have no unmanaged resources, <xref:System.Windows.Markup.XamlDeferLoadAttribute> properties might still be active, and disposing a XAML schema context can interfere with the related defer-load operation.       <xref:System.AppDomain.AssemblyLoad> event handlers, which are hooked internally as weak references, are cleaned up by this implementation.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"XAML schema contexts should not be disposed by automatic garbage collection or by manual operations. Although XAML schema contexts  have no unmanaged resources, <xref:System.Windows.Markup.XamlDeferLoadAttribute> properties might still be active, and disposing a XAML schema context can interfere with the related defer-load operation.       <xref:System.AppDomain.AssemblyLoad> event handlers, which are hooked internally as weak references, are cleaned up by this implementation.","pos":[0,481],"nodes":[{"content":"XAML schema contexts should not be disposed by automatic garbage collection or by manual operations.","pos":[0,100]},{"content":"Although XAML schema contexts  have no unmanaged resources, &lt;xref:System.Windows.Markup.XamlDeferLoadAttribute&gt; properties might still be active, and disposing a XAML schema context can interfere with the related defer-load operation.","pos":[101,335],"source":" Although XAML schema contexts  have no unmanaged resources, <xref:System.Windows.Markup.XamlDeferLoadAttribute> properties might still be active, and disposing a XAML schema context can interfere with the related defer-load operation."},{"content":"&lt;xref:System.AppDomain.AssemblyLoad&gt; event handlers, which are hooked internally as weak references, are cleaned up by this implementation.","pos":[342,481],"source":"       <xref:System.AppDomain.AssemblyLoad> event handlers, which are hooked internally as weak references, are cleaned up by this implementation."}]}]},{"pos":[8764,8915],"content":"Gets a value that specifies whether a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup API.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that specifies whether a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup API.","pos":[0,151]}]},{"pos":[8928,9798],"content":"This property returns the <xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=fullName> value that is established in the settings for the <xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29> constructor signature. If other signatures were used for construction or if <xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=fullName> is not specifically set to `true`, the value of this property is `false`.       The value of this property influences the strings that are returned by <xref:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces%2A>. If FullyQualifyAssemblyNamesInClrNamespaces is `true`, the assembly portion of the string reports the equivalent of <xref:System.Reflection.Assembly.FullName%2A?displayProperty=fullName>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property returns the &lt;xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=fullName&gt; value that is established in the settings for the &lt;xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29&gt; constructor signature.","pos":[0,300],"source":"This property returns the <xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=fullName> value that is established in the settings for the <xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29> constructor signature."},{"content":"If other signatures were used for construction or if &lt;xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=fullName&gt; is not specifically set to <ph id=\"ph1\">`true`</ph>, the value of this property is <ph id=\"ph2\">`false`</ph>.","pos":[301,541],"source":" If other signatures were used for construction or if <xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=fullName> is not specifically set to `true`, the value of this property is `false`."},{"content":"The value of this property influences the strings that are returned by &lt;xref:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces%2A&gt;.","pos":[548,680],"source":"       The value of this property influences the strings that are returned by <xref:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces%2A>."},{"content":"If FullyQualifyAssemblyNamesInClrNamespaces is <ph id=\"ph1\">`true`</ph>, the assembly portion of the string reports the equivalent of &lt;xref:System.Reflection.Assembly.FullName%2A?displayProperty=fullName&gt;.","pos":[681,868],"source":" If FullyQualifyAssemblyNamesInClrNamespaces is `true`, the assembly portion of the string reports the equivalent of <xref:System.Reflection.Assembly.FullName%2A?displayProperty=fullName>."}]},{"pos":[9943,10198],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup APIs; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup APIs; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10702,10831],"content":"Searches the assemblies that are held by this <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlSchemaContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and returns a set of namespaces.","needQuote":true,"needEscape":true,"source":"Searches the assemblies that are held by this <xref href=\"System.Xaml.XamlSchemaContext\"></xref> and returns a set of namespaces."},{"pos":[10843,11130],"content":"This method only searches the reference assemblies if they are passed in through construction or property setting. If no assemblies are established as reference assemblies, the logic of this method examines all loaded assemblies where this <xref:System.Xaml.XamlSchemaContext> is active.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method only searches the reference assemblies if they are passed in through construction or property setting. If no assemblies are established as reference assemblies, the logic of this method examines all loaded assemblies where this <xref:System.Xaml.XamlSchemaContext> is active.","pos":[0,287],"nodes":[{"content":"This method only searches the reference assemblies if they are passed in through construction or property setting.","pos":[0,114]},{"content":"If no assemblies are established as reference assemblies, the logic of this method examines all loaded assemblies where this &lt;xref:System.Xaml.XamlSchemaContext&gt; is active.","pos":[115,287],"source":" If no assemblies are established as reference assemblies, the logic of this method examines all loaded assemblies where this <xref:System.Xaml.XamlSchemaContext> is active."}]}]},{"pos":[11357,11443],"content":"An enumerable set of namespace identifiers. These identifiers are provided as strings.","needQuote":true,"needEscape":true,"nodes":[{"content":"An enumerable set of namespace identifiers. These identifiers are provided as strings.","pos":[0,86],"nodes":[{"content":"An enumerable set of namespace identifiers.","pos":[0,43]},{"content":"These identifiers are provided as strings.","pos":[44,86]}]}]},{"pos":[11950,12108],"content":"Searches the assemblies that are held by this <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlSchemaContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and returns a set of types from the specified XAML namespace.","needQuote":true,"needEscape":true,"source":"Searches the assemblies that are held by this <xref href=\"System.Xaml.XamlSchemaContext\"></xref> and returns a set of types from the specified XAML namespace."},{"pos":[12333,12372],"content":"The XAML namespace to return types for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XAML namespace to return types for.","pos":[0,39]}]},{"pos":[12477,12605],"content":"An enumerable set of XAML types. Each XAML type in the set is represented by a <xref href=\"System.Xaml.XamlType\"></xref> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"An enumerable set of XAML types.","pos":[0,32]},{"content":"Each XAML type in the set is represented by a <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[33,128],"source":" Each XAML type in the set is represented by a <xref href=\"System.Xaml.XamlType\"></xref> object."}]},{"pos":[13122,13241],"content":"Gets a string that is reported as the preferred prefix for consumers to use when they map the specified XAML namespace.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a string that is reported as the preferred prefix for consumers to use when they map the specified XAML namespace.","pos":[0,119]}]},{"pos":[13254,13568],"content":"The most immediate consumer of the information is typically a XAML writer. Other indirect consumers include design tools.       As part of the XAML binding for the common language runtime (CLR), you can specify this information by applying <xref:System.Windows.Markup.XmlnsPrefixAttribute> at the assembly level.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The most immediate consumer of the information is typically a XAML writer. Other indirect consumers include design tools.       As part of the XAML binding for the common language runtime (CLR), you can specify this information by applying <xref:System.Windows.Markup.XmlnsPrefixAttribute> at the assembly level.","pos":[0,312],"nodes":[{"content":"The most immediate consumer of the information is typically a XAML writer.","pos":[0,74]},{"content":"Other indirect consumers include design tools.","pos":[75,121]},{"content":"As part of the XAML binding for the common language runtime (CLR), you can specify this information by applying &lt;xref:System.Windows.Markup.XmlnsPrefixAttribute&gt; at the assembly level.","pos":[128,312],"source":"       As part of the XAML binding for the common language runtime (CLR), you can specify this information by applying <xref:System.Windows.Markup.XmlnsPrefixAttribute> at the assembly level."}]}]},{"pos":[13727,13778],"content":"The XAML namespace to get the preferred prefix for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XAML namespace to get the preferred prefix for.","pos":[0,51]}]},{"pos":[13836,13929],"content":"A string that consumers should use when they map the specified XAML namespace for markup use.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that consumers should use when they map the specified XAML namespace for markup use.","pos":[0,93]}]},{"pos":[14108,14135],"content":"<ph id=\"ph1\">&lt;code&gt;xmlns&lt;/code&gt;</ph> is null.","needQuote":true,"needEscape":true,"source":"<code>xmlns</code> is null."},{"pos":[14915,14927],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15001,15013],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15097,15109],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15683,15839],"content":"Returns a <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlDirective\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that represents a directive, either for the XAML language or for a particular implementation.","needQuote":true,"needEscape":true,"source":"Returns a <xref href=\"System.Xaml.XamlDirective\"></xref> value that represents a directive, either for the XAML language or for a particular implementation."},{"pos":[15851,15989],"content":"Override this method if you create a derived class from <xref:System.Xaml.XamlDirective> as part of a XAML type system extension scenario.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Override this method if you create a derived class from &lt;xref:System.Xaml.XamlDirective&gt; as part of a XAML type system extension scenario.","pos":[0,138],"source":"Override this method if you create a derived class from <xref:System.Xaml.XamlDirective> as part of a XAML type system extension scenario."}]},{"pos":[16193,16246],"content":"The XAML namespace that contains the named directive.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XAML namespace that contains the named directive.","pos":[0,53]}]},{"pos":[16307,16343],"content":"The name of the directive to obtain.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the directive to obtain.","pos":[0,36]}]},{"pos":[16413,16509],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlDirective\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the requested directive.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Xaml.XamlDirective\"></xref> object that represents the requested directive."},{"pos":[16686,16798],"content":"<ph id=\"ph1\">&lt;code&gt;xamlNamespace&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>xamlNamespace</code> or <code>name</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[17194,17285],"content":"Returns a <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is based on a CLR type identifier.","needQuote":true,"needEscape":true,"source":"Returns a <xref href=\"System.Xaml.XamlType\"></xref> that is based on a CLR type identifier."},{"pos":[17297,17507],"content":"This overload assumes that you are using the CLR for the backing type system. If you are not using the CLR type system, use <xref:System.Xaml.XamlSchemaContext.GetXamlType%28System.Xaml.Schema.XamlTypeName%29>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This overload assumes that you are using the CLR for the backing type system. If you are not using the CLR type system, use <xref:System.Xaml.XamlSchemaContext.GetXamlType%28System.Xaml.Schema.XamlTypeName%29>.","pos":[0,210],"nodes":[{"content":"This overload assumes that you are using the CLR for the backing type system.","pos":[0,77]},{"content":"If you are not using the CLR type system, use &lt;xref:System.Xaml.XamlSchemaContext.GetXamlType%28System.Xaml.Schema.XamlTypeName%29&gt;.","pos":[78,210],"source":" If you are not using the CLR type system, use <xref:System.Xaml.XamlSchemaContext.GetXamlType%28System.Xaml.Schema.XamlTypeName%29>."}]}]},{"pos":[17666,17730],"content":"The type to get a <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for.","needQuote":true,"needEscape":true,"source":"The type to get a <xref href=\"System.Xaml.XamlType\"></xref> for."},{"pos":[17795,17882],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that matches the input <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Xaml.XamlType\"></xref> that matches the input <code>type</code>."},{"pos":[18054,18136],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[18596,18689],"content":"Returns a <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is based on a XAML system type name.","needQuote":true,"needEscape":true,"source":"Returns a <xref href=\"System.Xaml.XamlType\"></xref> that is based on a XAML system type name."},{"pos":[18903,18977],"content":"The XAML type name to get a <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for.","needQuote":true,"needEscape":true,"source":"The XAML type name to get a <xref href=\"System.Xaml.XamlType\"></xref> for."},{"pos":[19042,19137],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that matches the input <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">xamlTypeName</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Xaml.XamlType\"></xref> that matches the input <code>xamlTypeName</code>."},{"pos":[19301,19506],"content":"A component of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">xamlTypeName</ph><ept id=\"p1\">&lt;/code&gt;</ept> (&lt;xref:System.Xaml.Schema.XamlTypeName.Name<bpt id=\"p2\">*</bpt>&gt; or &lt;xref:System.Xaml.Schema.XamlTypeName.Namespace<ept id=\"p2\">*</ept>&gt;) is <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A component of <code>xamlTypeName</code> (<xref:System.Xaml.Schema.XamlTypeName.Name*> or <xref:System.Xaml.Schema.XamlTypeName.Namespace*>) is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[19609,19699],"content":"<ph id=\"ph1\">&lt;code&gt;xamlTypeName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>xamlTypeName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[20233,20448],"content":"Returns a <xref href=\"System.Xaml.XamlType\"></xref> that is based on a XAML namespace and a string for the type name. This signature can specify the type arguments for cases where the desired type is a generic type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is based on a XAML namespace and a string for the type name.","pos":[0,117],"source":"Returns a <xref href=\"System.Xaml.XamlType\"></xref> that is based on a XAML namespace and a string for the type name."},{"content":"This signature can specify the type arguments for cases where the desired type is a generic type.","pos":[118,215]}]},{"pos":[20683,20733],"content":"The XAML namespace that contains the desired type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XAML namespace that contains the desired type.","pos":[0,50]}]},{"pos":[20794,20830],"content":"The string name of the desired type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string name of the desired type.","pos":[0,36]}]},{"pos":[20909,20962],"content":"The initialization type arguments for a generic type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The initialization type arguments for a generic type.","pos":[0,53]}]},{"pos":[21027,21105],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that matches the input criteria.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Xaml.XamlType\"></xref> that matches the input criteria."},{"pos":[21613,21757],"content":"Called when operations use this schema context to resolve an assembly that is required in order to resolve the XAML namespaces that it contains.","needQuote":true,"needEscape":true,"nodes":[{"content":"Called when operations use this schema context to resolve an assembly that is required in order to resolve the XAML namespaces that it contains.","pos":[0,144]}]},{"pos":[21770,22298],"content":"The underlying assembly resolution technique, which is an internal API, has built-in tolerances for different string forms of an assembly name as based on the <xref:System.Reflection.AssemblyName> construction behavior.       The purpose of this API is to enable first-opportunity resolution against known sets of assemblies, such as against reference assemblies instead of against a global assembly cache. If the list of reference assemblies is populated, the default implementation can access the known reference assemblies.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The underlying assembly resolution technique, which is an internal API, has built-in tolerances for different string forms of an assembly name as based on the <xref:System.Reflection.AssemblyName> construction behavior.       The purpose of this API is to enable first-opportunity resolution against known sets of assemblies, such as against reference assemblies instead of against a global assembly cache. If the list of reference assemblies is populated, the default implementation can access the known reference assemblies.","pos":[0,526],"nodes":[{"content":"The underlying assembly resolution technique, which is an internal API, has built-in tolerances for different string forms of an assembly name as based on the &lt;xref:System.Reflection.AssemblyName&gt; construction behavior.","pos":[0,219],"source":"The underlying assembly resolution technique, which is an internal API, has built-in tolerances for different string forms of an assembly name as based on the <xref:System.Reflection.AssemblyName> construction behavior."},{"content":"The purpose of this API is to enable first-opportunity resolution against known sets of assemblies, such as against reference assemblies instead of against a global assembly cache.","pos":[226,406]},{"content":"If the list of reference assemblies is populated, the default implementation can access the known reference assemblies.","pos":[407,526]}]}]},{"pos":[22493,22539],"content":"The name of the assembly to load. See Remarks.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the assembly to load. See Remarks.","pos":[0,46],"nodes":[{"content":"The name of the assembly to load.","pos":[0,33]},{"content":"See Remarks.","pos":[34,46]}]}]},{"pos":[22610,22632],"content":"The resolved assembly.","needQuote":true,"needEscape":true,"nodes":[{"content":"The resolved assembly.","pos":[0,22]}]},{"pos":[23104,23179],"content":"Gets an enumerable set of reference assemblies for the XAML schema context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an enumerable set of reference assemblies for the XAML schema context.","pos":[0,75]}]},{"pos":[23404,23560],"content":"An enumerable set of reference assemblies for the schema context. Each assembly information item is specified by an <xref:System.Reflection.Assembly> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"An enumerable set of reference assemblies for the schema context. Each assembly information item is specified by an <xref:System.Reflection.Assembly> value.","pos":[0,156],"nodes":[{"content":"An enumerable set of reference assemblies for the schema context.","pos":[0,65]},{"content":"Each assembly information item is specified by an &lt;xref:System.Reflection.Assembly&gt; value.","pos":[66,156],"source":" Each assembly information item is specified by an <xref:System.Reflection.Assembly> value."}]}]},{"pos":[24144,24312],"content":"Gets a value that specifies whether a XAML schema and its context support markup extensions that have two constructors with the same arity (number of input parameters).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that specifies whether a XAML schema and its context support markup extensions that have two constructors with the same arity (number of input parameters).","pos":[0,168]}]},{"pos":[24325,25851],"content":"This property returns the <xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=fullName> value that is established in the settings for the <xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29> constructor signature. If other signatures are used for construction or if <xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=fullName> is not specifically set to `true`, the value of this property is `false`.       Duplicate arity of markup extensions is not specifically addressed by the XAML specification [MS-XAML], section 6.6.7.2. This is because formation of the XAML information item for a markup extension is identical regardless of duplicate arity that might exist in the markup extension implementation. Only the actual invocation of the markup extension and its `ProvideValue` exposes any issues associated with duplicate arity. Behavior for handling duplicate arity is thus undefined and is left up to each implementing XAML schema context and its XAML writer integration. The default XAML schema context as implemented for .NET Framework XAML Services operations does not support duplicate arity; various .NET Framework XAML Services APIs will throw exceptions when processing markup extension usage with underlying duplicate arity.       For more information about defining markup extensions, see [Markup Extensions for XAML Overview](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property returns the &lt;xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=fullName&gt; value that is established in the settings for the &lt;xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29&gt; constructor signature.","pos":[0,301],"source":"This property returns the <xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=fullName> value that is established in the settings for the <xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29> constructor signature."},{"content":"If other signatures are used for construction or if &lt;xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=fullName&gt; is not specifically set to <ph id=\"ph1\">`true`</ph>, the value of this property is <ph id=\"ph2\">`false`</ph>.","pos":[302,542],"source":" If other signatures are used for construction or if <xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=fullName> is not specifically set to `true`, the value of this property is `false`."},{"content":"Duplicate arity of markup extensions is not specifically addressed by the XAML specification [MS-XAML], section 6.6.7.2.","pos":[549,669]},{"content":"This is because formation of the XAML information item for a markup extension is identical regardless of duplicate arity that might exist in the markup extension implementation.","pos":[670,847]},{"content":"Only the actual invocation of the markup extension and its <ph id=\"ph1\">`ProvideValue`</ph> exposes any issues associated with duplicate arity.","pos":[848,973],"source":" Only the actual invocation of the markup extension and its `ProvideValue` exposes any issues associated with duplicate arity."},{"content":"Behavior for handling duplicate arity is thus undefined and is left up to each implementing XAML schema context and its XAML writer integration.","pos":[974,1118]},{"content":"The default XAML schema context as implemented for .NET Framework XAML Services operations does not support duplicate arity; various .NET Framework XAML Services APIs will throw exceptions when processing markup extension usage with underlying duplicate arity.","pos":[1119,1379]},{"content":"For more information about defining markup extensions, see <bpt id=\"p1\">[</bpt>Markup Extensions for XAML Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1386,1522],"source":"       For more information about defining markup extensions, see [Markup Extensions for XAML Overview](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[25997,26286],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the schema context permits markup extensions that have duplicate arity; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the schema context permits markup extensions that have duplicate arity; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,210],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the schema context permits markup extensions that have duplicate arity; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[211,289],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[26935,27081],"content":"Returns the success or failure of a request for a compatible XAML namespace. A successful request reports that XAML namespace as an out parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the success or failure of a request for a compatible XAML namespace. A successful request reports that XAML namespace as an out parameter.","pos":[0,146],"nodes":[{"content":"Returns the success or failure of a request for a compatible XAML namespace.","pos":[0,76]},{"content":"A successful request reports that XAML namespace as an out parameter.","pos":[77,146]}]}]},{"pos":[27094,27547],"content":"Internally, this method uses the following lookup order:      1.  An internally implemented compatibility dictionary, which may have been populated by an earlier lookup.      2.  The <xref:System.Windows.Markup.XmlnsCompatibleWithAttribute> parameter evaluation.       If no other compatible namespace is discovered and this method returns `false`, the `compatibleNamespace` parameter output might have the same value as the `xamlNamespace` input.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Internally, this method uses the following lookup order:      1.","pos":[0,64]},{"content":"An internally implemented compatibility dictionary, which may have been populated by an earlier lookup.","pos":[66,169]},{"content":"2.","pos":[175,177]},{"content":"The &lt;xref:System.Windows.Markup.XmlnsCompatibleWithAttribute&gt; parameter evaluation.","pos":[179,262],"source":"  The <xref:System.Windows.Markup.XmlnsCompatibleWithAttribute> parameter evaluation."},{"content":"If no other compatible namespace is discovered and this method returns <ph id=\"ph1\">`false`</ph>, the <ph id=\"ph2\">`compatibleNamespace`</ph> parameter output might have the same value as the <ph id=\"ph3\">`xamlNamespace`</ph> input.","pos":[269,447],"source":"       If no other compatible namespace is discovered and this method returns `false`, the `compatibleNamespace` parameter output might have the same value as the `xamlNamespace` input."}]},{"pos":[27763,27898],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_xmlns\" name=\"xmlns\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> string for the XAML namespace to be checked for a compatible result.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_xmlns\" name=\"xmlns\" href=\"\"></xref> string for the XAML namespace to be checked for a compatible result."},{"pos":[27974,28243],"content":"When this method returns, the <xref uid=\"langword_csharp_xmlns\" name=\"xmlns\" href=\"\"></xref> string for a compatible XAML namespace request. This might be identical to `xamlNamespace` if the method returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_xmlns\" name=\"xmlns\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> string for a compatible XAML namespace request.","pos":[0,140],"source":"When this method returns, the <xref uid=\"langword_csharp_xmlns\" name=\"xmlns\" href=\"\"></xref> string for a compatible XAML namespace request."},{"content":"This might be identical to <ph id=\"ph1\">`xamlNamespace`</ph> if the method returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[141,269],"source":" This might be identical to `xamlNamespace` if the method returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[28302,28499],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">compatibleNamespace</ph><ept id=\"p2\">&lt;/code&gt;</ept> contains a usable result; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>compatibleNamespace</code> contains a usable result; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[28689,28780],"content":"<ph id=\"ph1\">&lt;code&gt;xamlNamespace&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>xamlNamespace</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xaml.XamlSchemaContext\n  id: XamlSchemaContext\n  children:\n  - System.Xaml.XamlSchemaContext.#ctor\n  - System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})\n  - System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)\n  - System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)\n  - System.Xaml.XamlSchemaContext.Finalize\n  - System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces\n  - System.Xaml.XamlSchemaContext.GetAllXamlNamespaces\n  - System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)\n  - System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)\n  - System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)\n  - System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)\n  - System.Xaml.XamlSchemaContext.GetXamlType(System.Type)\n  - System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)\n  - System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])\n  - System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)\n  - System.Xaml.XamlSchemaContext.ReferenceAssemblies\n  - System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity\n  - System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)\n  langs:\n  - csharp\n  name: XamlSchemaContext\n  nameWithType: XamlSchemaContext\n  fullName: System.Xaml.XamlSchemaContext\n  type: Class\n  summary: Defines a reusable context for interpreting or mapping XAML types, and the types in the assemblies that underlie them.\n  remarks: A XAML schema context provides a layer of abstraction between a schema or vocabulary for XAML, and a specific parser implementation. By inserting the concept of a schema context, the schema can be used with different XAML parsers, and the schema context fills in the details that are needed to interact with a specific XAML parser. For example, the XAML schema context provides query APIs that relate to XAML concepts or to the CLR binding to the XAML type system. The XAML schema context is also responsible for maintaining the assembly list of loaded assemblies, which defines where a XAML parser looks for backing types.\n  syntax:\n    content: public class XamlSchemaContext\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlSchemaContext.#ctor\n  id: '#ctor'\n  parent: System.Xaml.XamlSchemaContext\n  langs:\n  - csharp\n  name: XamlSchemaContext()\n  nameWithType: XamlSchemaContext.XamlSchemaContext()\n  fullName: System.Xaml.XamlSchemaContext.XamlSchemaContext()\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Initializes a new instance of the <xref href=\"System.Xaml.XamlSchemaContext\"></xref> class.\n  syntax:\n    content: public XamlSchemaContext ();\n    parameters: []\n  overload: System.Xaml.XamlSchemaContext.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})\n  id: '#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})'\n  parent: System.Xaml.XamlSchemaContext\n  langs:\n  - csharp\n  name: XamlSchemaContext(IEnumerable<Assembly>)\n  nameWithType: XamlSchemaContext.XamlSchemaContext(IEnumerable<Assembly>)\n  fullName: System.Xaml.XamlSchemaContext.XamlSchemaContext(IEnumerable<Assembly>)\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Initializes a new instance of the <xref href=\"System.Xaml.XamlSchemaContext\"></xref> class, based on a set of reference assemblies.\n  syntax:\n    content: public XamlSchemaContext (System.Collections.Generic.IEnumerable<System.Reflection.Assembly> referenceAssemblies);\n    parameters:\n    - id: referenceAssemblies\n      type: System.Collections.Generic.IEnumerable{System.Reflection.Assembly}\n      description: An enumerable set of assembly information items. Each assembly information item is specified by an <xref:System.Reflection.Assembly> value.\n  overload: System.Xaml.XamlSchemaContext.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)\n  id: '#ctor(System.Xaml.XamlSchemaContextSettings)'\n  parent: System.Xaml.XamlSchemaContext\n  langs:\n  - csharp\n  name: XamlSchemaContext(XamlSchemaContextSettings)\n  nameWithType: XamlSchemaContext.XamlSchemaContext(XamlSchemaContextSettings)\n  fullName: System.Xaml.XamlSchemaContext.XamlSchemaContext(XamlSchemaContextSettings)\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Initializes a new instance of the <xref href=\"System.Xaml.XamlSchemaContext\"></xref> class, based on a settings object.\n  remarks: The settings object stores information about text converter and markup extension specifics for the schema context. For more information, see <xref:System.Xaml.XamlSchemaContextSettings>.\n  syntax:\n    content: public XamlSchemaContext (System.Xaml.XamlSchemaContextSettings settings);\n    parameters:\n    - id: settings\n      type: System.Xaml.XamlSchemaContextSettings\n      description: The settings object to use to construct the <xref href=\"System.Xaml.XamlSchemaContext\"></xref>.\n  overload: System.Xaml.XamlSchemaContext.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)\n  id: '#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)'\n  parent: System.Xaml.XamlSchemaContext\n  langs:\n  - csharp\n  name: XamlSchemaContext(IEnumerable<Assembly>,XamlSchemaContextSettings)\n  nameWithType: XamlSchemaContext.XamlSchemaContext(IEnumerable<Assembly>,XamlSchemaContextSettings)\n  fullName: System.Xaml.XamlSchemaContext.XamlSchemaContext(IEnumerable<Assembly>,XamlSchemaContextSettings)\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Initializes a new instance of the <xref href=\"System.Xaml.XamlSchemaContext\"></xref> class, based on a set of reference assemblies and a settings object.\n  syntax:\n    content: public XamlSchemaContext (System.Collections.Generic.IEnumerable<System.Reflection.Assembly> referenceAssemblies, System.Xaml.XamlSchemaContextSettings settings);\n    parameters:\n    - id: referenceAssemblies\n      type: System.Collections.Generic.IEnumerable{System.Reflection.Assembly}\n      description: An enumerable set of assembly information. Each assembly information item is specified by an <xref:System.Reflection.Assembly> value.\n    - id: settings\n      type: System.Xaml.XamlSchemaContextSettings\n      description: The settings object to use to construct the <xref href=\"System.Xaml.XamlSchemaContext\"></xref>.\n  overload: System.Xaml.XamlSchemaContext.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlSchemaContext.Finalize\n  id: Finalize\n  parent: System.Xaml.XamlSchemaContext\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: XamlSchemaContext.Finalize()\n  fullName: System.Xaml.XamlSchemaContext.Finalize()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Provides a nonstandard <xref uid=\"langword_csharp_Finalize\" name=\"Finalize\" href=\"\"></xref> implementation that does not invoke <xref uid=\"langword_csharp_Dispose\" name=\"Dispose\" href=\"\"></xref>.\n  remarks: \"XAML schema contexts should not be disposed by automatic garbage collection or by manual operations. Although XAML schema contexts  have no unmanaged resources, <xref:System.Windows.Markup.XamlDeferLoadAttribute> properties might still be active, and disposing a XAML schema context can interfere with the related defer-load operation.  \\n  \\n <xref:System.AppDomain.AssemblyLoad> event handlers, which are hooked internally as weak references, are cleaned up by this implementation.\"\n  syntax:\n    content: ~XamlSchemaContext ();\n    parameters: []\n  overload: System.Xaml.XamlSchemaContext.Finalize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces\n  id: FullyQualifyAssemblyNamesInClrNamespaces\n  parent: System.Xaml.XamlSchemaContext\n  langs:\n  - csharp\n  name: FullyQualifyAssemblyNamesInClrNamespaces\n  nameWithType: XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces\n  fullName: System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that specifies whether a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup API.\n  remarks: \"This property returns the <xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=fullName> value that is established in the settings for the <xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29> constructor signature. If other signatures were used for construction or if <xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=fullName> is not specifically set to `true`, the value of this property is `false`.  \\n  \\n The value of this property influences the strings that are returned by <xref:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces%2A>. If FullyQualifyAssemblyNamesInClrNamespaces is `true`, the assembly portion of the string reports the equivalent of <xref:System.Reflection.Assembly.FullName%2A?displayProperty=fullName>.\"\n  syntax:\n    content: public bool FullyQualifyAssemblyNamesInClrNamespaces { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup APIs; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlSchemaContext.GetAllXamlNamespaces\n  id: GetAllXamlNamespaces\n  parent: System.Xaml.XamlSchemaContext\n  langs:\n  - csharp\n  name: GetAllXamlNamespaces()\n  nameWithType: XamlSchemaContext.GetAllXamlNamespaces()\n  fullName: System.Xaml.XamlSchemaContext.GetAllXamlNamespaces()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Searches the assemblies that are held by this <xref href=\"System.Xaml.XamlSchemaContext\"></xref> and returns a set of namespaces.\n  remarks: This method only searches the reference assemblies if they are passed in through construction or property setting. If no assemblies are established as reference assemblies, the logic of this method examines all loaded assemblies where this <xref:System.Xaml.XamlSchemaContext> is active.\n  syntax:\n    content: public virtual System.Collections.Generic.IEnumerable<string> GetAllXamlNamespaces ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: An enumerable set of namespace identifiers. These identifiers are provided as strings.\n  overload: System.Xaml.XamlSchemaContext.GetAllXamlNamespaces*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)\n  id: GetAllXamlTypes(System.String)\n  parent: System.Xaml.XamlSchemaContext\n  langs:\n  - csharp\n  name: GetAllXamlTypes(String)\n  nameWithType: XamlSchemaContext.GetAllXamlTypes(String)\n  fullName: System.Xaml.XamlSchemaContext.GetAllXamlTypes(String)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Searches the assemblies that are held by this <xref href=\"System.Xaml.XamlSchemaContext\"></xref> and returns a set of types from the specified XAML namespace.\n  syntax:\n    content: public virtual System.Collections.Generic.ICollection<System.Xaml.XamlType> GetAllXamlTypes (string xamlNamespace);\n    parameters:\n    - id: xamlNamespace\n      type: System.String\n      description: The XAML namespace to return types for.\n    return:\n      type: System.Collections.Generic.ICollection{System.Xaml.XamlType}\n      description: An enumerable set of XAML types. Each XAML type in the set is represented by a <xref href=\"System.Xaml.XamlType\"></xref> object.\n  overload: System.Xaml.XamlSchemaContext.GetAllXamlTypes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)\n  id: GetPreferredPrefix(System.String)\n  parent: System.Xaml.XamlSchemaContext\n  langs:\n  - csharp\n  name: GetPreferredPrefix(String)\n  nameWithType: XamlSchemaContext.GetPreferredPrefix(String)\n  fullName: System.Xaml.XamlSchemaContext.GetPreferredPrefix(String)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a string that is reported as the preferred prefix for consumers to use when they map the specified XAML namespace.\n  remarks: \"The most immediate consumer of the information is typically a XAML writer. Other indirect consumers include design tools.  \\n  \\n As part of the XAML binding for the common language runtime (CLR), you can specify this information by applying <xref:System.Windows.Markup.XmlnsPrefixAttribute> at the assembly level.\"\n  syntax:\n    content: public virtual string GetPreferredPrefix (string xmlns);\n    parameters:\n    - id: xmlns\n      type: System.String\n      description: The XAML namespace to get the preferred prefix for.\n    return:\n      type: System.String\n      description: A string that consumers should use when they map the specified XAML namespace for markup use.\n  overload: System.Xaml.XamlSchemaContext.GetPreferredPrefix*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>xmlns</code> is null.\n  platform:\n  - net462\n- uid: System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)\n  id: GetValueConverter``1(System.Type,System.Xaml.XamlType)\n  parent: System.Xaml.XamlSchemaContext\n  langs:\n  - csharp\n  name: GetValueConverter(Type,XamlType)\n  nameWithType: XamlSchemaContext.GetValueConverter(Type,XamlType)\n  fullName: System.Xaml.XamlSchemaContext.GetValueConverter(Type,XamlType)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  syntax:\n    content: 'protected System.Xaml.Schema.XamlValueConverter<TConverterBase> GetValueConverter<TConverterBase> (Type converterType, System.Xaml.XamlType targetType) where TConverterBase : class;'\n    parameters:\n    - id: converterType\n      type: System.Type\n      description: To be added.\n    - id: targetType\n      type: System.Xaml.XamlType\n      description: To be added.\n    return:\n      type: System.Xaml.Schema.XamlValueConverter`1\n      description: To be added.\n  overload: System.Xaml.XamlSchemaContext.GetValueConverter<TConverterBase>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)\n  id: GetXamlDirective(System.String,System.String)\n  parent: System.Xaml.XamlSchemaContext\n  langs:\n  - csharp\n  name: GetXamlDirective(String,String)\n  nameWithType: XamlSchemaContext.GetXamlDirective(String,String)\n  fullName: System.Xaml.XamlSchemaContext.GetXamlDirective(String,String)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a <xref href=\"System.Xaml.XamlDirective\"></xref> value that represents a directive, either for the XAML language or for a particular implementation.\n  remarks: Override this method if you create a derived class from <xref:System.Xaml.XamlDirective> as part of a XAML type system extension scenario.\n  syntax:\n    content: public virtual System.Xaml.XamlDirective GetXamlDirective (string xamlNamespace, string name);\n    parameters:\n    - id: xamlNamespace\n      type: System.String\n      description: The XAML namespace that contains the named directive.\n    - id: name\n      type: System.String\n      description: The name of the directive to obtain.\n    return:\n      type: System.Xaml.XamlDirective\n      description: A <xref href=\"System.Xaml.XamlDirective\"></xref> object that represents the requested directive.\n  overload: System.Xaml.XamlSchemaContext.GetXamlDirective*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>xamlNamespace</code> or <code>name</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Xaml.XamlSchemaContext.GetXamlType(System.Type)\n  id: GetXamlType(System.Type)\n  parent: System.Xaml.XamlSchemaContext\n  langs:\n  - csharp\n  name: GetXamlType(Type)\n  nameWithType: XamlSchemaContext.GetXamlType(Type)\n  fullName: System.Xaml.XamlSchemaContext.GetXamlType(Type)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a <xref href=\"System.Xaml.XamlType\"></xref> that is based on a CLR type identifier.\n  remarks: This overload assumes that you are using the CLR for the backing type system. If you are not using the CLR type system, use <xref:System.Xaml.XamlSchemaContext.GetXamlType%28System.Xaml.Schema.XamlTypeName%29>.\n  syntax:\n    content: public virtual System.Xaml.XamlType GetXamlType (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type to get a <xref href=\"System.Xaml.XamlType\"></xref> for.\n    return:\n      type: System.Xaml.XamlType\n      description: The <xref href=\"System.Xaml.XamlType\"></xref> that matches the input <code>type</code>.\n  overload: System.Xaml.XamlSchemaContext.GetXamlType*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)\n  id: GetXamlType(System.Xaml.Schema.XamlTypeName)\n  parent: System.Xaml.XamlSchemaContext\n  langs:\n  - csharp\n  name: GetXamlType(XamlTypeName)\n  nameWithType: XamlSchemaContext.GetXamlType(XamlTypeName)\n  fullName: System.Xaml.XamlSchemaContext.GetXamlType(XamlTypeName)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a <xref href=\"System.Xaml.XamlType\"></xref> that is based on a XAML system type name.\n  syntax:\n    content: public System.Xaml.XamlType GetXamlType (System.Xaml.Schema.XamlTypeName xamlTypeName);\n    parameters:\n    - id: xamlTypeName\n      type: System.Xaml.Schema.XamlTypeName\n      description: The XAML type name to get a <xref href=\"System.Xaml.XamlType\"></xref> for.\n    return:\n      type: System.Xaml.XamlType\n      description: The <xref href=\"System.Xaml.XamlType\"></xref> that matches the input <code>xamlTypeName</code>.\n  overload: System.Xaml.XamlSchemaContext.GetXamlType*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: A component of <code>xamlTypeName</code> (<xref:System.Xaml.Schema.XamlTypeName.Name*> or <xref:System.Xaml.Schema.XamlTypeName.Namespace*>) is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>xamlTypeName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])\n  id: GetXamlType(System.String,System.String,System.Xaml.XamlType[])\n  parent: System.Xaml.XamlSchemaContext\n  langs:\n  - csharp\n  name: GetXamlType(String,String,XamlType[])\n  nameWithType: XamlSchemaContext.GetXamlType(String,String,XamlType[])\n  fullName: System.Xaml.XamlSchemaContext.GetXamlType(String,String,XamlType[])\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a <xref href=\"System.Xaml.XamlType\"></xref> that is based on a XAML namespace and a string for the type name. This signature can specify the type arguments for cases where the desired type is a generic type.\n  syntax:\n    content: protected virtual System.Xaml.XamlType GetXamlType (string xamlNamespace, string name, System.Xaml.XamlType[] typeArguments);\n    parameters:\n    - id: xamlNamespace\n      type: System.String\n      description: The XAML namespace that contains the desired type.\n    - id: name\n      type: System.String\n      description: The string name of the desired type.\n    - id: typeArguments\n      type: System.Xaml.XamlType[]\n      description: The initialization type arguments for a generic type.\n    return:\n      type: System.Xaml.XamlType\n      description: The <xref href=\"System.Xaml.XamlType\"></xref> that matches the input criteria.\n  overload: System.Xaml.XamlSchemaContext.GetXamlType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)\n  id: OnAssemblyResolve(System.String)\n  parent: System.Xaml.XamlSchemaContext\n  langs:\n  - csharp\n  name: OnAssemblyResolve(String)\n  nameWithType: XamlSchemaContext.OnAssemblyResolve(String)\n  fullName: System.Xaml.XamlSchemaContext.OnAssemblyResolve(String)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Called when operations use this schema context to resolve an assembly that is required in order to resolve the XAML namespaces that it contains.\n  remarks: \"The underlying assembly resolution technique, which is an internal API, has built-in tolerances for different string forms of an assembly name as based on the <xref:System.Reflection.AssemblyName> construction behavior.  \\n  \\n The purpose of this API is to enable first-opportunity resolution against known sets of assemblies, such as against reference assemblies instead of against a global assembly cache. If the list of reference assemblies is populated, the default implementation can access the known reference assemblies.\"\n  syntax:\n    content: protected virtual System.Reflection.Assembly OnAssemblyResolve (string assemblyName);\n    parameters:\n    - id: assemblyName\n      type: System.String\n      description: The name of the assembly to load. See Remarks.\n    return:\n      type: System.Reflection.Assembly\n      description: The resolved assembly.\n  overload: System.Xaml.XamlSchemaContext.OnAssemblyResolve*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlSchemaContext.ReferenceAssemblies\n  id: ReferenceAssemblies\n  parent: System.Xaml.XamlSchemaContext\n  langs:\n  - csharp\n  name: ReferenceAssemblies\n  nameWithType: XamlSchemaContext.ReferenceAssemblies\n  fullName: System.Xaml.XamlSchemaContext.ReferenceAssemblies\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets an enumerable set of reference assemblies for the XAML schema context.\n  syntax:\n    content: public System.Collections.Generic.IList<System.Reflection.Assembly> ReferenceAssemblies { get; }\n    return:\n      type: System.Collections.Generic.IList{System.Reflection.Assembly}\n      description: An enumerable set of reference assemblies for the schema context. Each assembly information item is specified by an <xref:System.Reflection.Assembly> value.\n  overload: System.Xaml.XamlSchemaContext.ReferenceAssemblies*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity\n  id: SupportMarkupExtensionsWithDuplicateArity\n  parent: System.Xaml.XamlSchemaContext\n  langs:\n  - csharp\n  name: SupportMarkupExtensionsWithDuplicateArity\n  nameWithType: XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity\n  fullName: System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that specifies whether a XAML schema and its context support markup extensions that have two constructors with the same arity (number of input parameters).\n  remarks: \"This property returns the <xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=fullName> value that is established in the settings for the <xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29> constructor signature. If other signatures are used for construction or if <xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=fullName> is not specifically set to `true`, the value of this property is `false`.  \\n  \\n Duplicate arity of markup extensions is not specifically addressed by the XAML specification [MS-XAML], section 6.6.7.2. This is because formation of the XAML information item for a markup extension is identical regardless of duplicate arity that might exist in the markup extension implementation. Only the actual invocation of the markup extension and its `ProvideValue` exposes any issues associated with duplicate arity. Behavior for handling duplicate arity is thus undefined and is left up to each implementing XAML schema context and its XAML writer integration. The default XAML schema context as implemented for .NET Framework XAML Services operations does not support duplicate arity; various .NET Framework XAML Services APIs will throw exceptions when processing markup extension usage with underlying duplicate arity.  \\n  \\n For more information about defining markup extensions, see [Markup Extensions for XAML Overview](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public bool SupportMarkupExtensionsWithDuplicateArity { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the schema context permits markup extensions that have duplicate arity; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)\n  id: TryGetCompatibleXamlNamespace(System.String,System.String@)\n  parent: System.Xaml.XamlSchemaContext\n  langs:\n  - csharp\n  name: TryGetCompatibleXamlNamespace(String,String)\n  nameWithType: XamlSchemaContext.TryGetCompatibleXamlNamespace(String,String)\n  fullName: System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(String,String)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns the success or failure of a request for a compatible XAML namespace. A successful request reports that XAML namespace as an out parameter.\n  remarks: \"Internally, this method uses the following lookup order:  \\n  \\n1.  An internally implemented compatibility dictionary, which may have been populated by an earlier lookup.  \\n  \\n2.  The <xref:System.Windows.Markup.XmlnsCompatibleWithAttribute> parameter evaluation.  \\n  \\n If no other compatible namespace is discovered and this method returns `false`, the `compatibleNamespace` parameter output might have the same value as the `xamlNamespace` input.\"\n  syntax:\n    content: public virtual bool TryGetCompatibleXamlNamespace (string xamlNamespace, out string compatibleNamespace);\n    parameters:\n    - id: xamlNamespace\n      type: System.String\n      description: The <xref uid=\"langword_csharp_xmlns\" name=\"xmlns\" href=\"\"></xref> string for the XAML namespace to be checked for a compatible result.\n    - id: compatibleNamespace\n      type: System.String\n      description: When this method returns, the <xref uid=\"langword_csharp_xmlns\" name=\"xmlns\" href=\"\"></xref> string for a compatible XAML namespace request. This might be identical to `xamlNamespace` if the method returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>compatibleNamespace</code> contains a usable result; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>xamlNamespace</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Xaml.XamlSchemaContext.#ctor\n  parent: System.Xaml.XamlSchemaContext\n  isExternal: false\n  name: XamlSchemaContext()\n  nameWithType: XamlSchemaContext.XamlSchemaContext()\n  fullName: System.Xaml.XamlSchemaContext.XamlSchemaContext()\n- uid: System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})\n  parent: System.Xaml.XamlSchemaContext\n  isExternal: false\n  name: XamlSchemaContext(IEnumerable<Assembly>)\n  nameWithType: XamlSchemaContext.XamlSchemaContext(IEnumerable<Assembly>)\n  fullName: System.Xaml.XamlSchemaContext.XamlSchemaContext(IEnumerable<Assembly>)\n- uid: System.Collections.Generic.IEnumerable{System.Reflection.Assembly}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<Assembly>\n  nameWithType: IEnumerable<Assembly>\n  fullName: System.Collections.Generic.IEnumerable<System.Reflection.Assembly>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Reflection.Assembly>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    nameWithType: Assembly\n    fullName: Assembly\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)\n  parent: System.Xaml.XamlSchemaContext\n  isExternal: false\n  name: XamlSchemaContext(XamlSchemaContextSettings)\n  nameWithType: XamlSchemaContext.XamlSchemaContext(XamlSchemaContextSettings)\n  fullName: System.Xaml.XamlSchemaContext.XamlSchemaContext(XamlSchemaContextSettings)\n- uid: System.Xaml.XamlSchemaContextSettings\n  parent: System.Xaml\n  isExternal: false\n  name: XamlSchemaContextSettings\n  nameWithType: XamlSchemaContextSettings\n  fullName: System.Xaml.XamlSchemaContextSettings\n- uid: System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)\n  parent: System.Xaml.XamlSchemaContext\n  isExternal: false\n  name: XamlSchemaContext(IEnumerable<Assembly>,XamlSchemaContextSettings)\n  nameWithType: XamlSchemaContext.XamlSchemaContext(IEnumerable<Assembly>,XamlSchemaContextSettings)\n  fullName: System.Xaml.XamlSchemaContext.XamlSchemaContext(IEnumerable<Assembly>,XamlSchemaContextSettings)\n- uid: System.Xaml.XamlSchemaContext.Finalize\n  parent: System.Xaml.XamlSchemaContext\n  isExternal: false\n  name: Finalize()\n  nameWithType: XamlSchemaContext.Finalize()\n  fullName: System.Xaml.XamlSchemaContext.Finalize()\n- uid: System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces\n  parent: System.Xaml.XamlSchemaContext\n  isExternal: false\n  name: FullyQualifyAssemblyNamesInClrNamespaces\n  nameWithType: XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces\n  fullName: System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Xaml.XamlSchemaContext.GetAllXamlNamespaces\n  parent: System.Xaml.XamlSchemaContext\n  isExternal: false\n  name: GetAllXamlNamespaces()\n  nameWithType: XamlSchemaContext.GetAllXamlNamespaces()\n  fullName: System.Xaml.XamlSchemaContext.GetAllXamlNamespaces()\n- uid: System.Collections.Generic.IEnumerable{System.String}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<String>\n  nameWithType: IEnumerable<String>\n  fullName: System.Collections.Generic.IEnumerable<System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.String>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)\n  parent: System.Xaml.XamlSchemaContext\n  isExternal: false\n  name: GetAllXamlTypes(String)\n  nameWithType: XamlSchemaContext.GetAllXamlTypes(String)\n  fullName: System.Xaml.XamlSchemaContext.GetAllXamlTypes(String)\n- uid: System.Collections.Generic.ICollection{System.Xaml.XamlType}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: ICollection<XamlType>\n  nameWithType: ICollection<XamlType>\n  fullName: System.Collections.Generic.ICollection<System.Xaml.XamlType>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: ICollection<System.Xaml.XamlType>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xaml.XamlType\n    name: XamlType\n    nameWithType: XamlType\n    fullName: XamlType\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)\n  parent: System.Xaml.XamlSchemaContext\n  isExternal: false\n  name: GetPreferredPrefix(String)\n  nameWithType: XamlSchemaContext.GetPreferredPrefix(String)\n  fullName: System.Xaml.XamlSchemaContext.GetPreferredPrefix(String)\n- uid: System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)\n  parent: System.Xaml.XamlSchemaContext\n  isExternal: false\n  name: GetValueConverter(Type,XamlType)\n  nameWithType: XamlSchemaContext.GetValueConverter(Type,XamlType)\n  fullName: System.Xaml.XamlSchemaContext.GetValueConverter(Type,XamlType)\n- uid: System.Xaml.Schema.XamlValueConverter`1\n  parent: System.Xaml.Schema\n  isExternal: false\n  name: XamlValueConverter<TConverterBase>\n  nameWithType: XamlValueConverter<TConverterBase>\n  fullName: System.Xaml.Schema.XamlValueConverter<TConverterBase>\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Xaml.XamlType\n  parent: System.Xaml\n  isExternal: false\n  name: XamlType\n  nameWithType: XamlType\n  fullName: System.Xaml.XamlType\n- uid: System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)\n  parent: System.Xaml.XamlSchemaContext\n  isExternal: false\n  name: GetXamlDirective(String,String)\n  nameWithType: XamlSchemaContext.GetXamlDirective(String,String)\n  fullName: System.Xaml.XamlSchemaContext.GetXamlDirective(String,String)\n- uid: System.Xaml.XamlDirective\n  parent: System.Xaml\n  isExternal: false\n  name: XamlDirective\n  nameWithType: XamlDirective\n  fullName: System.Xaml.XamlDirective\n- uid: System.Xaml.XamlSchemaContext.GetXamlType(System.Type)\n  parent: System.Xaml.XamlSchemaContext\n  isExternal: false\n  name: GetXamlType(Type)\n  nameWithType: XamlSchemaContext.GetXamlType(Type)\n  fullName: System.Xaml.XamlSchemaContext.GetXamlType(Type)\n- uid: System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)\n  parent: System.Xaml.XamlSchemaContext\n  isExternal: false\n  name: GetXamlType(XamlTypeName)\n  nameWithType: XamlSchemaContext.GetXamlType(XamlTypeName)\n  fullName: System.Xaml.XamlSchemaContext.GetXamlType(XamlTypeName)\n- uid: System.Xaml.Schema.XamlTypeName\n  parent: System.Xaml.Schema\n  isExternal: false\n  name: XamlTypeName\n  nameWithType: XamlTypeName\n  fullName: System.Xaml.Schema.XamlTypeName\n- uid: System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])\n  parent: System.Xaml.XamlSchemaContext\n  isExternal: false\n  name: GetXamlType(String,String,XamlType[])\n  nameWithType: XamlSchemaContext.GetXamlType(String,String,XamlType[])\n  fullName: System.Xaml.XamlSchemaContext.GetXamlType(String,String,XamlType[])\n- uid: System.Xaml.XamlType[]\n  parent: System.Xaml\n  isExternal: false\n  name: XamlType\n  nameWithType: XamlType\n  fullName: System.Xaml.XamlType[]\n  spec.csharp:\n  - uid: System.Xaml.XamlType\n    name: XamlType\n    nameWithType: XamlType\n    fullName: XamlType[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)\n  parent: System.Xaml.XamlSchemaContext\n  isExternal: false\n  name: OnAssemblyResolve(String)\n  nameWithType: XamlSchemaContext.OnAssemblyResolve(String)\n  fullName: System.Xaml.XamlSchemaContext.OnAssemblyResolve(String)\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: true\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Xaml.XamlSchemaContext.ReferenceAssemblies\n  parent: System.Xaml.XamlSchemaContext\n  isExternal: false\n  name: ReferenceAssemblies\n  nameWithType: XamlSchemaContext.ReferenceAssemblies\n  fullName: System.Xaml.XamlSchemaContext.ReferenceAssemblies\n- uid: System.Collections.Generic.IList{System.Reflection.Assembly}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IList<Assembly>\n  nameWithType: IList<Assembly>\n  fullName: System.Collections.Generic.IList<System.Reflection.Assembly>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: IList<System.Reflection.Assembly>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    nameWithType: Assembly\n    fullName: Assembly\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity\n  parent: System.Xaml.XamlSchemaContext\n  isExternal: false\n  name: SupportMarkupExtensionsWithDuplicateArity\n  nameWithType: XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity\n  fullName: System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity\n- uid: System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)\n  parent: System.Xaml.XamlSchemaContext\n  isExternal: false\n  name: TryGetCompatibleXamlNamespace(String,String)\n  nameWithType: XamlSchemaContext.TryGetCompatibleXamlNamespace(String,String)\n  fullName: System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(String,String)\n- uid: System.Xaml.XamlSchemaContext.#ctor*\n  parent: System.Xaml.XamlSchemaContext\n  isExternal: false\n  name: XamlSchemaContext\n  nameWithType: XamlSchemaContext.XamlSchemaContext\n- uid: System.Xaml.XamlSchemaContext.Finalize*\n  parent: System.Xaml.XamlSchemaContext\n  isExternal: false\n  name: Finalize\n  nameWithType: XamlSchemaContext.Finalize\n- uid: System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces*\n  parent: System.Xaml.XamlSchemaContext\n  isExternal: false\n  name: FullyQualifyAssemblyNamesInClrNamespaces\n  nameWithType: XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces\n- uid: System.Xaml.XamlSchemaContext.GetAllXamlNamespaces*\n  parent: System.Xaml.XamlSchemaContext\n  isExternal: false\n  name: GetAllXamlNamespaces\n  nameWithType: XamlSchemaContext.GetAllXamlNamespaces\n- uid: System.Xaml.XamlSchemaContext.GetAllXamlTypes*\n  parent: System.Xaml.XamlSchemaContext\n  isExternal: false\n  name: GetAllXamlTypes\n  nameWithType: XamlSchemaContext.GetAllXamlTypes\n- uid: System.Xaml.XamlSchemaContext.GetPreferredPrefix*\n  parent: System.Xaml.XamlSchemaContext\n  isExternal: false\n  name: GetPreferredPrefix\n  nameWithType: XamlSchemaContext.GetPreferredPrefix\n- uid: System.Xaml.XamlSchemaContext.GetValueConverter<TConverterBase>*\n  parent: System.Xaml.XamlSchemaContext\n  isExternal: false\n  name: GetValueConverter<TConverterBase>\n  nameWithType: XamlSchemaContext.GetValueConverter<TConverterBase>\n- uid: System.Xaml.XamlSchemaContext.GetXamlDirective*\n  parent: System.Xaml.XamlSchemaContext\n  isExternal: false\n  name: GetXamlDirective\n  nameWithType: XamlSchemaContext.GetXamlDirective\n- uid: System.Xaml.XamlSchemaContext.GetXamlType*\n  parent: System.Xaml.XamlSchemaContext\n  isExternal: false\n  name: GetXamlType\n  nameWithType: XamlSchemaContext.GetXamlType\n- uid: System.Xaml.XamlSchemaContext.OnAssemblyResolve*\n  parent: System.Xaml.XamlSchemaContext\n  isExternal: false\n  name: OnAssemblyResolve\n  nameWithType: XamlSchemaContext.OnAssemblyResolve\n- uid: System.Xaml.XamlSchemaContext.ReferenceAssemblies*\n  parent: System.Xaml.XamlSchemaContext\n  isExternal: false\n  name: ReferenceAssemblies\n  nameWithType: XamlSchemaContext.ReferenceAssemblies\n- uid: System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity*\n  parent: System.Xaml.XamlSchemaContext\n  isExternal: false\n  name: SupportMarkupExtensionsWithDuplicateArity\n  nameWithType: XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity\n- uid: System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace*\n  parent: System.Xaml.XamlSchemaContext\n  isExternal: false\n  name: TryGetCompatibleXamlNamespace\n  nameWithType: XamlSchemaContext.TryGetCompatibleXamlNamespace\n"}