{"nodes":[{"pos":[793,909],"content":"Provides a representation of the environment of variables and arguments that is available to an activity at runtime.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a representation of the environment of variables and arguments that is available to an activity at runtime.","pos":[0,116]}]},{"pos":[1534,1596],"content":"Called by derived class constructors to initialize the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Called by derived class constructors to initialize the object.","pos":[0,62]}]},{"pos":[2246,2392],"content":"When overridden in a derived class, returns a collection of <bpt id=\"p1\">&lt;xref href=\"System.Activities.LocationReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects in the current scope.","needQuote":true,"needEscape":true,"source":"When overridden in a derived class, returns a collection of <xref href=\"System.Activities.LocationReference\"></xref> objects in the current scope."},{"pos":[2672,2736],"content":"A collection of location reference objects in the current scope.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of location reference objects in the current scope.","pos":[0,64]}]},{"pos":[3382,3540],"content":"When overridden in a derived class, determines whether the specified <bpt id=\"p1\">&lt;xref href=\"System.Activities.LocationReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is visible in the current scope.","needQuote":true,"needEscape":true,"source":"When overridden in a derived class, determines whether the specified <xref href=\"System.Activities.LocationReference\"></xref> is visible in the current scope."},{"pos":[3763,3788],"content":"The location to evaluate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The location to evaluate.","pos":[0,25]}]},{"pos":[3847,4079],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Activities.LocationReference\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is visible in the current scope; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Activities.LocationReference\"></xref> is visible in the current scope; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[4569,4665],"content":"Gets or sets the containing <bpt id=\"p1\">&lt;xref href=\"System.Activities.LocationReferenceEnvironment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the containing <xref href=\"System.Activities.LocationReferenceEnvironment\"></xref>."},{"pos":[4864,4947],"content":"The containing <bpt id=\"p1\">&lt;xref href=\"System.Activities.LocationReferenceEnvironment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The containing <xref href=\"System.Activities.LocationReferenceEnvironment\"></xref>."},{"pos":[5424,5497],"content":"Gets the activity that determines the scoping rules for this environment.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the activity that determines the scoping rules for this environment.","pos":[0,73]}]},{"pos":[5648,5716],"content":"The activity that determines the scoping rules for this environment.","needQuote":true,"needEscape":true,"nodes":[{"content":"The activity that determines the scoping rules for this environment.","pos":[0,68]}]},{"pos":[6466,6589],"content":"When overridden in a derived class, attempts to get the specified <bpt id=\"p1\">&lt;xref href=\"System.Activities.LocationReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"When overridden in a derived class, attempts to get the specified <xref href=\"System.Activities.LocationReference\"></xref>."},{"pos":[6797,6882],"content":"The name of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.LocationReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to retrieve.","needQuote":true,"needEscape":true,"source":"The name of the <xref href=\"System.Activities.LocationReference\"></xref> to retrieve."},{"pos":[6967,7270],"content":"When this method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, `result` contains the <xref href=\"System.Activities.LocationReference\"></xref> with the specified name; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, <ph id=\"ph1\">`result`</ph> contains the <bpt id=\"p2\">&lt;xref href=\"System.Activities.LocationReference\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> with the specified name; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,263],"source":"When this method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, `result` contains the <xref href=\"System.Activities.LocationReference\"></xref> with the specified name; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"This parameter is passed uninitialized.","pos":[264,303]}]},{"pos":[7329,7562],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a <bpt id=\"p2\">&lt;xref href=\"System.Activities.LocationReference\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> with the specified name is present; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a <xref href=\"System.Activities.LocationReference\"></xref> with the specified name is present; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.LocationReferenceEnvironment\n  id: LocationReferenceEnvironment\n  children:\n  - System.Activities.LocationReferenceEnvironment.#ctor\n  - System.Activities.LocationReferenceEnvironment.GetLocationReferences\n  - System.Activities.LocationReferenceEnvironment.IsVisible(System.Activities.LocationReference)\n  - System.Activities.LocationReferenceEnvironment.Parent\n  - System.Activities.LocationReferenceEnvironment.Root\n  - System.Activities.LocationReferenceEnvironment.TryGetLocationReference(System.String,System.Activities.LocationReference@)\n  langs:\n  - csharp\n  name: LocationReferenceEnvironment\n  nameWithType: LocationReferenceEnvironment\n  fullName: System.Activities.LocationReferenceEnvironment\n  type: Class\n  summary: Provides a representation of the environment of variables and arguments that is available to an activity at runtime.\n  syntax:\n    content: public abstract class LocationReferenceEnvironment\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Activities.LocationReferenceEnvironment.#ctor\n  id: '#ctor'\n  parent: System.Activities.LocationReferenceEnvironment\n  langs:\n  - csharp\n  name: LocationReferenceEnvironment()\n  nameWithType: LocationReferenceEnvironment.LocationReferenceEnvironment()\n  fullName: System.Activities.LocationReferenceEnvironment.LocationReferenceEnvironment()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Called by derived class constructors to initialize the object.\n  syntax:\n    content: protected LocationReferenceEnvironment ();\n    parameters: []\n  overload: System.Activities.LocationReferenceEnvironment.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.LocationReferenceEnvironment.GetLocationReferences\n  id: GetLocationReferences\n  parent: System.Activities.LocationReferenceEnvironment\n  langs:\n  - csharp\n  name: GetLocationReferences()\n  nameWithType: LocationReferenceEnvironment.GetLocationReferences()\n  fullName: System.Activities.LocationReferenceEnvironment.GetLocationReferences()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: When overridden in a derived class, returns a collection of <xref href=\"System.Activities.LocationReference\"></xref> objects in the current scope.\n  syntax:\n    content: public abstract System.Collections.Generic.IEnumerable<System.Activities.LocationReference> GetLocationReferences ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Activities.LocationReference}\n      description: A collection of location reference objects in the current scope.\n  overload: System.Activities.LocationReferenceEnvironment.GetLocationReferences*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.LocationReferenceEnvironment.IsVisible(System.Activities.LocationReference)\n  id: IsVisible(System.Activities.LocationReference)\n  parent: System.Activities.LocationReferenceEnvironment\n  langs:\n  - csharp\n  name: IsVisible(LocationReference)\n  nameWithType: LocationReferenceEnvironment.IsVisible(LocationReference)\n  fullName: System.Activities.LocationReferenceEnvironment.IsVisible(LocationReference)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: When overridden in a derived class, determines whether the specified <xref href=\"System.Activities.LocationReference\"></xref> is visible in the current scope.\n  syntax:\n    content: public abstract bool IsVisible (System.Activities.LocationReference locationReference);\n    parameters:\n    - id: locationReference\n      type: System.Activities.LocationReference\n      description: The location to evaluate.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Activities.LocationReference\"></xref> is visible in the current scope; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.LocationReferenceEnvironment.IsVisible*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.LocationReferenceEnvironment.Parent\n  id: Parent\n  parent: System.Activities.LocationReferenceEnvironment\n  langs:\n  - csharp\n  name: Parent\n  nameWithType: LocationReferenceEnvironment.Parent\n  fullName: System.Activities.LocationReferenceEnvironment.Parent\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets or sets the containing <xref href=\"System.Activities.LocationReferenceEnvironment\"></xref>.\n  syntax:\n    content: public System.Activities.LocationReferenceEnvironment Parent { get; protected set; }\n    return:\n      type: System.Activities.LocationReferenceEnvironment\n      description: The containing <xref href=\"System.Activities.LocationReferenceEnvironment\"></xref>.\n  overload: System.Activities.LocationReferenceEnvironment.Parent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.LocationReferenceEnvironment.Root\n  id: Root\n  parent: System.Activities.LocationReferenceEnvironment\n  langs:\n  - csharp\n  name: Root\n  nameWithType: LocationReferenceEnvironment.Root\n  fullName: System.Activities.LocationReferenceEnvironment.Root\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets the activity that determines the scoping rules for this environment.\n  syntax:\n    content: public abstract System.Activities.Activity Root { get; }\n    return:\n      type: System.Activities.Activity\n      description: The activity that determines the scoping rules for this environment.\n  overload: System.Activities.LocationReferenceEnvironment.Root*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.LocationReferenceEnvironment.TryGetLocationReference(System.String,System.Activities.LocationReference@)\n  id: TryGetLocationReference(System.String,System.Activities.LocationReference@)\n  parent: System.Activities.LocationReferenceEnvironment\n  langs:\n  - csharp\n  name: TryGetLocationReference(String,LocationReference)\n  nameWithType: LocationReferenceEnvironment.TryGetLocationReference(String,LocationReference)\n  fullName: System.Activities.LocationReferenceEnvironment.TryGetLocationReference(String,LocationReference)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: When overridden in a derived class, attempts to get the specified <xref href=\"System.Activities.LocationReference\"></xref>.\n  syntax:\n    content: public abstract bool TryGetLocationReference (string name, out System.Activities.LocationReference result);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the <xref href=\"System.Activities.LocationReference\"></xref> to retrieve.\n    - id: result\n      type: System.Activities.LocationReference\n      description: When this method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, `result` contains the <xref href=\"System.Activities.LocationReference\"></xref> with the specified name; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a <xref href=\"System.Activities.LocationReference\"></xref> with the specified name is present; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.LocationReferenceEnvironment.TryGetLocationReference*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Activities.LocationReferenceEnvironment.#ctor\n  parent: System.Activities.LocationReferenceEnvironment\n  isExternal: false\n  name: LocationReferenceEnvironment()\n  nameWithType: LocationReferenceEnvironment.LocationReferenceEnvironment()\n  fullName: System.Activities.LocationReferenceEnvironment.LocationReferenceEnvironment()\n- uid: System.Activities.LocationReferenceEnvironment.GetLocationReferences\n  parent: System.Activities.LocationReferenceEnvironment\n  isExternal: false\n  name: GetLocationReferences()\n  nameWithType: LocationReferenceEnvironment.GetLocationReferences()\n  fullName: System.Activities.LocationReferenceEnvironment.GetLocationReferences()\n- uid: System.Collections.Generic.IEnumerable{System.Activities.LocationReference}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<LocationReference>\n  nameWithType: IEnumerable<LocationReference>\n  fullName: System.Collections.Generic.IEnumerable<System.Activities.LocationReference>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Activities.LocationReference>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.LocationReference\n    name: LocationReference\n    nameWithType: LocationReference\n    fullName: LocationReference\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.LocationReferenceEnvironment.IsVisible(System.Activities.LocationReference)\n  parent: System.Activities.LocationReferenceEnvironment\n  isExternal: false\n  name: IsVisible(LocationReference)\n  nameWithType: LocationReferenceEnvironment.IsVisible(LocationReference)\n  fullName: System.Activities.LocationReferenceEnvironment.IsVisible(LocationReference)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.LocationReference\n  parent: System.Activities\n  isExternal: false\n  name: LocationReference\n  nameWithType: LocationReference\n  fullName: System.Activities.LocationReference\n- uid: System.Activities.LocationReferenceEnvironment.Parent\n  parent: System.Activities.LocationReferenceEnvironment\n  isExternal: false\n  name: Parent\n  nameWithType: LocationReferenceEnvironment.Parent\n  fullName: System.Activities.LocationReferenceEnvironment.Parent\n- uid: System.Activities.LocationReferenceEnvironment\n  parent: System.Activities\n  isExternal: false\n  name: LocationReferenceEnvironment\n  nameWithType: LocationReferenceEnvironment\n  fullName: System.Activities.LocationReferenceEnvironment\n- uid: System.Activities.LocationReferenceEnvironment.Root\n  parent: System.Activities.LocationReferenceEnvironment\n  isExternal: false\n  name: Root\n  nameWithType: LocationReferenceEnvironment.Root\n  fullName: System.Activities.LocationReferenceEnvironment.Root\n- uid: System.Activities.Activity\n  parent: System.Activities\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n- uid: System.Activities.LocationReferenceEnvironment.TryGetLocationReference(System.String,System.Activities.LocationReference@)\n  parent: System.Activities.LocationReferenceEnvironment\n  isExternal: false\n  name: TryGetLocationReference(String,LocationReference)\n  nameWithType: LocationReferenceEnvironment.TryGetLocationReference(String,LocationReference)\n  fullName: System.Activities.LocationReferenceEnvironment.TryGetLocationReference(String,LocationReference)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.LocationReferenceEnvironment.#ctor*\n  parent: System.Activities.LocationReferenceEnvironment\n  isExternal: false\n  name: LocationReferenceEnvironment\n  nameWithType: LocationReferenceEnvironment.LocationReferenceEnvironment\n- uid: System.Activities.LocationReferenceEnvironment.GetLocationReferences*\n  parent: System.Activities.LocationReferenceEnvironment\n  isExternal: false\n  name: GetLocationReferences\n  nameWithType: LocationReferenceEnvironment.GetLocationReferences\n- uid: System.Activities.LocationReferenceEnvironment.IsVisible*\n  parent: System.Activities.LocationReferenceEnvironment\n  isExternal: false\n  name: IsVisible\n  nameWithType: LocationReferenceEnvironment.IsVisible\n- uid: System.Activities.LocationReferenceEnvironment.Parent*\n  parent: System.Activities.LocationReferenceEnvironment\n  isExternal: false\n  name: Parent\n  nameWithType: LocationReferenceEnvironment.Parent\n- uid: System.Activities.LocationReferenceEnvironment.Root*\n  parent: System.Activities.LocationReferenceEnvironment\n  isExternal: false\n  name: Root\n  nameWithType: LocationReferenceEnvironment.Root\n- uid: System.Activities.LocationReferenceEnvironment.TryGetLocationReference*\n  parent: System.Activities.LocationReferenceEnvironment\n  isExternal: false\n  name: TryGetLocationReference\n  nameWithType: LocationReferenceEnvironment.TryGetLocationReference\n"}