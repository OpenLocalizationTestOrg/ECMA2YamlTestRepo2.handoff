{"nodes":[{"pos":[909,1011],"content":"The SymbolToken structure is an object representation of a token that represents symbolic information.","needQuote":true,"needEscape":true,"nodes":[{"content":"The SymbolToken structure is an object representation of a token that represents symbolic information.","pos":[0,102]}]},{"pos":[1624,1751],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.SymbolStore.SymbolToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure when given a value.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Diagnostics.SymbolStore.SymbolToken\"></xref> structure when given a value."},{"pos":[1879,1914],"content":"The value to be used for the token.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to be used for the token.","pos":[0,35]}]},{"pos":[2496,2558],"content":"Determines whether <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> is equal to this instance.","needQuote":true,"needEscape":true,"source":"Determines whether <code>obj</code> is equal to this instance."},{"pos":[2755,2832],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.SymbolStore.SymbolToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to check.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Diagnostics.SymbolStore.SymbolToken\"></xref> to check."},{"pos":[2891,3073],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p2\">&lt;/code&gt;</ept> is equal to this instance; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>obj</code> is equal to this instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[3583,3731],"content":"Determines whether <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> is an instance of <bpt id=\"p2\">&lt;xref href=\"System.Diagnostics.SymbolStore.SymbolToken\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and is equal to this instance.","needQuote":true,"needEscape":true,"source":"Determines whether <code>obj</code> is an instance of <xref href=\"System.Diagnostics.SymbolStore.SymbolToken\"></xref> and is equal to this instance."},{"pos":[3872,3892],"content":"The object to check.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to check.","pos":[0,20]}]},{"pos":[3951,4219],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p2\">&lt;/code&gt;</ept> is an instance of <bpt id=\"p3\">&lt;xref href=\"System.Diagnostics.SymbolStore.SymbolToken\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> and is equal to this instance; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>obj</code> is an instance of <xref href=\"System.Diagnostics.SymbolStore.SymbolToken\"></xref> and is equal to this instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[4706,4752],"content":"Generates the hash code for the current token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Generates the hash code for the current token.","pos":[0,46]}]},{"pos":[4887,4923],"content":"The hash code for the current token.","needQuote":true,"needEscape":true,"nodes":[{"content":"The hash code for the current token.","pos":[0,36]}]},{"pos":[5400,5436],"content":"Gets the value of the current token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the current token.","pos":[0,36]}]},{"pos":[5559,5590],"content":"The value of the current token.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the current token.","pos":[0,31]}]},{"pos":[6324,6445],"content":"Returns a value indicating whether two <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.SymbolStore.SymbolToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects are equal.","needQuote":true,"needEscape":true,"source":"Returns a value indicating whether two <xref href=\"System.Diagnostics.SymbolStore.SymbolToken\"></xref> objects are equal."},{"pos":[6696,6772],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.SymbolStore.SymbolToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Diagnostics.SymbolStore.SymbolToken\"></xref> structure."},{"pos":[6859,6935],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.SymbolStore.SymbolToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Diagnostics.SymbolStore.SymbolToken\"></xref> structure."},{"pos":[6994,7177],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">a</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">b</ph><ept id=\"p3\">&lt;/code&gt;</ept> are equal; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>a</code> and <code>b</code> are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7924,8049],"content":"Returns a value indicating whether two <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.SymbolStore.SymbolToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects are not equal.","needQuote":true,"needEscape":true,"source":"Returns a value indicating whether two <xref href=\"System.Diagnostics.SymbolStore.SymbolToken\"></xref> objects are not equal."},{"pos":[8302,8378],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.SymbolStore.SymbolToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Diagnostics.SymbolStore.SymbolToken\"></xref> structure."},{"pos":[8465,8541],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.SymbolStore.SymbolToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Diagnostics.SymbolStore.SymbolToken\"></xref> structure."},{"pos":[8600,8787],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">a</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">b</ph><ept id=\"p3\">&lt;/code&gt;</ept> are not equal; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>a</code> and <code>b</code> are not equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.SymbolStore.SymbolToken\n  id: SymbolToken\n  children:\n  - System.Diagnostics.SymbolStore.SymbolToken.#ctor(System.Int32)\n  - System.Diagnostics.SymbolStore.SymbolToken.Equals(System.Diagnostics.SymbolStore.SymbolToken)\n  - System.Diagnostics.SymbolStore.SymbolToken.Equals(System.Object)\n  - System.Diagnostics.SymbolStore.SymbolToken.GetHashCode\n  - System.Diagnostics.SymbolStore.SymbolToken.GetToken\n  - System.Diagnostics.SymbolStore.SymbolToken.op_Equality(System.Diagnostics.SymbolStore.SymbolToken,System.Diagnostics.SymbolStore.SymbolToken)\n  - System.Diagnostics.SymbolStore.SymbolToken.op_Inequality(System.Diagnostics.SymbolStore.SymbolToken,System.Diagnostics.SymbolStore.SymbolToken)\n  langs:\n  - csharp\n  name: SymbolToken\n  nameWithType: SymbolToken\n  fullName: System.Diagnostics.SymbolStore.SymbolToken\n  type: Struct\n  summary: The SymbolToken structure is an object representation of a token that represents symbolic information.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public struct SymbolToken\n  inheritance:\n  - System.ValueType\n  implements: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.SymbolToken.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Diagnostics.SymbolStore.SymbolToken\n  langs:\n  - csharp\n  name: SymbolToken(Int32)\n  nameWithType: SymbolToken.SymbolToken(Int32)\n  fullName: System.Diagnostics.SymbolStore.SymbolToken.SymbolToken(Int32)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.SymbolStore.SymbolToken\"></xref> structure when given a value.\n  syntax:\n    content: public SymbolToken (int val);\n    parameters:\n    - id: val\n      type: System.Int32\n      description: The value to be used for the token.\n  overload: System.Diagnostics.SymbolStore.SymbolToken.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.SymbolToken.Equals(System.Diagnostics.SymbolStore.SymbolToken)\n  id: Equals(System.Diagnostics.SymbolStore.SymbolToken)\n  parent: System.Diagnostics.SymbolStore.SymbolToken\n  langs:\n  - csharp\n  name: Equals(SymbolToken)\n  nameWithType: SymbolToken.Equals(SymbolToken)\n  fullName: System.Diagnostics.SymbolStore.SymbolToken.Equals(SymbolToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: Determines whether <code>obj</code> is equal to this instance.\n  syntax:\n    content: public bool Equals (System.Diagnostics.SymbolStore.SymbolToken obj);\n    parameters:\n    - id: obj\n      type: System.Diagnostics.SymbolStore.SymbolToken\n      description: The <xref href=\"System.Diagnostics.SymbolStore.SymbolToken\"></xref> to check.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>obj</code> is equal to this instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Diagnostics.SymbolStore.SymbolToken.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.SymbolToken.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Diagnostics.SymbolStore.SymbolToken\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: SymbolToken.Equals(Object)\n  fullName: System.Diagnostics.SymbolStore.SymbolToken.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: Determines whether <code>obj</code> is an instance of <xref href=\"System.Diagnostics.SymbolStore.SymbolToken\"></xref> and is equal to this instance.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to check.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>obj</code> is an instance of <xref href=\"System.Diagnostics.SymbolStore.SymbolToken\"></xref> and is equal to this instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Diagnostics.SymbolStore.SymbolToken.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.SymbolToken.GetHashCode\n  id: GetHashCode\n  parent: System.Diagnostics.SymbolStore.SymbolToken\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: SymbolToken.GetHashCode()\n  fullName: System.Diagnostics.SymbolStore.SymbolToken.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: Generates the hash code for the current token.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code for the current token.\n  overload: System.Diagnostics.SymbolStore.SymbolToken.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.SymbolToken.GetToken\n  id: GetToken\n  parent: System.Diagnostics.SymbolStore.SymbolToken\n  langs:\n  - csharp\n  name: GetToken()\n  nameWithType: SymbolToken.GetToken()\n  fullName: System.Diagnostics.SymbolStore.SymbolToken.GetToken()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the value of the current token.\n  syntax:\n    content: public int GetToken ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The value of the current token.\n  overload: System.Diagnostics.SymbolStore.SymbolToken.GetToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.SymbolToken.op_Equality(System.Diagnostics.SymbolStore.SymbolToken,System.Diagnostics.SymbolStore.SymbolToken)\n  id: op_Equality(System.Diagnostics.SymbolStore.SymbolToken,System.Diagnostics.SymbolStore.SymbolToken)\n  parent: System.Diagnostics.SymbolStore.SymbolToken\n  langs:\n  - csharp\n  name: op_Equality(SymbolToken,SymbolToken)\n  nameWithType: SymbolToken.op_Equality(SymbolToken,SymbolToken)\n  fullName: System.Diagnostics.SymbolStore.SymbolToken.op_Equality(SymbolToken,SymbolToken)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: Returns a value indicating whether two <xref href=\"System.Diagnostics.SymbolStore.SymbolToken\"></xref> objects are equal.\n  syntax:\n    content: public static bool op_Equality (System.Diagnostics.SymbolStore.SymbolToken a, System.Diagnostics.SymbolStore.SymbolToken b);\n    parameters:\n    - id: a\n      type: System.Diagnostics.SymbolStore.SymbolToken\n      description: A <xref href=\"System.Diagnostics.SymbolStore.SymbolToken\"></xref> structure.\n    - id: b\n      type: System.Diagnostics.SymbolStore.SymbolToken\n      description: A <xref href=\"System.Diagnostics.SymbolStore.SymbolToken\"></xref> structure.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>a</code> and <code>b</code> are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Diagnostics.SymbolStore.SymbolToken.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.SymbolToken.op_Inequality(System.Diagnostics.SymbolStore.SymbolToken,System.Diagnostics.SymbolStore.SymbolToken)\n  id: op_Inequality(System.Diagnostics.SymbolStore.SymbolToken,System.Diagnostics.SymbolStore.SymbolToken)\n  parent: System.Diagnostics.SymbolStore.SymbolToken\n  langs:\n  - csharp\n  name: op_Inequality(SymbolToken,SymbolToken)\n  nameWithType: SymbolToken.op_Inequality(SymbolToken,SymbolToken)\n  fullName: System.Diagnostics.SymbolStore.SymbolToken.op_Inequality(SymbolToken,SymbolToken)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: Returns a value indicating whether two <xref href=\"System.Diagnostics.SymbolStore.SymbolToken\"></xref> objects are not equal.\n  syntax:\n    content: public static bool op_Inequality (System.Diagnostics.SymbolStore.SymbolToken a, System.Diagnostics.SymbolStore.SymbolToken b);\n    parameters:\n    - id: a\n      type: System.Diagnostics.SymbolStore.SymbolToken\n      description: A <xref href=\"System.Diagnostics.SymbolStore.SymbolToken\"></xref> structure.\n    - id: b\n      type: System.Diagnostics.SymbolStore.SymbolToken\n      description: A <xref href=\"System.Diagnostics.SymbolStore.SymbolToken\"></xref> structure.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>a</code> and <code>b</code> are not equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Diagnostics.SymbolStore.SymbolToken.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Diagnostics.SymbolStore.SymbolToken.#ctor(System.Int32)\n  parent: System.Diagnostics.SymbolStore.SymbolToken\n  isExternal: false\n  name: SymbolToken(Int32)\n  nameWithType: SymbolToken.SymbolToken(Int32)\n  fullName: System.Diagnostics.SymbolStore.SymbolToken.SymbolToken(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.SymbolToken.Equals(System.Diagnostics.SymbolStore.SymbolToken)\n  parent: System.Diagnostics.SymbolStore.SymbolToken\n  isExternal: false\n  name: Equals(SymbolToken)\n  nameWithType: SymbolToken.Equals(SymbolToken)\n  fullName: System.Diagnostics.SymbolStore.SymbolToken.Equals(SymbolToken)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.SymbolStore.SymbolToken\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: SymbolToken\n  nameWithType: SymbolToken\n  fullName: System.Diagnostics.SymbolStore.SymbolToken\n- uid: System.Diagnostics.SymbolStore.SymbolToken.Equals(System.Object)\n  parent: System.Diagnostics.SymbolStore.SymbolToken\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: SymbolToken.Equals(Object)\n  fullName: System.Diagnostics.SymbolStore.SymbolToken.Equals(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Diagnostics.SymbolStore.SymbolToken.GetHashCode\n  parent: System.Diagnostics.SymbolStore.SymbolToken\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: SymbolToken.GetHashCode()\n  fullName: System.Diagnostics.SymbolStore.SymbolToken.GetHashCode()\n- uid: System.Diagnostics.SymbolStore.SymbolToken.GetToken\n  parent: System.Diagnostics.SymbolStore.SymbolToken\n  isExternal: false\n  name: GetToken()\n  nameWithType: SymbolToken.GetToken()\n  fullName: System.Diagnostics.SymbolStore.SymbolToken.GetToken()\n- uid: System.Diagnostics.SymbolStore.SymbolToken.op_Equality(System.Diagnostics.SymbolStore.SymbolToken,System.Diagnostics.SymbolStore.SymbolToken)\n  parent: System.Diagnostics.SymbolStore.SymbolToken\n  isExternal: false\n  name: op_Equality(SymbolToken,SymbolToken)\n  nameWithType: SymbolToken.op_Equality(SymbolToken,SymbolToken)\n  fullName: System.Diagnostics.SymbolStore.SymbolToken.op_Equality(SymbolToken,SymbolToken)\n- uid: System.Diagnostics.SymbolStore.SymbolToken.op_Inequality(System.Diagnostics.SymbolStore.SymbolToken,System.Diagnostics.SymbolStore.SymbolToken)\n  parent: System.Diagnostics.SymbolStore.SymbolToken\n  isExternal: false\n  name: op_Inequality(SymbolToken,SymbolToken)\n  nameWithType: SymbolToken.op_Inequality(SymbolToken,SymbolToken)\n  fullName: System.Diagnostics.SymbolStore.SymbolToken.op_Inequality(SymbolToken,SymbolToken)\n- uid: System.Diagnostics.SymbolStore.SymbolToken.#ctor*\n  parent: System.Diagnostics.SymbolStore.SymbolToken\n  isExternal: false\n  name: SymbolToken\n  nameWithType: SymbolToken.SymbolToken\n- uid: System.Diagnostics.SymbolStore.SymbolToken.Equals*\n  parent: System.Diagnostics.SymbolStore.SymbolToken\n  isExternal: false\n  name: Equals\n  nameWithType: SymbolToken.Equals\n- uid: System.Diagnostics.SymbolStore.SymbolToken.GetHashCode*\n  parent: System.Diagnostics.SymbolStore.SymbolToken\n  isExternal: false\n  name: GetHashCode\n  nameWithType: SymbolToken.GetHashCode\n- uid: System.Diagnostics.SymbolStore.SymbolToken.GetToken*\n  parent: System.Diagnostics.SymbolStore.SymbolToken\n  isExternal: false\n  name: GetToken\n  nameWithType: SymbolToken.GetToken\n- uid: System.Diagnostics.SymbolStore.SymbolToken.op_Equality*\n  parent: System.Diagnostics.SymbolStore.SymbolToken\n  isExternal: false\n  name: op_Equality\n  nameWithType: SymbolToken.op_Equality\n- uid: System.Diagnostics.SymbolStore.SymbolToken.op_Inequality*\n  parent: System.Diagnostics.SymbolStore.SymbolToken\n  isExternal: false\n  name: op_Inequality\n  nameWithType: SymbolToken.op_Inequality\n"}