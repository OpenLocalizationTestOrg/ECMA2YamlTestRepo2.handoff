{"nodes":[{"pos":[564,618],"content":"Provides information about successful security events.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides information about successful security events.","pos":[0,54]}]},{"pos":[631,3467],"content":"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management> namespace contains the health event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.       The WebSuccessAuditEvent class is used when a successful security-related operation occurs. An example of this is a successful URL authorization for a Web request.       The following list describes the features for which events of type WebSuccessAuditEvent are raised by ASP.NET:      -   File Authorization. Successful conditions are audited. File authorization is only attempted by ASP.NET when a Windows Identity is associated with the request. The related event audit code is <xref:System.Web.Management.WebEventCodes.AuditFileAuthorizationSuccess>.      -   URL Authorization. It signifies access of a URL resource for which authorization is granted. Successful conditions are audited. The related event audit code is <xref:System.Web.Management.WebEventCodes.AuditUrlAuthorizationSuccess>.      -   Other security conditions. The following is a list of the related event codes:          -   <xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationSuccess>          -   <xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationSuccess>       When a WebSuccessAuditEvent is raised, ASP.NET health monitoring increments the related Audit Success Events Raised performance counter and then checks the `healthMonitoring` configuration to determine whether any providers subscribe to the event. If providers subscribe to the event, ASP.NET dispatches the event to them for processing.      > [!NOTE] >  To view the Audit Success Event Raised performance counter in System Monitor (PerfMon), in the **Add Counters** window select **ASP.NET** from the **Performance object** drop-down list, select the **Audit Success Event Raised** performance counter, and click the **Add** button. For more information, see [Monitoring ASP.NET Application Performance](~/add/includes/ajax-current-ext-md.md).       Because success audits represent an expected condition, you may not want to subscribe to them. You can subscribe to them in order to provide access auditing for the site.      > [!NOTE] >  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers. For an example of deriving from the WebSuccessAuditEvent class, see the example provided in this topic.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications.","pos":[0,101]},{"content":"The &lt;xref:System.Web.Management&gt; namespace contains the health event types responsible for packaging application health-status data and the provider types responsible for processing this data.","pos":[102,294],"source":" The <xref:System.Web.Management> namespace contains the health event types responsible for packaging application health-status data and the provider types responsible for processing this data."},{"content":"It also contains supporting types that help during the management of health events.","pos":[295,378]},{"content":"The WebSuccessAuditEvent class is used when a successful security-related operation occurs.","pos":[385,476]},{"content":"An example of this is a successful URL authorization for a Web request.","pos":[477,548]},{"content":"The following list describes the features for which events of type WebSuccessAuditEvent are raised by ASP.NET:      -   File Authorization.","pos":[555,694]},{"content":"Successful conditions are audited.","pos":[695,729]},{"content":"File authorization is only attempted by ASP.NET when a Windows Identity is associated with the request.","pos":[730,833]},{"content":"The related event audit code is &lt;xref:System.Web.Management.WebEventCodes.AuditFileAuthorizationSuccess&gt;.","pos":[834,939],"source":" The related event audit code is <xref:System.Web.Management.WebEventCodes.AuditFileAuthorizationSuccess>."},{"content":"-   URL Authorization.","pos":[945,967]},{"content":"It signifies access of a URL resource for which authorization is granted.","pos":[968,1041]},{"content":"Successful conditions are audited.","pos":[1042,1076]},{"content":"The related event audit code is &lt;xref:System.Web.Management.WebEventCodes.AuditUrlAuthorizationSuccess&gt;.","pos":[1077,1181],"source":" The related event audit code is <xref:System.Web.Management.WebEventCodes.AuditUrlAuthorizationSuccess>."},{"content":"-   Other security conditions.","pos":[1187,1217]},{"content":"The following is a list of the related event codes:          -   &lt;xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationSuccess&gt;          -   &lt;xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationSuccess&gt;       When a WebSuccessAuditEvent is raised, ASP.NET health monitoring increments the related Audit Success Events Raised performance counter and then checks the <ph id=\"ph1\">`healthMonitoring`</ph> configuration to determine whether any providers subscribe to the event.","pos":[1218,1704],"source":" The following is a list of the related event codes:          -   <xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationSuccess>          -   <xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationSuccess>       When a WebSuccessAuditEvent is raised, ASP.NET health monitoring increments the related Audit Success Events Raised performance counter and then checks the `healthMonitoring` configuration to determine whether any providers subscribe to the event."},{"content":"If providers subscribe to the event, ASP.NET dispatches the event to them for processing.","pos":[1705,1794]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  To view the Audit Success Event Raised performance counter in System Monitor (PerfMon), in the <bpt id=\"p1\">**</bpt>Add Counters<ept id=\"p1\">**</ept> window select <bpt id=\"p2\">**</bpt>ASP.NET<ept id=\"p2\">**</ept> from the <bpt id=\"p3\">**</bpt>Performance object<ept id=\"p3\">**</ept> drop-down list, select the <bpt id=\"p4\">**</bpt>Audit Success Event Raised<ept id=\"p4\">**</ept> performance counter, and click the <bpt id=\"p5\">**</bpt>Add<ept id=\"p5\">**</ept> button.","pos":[1800,2091],"source":"      > [!NOTE] >  To view the Audit Success Event Raised performance counter in System Monitor (PerfMon), in the **Add Counters** window select **ASP.NET** from the **Performance object** drop-down list, select the **Audit Success Event Raised** performance counter, and click the **Add** button."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Monitoring ASP.NET Application Performance<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[2092,2202],"source":" For more information, see [Monitoring ASP.NET Application Performance](~/add/includes/ajax-current-ext-md.md)."},{"content":"Because success audits represent an expected condition, you may not want to subscribe to them.","pos":[2209,2303]},{"content":"You can subscribe to them in order to provide access auditing for the site.","pos":[2304,2379]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the <ph id=\"ph2\">`healthMonitoring`</ph> configuration section.","pos":[2385,2607],"source":"      > [!NOTE] >  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section."},{"content":"You can also derive from the health-monitoring types to create your own custom events and providers.","pos":[2608,2708]},{"content":"For an example of deriving from the WebSuccessAuditEvent class, see the example provided in this topic.","pos":[2709,2812]}]},{"pos":[6702,6836],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Management.WebSuccessAuditEvent\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the supplied parameters.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Management.WebSuccessAuditEvent\"></xref> class using the supplied parameters."},{"pos":[6849,7390],"content":"This constructor is used internally by the ASP.NET health-monitoring system. You will never use it to instantiate a <xref:System.Web.Management.WebSuccessAuditEvent> object, but you can call this constructor when implementing your own event type that inherits from this class.      > [!NOTE] >  The WebSuccessAuditEvent constructor is not intended to be used directly from your code. It is called by ASP.NET. You can call the WebSuccessAuditEvent constructor when deriving from the <xref:System.Web.Management.WebSuccessAuditEvent> class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This constructor is used internally by the ASP.NET health-monitoring system.","pos":[0,76]},{"content":"You will never use it to instantiate a &lt;xref:System.Web.Management.WebSuccessAuditEvent&gt; object, but you can call this constructor when implementing your own event type that inherits from this class.","pos":[77,276],"source":" You will never use it to instantiate a <xref:System.Web.Management.WebSuccessAuditEvent> object, but you can call this constructor when implementing your own event type that inherits from this class."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The WebSuccessAuditEvent constructor is not intended to be used directly from your code.","pos":[282,383],"source":"      > [!NOTE] >  The WebSuccessAuditEvent constructor is not intended to be used directly from your code."},{"content":"It is called by ASP.NET.","pos":[384,408]},{"content":"You can call the WebSuccessAuditEvent constructor when deriving from the &lt;xref:System.Web.Management.WebSuccessAuditEvent&gt; class.","pos":[409,538],"source":" You can call the WebSuccessAuditEvent constructor when deriving from the <xref:System.Web.Management.WebSuccessAuditEvent> class."}]},{"pos":[8061,8083],"content":"The event description.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event description.","pos":[0,22]}]},{"pos":[8151,8194],"content":"The object that is the source of the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object that is the source of the event.","pos":[0,43]}]},{"pos":[8259,8439],"content":"The code associated with the event. When you implement a custom event, the event code must be greater than <xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The code associated with the event.","pos":[0,35]},{"content":"When you implement a custom event, the event code must be greater than <bpt id=\"p1\">&lt;xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[36,180],"source":" When you implement a custom event, the event code must be greater than <xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"></xref>."}]},{"pos":[9134,9268],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Management.WebSuccessAuditEvent\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the supplied parameters.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Management.WebSuccessAuditEvent\"></xref> class using the supplied parameters."},{"pos":[9281,9822],"content":"This constructor is used internally by the ASP.NET health-monitoring system. You will never use it to instantiate a <xref:System.Web.Management.WebSuccessAuditEvent> object, but you can call this constructor when implementing your own event type that inherits from this class.      > [!NOTE] >  The WebSuccessAuditEvent constructor is not intended to be used directly from your code. It is called by ASP.NET. You can call the WebSuccessAuditEvent constructor when deriving from the <xref:System.Web.Management.WebSuccessAuditEvent> class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This constructor is used internally by the ASP.NET health-monitoring system.","pos":[0,76]},{"content":"You will never use it to instantiate a &lt;xref:System.Web.Management.WebSuccessAuditEvent&gt; object, but you can call this constructor when implementing your own event type that inherits from this class.","pos":[77,276],"source":" You will never use it to instantiate a <xref:System.Web.Management.WebSuccessAuditEvent> object, but you can call this constructor when implementing your own event type that inherits from this class."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The WebSuccessAuditEvent constructor is not intended to be used directly from your code.","pos":[282,383],"source":"      > [!NOTE] >  The WebSuccessAuditEvent constructor is not intended to be used directly from your code."},{"content":"It is called by ASP.NET.","pos":[384,408]},{"content":"You can call the WebSuccessAuditEvent constructor when deriving from the &lt;xref:System.Web.Management.WebSuccessAuditEvent&gt; class.","pos":[409,538],"source":" You can call the WebSuccessAuditEvent constructor when deriving from the <xref:System.Web.Management.WebSuccessAuditEvent> class."}]},{"pos":[10514,10536],"content":"The event description.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event description.","pos":[0,22]}]},{"pos":[10604,10647],"content":"The object that is the source of the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object that is the source of the event.","pos":[0,43]}]},{"pos":[10712,10892],"content":"The code associated with the event. When you implement a custom event, the event code must be greater than <xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The code associated with the event.","pos":[0,35]},{"content":"When you implement a custom event, the event code must be greater than <bpt id=\"p1\">&lt;xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[36,180],"source":" When you implement a custom event, the event code must be greater than <xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"></xref>."}]},{"pos":[10963,11083],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.Management.WebEventCodes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that specifies the detailed identifier for the event.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.Management.WebEventCodes\"></xref> value that specifies the detailed identifier for the event."},{"pos":[11621,11684],"content":"Increments the Audit Success Events Raised performance counter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Increments the Audit Success Events Raised performance counter.","pos":[0,63]}]},{"pos":[11697,12399],"content":"The Audit Success Events Raised performance counter tracks the number of successful audit events raised since the application started. This method also calls the parent <xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A> method, which increments the Events Raised counter. This counter tracks the total number of events raised.       To view these performance counters in System Monitor (PerfMon), in the **Add Counters** window select **ASP.NET** from the **Performance object** drop-down list, select the performance counter you want to view, and click the **Add** button. For more information, see [Monitoring ASP.NET Application Performance](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Audit Success Events Raised performance counter tracks the number of successful audit events raised since the application started.","pos":[0,134]},{"content":"This method also calls the parent &lt;xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A&gt; method, which increments the Events Raised counter.","pos":[135,287],"source":" This method also calls the parent <xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A> method, which increments the Events Raised counter."},{"content":"This counter tracks the total number of events raised.","pos":[288,342]},{"content":"To view these performance counters in System Monitor (PerfMon), in the <bpt id=\"p1\">**</bpt>Add Counters<ept id=\"p1\">**</ept> window select <bpt id=\"p2\">**</bpt>ASP.NET<ept id=\"p2\">**</ept> from the <bpt id=\"p3\">**</bpt>Performance object<ept id=\"p3\">**</ept> drop-down list, select the performance counter you want to view, and click the <bpt id=\"p4\">**</bpt>Add<ept id=\"p4\">**</ept> button.","pos":[349,589],"source":"       To view these performance counters in System Monitor (PerfMon), in the **Add Counters** window select **ASP.NET** from the **Performance object** drop-down list, select the performance counter you want to view, and click the **Add** button."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Monitoring ASP.NET Application Performance<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[590,700],"source":" For more information, see [Monitoring ASP.NET Application Performance](~/add/includes/ajax-current-ext-md.md)."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Management.WebSuccessAuditEvent\n  id: WebSuccessAuditEvent\n  children:\n  - System.Web.Management.WebSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32)\n  - System.Web.Management.WebSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)\n  - System.Web.Management.WebSuccessAuditEvent.IncrementPerfCounters\n  langs:\n  - csharp\n  name: WebSuccessAuditEvent\n  nameWithType: WebSuccessAuditEvent\n  fullName: System.Web.Management.WebSuccessAuditEvent\n  type: Class\n  summary: Provides information about successful security events.\n  remarks: \"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management> namespace contains the health event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.  \\n  \\n The WebSuccessAuditEvent class is used when a successful security-related operation occurs. An example of this is a successful URL authorization for a Web request.  \\n  \\n The following list describes the features for which events of type WebSuccessAuditEvent are raised by ASP.NET:  \\n  \\n-   File Authorization. Successful conditions are audited. File authorization is only attempted by ASP.NET when a Windows Identity is associated with the request. The related event audit code is <xref:System.Web.Management.WebEventCodes.AuditFileAuthorizationSuccess>.  \\n  \\n-   URL Authorization. It signifies access of a URL resource for which authorization is granted. Successful conditions are audited. The related event audit code is <xref:System.Web.Management.WebEventCodes.AuditUrlAuthorizationSuccess>.  \\n  \\n-   Other security conditions. The following is a list of the related event codes:  \\n  \\n    -   <xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationSuccess>  \\n  \\n    -   <xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationSuccess>  \\n  \\n When a WebSuccessAuditEvent is raised, ASP.NET health monitoring increments the related Audit Success Events Raised performance counter and then checks the `healthMonitoring` configuration to determine whether any providers subscribe to the event. If providers subscribe to the event, ASP.NET dispatches the event to them for processing.  \\n  \\n> [!NOTE]\\n>  To view the Audit Success Event Raised performance counter in System Monitor (PerfMon), in the **Add Counters** window select **ASP.NET** from the **Performance object** drop-down list, select the **Audit Success Event Raised** performance counter, and click the **Add** button. For more information, see [Monitoring ASP.NET Application Performance](~/add/includes/ajax-current-ext-md.md).  \\n  \\n Because success audits represent an expected condition, you may not want to subscribe to them. You can subscribe to them in order to provide access auditing for the site.  \\n  \\n> [!NOTE]\\n>  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers. For an example of deriving from the WebSuccessAuditEvent class, see the example provided in this topic.\"\n  example:\n  - \"The following code example shows how to derive from the WebSuccessAuditEvent class to create a custom audit event.  \\n  \\n [!code-vb[System.Web.Management.WebSuccessAuditEvent#1](~/add/codesnippet/visualbasic/t-system.web.management._9_1.vb)]\\n [!code-cs[System.Web.Management.WebSuccessAuditEvent#1](~/add/codesnippet/csharp/t-system.web.management._9_1.cs)]  \\n  \\n The following example is an excerpt of the configuration file that enables ASP.NET health monitoring to use the event.  \\n  \\n```  \\n<healthMonitoring   \\n..enabled=\\\"true\\\"  \\n..heartBeatInterval=\\\"0\\\">   \\n  <providers>  \\n    <add name=\\\"EventLogProvider\\\"   \\n    type=\\\"System.Web.Management.EventLogWebEventProvider,  \\n    System.Web,Version=2.0.3600.0,Culture=neutral,  \\n    PublicKeyToken=b03f5f7f11d50a3a\\\"/>  \\n  </providers>  \\n  <eventMappings>  \\n    <add  name=\\\"SampleWebSuccessAuditEvent\\\"   \\n      type=\\\"SamplesAspNet.SampleWebSuccessAuditEvent,  \\n      websuccessauditevent,Version=1.0.1663.31140,   \\n      Culture=neutral,   \\n      PublicKeyToken=0d1fa0f69d94de96,   \\n      processorArchitecture=MSIL\\\"/>  \\n  </eventMappings>  \\n  <rules>  \\n    <add name=\\\"Custom Failure Audit Default\\\"  \\n      eventName=\\\" SampleWebFailureAuditEvent \\\"  \\n      provider=\\\"EventLogProvider\\\"  \\n      profile=\\\"Default\\\"/>    \\n  </rules>  \\n</healthMonitoring>  \\n```\"\n  syntax:\n    content: 'public class WebSuccessAuditEvent : System.Web.Management.WebAuditEvent'\n  inheritance:\n  - System.Object\n  - System.Web.Management.WebBaseEvent\n  - System.Web.Management.WebManagementEvent\n  - System.Web.Management.WebAuditEvent\n  implements: []\n  inheritedMembers:\n  - System.Web.Management.WebAuditEvent.RequestInformation\n  - System.Web.Management.WebBaseEvent.ApplicationInformation\n  - System.Web.Management.WebBaseEvent.EventCode\n  - System.Web.Management.WebBaseEvent.EventDetailCode\n  - System.Web.Management.WebBaseEvent.EventID\n  - System.Web.Management.WebBaseEvent.EventOccurrence\n  - System.Web.Management.WebBaseEvent.EventSequence\n  - System.Web.Management.WebBaseEvent.EventSource\n  - System.Web.Management.WebBaseEvent.EventTime\n  - System.Web.Management.WebBaseEvent.EventTimeUtc\n  - System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)\n  - System.Web.Management.WebBaseEvent.Message\n  - System.Web.Management.WebBaseEvent.Raise\n  - System.Web.Management.WebBaseEvent.Raise(System.Web.Management.WebBaseEvent)\n  - System.Web.Management.WebBaseEvent.ToString\n  - System.Web.Management.WebBaseEvent.ToString(System.Boolean,System.Boolean)\n  - System.Web.Management.WebManagementEvent.ProcessInformation\n  platform:\n  - net462\n- uid: System.Web.Management.WebSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32)\n  id: '#ctor(System.String,System.Object,System.Int32)'\n  parent: System.Web.Management.WebSuccessAuditEvent\n  langs:\n  - csharp\n  name: WebSuccessAuditEvent(String,Object,Int32)\n  nameWithType: WebSuccessAuditEvent.WebSuccessAuditEvent(String,Object,Int32)\n  fullName: System.Web.Management.WebSuccessAuditEvent.WebSuccessAuditEvent(String,Object,Int32)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Initializes a new instance of the <xref href=\"System.Web.Management.WebSuccessAuditEvent\"></xref> class using the supplied parameters.\n  remarks: \"This constructor is used internally by the ASP.NET health-monitoring system. You will never use it to instantiate a <xref:System.Web.Management.WebSuccessAuditEvent> object, but you can call this constructor when implementing your own event type that inherits from this class.  \\n  \\n> [!NOTE]\\n>  The WebSuccessAuditEvent constructor is not intended to be used directly from your code. It is called by ASP.NET. You can call the WebSuccessAuditEvent constructor when deriving from the <xref:System.Web.Management.WebSuccessAuditEvent> class.\"\n  example:\n  - \"The following code example shows how to call this constructor in the `SampleWebSuccessAuditEvent` class. This code example is part of a larger example provided for the <xref:System.Web.Management.WebSuccessAuditEvent> class.  \\n  \\n [!code-vb[System.Web.Management.WebSuccessAuditEvent#2](~/add/codesnippet/visualbasic/5c3da28f-d581-4e89-9969-_1.vb)]\\n [!code-cs[System.Web.Management.WebSuccessAuditEvent#2](~/add/codesnippet/csharp/5c3da28f-d581-4e89-9969-_1.cs)]\"\n  syntax:\n    content: protected WebSuccessAuditEvent (string message, object eventSource, int eventCode);\n    parameters:\n    - id: message\n      type: System.String\n      description: The event description.\n    - id: eventSource\n      type: System.Object\n      description: The object that is the source of the event.\n    - id: eventCode\n      type: System.Int32\n      description: The code associated with the event. When you implement a custom event, the event code must be greater than <xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"></xref>.\n  overload: System.Web.Management.WebSuccessAuditEvent.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Management.WebSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)\n  id: '#ctor(System.String,System.Object,System.Int32,System.Int32)'\n  parent: System.Web.Management.WebSuccessAuditEvent\n  langs:\n  - csharp\n  name: WebSuccessAuditEvent(String,Object,Int32,Int32)\n  nameWithType: WebSuccessAuditEvent.WebSuccessAuditEvent(String,Object,Int32,Int32)\n  fullName: System.Web.Management.WebSuccessAuditEvent.WebSuccessAuditEvent(String,Object,Int32,Int32)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Initializes a new instance of the <xref href=\"System.Web.Management.WebSuccessAuditEvent\"></xref> class using the supplied parameters.\n  remarks: \"This constructor is used internally by the ASP.NET health-monitoring system. You will never use it to instantiate a <xref:System.Web.Management.WebSuccessAuditEvent> object, but you can call this constructor when implementing your own event type that inherits from this class.  \\n  \\n> [!NOTE]\\n>  The WebSuccessAuditEvent constructor is not intended to be used directly from your code. It is called by ASP.NET. You can call the WebSuccessAuditEvent constructor when deriving from the <xref:System.Web.Management.WebSuccessAuditEvent> class.\"\n  example:\n  - \"The following code example shows how to call this constructor in the `SampleWebSuccessAuditEvent` class. This code example is part of a larger example provided for the <xref:System.Web.Management.WebSuccessAuditEvent> class.  \\n  \\n [!code-vb[System.Web.Management.WebSuccessAuditEvent#3](~/add/codesnippet/visualbasic/eb3e15a7-d3d9-41f8-b6c1-_1.vb)]\\n [!code-cs[System.Web.Management.WebSuccessAuditEvent#3](~/add/codesnippet/csharp/eb3e15a7-d3d9-41f8-b6c1-_1.cs)]\"\n  syntax:\n    content: protected WebSuccessAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode);\n    parameters:\n    - id: message\n      type: System.String\n      description: The event description.\n    - id: eventSource\n      type: System.Object\n      description: The object that is the source of the event.\n    - id: eventCode\n      type: System.Int32\n      description: The code associated with the event. When you implement a custom event, the event code must be greater than <xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"></xref>.\n    - id: eventDetailCode\n      type: System.Int32\n      description: The <xref href=\"System.Web.Management.WebEventCodes\"></xref> value that specifies the detailed identifier for the event.\n  overload: System.Web.Management.WebSuccessAuditEvent.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Management.WebSuccessAuditEvent.IncrementPerfCounters\n  id: IncrementPerfCounters\n  parent: System.Web.Management.WebSuccessAuditEvent\n  langs:\n  - csharp\n  name: IncrementPerfCounters()\n  nameWithType: WebSuccessAuditEvent.IncrementPerfCounters()\n  fullName: System.Web.Management.WebSuccessAuditEvent.IncrementPerfCounters()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Increments the Audit Success Events Raised performance counter.\n  remarks: \"The Audit Success Events Raised performance counter tracks the number of successful audit events raised since the application started. This method also calls the parent <xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A> method, which increments the Events Raised counter. This counter tracks the total number of events raised.  \\n  \\n To view these performance counters in System Monitor (PerfMon), in the **Add Counters** window select **ASP.NET** from the **Performance object** drop-down list, select the performance counter you want to view, and click the **Add** button. For more information, see [Monitoring ASP.NET Application Performance](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected override void IncrementPerfCounters ();\n    parameters: []\n  overload: System.Web.Management.WebSuccessAuditEvent.IncrementPerfCounters*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.Management.WebAuditEvent\n  isExternal: false\n  name: System.Web.Management.WebAuditEvent\n- uid: System.Web.Management.WebSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32)\n  parent: System.Web.Management.WebSuccessAuditEvent\n  isExternal: false\n  name: WebSuccessAuditEvent(String,Object,Int32)\n  nameWithType: WebSuccessAuditEvent.WebSuccessAuditEvent(String,Object,Int32)\n  fullName: System.Web.Management.WebSuccessAuditEvent.WebSuccessAuditEvent(String,Object,Int32)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.Management.WebSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)\n  parent: System.Web.Management.WebSuccessAuditEvent\n  isExternal: false\n  name: WebSuccessAuditEvent(String,Object,Int32,Int32)\n  nameWithType: WebSuccessAuditEvent.WebSuccessAuditEvent(String,Object,Int32,Int32)\n  fullName: System.Web.Management.WebSuccessAuditEvent.WebSuccessAuditEvent(String,Object,Int32,Int32)\n- uid: System.Web.Management.WebSuccessAuditEvent.IncrementPerfCounters\n  parent: System.Web.Management.WebSuccessAuditEvent\n  isExternal: false\n  name: IncrementPerfCounters()\n  nameWithType: WebSuccessAuditEvent.IncrementPerfCounters()\n  fullName: System.Web.Management.WebSuccessAuditEvent.IncrementPerfCounters()\n- uid: System.Web.Management.WebSuccessAuditEvent.#ctor*\n  parent: System.Web.Management.WebSuccessAuditEvent\n  isExternal: false\n  name: WebSuccessAuditEvent\n  nameWithType: WebSuccessAuditEvent.WebSuccessAuditEvent\n- uid: System.Web.Management.WebSuccessAuditEvent.IncrementPerfCounters*\n  parent: System.Web.Management.WebSuccessAuditEvent\n  isExternal: false\n  name: IncrementPerfCounters\n  nameWithType: WebSuccessAuditEvent.IncrementPerfCounters\n"}