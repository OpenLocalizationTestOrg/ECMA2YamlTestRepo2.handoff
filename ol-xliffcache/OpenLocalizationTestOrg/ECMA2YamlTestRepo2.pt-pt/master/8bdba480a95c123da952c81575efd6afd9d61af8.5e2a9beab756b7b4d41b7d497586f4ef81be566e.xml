{"nodes":[{"pos":[886,948],"content":"Enables access to ASP.NET user profiles through a Web service.","needQuote":true,"needEscape":true,"nodes":[{"content":"Enables access to ASP.NET user profiles through a Web service.","pos":[0,62]}]},{"pos":[961,2602],"content":"The ProfileService class enables you to get and set a user's profile properties through a Windows Communication Foundation (WCF) service. You can keep custom information for users through profile properties. For information about profile properties, see [ASP.NET Profile Properties Overview](~/add/includes/ajax-current-ext-md.md).       The ProfileService class contains the following methods that should be accessed only through a WCF service:      -   <xref:System.Web.ApplicationServices.ProfileService.GetPropertiesForCurrentUser%2A>      -   <xref:System.Web.ApplicationServices.ProfileService.GetAllPropertiesForCurrentUser%2A>      -   <xref:System.Web.ApplicationServices.ProfileService.SetPropertiesForCurrentUser%2A>      -   <xref:System.Web.ApplicationServices.ProfileService.GetPropertiesMetadata%2A>       To call these methods, you must enable the profile service on the Web server and then connect a WCF-compatible client application to the Web service. For information about how to configure the profile service, see [How to: Enable the WCF Profile Service](~/add/includes/ajax-current-ext-md.md).       The <xref:System.Web.ApplicationServices.ProfileService.ValidatingProperties> event is raised when a user's profile properties are set. You can create an event handler for the <xref:System.Web.ApplicationServices.ProfileService.ValidatingProperties> event to validate property values or to dynamically change their values.       For an example of how to use the WCF profile service from a console application, see [Walkthrough: Using ASP.NET Application Services](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ProfileService class enables you to get and set a user's profile properties through a Windows Communication Foundation (WCF) service.","pos":[0,137]},{"content":"You can keep custom information for users through profile properties.","pos":[138,207]},{"content":"For information about profile properties, see <bpt id=\"p1\">[</bpt>ASP.NET Profile Properties Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[208,331],"source":" For information about profile properties, see [ASP.NET Profile Properties Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"The ProfileService class contains the following methods that should be accessed only through a WCF service:      -   &lt;xref:System.Web.ApplicationServices.ProfileService.GetPropertiesForCurrentUser%2A&gt;      -   &lt;xref:System.Web.ApplicationServices.ProfileService.GetAllPropertiesForCurrentUser%2A&gt;      -   &lt;xref:System.Web.ApplicationServices.ProfileService.SetPropertiesForCurrentUser%2A&gt;      -   &lt;xref:System.Web.ApplicationServices.ProfileService.GetPropertiesMetadata%2A&gt;       To call these methods, you must enable the profile service on the Web server and then connect a WCF-compatible client application to the Web service.","pos":[338,970],"source":"       The ProfileService class contains the following methods that should be accessed only through a WCF service:      -   <xref:System.Web.ApplicationServices.ProfileService.GetPropertiesForCurrentUser%2A>      -   <xref:System.Web.ApplicationServices.ProfileService.GetAllPropertiesForCurrentUser%2A>      -   <xref:System.Web.ApplicationServices.ProfileService.SetPropertiesForCurrentUser%2A>      -   <xref:System.Web.ApplicationServices.ProfileService.GetPropertiesMetadata%2A>       To call these methods, you must enable the profile service on the Web server and then connect a WCF-compatible client application to the Web service."},{"content":"For information about how to configure the profile service, see <bpt id=\"p1\">[</bpt>How to: Enable the WCF Profile Service<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[971,1115],"source":" For information about how to configure the profile service, see [How to: Enable the WCF Profile Service](~/add/includes/ajax-current-ext-md.md)."},{"content":"The &lt;xref:System.Web.ApplicationServices.ProfileService.ValidatingProperties&gt; event is raised when a user's profile properties are set.","pos":[1122,1257],"source":"       The <xref:System.Web.ApplicationServices.ProfileService.ValidatingProperties> event is raised when a user's profile properties are set."},{"content":"You can create an event handler for the &lt;xref:System.Web.ApplicationServices.ProfileService.ValidatingProperties&gt; event to validate property values or to dynamically change their values.","pos":[1258,1444],"source":" You can create an event handler for the <xref:System.Web.ApplicationServices.ProfileService.ValidatingProperties> event to validate property values or to dynamically change their values."},{"content":"For an example of how to use the WCF profile service from a console application, see <bpt id=\"p1\">[</bpt>Walkthrough: Using ASP.NET Application Services<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1451,1625],"source":"       For an example of how to use the WCF profile service from a console application, see [Walkthrough: Using ASP.NET Application Services](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[3786,3893],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.ApplicationServices.ProfileService\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.ApplicationServices.ProfileService\"></xref> class."},{"pos":[4623,4734],"content":"Retrieves all the profile properties and values that are available to the profile service for the current user.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves all the profile properties and values that are available to the profile service for the current user.","pos":[0,111]}]},{"pos":[4746,5459],"content":"Use the GetAllPropertiesForCurrentUser method to retrieve all the user's profile properties through one Web service call. For example, you can call this method and then store the profile properties in the client application and retrieve values as needed. The GetAllPropertiesForCurrentUser method returns values only for the profile properties that have been configured to be accessed through a Web service. You set whether a profile property can be accessed through a Web service by setting either the <xref:System.Web.Configuration.ScriptingProfileServiceSection.ReadAccessProperties%2A> property or the <xref:System.Web.Configuration.ScriptingProfileServiceSection.WriteAccessProperties%2A> property to `true`.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the GetAllPropertiesForCurrentUser method to retrieve all the user's profile properties through one Web service call.","pos":[0,121]},{"content":"For example, you can call this method and then store the profile properties in the client application and retrieve values as needed.","pos":[122,254]},{"content":"The GetAllPropertiesForCurrentUser method returns values only for the profile properties that have been configured to be accessed through a Web service.","pos":[255,407]},{"content":"You set whether a profile property can be accessed through a Web service by setting either the &lt;xref:System.Web.Configuration.ScriptingProfileServiceSection.ReadAccessProperties%2A&gt; property or the &lt;xref:System.Web.Configuration.ScriptingProfileServiceSection.WriteAccessProperties%2A&gt; property to <ph id=\"ph1\">`true`</ph>.","pos":[408,713],"source":" You set whether a profile property can be accessed through a Web service by setting either the <xref:System.Web.Configuration.ScriptingProfileServiceSection.ReadAccessProperties%2A> property or the <xref:System.Web.Configuration.ScriptingProfileServiceSection.WriteAccessProperties%2A> property to `true`."}]},{"pos":[5698,5796],"content":"A value that indicates whether properties are returned only for users who have been authenticated.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value that indicates whether properties are returned only for users who have been authenticated.","pos":[0,98]}]},{"pos":[5907,5941],"content":"The profile properties and values.","needQuote":true,"needEscape":true,"nodes":[{"content":"The profile properties and values.","pos":[0,34]}]},{"pos":[6781,6856],"content":"Retrieves the specified profile properties and values for the current user.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the specified profile properties and values for the current user.","pos":[0,75]}]},{"pos":[6868,7452],"content":"To get specific profile property values for the current users, you use the GetPropertiesForCurrentUser method to specify which profile properties are retrieved. The GetPropertiesForCurrentUser method returns values only for profile properties that are configured for access through a Web service. You configure a profile property for access through a Web service by setting the <xref:System.Web.Configuration.ScriptingProfileServiceSection.ReadAccessProperties%2A> property or <xref:System.Web.Configuration.ScriptingProfileServiceSection.WriteAccessProperties%2A> property to `true`.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"To get specific profile property values for the current users, you use the GetPropertiesForCurrentUser method to specify which profile properties are retrieved.","pos":[0,160]},{"content":"The GetPropertiesForCurrentUser method returns values only for profile properties that are configured for access through a Web service.","pos":[161,296]},{"content":"You configure a profile property for access through a Web service by setting the &lt;xref:System.Web.Configuration.ScriptingProfileServiceSection.ReadAccessProperties%2A&gt; property or &lt;xref:System.Web.Configuration.ScriptingProfileServiceSection.WriteAccessProperties%2A&gt; property to <ph id=\"ph1\">`true`</ph>.","pos":[297,584],"source":" You configure a profile property for access through a Web service by setting the <xref:System.Web.Configuration.ScriptingProfileServiceSection.ReadAccessProperties%2A> property or <xref:System.Web.Configuration.ScriptingProfileServiceSection.WriteAccessProperties%2A> property to `true`."}]},{"pos":[7775,7867],"content":"A collection of string values that contains the names of the profile properties to retrieve.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of string values that contains the names of the profile properties to retrieve.","pos":[0,92]}]},{"pos":[7946,8044],"content":"A value that indicates whether properties are returned only for users who have been authenticated.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value that indicates whether properties are returned only for users who have been authenticated.","pos":[0,98]}]},{"pos":[8155,8199],"content":"The profile property information and values.","needQuote":true,"needEscape":true,"nodes":[{"content":"The profile property information and values.","pos":[0,44]}]},{"pos":[8403,8558],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">properties</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter or an item in the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">properties</ph><ept id=\"p2\">&lt;/code&gt;</ept> collection is <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>properties</code> parameter or an item in the <code>properties</code> collection is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[9040,9138],"content":"Retrieves information about the profile properties that are available through the profile service.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves information about the profile properties that are available through the profile service.","pos":[0,98]}]},{"pos":[9151,9882],"content":"Use the GetPropertiesMetadata method to retrieve information about profile properties from a client application that is compatible with the Windows Communication Framework (WCF). You can retrieve information such as the following:      -   The name and type of the properties.      -   Whether they are read-only.      -   Whether they can be accessed by users who have not been authenticated.      -   The default values for the properties.       After retrieving these values, a client application can take appropriate actions such as not trying to set a read-only property. The current user does not have to be authenticated in order to call the GetPropertiesMetadata method, because the properties apply to all users.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the GetPropertiesMetadata method to retrieve information about profile properties from a client application that is compatible with the Windows Communication Framework (WCF). You can retrieve information such as the following:      -   The name and type of the properties.      -   Whether they are read-only.      -   Whether they can be accessed by users who have not been authenticated.      -   The default values for the properties.       After retrieving these values, a client application can take appropriate actions such as not trying to set a read-only property. The current user does not have to be authenticated in order to call the GetPropertiesMetadata method, because the properties apply to all users.","pos":[0,721],"nodes":[{"content":"Use the GetPropertiesMetadata method to retrieve information about profile properties from a client application that is compatible with the Windows Communication Framework (WCF).","pos":[0,178]},{"content":"You can retrieve information such as the following:      -   The name and type of the properties.","pos":[179,276]},{"content":"-   Whether they are read-only.","pos":[282,313]},{"content":"-   Whether they can be accessed by users who have not been authenticated.","pos":[319,393]},{"content":"-   The default values for the properties.","pos":[399,441]},{"content":"After retrieving these values, a client application can take appropriate actions such as not trying to set a read-only property.","pos":[448,576]},{"content":"The current user does not have to be authenticated in order to call the GetPropertiesMetadata method, because the properties apply to all users.","pos":[577,721]}]}]},{"pos":[10116,10266],"content":"An array of <bpt id=\"p1\">&lt;xref href=\"System.Web.ApplicationServices.ProfilePropertyMetadata\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects that contain information about the profile properties.","needQuote":true,"needEscape":true,"source":"An array of <xref href=\"System.Web.ApplicationServices.ProfilePropertyMetadata\"></xref> objects that contain information about the profile properties."},{"pos":[11146,11210],"content":"Sets the values of the specified properties in the user profile.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the values of the specified properties in the user profile.","pos":[0,64]}]},{"pos":[11223,11866],"content":"You use the SetPropertiesForCurrentUser method to set a user's profile properties from an application that is compatible with the Windows Communication Foundation (WCF). The SetPropertiesForCurrentUser method returns any values that are not set, which might be for any one of the following reasons:      -   The specified profile property is read only (the <xref:System.Web.Configuration.ScriptingProfileServiceSection.WriteAccessProperties%2A> property for a specified profile property is not set to `true`).      -   The user profile does not have a profile property that has the matching name.      -   Validation of the value failed.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You use the SetPropertiesForCurrentUser method to set a user's profile properties from an application that is compatible with the Windows Communication Foundation (WCF).","pos":[0,169]},{"content":"The SetPropertiesForCurrentUser method returns any values that are not set, which might be for any one of the following reasons:      -   The specified profile property is read only (the &lt;xref:System.Web.Configuration.ScriptingProfileServiceSection.WriteAccessProperties%2A&gt; property for a specified profile property is not set to <ph id=\"ph1\">`true`</ph>).","pos":[170,509],"source":" The SetPropertiesForCurrentUser method returns any values that are not set, which might be for any one of the following reasons:      -   The specified profile property is read only (the <xref:System.Web.Configuration.ScriptingProfileServiceSection.WriteAccessProperties%2A> property for a specified profile property is not set to `true`)."},{"content":"-   The user profile does not have a profile property that has the matching name.","pos":[515,596]},{"content":"-   Validation of the value failed.","pos":[602,637]}]},{"pos":[12200,12277],"content":"A collection that contains names and values of the profile properties to set.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection that contains names and values of the profile properties to set.","pos":[0,77]}]},{"pos":[12356,12449],"content":"A value that indicates whether properties are set only for users who have been authenticated.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value that indicates whether properties are set only for users who have been authenticated.","pos":[0,93]}]},{"pos":[12550,12612],"content":"The properties that were not set for the user profile, if any.","needQuote":true,"needEscape":true,"nodes":[{"content":"The properties that were not set for the user profile, if any.","pos":[0,62]}]},{"pos":[13186,13234],"content":"Occurs when a user's profile properties are set.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when a user's profile properties are set.","pos":[0,48]}]},{"pos":[13247,14029],"content":"You can create an event handler for the ValidatingProperties event to validate property values or to dynamically change their values. The ValidatingProperties event is raised when the <xref:System.Web.ApplicationServices.ProfileService.SetPropertiesForCurrentUser%2A> method is called. If the value for a property fails validation, add that property to the <xref:System.Web.ApplicationServices.ValidatingPropertiesEventArgs.FailedProperties%2A> collection of the <xref:System.Web.ApplicationServices.ValidatingPropertiesEventArgs> class. Any properties that are in the <xref:System.Web.ApplicationServices.ValidatingPropertiesEventArgs.FailedProperties%2A> collection will not be saved to the user profile.       You can add and register the event handler in the Global.asax file.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can create an event handler for the ValidatingProperties event to validate property values or to dynamically change their values. The ValidatingProperties event is raised when the <xref:System.Web.ApplicationServices.ProfileService.SetPropertiesForCurrentUser%2A> method is called. If the value for a property fails validation, add that property to the <xref:System.Web.ApplicationServices.ValidatingPropertiesEventArgs.FailedProperties%2A> collection of the <xref:System.Web.ApplicationServices.ValidatingPropertiesEventArgs> class. Any properties that are in the <xref:System.Web.ApplicationServices.ValidatingPropertiesEventArgs.FailedProperties%2A> collection will not be saved to the user profile.       You can add and register the event handler in the Global.asax file.","pos":[0,780],"nodes":[{"content":"You can create an event handler for the ValidatingProperties event to validate property values or to dynamically change their values.","pos":[0,133]},{"content":"The ValidatingProperties event is raised when the &lt;xref:System.Web.ApplicationServices.ProfileService.SetPropertiesForCurrentUser%2A&gt; method is called.","pos":[134,285],"source":" The ValidatingProperties event is raised when the <xref:System.Web.ApplicationServices.ProfileService.SetPropertiesForCurrentUser%2A> method is called."},{"content":"If the value for a property fails validation, add that property to the &lt;xref:System.Web.ApplicationServices.ValidatingPropertiesEventArgs.FailedProperties%2A&gt; collection of the &lt;xref:System.Web.ApplicationServices.ValidatingPropertiesEventArgs&gt; class.","pos":[286,537],"source":" If the value for a property fails validation, add that property to the <xref:System.Web.ApplicationServices.ValidatingPropertiesEventArgs.FailedProperties%2A> collection of the <xref:System.Web.ApplicationServices.ValidatingPropertiesEventArgs> class."},{"content":"Any properties that are in the &lt;xref:System.Web.ApplicationServices.ValidatingPropertiesEventArgs.FailedProperties%2A&gt; collection will not be saved to the user profile.","pos":[538,706],"source":" Any properties that are in the <xref:System.Web.ApplicationServices.ValidatingPropertiesEventArgs.FailedProperties%2A> collection will not be saved to the user profile."},{"content":"You can add and register the event handler in the Global.asax file.","pos":[713,780]}]}]},{"pos":[14857,14869],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.ApplicationServices.ProfileService\n  id: ProfileService\n  children:\n  - System.Web.ApplicationServices.ProfileService.#ctor\n  - System.Web.ApplicationServices.ProfileService.GetAllPropertiesForCurrentUser(System.Boolean)\n  - System.Web.ApplicationServices.ProfileService.GetPropertiesForCurrentUser(System.Collections.Generic.IEnumerable{System.String},System.Boolean)\n  - System.Web.ApplicationServices.ProfileService.GetPropertiesMetadata\n  - System.Web.ApplicationServices.ProfileService.SetPropertiesForCurrentUser(System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)\n  - System.Web.ApplicationServices.ProfileService.ValidatingProperties\n  langs:\n  - csharp\n  name: ProfileService\n  nameWithType: ProfileService\n  fullName: System.Web.ApplicationServices.ProfileService\n  type: Class\n  summary: Enables access to ASP.NET user profiles through a Web service.\n  remarks: \"The ProfileService class enables you to get and set a user's profile properties through a Windows Communication Foundation (WCF) service. You can keep custom information for users through profile properties. For information about profile properties, see [ASP.NET Profile Properties Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The ProfileService class contains the following methods that should be accessed only through a WCF service:  \\n  \\n-   <xref:System.Web.ApplicationServices.ProfileService.GetPropertiesForCurrentUser%2A>  \\n  \\n-   <xref:System.Web.ApplicationServices.ProfileService.GetAllPropertiesForCurrentUser%2A>  \\n  \\n-   <xref:System.Web.ApplicationServices.ProfileService.SetPropertiesForCurrentUser%2A>  \\n  \\n-   <xref:System.Web.ApplicationServices.ProfileService.GetPropertiesMetadata%2A>  \\n  \\n To call these methods, you must enable the profile service on the Web server and then connect a WCF-compatible client application to the Web service. For information about how to configure the profile service, see [How to: Enable the WCF Profile Service](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The <xref:System.Web.ApplicationServices.ProfileService.ValidatingProperties> event is raised when a user's profile properties are set. You can create an event handler for the <xref:System.Web.ApplicationServices.ProfileService.ValidatingProperties> event to validate property values or to dynamically change their values.  \\n  \\n For an example of how to use the WCF profile service from a console application, see [Walkthrough: Using ASP.NET Application Services](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: >-\n      [System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Required)]\n\n      [System.ServiceModel.ServiceBehavior(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.Single, Namespace=\"http://asp.net/ApplicationServices/v200\")]\n\n      [System.ServiceModel.ServiceContract(Namespace=\"http://asp.net/ApplicationServices/v200\")]\n\n      [System.ServiceModel.ServiceKnownType(\"GetKnownTypes\", typeof(System.Web.ApplicationServices.KnownTypesProvider))]\n\n      public class ProfileService\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.ApplicationServices.ProfileService.#ctor\n  id: '#ctor'\n  parent: System.Web.ApplicationServices.ProfileService\n  langs:\n  - csharp\n  name: ProfileService()\n  nameWithType: ProfileService.ProfileService()\n  fullName: System.Web.ApplicationServices.ProfileService.ProfileService()\n  type: Constructor\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.ApplicationServices\n  summary: Initializes a new instance of the <xref href=\"System.Web.ApplicationServices.ProfileService\"></xref> class.\n  syntax:\n    content: public ProfileService ();\n    parameters: []\n  overload: System.Web.ApplicationServices.ProfileService.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ApplicationServices.ProfileService.GetAllPropertiesForCurrentUser(System.Boolean)\n  id: GetAllPropertiesForCurrentUser(System.Boolean)\n  parent: System.Web.ApplicationServices.ProfileService\n  langs:\n  - csharp\n  name: GetAllPropertiesForCurrentUser(Boolean)\n  nameWithType: ProfileService.GetAllPropertiesForCurrentUser(Boolean)\n  fullName: System.Web.ApplicationServices.ProfileService.GetAllPropertiesForCurrentUser(Boolean)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.ApplicationServices\n  summary: Retrieves all the profile properties and values that are available to the profile service for the current user.\n  remarks: Use the GetAllPropertiesForCurrentUser method to retrieve all the user's profile properties through one Web service call. For example, you can call this method and then store the profile properties in the client application and retrieve values as needed. The GetAllPropertiesForCurrentUser method returns values only for the profile properties that have been configured to be accessed through a Web service. You set whether a profile property can be accessed through a Web service by setting either the <xref:System.Web.Configuration.ScriptingProfileServiceSection.ReadAccessProperties%2A> property or the <xref:System.Web.Configuration.ScriptingProfileServiceSection.WriteAccessProperties%2A> property to `true`.\n  syntax:\n    content: public System.Collections.Generic.Dictionary<string,object> GetAllPropertiesForCurrentUser (bool authenticatedUserOnly);\n    parameters:\n    - id: authenticatedUserOnly\n      type: System.Boolean\n      description: A value that indicates whether properties are returned only for users who have been authenticated.\n    return:\n      type: System.Collections.Generic.Dictionary{System.String,System.Object}\n      description: The profile properties and values.\n  overload: System.Web.ApplicationServices.ProfileService.GetAllPropertiesForCurrentUser*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ApplicationServices.ProfileService.GetPropertiesForCurrentUser(System.Collections.Generic.IEnumerable{System.String},System.Boolean)\n  id: GetPropertiesForCurrentUser(System.Collections.Generic.IEnumerable{System.String},System.Boolean)\n  parent: System.Web.ApplicationServices.ProfileService\n  langs:\n  - csharp\n  name: GetPropertiesForCurrentUser(IEnumerable<String>,Boolean)\n  nameWithType: ProfileService.GetPropertiesForCurrentUser(IEnumerable<String>,Boolean)\n  fullName: System.Web.ApplicationServices.ProfileService.GetPropertiesForCurrentUser(IEnumerable<String>,Boolean)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.ApplicationServices\n  summary: Retrieves the specified profile properties and values for the current user.\n  remarks: To get specific profile property values for the current users, you use the GetPropertiesForCurrentUser method to specify which profile properties are retrieved. The GetPropertiesForCurrentUser method returns values only for profile properties that are configured for access through a Web service. You configure a profile property for access through a Web service by setting the <xref:System.Web.Configuration.ScriptingProfileServiceSection.ReadAccessProperties%2A> property or <xref:System.Web.Configuration.ScriptingProfileServiceSection.WriteAccessProperties%2A> property to `true`.\n  syntax:\n    content: public System.Collections.Generic.Dictionary<string,object> GetPropertiesForCurrentUser (System.Collections.Generic.IEnumerable<string> properties, bool authenticatedUserOnly);\n    parameters:\n    - id: properties\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: A collection of string values that contains the names of the profile properties to retrieve.\n    - id: authenticatedUserOnly\n      type: System.Boolean\n      description: A value that indicates whether properties are returned only for users who have been authenticated.\n    return:\n      type: System.Collections.Generic.Dictionary{System.String,System.Object}\n      description: The profile property information and values.\n  overload: System.Web.ApplicationServices.ProfileService.GetPropertiesForCurrentUser*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>properties</code> parameter or an item in the <code>properties</code> collection is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.ApplicationServices.ProfileService.GetPropertiesMetadata\n  id: GetPropertiesMetadata\n  parent: System.Web.ApplicationServices.ProfileService\n  langs:\n  - csharp\n  name: GetPropertiesMetadata()\n  nameWithType: ProfileService.GetPropertiesMetadata()\n  fullName: System.Web.ApplicationServices.ProfileService.GetPropertiesMetadata()\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.ApplicationServices\n  summary: Retrieves information about the profile properties that are available through the profile service.\n  remarks: \"Use the GetPropertiesMetadata method to retrieve information about profile properties from a client application that is compatible with the Windows Communication Framework (WCF). You can retrieve information such as the following:  \\n  \\n-   The name and type of the properties.  \\n  \\n-   Whether they are read-only.  \\n  \\n-   Whether they can be accessed by users who have not been authenticated.  \\n  \\n-   The default values for the properties.  \\n  \\n After retrieving these values, a client application can take appropriate actions such as not trying to set a read-only property. The current user does not have to be authenticated in order to call the GetPropertiesMetadata method, because the properties apply to all users.\"\n  syntax:\n    content: public System.Web.ApplicationServices.ProfilePropertyMetadata[] GetPropertiesMetadata ();\n    parameters: []\n    return:\n      type: System.Web.ApplicationServices.ProfilePropertyMetadata[]\n      description: An array of <xref href=\"System.Web.ApplicationServices.ProfilePropertyMetadata\"></xref> objects that contain information about the profile properties.\n  overload: System.Web.ApplicationServices.ProfileService.GetPropertiesMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ApplicationServices.ProfileService.SetPropertiesForCurrentUser(System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)\n  id: SetPropertiesForCurrentUser(System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)\n  parent: System.Web.ApplicationServices.ProfileService\n  langs:\n  - csharp\n  name: SetPropertiesForCurrentUser(IDictionary<String,Object>,Boolean)\n  nameWithType: ProfileService.SetPropertiesForCurrentUser(IDictionary<String,Object>,Boolean)\n  fullName: System.Web.ApplicationServices.ProfileService.SetPropertiesForCurrentUser(IDictionary<String,Object>,Boolean)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.ApplicationServices\n  summary: Sets the values of the specified properties in the user profile.\n  remarks: \"You use the SetPropertiesForCurrentUser method to set a user's profile properties from an application that is compatible with the Windows Communication Foundation (WCF). The SetPropertiesForCurrentUser method returns any values that are not set, which might be for any one of the following reasons:  \\n  \\n-   The specified profile property is read only (the <xref:System.Web.Configuration.ScriptingProfileServiceSection.WriteAccessProperties%2A> property for a specified profile property is not set to `true`).  \\n  \\n-   The user profile does not have a profile property that has the matching name.  \\n  \\n-   Validation of the value failed.\"\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<string> SetPropertiesForCurrentUser (System.Collections.Generic.IDictionary<string,object> values, bool authenticatedUserOnly);\n    parameters:\n    - id: values\n      type: System.Collections.Generic.IDictionary{System.String,System.Object}\n      description: A collection that contains names and values of the profile properties to set.\n    - id: authenticatedUserOnly\n      type: System.Boolean\n      description: A value that indicates whether properties are set only for users who have been authenticated.\n    return:\n      type: System.Collections.ObjectModel.Collection{System.String}\n      description: The properties that were not set for the user profile, if any.\n  overload: System.Web.ApplicationServices.ProfileService.SetPropertiesForCurrentUser*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ApplicationServices.ProfileService.ValidatingProperties\n  id: ValidatingProperties\n  parent: System.Web.ApplicationServices.ProfileService\n  langs:\n  - csharp\n  name: ValidatingProperties\n  nameWithType: ProfileService.ValidatingProperties\n  fullName: System.Web.ApplicationServices.ProfileService.ValidatingProperties\n  type: Event\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.ApplicationServices\n  summary: Occurs when a user's profile properties are set.\n  remarks: \"You can create an event handler for the ValidatingProperties event to validate property values or to dynamically change their values. The ValidatingProperties event is raised when the <xref:System.Web.ApplicationServices.ProfileService.SetPropertiesForCurrentUser%2A> method is called. If the value for a property fails validation, add that property to the <xref:System.Web.ApplicationServices.ValidatingPropertiesEventArgs.FailedProperties%2A> collection of the <xref:System.Web.ApplicationServices.ValidatingPropertiesEventArgs> class. Any properties that are in the <xref:System.Web.ApplicationServices.ValidatingPropertiesEventArgs.FailedProperties%2A> collection will not be saved to the user profile.  \\n  \\n You can add and register the event handler in the Global.asax file.\"\n  example:\n  - \"The following example shows an event handler for the ValidatingProperties event. When the value passed for `FirstName` property is empty or `null`, the `FirstName` property is added to the <xref:System.Web.ApplicationServices.ValidatingPropertiesEventArgs.FailedProperties%2A> collection.  \\n  \\n [!code-vb[System.Web.ApplicationServices.ProfileService#1](~/add/codesnippet/visualbasic/e-system.web.application_2_1.asax)]\\n [!code-cs[System.Web.ApplicationServices.ProfileService#1](~/add/codesnippet/csharp/e-system.web.application_2_1.asax)]\"\n  syntax:\n    content: public static event EventHandler<System.Web.ApplicationServices.ValidatingPropertiesEventArgs> ValidatingProperties;\n    return:\n      type: System.EventHandler{System.Web.ApplicationServices.ValidatingPropertiesEventArgs}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Web.ApplicationServices.ProfileService.#ctor\n  parent: System.Web.ApplicationServices.ProfileService\n  isExternal: false\n  name: ProfileService()\n  nameWithType: ProfileService.ProfileService()\n  fullName: System.Web.ApplicationServices.ProfileService.ProfileService()\n- uid: System.Web.ApplicationServices.ProfileService.GetAllPropertiesForCurrentUser(System.Boolean)\n  parent: System.Web.ApplicationServices.ProfileService\n  isExternal: false\n  name: GetAllPropertiesForCurrentUser(Boolean)\n  nameWithType: ProfileService.GetAllPropertiesForCurrentUser(Boolean)\n  fullName: System.Web.ApplicationServices.ProfileService.GetAllPropertiesForCurrentUser(Boolean)\n- uid: System.Collections.Generic.Dictionary{System.String,System.Object}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: Dictionary<String,Object>\n  nameWithType: Dictionary<String,Object>\n  fullName: System.Collections.Generic.Dictionary<System.String,System.Object>\n  spec.csharp:\n  - uid: System.Collections.Generic.Dictionary`2\n    name: Dictionary\n    nameWithType: Dictionary\n    fullName: Dictionary<System.String,System.Object>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.ApplicationServices.ProfileService.GetPropertiesForCurrentUser(System.Collections.Generic.IEnumerable{System.String},System.Boolean)\n  parent: System.Web.ApplicationServices.ProfileService\n  isExternal: false\n  name: GetPropertiesForCurrentUser(IEnumerable<String>,Boolean)\n  nameWithType: ProfileService.GetPropertiesForCurrentUser(IEnumerable<String>,Boolean)\n  fullName: System.Web.ApplicationServices.ProfileService.GetPropertiesForCurrentUser(IEnumerable<String>,Boolean)\n- uid: System.Collections.Generic.IEnumerable{System.String}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<String>\n  nameWithType: IEnumerable<String>\n  fullName: System.Collections.Generic.IEnumerable<System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.String>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.ApplicationServices.ProfileService.GetPropertiesMetadata\n  parent: System.Web.ApplicationServices.ProfileService\n  isExternal: false\n  name: GetPropertiesMetadata()\n  nameWithType: ProfileService.GetPropertiesMetadata()\n  fullName: System.Web.ApplicationServices.ProfileService.GetPropertiesMetadata()\n- uid: System.Web.ApplicationServices.ProfilePropertyMetadata[]\n  parent: System.Web.ApplicationServices\n  isExternal: false\n  name: ProfilePropertyMetadata\n  nameWithType: ProfilePropertyMetadata\n  fullName: System.Web.ApplicationServices.ProfilePropertyMetadata[]\n  spec.csharp:\n  - uid: System.Web.ApplicationServices.ProfilePropertyMetadata\n    name: ProfilePropertyMetadata\n    nameWithType: ProfilePropertyMetadata\n    fullName: ProfilePropertyMetadata[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Web.ApplicationServices.ProfileService.SetPropertiesForCurrentUser(System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)\n  parent: System.Web.ApplicationServices.ProfileService\n  isExternal: false\n  name: SetPropertiesForCurrentUser(IDictionary<String,Object>,Boolean)\n  nameWithType: ProfileService.SetPropertiesForCurrentUser(IDictionary<String,Object>,Boolean)\n  fullName: System.Web.ApplicationServices.ProfileService.SetPropertiesForCurrentUser(IDictionary<String,Object>,Boolean)\n- uid: System.Collections.ObjectModel.Collection{System.String}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: Collection<String>\n  nameWithType: Collection<String>\n  fullName: System.Collections.ObjectModel.Collection<System.String>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: Collection<System.String>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Collections.Generic.IDictionary{System.String,System.Object}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IDictionary<String,Object>\n  nameWithType: IDictionary<String,Object>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: IDictionary<System.String,System.Object>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.ApplicationServices.ProfileService.ValidatingProperties\n  parent: System.Web.ApplicationServices.ProfileService\n  isExternal: false\n  name: ValidatingProperties\n  nameWithType: ProfileService.ValidatingProperties\n  fullName: System.Web.ApplicationServices.ProfileService.ValidatingProperties\n- uid: System.EventHandler{System.Web.ApplicationServices.ValidatingPropertiesEventArgs}\n  parent: System\n  isExternal: true\n  name: EventHandler<ValidatingPropertiesEventArgs>\n  nameWithType: EventHandler<ValidatingPropertiesEventArgs>\n  fullName: System.EventHandler<System.Web.ApplicationServices.ValidatingPropertiesEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: EventHandler<System.Web.ApplicationServices.ValidatingPropertiesEventArgs>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Web.ApplicationServices.ValidatingPropertiesEventArgs\n    name: ValidatingPropertiesEventArgs\n    nameWithType: ValidatingPropertiesEventArgs\n    fullName: ValidatingPropertiesEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.ApplicationServices.ProfileService.#ctor*\n  parent: System.Web.ApplicationServices.ProfileService\n  isExternal: false\n  name: ProfileService\n  nameWithType: ProfileService.ProfileService\n- uid: System.Web.ApplicationServices.ProfileService.GetAllPropertiesForCurrentUser*\n  parent: System.Web.ApplicationServices.ProfileService\n  isExternal: false\n  name: GetAllPropertiesForCurrentUser\n  nameWithType: ProfileService.GetAllPropertiesForCurrentUser\n- uid: System.Web.ApplicationServices.ProfileService.GetPropertiesForCurrentUser*\n  parent: System.Web.ApplicationServices.ProfileService\n  isExternal: false\n  name: GetPropertiesForCurrentUser\n  nameWithType: ProfileService.GetPropertiesForCurrentUser\n- uid: System.Web.ApplicationServices.ProfileService.GetPropertiesMetadata*\n  parent: System.Web.ApplicationServices.ProfileService\n  isExternal: false\n  name: GetPropertiesMetadata\n  nameWithType: ProfileService.GetPropertiesMetadata\n- uid: System.Web.ApplicationServices.ProfileService.SetPropertiesForCurrentUser*\n  parent: System.Web.ApplicationServices.ProfileService\n  isExternal: false\n  name: SetPropertiesForCurrentUser\n  nameWithType: ProfileService.SetPropertiesForCurrentUser\n"}