{"nodes":[{"pos":[783,930],"content":"Provides access to the request and response objects used by the <xref href=\"System.Net.HttpListener\"></xref> class. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides access to the request and response objects used by the <bpt id=\"p1\">&lt;xref href=\"System.Net.HttpListener\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","pos":[0,115],"source":"Provides access to the request and response objects used by the <xref href=\"System.Net.HttpListener\"></xref> class."},{"content":"This class cannot be inherited.","pos":[116,147]}]},{"pos":[943,2413],"content":"This class provides the information related to a client's Hypertext Transfer Protocol (HTTP) request being processed by an <xref:System.Net.HttpListener> object. This class also has methods that allow an <xref:System.Net.HttpListener> object to accept a WebSocket connection.       The <xref:System.Net.HttpListener.GetContext%2A> method returns instances of the HttpListenerContext class. To get the object that represents the client request, use the <xref:System.Net.HttpListenerContext.Request%2A> property. To get the object that represents the response that will be sent to the client by the <xref:System.Net.HttpListener>, use the <xref:System.Net.HttpListenerContext.Response%2A> property. To get user information about the client sending the request, such as its login name and whether it has been authenticated, you can query the properties in the <xref:System.Security.Principal.IPrincipal> object returned by the <xref:System.Net.HttpListenerContext.User%2A> property.       Closing an HttpListenerContext object sends the response to the client and frees any resources used by the HttpListenerContext. Aborting an HttpListenerContext object discards the response to the client if it has not already been sent, and frees any resources used by the HttpListenerContext. After closing or aborting an HttpListenerContext object, you cannot reference its methods or properties. If you do so, you will receive an <xref:System.ObjectDisposedException> exception.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This class provides the information related to a client's Hypertext Transfer Protocol (HTTP) request being processed by an <xref:System.Net.HttpListener> object. This class also has methods that allow an <xref:System.Net.HttpListener> object to accept a WebSocket connection.       The <xref:System.Net.HttpListener.GetContext%2A> method returns instances of the HttpListenerContext class. To get the object that represents the client request, use the <xref:System.Net.HttpListenerContext.Request%2A> property. To get the object that represents the response that will be sent to the client by the <xref:System.Net.HttpListener>, use the <xref:System.Net.HttpListenerContext.Response%2A> property. To get user information about the client sending the request, such as its login name and whether it has been authenticated, you can query the properties in the <xref:System.Security.Principal.IPrincipal> object returned by the <xref:System.Net.HttpListenerContext.User%2A> property.       Closing an HttpListenerContext object sends the response to the client and frees any resources used by the HttpListenerContext. Aborting an HttpListenerContext object discards the response to the client if it has not already been sent, and frees any resources used by the HttpListenerContext. After closing or aborting an HttpListenerContext object, you cannot reference its methods or properties. If you do so, you will receive an <xref:System.ObjectDisposedException> exception.","pos":[0,1466],"nodes":[{"content":"This class provides the information related to a client's Hypertext Transfer Protocol (HTTP) request being processed by an &lt;xref:System.Net.HttpListener&gt; object.","pos":[0,161],"source":"This class provides the information related to a client's Hypertext Transfer Protocol (HTTP) request being processed by an <xref:System.Net.HttpListener> object."},{"content":"This class also has methods that allow an &lt;xref:System.Net.HttpListener&gt; object to accept a WebSocket connection.","pos":[162,275],"source":" This class also has methods that allow an <xref:System.Net.HttpListener> object to accept a WebSocket connection."},{"content":"The &lt;xref:System.Net.HttpListener.GetContext%2A&gt; method returns instances of the HttpListenerContext class.","pos":[282,389],"source":"       The <xref:System.Net.HttpListener.GetContext%2A> method returns instances of the HttpListenerContext class."},{"content":"To get the object that represents the client request, use the &lt;xref:System.Net.HttpListenerContext.Request%2A&gt; property.","pos":[390,510],"source":" To get the object that represents the client request, use the <xref:System.Net.HttpListenerContext.Request%2A> property."},{"content":"To get the object that represents the response that will be sent to the client by the &lt;xref:System.Net.HttpListener&gt;, use the &lt;xref:System.Net.HttpListenerContext.Response%2A&gt; property.","pos":[511,696],"source":" To get the object that represents the response that will be sent to the client by the <xref:System.Net.HttpListener>, use the <xref:System.Net.HttpListenerContext.Response%2A> property."},{"content":"To get user information about the client sending the request, such as its login name and whether it has been authenticated, you can query the properties in the &lt;xref:System.Security.Principal.IPrincipal&gt; object returned by the &lt;xref:System.Net.HttpListenerContext.User%2A&gt; property.","pos":[697,979],"source":" To get user information about the client sending the request, such as its login name and whether it has been authenticated, you can query the properties in the <xref:System.Security.Principal.IPrincipal> object returned by the <xref:System.Net.HttpListenerContext.User%2A> property."},{"content":"Closing an HttpListenerContext object sends the response to the client and frees any resources used by the HttpListenerContext.","pos":[986,1113]},{"content":"Aborting an HttpListenerContext object discards the response to the client if it has not already been sent, and frees any resources used by the HttpListenerContext.","pos":[1114,1278]},{"content":"After closing or aborting an HttpListenerContext object, you cannot reference its methods or properties.","pos":[1279,1383]},{"content":"If you do so, you will receive an &lt;xref:System.ObjectDisposedException&gt; exception.","pos":[1384,1466],"source":" If you do so, you will receive an <xref:System.ObjectDisposedException> exception."}]}]},{"pos":[3195,3254],"content":"Accept a WebSocket connection as an asynchronous operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Accept a WebSocket connection as an asynchronous operation.","pos":[0,59]}]},{"pos":[3267,3562],"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted.       The size of the receive buffer is 16,385 bytes. The WebSocket keep-alive interval is set to the default value of 30,000 (30 seconds).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted.       The size of the receive buffer is 16,385 bytes. The WebSocket keep-alive interval is set to the default value of 30,000 (30 seconds).","pos":[0,293],"nodes":[{"content":"This operation will not block.","pos":[0,30]},{"content":"The returned &lt;xref:System.Threading.Tasks.Task%601&gt; object will complete after the WebSocket connection has been accepted.","pos":[31,153],"source":" The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted."},{"content":"The size of the receive buffer is 16,385 bytes.","pos":[160,207]},{"content":"The WebSocket keep-alive interval is set to the default value of 30,000 (30 seconds).","pos":[208,293]}]}]},{"pos":[3800,3837],"content":"The supported WebSocket sub-protocol.","needQuote":true,"needEscape":true,"nodes":[{"content":"The supported WebSocket sub-protocol.","pos":[0,37]}]},{"pos":[3962,4260],"content":"Returns &lt;xref:System.Threading.Tasks.Task%601&gt;.       The task object representing the asynchronous operation. The &lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt; property on the task object returns an <xref href=\"System.Net.WebSockets.HttpListenerWebSocketContext\"></xref> object.","needQuote":false,"needEscape":true,"nodes":[{"content":"Returns <ph id=\"ph1\">&amp;lt;</ph>xref:System.Threading.Tasks.Task%601<ph id=\"ph2\">&amp;gt;</ph>.","pos":[0,53],"source":"Returns &lt;xref:System.Threading.Tasks.Task%601&gt;."},{"content":"The task object representing the asynchronous operation.","pos":[60,116]},{"content":"The <ph id=\"ph1\">&amp;lt;</ph>xref:System.Threading.Tasks.Task%601.Result%2A<ph id=\"ph2\">&amp;gt;</ph> property on the task object returns an <bpt id=\"p1\">&lt;xref href=\"System.Net.WebSockets.HttpListenerWebSocketContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[117,294],"source":" The &lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt; property on the task object returns an <xref href=\"System.Net.WebSockets.HttpListenerWebSocketContext\"></xref> object."}]},{"pos":[4436,4554],"content":"<ph id=\"ph1\">&lt;code&gt;subProtocol&lt;/code&gt;</ph> is an empty string       -or-       <ph id=\"ph2\">&lt;code&gt;subProtocol&lt;/code&gt;</ph> contains illegal characters.","needQuote":false,"needEscape":true,"source":"<code>subProtocol</code> is an empty string       -or-       <code>subProtocol</code> contains illegal characters."},{"pos":[4682,4762],"content":"An error occurred when sending the response to complete the WebSocket handshake.","needQuote":true,"needEscape":true,"nodes":[{"content":"An error occurred when sending the response to complete the WebSocket handshake.","pos":[0,80]}]},{"pos":[5271,5413],"content":"Accept a WebSocket connection specifying the supported WebSocket sub-protocol  and WebSocket keep-alive interval as an asynchronous operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Accept a WebSocket connection specifying the supported WebSocket sub-protocol  and WebSocket keep-alive interval as an asynchronous operation.","pos":[0,142]}]},{"pos":[5426,5635],"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted.       The size of the receive buffer is 16,385 bytes.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted.       The size of the receive buffer is 16,385 bytes.","pos":[0,207],"nodes":[{"content":"This operation will not block.","pos":[0,30]},{"content":"The returned &lt;xref:System.Threading.Tasks.Task%601&gt; object will complete after the WebSocket connection has been accepted.","pos":[31,153],"source":" The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted."},{"content":"The size of the receive buffer is 16,385 bytes.","pos":[160,207]}]}]},{"pos":[5901,5938],"content":"The supported WebSocket sub-protocol.","needQuote":true,"needEscape":true,"nodes":[{"content":"The supported WebSocket sub-protocol.","pos":[0,37]}]},{"pos":[6014,6073],"content":"The WebSocket protocol keep-alive interval in milliseconds.","needQuote":true,"needEscape":true,"nodes":[{"content":"The WebSocket protocol keep-alive interval in milliseconds.","pos":[0,59]}]},{"pos":[6198,6496],"content":"Returns &lt;xref:System.Threading.Tasks.Task%601&gt;.       The task object representing the asynchronous operation. The &lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt; property on the task object returns an <xref href=\"System.Net.WebSockets.HttpListenerWebSocketContext\"></xref> object.","needQuote":false,"needEscape":true,"nodes":[{"content":"Returns <ph id=\"ph1\">&amp;lt;</ph>xref:System.Threading.Tasks.Task%601<ph id=\"ph2\">&amp;gt;</ph>.","pos":[0,53],"source":"Returns &lt;xref:System.Threading.Tasks.Task%601&gt;."},{"content":"The task object representing the asynchronous operation.","pos":[60,116]},{"content":"The <ph id=\"ph1\">&amp;lt;</ph>xref:System.Threading.Tasks.Task%601.Result%2A<ph id=\"ph2\">&amp;gt;</ph> property on the task object returns an <bpt id=\"p1\">&lt;xref href=\"System.Net.WebSockets.HttpListenerWebSocketContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[117,294],"source":" The &lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt; property on the task object returns an <xref href=\"System.Net.WebSockets.HttpListenerWebSocketContext\"></xref> object."}]},{"pos":[6672,6790],"content":"<ph id=\"ph1\">&lt;code&gt;subProtocol&lt;/code&gt;</ph> is an empty string       -or-       <ph id=\"ph2\">&lt;code&gt;subProtocol&lt;/code&gt;</ph> contains illegal characters.","needQuote":false,"needEscape":true,"source":"<code>subProtocol</code> is an empty string       -or-       <code>subProtocol</code> contains illegal characters."},{"pos":[6906,6950],"content":"<ph id=\"ph1\">&lt;code&gt;keepAliveInterval&lt;/code&gt;</ph> is too small.","needQuote":true,"needEscape":true,"source":"<code>keepAliveInterval</code> is too small."},{"pos":[7077,7157],"content":"An error occurred when sending the response to complete the WebSocket handshake.","needQuote":true,"needEscape":true,"nodes":[{"content":"An error occurred when sending the response to complete the WebSocket handshake.","pos":[0,80]}]},{"pos":[7710,7873],"content":"Accept a WebSocket connection specifying the supported WebSocket sub-protocol, receive buffer size, and WebSocket keep-alive interval as an asynchronous operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Accept a WebSocket connection specifying the supported WebSocket sub-protocol, receive buffer size, and WebSocket keep-alive interval as an asynchronous operation.","pos":[0,163]}]},{"pos":[7885,8040],"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> > object will complete after the WebSocket connection has been accepted.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> > object will complete after the WebSocket connection has been accepted.","pos":[0,155],"nodes":[{"content":"This operation will not block.","pos":[0,30]},{"content":"The returned &lt;xref:System.Threading.Tasks.Task%601&gt; &gt; object will complete after the WebSocket connection has been accepted.","pos":[31,155],"source":" The returned <xref:System.Threading.Tasks.Task%601> > object will complete after the WebSocket connection has been accepted."}]}]},{"pos":[8328,8365],"content":"The supported WebSocket sub-protocol.","needQuote":true,"needEscape":true,"nodes":[{"content":"The supported WebSocket sub-protocol.","pos":[0,37]}]},{"pos":[8438,8471],"content":"The receive buffer size in bytes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The receive buffer size in bytes.","pos":[0,33]}]},{"pos":[8547,8606],"content":"The WebSocket protocol keep-alive interval in milliseconds.","needQuote":true,"needEscape":true,"nodes":[{"content":"The WebSocket protocol keep-alive interval in milliseconds.","pos":[0,59]}]},{"pos":[8731,9029],"content":"Returns &lt;xref:System.Threading.Tasks.Task%601&gt;.       The task object representing the asynchronous operation. The &lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt; property on the task object returns an <xref href=\"System.Net.WebSockets.HttpListenerWebSocketContext\"></xref> object.","needQuote":false,"needEscape":true,"nodes":[{"content":"Returns <ph id=\"ph1\">&amp;lt;</ph>xref:System.Threading.Tasks.Task%601<ph id=\"ph2\">&amp;gt;</ph>.","pos":[0,53],"source":"Returns &lt;xref:System.Threading.Tasks.Task%601&gt;."},{"content":"The task object representing the asynchronous operation.","pos":[60,116]},{"content":"The <ph id=\"ph1\">&amp;lt;</ph>xref:System.Threading.Tasks.Task%601.Result%2A<ph id=\"ph2\">&amp;gt;</ph> property on the task object returns an <bpt id=\"p1\">&lt;xref href=\"System.Net.WebSockets.HttpListenerWebSocketContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[117,294],"source":" The &lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt; property on the task object returns an <xref href=\"System.Net.WebSockets.HttpListenerWebSocketContext\"></xref> object."}]},{"pos":[9205,9323],"content":"<ph id=\"ph1\">&lt;code&gt;subProtocol&lt;/code&gt;</ph> is an empty string       -or-       <ph id=\"ph2\">&lt;code&gt;subProtocol&lt;/code&gt;</ph> contains illegal characters.","needQuote":false,"needEscape":true,"source":"<code>subProtocol</code> is an empty string       -or-       <code>subProtocol</code> contains illegal characters."},{"pos":[9440,9637],"content":"<code>keepAliveInterval</code> is too small.       -or-       <code>receiveBufferSize</code> is less than 16 bytes       -or-       <code>receiveBufferSize</code> is greater than 64K bytes.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;keepAliveInterval&lt;/code&gt;</ph> is too small.","pos":[0,44],"source":"<code>keepAliveInterval</code> is too small."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;receiveBufferSize&lt;/code&gt;</ph> is less than 16 bytes       -or-       <ph id=\"ph2\">&lt;code&gt;receiveBufferSize&lt;/code&gt;</ph> is greater than 64K bytes.","pos":[51,189],"source":"       -or-       <code>receiveBufferSize</code> is less than 16 bytes       -or-       <code>receiveBufferSize</code> is greater than 64K bytes."}]},{"pos":[9765,9845],"content":"An error occurred when sending the response to complete the WebSocket handshake.","needQuote":true,"needEscape":true,"nodes":[{"content":"An error occurred when sending the response to complete the WebSocket handshake.","pos":[0,80]}]},{"pos":[10521,10705],"content":"Accept a WebSocket connection specifying the supported WebSocket sub-protocol, receive buffer size, WebSocket keep-alive interval, and the internal buffer as an asynchronous operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Accept a WebSocket connection specifying the supported WebSocket sub-protocol, receive buffer size, WebSocket keep-alive interval, and the internal buffer as an asynchronous operation.","pos":[0,184]}]},{"pos":[10717,10870],"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted.","pos":[0,153],"nodes":[{"content":"This operation will not block.","pos":[0,30]},{"content":"The returned &lt;xref:System.Threading.Tasks.Task%601&gt; object will complete after the WebSocket connection has been accepted.","pos":[31,153],"source":" The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted."}]}]},{"pos":[11193,11230],"content":"The supported WebSocket sub-protocol.","needQuote":true,"needEscape":true,"nodes":[{"content":"The supported WebSocket sub-protocol.","pos":[0,37]}]},{"pos":[11303,11336],"content":"The receive buffer size in bytes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The receive buffer size in bytes.","pos":[0,33]}]},{"pos":[11412,11471],"content":"The WebSocket protocol keep-alive interval in milliseconds.","needQuote":true,"needEscape":true,"nodes":[{"content":"The WebSocket protocol keep-alive interval in milliseconds.","pos":[0,59]}]},{"pos":[11561,11606],"content":"An internal buffer to use for this operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"An internal buffer to use for this operation.","pos":[0,45]}]},{"pos":[11731,12029],"content":"Returns &lt;xref:System.Threading.Tasks.Task%601&gt;.       The task object representing the asynchronous operation. The &lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt; property on the task object returns an <xref href=\"System.Net.WebSockets.HttpListenerWebSocketContext\"></xref> object.","needQuote":false,"needEscape":true,"nodes":[{"content":"Returns <ph id=\"ph1\">&amp;lt;</ph>xref:System.Threading.Tasks.Task%601<ph id=\"ph2\">&amp;gt;</ph>.","pos":[0,53],"source":"Returns &lt;xref:System.Threading.Tasks.Task%601&gt;."},{"content":"The task object representing the asynchronous operation.","pos":[60,116]},{"content":"The <ph id=\"ph1\">&amp;lt;</ph>xref:System.Threading.Tasks.Task%601.Result%2A<ph id=\"ph2\">&amp;gt;</ph> property on the task object returns an <bpt id=\"p1\">&lt;xref href=\"System.Net.WebSockets.HttpListenerWebSocketContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[117,294],"source":" The &lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt; property on the task object returns an <xref href=\"System.Net.WebSockets.HttpListenerWebSocketContext\"></xref> object."}]},{"pos":[12205,12323],"content":"<ph id=\"ph1\">&lt;code&gt;subProtocol&lt;/code&gt;</ph> is an empty string       -or-       <ph id=\"ph2\">&lt;code&gt;subProtocol&lt;/code&gt;</ph> contains illegal characters.","needQuote":false,"needEscape":true,"source":"<code>subProtocol</code> is an empty string       -or-       <code>subProtocol</code> contains illegal characters."},{"pos":[12440,12637],"content":"<code>keepAliveInterval</code> is too small.       -or-       <code>receiveBufferSize</code> is less than 16 bytes       -or-       <code>receiveBufferSize</code> is greater than 64K bytes.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;keepAliveInterval&lt;/code&gt;</ph> is too small.","pos":[0,44],"source":"<code>keepAliveInterval</code> is too small."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;receiveBufferSize&lt;/code&gt;</ph> is less than 16 bytes       -or-       <ph id=\"ph2\">&lt;code&gt;receiveBufferSize&lt;/code&gt;</ph> is greater than 64K bytes.","pos":[51,189],"source":"       -or-       <code>receiveBufferSize</code> is less than 16 bytes       -or-       <code>receiveBufferSize</code> is greater than 64K bytes."}]},{"pos":[12765,12845],"content":"An error occurred when sending the response to complete the WebSocket handshake.","needQuote":true,"needEscape":true,"nodes":[{"content":"An error occurred when sending the response to complete the WebSocket handshake.","pos":[0,80]}]},{"pos":[13178,13289],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Net.HttpListenerRequest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents a client's request for a resource.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Net.HttpListenerRequest\"></xref> that represents a client's request for a resource."},{"pos":[13301,13561],"content":"If you close this <xref:System.Net.HttpListenerContext>, it will send the response to the client, close the <xref:System.Net.HttpListenerResponse> that contains the response, and close the <xref:System.Net.HttpListenerRequest> object returned by this property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If you close this &lt;xref:System.Net.HttpListenerContext&gt;, it will send the response to the client, close the &lt;xref:System.Net.HttpListenerResponse&gt; that contains the response, and close the &lt;xref:System.Net.HttpListenerRequest&gt; object returned by this property.","pos":[0,260],"source":"If you close this <xref:System.Net.HttpListenerContext>, it will send the response to the client, close the <xref:System.Net.HttpListenerResponse> that contains the response, and close the <xref:System.Net.HttpListenerRequest> object returned by this property."}]},{"pos":[13964,14061],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Net.HttpListenerRequest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the client request.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Net.HttpListenerRequest\"></xref> object that represents the client request."},{"pos":[14468,14605],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Net.HttpListenerResponse\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that will be sent to the client in response to the client's request.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Net.HttpListenerResponse\"></xref> object that will be sent to the client in response to the client's request."},{"pos":[14617,14907],"content":"Your application configures the response by setting properties in the <xref:System.Net.HttpListenerResponse> object returned by this property. After configuring the response, you send it to the client by closing the response, or by closing this <xref:System.Net.HttpListenerContext> object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Your application configures the response by setting properties in the <xref:System.Net.HttpListenerResponse> object returned by this property. After configuring the response, you send it to the client by closing the response, or by closing this <xref:System.Net.HttpListenerContext> object.","pos":[0,290],"nodes":[{"content":"Your application configures the response by setting properties in the &lt;xref:System.Net.HttpListenerResponse&gt; object returned by this property.","pos":[0,142],"source":"Your application configures the response by setting properties in the <xref:System.Net.HttpListenerResponse> object returned by this property."},{"content":"After configuring the response, you send it to the client by closing the response, or by closing this &lt;xref:System.Net.HttpListenerContext&gt; object.","pos":[143,290],"source":" After configuring the response, you send it to the client by closing the response, or by closing this <xref:System.Net.HttpListenerContext> object."}]}]},{"pos":[15293,15399],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Net.HttpListenerResponse\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object used to send a response back to the client.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Net.HttpListenerResponse\"></xref> object used to send a response back to the client."},{"pos":[15787,15985],"content":"Gets an object used to obtain identity, authentication information, and security roles for the client whose request is represented by this <bpt id=\"p1\">&lt;xref href=\"System.Net.HttpListenerContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets an object used to obtain identity, authentication information, and security roles for the client whose request is represented by this <xref href=\"System.Net.HttpListenerContext\"></xref> object."},{"pos":[15998,16533],"content":"An <xref:System.Net.HttpListener> indicates that it requires authentication using the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> property or by specifying an <xref:System.Net.AuthenticationSchemeSelector> delegate using the <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> property.       To determine the client's login name and authentication information, check the <xref:System.Security.Principal.IPrincipal.Identity%2A?displayProperty=fullName> property in the object returned by this property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An <xref:System.Net.HttpListener> indicates that it requires authentication using the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> property or by specifying an <xref:System.Net.AuthenticationSchemeSelector> delegate using the <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> property.       To determine the client's login name and authentication information, check the <xref:System.Security.Principal.IPrincipal.Identity%2A?displayProperty=fullName> property in the object returned by this property.","pos":[0,533],"nodes":[{"content":"An &lt;xref:System.Net.HttpListener&gt; indicates that it requires authentication using the &lt;xref:System.Net.HttpListener.AuthenticationSchemes%2A&gt; property or by specifying an &lt;xref:System.Net.AuthenticationSchemeSelector&gt; delegate using the &lt;xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A&gt; property.","pos":[0,317],"source":"An <xref:System.Net.HttpListener> indicates that it requires authentication using the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> property or by specifying an <xref:System.Net.AuthenticationSchemeSelector> delegate using the <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> property."},{"content":"To determine the client's login name and authentication information, check the &lt;xref:System.Security.Principal.IPrincipal.Identity%2A?displayProperty=fullName&gt; property in the object returned by this property.","pos":[324,533],"source":"       To determine the client's login name and authentication information, check the <xref:System.Security.Principal.IPrincipal.Identity%2A?displayProperty=fullName> property in the object returned by this property."}]}]},{"pos":[16969,17269],"content":"An &lt;xref:System.Security.Principal.IPrincipal&gt; object that describes the client, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Net.HttpListener\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> that supplied this <bpt id=\"p3\">&lt;xref href=\"System.Net.HttpListenerContext\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> does not require authentication.","needQuote":true,"needEscape":true,"source":"An <xref:System.Security.Principal.IPrincipal> object that describes the client, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the <xref href=\"System.Net.HttpListener\"></xref> that supplied this <xref href=\"System.Net.HttpListenerContext\"></xref> does not require authentication."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.HttpListenerContext\n  id: HttpListenerContext\n  children:\n  - System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String)\n  - System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.TimeSpan)\n  - System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan)\n  - System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan,System.ArraySegment{System.Byte})\n  - System.Net.HttpListenerContext.Request\n  - System.Net.HttpListenerContext.Response\n  - System.Net.HttpListenerContext.User\n  langs:\n  - csharp\n  name: HttpListenerContext\n  nameWithType: HttpListenerContext\n  fullName: System.Net.HttpListenerContext\n  type: Class\n  summary: Provides access to the request and response objects used by the <xref href=\"System.Net.HttpListener\"></xref> class. This class cannot be inherited.\n  remarks: \"This class provides the information related to a client's Hypertext Transfer Protocol (HTTP) request being processed by an <xref:System.Net.HttpListener> object. This class also has methods that allow an <xref:System.Net.HttpListener> object to accept a WebSocket connection.  \\n  \\n The <xref:System.Net.HttpListener.GetContext%2A> method returns instances of the HttpListenerContext class. To get the object that represents the client request, use the <xref:System.Net.HttpListenerContext.Request%2A> property. To get the object that represents the response that will be sent to the client by the <xref:System.Net.HttpListener>, use the <xref:System.Net.HttpListenerContext.Response%2A> property. To get user information about the client sending the request, such as its login name and whether it has been authenticated, you can query the properties in the <xref:System.Security.Principal.IPrincipal> object returned by the <xref:System.Net.HttpListenerContext.User%2A> property.  \\n  \\n Closing an HttpListenerContext object sends the response to the client and frees any resources used by the HttpListenerContext. Aborting an HttpListenerContext object discards the response to the client if it has not already been sent, and frees any resources used by the HttpListenerContext. After closing or aborting an HttpListenerContext object, you cannot reference its methods or properties. If you do so, you will receive an <xref:System.ObjectDisposedException> exception.\"\n  example:\n  - \"The following code example displays the user information for a client request.  \\n  \\n [!code-cs[Net_Listener_Basic#8](~/add/codesnippet/csharp/t-system.net.httplistene_0_1.cs)]\"\n  syntax:\n    content: public sealed class HttpListenerContext\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String)\n  id: AcceptWebSocketAsync(System.String)\n  parent: System.Net.HttpListenerContext\n  langs:\n  - csharp\n  name: AcceptWebSocketAsync(String)\n  nameWithType: HttpListenerContext.AcceptWebSocketAsync(String)\n  fullName: System.Net.HttpListenerContext.AcceptWebSocketAsync(String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Accept a WebSocket connection as an asynchronous operation.\n  remarks: \"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted.  \\n  \\n The size of the receive buffer is 16,385 bytes. The WebSocket keep-alive interval is set to the default value of 30,000 (30 seconds).\"\n  syntax:\n    content: public System.Threading.Tasks.Task<System.Net.WebSockets.HttpListenerWebSocketContext> AcceptWebSocketAsync (string subProtocol);\n    parameters:\n    - id: subProtocol\n      type: System.String\n      description: The supported WebSocket sub-protocol.\n    return:\n      type: System.Threading.Tasks.Task{System.Net.WebSockets.HttpListenerWebSocketContext}\n      description: \"Returns &lt;xref:System.Threading.Tasks.Task%601&gt;.  \\n  \\n The task object representing the asynchronous operation. The &lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt; property on the task object returns an <xref href=\\\"System.Net.WebSockets.HttpListenerWebSocketContext\\\"></xref> object.\"\n  overload: System.Net.HttpListenerContext.AcceptWebSocketAsync*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>subProtocol</code> is an empty string  \\n  \\n -or-  \\n  \\n <code>subProtocol</code> contains illegal characters.\"\n  - type: System.Net.WebSockets.WebSocketException\n    commentId: T:System.Net.WebSockets.WebSocketException\n    description: An error occurred when sending the response to complete the WebSocket handshake.\n  platform:\n  - net462\n- uid: System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.TimeSpan)\n  id: AcceptWebSocketAsync(System.String,System.TimeSpan)\n  parent: System.Net.HttpListenerContext\n  langs:\n  - csharp\n  name: AcceptWebSocketAsync(String,TimeSpan)\n  nameWithType: HttpListenerContext.AcceptWebSocketAsync(String,TimeSpan)\n  fullName: System.Net.HttpListenerContext.AcceptWebSocketAsync(String,TimeSpan)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Accept a WebSocket connection specifying the supported WebSocket sub-protocol  and WebSocket keep-alive interval as an asynchronous operation.\n  remarks: \"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted.  \\n  \\n The size of the receive buffer is 16,385 bytes.\"\n  syntax:\n    content: public System.Threading.Tasks.Task<System.Net.WebSockets.HttpListenerWebSocketContext> AcceptWebSocketAsync (string subProtocol, TimeSpan keepAliveInterval);\n    parameters:\n    - id: subProtocol\n      type: System.String\n      description: The supported WebSocket sub-protocol.\n    - id: keepAliveInterval\n      type: System.TimeSpan\n      description: The WebSocket protocol keep-alive interval in milliseconds.\n    return:\n      type: System.Threading.Tasks.Task{System.Net.WebSockets.HttpListenerWebSocketContext}\n      description: \"Returns &lt;xref:System.Threading.Tasks.Task%601&gt;.  \\n  \\n The task object representing the asynchronous operation. The &lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt; property on the task object returns an <xref href=\\\"System.Net.WebSockets.HttpListenerWebSocketContext\\\"></xref> object.\"\n  overload: System.Net.HttpListenerContext.AcceptWebSocketAsync*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>subProtocol</code> is an empty string  \\n  \\n -or-  \\n  \\n <code>subProtocol</code> contains illegal characters.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>keepAliveInterval</code> is too small.\n  - type: System.Net.WebSockets.WebSocketException\n    commentId: T:System.Net.WebSockets.WebSocketException\n    description: An error occurred when sending the response to complete the WebSocket handshake.\n  platform:\n  - net462\n- uid: System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan)\n  id: AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan)\n  parent: System.Net.HttpListenerContext\n  langs:\n  - csharp\n  name: AcceptWebSocketAsync(String,Int32,TimeSpan)\n  nameWithType: HttpListenerContext.AcceptWebSocketAsync(String,Int32,TimeSpan)\n  fullName: System.Net.HttpListenerContext.AcceptWebSocketAsync(String,Int32,TimeSpan)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Accept a WebSocket connection specifying the supported WebSocket sub-protocol, receive buffer size, and WebSocket keep-alive interval as an asynchronous operation.\n  remarks: This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> > object will complete after the WebSocket connection has been accepted.\n  syntax:\n    content: public System.Threading.Tasks.Task<System.Net.WebSockets.HttpListenerWebSocketContext> AcceptWebSocketAsync (string subProtocol, int receiveBufferSize, TimeSpan keepAliveInterval);\n    parameters:\n    - id: subProtocol\n      type: System.String\n      description: The supported WebSocket sub-protocol.\n    - id: receiveBufferSize\n      type: System.Int32\n      description: The receive buffer size in bytes.\n    - id: keepAliveInterval\n      type: System.TimeSpan\n      description: The WebSocket protocol keep-alive interval in milliseconds.\n    return:\n      type: System.Threading.Tasks.Task{System.Net.WebSockets.HttpListenerWebSocketContext}\n      description: \"Returns &lt;xref:System.Threading.Tasks.Task%601&gt;.  \\n  \\n The task object representing the asynchronous operation. The &lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt; property on the task object returns an <xref href=\\\"System.Net.WebSockets.HttpListenerWebSocketContext\\\"></xref> object.\"\n  overload: System.Net.HttpListenerContext.AcceptWebSocketAsync*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>subProtocol</code> is an empty string  \\n  \\n -or-  \\n  \\n <code>subProtocol</code> contains illegal characters.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>keepAliveInterval</code> is too small.  \\n  \\n -or-  \\n  \\n <code>receiveBufferSize</code> is less than 16 bytes  \\n  \\n -or-  \\n  \\n <code>receiveBufferSize</code> is greater than 64K bytes.\"\n  - type: System.Net.WebSockets.WebSocketException\n    commentId: T:System.Net.WebSockets.WebSocketException\n    description: An error occurred when sending the response to complete the WebSocket handshake.\n  platform:\n  - net462\n- uid: System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan,System.ArraySegment{System.Byte})\n  id: AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan,System.ArraySegment{System.Byte})\n  parent: System.Net.HttpListenerContext\n  langs:\n  - csharp\n  name: AcceptWebSocketAsync(String,Int32,TimeSpan,ArraySegment<Byte>)\n  nameWithType: HttpListenerContext.AcceptWebSocketAsync(String,Int32,TimeSpan,ArraySegment<Byte>)\n  fullName: System.Net.HttpListenerContext.AcceptWebSocketAsync(String,Int32,TimeSpan,ArraySegment<Byte>)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Accept a WebSocket connection specifying the supported WebSocket sub-protocol, receive buffer size, WebSocket keep-alive interval, and the internal buffer as an asynchronous operation.\n  remarks: This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted.\n  syntax:\n    content: public System.Threading.Tasks.Task<System.Net.WebSockets.HttpListenerWebSocketContext> AcceptWebSocketAsync (string subProtocol, int receiveBufferSize, TimeSpan keepAliveInterval, ArraySegment<byte> internalBuffer);\n    parameters:\n    - id: subProtocol\n      type: System.String\n      description: The supported WebSocket sub-protocol.\n    - id: receiveBufferSize\n      type: System.Int32\n      description: The receive buffer size in bytes.\n    - id: keepAliveInterval\n      type: System.TimeSpan\n      description: The WebSocket protocol keep-alive interval in milliseconds.\n    - id: internalBuffer\n      type: System.ArraySegment{System.Byte}\n      description: An internal buffer to use for this operation.\n    return:\n      type: System.Threading.Tasks.Task{System.Net.WebSockets.HttpListenerWebSocketContext}\n      description: \"Returns &lt;xref:System.Threading.Tasks.Task%601&gt;.  \\n  \\n The task object representing the asynchronous operation. The &lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt; property on the task object returns an <xref href=\\\"System.Net.WebSockets.HttpListenerWebSocketContext\\\"></xref> object.\"\n  overload: System.Net.HttpListenerContext.AcceptWebSocketAsync*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>subProtocol</code> is an empty string  \\n  \\n -or-  \\n  \\n <code>subProtocol</code> contains illegal characters.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>keepAliveInterval</code> is too small.  \\n  \\n -or-  \\n  \\n <code>receiveBufferSize</code> is less than 16 bytes  \\n  \\n -or-  \\n  \\n <code>receiveBufferSize</code> is greater than 64K bytes.\"\n  - type: System.Net.WebSockets.WebSocketException\n    commentId: T:System.Net.WebSockets.WebSocketException\n    description: An error occurred when sending the response to complete the WebSocket handshake.\n  platform:\n  - net462\n- uid: System.Net.HttpListenerContext.Request\n  id: Request\n  parent: System.Net.HttpListenerContext\n  langs:\n  - csharp\n  name: Request\n  nameWithType: HttpListenerContext.Request\n  fullName: System.Net.HttpListenerContext.Request\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Gets the <xref href=\"System.Net.HttpListenerRequest\"></xref> that represents a client's request for a resource.\n  remarks: If you close this <xref:System.Net.HttpListenerContext>, it will send the response to the client, close the <xref:System.Net.HttpListenerResponse> that contains the response, and close the <xref:System.Net.HttpListenerRequest> object returned by this property.\n  example:\n  - \"The following code example demonstrates calling this method. The `listener` variable holds an <xref:System.Net.HttpListener> object.  \\n  \\n [!code-cs[Net_Listener_Basic#3](~/add/codesnippet/csharp/p-system.net.httplistene_16_1.cs)]\"\n  syntax:\n    content: public System.Net.HttpListenerRequest Request { get; }\n    return:\n      type: System.Net.HttpListenerRequest\n      description: An <xref href=\"System.Net.HttpListenerRequest\"></xref> object that represents the client request.\n  overload: System.Net.HttpListenerContext.Request*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.HttpListenerContext.Response\n  id: Response\n  parent: System.Net.HttpListenerContext\n  langs:\n  - csharp\n  name: Response\n  nameWithType: HttpListenerContext.Response\n  fullName: System.Net.HttpListenerContext.Response\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Gets the <xref href=\"System.Net.HttpListenerResponse\"></xref> object that will be sent to the client in response to the client's request.\n  remarks: Your application configures the response by setting properties in the <xref:System.Net.HttpListenerResponse> object returned by this property. After configuring the response, you send it to the client by closing the response, or by closing this <xref:System.Net.HttpListenerContext> object.\n  example:\n  - \"The following code example demonstrates getting the response to a client's request and adding the response body.  \\n  \\n [!code-cs[Net_Listener_Basic#3](~/add/codesnippet/csharp/p-system.net.httplistene_35_1.cs)]\"\n  syntax:\n    content: public System.Net.HttpListenerResponse Response { get; }\n    return:\n      type: System.Net.HttpListenerResponse\n      description: An <xref href=\"System.Net.HttpListenerResponse\"></xref> object used to send a response back to the client.\n  overload: System.Net.HttpListenerContext.Response*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.HttpListenerContext.User\n  id: User\n  parent: System.Net.HttpListenerContext\n  langs:\n  - csharp\n  name: User\n  nameWithType: HttpListenerContext.User\n  fullName: System.Net.HttpListenerContext.User\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Gets an object used to obtain identity, authentication information, and security roles for the client whose request is represented by this <xref href=\"System.Net.HttpListenerContext\"></xref> object.\n  remarks: \"An <xref:System.Net.HttpListener> indicates that it requires authentication using the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> property or by specifying an <xref:System.Net.AuthenticationSchemeSelector> delegate using the <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> property.  \\n  \\n To determine the client's login name and authentication information, check the <xref:System.Security.Principal.IPrincipal.Identity%2A?displayProperty=fullName> property in the object returned by this property.\"\n  example:\n  - \"The following code example demonstrates accessing identity and authentication information about the client, and returning it to the client in the response.  \\n  \\n [!code-cs[Net_Listener_Basic#8](~/add/codesnippet/csharp/p-system.net.httplistene_19_1.cs)]\"\n  syntax:\n    content: public System.Security.Principal.IPrincipal User { get; }\n    return:\n      type: System.Security.Principal.IPrincipal\n      description: An <xref:System.Security.Principal.IPrincipal> object that describes the client, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the <xref href=\"System.Net.HttpListener\"></xref> that supplied this <xref href=\"System.Net.HttpListenerContext\"></xref> does not require authentication.\n  overload: System.Net.HttpListenerContext.User*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Net.WebSockets.WebSocketException\n  parent: System.Net.WebSockets\n  isExternal: false\n  name: WebSocketException\n  nameWithType: WebSocketException\n  fullName: System.Net.WebSockets.WebSocketException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String)\n  parent: System.Net.HttpListenerContext\n  isExternal: false\n  name: AcceptWebSocketAsync(String)\n  nameWithType: HttpListenerContext.AcceptWebSocketAsync(String)\n  fullName: System.Net.HttpListenerContext.AcceptWebSocketAsync(String)\n- uid: System.Threading.Tasks.Task{System.Net.WebSockets.HttpListenerWebSocketContext}\n  parent: System.Threading.Tasks\n  isExternal: true\n  name: Task<HttpListenerWebSocketContext>\n  nameWithType: Task<HttpListenerWebSocketContext>\n  fullName: System.Threading.Tasks.Task<System.Net.WebSockets.HttpListenerWebSocketContext>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: Task<System.Net.WebSockets.HttpListenerWebSocketContext>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Net.WebSockets.HttpListenerWebSocketContext\n    name: HttpListenerWebSocketContext\n    nameWithType: HttpListenerWebSocketContext\n    fullName: HttpListenerWebSocketContext\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.TimeSpan)\n  parent: System.Net.HttpListenerContext\n  isExternal: false\n  name: AcceptWebSocketAsync(String,TimeSpan)\n  nameWithType: HttpListenerContext.AcceptWebSocketAsync(String,TimeSpan)\n  fullName: System.Net.HttpListenerContext.AcceptWebSocketAsync(String,TimeSpan)\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan)\n  parent: System.Net.HttpListenerContext\n  isExternal: false\n  name: AcceptWebSocketAsync(String,Int32,TimeSpan)\n  nameWithType: HttpListenerContext.AcceptWebSocketAsync(String,Int32,TimeSpan)\n  fullName: System.Net.HttpListenerContext.AcceptWebSocketAsync(String,Int32,TimeSpan)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan,System.ArraySegment{System.Byte})\n  parent: System.Net.HttpListenerContext\n  isExternal: false\n  name: AcceptWebSocketAsync(String,Int32,TimeSpan,ArraySegment<Byte>)\n  nameWithType: HttpListenerContext.AcceptWebSocketAsync(String,Int32,TimeSpan,ArraySegment<Byte>)\n  fullName: System.Net.HttpListenerContext.AcceptWebSocketAsync(String,Int32,TimeSpan,ArraySegment<Byte>)\n- uid: System.ArraySegment{System.Byte}\n  parent: System\n  isExternal: true\n  name: ArraySegment<Byte>\n  nameWithType: ArraySegment<Byte>\n  fullName: System.ArraySegment<System.Byte>\n  spec.csharp:\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    nameWithType: ArraySegment\n    fullName: ArraySegment<System.Byte>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Net.HttpListenerContext.Request\n  parent: System.Net.HttpListenerContext\n  isExternal: false\n  name: Request\n  nameWithType: HttpListenerContext.Request\n  fullName: System.Net.HttpListenerContext.Request\n- uid: System.Net.HttpListenerRequest\n  parent: System.Net\n  isExternal: false\n  name: HttpListenerRequest\n  nameWithType: HttpListenerRequest\n  fullName: System.Net.HttpListenerRequest\n- uid: System.Net.HttpListenerContext.Response\n  parent: System.Net.HttpListenerContext\n  isExternal: false\n  name: Response\n  nameWithType: HttpListenerContext.Response\n  fullName: System.Net.HttpListenerContext.Response\n- uid: System.Net.HttpListenerResponse\n  parent: System.Net\n  isExternal: false\n  name: HttpListenerResponse\n  nameWithType: HttpListenerResponse\n  fullName: System.Net.HttpListenerResponse\n- uid: System.Net.HttpListenerContext.User\n  parent: System.Net.HttpListenerContext\n  isExternal: false\n  name: User\n  nameWithType: HttpListenerContext.User\n  fullName: System.Net.HttpListenerContext.User\n- uid: System.Security.Principal.IPrincipal\n  parent: System.Security.Principal\n  isExternal: true\n  name: IPrincipal\n  nameWithType: IPrincipal\n  fullName: System.Security.Principal.IPrincipal\n- uid: System.Net.HttpListenerContext.AcceptWebSocketAsync*\n  parent: System.Net.HttpListenerContext\n  isExternal: false\n  name: AcceptWebSocketAsync\n  nameWithType: HttpListenerContext.AcceptWebSocketAsync\n- uid: System.Net.HttpListenerContext.Request*\n  parent: System.Net.HttpListenerContext\n  isExternal: false\n  name: Request\n  nameWithType: HttpListenerContext.Request\n- uid: System.Net.HttpListenerContext.Response*\n  parent: System.Net.HttpListenerContext\n  isExternal: false\n  name: Response\n  nameWithType: HttpListenerContext.Response\n- uid: System.Net.HttpListenerContext.User*\n  parent: System.Net.HttpListenerContext\n  isExternal: false\n  name: User\n  nameWithType: HttpListenerContext.User\n"}