{"nodes":[{"pos":[520,649],"content":"Provides data for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Control.GiveFeedback\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event, which occurs during a drag operation.","needQuote":true,"needEscape":true,"source":"Provides data for the <xref href=\"System.Windows.Forms.Control.GiveFeedback\"></xref> event, which occurs during a drag operation."},{"pos":[662,1126],"content":"The <xref:System.Windows.Forms.Control.GiveFeedback> event occurs during a drag operation. It allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation. A GiveFeedbackEventArgs object specifies the type of drag-and-drop operation and whether default cursors are used.       For information about the event model, see [Events](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Windows.Forms.Control.GiveFeedback&gt; event occurs during a drag operation.","pos":[0,90],"source":"The <xref:System.Windows.Forms.Control.GiveFeedback> event occurs during a drag operation."},{"content":"It allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.","pos":[91,249]},{"content":"A GiveFeedbackEventArgs object specifies the type of drag-and-drop operation and whether default cursors are used.","pos":[250,364]},{"content":"For information about the event model, see <bpt id=\"p1\">[</bpt>Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[371,462],"source":"       For information about the event model, see [Events](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[4604,4708],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.GiveFeedbackEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Forms.GiveFeedbackEventArgs\"></xref> class."},{"pos":[4933,5130],"content":"The type of drag-and-drop operation. Possible values are obtained by applying the bitwise OR (|) operation to the constants defined in the <xref href=\"System.Windows.Forms.DragDropEffects\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of drag-and-drop operation.","pos":[0,36]},{"content":"Possible values are obtained by applying the bitwise OR (|) operation to the constants defined in the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.DragDropEffects\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[37,197],"source":" Possible values are obtained by applying the bitwise OR (|) operation to the constants defined in the <xref href=\"System.Windows.Forms.DragDropEffects\"></xref>."}]},{"pos":[5205,5370],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if default pointers are used; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if default pointers are used; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[5839,5899],"content":"Gets the drag-and-drop operation feedback that is displayed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the drag-and-drop operation feedback that is displayed.","pos":[0,60]}]},{"pos":[8751,8827],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.DragDropEffects\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Forms.DragDropEffects\"></xref> values."},{"pos":[9352,9462],"content":"Gets or sets whether drag operation should use the default cursors that are associated with drag-drop effects.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets whether drag operation should use the default cursors that are associated with drag-drop effects.","pos":[0,110]}]},{"pos":[9474,9692],"content":"The system provides default drag-drop cursors for different drag-drop operations such as move or copy. If UseDefaultCursors is set to `false`, it is the responsibility of the event source to set the appropriate cursor.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The system provides default drag-drop cursors for different drag-drop operations such as move or copy.","pos":[0,102]},{"content":"If UseDefaultCursors is set to <ph id=\"ph1\">`false`</ph>, it is the responsibility of the event source to set the appropriate cursor.","pos":[103,218],"source":" If UseDefaultCursors is set to `false`, it is the responsibility of the event source to set the appropriate cursor."}]},{"pos":[12492,12661],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the default pointers are used; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the default pointers are used; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.GiveFeedbackEventArgs\n  id: GiveFeedbackEventArgs\n  children:\n  - System.Windows.Forms.GiveFeedbackEventArgs.#ctor(System.Windows.Forms.DragDropEffects,System.Boolean)\n  - System.Windows.Forms.GiveFeedbackEventArgs.Effect\n  - System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors\n  langs:\n  - csharp\n  name: GiveFeedbackEventArgs\n  nameWithType: GiveFeedbackEventArgs\n  fullName: System.Windows.Forms.GiveFeedbackEventArgs\n  type: Class\n  summary: Provides data for the <xref href=\"System.Windows.Forms.Control.GiveFeedback\"></xref> event, which occurs during a drag operation.\n  remarks: \"The <xref:System.Windows.Forms.Control.GiveFeedback> event occurs during a drag operation. It allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation. A GiveFeedbackEventArgs object specifies the type of drag-and-drop operation and whether default cursors are used.  \\n  \\n For information about the event model, see [Events](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls. The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts. The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=fullName> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event. The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.  \\n  \\n The example also demonstrates using custom cursors for the drag-and-drop operation. The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively. The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked. The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.  \\n  \\n The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys. The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event. If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=fullName> is set to <xref:System.Windows.Forms.DragDropEffects?displayProperty=fullName>. Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.  \\n  \\n The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`. If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.  \\n  \\n This code excerpt demonstrates using the GiveFeedbackEventArgs class. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \\n  \\n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/add/codesnippet/cpp/t-system.windows.forms.g_2_1.cpp)]\\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/add/codesnippet/visualbasic/t-system.windows.forms.g_2_1.vb)]\\n [!code-cs[System.Windows.Forms.Control.DoDragDrop#3](~/add/codesnippet/csharp/t-system.windows.forms.g_2_1.cs)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class GiveFeedbackEventArgs : EventArgs\n  inheritance:\n  - System.EventArgs\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.GiveFeedbackEventArgs.#ctor(System.Windows.Forms.DragDropEffects,System.Boolean)\n  id: '#ctor(System.Windows.Forms.DragDropEffects,System.Boolean)'\n  parent: System.Windows.Forms.GiveFeedbackEventArgs\n  langs:\n  - csharp\n  name: GiveFeedbackEventArgs(DragDropEffects,Boolean)\n  nameWithType: GiveFeedbackEventArgs.GiveFeedbackEventArgs(DragDropEffects,Boolean)\n  fullName: System.Windows.Forms.GiveFeedbackEventArgs.GiveFeedbackEventArgs(DragDropEffects,Boolean)\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Forms.GiveFeedbackEventArgs\"></xref> class.\n  syntax:\n    content: public GiveFeedbackEventArgs (System.Windows.Forms.DragDropEffects effect, bool useDefaultCursors);\n    parameters:\n    - id: effect\n      type: System.Windows.Forms.DragDropEffects\n      description: The type of drag-and-drop operation. Possible values are obtained by applying the bitwise OR (|) operation to the constants defined in the <xref href=\"System.Windows.Forms.DragDropEffects\"></xref>.\n    - id: useDefaultCursors\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if default pointers are used; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.GiveFeedbackEventArgs.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.GiveFeedbackEventArgs.Effect\n  id: Effect\n  parent: System.Windows.Forms.GiveFeedbackEventArgs\n  langs:\n  - csharp\n  name: Effect\n  nameWithType: GiveFeedbackEventArgs.Effect\n  fullName: System.Windows.Forms.GiveFeedbackEventArgs.Effect\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the drag-and-drop operation feedback that is displayed.\n  remarks: ''\n  example:\n  - \"The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls. The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts. The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=fullName> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event. The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.  \\n  \\n The example also demonstrates using custom cursors for the drag-and-drop operation. The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively. The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked. The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.  \\n  \\n The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys. The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event. If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=fullName> is set to <xref:System.Windows.Forms.DragDropEffects?displayProperty=fullName>. Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.  \\n  \\n The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`. If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.  \\n  \\n This code excerpt demonstrates using the <xref:System.Windows.Forms.GiveFeedbackEventArgs> class. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \\n  \\n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/add/codesnippet/cpp/p-system.windows.forms.g_5_1.cpp)]\\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/add/codesnippet/visualbasic/p-system.windows.forms.g_5_1.vb)]\\n [!code-cs[System.Windows.Forms.Control.DoDragDrop#3](~/add/codesnippet/csharp/p-system.windows.forms.g_5_1.cs)]\"\n  syntax:\n    content: public System.Windows.Forms.DragDropEffects Effect { get; }\n    return:\n      type: System.Windows.Forms.DragDropEffects\n      description: One of the <xref href=\"System.Windows.Forms.DragDropEffects\"></xref> values.\n  overload: System.Windows.Forms.GiveFeedbackEventArgs.Effect*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors\n  id: UseDefaultCursors\n  parent: System.Windows.Forms.GiveFeedbackEventArgs\n  langs:\n  - csharp\n  name: UseDefaultCursors\n  nameWithType: GiveFeedbackEventArgs.UseDefaultCursors\n  fullName: System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets whether drag operation should use the default cursors that are associated with drag-drop effects.\n  remarks: The system provides default drag-drop cursors for different drag-drop operations such as move or copy. If UseDefaultCursors is set to `false`, it is the responsibility of the event source to set the appropriate cursor.\n  example:\n  - \"The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls. The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts. The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=fullName> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event. The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.  \\n  \\n The example also demonstrates using custom cursors for the drag-and-drop operation. The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively. The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked. The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.  \\n  \\n The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys. The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event. If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=fullName> is set to <xref:System.Windows.Forms.DragDropEffects?displayProperty=fullName>. Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.  \\n  \\n The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`. If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.  \\n  \\n This code excerpt demonstrates using the <xref:System.Windows.Forms.GiveFeedbackEventArgs> class. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \\n  \\n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/add/codesnippet/cpp/p-system.windows.forms.g_3_1.cpp)]\\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/add/codesnippet/visualbasic/p-system.windows.forms.g_3_1.vb)]\\n [!code-cs[System.Windows.Forms.Control.DoDragDrop#3](~/add/codesnippet/csharp/p-system.windows.forms.g_3_1.cs)]\"\n  syntax:\n    content: public bool UseDefaultCursors { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the default pointers are used; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.EventArgs\n  isExternal: false\n  name: System.EventArgs\n- uid: System.Windows.Forms.GiveFeedbackEventArgs.#ctor(System.Windows.Forms.DragDropEffects,System.Boolean)\n  parent: System.Windows.Forms.GiveFeedbackEventArgs\n  isExternal: false\n  name: GiveFeedbackEventArgs(DragDropEffects,Boolean)\n  nameWithType: GiveFeedbackEventArgs.GiveFeedbackEventArgs(DragDropEffects,Boolean)\n  fullName: System.Windows.Forms.GiveFeedbackEventArgs.GiveFeedbackEventArgs(DragDropEffects,Boolean)\n- uid: System.Windows.Forms.DragDropEffects\n  parent: System.Windows.Forms\n  isExternal: false\n  name: DragDropEffects\n  nameWithType: DragDropEffects\n  fullName: System.Windows.Forms.DragDropEffects\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Forms.GiveFeedbackEventArgs.Effect\n  parent: System.Windows.Forms.GiveFeedbackEventArgs\n  isExternal: false\n  name: Effect\n  nameWithType: GiveFeedbackEventArgs.Effect\n  fullName: System.Windows.Forms.GiveFeedbackEventArgs.Effect\n- uid: System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors\n  parent: System.Windows.Forms.GiveFeedbackEventArgs\n  isExternal: false\n  name: UseDefaultCursors\n  nameWithType: GiveFeedbackEventArgs.UseDefaultCursors\n  fullName: System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors\n- uid: System.Windows.Forms.GiveFeedbackEventArgs.#ctor*\n  parent: System.Windows.Forms.GiveFeedbackEventArgs\n  isExternal: false\n  name: GiveFeedbackEventArgs\n  nameWithType: GiveFeedbackEventArgs.GiveFeedbackEventArgs\n- uid: System.Windows.Forms.GiveFeedbackEventArgs.Effect*\n  parent: System.Windows.Forms.GiveFeedbackEventArgs\n  isExternal: false\n  name: Effect\n  nameWithType: GiveFeedbackEventArgs.Effect\n- uid: System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors*\n  parent: System.Windows.Forms.GiveFeedbackEventArgs\n  isExternal: false\n  name: UseDefaultCursors\n  nameWithType: GiveFeedbackEventArgs.UseDefaultCursors\n"}