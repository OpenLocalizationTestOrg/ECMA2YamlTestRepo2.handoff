{"nodes":[{"pos":[2065,2192],"content":"Contains a strongly-typed collection of <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"Contains a strongly-typed collection of <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> objects."},{"pos":[4765,4892],"content":"Appends the specified <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to this collection.","needQuote":true,"needEscape":true,"source":"Appends the specified <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> object to this collection."},{"pos":[5119,5235],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to add to this collection.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> object to add to this collection."},{"pos":[5292,5448],"content":"The zero-based index of the added <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that is appended to this collection.","needQuote":true,"needEscape":true,"source":"The zero-based index of the added <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> object that is appended to this collection."},{"pos":[6282,6424],"content":"Appends the contents of the specified <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> array to this collection.","needQuote":true,"needEscape":true,"source":"Appends the contents of the specified <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> array to this collection."},{"pos":[6661,6801],"content":"<bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> array that contains the objects to append to this collection.","needQuote":true,"needEscape":true,"source":"<xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> array that contains the objects to append to this collection."},{"pos":[7680,7833],"content":"Appends the contents of the specified <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntryCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to this collection.","needQuote":true,"needEscape":true,"source":"Appends the contents of the specified <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntryCollection\"></xref> object to this collection."},{"pos":[8086,8241],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntryCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the objects to append to this collection.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntryCollection\"></xref> object that contains the objects to append to this collection."},{"pos":[9070,9206],"content":"Determines if the specified <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is in this collection.","needQuote":true,"needEscape":true,"source":"Determines if the specified <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> object is in this collection."},{"pos":[9439,9562],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to search for in this collection.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> object to search for in this collection."},{"pos":[9621,9882],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified <bpt id=\"p2\">&lt;xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object is in this collection; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> object is in this collection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10755,10948],"content":"Copies all <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects in this collection to the specified array, starting at the specified index in the target array.","needQuote":true,"needEscape":true,"source":"Copies all <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> objects in this collection to the specified array, starting at the specified index in the target array."},{"pos":[11194,11340],"content":"The array of <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects that receives the elements of this collection.","needQuote":true,"needEscape":true,"source":"The array of <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> objects that receives the elements of this collection."},{"pos":[11401,11484],"content":"The zero-based index in the array where this method starts copying this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index in the array where this method starts copying this collection.","pos":[0,83]}]},{"pos":[12306,12470],"content":"Returns the index of the first occurrence of the specified <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object in this collection.","needQuote":true,"needEscape":true,"source":"Returns the index of the first occurrence of the specified <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> object in this collection."},{"pos":[12701,12824],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to search for in this collection.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> object to search for in this collection."},{"pos":[12881,13082],"content":"The zero-based index of the first matching object.  Returns -1 if no member of this collection is identical to the <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the first matching object.","pos":[0,50]},{"content":"Returns -1 if no member of this collection is identical to the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[52,201],"source":"  Returns -1 if no member of this collection is identical to the <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> object."}]},{"pos":[13944,14089],"content":"Inserts the specified <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> into this collection at the specified index.","needQuote":true,"needEscape":true,"source":"Inserts the specified <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> into this collection at the specified index."},{"pos":[14286,14355],"content":"The zero-based index in this collection where the object is inserted.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index in this collection where the object is inserted.","pos":[0,69]}]},{"pos":[14461,14582],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to insert into this collection.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> object to insert into this collection."},{"pos":[15220,15340],"content":"Gets or sets a <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object in this collection.","needQuote":true,"needEscape":true,"source":"Gets or sets a <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> object in this collection."},{"pos":[15353,15776],"content":"In C#, this property is the indexer for the <xref:System.DirectoryServices.DirectoryServicesPermissionEntryCollection> class.       In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own. However, specifying the expando attribute on a class automatically provides a default indexed property with a type of Object and with an index type of <xref:System.String>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"In C#, this property is the indexer for the <xref:System.DirectoryServices.DirectoryServicesPermissionEntryCollection> class.       In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own. However, specifying the expando attribute on a class automatically provides a default indexed property with a type of Object and with an index type of <xref:System.String>.","pos":[0,421],"nodes":[{"content":"In C#, this property is the indexer for the &lt;xref:System.DirectoryServices.DirectoryServicesPermissionEntryCollection&gt; class.","pos":[0,125],"source":"In C#, this property is the indexer for the <xref:System.DirectoryServices.DirectoryServicesPermissionEntryCollection> class."},{"content":"In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own.","pos":[132,248]},{"content":"However, specifying the expando attribute on a class automatically provides a default indexed property with a type of Object and with an index type of &lt;xref:System.String&gt;.","pos":[249,421],"source":" However, specifying the expando attribute on a class automatically provides a default indexed property with a type of Object and with an index type of <xref:System.String>."}]}]},{"pos":[15972,16100],"content":"The zero-based index of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to get or set.","needQuote":true,"needEscape":true,"source":"The zero-based index of the <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> object to get or set."},{"pos":[16202,16327],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that exists at the specified index.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> object that exists at the specified index."},{"pos":[16933,17037],"content":"Overrides the &lt;xref:System.Collections.CollectionBase.OnClear%2A?displayProperty=fullName&gt; method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Overrides the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.CollectionBase.OnClear%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> method.","pos":[0,104],"source":"Overrides the &lt;xref:System.Collections.CollectionBase.OnClear%2A?displayProperty=fullName&gt; method."}]},{"pos":[17821,17926],"content":"Overrides the &lt;xref:System.Collections.CollectionBase.OnInsert%2A?displayProperty=fullName&gt; method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Overrides the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.CollectionBase.OnInsert%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> method.","pos":[0,105],"source":"Overrides the &lt;xref:System.Collections.CollectionBase.OnInsert%2A?displayProperty=fullName&gt; method."}]},{"pos":[18086,18134],"content":"The zero-based index at which to insert <ph id=\"ph1\">`value`</ph>.","needQuote":true,"needEscape":true,"source":"The zero-based index at which to insert `value`."},{"pos":[18196,18236],"content":"The new value of the element at <ph id=\"ph1\">`index`</ph>.","needQuote":true,"needEscape":true,"source":"The new value of the element at `index`."},{"pos":[18943,19048],"content":"Overrides the &lt;xref:System.Collections.CollectionBase.OnRemove%2A?displayProperty=fullName&gt; method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Overrides the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.CollectionBase.OnRemove%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> method.","pos":[0,105],"source":"Overrides the &lt;xref:System.Collections.CollectionBase.OnRemove%2A?displayProperty=fullName&gt; method."}]},{"pos":[19208,19259],"content":"The zero-based index at which <ph id=\"ph1\">`value`</ph> can be found.","needQuote":true,"needEscape":true,"source":"The zero-based index at which `value` can be found."},{"pos":[19321,19369],"content":"The value of the element to remove from <ph id=\"ph1\">`index`</ph>.","needQuote":true,"needEscape":true,"source":"The value of the element to remove from `index`."},{"pos":[20110,20212],"content":"Overrides the &lt;xref:System.Collections.CollectionBase.OnSet%2A?displayProperty=fullName&gt; method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Overrides the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.CollectionBase.OnSet%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> method.","pos":[0,102],"source":"Overrides the &lt;xref:System.Collections.CollectionBase.OnSet%2A?displayProperty=fullName&gt; method."}]},{"pos":[20389,20443],"content":"The zero-based index at which <ph id=\"ph1\">`oldValue`</ph> can be found.","needQuote":true,"needEscape":true,"source":"The zero-based index at which `oldValue` can be found."},{"pos":[20508,20545],"content":"The value to replace with <ph id=\"ph1\">`newValue`</ph>.","needQuote":true,"needEscape":true,"source":"The value to replace with `newValue`."},{"pos":[20610,20650],"content":"The new value of the element at <ph id=\"ph1\">`index`</ph>.","needQuote":true,"needEscape":true,"source":"The new value of the element at `index`."},{"pos":[21466,21648],"content":"Removes the first occurrence of an object in this collection that is identical to the specified <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Removes the first occurrence of an object in this collection that is identical to the specified <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> object."},{"pos":[21879,22010],"content":"The specified <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to remove from this collection.","needQuote":true,"needEscape":true,"source":"The specified <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> object to remove from this collection."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  id: DirectoryServicesPermissionEntryCollection\n  children:\n  - System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Add(System.DirectoryServices.DirectoryServicesPermissionEntry)\n  - System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(System.DirectoryServices.DirectoryServicesPermissionEntry[])\n  - System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(System.DirectoryServices.DirectoryServicesPermissionEntryCollection)\n  - System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Contains(System.DirectoryServices.DirectoryServicesPermissionEntry)\n  - System.DirectoryServices.DirectoryServicesPermissionEntryCollection.CopyTo(System.DirectoryServices.DirectoryServicesPermissionEntry[],System.Int32)\n  - System.DirectoryServices.DirectoryServicesPermissionEntryCollection.IndexOf(System.DirectoryServices.DirectoryServicesPermissionEntry)\n  - System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Insert(System.Int32,System.DirectoryServices.DirectoryServicesPermissionEntry)\n  - System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Item(System.Int32)\n  - System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnClear\n  - System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnInsert(System.Int32,System.Object)\n  - System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnRemove(System.Int32,System.Object)\n  - System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)\n  - System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Remove(System.DirectoryServices.DirectoryServicesPermissionEntry)\n  langs:\n  - csharp\n  name: DirectoryServicesPermissionEntryCollection\n  nameWithType: DirectoryServicesPermissionEntryCollection\n  fullName: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  type: Class\n  summary: Contains a strongly-typed collection of <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> objects.\n  syntax:\n    content: 'public class DirectoryServicesPermissionEntryCollection : System.Collections.CollectionBase'\n  inheritance:\n  - System.Object\n  - System.Collections.CollectionBase\n  implements: []\n  inheritedMembers:\n  - System.Collections.CollectionBase.Capacity\n  - System.Collections.CollectionBase.Clear\n  - System.Collections.CollectionBase.Count\n  - System.Collections.CollectionBase.GetEnumerator\n  - System.Collections.CollectionBase.InnerList\n  - System.Collections.CollectionBase.List\n  - System.Collections.CollectionBase.OnClearComplete\n  - System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)\n  - System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)\n  - System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)\n  - System.Collections.CollectionBase.OnValidate(System.Object)\n  - System.Collections.CollectionBase.RemoveAt(System.Int32)\n  - System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized\n  - System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot\n  - System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)\n  - System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)\n  - System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)\n  - System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Collections.CollectionBase.System#Collections#IList#IsFixedSize\n  - System.Collections.CollectionBase.System#Collections#IList#IsReadOnly\n  - System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)\n  - System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Add(System.DirectoryServices.DirectoryServicesPermissionEntry)\n  id: Add(System.DirectoryServices.DirectoryServicesPermissionEntry)\n  parent: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  langs:\n  - csharp\n  name: Add(DirectoryServicesPermissionEntry)\n  nameWithType: DirectoryServicesPermissionEntryCollection.Add(DirectoryServicesPermissionEntry)\n  fullName: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Add(DirectoryServicesPermissionEntry)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Appends the specified <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> object to this collection.\n  syntax:\n    content: public int Add (System.DirectoryServices.DirectoryServicesPermissionEntry value);\n    parameters:\n    - id: value\n      type: System.DirectoryServices.DirectoryServicesPermissionEntry\n      description: The <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> object to add to this collection.\n    return:\n      type: System.Int32\n      description: The zero-based index of the added <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> object that is appended to this collection.\n  overload: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(System.DirectoryServices.DirectoryServicesPermissionEntry[])\n  id: AddRange(System.DirectoryServices.DirectoryServicesPermissionEntry[])\n  parent: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  langs:\n  - csharp\n  name: AddRange(DirectoryServicesPermissionEntry[])\n  nameWithType: DirectoryServicesPermissionEntryCollection.AddRange(DirectoryServicesPermissionEntry[])\n  fullName: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(DirectoryServicesPermissionEntry[])\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Appends the contents of the specified <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> array to this collection.\n  syntax:\n    content: public void AddRange (System.DirectoryServices.DirectoryServicesPermissionEntry[] value);\n    parameters:\n    - id: value\n      type: System.DirectoryServices.DirectoryServicesPermissionEntry[]\n      description: <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> array that contains the objects to append to this collection.\n  overload: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(System.DirectoryServices.DirectoryServicesPermissionEntryCollection)\n  id: AddRange(System.DirectoryServices.DirectoryServicesPermissionEntryCollection)\n  parent: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  langs:\n  - csharp\n  name: AddRange(DirectoryServicesPermissionEntryCollection)\n  nameWithType: DirectoryServicesPermissionEntryCollection.AddRange(DirectoryServicesPermissionEntryCollection)\n  fullName: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(DirectoryServicesPermissionEntryCollection)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Appends the contents of the specified <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntryCollection\"></xref> object to this collection.\n  syntax:\n    content: public void AddRange (System.DirectoryServices.DirectoryServicesPermissionEntryCollection value);\n    parameters:\n    - id: value\n      type: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n      description: The <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntryCollection\"></xref> object that contains the objects to append to this collection.\n  overload: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Contains(System.DirectoryServices.DirectoryServicesPermissionEntry)\n  id: Contains(System.DirectoryServices.DirectoryServicesPermissionEntry)\n  parent: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  langs:\n  - csharp\n  name: Contains(DirectoryServicesPermissionEntry)\n  nameWithType: DirectoryServicesPermissionEntryCollection.Contains(DirectoryServicesPermissionEntry)\n  fullName: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Contains(DirectoryServicesPermissionEntry)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Determines if the specified <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> object is in this collection.\n  syntax:\n    content: public bool Contains (System.DirectoryServices.DirectoryServicesPermissionEntry value);\n    parameters:\n    - id: value\n      type: System.DirectoryServices.DirectoryServicesPermissionEntry\n      description: The <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> object to search for in this collection.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> object is in this collection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.CopyTo(System.DirectoryServices.DirectoryServicesPermissionEntry[],System.Int32)\n  id: CopyTo(System.DirectoryServices.DirectoryServicesPermissionEntry[],System.Int32)\n  parent: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  langs:\n  - csharp\n  name: CopyTo(DirectoryServicesPermissionEntry[],Int32)\n  nameWithType: DirectoryServicesPermissionEntryCollection.CopyTo(DirectoryServicesPermissionEntry[],Int32)\n  fullName: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.CopyTo(DirectoryServicesPermissionEntry[],Int32)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Copies all <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> objects in this collection to the specified array, starting at the specified index in the target array.\n  syntax:\n    content: public void CopyTo (System.DirectoryServices.DirectoryServicesPermissionEntry[] array, int index);\n    parameters:\n    - id: array\n      type: System.DirectoryServices.DirectoryServicesPermissionEntry[]\n      description: The array of <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> objects that receives the elements of this collection.\n    - id: index\n      type: System.Int32\n      description: The zero-based index in the array where this method starts copying this collection.\n  overload: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.IndexOf(System.DirectoryServices.DirectoryServicesPermissionEntry)\n  id: IndexOf(System.DirectoryServices.DirectoryServicesPermissionEntry)\n  parent: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  langs:\n  - csharp\n  name: IndexOf(DirectoryServicesPermissionEntry)\n  nameWithType: DirectoryServicesPermissionEntryCollection.IndexOf(DirectoryServicesPermissionEntry)\n  fullName: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.IndexOf(DirectoryServicesPermissionEntry)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Returns the index of the first occurrence of the specified <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> object in this collection.\n  syntax:\n    content: public int IndexOf (System.DirectoryServices.DirectoryServicesPermissionEntry value);\n    parameters:\n    - id: value\n      type: System.DirectoryServices.DirectoryServicesPermissionEntry\n      description: The <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> object to search for in this collection.\n    return:\n      type: System.Int32\n      description: The zero-based index of the first matching object.  Returns -1 if no member of this collection is identical to the <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> object.\n  overload: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.IndexOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Insert(System.Int32,System.DirectoryServices.DirectoryServicesPermissionEntry)\n  id: Insert(System.Int32,System.DirectoryServices.DirectoryServicesPermissionEntry)\n  parent: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  langs:\n  - csharp\n  name: Insert(Int32,DirectoryServicesPermissionEntry)\n  nameWithType: DirectoryServicesPermissionEntryCollection.Insert(Int32,DirectoryServicesPermissionEntry)\n  fullName: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Insert(Int32,DirectoryServicesPermissionEntry)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Inserts the specified <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> into this collection at the specified index.\n  syntax:\n    content: public void Insert (int index, System.DirectoryServices.DirectoryServicesPermissionEntry value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index in this collection where the object is inserted.\n    - id: value\n      type: System.DirectoryServices.DirectoryServicesPermissionEntry\n      description: The <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> object to insert into this collection.\n  overload: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Insert*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: DirectoryServicesPermissionEntryCollection.Item(Int32)\n  fullName: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets or sets a <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> object in this collection.\n  remarks: \"In C#, this property is the indexer for the <xref:System.DirectoryServices.DirectoryServicesPermissionEntryCollection> class.  \\n  \\n In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own. However, specifying the expando attribute on a class automatically provides a default indexed property with a type of Object and with an index type of <xref:System.String>.\"\n  syntax:\n    content: public System.DirectoryServices.DirectoryServicesPermissionEntry this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> object to get or set.\n    return:\n      type: System.DirectoryServices.DirectoryServicesPermissionEntry\n      description: The <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> object that exists at the specified index.\n  overload: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnClear\n  id: OnClear\n  parent: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  langs:\n  - csharp\n  name: OnClear()\n  nameWithType: DirectoryServicesPermissionEntryCollection.OnClear()\n  fullName: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnClear()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Overrides the &lt;xref:System.Collections.CollectionBase.OnClear%2A?displayProperty=fullName&gt; method.\n  syntax:\n    content: protected override void OnClear ();\n    parameters: []\n  overload: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnClear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnInsert(System.Int32,System.Object)\n  id: OnInsert(System.Int32,System.Object)\n  parent: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  langs:\n  - csharp\n  name: OnInsert(Int32,Object)\n  nameWithType: DirectoryServicesPermissionEntryCollection.OnInsert(Int32,Object)\n  fullName: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnInsert(Int32,Object)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Overrides the &lt;xref:System.Collections.CollectionBase.OnInsert%2A?displayProperty=fullName&gt; method.\n  syntax:\n    content: protected override void OnInsert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which to insert `value`.\n    - id: value\n      type: System.Object\n      description: The new value of the element at `index`.\n  overload: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnInsert*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnRemove(System.Int32,System.Object)\n  id: OnRemove(System.Int32,System.Object)\n  parent: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  langs:\n  - csharp\n  name: OnRemove(Int32,Object)\n  nameWithType: DirectoryServicesPermissionEntryCollection.OnRemove(Int32,Object)\n  fullName: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnRemove(Int32,Object)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Overrides the &lt;xref:System.Collections.CollectionBase.OnRemove%2A?displayProperty=fullName&gt; method.\n  syntax:\n    content: protected override void OnRemove (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which `value` can be found.\n    - id: value\n      type: System.Object\n      description: The value of the element to remove from `index`.\n  overload: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnRemove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)\n  id: OnSet(System.Int32,System.Object,System.Object)\n  parent: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  langs:\n  - csharp\n  name: OnSet(Int32,Object,Object)\n  nameWithType: DirectoryServicesPermissionEntryCollection.OnSet(Int32,Object,Object)\n  fullName: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnSet(Int32,Object,Object)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Overrides the &lt;xref:System.Collections.CollectionBase.OnSet%2A?displayProperty=fullName&gt; method.\n  syntax:\n    content: protected override void OnSet (int index, object oldValue, object newValue);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which `oldValue` can be found.\n    - id: oldValue\n      type: System.Object\n      description: The value to replace with `newValue`.\n    - id: newValue\n      type: System.Object\n      description: The new value of the element at `index`.\n  overload: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnSet*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Remove(System.DirectoryServices.DirectoryServicesPermissionEntry)\n  id: Remove(System.DirectoryServices.DirectoryServicesPermissionEntry)\n  parent: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  langs:\n  - csharp\n  name: Remove(DirectoryServicesPermissionEntry)\n  nameWithType: DirectoryServicesPermissionEntryCollection.Remove(DirectoryServicesPermissionEntry)\n  fullName: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Remove(DirectoryServicesPermissionEntry)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Removes the first occurrence of an object in this collection that is identical to the specified <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> object.\n  syntax:\n    content: public void Remove (System.DirectoryServices.DirectoryServicesPermissionEntry value);\n    parameters:\n    - id: value\n      type: System.DirectoryServices.DirectoryServicesPermissionEntry\n      description: The specified <xref href=\"System.DirectoryServices.DirectoryServicesPermissionEntry\"></xref> object to remove from this collection.\n  overload: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Remove*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Collections.CollectionBase\n  isExternal: false\n  name: System.Collections.CollectionBase\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Add(System.DirectoryServices.DirectoryServicesPermissionEntry)\n  parent: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  isExternal: false\n  name: Add(DirectoryServicesPermissionEntry)\n  nameWithType: DirectoryServicesPermissionEntryCollection.Add(DirectoryServicesPermissionEntry)\n  fullName: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Add(DirectoryServicesPermissionEntry)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntry\n  parent: System.DirectoryServices\n  isExternal: false\n  name: DirectoryServicesPermissionEntry\n  nameWithType: DirectoryServicesPermissionEntry\n  fullName: System.DirectoryServices.DirectoryServicesPermissionEntry\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(System.DirectoryServices.DirectoryServicesPermissionEntry[])\n  parent: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  isExternal: false\n  name: AddRange(DirectoryServicesPermissionEntry[])\n  nameWithType: DirectoryServicesPermissionEntryCollection.AddRange(DirectoryServicesPermissionEntry[])\n  fullName: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(DirectoryServicesPermissionEntry[])\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntry[]\n  parent: System.DirectoryServices\n  isExternal: false\n  name: DirectoryServicesPermissionEntry\n  nameWithType: DirectoryServicesPermissionEntry\n  fullName: System.DirectoryServices.DirectoryServicesPermissionEntry[]\n  spec.csharp:\n  - uid: System.DirectoryServices.DirectoryServicesPermissionEntry\n    name: DirectoryServicesPermissionEntry\n    nameWithType: DirectoryServicesPermissionEntry\n    fullName: DirectoryServicesPermissionEntry[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(System.DirectoryServices.DirectoryServicesPermissionEntryCollection)\n  parent: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  isExternal: false\n  name: AddRange(DirectoryServicesPermissionEntryCollection)\n  nameWithType: DirectoryServicesPermissionEntryCollection.AddRange(DirectoryServicesPermissionEntryCollection)\n  fullName: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(DirectoryServicesPermissionEntryCollection)\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  parent: System.DirectoryServices\n  isExternal: false\n  name: DirectoryServicesPermissionEntryCollection\n  nameWithType: DirectoryServicesPermissionEntryCollection\n  fullName: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Contains(System.DirectoryServices.DirectoryServicesPermissionEntry)\n  parent: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  isExternal: false\n  name: Contains(DirectoryServicesPermissionEntry)\n  nameWithType: DirectoryServicesPermissionEntryCollection.Contains(DirectoryServicesPermissionEntry)\n  fullName: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Contains(DirectoryServicesPermissionEntry)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.CopyTo(System.DirectoryServices.DirectoryServicesPermissionEntry[],System.Int32)\n  parent: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  isExternal: false\n  name: CopyTo(DirectoryServicesPermissionEntry[],Int32)\n  nameWithType: DirectoryServicesPermissionEntryCollection.CopyTo(DirectoryServicesPermissionEntry[],Int32)\n  fullName: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.CopyTo(DirectoryServicesPermissionEntry[],Int32)\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.IndexOf(System.DirectoryServices.DirectoryServicesPermissionEntry)\n  parent: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  isExternal: false\n  name: IndexOf(DirectoryServicesPermissionEntry)\n  nameWithType: DirectoryServicesPermissionEntryCollection.IndexOf(DirectoryServicesPermissionEntry)\n  fullName: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.IndexOf(DirectoryServicesPermissionEntry)\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Insert(System.Int32,System.DirectoryServices.DirectoryServicesPermissionEntry)\n  parent: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  isExternal: false\n  name: Insert(Int32,DirectoryServicesPermissionEntry)\n  nameWithType: DirectoryServicesPermissionEntryCollection.Insert(Int32,DirectoryServicesPermissionEntry)\n  fullName: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Insert(Int32,DirectoryServicesPermissionEntry)\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Item(System.Int32)\n  parent: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: DirectoryServicesPermissionEntryCollection.Item(Int32)\n  fullName: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Item(Int32)\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnClear\n  parent: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  isExternal: false\n  name: OnClear()\n  nameWithType: DirectoryServicesPermissionEntryCollection.OnClear()\n  fullName: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnClear()\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnInsert(System.Int32,System.Object)\n  parent: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  isExternal: false\n  name: OnInsert(Int32,Object)\n  nameWithType: DirectoryServicesPermissionEntryCollection.OnInsert(Int32,Object)\n  fullName: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnInsert(Int32,Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnRemove(System.Int32,System.Object)\n  parent: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  isExternal: false\n  name: OnRemove(Int32,Object)\n  nameWithType: DirectoryServicesPermissionEntryCollection.OnRemove(Int32,Object)\n  fullName: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnRemove(Int32,Object)\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)\n  parent: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  isExternal: false\n  name: OnSet(Int32,Object,Object)\n  nameWithType: DirectoryServicesPermissionEntryCollection.OnSet(Int32,Object,Object)\n  fullName: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnSet(Int32,Object,Object)\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Remove(System.DirectoryServices.DirectoryServicesPermissionEntry)\n  parent: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  isExternal: false\n  name: Remove(DirectoryServicesPermissionEntry)\n  nameWithType: DirectoryServicesPermissionEntryCollection.Remove(DirectoryServicesPermissionEntry)\n  fullName: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Remove(DirectoryServicesPermissionEntry)\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Add*\n  parent: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  isExternal: false\n  name: Add\n  nameWithType: DirectoryServicesPermissionEntryCollection.Add\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange*\n  parent: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  isExternal: false\n  name: AddRange\n  nameWithType: DirectoryServicesPermissionEntryCollection.AddRange\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Contains*\n  parent: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  isExternal: false\n  name: Contains\n  nameWithType: DirectoryServicesPermissionEntryCollection.Contains\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.CopyTo*\n  parent: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: DirectoryServicesPermissionEntryCollection.CopyTo\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.IndexOf*\n  parent: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  isExternal: false\n  name: IndexOf\n  nameWithType: DirectoryServicesPermissionEntryCollection.IndexOf\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Insert*\n  parent: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  isExternal: false\n  name: Insert\n  nameWithType: DirectoryServicesPermissionEntryCollection.Insert\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Item*\n  parent: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  isExternal: false\n  name: Item\n  nameWithType: DirectoryServicesPermissionEntryCollection.Item\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnClear*\n  parent: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  isExternal: false\n  name: OnClear\n  nameWithType: DirectoryServicesPermissionEntryCollection.OnClear\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnInsert*\n  parent: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  isExternal: false\n  name: OnInsert\n  nameWithType: DirectoryServicesPermissionEntryCollection.OnInsert\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnRemove*\n  parent: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  isExternal: false\n  name: OnRemove\n  nameWithType: DirectoryServicesPermissionEntryCollection.OnRemove\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnSet*\n  parent: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  isExternal: false\n  name: OnSet\n  nameWithType: DirectoryServicesPermissionEntryCollection.OnSet\n- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Remove*\n  parent: System.DirectoryServices.DirectoryServicesPermissionEntryCollection\n  isExternal: false\n  name: Remove\n  nameWithType: DirectoryServicesPermissionEntryCollection.Remove\n"}