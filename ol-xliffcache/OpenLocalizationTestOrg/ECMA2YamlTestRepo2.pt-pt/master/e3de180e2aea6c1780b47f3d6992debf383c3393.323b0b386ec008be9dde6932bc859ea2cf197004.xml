{"nodes":[{"pos":[965,1021],"content":"Maps configuration file virtual paths to physical paths.","needQuote":true,"needEscape":true,"nodes":[{"content":"Maps configuration file virtual paths to physical paths.","pos":[0,56]}]},{"pos":[1753,1851],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Configuration.UserMapPath\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Configuration.UserMapPath\"></xref> class."},{"pos":[2054,2120],"content":"The configuration file mapping for the machine configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The configuration file mapping for the machine configuration file.","pos":[0,66]}]},{"pos":[2705,2780],"content":"Returns the virtual directory name that is associated with a specific site.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the virtual directory name that is associated with a specific site.","pos":[0,75]}]},{"pos":[2944,2977],"content":"A unique identifier for the site.","needQuote":true,"needEscape":true,"nodes":[{"content":"A unique identifier for the site.","pos":[0,33]}]},{"pos":[3038,3079],"content":"The URL that is associated with the site.","needQuote":true,"needEscape":true,"nodes":[{"content":"The URL that is associated with the site.","pos":[0,41]}]},{"pos":[3137,3257],"content":"The <code>siteID</code> value must be unique. The <code>siteID</code> value distinguishes sites that have the same name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">siteID</ph><ept id=\"p1\">&lt;/code&gt;</ept> value must be unique.","pos":[0,45],"source":"The <code>siteID</code> value must be unique."},{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">siteID</ph><ept id=\"p1\">&lt;/code&gt;</ept> value distinguishes sites that have the same name.","pos":[46,120],"source":" The <code>siteID</code> value distinguishes sites that have the same name."}]},{"pos":[3888,3936],"content":"Populates the default site name and the site ID.","needQuote":true,"needEscape":true,"nodes":[{"content":"Populates the default site name and the site ID.","pos":[0,48]}]},{"pos":[4118,4147],"content":"The name of the default site.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the default site.","pos":[0,29]}]},{"pos":[4210,4243],"content":"A unique identifier for the site.","needQuote":true,"needEscape":true,"nodes":[{"content":"A unique identifier for the site.","pos":[0,33]}]},{"pos":[4784,4828],"content":"Returns the machine-configuration file name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the machine-configuration file name.","pos":[0,44]}]},{"pos":[4971,5007],"content":"The machine-configuration file name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The machine-configuration file name.","pos":[0,36]}]},{"pos":[5733,5827],"content":"Populates the directory and name of the configuration file based on the site ID and site path.","needQuote":true,"needEscape":true,"nodes":[{"content":"Populates the directory and name of the configuration file based on the site ID and site path.","pos":[0,94]}]},{"pos":[6036,6069],"content":"A unique identifier for the site.","needQuote":true,"needEscape":true,"nodes":[{"content":"A unique identifier for the site.","pos":[0,33]}]},{"pos":[6130,6171],"content":"The URL that is associated with the site.","needQuote":true,"needEscape":true,"nodes":[{"content":"The URL that is associated with the site.","pos":[0,41]}]},{"pos":[6237,6281],"content":"The physical path of the configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The physical path of the configuration file.","pos":[0,44]}]},{"pos":[6346,6381],"content":"The name of the configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the configuration file.","pos":[0,35]}]},{"pos":[6920,7008],"content":"Returns the physical path of the configuration file that is at the Web application root.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the physical path of the configuration file that is at the Web application root.","pos":[0,88]}]},{"pos":[7151,7220],"content":"The physical path of the Web.config file at the Web application root.","needQuote":true,"needEscape":true,"nodes":[{"content":"The physical path of the Web.config file at the Web application root.","pos":[0,69]}]},{"pos":[7774,7869],"content":"Returns the physical path based on the site ID and on the URL that is associated with the site.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the physical path based on the site ID and on the URL that is associated with the site.","pos":[0,95]}]},{"pos":[8023,8056],"content":"A unique identifier for the site.","needQuote":true,"needEscape":true,"nodes":[{"content":"A unique identifier for the site.","pos":[0,33]}]},{"pos":[8117,8158],"content":"The URL that is associated with the site.","needQuote":true,"needEscape":true,"nodes":[{"content":"The URL that is associated with the site.","pos":[0,41]}]},{"pos":[8216,8246],"content":"The physical path of the site.","needQuote":true,"needEscape":true,"nodes":[{"content":"The physical path of the site.","pos":[0,30]}]},{"pos":[8896,8963],"content":"Populates the site name and site ID based on a site argument value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Populates the site name and site ID based on a site argument value.","pos":[0,67]}]},{"pos":[8975,9164],"content":"If <ph id=\"ph1\">`siteArgument`</ph> is <ph id=\"ph2\">`null`</ph>, or is equal to the default site name, or is equal to the default site identifier, the <ph id=\"ph3\">`siteName`</ph> and <ph id=\"ph4\">`siteID`</ph> values are populated with the default site values.","needQuote":true,"needEscape":true,"extradata":"MT","source":"If `siteArgument` is `null`, or is equal to the default site name, or is equal to the default site identifier, the `siteName` and `siteID` values are populated with the default site values."},{"pos":[9367,9400],"content":"The site name or site identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The site name or site identifier.","pos":[0,33]}]},{"pos":[9465,9487],"content":"The default site name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default site name.","pos":[0,22]}]},{"pos":[9550,9583],"content":"A unique identifier for the site.","needQuote":true,"needEscape":true,"nodes":[{"content":"A unique identifier for the site.","pos":[0,33]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Configuration.UserMapPath\n  id: UserMapPath\n  children:\n  - System.Web.Configuration.UserMapPath.#ctor(System.Configuration.ConfigurationFileMap)\n  - System.Web.Configuration.UserMapPath.GetAppPathForPath(System.String,System.String)\n  - System.Web.Configuration.UserMapPath.GetDefaultSiteNameAndID(System.String@,System.String@)\n  - System.Web.Configuration.UserMapPath.GetMachineConfigFilename\n  - System.Web.Configuration.UserMapPath.GetPathConfigFilename(System.String,System.String,System.String@,System.String@)\n  - System.Web.Configuration.UserMapPath.GetRootWebConfigFilename\n  - System.Web.Configuration.UserMapPath.MapPath(System.String,System.String)\n  - System.Web.Configuration.UserMapPath.ResolveSiteArgument(System.String,System.String@,System.String@)\n  langs:\n  - csharp\n  name: UserMapPath\n  nameWithType: UserMapPath\n  fullName: System.Web.Configuration.UserMapPath\n  type: Class\n  summary: Maps configuration file virtual paths to physical paths.\n  syntax:\n    content: 'public class UserMapPath : System.Web.Configuration.IConfigMapPath'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Web.Configuration.IConfigMapPath\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.UserMapPath.#ctor(System.Configuration.ConfigurationFileMap)\n  id: '#ctor(System.Configuration.ConfigurationFileMap)'\n  parent: System.Web.Configuration.UserMapPath\n  langs:\n  - csharp\n  name: UserMapPath(ConfigurationFileMap)\n  nameWithType: UserMapPath.UserMapPath(ConfigurationFileMap)\n  fullName: System.Web.Configuration.UserMapPath.UserMapPath(ConfigurationFileMap)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Web.Configuration.UserMapPath\"></xref> class.\n  syntax:\n    content: public UserMapPath (System.Configuration.ConfigurationFileMap fileMap);\n    parameters:\n    - id: fileMap\n      type: System.Configuration.ConfigurationFileMap\n      description: The configuration file mapping for the machine configuration file.\n  overload: System.Web.Configuration.UserMapPath.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.UserMapPath.GetAppPathForPath(System.String,System.String)\n  id: GetAppPathForPath(System.String,System.String)\n  parent: System.Web.Configuration.UserMapPath\n  langs:\n  - csharp\n  name: GetAppPathForPath(String,String)\n  nameWithType: UserMapPath.GetAppPathForPath(String,String)\n  fullName: System.Web.Configuration.UserMapPath.GetAppPathForPath(String,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Returns the virtual directory name that is associated with a specific site.\n  syntax:\n    content: public string GetAppPathForPath (string siteID, string path);\n    parameters:\n    - id: siteID\n      type: System.String\n      description: A unique identifier for the site.\n    - id: path\n      type: System.String\n      description: The URL that is associated with the site.\n    return:\n      type: System.String\n      description: The <code>siteID</code> value must be unique. The <code>siteID</code> value distinguishes sites that have the same name.\n  overload: System.Web.Configuration.UserMapPath.GetAppPathForPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.UserMapPath.GetDefaultSiteNameAndID(System.String@,System.String@)\n  id: GetDefaultSiteNameAndID(System.String@,System.String@)\n  parent: System.Web.Configuration.UserMapPath\n  langs:\n  - csharp\n  name: GetDefaultSiteNameAndID(String,String)\n  nameWithType: UserMapPath.GetDefaultSiteNameAndID(String,String)\n  fullName: System.Web.Configuration.UserMapPath.GetDefaultSiteNameAndID(String,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Populates the default site name and the site ID.\n  syntax:\n    content: public void GetDefaultSiteNameAndID (out string siteName, out string siteID);\n    parameters:\n    - id: siteName\n      type: System.String\n      description: The name of the default site.\n    - id: siteID\n      type: System.String\n      description: A unique identifier for the site.\n  overload: System.Web.Configuration.UserMapPath.GetDefaultSiteNameAndID*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.UserMapPath.GetMachineConfigFilename\n  id: GetMachineConfigFilename\n  parent: System.Web.Configuration.UserMapPath\n  langs:\n  - csharp\n  name: GetMachineConfigFilename()\n  nameWithType: UserMapPath.GetMachineConfigFilename()\n  fullName: System.Web.Configuration.UserMapPath.GetMachineConfigFilename()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Returns the machine-configuration file name.\n  syntax:\n    content: public string GetMachineConfigFilename ();\n    parameters: []\n    return:\n      type: System.String\n      description: The machine-configuration file name.\n  overload: System.Web.Configuration.UserMapPath.GetMachineConfigFilename*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.UserMapPath.GetPathConfigFilename(System.String,System.String,System.String@,System.String@)\n  id: GetPathConfigFilename(System.String,System.String,System.String@,System.String@)\n  parent: System.Web.Configuration.UserMapPath\n  langs:\n  - csharp\n  name: GetPathConfigFilename(String,String,String,String)\n  nameWithType: UserMapPath.GetPathConfigFilename(String,String,String,String)\n  fullName: System.Web.Configuration.UserMapPath.GetPathConfigFilename(String,String,String,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Populates the directory and name of the configuration file based on the site ID and site path.\n  syntax:\n    content: public void GetPathConfigFilename (string siteID, string path, out string directory, out string baseName);\n    parameters:\n    - id: siteID\n      type: System.String\n      description: A unique identifier for the site.\n    - id: path\n      type: System.String\n      description: The URL that is associated with the site.\n    - id: directory\n      type: System.String\n      description: The physical path of the configuration file.\n    - id: baseName\n      type: System.String\n      description: The name of the configuration file.\n  overload: System.Web.Configuration.UserMapPath.GetPathConfigFilename*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.UserMapPath.GetRootWebConfigFilename\n  id: GetRootWebConfigFilename\n  parent: System.Web.Configuration.UserMapPath\n  langs:\n  - csharp\n  name: GetRootWebConfigFilename()\n  nameWithType: UserMapPath.GetRootWebConfigFilename()\n  fullName: System.Web.Configuration.UserMapPath.GetRootWebConfigFilename()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Returns the physical path of the configuration file that is at the Web application root.\n  syntax:\n    content: public string GetRootWebConfigFilename ();\n    parameters: []\n    return:\n      type: System.String\n      description: The physical path of the Web.config file at the Web application root.\n  overload: System.Web.Configuration.UserMapPath.GetRootWebConfigFilename*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.UserMapPath.MapPath(System.String,System.String)\n  id: MapPath(System.String,System.String)\n  parent: System.Web.Configuration.UserMapPath\n  langs:\n  - csharp\n  name: MapPath(String,String)\n  nameWithType: UserMapPath.MapPath(String,String)\n  fullName: System.Web.Configuration.UserMapPath.MapPath(String,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Returns the physical path based on the site ID and on the URL that is associated with the site.\n  syntax:\n    content: public string MapPath (string siteID, string path);\n    parameters:\n    - id: siteID\n      type: System.String\n      description: A unique identifier for the site.\n    - id: path\n      type: System.String\n      description: The URL that is associated with the site.\n    return:\n      type: System.String\n      description: The physical path of the site.\n  overload: System.Web.Configuration.UserMapPath.MapPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.UserMapPath.ResolveSiteArgument(System.String,System.String@,System.String@)\n  id: ResolveSiteArgument(System.String,System.String@,System.String@)\n  parent: System.Web.Configuration.UserMapPath\n  langs:\n  - csharp\n  name: ResolveSiteArgument(String,String,String)\n  nameWithType: UserMapPath.ResolveSiteArgument(String,String,String)\n  fullName: System.Web.Configuration.UserMapPath.ResolveSiteArgument(String,String,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Populates the site name and site ID based on a site argument value.\n  remarks: If `siteArgument` is `null`, or is equal to the default site name, or is equal to the default site identifier, the `siteName` and `siteID` values are populated with the default site values.\n  syntax:\n    content: public void ResolveSiteArgument (string siteArgument, out string siteName, out string siteID);\n    parameters:\n    - id: siteArgument\n      type: System.String\n      description: The site name or site identifier.\n    - id: siteName\n      type: System.String\n      description: The default site name.\n    - id: siteID\n      type: System.String\n      description: A unique identifier for the site.\n  overload: System.Web.Configuration.UserMapPath.ResolveSiteArgument*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Web.Configuration.UserMapPath.#ctor(System.Configuration.ConfigurationFileMap)\n  parent: System.Web.Configuration.UserMapPath\n  isExternal: false\n  name: UserMapPath(ConfigurationFileMap)\n  nameWithType: UserMapPath.UserMapPath(ConfigurationFileMap)\n  fullName: System.Web.Configuration.UserMapPath.UserMapPath(ConfigurationFileMap)\n- uid: System.Configuration.ConfigurationFileMap\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationFileMap\n  nameWithType: ConfigurationFileMap\n  fullName: System.Configuration.ConfigurationFileMap\n- uid: System.Web.Configuration.UserMapPath.GetAppPathForPath(System.String,System.String)\n  parent: System.Web.Configuration.UserMapPath\n  isExternal: false\n  name: GetAppPathForPath(String,String)\n  nameWithType: UserMapPath.GetAppPathForPath(String,String)\n  fullName: System.Web.Configuration.UserMapPath.GetAppPathForPath(String,String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.Configuration.UserMapPath.GetDefaultSiteNameAndID(System.String@,System.String@)\n  parent: System.Web.Configuration.UserMapPath\n  isExternal: false\n  name: GetDefaultSiteNameAndID(String,String)\n  nameWithType: UserMapPath.GetDefaultSiteNameAndID(String,String)\n  fullName: System.Web.Configuration.UserMapPath.GetDefaultSiteNameAndID(String,String)\n- uid: System.Web.Configuration.UserMapPath.GetMachineConfigFilename\n  parent: System.Web.Configuration.UserMapPath\n  isExternal: false\n  name: GetMachineConfigFilename()\n  nameWithType: UserMapPath.GetMachineConfigFilename()\n  fullName: System.Web.Configuration.UserMapPath.GetMachineConfigFilename()\n- uid: System.Web.Configuration.UserMapPath.GetPathConfigFilename(System.String,System.String,System.String@,System.String@)\n  parent: System.Web.Configuration.UserMapPath\n  isExternal: false\n  name: GetPathConfigFilename(String,String,String,String)\n  nameWithType: UserMapPath.GetPathConfigFilename(String,String,String,String)\n  fullName: System.Web.Configuration.UserMapPath.GetPathConfigFilename(String,String,String,String)\n- uid: System.Web.Configuration.UserMapPath.GetRootWebConfigFilename\n  parent: System.Web.Configuration.UserMapPath\n  isExternal: false\n  name: GetRootWebConfigFilename()\n  nameWithType: UserMapPath.GetRootWebConfigFilename()\n  fullName: System.Web.Configuration.UserMapPath.GetRootWebConfigFilename()\n- uid: System.Web.Configuration.UserMapPath.MapPath(System.String,System.String)\n  parent: System.Web.Configuration.UserMapPath\n  isExternal: false\n  name: MapPath(String,String)\n  nameWithType: UserMapPath.MapPath(String,String)\n  fullName: System.Web.Configuration.UserMapPath.MapPath(String,String)\n- uid: System.Web.Configuration.UserMapPath.ResolveSiteArgument(System.String,System.String@,System.String@)\n  parent: System.Web.Configuration.UserMapPath\n  isExternal: false\n  name: ResolveSiteArgument(String,String,String)\n  nameWithType: UserMapPath.ResolveSiteArgument(String,String,String)\n  fullName: System.Web.Configuration.UserMapPath.ResolveSiteArgument(String,String,String)\n- uid: System.Web.Configuration.UserMapPath.#ctor*\n  parent: System.Web.Configuration.UserMapPath\n  isExternal: false\n  name: UserMapPath\n  nameWithType: UserMapPath.UserMapPath\n- uid: System.Web.Configuration.UserMapPath.GetAppPathForPath*\n  parent: System.Web.Configuration.UserMapPath\n  isExternal: false\n  name: GetAppPathForPath\n  nameWithType: UserMapPath.GetAppPathForPath\n- uid: System.Web.Configuration.UserMapPath.GetDefaultSiteNameAndID*\n  parent: System.Web.Configuration.UserMapPath\n  isExternal: false\n  name: GetDefaultSiteNameAndID\n  nameWithType: UserMapPath.GetDefaultSiteNameAndID\n- uid: System.Web.Configuration.UserMapPath.GetMachineConfigFilename*\n  parent: System.Web.Configuration.UserMapPath\n  isExternal: false\n  name: GetMachineConfigFilename\n  nameWithType: UserMapPath.GetMachineConfigFilename\n- uid: System.Web.Configuration.UserMapPath.GetPathConfigFilename*\n  parent: System.Web.Configuration.UserMapPath\n  isExternal: false\n  name: GetPathConfigFilename\n  nameWithType: UserMapPath.GetPathConfigFilename\n- uid: System.Web.Configuration.UserMapPath.GetRootWebConfigFilename*\n  parent: System.Web.Configuration.UserMapPath\n  isExternal: false\n  name: GetRootWebConfigFilename\n  nameWithType: UserMapPath.GetRootWebConfigFilename\n- uid: System.Web.Configuration.UserMapPath.MapPath*\n  parent: System.Web.Configuration.UserMapPath\n  isExternal: false\n  name: MapPath\n  nameWithType: UserMapPath.MapPath\n- uid: System.Web.Configuration.UserMapPath.ResolveSiteArgument*\n  parent: System.Web.Configuration.UserMapPath\n  isExternal: false\n  name: ResolveSiteArgument\n  nameWithType: UserMapPath.ResolveSiteArgument\n"}