{"nodes":[{"pos":[1091,1135],"content":"Represents a variable within a symbol store.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a variable within a symbol store.","pos":[0,44]}]},{"pos":[1147,1219],"content":"The SymVariable object can be a parameter, a local variable, or a field.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The SymVariable object can be a parameter, a local variable, or a field.","pos":[0,72]}]},{"pos":[2525,2537],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3032,3069],"content":"Gets the first address of a variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the first address of a variable.","pos":[0,37]}]},{"pos":[3081,3207],"content":"For more information about the use of this property, see the <xref:System.Diagnostics.SymbolStore.SymAddressKind> enumeration.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"For more information about the use of this property, see the &lt;xref:System.Diagnostics.SymbolStore.SymAddressKind&gt; enumeration.","pos":[0,126],"source":"For more information about the use of this property, see the <xref:System.Diagnostics.SymbolStore.SymAddressKind> enumeration."}]},{"pos":[3329,3363],"content":"The first address of the variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first address of the variable.","pos":[0,34]}]},{"pos":[3866,3904],"content":"Gets the second address of a variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the second address of a variable.","pos":[0,38]}]},{"pos":[3916,4042],"content":"For more information about the use of this property, see the <xref:System.Diagnostics.SymbolStore.SymAddressKind> enumeration.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"For more information about the use of this property, see the &lt;xref:System.Diagnostics.SymbolStore.SymAddressKind&gt; enumeration.","pos":[0,126],"source":"For more information about the use of this property, see the <xref:System.Diagnostics.SymbolStore.SymAddressKind> enumeration."}]},{"pos":[4164,4199],"content":"The second address of the variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second address of the variable.","pos":[0,35]}]},{"pos":[4702,4739],"content":"Gets the third address of a variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the third address of a variable.","pos":[0,37]}]},{"pos":[4751,4877],"content":"For more information about the use of this property, see the <xref:System.Diagnostics.SymbolStore.SymAddressKind> enumeration.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"For more information about the use of this property, see the &lt;xref:System.Diagnostics.SymbolStore.SymAddressKind&gt; enumeration.","pos":[0,126],"source":"For more information about the use of this property, see the <xref:System.Diagnostics.SymbolStore.SymAddressKind> enumeration."}]},{"pos":[4999,5033],"content":"The third address of the variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The third address of the variable.","pos":[0,34]}]},{"pos":[5526,5643],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.SymbolStore.SymAddressKind\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value describing the type of the address.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Diagnostics.SymbolStore.SymAddressKind\"></xref> value describing the type of the address."},{"pos":[5838,5948],"content":"The type of the address. One of the <xref href=\"System.Diagnostics.SymbolStore.SymAddressKind\"></xref> values.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the address.","pos":[0,24]},{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.SymbolStore.SymAddressKind\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[25,110],"source":" One of the <xref href=\"System.Diagnostics.SymbolStore.SymAddressKind\"></xref> values."}]},{"pos":[6125,6200],"content":"Unknown <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.SymbolStore.SymAddressKind\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Unknown <xref href=\"System.Diagnostics.SymbolStore.SymAddressKind\"></xref>."},{"pos":[6601,6637],"content":"Gets the attributes of the variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the attributes of the variable.","pos":[0,36]}]},{"pos":[6760,6784],"content":"The variable attributes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The variable attributes.","pos":[0,24]}]},{"pos":[7258,7387],"content":"Releases the resources used by the current instance of the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.SymbolStore.SymVariable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Releases the resources used by the current instance of the <xref href=\"System.Diagnostics.SymbolStore.SymVariable\"></xref> class."},{"pos":[7993,8291],"content":"Called by the &lt;xref:System.Diagnostics.SymbolStore.SymVariable.Dispose<bpt id=\"p1\">*</bpt>&gt; and &lt;xref:System.Diagnostics.SymbolStore.SymVariable.Finalize<ept id=\"p1\">*</ept>&gt; methods to release the managed and unmanaged resources used by the current instance of the <bpt id=\"p2\">&lt;xref href=\"System.Diagnostics.SymbolStore.SymVariable\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Called by the <xref:System.Diagnostics.SymbolStore.SymVariable.Dispose*> and <xref:System.Diagnostics.SymbolStore.SymVariable.Finalize*> methods to release the managed and unmanaged resources used by the current instance of the <xref href=\"System.Diagnostics.SymbolStore.SymVariable\"></xref> class."},{"pos":[8303,8513],"content":"This method is called only by the public <xref:System.Diagnostics.SymbolStore.SymVariable.Dispose%2A> and <xref:System.Diagnostics.SymbolStore.SymVariable.Finalize%2A> methods; do not call this method directly.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is called only by the public &lt;xref:System.Diagnostics.SymbolStore.SymVariable.Dispose%2A&gt; and &lt;xref:System.Diagnostics.SymbolStore.SymVariable.Finalize%2A&gt; methods; do not call this method directly.","pos":[0,210],"source":"This method is called only by the public <xref:System.Diagnostics.SymbolStore.SymVariable.Dispose%2A> and <xref:System.Diagnostics.SymbolStore.SymVariable.Finalize%2A> methods; do not call this method directly."}]},{"pos":[8656,8860],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to release managed and unmanaged resources; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to release only unmanaged resources.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only unmanaged resources."},{"pos":[9337,9404],"content":"Gets the end offset of a variable within the scope of the variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the end offset of a variable within the scope of the variable.","pos":[0,67]}]},{"pos":[9416,9462],"content":"This property applies only to local variables.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property applies only to local variables.","pos":[0,46]}]},{"pos":[9580,9611],"content":"The end offset of the variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The end offset of the variable.","pos":[0,31]}]},{"pos":[10089,10266],"content":"Releases unmanaged resources and performs other cleanup operations before the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.SymbolStore.SymVariable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is reclaimed by garbage collection.","needQuote":true,"needEscape":true,"source":"Releases unmanaged resources and performs other cleanup operations before the <xref href=\"System.Diagnostics.SymbolStore.SymVariable\"></xref> is reclaimed by garbage collection."},{"pos":[10278,10587],"content":"This method overrides  <xref:System.Object.Finalize%2A>. Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method overrides  &lt;xref:System.Object.Finalize%2A&gt;.","pos":[0,56],"source":"This method overrides  <xref:System.Object.Finalize%2A>."},{"content":"Application code should not call this method; an object's <ph id=\"ph1\">`Finalize`</ph> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the &lt;xref:System.GC.SuppressFinalize%2A&gt; method.","pos":[57,309],"source":" Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method."}]},{"pos":[11143,11171],"content":"Gets the variable signature.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the variable signature.","pos":[0,28]}]},{"pos":[11310,11351],"content":"The variable signature as an opaque blob.","needQuote":true,"needEscape":true,"nodes":[{"content":"The variable signature as an opaque blob.","pos":[0,41]}]},{"pos":[11808,11838],"content":"Gets the name of the variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the variable.","pos":[0,30]}]},{"pos":[11955,11980],"content":"The name of the variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the variable.","pos":[0,25]}]},{"pos":[12464,12535],"content":"Gets the start offset of the variable within the scope of the variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the start offset of the variable within the scope of the variable.","pos":[0,71]}]},{"pos":[12547,12596],"content":"This property applies only to the local variable.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property applies only to the local variable.","pos":[0,49]}]},{"pos":[12716,12749],"content":"The start offset of the variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The start offset of the variable.","pos":[0,33]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.SymbolStore.SymVariable\n  id: SymVariable\n  children:\n  - System.Diagnostics.SymbolStore.SymVariable.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedVariable*)\n  - System.Diagnostics.SymbolStore.SymVariable.AddressField1\n  - System.Diagnostics.SymbolStore.SymVariable.AddressField2\n  - System.Diagnostics.SymbolStore.SymVariable.AddressField3\n  - System.Diagnostics.SymbolStore.SymVariable.AddressKind\n  - System.Diagnostics.SymbolStore.SymVariable.Attributes\n  - System.Diagnostics.SymbolStore.SymVariable.Dispose\n  - System.Diagnostics.SymbolStore.SymVariable.Dispose(System.Boolean)\n  - System.Diagnostics.SymbolStore.SymVariable.EndOffset\n  - System.Diagnostics.SymbolStore.SymVariable.Finalize\n  - System.Diagnostics.SymbolStore.SymVariable.GetSignature\n  - System.Diagnostics.SymbolStore.SymVariable.Name\n  - System.Diagnostics.SymbolStore.SymVariable.StartOffset\n  langs:\n  - csharp\n  name: SymVariable\n  nameWithType: SymVariable\n  fullName: System.Diagnostics.SymbolStore.SymVariable\n  type: Class\n  summary: Represents a variable within a symbol store.\n  remarks: The SymVariable object can be a parameter, a local variable, or a field.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class SymVariable : System.Diagnostics.SymbolStore.SymVariableBase, IDisposable, System.Diagnostics.SymbolStore.ISymbolVariable\n  inheritance:\n  - System.Object\n  - System.Diagnostics.SymbolStore.SymVariableBase\n  implements:\n  - System.Diagnostics.SymbolStore.ISymbolVariable\n  - System.IDisposable\n  inheritedMembers:\n  - System.Diagnostics.SymbolStore.SymVariableBase.{dtor}\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.SymVariable.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedVariable*)\n  id: '#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedVariable*)'\n  parent: System.Diagnostics.SymbolStore.SymVariable\n  langs:\n  - csharp\n  name: SymVariable(ISymUnmanagedVariable*)\n  nameWithType: SymVariable.SymVariable(ISymUnmanagedVariable*)\n  fullName: System.Diagnostics.SymbolStore.SymVariable.SymVariable(ISymUnmanagedVariable*)\n  type: Constructor\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public SymVariable (System.Diagnostics.SymbolStore.Private.ISymUnmanagedVariable* pVariable);\n    parameters:\n    - id: pVariable\n      type: System.Diagnostics.SymbolStore.Private.ISymUnmanagedVariable*\n      description: To be added.\n  overload: System.Diagnostics.SymbolStore.SymVariable.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.SymVariable.AddressField1\n  id: AddressField1\n  parent: System.Diagnostics.SymbolStore.SymVariable\n  langs:\n  - csharp\n  name: AddressField1\n  nameWithType: SymVariable.AddressField1\n  fullName: System.Diagnostics.SymbolStore.SymVariable.AddressField1\n  type: Property\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the first address of a variable.\n  remarks: For more information about the use of this property, see the <xref:System.Diagnostics.SymbolStore.SymAddressKind> enumeration.\n  syntax:\n    content: public virtual int AddressField1 { get; }\n    return:\n      type: System.Int32\n      description: The first address of the variable.\n  overload: System.Diagnostics.SymbolStore.SymVariable.AddressField1*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.SymVariable.AddressField2\n  id: AddressField2\n  parent: System.Diagnostics.SymbolStore.SymVariable\n  langs:\n  - csharp\n  name: AddressField2\n  nameWithType: SymVariable.AddressField2\n  fullName: System.Diagnostics.SymbolStore.SymVariable.AddressField2\n  type: Property\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the second address of a variable.\n  remarks: For more information about the use of this property, see the <xref:System.Diagnostics.SymbolStore.SymAddressKind> enumeration.\n  syntax:\n    content: public virtual int AddressField2 { get; }\n    return:\n      type: System.Int32\n      description: The second address of the variable.\n  overload: System.Diagnostics.SymbolStore.SymVariable.AddressField2*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.SymVariable.AddressField3\n  id: AddressField3\n  parent: System.Diagnostics.SymbolStore.SymVariable\n  langs:\n  - csharp\n  name: AddressField3\n  nameWithType: SymVariable.AddressField3\n  fullName: System.Diagnostics.SymbolStore.SymVariable.AddressField3\n  type: Property\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the third address of a variable.\n  remarks: For more information about the use of this property, see the <xref:System.Diagnostics.SymbolStore.SymAddressKind> enumeration.\n  syntax:\n    content: public virtual int AddressField3 { get; }\n    return:\n      type: System.Int32\n      description: The third address of the variable.\n  overload: System.Diagnostics.SymbolStore.SymVariable.AddressField3*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.SymVariable.AddressKind\n  id: AddressKind\n  parent: System.Diagnostics.SymbolStore.SymVariable\n  langs:\n  - csharp\n  name: AddressKind\n  nameWithType: SymVariable.AddressKind\n  fullName: System.Diagnostics.SymbolStore.SymVariable.AddressKind\n  type: Property\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the <xref href=\"System.Diagnostics.SymbolStore.SymAddressKind\"></xref> value describing the type of the address.\n  syntax:\n    content: public virtual System.Diagnostics.SymbolStore.SymAddressKind AddressKind { get; }\n    return:\n      type: System.Diagnostics.SymbolStore.SymAddressKind\n      description: The type of the address. One of the <xref href=\"System.Diagnostics.SymbolStore.SymAddressKind\"></xref> values.\n  overload: System.Diagnostics.SymbolStore.SymVariable.AddressKind*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Unknown <xref href=\"System.Diagnostics.SymbolStore.SymAddressKind\"></xref>.\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.SymVariable.Attributes\n  id: Attributes\n  parent: System.Diagnostics.SymbolStore.SymVariable\n  langs:\n  - csharp\n  name: Attributes\n  nameWithType: SymVariable.Attributes\n  fullName: System.Diagnostics.SymbolStore.SymVariable.Attributes\n  type: Property\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the attributes of the variable.\n  syntax:\n    content: public virtual object Attributes { get; }\n    return:\n      type: System.Object\n      description: The variable attributes.\n  overload: System.Diagnostics.SymbolStore.SymVariable.Attributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.SymVariable.Dispose\n  id: Dispose\n  parent: System.Diagnostics.SymbolStore.SymVariable\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: SymVariable.Dispose()\n  fullName: System.Diagnostics.SymbolStore.SymVariable.Dispose()\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Releases the resources used by the current instance of the <xref href=\"System.Diagnostics.SymbolStore.SymVariable\"></xref> class.\n  syntax:\n    content: public override sealed void Dispose ();\n    parameters: []\n  overload: System.Diagnostics.SymbolStore.SymVariable.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.SymVariable.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Diagnostics.SymbolStore.SymVariable\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: SymVariable.Dispose(Boolean)\n  fullName: System.Diagnostics.SymbolStore.SymVariable.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Called by the <xref:System.Diagnostics.SymbolStore.SymVariable.Dispose*> and <xref:System.Diagnostics.SymbolStore.SymVariable.Finalize*> methods to release the managed and unmanaged resources used by the current instance of the <xref href=\"System.Diagnostics.SymbolStore.SymVariable\"></xref> class.\n  remarks: This method is called only by the public <xref:System.Diagnostics.SymbolStore.SymVariable.Dispose%2A> and <xref:System.Diagnostics.SymbolStore.SymVariable.Finalize%2A> methods; do not call this method directly.\n  syntax:\n    content: protected virtual void Dispose (bool A_0);\n    parameters:\n    - id: A_0\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only unmanaged resources.\n  overload: System.Diagnostics.SymbolStore.SymVariable.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.SymVariable.EndOffset\n  id: EndOffset\n  parent: System.Diagnostics.SymbolStore.SymVariable\n  langs:\n  - csharp\n  name: EndOffset\n  nameWithType: SymVariable.EndOffset\n  fullName: System.Diagnostics.SymbolStore.SymVariable.EndOffset\n  type: Property\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the end offset of a variable within the scope of the variable.\n  remarks: This property applies only to local variables.\n  syntax:\n    content: public virtual int EndOffset { get; }\n    return:\n      type: System.Int32\n      description: The end offset of the variable.\n  overload: System.Diagnostics.SymbolStore.SymVariable.EndOffset*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.SymVariable.Finalize\n  id: Finalize\n  parent: System.Diagnostics.SymbolStore.SymVariable\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: SymVariable.Finalize()\n  fullName: System.Diagnostics.SymbolStore.SymVariable.Finalize()\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Releases unmanaged resources and performs other cleanup operations before the <xref href=\"System.Diagnostics.SymbolStore.SymVariable\"></xref> is reclaimed by garbage collection.\n  remarks: This method overrides  <xref:System.Object.Finalize%2A>. Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.\n  syntax:\n    content: ~SymVariable ();\n    parameters: []\n  overload: System.Diagnostics.SymbolStore.SymVariable.Finalize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.SymVariable.GetSignature\n  id: GetSignature\n  parent: System.Diagnostics.SymbolStore.SymVariable\n  langs:\n  - csharp\n  name: GetSignature()\n  nameWithType: SymVariable.GetSignature()\n  fullName: System.Diagnostics.SymbolStore.SymVariable.GetSignature()\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the variable signature.\n  syntax:\n    content: public virtual byte[] GetSignature ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: The variable signature as an opaque blob.\n  overload: System.Diagnostics.SymbolStore.SymVariable.GetSignature*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.SymVariable.Name\n  id: Name\n  parent: System.Diagnostics.SymbolStore.SymVariable\n  langs:\n  - csharp\n  name: Name\n  nameWithType: SymVariable.Name\n  fullName: System.Diagnostics.SymbolStore.SymVariable.Name\n  type: Property\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the name of the variable.\n  syntax:\n    content: public virtual string Name { get; }\n    return:\n      type: System.String\n      description: The name of the variable.\n  overload: System.Diagnostics.SymbolStore.SymVariable.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.SymVariable.StartOffset\n  id: StartOffset\n  parent: System.Diagnostics.SymbolStore.SymVariable\n  langs:\n  - csharp\n  name: StartOffset\n  nameWithType: SymVariable.StartOffset\n  fullName: System.Diagnostics.SymbolStore.SymVariable.StartOffset\n  type: Property\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the start offset of the variable within the scope of the variable.\n  remarks: This property applies only to the local variable.\n  syntax:\n    content: public virtual int StartOffset { get; }\n    return:\n      type: System.Int32\n      description: The start offset of the variable.\n  overload: System.Diagnostics.SymbolStore.SymVariable.StartOffset*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Diagnostics.SymbolStore.SymVariableBase\n  isExternal: false\n  name: System.Diagnostics.SymbolStore.SymVariableBase\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Diagnostics.SymbolStore.SymVariable.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedVariable*)\n  parent: System.Diagnostics.SymbolStore.SymVariable\n  isExternal: false\n  name: SymVariable(ISymUnmanagedVariable*)\n  nameWithType: SymVariable.SymVariable(ISymUnmanagedVariable*)\n  fullName: System.Diagnostics.SymbolStore.SymVariable.SymVariable(ISymUnmanagedVariable*)\n- uid: System.Diagnostics.SymbolStore.SymVariable.AddressField1\n  parent: System.Diagnostics.SymbolStore.SymVariable\n  isExternal: false\n  name: AddressField1\n  nameWithType: SymVariable.AddressField1\n  fullName: System.Diagnostics.SymbolStore.SymVariable.AddressField1\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.SymVariable.AddressField2\n  parent: System.Diagnostics.SymbolStore.SymVariable\n  isExternal: false\n  name: AddressField2\n  nameWithType: SymVariable.AddressField2\n  fullName: System.Diagnostics.SymbolStore.SymVariable.AddressField2\n- uid: System.Diagnostics.SymbolStore.SymVariable.AddressField3\n  parent: System.Diagnostics.SymbolStore.SymVariable\n  isExternal: false\n  name: AddressField3\n  nameWithType: SymVariable.AddressField3\n  fullName: System.Diagnostics.SymbolStore.SymVariable.AddressField3\n- uid: System.Diagnostics.SymbolStore.SymVariable.AddressKind\n  parent: System.Diagnostics.SymbolStore.SymVariable\n  isExternal: false\n  name: AddressKind\n  nameWithType: SymVariable.AddressKind\n  fullName: System.Diagnostics.SymbolStore.SymVariable.AddressKind\n- uid: System.Diagnostics.SymbolStore.SymAddressKind\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: SymAddressKind\n  nameWithType: SymAddressKind\n  fullName: System.Diagnostics.SymbolStore.SymAddressKind\n- uid: System.Diagnostics.SymbolStore.SymVariable.Attributes\n  parent: System.Diagnostics.SymbolStore.SymVariable\n  isExternal: false\n  name: Attributes\n  nameWithType: SymVariable.Attributes\n  fullName: System.Diagnostics.SymbolStore.SymVariable.Attributes\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Diagnostics.SymbolStore.SymVariable.Dispose\n  parent: System.Diagnostics.SymbolStore.SymVariable\n  isExternal: false\n  name: Dispose()\n  nameWithType: SymVariable.Dispose()\n  fullName: System.Diagnostics.SymbolStore.SymVariable.Dispose()\n- uid: System.Diagnostics.SymbolStore.SymVariable.Dispose(System.Boolean)\n  parent: System.Diagnostics.SymbolStore.SymVariable\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: SymVariable.Dispose(Boolean)\n  fullName: System.Diagnostics.SymbolStore.SymVariable.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.SymbolStore.SymVariable.EndOffset\n  parent: System.Diagnostics.SymbolStore.SymVariable\n  isExternal: false\n  name: EndOffset\n  nameWithType: SymVariable.EndOffset\n  fullName: System.Diagnostics.SymbolStore.SymVariable.EndOffset\n- uid: System.Diagnostics.SymbolStore.SymVariable.Finalize\n  parent: System.Diagnostics.SymbolStore.SymVariable\n  isExternal: false\n  name: Finalize()\n  nameWithType: SymVariable.Finalize()\n  fullName: System.Diagnostics.SymbolStore.SymVariable.Finalize()\n- uid: System.Diagnostics.SymbolStore.SymVariable.GetSignature\n  parent: System.Diagnostics.SymbolStore.SymVariable\n  isExternal: false\n  name: GetSignature()\n  nameWithType: SymVariable.GetSignature()\n  fullName: System.Diagnostics.SymbolStore.SymVariable.GetSignature()\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.SymbolStore.SymVariable.Name\n  parent: System.Diagnostics.SymbolStore.SymVariable\n  isExternal: false\n  name: Name\n  nameWithType: SymVariable.Name\n  fullName: System.Diagnostics.SymbolStore.SymVariable.Name\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.SymbolStore.SymVariable.StartOffset\n  parent: System.Diagnostics.SymbolStore.SymVariable\n  isExternal: false\n  name: StartOffset\n  nameWithType: SymVariable.StartOffset\n  fullName: System.Diagnostics.SymbolStore.SymVariable.StartOffset\n- uid: System.Diagnostics.SymbolStore.SymVariable.#ctor*\n  parent: System.Diagnostics.SymbolStore.SymVariable\n  isExternal: false\n  name: SymVariable\n  nameWithType: SymVariable.SymVariable\n- uid: System.Diagnostics.SymbolStore.SymVariable.AddressField1*\n  parent: System.Diagnostics.SymbolStore.SymVariable\n  isExternal: false\n  name: AddressField1\n  nameWithType: SymVariable.AddressField1\n- uid: System.Diagnostics.SymbolStore.SymVariable.AddressField2*\n  parent: System.Diagnostics.SymbolStore.SymVariable\n  isExternal: false\n  name: AddressField2\n  nameWithType: SymVariable.AddressField2\n- uid: System.Diagnostics.SymbolStore.SymVariable.AddressField3*\n  parent: System.Diagnostics.SymbolStore.SymVariable\n  isExternal: false\n  name: AddressField3\n  nameWithType: SymVariable.AddressField3\n- uid: System.Diagnostics.SymbolStore.SymVariable.AddressKind*\n  parent: System.Diagnostics.SymbolStore.SymVariable\n  isExternal: false\n  name: AddressKind\n  nameWithType: SymVariable.AddressKind\n- uid: System.Diagnostics.SymbolStore.SymVariable.Attributes*\n  parent: System.Diagnostics.SymbolStore.SymVariable\n  isExternal: false\n  name: Attributes\n  nameWithType: SymVariable.Attributes\n- uid: System.Diagnostics.SymbolStore.SymVariable.Dispose*\n  parent: System.Diagnostics.SymbolStore.SymVariable\n  isExternal: false\n  name: Dispose\n  nameWithType: SymVariable.Dispose\n- uid: System.Diagnostics.SymbolStore.SymVariable.EndOffset*\n  parent: System.Diagnostics.SymbolStore.SymVariable\n  isExternal: false\n  name: EndOffset\n  nameWithType: SymVariable.EndOffset\n- uid: System.Diagnostics.SymbolStore.SymVariable.Finalize*\n  parent: System.Diagnostics.SymbolStore.SymVariable\n  isExternal: false\n  name: Finalize\n  nameWithType: SymVariable.Finalize\n- uid: System.Diagnostics.SymbolStore.SymVariable.GetSignature*\n  parent: System.Diagnostics.SymbolStore.SymVariable\n  isExternal: false\n  name: GetSignature\n  nameWithType: SymVariable.GetSignature\n- uid: System.Diagnostics.SymbolStore.SymVariable.Name*\n  parent: System.Diagnostics.SymbolStore.SymVariable\n  isExternal: false\n  name: Name\n  nameWithType: SymVariable.Name\n- uid: System.Diagnostics.SymbolStore.SymVariable.StartOffset*\n  parent: System.Diagnostics.SymbolStore.SymVariable\n  isExternal: false\n  name: StartOffset\n  nameWithType: SymVariable.StartOffset\n"}