{"nodes":[{"pos":[425,540],"content":"Represents controls that initiate or perform a single, unambiguous action and do not maintain state when activated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents controls that initiate or perform a single, unambiguous action and do not maintain state when activated.","pos":[0,115]}]},{"pos":[553,1275],"content":"Controls support InvokePattern if the same behavior is not exposed through another control pattern. For example, if the <xref:System.Windows.Automation.InvokePattern.Invoke%2A> method on a control performs the same action as the <xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A> or <xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A> method, the control will not support InvokePattern.       [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] elements that represent controls such as check boxes and radio buttons, which maintain a state, instead support <xref:System.Windows.Automation.TogglePattern> or <xref:System.Windows.Automation.SelectionItemPattern>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Controls support InvokePattern if the same behavior is not exposed through another control pattern.","pos":[0,99]},{"content":"For example, if the &lt;xref:System.Windows.Automation.InvokePattern.Invoke%2A&gt; method on a control performs the same action as the &lt;xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A&gt; or &lt;xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A&gt; method, the control will not support InvokePattern.","pos":[100,415],"source":" For example, if the <xref:System.Windows.Automation.InvokePattern.Invoke%2A> method on a control performs the same action as the <xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A> or <xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A> method, the control will not support InvokePattern."},{"content":"<ph id=\"ph1\">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> elements that represent controls such as check boxes and radio buttons, which maintain a state, instead support &lt;xref:System.Windows.Automation.TogglePattern&gt; or &lt;xref:System.Windows.Automation.SelectionItemPattern&gt;.","pos":[422,720],"source":"[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] elements that represent controls such as check boxes and radio buttons, which maintain a state, instead support <xref:System.Windows.Automation.TogglePattern> or <xref:System.Windows.Automation.SelectionItemPattern>."}]},{"pos":[1863,1945],"content":"Sends a request to activate a control and initiate its single, unambiguous action.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sends a request to activate a control and initiate its single, unambiguous action.","pos":[0,82]}]},{"pos":[1957,2317],"content":"Calls to Invoke should return immediately without blocking. However, this behavior is entirely dependent on the [!INCLUDE[TLA#tla_uiautomation](~/add/includes/tlasharptla-uiautomation-md.md)] provider implementation. In scenarios where calling Invoke causes a blocking issue (such as a modal dialog) a separate helper thread may be required to call the method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Calls to Invoke should return immediately without blocking.","pos":[0,59]},{"content":"However, this behavior is entirely dependent on the <ph id=\"ph1\">[!INCLUDE[TLA#tla_uiautomation](~/add/includes/tlasharptla-uiautomation-md.md)]</ph> provider implementation.","pos":[60,216],"source":" However, this behavior is entirely dependent on the [!INCLUDE[TLA#tla_uiautomation](~/add/includes/tlasharptla-uiautomation-md.md)] provider implementation."},{"content":"In scenarios where calling Invoke causes a blocking issue (such as a modal dialog) a separate helper thread may be required to call the method.","pos":[217,360]}]},{"pos":[2987,3121],"content":"The element does not support the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Automation.InvokePattern\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control pattern or is hidden or blocked.","needQuote":true,"needEscape":true,"source":"The element does not support the <xref href=\"System.Windows.Automation.InvokePattern\"></xref> control pattern or is hidden or blocked."},{"pos":[3272,3484],"content":"The element is not enabled. Can be raised when a UI Automation provider has implemented its own handling of the <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element is not enabled. Can be raised when a UI Automation provider has implemented its own handling of the <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled*> property.","pos":[0,212],"nodes":[{"content":"The element is not enabled.","pos":[0,27]},{"content":"Can be raised when a UI Automation provider has implemented its own handling of the &lt;xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled*&gt; property.","pos":[28,212],"source":" Can be raised when a UI Automation provider has implemented its own handling of the <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled*> property."}]}]},{"pos":[3887,3954],"content":"Identifies the event raised when a control is invoked or activated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the event raised when a control is invoked or activated.","pos":[0,67]}]},{"pos":[3967,4284],"content":"This identifier is used by UI Automation client applications. UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.InvokePatternIdentifiers>.       The InvokedEvent identifier is passed as a parameter to <xref:System.Windows.Automation.Automation.AddAutomationEventHandler%2A>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This identifier is used by UI Automation client applications. UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.InvokePatternIdentifiers>.       The InvokedEvent identifier is passed as a parameter to <xref:System.Windows.Automation.Automation.AddAutomationEventHandler%2A>.","pos":[0,315],"nodes":[{"content":"This identifier is used by UI Automation client applications.","pos":[0,61]},{"content":"UI Automation providers should use the equivalent field in &lt;xref:System.Windows.Automation.InvokePatternIdentifiers&gt;.","pos":[62,179],"source":" UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.InvokePatternIdentifiers>."},{"content":"The InvokedEvent identifier is passed as a parameter to &lt;xref:System.Windows.Automation.Automation.AddAutomationEventHandler%2A&gt;.","pos":[186,315],"source":"       The InvokedEvent identifier is passed as a parameter to <xref:System.Windows.Automation.Automation.AddAutomationEventHandler%2A>."}]}]},{"pos":[4919,4931],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5326,5418],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Automation.InvokePattern\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control pattern.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.Automation.InvokePattern\"></xref> control pattern."},{"pos":[5431,5857],"content":"This identifier is used by UI Automation client applications. UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.InvokePatternIdentifiers>.       The pattern identifier is passed to methods such as <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> to retrieve the control pattern of interest from the specified <xref:System.Windows.Automation.AutomationElement>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This identifier is used by UI Automation client applications. UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.InvokePatternIdentifiers>.       The pattern identifier is passed to methods such as <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> to retrieve the control pattern of interest from the specified <xref:System.Windows.Automation.AutomationElement>.","pos":[0,424],"nodes":[{"content":"This identifier is used by UI Automation client applications.","pos":[0,61]},{"content":"UI Automation providers should use the equivalent field in &lt;xref:System.Windows.Automation.InvokePatternIdentifiers&gt;.","pos":[62,179],"source":" UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.InvokePatternIdentifiers>."},{"content":"The pattern identifier is passed to methods such as &lt;xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A&gt; to retrieve the control pattern of interest from the specified &lt;xref:System.Windows.Automation.AutomationElement&gt;.","pos":[186,424],"source":"       The pattern identifier is passed to methods such as <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> to retrieve the control pattern of interest from the specified <xref:System.Windows.Automation.AutomationElement>."}]}]},{"pos":[6516,6528],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Automation.InvokePattern\n  id: InvokePattern\n  children:\n  - System.Windows.Automation.InvokePattern.Invoke\n  - System.Windows.Automation.InvokePattern.InvokedEvent\n  - System.Windows.Automation.InvokePattern.Pattern\n  langs:\n  - csharp\n  name: InvokePattern\n  nameWithType: InvokePattern\n  fullName: System.Windows.Automation.InvokePattern\n  type: Class\n  summary: Represents controls that initiate or perform a single, unambiguous action and do not maintain state when activated.\n  remarks: \"Controls support InvokePattern if the same behavior is not exposed through another control pattern. For example, if the <xref:System.Windows.Automation.InvokePattern.Invoke%2A> method on a control performs the same action as the <xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A> or <xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A> method, the control will not support InvokePattern.  \\n  \\n [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] elements that represent controls such as check boxes and radio buttons, which maintain a state, instead support <xref:System.Windows.Automation.TogglePattern> or <xref:System.Windows.Automation.SelectionItemPattern>.\"\n  syntax:\n    content: 'public class InvokePattern : System.Windows.Automation.BasePattern'\n  inheritance:\n  - System.Object\n  - System.Windows.Automation.BasePattern\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.Automation.InvokePattern.Invoke\n  id: Invoke\n  parent: System.Windows.Automation.InvokePattern\n  langs:\n  - csharp\n  name: Invoke()\n  nameWithType: InvokePattern.Invoke()\n  fullName: System.Windows.Automation.InvokePattern.Invoke()\n  type: Method\n  assemblies:\n  - UIAutomationClient\n  namespace: System.Windows.Automation\n  summary: Sends a request to activate a control and initiate its single, unambiguous action.\n  remarks: Calls to Invoke should return immediately without blocking. However, this behavior is entirely dependent on the [!INCLUDE[TLA#tla_uiautomation](~/add/includes/tlasharptla-uiautomation-md.md)] provider implementation. In scenarios where calling Invoke causes a blocking issue (such as a modal dialog) a separate helper thread may be required to call the method.\n  example:\n  - \"In the following example an <xref:System.Windows.Automation.InvokePattern>control pattern is obtained from a control and the Invoke method is called.  \\n  \\n [!code-cs[UIAInvokePattern_snip#101](~/add/codesnippet/csharp/UIAInvokePattern_snip/UIAInvokePattern_snippets.cs#101)]\\n [!code-vb[UIAInvokePattern_snip#101](~/add/codesnippet/visualbasic/UIAInvokePattern_snip/UIAInvokePattern_snippets.vb#101)]\"\n  syntax:\n    content: public void Invoke ();\n    parameters: []\n  overload: System.Windows.Automation.InvokePattern.Invoke*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The element does not support the <xref href=\"System.Windows.Automation.InvokePattern\"></xref> control pattern or is hidden or blocked.\n  - type: System.Windows.Automation.ElementNotEnabledException\n    commentId: T:System.Windows.Automation.ElementNotEnabledException\n    description: The element is not enabled. Can be raised when a UI Automation provider has implemented its own handling of the <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled*> property.\n  platform:\n  - net462\n- uid: System.Windows.Automation.InvokePattern.InvokedEvent\n  id: InvokedEvent\n  parent: System.Windows.Automation.InvokePattern\n  langs:\n  - csharp\n  name: InvokedEvent\n  nameWithType: InvokePattern.InvokedEvent\n  fullName: System.Windows.Automation.InvokePattern.InvokedEvent\n  type: Field\n  assemblies:\n  - UIAutomationClient\n  namespace: System.Windows.Automation\n  summary: Identifies the event raised when a control is invoked or activated.\n  remarks: \"This identifier is used by UI Automation client applications. UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.InvokePatternIdentifiers>.  \\n  \\n The InvokedEvent identifier is passed as a parameter to <xref:System.Windows.Automation.Automation.AddAutomationEventHandler%2A>.\"\n  example:\n  - \"In the following example, the event handler identifies the event as an Invoked event by comparing the <xref:System.Windows.Automation.AutomationEventArgs.EventId%2A> in the event arguments with the InvokedEvent identifier field.  \\n  \\n [!code-vb[UIAClient_snip#101](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#101)]\\n [!code-cs[UIAClient_snip#101](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#101)]\"\n  syntax:\n    content: public static readonly System.Windows.Automation.AutomationEvent InvokedEvent;\n    return:\n      type: System.Windows.Automation.AutomationEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Automation.InvokePattern.Pattern\n  id: Pattern\n  parent: System.Windows.Automation.InvokePattern\n  langs:\n  - csharp\n  name: Pattern\n  nameWithType: InvokePattern.Pattern\n  fullName: System.Windows.Automation.InvokePattern.Pattern\n  type: Field\n  assemblies:\n  - UIAutomationClient\n  namespace: System.Windows.Automation\n  summary: Identifies the <xref href=\"System.Windows.Automation.InvokePattern\"></xref> control pattern.\n  remarks: \"This identifier is used by UI Automation client applications. UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.InvokePatternIdentifiers>.  \\n  \\n The pattern identifier is passed to methods such as <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> to retrieve the control pattern of interest from the specified <xref:System.Windows.Automation.AutomationElement>.\"\n  example:\n  - \"In the following example an <xref:System.Windows.Automation.InvokePattern> control pattern is obtained from a control and the <xref:System.Windows.Automation.InvokePattern.Invoke%2A> method is called.  \\n  \\n [!code-cs[UIAInvokePattern_snip#101](~/add/codesnippet/csharp/UIAInvokePattern_snip/UIAInvokePattern_snippets.cs#101)]\\n [!code-vb[UIAInvokePattern_snip#101](~/add/codesnippet/visualbasic/UIAInvokePattern_snip/UIAInvokePattern_snippets.vb#101)]\"\n  syntax:\n    content: public static readonly System.Windows.Automation.AutomationPattern Pattern;\n    return:\n      type: System.Windows.Automation.AutomationPattern\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Automation.BasePattern\n  isExternal: false\n  name: System.Windows.Automation.BasePattern\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Windows.Automation.ElementNotEnabledException\n  parent: System.Windows.Automation\n  isExternal: false\n  name: ElementNotEnabledException\n  nameWithType: ElementNotEnabledException\n  fullName: System.Windows.Automation.ElementNotEnabledException\n- uid: System.Windows.Automation.InvokePattern.Invoke\n  parent: System.Windows.Automation.InvokePattern\n  isExternal: false\n  name: Invoke()\n  nameWithType: InvokePattern.Invoke()\n  fullName: System.Windows.Automation.InvokePattern.Invoke()\n- uid: System.Windows.Automation.InvokePattern.InvokedEvent\n  parent: System.Windows.Automation.InvokePattern\n  isExternal: false\n  name: InvokedEvent\n  nameWithType: InvokePattern.InvokedEvent\n  fullName: System.Windows.Automation.InvokePattern.InvokedEvent\n- uid: System.Windows.Automation.AutomationEvent\n  parent: System.Windows.Automation\n  isExternal: false\n  name: AutomationEvent\n  nameWithType: AutomationEvent\n  fullName: System.Windows.Automation.AutomationEvent\n- uid: System.Windows.Automation.InvokePattern.Pattern\n  parent: System.Windows.Automation.InvokePattern\n  isExternal: false\n  name: Pattern\n  nameWithType: InvokePattern.Pattern\n  fullName: System.Windows.Automation.InvokePattern.Pattern\n- uid: System.Windows.Automation.AutomationPattern\n  parent: System.Windows.Automation\n  isExternal: false\n  name: AutomationPattern\n  nameWithType: AutomationPattern\n  fullName: System.Windows.Automation.AutomationPattern\n- uid: System.Windows.Automation.InvokePattern.Invoke*\n  parent: System.Windows.Automation.InvokePattern\n  isExternal: false\n  name: Invoke\n  nameWithType: InvokePattern.Invoke\n"}