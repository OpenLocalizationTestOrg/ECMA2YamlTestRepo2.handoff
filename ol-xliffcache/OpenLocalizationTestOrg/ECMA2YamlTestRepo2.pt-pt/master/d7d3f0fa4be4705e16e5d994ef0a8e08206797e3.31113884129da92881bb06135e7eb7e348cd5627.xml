{"nodes":[{"pos":[1675,1760],"content":"Represents the collection of tables for the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Represents the collection of tables for the <xref href=\"System.Data.DataSet\"></xref>."},{"pos":[1773,2893],"content":"The DataTableCollection contains all the <xref:System.Data.DataTable> objects for a particular <xref:System.Data.DataSet>. To access the DataTableCollection of a <xref:System.Data.DataSet>, use the <xref:System.Data.DataSet.Tables%2A> property.       The DataTableCollection uses methods such as <xref:System.Data.DataTableCollection.Add%2A>, <xref:System.Data.DataTableCollection.Clear%2A>, and <xref:System.Data.DataTableCollection.Remove%2A> to manage the items in the collection.       Use the <xref:System.Data.DataTableCollection.Contains%2A> method to determine whether a particular table (specified by either index or name) is in the collection.       To navigate from one table to another, use the <xref:System.Data.DataTable.ChildRelations%2A> or <xref:System.Data.DataTable.ParentRelations%2A> property of the <xref:System.Data.DataTable> to access its collection of <xref:System.Data.DataRelation> objects. You can also use the <xref:System.Data.DataSet.Relations%2A> property to navigate through the parent/child relationships of the `DataTables` in a particular <xref:System.Data.DataSet> collection.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The DataTableCollection contains all the &lt;xref:System.Data.DataTable&gt; objects for a particular &lt;xref:System.Data.DataSet&gt;.","pos":[0,122],"source":"The DataTableCollection contains all the <xref:System.Data.DataTable> objects for a particular <xref:System.Data.DataSet>."},{"content":"To access the DataTableCollection of a &lt;xref:System.Data.DataSet&gt;, use the &lt;xref:System.Data.DataSet.Tables%2A&gt; property.","pos":[123,244],"source":" To access the DataTableCollection of a <xref:System.Data.DataSet>, use the <xref:System.Data.DataSet.Tables%2A> property."},{"content":"The DataTableCollection uses methods such as &lt;xref:System.Data.DataTableCollection.Add%2A&gt;, &lt;xref:System.Data.DataTableCollection.Clear%2A&gt;, and &lt;xref:System.Data.DataTableCollection.Remove%2A&gt; to manage the items in the collection.","pos":[251,483],"source":"       The DataTableCollection uses methods such as <xref:System.Data.DataTableCollection.Add%2A>, <xref:System.Data.DataTableCollection.Clear%2A>, and <xref:System.Data.DataTableCollection.Remove%2A> to manage the items in the collection."},{"content":"Use the &lt;xref:System.Data.DataTableCollection.Contains%2A&gt; method to determine whether a particular table (specified by either index or name) is in the collection.","pos":[490,653],"source":"       Use the <xref:System.Data.DataTableCollection.Contains%2A> method to determine whether a particular table (specified by either index or name) is in the collection."},{"content":"To navigate from one table to another, use the &lt;xref:System.Data.DataTable.ChildRelations%2A&gt; or &lt;xref:System.Data.DataTable.ParentRelations%2A&gt; property of the &lt;xref:System.Data.DataTable&gt; to access its collection of &lt;xref:System.Data.DataRelation&gt; objects.","pos":[660,918],"source":"       To navigate from one table to another, use the <xref:System.Data.DataTable.ChildRelations%2A> or <xref:System.Data.DataTable.ParentRelations%2A> property of the <xref:System.Data.DataTable> to access its collection of <xref:System.Data.DataRelation> objects."},{"content":"You can also use the &lt;xref:System.Data.DataSet.Relations%2A&gt; property to navigate through the parent/child relationships of the <ph id=\"ph1\">`DataTables`</ph> in a particular &lt;xref:System.Data.DataSet&gt; collection.","pos":[919,1114],"source":" You can also use the <xref:System.Data.DataSet.Relations%2A> property to navigate through the parent/child relationships of the `DataTables` in a particular <xref:System.Data.DataSet> collection."}]},{"pos":[4766,4884],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object by using a default name and adds it to the collection.","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Data.DataTable\"></xref> object by using a default name and adds it to the collection."},{"pos":[4897,5181],"content":"Because no name is specified, the `DataTable` is created by using a default name, relative to its order of addition. The default name is \"Table1.\"       The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs when a table is successfully added to the collection.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Because no name is specified, the <ph id=\"ph1\">`DataTable`</ph> is created by using a default name, relative to its order of addition.","pos":[0,116],"source":"Because no name is specified, the `DataTable` is created by using a default name, relative to its order of addition."},{"content":"The default name is \"Table1.\"","pos":[117,146]},{"content":"The &lt;xref:System.Data.DataTableCollection.CollectionChanged&gt; event occurs when a table is successfully added to the collection.","pos":[153,280],"source":"       The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs when a table is successfully added to the collection."}]},{"pos":[5803,5864],"content":"The newly created <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The newly created <xref href=\"System.Data.DataTable\"></xref>."},{"pos":[6329,6437],"content":"Adds the specified <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DataTable\" name=\"DataTable\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to the collection.","needQuote":true,"needEscape":true,"source":"Adds the specified <xref uid=\"langword_csharp_DataTable\" name=\"DataTable\" href=\"\"></xref> to the collection."},{"pos":[6449,6576],"content":"The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs when a table is successfully added to the collection.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Data.DataTableCollection.CollectionChanged&gt; event occurs when a table is successfully added to the collection.","pos":[0,127],"source":"The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs when a table is successfully added to the collection."}]},{"pos":[7029,7118],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DataTable\" name=\"DataTable\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to add.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_DataTable\" name=\"DataTable\" href=\"\"></xref> object to add."},{"pos":[7284,7382],"content":"The value specified for the table is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The value specified for the table is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[7477,7556],"content":"The table already belongs to this collection, or belongs to another collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The table already belongs to this collection, or belongs to another collection.","pos":[0,79]}]},{"pos":[7671,7753],"content":"A table in the collection has the same name. The comparison is not case sensitive.","needQuote":true,"needEscape":true,"nodes":[{"content":"A table in the collection has the same name. The comparison is not case sensitive.","pos":[0,82],"nodes":[{"content":"A table in the collection has the same name.","pos":[0,44]},{"content":"The comparison is not case sensitive.","pos":[45,82]}]}]},{"pos":[8127,8245],"content":"Creates a <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object by using the specified name and adds it to the collection.","needQuote":true,"needEscape":true,"source":"Creates a <xref href=\"System.Data.DataTable\"></xref> object by using the specified name and adds it to the collection."},{"pos":[8258,8606],"content":"If either `null` or an empty string (\"\") is passed in, a default name is given to the newly created `DataTable`. This name is based on the order in which the table was added (\"Table1\", \"Table2\", and so on).       The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs if the table is successfully added to the collection.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If either <ph id=\"ph1\">`null`</ph> or an empty string (\"\") is passed in, a default name is given to the newly created <ph id=\"ph2\">`DataTable`</ph>.","pos":[0,112],"source":"If either `null` or an empty string (\"\") is passed in, a default name is given to the newly created `DataTable`."},{"content":"This name is based on the order in which the table was added (\"Table1\", \"Table2\", and so on).","pos":[113,206]},{"content":"The &lt;xref:System.Data.DataTableCollection.CollectionChanged&gt; event occurs if the table is successfully added to the collection.","pos":[213,340],"source":"       The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs if the table is successfully added to the collection."}]},{"pos":[9154,9226],"content":"The name to give the created <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The name to give the created <xref href=\"System.Data.DataTable\"></xref>."},{"pos":[9292,9353],"content":"The newly created <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The newly created <xref href=\"System.Data.DataTable\"></xref>."},{"pos":[9531,9615],"content":"A table in the collection has the same name. (The comparison is not case sensitive.)","needQuote":true,"needEscape":true,"nodes":[{"content":"A table in the collection has the same name. (The comparison is not case sensitive.)","pos":[0,84],"nodes":[{"content":"A table in the collection has the same name.","pos":[0,44]},{"content":"(The comparison is not case sensitive.)","pos":[45,84]}]}]},{"pos":[10038,10156],"content":"Creates a <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object by using the specified name and adds it to the collection.","needQuote":true,"needEscape":true,"source":"Creates a <xref href=\"System.Data.DataTable\"></xref> object by using the specified name and adds it to the collection."},{"pos":[10169,10517],"content":"If either `null` or an empty string (\"\") is passed in, a default name is given to the newly created `DataTable`. This name is based on the order in which the table was added (\"Table1\", \"Table2\", and so on).       The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs if the table is successfully added to the collection.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If either <ph id=\"ph1\">`null`</ph> or an empty string (\"\") is passed in, a default name is given to the newly created <ph id=\"ph2\">`DataTable`</ph>.","pos":[0,112],"source":"If either `null` or an empty string (\"\") is passed in, a default name is given to the newly created `DataTable`."},{"content":"This name is based on the order in which the table was added (\"Table1\", \"Table2\", and so on).","pos":[113,206]},{"content":"The &lt;xref:System.Data.DataTableCollection.CollectionChanged&gt; event occurs if the table is successfully added to the collection.","pos":[213,340],"source":"       The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs if the table is successfully added to the collection."}]},{"pos":[11088,11160],"content":"The name to give the created <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The name to give the created <xref href=\"System.Data.DataTable\"></xref>."},{"pos":[11231,11308],"content":"The namespace to give the created <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The namespace to give the created <xref href=\"System.Data.DataTable\"></xref>."},{"pos":[11374,11435],"content":"The newly created <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The newly created <xref href=\"System.Data.DataTable\"></xref>."},{"pos":[11613,11697],"content":"A table in the collection has the same name. (The comparison is not case sensitive.)","needQuote":true,"needEscape":true,"nodes":[{"content":"A table in the collection has the same name. (The comparison is not case sensitive.)","pos":[0,84],"nodes":[{"content":"A table in the collection has the same name.","pos":[0,44]},{"content":"(The comparison is not case sensitive.)","pos":[45,84]}]}]},{"pos":[12131,12246],"content":"Copies the elements of the specified <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> array to the end of the collection.","needQuote":true,"needEscape":true,"source":"Copies the elements of the specified <xref href=\"System.Data.DataTable\"></xref> array to the end of the collection."},{"pos":[12873,12962],"content":"The array of <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects to add to the collection.","needQuote":true,"needEscape":true,"source":"The array of <xref href=\"System.Data.DataTable\"></xref> objects to add to the collection."},{"pos":[13462,13578],"content":"Verifies whether the specified <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object can be removed from the collection.","needQuote":true,"needEscape":true,"source":"Verifies whether the specified <xref href=\"System.Data.DataTable\"></xref> object can be removed from the collection."},{"pos":[14254,14376],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DataTable\" name=\"DataTable\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in the collection to perform the check against.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_DataTable\" name=\"DataTable\" href=\"\"></xref> in the collection to perform the check against."},{"pos":[14435,14598],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the table can be removed; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the table can be removed; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[15006,15086],"content":"Clears the collection of all <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"Clears the collection of all <xref href=\"System.Data.DataTable\"></xref> objects."},{"pos":[15098,15218],"content":"To remove a particular <ph id=\"ph1\">`DataTable`</ph> from the collection, use the &lt;xref:System.Data.DataTableCollection.Remove%2A&gt; method.","needQuote":true,"needEscape":true,"extradata":"MT","source":"To remove a particular `DataTable` from the collection, use the <xref:System.Data.DataTableCollection.Remove%2A> method."},{"pos":[16166,16332],"content":"Occurs after the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is changed because of <bpt id=\"p2\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects being added or removed.","needQuote":true,"needEscape":true,"source":"Occurs after the <xref href=\"System.Data.DataTableCollection\"></xref> is changed because of <xref href=\"System.Data.DataTable\"></xref> objects being added or removed."},{"pos":[16345,16487],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","needQuote":false,"needEscape":true,"extradata":"MT","source":"For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."},{"pos":[17064,17076],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17487,17654],"content":"Occurs while the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is changing because of <bpt id=\"p2\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects being added or removed.","needQuote":true,"needEscape":true,"source":"Occurs while the <xref href=\"System.Data.DataTableCollection\"></xref> is changing because of <xref href=\"System.Data.DataTable\"></xref> objects being added or removed."},{"pos":[17667,17809],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","needQuote":false,"needEscape":true,"extradata":"MT","source":"For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."},{"pos":[18390,18402],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18818,18955],"content":"Gets a value that indicates whether a <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object with the specified name exists in the collection.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether a <xref href=\"System.Data.DataTable\"></xref> object with the specified name exists in the collection."},{"pos":[18968,19694],"content":"You specify the name of the <xref:System.Data.DataTable> object by using the <xref:System.Data.DataTable.TableName%2A> property. If you add a <xref:System.Data.DataTable> to the collection with the <xref:System.Data.DataTableCollection.Add%2A> method, passing no arguments, the table is given a default name, based on the order in which the table was added (\"Table1\", \"Table2\", and so on).       To get the index of a <xref:System.Data.DataTable>, use the <xref:System.Data.DataTableCollection.IndexOf%2A> method.      > [!NOTE] >  Returns `false` when two or more tables have the same name but different namespaces. The call does not succeed if there is any ambiguity when matching a table name to exactly one table.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You specify the name of the &lt;xref:System.Data.DataTable&gt; object by using the &lt;xref:System.Data.DataTable.TableName%2A&gt; property.","pos":[0,128],"source":"You specify the name of the <xref:System.Data.DataTable> object by using the <xref:System.Data.DataTable.TableName%2A> property."},{"content":"If you add a &lt;xref:System.Data.DataTable&gt; to the collection with the &lt;xref:System.Data.DataTableCollection.Add%2A&gt; method, passing no arguments, the table is given a default name, based on the order in which the table was added (\"Table1\", \"Table2\", and so on).","pos":[129,389],"source":" If you add a <xref:System.Data.DataTable> to the collection with the <xref:System.Data.DataTableCollection.Add%2A> method, passing no arguments, the table is given a default name, based on the order in which the table was added (\"Table1\", \"Table2\", and so on)."},{"content":"To get the index of a &lt;xref:System.Data.DataTable&gt;, use the &lt;xref:System.Data.DataTableCollection.IndexOf%2A&gt; method.","pos":[396,513],"source":"       To get the index of a <xref:System.Data.DataTable>, use the <xref:System.Data.DataTableCollection.IndexOf%2A> method."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Returns <ph id=\"ph2\">`false`</ph> when two or more tables have the same name but different namespaces.","pos":[519,616],"source":"      > [!NOTE] >  Returns `false` when two or more tables have the same name but different namespaces."},{"content":"The call does not succeed if there is any ambiguity when matching a table name to exactly one table.","pos":[617,717]}]},{"pos":[20241,20308],"content":"The name of the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to find.","needQuote":true,"needEscape":true,"source":"The name of the <xref href=\"System.Data.DataTable\"></xref> to find."},{"pos":[20367,20532],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified table exists; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified table exists; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[21051,21208],"content":"Gets a value that indicates whether a <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object with the specified name and table namespace exists in the collection.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether a <xref href=\"System.Data.DataTable\"></xref> object with the specified name and table namespace exists in the collection."},{"pos":[21221,21947],"content":"You specify the name of the <xref:System.Data.DataTable> object by using the <xref:System.Data.DataTable.TableName%2A> property. If you add a <xref:System.Data.DataTable> to the collection with the <xref:System.Data.DataTableCollection.Add%2A> method, passing no arguments, the table is given a default name, based on the order in which the table was added (\"Table1\", \"Table2\", and so on).      > [!NOTE] >  Returns `false` when two or more tables have the same name but different namespaces. The call does not succeed if there is any ambiguity when matching a table name to exactly one table.       To get the index of a <xref:System.Data.DataTable>, use the <xref:System.Data.DataTableCollection.IndexOf%2A> method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You specify the name of the &lt;xref:System.Data.DataTable&gt; object by using the &lt;xref:System.Data.DataTable.TableName%2A&gt; property.","pos":[0,128],"source":"You specify the name of the <xref:System.Data.DataTable> object by using the <xref:System.Data.DataTable.TableName%2A> property."},{"content":"If you add a &lt;xref:System.Data.DataTable&gt; to the collection with the &lt;xref:System.Data.DataTableCollection.Add%2A&gt; method, passing no arguments, the table is given a default name, based on the order in which the table was added (\"Table1\", \"Table2\", and so on).","pos":[129,389],"source":" If you add a <xref:System.Data.DataTable> to the collection with the <xref:System.Data.DataTableCollection.Add%2A> method, passing no arguments, the table is given a default name, based on the order in which the table was added (\"Table1\", \"Table2\", and so on)."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Returns <ph id=\"ph2\">`false`</ph> when two or more tables have the same name but different namespaces.","pos":[395,492],"source":"      > [!NOTE] >  Returns `false` when two or more tables have the same name but different namespaces."},{"content":"The call does not succeed if there is any ambiguity when matching a table name to exactly one table.","pos":[493,593]},{"content":"To get the index of a &lt;xref:System.Data.DataTable&gt;, use the &lt;xref:System.Data.DataTableCollection.IndexOf%2A&gt; method.","pos":[600,717],"source":"       To get the index of a <xref:System.Data.DataTable>, use the <xref:System.Data.DataTableCollection.IndexOf%2A> method."}]},{"pos":[22515,22582],"content":"The name of the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to find.","needQuote":true,"needEscape":true,"source":"The name of the <xref href=\"System.Data.DataTable\"></xref> to find."},{"pos":[22653,22733],"content":"The name of the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> namespace to look in.","needQuote":true,"needEscape":true,"source":"The name of the <xref href=\"System.Data.DataTable\"></xref> namespace to look in."},{"pos":[22792,22957],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified table exists; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified table exists; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[23496,23680],"content":"Copies all the elements of the current <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to a one-dimensional &lt;xref:System.Array&gt;, starting at the specified destination array index.","needQuote":true,"needEscape":true,"source":"Copies all the elements of the current <xref href=\"System.Data.DataTableCollection\"></xref> to a one-dimensional <xref:System.Array>, starting at the specified destination array index."},{"pos":[23692,23741],"content":"This method can be overridden by a derived class.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method can be overridden by a derived class.","pos":[0,49]}]},{"pos":[23915,24051],"content":"The one-dimensional &lt;xref:System.Array&gt; to copy the current <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object's elements into.","needQuote":true,"needEscape":true,"source":"The one-dimensional <xref:System.Array> to copy the current <xref href=\"System.Data.DataTableCollection\"></xref> object's elements into."},{"pos":[24112,24176],"content":"The destination <xref:System.Array> index to start copying into.","needQuote":true,"needEscape":true,"nodes":[{"content":"The destination &lt;xref:System.Array&gt; index to start copying into.","pos":[0,64],"source":"The destination <xref:System.Array> index to start copying into."}]},{"pos":[24664,24746],"content":"Gets the index of the specified <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets the index of the specified <xref href=\"System.Data.DataTable\"></xref> object."},{"pos":[24759,25010],"content":"Use the IndexOf method to determine the exact index of a given table.       Before calling IndexOf, you can test for the existence of a table (specified by either index or name) by using the <xref:System.Data.DataTableCollection.Contains%2A> method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the IndexOf method to determine the exact index of a given table.       Before calling IndexOf, you can test for the existence of a table (specified by either index or name) by using the <xref:System.Data.DataTableCollection.Contains%2A> method.","pos":[0,249],"nodes":[{"content":"Use the IndexOf method to determine the exact index of a given table.","pos":[0,69]},{"content":"Before calling IndexOf, you can test for the existence of a table (specified by either index or name) by using the &lt;xref:System.Data.DataTableCollection.Contains%2A&gt; method.","pos":[76,249],"source":"       Before calling IndexOf, you can test for the existence of a table (specified by either index or name) by using the <xref:System.Data.DataTableCollection.Contains%2A> method."}]}]},{"pos":[25551,25640],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DataTable\" name=\"DataTable\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to search for.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_DataTable\" name=\"DataTable\" href=\"\"></xref> to search for."},{"pos":[25697,25782],"content":"The zero-based index of the table, or -1 if the table is not found in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the table, or -1 if the table is not found in the collection.","pos":[0,85]}]},{"pos":[26246,26360],"content":"Gets the index in the collection of the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object with the specified name.","needQuote":true,"needEscape":true,"source":"Gets the index in the collection of the <xref href=\"System.Data.DataTable\"></xref> object with the specified name."},{"pos":[26372,26483],"content":"You specify the name of the <ph id=\"ph1\">`DataTable`</ph> object by using the &lt;xref:System.Data.DataTable.TableName%2A&gt; property.","needQuote":true,"needEscape":true,"extradata":"MT","source":"You specify the name of the `DataTable` object by using the <xref:System.Data.DataTable.TableName%2A> property."},{"pos":[27015,27121],"content":"The name of the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DataTable\" name=\"DataTable\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to look for.","needQuote":true,"needEscape":true,"source":"The name of the <xref uid=\"langword_csharp_DataTable\" name=\"DataTable\" href=\"\"></xref> object to look for."},{"pos":[27179,27595],"content":"The zero-based index of the <xref uid=\"langword_csharp_DataTable\" name=\"DataTable\" href=\"\"></xref> with the specified name, or -1 if the table does not exist in the collection.       <div class=\"alert NOTE\">    Returns -1 when two or more tables have the same name but different namespaces. The call does not succeed if there is any ambiguity when matching a table name to exactly one table.      </div>","needQuote":false,"needEscape":true,"nodes":[{"content":"The zero-based index of the <xref uid=\"langword_csharp_DataTable\" name=\"DataTable\" href=\"\"></xref> with the specified name, or -1 if the table does not exist in the collection.       ","pos":[0,183],"nodes":[{"content":"The zero-based index of the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DataTable\" name=\"DataTable\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the specified name, or -1 if the table does not exist in the collection.","pos":[0,176],"source":"The zero-based index of the <xref uid=\"langword_csharp_DataTable\" name=\"DataTable\" href=\"\"></xref> with the specified name, or -1 if the table does not exist in the collection."}]},{"content":"    Returns -1 when two or more tables have the same name but different namespaces. The call does not succeed if there is any ambiguity when matching a table name to exactly one table.      ","pos":[207,397],"nodes":[{"content":"Returns -1 when two or more tables have the same name but different namespaces.","pos":[4,83]},{"content":"The call does not succeed if there is any ambiguity when matching a table name to exactly one table.","pos":[84,184]}]}]},{"pos":[28109,28209],"content":"Gets the index in the collection of the specified <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets the index in the collection of the specified <xref href=\"System.Data.DataTable\"></xref> object."},{"pos":[28221,28349],"content":"You specify the name of the <xref:System.Data.DataTable> object by using the <xref:System.Data.DataTable.TableName%2A> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"You specify the name of the &lt;xref:System.Data.DataTable&gt; object by using the &lt;xref:System.Data.DataTable.TableName%2A&gt; property.","pos":[0,128],"source":"You specify the name of the <xref:System.Data.DataTable> object by using the <xref:System.Data.DataTable.TableName%2A> property."}]},{"pos":[28904,28982],"content":"The name of the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to look for.","needQuote":true,"needEscape":true,"source":"The name of the <xref href=\"System.Data.DataTable\"></xref> object to look for."},{"pos":[29053,29133],"content":"The name of the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> namespace to look in.","needQuote":true,"needEscape":true,"source":"The name of the <xref href=\"System.Data.DataTable\"></xref> namespace to look in."},{"pos":[29190,29338],"content":"The zero-based index of the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the specified name, or -1 if the table does not exist in the collection.","needQuote":true,"needEscape":true,"source":"The zero-based index of the <xref href=\"System.Data.DataTable\"></xref> with the specified name, or -1 if the table does not exist in the collection."},{"pos":[29784,29866],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object at the specified index.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Data.DataTable\"></xref> object at the specified index."},{"pos":[29879,30149],"content":"Use the <xref:System.Data.DataTableCollection.Contains%2A> method to determine whether a table with a specific index exists.       If you have the name of a table, but not its index, use the <xref:System.Data.DataTableCollection.IndexOf%2A> method to return the index.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the <xref:System.Data.DataTableCollection.Contains%2A> method to determine whether a table with a specific index exists.       If you have the name of a table, but not its index, use the <xref:System.Data.DataTableCollection.IndexOf%2A> method to return the index.","pos":[0,268],"nodes":[{"content":"Use the &lt;xref:System.Data.DataTableCollection.Contains%2A&gt; method to determine whether a table with a specific index exists.","pos":[0,124],"source":"Use the <xref:System.Data.DataTableCollection.Contains%2A> method to determine whether a table with a specific index exists."},{"content":"If you have the name of a table, but not its index, use the &lt;xref:System.Data.DataTableCollection.IndexOf%2A&gt; method to return the index.","pos":[131,268],"source":"       If you have the name of a table, but not its index, use the <xref:System.Data.DataTableCollection.IndexOf%2A> method to return the index."}]}]},{"pos":[30655,30734],"content":"The zero-based index of the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to find.","needQuote":true,"needEscape":true,"source":"The zero-based index of the <xref href=\"System.Data.DataTable\"></xref> to find."},{"pos":[30800,31006],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>with the specified index; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the <bpt id=\"p3\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> does not exist.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.DataTable\"></xref>with the specified index; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the <xref href=\"System.Data.DataTable\"></xref> does not exist."},{"pos":[31179,31249],"content":"The index value is greater than the number of items in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index value is greater than the number of items in the collection.","pos":[0,70]}]},{"pos":[31630,31713],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object with the specified name.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Data.DataTable\"></xref> object with the specified name."},{"pos":[31726,32116],"content":"If a <xref:System.Data.DataTable> name exists that matches the case of the search string, it is returned. Otherwise a case-insensitive search is performed, and if a <xref:System.Data.DataTable> name is found that matches this search, it is returned.       Use the <xref:System.Data.DataTableCollection.Contains%2A> method to determine whether a table with a specific name or index exists.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If a <xref:System.Data.DataTable> name exists that matches the case of the search string, it is returned. Otherwise a case-insensitive search is performed, and if a <xref:System.Data.DataTable> name is found that matches this search, it is returned.       Use the <xref:System.Data.DataTableCollection.Contains%2A> method to determine whether a table with a specific name or index exists.","pos":[0,388],"nodes":[{"content":"If a &lt;xref:System.Data.DataTable&gt; name exists that matches the case of the search string, it is returned.","pos":[0,105],"source":"If a <xref:System.Data.DataTable> name exists that matches the case of the search string, it is returned."},{"content":"Otherwise a case-insensitive search is performed, and if a &lt;xref:System.Data.DataTable&gt; name is found that matches this search, it is returned.","pos":[106,249],"source":" Otherwise a case-insensitive search is performed, and if a <xref:System.Data.DataTable> name is found that matches this search, it is returned."},{"content":"Use the &lt;xref:System.Data.DataTableCollection.Contains%2A&gt; method to determine whether a table with a specific name or index exists.","pos":[256,388],"source":"       Use the <xref:System.Data.DataTableCollection.Contains%2A> method to determine whether a table with a specific name or index exists."}]}]},{"pos":[32653,32748],"content":"The name of the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DataTable\" name=\"DataTable\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to find.","needQuote":true,"needEscape":true,"source":"The name of the <xref uid=\"langword_csharp_DataTable\" name=\"DataTable\" href=\"\"></xref> to find."},{"pos":[32814,33020],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the specified name; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the <bpt id=\"p3\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> does not exist.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.DataTable\"></xref> with the specified name; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the <xref href=\"System.Data.DataTable\"></xref> does not exist."},{"pos":[33517,33627],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object with the specified name in the specified namespace.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Data.DataTable\"></xref> object with the specified name in the specified namespace."},{"pos":[33806,33901],"content":"The name of the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DataTable\" name=\"DataTable\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to find.","needQuote":true,"needEscape":true,"source":"The name of the <xref uid=\"langword_csharp_DataTable\" name=\"DataTable\" href=\"\"></xref> to find."},{"pos":[33972,34052],"content":"The name of the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> namespace to look in.","needQuote":true,"needEscape":true,"source":"The name of the <xref href=\"System.Data.DataTable\"></xref> namespace to look in."},{"pos":[34118,34324],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the specified name; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the <bpt id=\"p3\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> does not exist.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.DataTable\"></xref> with the specified name; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the <xref href=\"System.Data.DataTable\"></xref> does not exist."},{"pos":[34864,34876],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[35357,35449],"content":"Removes the specified <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object from the collection.","needQuote":true,"needEscape":true,"source":"Removes the specified <xref href=\"System.Data.DataTable\"></xref> object from the collection."},{"pos":[35462,35794],"content":"The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs when a table is successfully removed.       To determine whether a given table exists and can be removed before invoking Remove, use the <xref:System.Data.DataTableCollection.Contains%2A> and the <xref:System.Data.DataTableCollection.CanRemove%2A> methods.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs when a table is successfully removed.       To determine whether a given table exists and can be removed before invoking Remove, use the <xref:System.Data.DataTableCollection.Contains%2A> and the <xref:System.Data.DataTableCollection.CanRemove%2A> methods.","pos":[0,330],"nodes":[{"content":"The &lt;xref:System.Data.DataTableCollection.CollectionChanged&gt; event occurs when a table is successfully removed.","pos":[0,111],"source":"The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs when a table is successfully removed."},{"content":"To determine whether a given table exists and can be removed before invoking Remove, use the &lt;xref:System.Data.DataTableCollection.Contains%2A&gt; and the &lt;xref:System.Data.DataTableCollection.CanRemove%2A&gt; methods.","pos":[118,330],"source":"       To determine whether a given table exists and can be removed before invoking Remove, use the <xref:System.Data.DataTableCollection.Contains%2A> and the <xref:System.Data.DataTableCollection.CanRemove%2A> methods."}]}]},{"pos":[36455,36540],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DataTable\" name=\"DataTable\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to remove.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_DataTable\" name=\"DataTable\" href=\"\"></xref> to remove."},{"pos":[36709,36807],"content":"The value specified for the table is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The value specified for the table is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[36903,37006],"content":"The table does not belong to this collection.       -or-       The table is part of a relationship.","needQuote":false,"needEscape":true,"nodes":[{"content":"The table does not belong to this collection.       -or-       The table is part of a relationship.","pos":[0,99],"nodes":[{"content":"The table does not belong to this collection.","pos":[0,45]},{"content":"-or-       The table is part of a relationship.","pos":[52,99]}]}]},{"pos":[37396,37502],"content":"Removes the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object with the specified name from the collection.","needQuote":true,"needEscape":true,"source":"Removes the <xref href=\"System.Data.DataTable\"></xref> object with the specified name from the collection."},{"pos":[37515,37889],"content":"The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs when a table is successfully removed.       To determine whether a given table exists and can be removed before invoking <xref:System.Data.DataTableCollection.Remove%2A>, use the <xref:System.Data.DataTableCollection.Contains%2A> and the <xref:System.Data.DataTableCollection.CanRemove%2A> methods.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs when a table is successfully removed.       To determine whether a given table exists and can be removed before invoking <xref:System.Data.DataTableCollection.Remove%2A>, use the <xref:System.Data.DataTableCollection.Contains%2A> and the <xref:System.Data.DataTableCollection.CanRemove%2A> methods.","pos":[0,372],"nodes":[{"content":"The &lt;xref:System.Data.DataTableCollection.CollectionChanged&gt; event occurs when a table is successfully removed.","pos":[0,111],"source":"The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs when a table is successfully removed."},{"content":"To determine whether a given table exists and can be removed before invoking &lt;xref:System.Data.DataTableCollection.Remove%2A&gt;, use the &lt;xref:System.Data.DataTableCollection.Contains%2A&gt; and the &lt;xref:System.Data.DataTableCollection.CanRemove%2A&gt; methods.","pos":[118,372],"source":"       To determine whether a given table exists and can be removed before invoking <xref:System.Data.DataTableCollection.Remove%2A>, use the <xref:System.Data.DataTableCollection.Contains%2A> and the <xref:System.Data.DataTableCollection.CanRemove%2A> methods."}]}]},{"pos":[38605,38681],"content":"The name of the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to remove.","needQuote":true,"needEscape":true,"source":"The name of the <xref href=\"System.Data.DataTable\"></xref> object to remove."},{"pos":[38842,38903],"content":"The collection does not have a table with the specified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection does not have a table with the specified name.","pos":[0,61]}]},{"pos":[39341,39447],"content":"Removes the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object with the specified name from the collection.","needQuote":true,"needEscape":true,"source":"Removes the <xref href=\"System.Data.DataTable\"></xref> object with the specified name from the collection."},{"pos":[39460,39834],"content":"The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs when a table is successfully removed.       To determine whether a given table exists and can be removed before invoking <xref:System.Data.DataTableCollection.Remove%2A>, use the <xref:System.Data.DataTableCollection.Contains%2A> and the <xref:System.Data.DataTableCollection.CanRemove%2A> methods.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs when a table is successfully removed.       To determine whether a given table exists and can be removed before invoking <xref:System.Data.DataTableCollection.Remove%2A>, use the <xref:System.Data.DataTableCollection.Contains%2A> and the <xref:System.Data.DataTableCollection.CanRemove%2A> methods.","pos":[0,372],"nodes":[{"content":"The &lt;xref:System.Data.DataTableCollection.CollectionChanged&gt; event occurs when a table is successfully removed.","pos":[0,111],"source":"The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs when a table is successfully removed."},{"content":"To determine whether a given table exists and can be removed before invoking &lt;xref:System.Data.DataTableCollection.Remove%2A&gt;, use the &lt;xref:System.Data.DataTableCollection.Contains%2A&gt; and the &lt;xref:System.Data.DataTableCollection.CanRemove%2A&gt; methods.","pos":[118,372],"source":"       To determine whether a given table exists and can be removed before invoking <xref:System.Data.DataTableCollection.Remove%2A>, use the <xref:System.Data.DataTableCollection.Contains%2A> and the <xref:System.Data.DataTableCollection.CanRemove%2A> methods."}]}]},{"pos":[40575,40651],"content":"The name of the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to remove.","needQuote":true,"needEscape":true,"source":"The name of the <xref href=\"System.Data.DataTable\"></xref> object to remove."},{"pos":[40722,40802],"content":"The name of the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> namespace to look in.","needQuote":true,"needEscape":true,"source":"The name of the <xref href=\"System.Data.DataTable\"></xref> namespace to look in."},{"pos":[40963,41024],"content":"The collection does not have a table with the specified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection does not have a table with the specified name.","pos":[0,61]}]},{"pos":[41418,41523],"content":"Removes the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object at the specified index from the collection.","needQuote":true,"needEscape":true,"source":"Removes the <xref href=\"System.Data.DataTable\"></xref> object at the specified index from the collection."},{"pos":[41535,41646],"content":"The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs when a table is successfully removed.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Data.DataTableCollection.CollectionChanged&gt; event occurs when a table is successfully removed.","pos":[0,111],"source":"The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs when a table is successfully removed."}]},{"pos":[42302,42400],"content":"The index of the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DataTable\" name=\"DataTable\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to remove.","needQuote":true,"needEscape":true,"source":"The index of the <xref uid=\"langword_csharp_DataTable\" name=\"DataTable\" href=\"\"></xref> to remove."},{"pos":[42563,42623],"content":"The collection does not have a table at the specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection does not have a table at the specified index.","pos":[0,60]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.DataTableCollection\n  id: DataTableCollection\n  children:\n  - System.Data.DataTableCollection.Add\n  - System.Data.DataTableCollection.Add(System.Data.DataTable)\n  - System.Data.DataTableCollection.Add(System.String)\n  - System.Data.DataTableCollection.Add(System.String,System.String)\n  - System.Data.DataTableCollection.AddRange(System.Data.DataTable[])\n  - System.Data.DataTableCollection.CanRemove(System.Data.DataTable)\n  - System.Data.DataTableCollection.Clear\n  - System.Data.DataTableCollection.CollectionChanged\n  - System.Data.DataTableCollection.CollectionChanging\n  - System.Data.DataTableCollection.Contains(System.String)\n  - System.Data.DataTableCollection.Contains(System.String,System.String)\n  - System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)\n  - System.Data.DataTableCollection.IndexOf(System.Data.DataTable)\n  - System.Data.DataTableCollection.IndexOf(System.String)\n  - System.Data.DataTableCollection.IndexOf(System.String,System.String)\n  - System.Data.DataTableCollection.Item(System.Int32)\n  - System.Data.DataTableCollection.Item(System.String)\n  - System.Data.DataTableCollection.Item(System.String,System.String)\n  - System.Data.DataTableCollection.List\n  - System.Data.DataTableCollection.Remove(System.Data.DataTable)\n  - System.Data.DataTableCollection.Remove(System.String)\n  - System.Data.DataTableCollection.Remove(System.String,System.String)\n  - System.Data.DataTableCollection.RemoveAt(System.Int32)\n  langs:\n  - csharp\n  name: DataTableCollection\n  nameWithType: DataTableCollection\n  fullName: System.Data.DataTableCollection\n  type: Class\n  summary: Represents the collection of tables for the <xref href=\"System.Data.DataSet\"></xref>.\n  remarks: \"The DataTableCollection contains all the <xref:System.Data.DataTable> objects for a particular <xref:System.Data.DataSet>. To access the DataTableCollection of a <xref:System.Data.DataSet>, use the <xref:System.Data.DataSet.Tables%2A> property.  \\n  \\n The DataTableCollection uses methods such as <xref:System.Data.DataTableCollection.Add%2A>, <xref:System.Data.DataTableCollection.Clear%2A>, and <xref:System.Data.DataTableCollection.Remove%2A> to manage the items in the collection.  \\n  \\n Use the <xref:System.Data.DataTableCollection.Contains%2A> method to determine whether a particular table (specified by either index or name) is in the collection.  \\n  \\n To navigate from one table to another, use the <xref:System.Data.DataTable.ChildRelations%2A> or <xref:System.Data.DataTable.ParentRelations%2A> property of the <xref:System.Data.DataTable> to access its collection of <xref:System.Data.DataRelation> objects. You can also use the <xref:System.Data.DataSet.Relations%2A> property to navigate through the parent/child relationships of the `DataTables` in a particular <xref:System.Data.DataSet> collection.\"\n  example:\n  - \"The first procedure in this example retrieves the DataTableCollection of a <xref:System.Data.DataSet> and prints the value of each column, in each row, of each table. The second procedure creates a new <xref:System.Data.DataTable> with two columns, and adds it to the DataTableCollection.  \\n  \\n [!code-cs[Classic WebData DataTableCollection Example#1](~/add/codesnippet/csharp/t-system.data.datatablec_1.cs)]\\n [!code-vb[Classic WebData DataTableCollection Example#1](~/add/codesnippet/visualbasic/t-system.data.datatablec_1.vb)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.DefaultEvent(\"CollectionChanged\")]\n\n      [System.ComponentModel.Editor(\"Microsoft.VSDesigner.Data.Design.TablesCollectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\", \"System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\")]\n\n      [System.ComponentModel.ListBindable(false)]\n\n      public sealed class DataTableCollection : System.Data.InternalDataCollectionBase\n  inheritance:\n  - System.Object\n  - System.Data.InternalDataCollectionBase\n  implements: []\n  inheritedMembers:\n  - System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)\n  - System.Data.InternalDataCollectionBase.Count\n  - System.Data.InternalDataCollectionBase.GetEnumerator\n  - System.Data.InternalDataCollectionBase.IsReadOnly\n  - System.Data.InternalDataCollectionBase.IsSynchronized\n  - System.Data.InternalDataCollectionBase.SyncRoot\n  platform:\n  - net462\n- uid: System.Data.DataTableCollection.Add\n  id: Add\n  parent: System.Data.DataTableCollection\n  langs:\n  - csharp\n  name: Add()\n  nameWithType: DataTableCollection.Add()\n  fullName: System.Data.DataTableCollection.Add()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Creates a new <xref href=\"System.Data.DataTable\"></xref> object by using a default name and adds it to the collection.\n  remarks: \"Because no name is specified, the `DataTable` is created by using a default name, relative to its order of addition. The default name is \\\"Table1.\\\"  \\n  \\n The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs when a table is successfully added to the collection.\"\n  example:\n  - \"The following example adds three new <xref:System.Data.DataTable> objects to the <xref:System.Data.DataTableCollection> using the <xref:System.Data.DataTableCollection.Add%2A> method without arguments.  \\n  \\n [!code-cs[Classic WebData DataTableCollection.Add2 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_8_1.cs)]\\n [!code-vb[Classic WebData DataTableCollection.Add2 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_8_1.vb)]\"\n  syntax:\n    content: public System.Data.DataTable Add ();\n    parameters: []\n    return:\n      type: System.Data.DataTable\n      description: The newly created <xref href=\"System.Data.DataTable\"></xref>.\n  overload: System.Data.DataTableCollection.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataTableCollection.Add(System.Data.DataTable)\n  id: Add(System.Data.DataTable)\n  parent: System.Data.DataTableCollection\n  langs:\n  - csharp\n  name: Add(DataTable)\n  nameWithType: DataTableCollection.Add(DataTable)\n  fullName: System.Data.DataTableCollection.Add(DataTable)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Adds the specified <xref uid=\"langword_csharp_DataTable\" name=\"DataTable\" href=\"\"></xref> to the collection.\n  remarks: The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs when a table is successfully added to the collection.\n  example:\n  - \"The following example creates a <xref:System.Data.DataTable> and adds it to the <xref:System.Data.DataTableCollection> of a <xref:System.Data.DataSet>.  \\n  \\n [!code-cs[Classic WebData DataTableCollection.Add Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_4_1.cs)]\"\n  syntax:\n    content: public void Add (System.Data.DataTable table);\n    parameters:\n    - id: table\n      type: System.Data.DataTable\n      description: The <xref uid=\"langword_csharp_DataTable\" name=\"DataTable\" href=\"\"></xref> object to add.\n  overload: System.Data.DataTableCollection.Add*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The value specified for the table is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The table already belongs to this collection, or belongs to another collection.\n  - type: System.Data.DuplicateNameException\n    commentId: T:System.Data.DuplicateNameException\n    description: A table in the collection has the same name. The comparison is not case sensitive.\n  platform:\n  - net462\n- uid: System.Data.DataTableCollection.Add(System.String)\n  id: Add(System.String)\n  parent: System.Data.DataTableCollection\n  langs:\n  - csharp\n  name: Add(String)\n  nameWithType: DataTableCollection.Add(String)\n  fullName: System.Data.DataTableCollection.Add(String)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Creates a <xref href=\"System.Data.DataTable\"></xref> object by using the specified name and adds it to the collection.\n  remarks: \"If either `null` or an empty string (\\\"\\\") is passed in, a default name is given to the newly created `DataTable`. This name is based on the order in which the table was added (\\\"Table1\\\", \\\"Table2\\\", and so on).  \\n  \\n The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs if the table is successfully added to the collection.\"\n  example:\n  - \"The following example adds a <xref:System.Data.DataTable> with the given name to the <xref:System.Data.DataTableCollection>.  \\n  \\n [!code-cs[Classic WebData DataTableCollection.Add1 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_9_1.cs)]\\n [!code-vb[Classic WebData DataTableCollection.Add1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_9_1.vb)]\"\n  syntax:\n    content: public System.Data.DataTable Add (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name to give the created <xref href=\"System.Data.DataTable\"></xref>.\n    return:\n      type: System.Data.DataTable\n      description: The newly created <xref href=\"System.Data.DataTable\"></xref>.\n  overload: System.Data.DataTableCollection.Add*\n  exceptions:\n  - type: System.Data.DuplicateNameException\n    commentId: T:System.Data.DuplicateNameException\n    description: A table in the collection has the same name. (The comparison is not case sensitive.)\n  platform:\n  - net462\n- uid: System.Data.DataTableCollection.Add(System.String,System.String)\n  id: Add(System.String,System.String)\n  parent: System.Data.DataTableCollection\n  langs:\n  - csharp\n  name: Add(String,String)\n  nameWithType: DataTableCollection.Add(String,String)\n  fullName: System.Data.DataTableCollection.Add(String,String)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Creates a <xref href=\"System.Data.DataTable\"></xref> object by using the specified name and adds it to the collection.\n  remarks: \"If either `null` or an empty string (\\\"\\\") is passed in, a default name is given to the newly created `DataTable`. This name is based on the order in which the table was added (\\\"Table1\\\", \\\"Table2\\\", and so on).  \\n  \\n The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs if the table is successfully added to the collection.\"\n  example:\n  - \"The following example adds a <xref:System.Data.DataTable> with the given name to the <xref:System.Data.DataTableCollection>.  \\n  \\n [!code-cs[Classic WebData DataTableCollection.Add1 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_1_1.cs)]\\n [!code-vb[Classic WebData DataTableCollection.Add1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_1_1.vb)]\"\n  syntax:\n    content: public System.Data.DataTable Add (string name, string tableNamespace);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name to give the created <xref href=\"System.Data.DataTable\"></xref>.\n    - id: tableNamespace\n      type: System.String\n      description: The namespace to give the created <xref href=\"System.Data.DataTable\"></xref>.\n    return:\n      type: System.Data.DataTable\n      description: The newly created <xref href=\"System.Data.DataTable\"></xref>.\n  overload: System.Data.DataTableCollection.Add*\n  exceptions:\n  - type: System.Data.DuplicateNameException\n    commentId: T:System.Data.DuplicateNameException\n    description: A table in the collection has the same name. (The comparison is not case sensitive.)\n  platform:\n  - net462\n- uid: System.Data.DataTableCollection.AddRange(System.Data.DataTable[])\n  id: AddRange(System.Data.DataTable[])\n  parent: System.Data.DataTableCollection\n  langs:\n  - csharp\n  name: AddRange(DataTable[])\n  nameWithType: DataTableCollection.AddRange(DataTable[])\n  fullName: System.Data.DataTableCollection.AddRange(DataTable[])\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Copies the elements of the specified <xref href=\"System.Data.DataTable\"></xref> array to the end of the collection.\n  remarks: ''\n  example:\n  - \"The following example creates two <xref:System.Data.DataTable> objects and adds them to the <xref:System.Data.DataTableCollection> of a <xref:System.Data.DataSet>.  \\n  \\n [!code-vb[Classic WebData DataTableCollection.AddRange Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_2_1.vb)]\\n [!code-cs[Classic WebData DataTableCollection.AddRange Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_2_1.cs)]\"\n  syntax:\n    content: public void AddRange (System.Data.DataTable[] tables);\n    parameters:\n    - id: tables\n      type: System.Data.DataTable[]\n      description: The array of <xref href=\"System.Data.DataTable\"></xref> objects to add to the collection.\n  overload: System.Data.DataTableCollection.AddRange*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataTableCollection.CanRemove(System.Data.DataTable)\n  id: CanRemove(System.Data.DataTable)\n  parent: System.Data.DataTableCollection\n  langs:\n  - csharp\n  name: CanRemove(DataTable)\n  nameWithType: DataTableCollection.CanRemove(DataTable)\n  fullName: System.Data.DataTableCollection.CanRemove(DataTable)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Verifies whether the specified <xref href=\"System.Data.DataTable\"></xref> object can be removed from the collection.\n  remarks: ''\n  example:\n  - \"The following example uses the CanRemove to test whether each table can be removed from a <xref:System.Data.DataSet>. If so, the <xref:System.Data.DataTableCollection.Remove%2A> method is called to remove the table.  \\n  \\n [!code-vb[Classic WebData DataTableCollection.CanRemove Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_5_1.vb)]\\n [!code-cs[Classic WebData DataTableCollection.CanRemove Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_5_1.cs)]\"\n  syntax:\n    content: public bool CanRemove (System.Data.DataTable table);\n    parameters:\n    - id: table\n      type: System.Data.DataTable\n      description: The <xref uid=\"langword_csharp_DataTable\" name=\"DataTable\" href=\"\"></xref> in the collection to perform the check against.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the table can be removed; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.DataTableCollection.CanRemove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataTableCollection.Clear\n  id: Clear\n  parent: System.Data.DataTableCollection\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: DataTableCollection.Clear()\n  fullName: System.Data.DataTableCollection.Clear()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Clears the collection of all <xref href=\"System.Data.DataTable\"></xref> objects.\n  remarks: To remove a particular `DataTable` from the collection, use the <xref:System.Data.DataTableCollection.Remove%2A> method.\n  example:\n  - \"The following example gets the <xref:System.Data.DataTableCollection> of a <xref:System.Data.DataSet>, and then clears the collection of all tables.  \\n  \\n [!code-cs[Classic WebData DataTableCollection.Clear Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_10_1.cs)]\\n [!code-vb[Classic WebData DataTableCollection.Clear Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_10_1.vb)]\"\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Data.DataTableCollection.Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataTableCollection.CollectionChanged\n  id: CollectionChanged\n  parent: System.Data.DataTableCollection\n  langs:\n  - csharp\n  name: CollectionChanged\n  nameWithType: DataTableCollection.CollectionChanged\n  fullName: System.Data.DataTableCollection.CollectionChanged\n  type: Event\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Occurs after the <xref href=\"System.Data.DataTableCollection\"></xref> is changed because of <xref href=\"System.Data.DataTable\"></xref> objects being added or removed.\n  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'\n  example:\n  - \"The following example demonstrates how to use the CollectionChanged event.  \\n  \\n [!code-vb[Classic WebData DataTableCollection.CollectionChanged Example#1](~/add/codesnippet/visualbasic/e-system.data.datatablec_0_1.vb)]\\n [!code-cs[Classic WebData DataTableCollection.CollectionChanged Example#1](~/add/codesnippet/csharp/e-system.data.datatablec_0_1.cs)]\"\n  syntax:\n    content: public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;\n    return:\n      type: System.ComponentModel.CollectionChangeEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataTableCollection.CollectionChanging\n  id: CollectionChanging\n  parent: System.Data.DataTableCollection\n  langs:\n  - csharp\n  name: CollectionChanging\n  nameWithType: DataTableCollection.CollectionChanging\n  fullName: System.Data.DataTableCollection.CollectionChanging\n  type: Event\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Occurs while the <xref href=\"System.Data.DataTableCollection\"></xref> is changing because of <xref href=\"System.Data.DataTable\"></xref> objects being added or removed.\n  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'\n  example:\n  - \"The following example demonstrates how to use the CollectionChanging event.  \\n  \\n [!code-cs[Classic WebData DataTableCollection.CollectionChanging Example#1](~/add/codesnippet/csharp/e-system.data.datatablec_1_1.cs)]\\n [!code-vb[Classic WebData DataTableCollection.CollectionChanging Example#1](~/add/codesnippet/visualbasic/e-system.data.datatablec_1_1.vb)]\"\n  syntax:\n    content: public event System.ComponentModel.CollectionChangeEventHandler CollectionChanging;\n    return:\n      type: System.ComponentModel.CollectionChangeEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataTableCollection.Contains(System.String)\n  id: Contains(System.String)\n  parent: System.Data.DataTableCollection\n  langs:\n  - csharp\n  name: Contains(String)\n  nameWithType: DataTableCollection.Contains(String)\n  fullName: System.Data.DataTableCollection.Contains(String)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets a value that indicates whether a <xref href=\"System.Data.DataTable\"></xref> object with the specified name exists in the collection.\n  remarks: \"You specify the name of the <xref:System.Data.DataTable> object by using the <xref:System.Data.DataTable.TableName%2A> property. If you add a <xref:System.Data.DataTable> to the collection with the <xref:System.Data.DataTableCollection.Add%2A> method, passing no arguments, the table is given a default name, based on the order in which the table was added (\\\"Table1\\\", \\\"Table2\\\", and so on).  \\n  \\n To get the index of a <xref:System.Data.DataTable>, use the <xref:System.Data.DataTableCollection.IndexOf%2A> method.  \\n  \\n> [!NOTE]\\n>  Returns `false` when two or more tables have the same name but different namespaces. The call does not succeed if there is any ambiguity when matching a table name to exactly one table.\"\n  example:\n  - \"The following example tests whether a table with the name \\\"Suppliers\\\" exists in the <xref:System.Data.DataTableCollection>.  \\n  \\n [!code-cs[Classic WebData DataTableCollection.Contains Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_14_1.cs)]\\n [!code-vb[Classic WebData DataTableCollection.Contains Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_14_1.vb)]\"\n  syntax:\n    content: public bool Contains (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the <xref href=\"System.Data.DataTable\"></xref> to find.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified table exists; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.DataTableCollection.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataTableCollection.Contains(System.String,System.String)\n  id: Contains(System.String,System.String)\n  parent: System.Data.DataTableCollection\n  langs:\n  - csharp\n  name: Contains(String,String)\n  nameWithType: DataTableCollection.Contains(String,String)\n  fullName: System.Data.DataTableCollection.Contains(String,String)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets a value that indicates whether a <xref href=\"System.Data.DataTable\"></xref> object with the specified name and table namespace exists in the collection.\n  remarks: \"You specify the name of the <xref:System.Data.DataTable> object by using the <xref:System.Data.DataTable.TableName%2A> property. If you add a <xref:System.Data.DataTable> to the collection with the <xref:System.Data.DataTableCollection.Add%2A> method, passing no arguments, the table is given a default name, based on the order in which the table was added (\\\"Table1\\\", \\\"Table2\\\", and so on).  \\n  \\n> [!NOTE]\\n>  Returns `false` when two or more tables have the same name but different namespaces. The call does not succeed if there is any ambiguity when matching a table name to exactly one table.  \\n  \\n To get the index of a <xref:System.Data.DataTable>, use the <xref:System.Data.DataTableCollection.IndexOf%2A> method.\"\n  example:\n  - \"The following example tests whether a table with the name \\\"Suppliers\\\" exists in the <xref:System.Data.DataTableCollection>.  \\n  \\n [!code-cs[Classic WebData DataTableCollection.Contains Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_6_1.cs)]\\n [!code-vb[Classic WebData DataTableCollection.Contains Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_6_1.vb)]\"\n  syntax:\n    content: public bool Contains (string name, string tableNamespace);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the <xref href=\"System.Data.DataTable\"></xref> to find.\n    - id: tableNamespace\n      type: System.String\n      description: The name of the <xref href=\"System.Data.DataTable\"></xref> namespace to look in.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified table exists; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.DataTableCollection.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)\n  id: CopyTo(System.Data.DataTable[],System.Int32)\n  parent: System.Data.DataTableCollection\n  langs:\n  - csharp\n  name: CopyTo(DataTable[],Int32)\n  nameWithType: DataTableCollection.CopyTo(DataTable[],Int32)\n  fullName: System.Data.DataTableCollection.CopyTo(DataTable[],Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Copies all the elements of the current <xref href=\"System.Data.DataTableCollection\"></xref> to a one-dimensional <xref:System.Array>, starting at the specified destination array index.\n  remarks: This method can be overridden by a derived class.\n  syntax:\n    content: public void CopyTo (System.Data.DataTable[] array, int index);\n    parameters:\n    - id: array\n      type: System.Data.DataTable[]\n      description: The one-dimensional <xref:System.Array> to copy the current <xref href=\"System.Data.DataTableCollection\"></xref> object's elements into.\n    - id: index\n      type: System.Int32\n      description: The destination <xref:System.Array> index to start copying into.\n  overload: System.Data.DataTableCollection.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataTableCollection.IndexOf(System.Data.DataTable)\n  id: IndexOf(System.Data.DataTable)\n  parent: System.Data.DataTableCollection\n  langs:\n  - csharp\n  name: IndexOf(DataTable)\n  nameWithType: DataTableCollection.IndexOf(DataTable)\n  fullName: System.Data.DataTableCollection.IndexOf(DataTable)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets the index of the specified <xref href=\"System.Data.DataTable\"></xref> object.\n  remarks: \"Use the IndexOf method to determine the exact index of a given table.  \\n  \\n Before calling IndexOf, you can test for the existence of a table (specified by either index or name) by using the <xref:System.Data.DataTableCollection.Contains%2A> method.\"\n  example:\n  - \"The following example returns the index of each table in the <xref:System.Data.DataTableCollection>.  \\n  \\n [!code-cs[Classic WebData DataTableCollection.IndexOf Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_3_1.cs)]\\n [!code-vb[Classic WebData DataTableCollection.IndexOf Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_3_1.vb)]\"\n  syntax:\n    content: public int IndexOf (System.Data.DataTable table);\n    parameters:\n    - id: table\n      type: System.Data.DataTable\n      description: The <xref uid=\"langword_csharp_DataTable\" name=\"DataTable\" href=\"\"></xref> to search for.\n    return:\n      type: System.Int32\n      description: The zero-based index of the table, or -1 if the table is not found in the collection.\n  overload: System.Data.DataTableCollection.IndexOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataTableCollection.IndexOf(System.String)\n  id: IndexOf(System.String)\n  parent: System.Data.DataTableCollection\n  langs:\n  - csharp\n  name: IndexOf(String)\n  nameWithType: DataTableCollection.IndexOf(String)\n  fullName: System.Data.DataTableCollection.IndexOf(String)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets the index in the collection of the <xref href=\"System.Data.DataTable\"></xref> object with the specified name.\n  remarks: You specify the name of the `DataTable` object by using the <xref:System.Data.DataTable.TableName%2A> property.\n  example:\n  - \"The following example returns the index of a named table in the <xref:System.Data.DataTableCollection>.  \\n  \\n [!code-cs[Classic WebData DataTableCollection.IndexOf1 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_12_1.cs)]\\n [!code-vb[Classic WebData DataTableCollection.IndexOf1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_12_1.vb)]\"\n  syntax:\n    content: public int IndexOf (string tableName);\n    parameters:\n    - id: tableName\n      type: System.String\n      description: The name of the <xref uid=\"langword_csharp_DataTable\" name=\"DataTable\" href=\"\"></xref> object to look for.\n    return:\n      type: System.Int32\n      description: \"The zero-based index of the <xref uid=\\\"langword_csharp_DataTable\\\" name=\\\"DataTable\\\" href=\\\"\\\"></xref> with the specified name, or -1 if the table does not exist in the collection.  \\n  \\n <div class=\\\"alert NOTE\\\">  \\n Returns -1 when two or more tables have the same name but different namespaces. The call does not succeed if there is any ambiguity when matching a table name to exactly one table.  \\n  \\n</div>\"\n  overload: System.Data.DataTableCollection.IndexOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataTableCollection.IndexOf(System.String,System.String)\n  id: IndexOf(System.String,System.String)\n  parent: System.Data.DataTableCollection\n  langs:\n  - csharp\n  name: IndexOf(String,String)\n  nameWithType: DataTableCollection.IndexOf(String,String)\n  fullName: System.Data.DataTableCollection.IndexOf(String,String)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets the index in the collection of the specified <xref href=\"System.Data.DataTable\"></xref> object.\n  remarks: You specify the name of the <xref:System.Data.DataTable> object by using the <xref:System.Data.DataTable.TableName%2A> property.\n  example:\n  - \"The following example returns the index of a named table in the <xref:System.Data.DataTableCollection>.  \\n  \\n [!code-cs[Classic WebData DataTableCollection.IndexOf1 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_11_1.cs)]\\n [!code-vb[Classic WebData DataTableCollection.IndexOf1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_11_1.vb)]\"\n  syntax:\n    content: public int IndexOf (string tableName, string tableNamespace);\n    parameters:\n    - id: tableName\n      type: System.String\n      description: The name of the <xref href=\"System.Data.DataTable\"></xref> object to look for.\n    - id: tableNamespace\n      type: System.String\n      description: The name of the <xref href=\"System.Data.DataTable\"></xref> namespace to look in.\n    return:\n      type: System.Int32\n      description: The zero-based index of the <xref href=\"System.Data.DataTable\"></xref> with the specified name, or -1 if the table does not exist in the collection.\n  overload: System.Data.DataTableCollection.IndexOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataTableCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Data.DataTableCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: DataTableCollection.Item(Int32)\n  fullName: System.Data.DataTableCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets the <xref href=\"System.Data.DataTable\"></xref> object at the specified index.\n  remarks: \"Use the <xref:System.Data.DataTableCollection.Contains%2A> method to determine whether a table with a specific index exists.  \\n  \\n If you have the name of a table, but not its index, use the <xref:System.Data.DataTableCollection.IndexOf%2A> method to return the index.\"\n  example:\n  - \"The following example retrieves a <xref:System.Data.DataTable> by its index.  \\n  \\n [!code-cs[Classic WebData DataTableCollection.this Example#1](~/add/codesnippet/csharp/p-system.data.datatablec_1_1.cs)]\\n [!code-vb[Classic WebData DataTableCollection.this Example#1](~/add/codesnippet/visualbasic/p-system.data.datatablec_1_1.vb)]\"\n  syntax:\n    content: public System.Data.DataTable this[int index] { get; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the <xref href=\"System.Data.DataTable\"></xref> to find.\n    return:\n      type: System.Data.DataTable\n      description: A <xref href=\"System.Data.DataTable\"></xref>with the specified index; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the <xref href=\"System.Data.DataTable\"></xref> does not exist.\n  overload: System.Data.DataTableCollection.Item*\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: The index value is greater than the number of items in the collection.\n  platform:\n  - net462\n- uid: System.Data.DataTableCollection.Item(System.String)\n  id: Item(System.String)\n  parent: System.Data.DataTableCollection\n  langs:\n  - csharp\n  name: Item(String)\n  nameWithType: DataTableCollection.Item(String)\n  fullName: System.Data.DataTableCollection.Item(String)\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets the <xref href=\"System.Data.DataTable\"></xref> object with the specified name.\n  remarks: \"If a <xref:System.Data.DataTable> name exists that matches the case of the search string, it is returned. Otherwise a case-insensitive search is performed, and if a <xref:System.Data.DataTable> name is found that matches this search, it is returned.  \\n  \\n Use the <xref:System.Data.DataTableCollection.Contains%2A> method to determine whether a table with a specific name or index exists.\"\n  example:\n  - \"The following example retrieves a single table by name from the <xref:System.Data.DataTableCollection>.  \\n  \\n [!code-cs[Classic WebData DataTableCollection.this1 Example#1](~/add/codesnippet/csharp/p-system.data.datatablec_0_1.cs)]\\n [!code-vb[Classic WebData DataTableCollection.this1 Example#1](~/add/codesnippet/visualbasic/p-system.data.datatablec_0_1.vb)]\"\n  syntax:\n    content: public System.Data.DataTable this[string name] { get; }\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the <xref uid=\"langword_csharp_DataTable\" name=\"DataTable\" href=\"\"></xref> to find.\n    return:\n      type: System.Data.DataTable\n      description: A <xref href=\"System.Data.DataTable\"></xref> with the specified name; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the <xref href=\"System.Data.DataTable\"></xref> does not exist.\n  overload: System.Data.DataTableCollection.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataTableCollection.Item(System.String,System.String)\n  id: Item(System.String,System.String)\n  parent: System.Data.DataTableCollection\n  langs:\n  - csharp\n  name: Item(String,String)\n  nameWithType: DataTableCollection.Item(String,String)\n  fullName: System.Data.DataTableCollection.Item(String,String)\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets the <xref href=\"System.Data.DataTable\"></xref> object with the specified name in the specified namespace.\n  syntax:\n    content: public System.Data.DataTable this[string name, string tableNamespace] { get; }\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the <xref uid=\"langword_csharp_DataTable\" name=\"DataTable\" href=\"\"></xref> to find.\n    - id: tableNamespace\n      type: System.String\n      description: The name of the <xref href=\"System.Data.DataTable\"></xref> namespace to look in.\n    return:\n      type: System.Data.DataTable\n      description: A <xref href=\"System.Data.DataTable\"></xref> with the specified name; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the <xref href=\"System.Data.DataTable\"></xref> does not exist.\n  overload: System.Data.DataTableCollection.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataTableCollection.List\n  id: List\n  parent: System.Data.DataTableCollection\n  langs:\n  - csharp\n  name: List\n  nameWithType: DataTableCollection.List\n  fullName: System.Data.DataTableCollection.List\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  syntax:\n    content: protected override System.Collections.ArrayList List { get; }\n    return:\n      type: System.Collections.ArrayList\n      description: To be added.\n  overload: System.Data.DataTableCollection.List*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataTableCollection.Remove(System.Data.DataTable)\n  id: Remove(System.Data.DataTable)\n  parent: System.Data.DataTableCollection\n  langs:\n  - csharp\n  name: Remove(DataTable)\n  nameWithType: DataTableCollection.Remove(DataTable)\n  fullName: System.Data.DataTableCollection.Remove(DataTable)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Removes the specified <xref href=\"System.Data.DataTable\"></xref> object from the collection.\n  remarks: \"The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs when a table is successfully removed.  \\n  \\n To determine whether a given table exists and can be removed before invoking Remove, use the <xref:System.Data.DataTableCollection.Contains%2A> and the <xref:System.Data.DataTableCollection.CanRemove%2A> methods.\"\n  example:\n  - \"The following example uses the <xref:System.Data.DataTableCollection.CanRemove%2A> method to test whether each table can be removed from a <xref:System.Data.DataSet>. If so, the Remove method is called to remove the table.  \\n  \\n [!code-cs[Classic WebData DataTableCollection.Remove Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_0_1.cs)]\\n [!code-vb[Classic WebData DataTableCollection.Remove Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_0_1.vb)]\"\n  syntax:\n    content: public void Remove (System.Data.DataTable table);\n    parameters:\n    - id: table\n      type: System.Data.DataTable\n      description: The <xref uid=\"langword_csharp_DataTable\" name=\"DataTable\" href=\"\"></xref> to remove.\n  overload: System.Data.DataTableCollection.Remove*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The value specified for the table is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The table does not belong to this collection.  \\n  \\n -or-  \\n  \\n The table is part of a relationship.\"\n  platform:\n  - net462\n- uid: System.Data.DataTableCollection.Remove(System.String)\n  id: Remove(System.String)\n  parent: System.Data.DataTableCollection\n  langs:\n  - csharp\n  name: Remove(String)\n  nameWithType: DataTableCollection.Remove(String)\n  fullName: System.Data.DataTableCollection.Remove(String)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Removes the <xref href=\"System.Data.DataTable\"></xref> object with the specified name from the collection.\n  remarks: \"The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs when a table is successfully removed.  \\n  \\n To determine whether a given table exists and can be removed before invoking <xref:System.Data.DataTableCollection.Remove%2A>, use the <xref:System.Data.DataTableCollection.Contains%2A> and the <xref:System.Data.DataTableCollection.CanRemove%2A> methods.\"\n  example:\n  - \"The following example uses the <xref:System.Data.DataTableCollection.Contains%2A> and <xref:System.Data.DataTableCollection.CanRemove%2A> methods to test whether a named table exists and can be removed. If so, the <xref:System.Data.DataTableCollection.Remove%2A> method is called to remove the table.  \\n  \\n [!code-cs[Classic WebData DataTableCollection.Remove1 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_7_1.cs)]\\n [!code-vb[Classic WebData DataTableCollection.Remove1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_7_1.vb)]\"\n  syntax:\n    content: public void Remove (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the <xref href=\"System.Data.DataTable\"></xref> object to remove.\n  overload: System.Data.DataTableCollection.Remove*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The collection does not have a table with the specified name.\n  platform:\n  - net462\n- uid: System.Data.DataTableCollection.Remove(System.String,System.String)\n  id: Remove(System.String,System.String)\n  parent: System.Data.DataTableCollection\n  langs:\n  - csharp\n  name: Remove(String,String)\n  nameWithType: DataTableCollection.Remove(String,String)\n  fullName: System.Data.DataTableCollection.Remove(String,String)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Removes the <xref href=\"System.Data.DataTable\"></xref> object with the specified name from the collection.\n  remarks: \"The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs when a table is successfully removed.  \\n  \\n To determine whether a given table exists and can be removed before invoking <xref:System.Data.DataTableCollection.Remove%2A>, use the <xref:System.Data.DataTableCollection.Contains%2A> and the <xref:System.Data.DataTableCollection.CanRemove%2A> methods.\"\n  example:\n  - \"The following example uses the <xref:System.Data.DataTableCollection.Contains%2A> and <xref:System.Data.DataTableCollection.CanRemove%2A> methods to test whether a named table exists and can be removed. If so, the <xref:System.Data.DataTableCollection.Remove%2A> method is called to remove the table.  \\n  \\n [!code-cs[Classic WebData DataTableCollection.Remove1 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_13_1.cs)]\\n [!code-vb[Classic WebData DataTableCollection.Remove1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_13_1.vb)]\"\n  syntax:\n    content: public void Remove (string name, string tableNamespace);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the <xref href=\"System.Data.DataTable\"></xref> object to remove.\n    - id: tableNamespace\n      type: System.String\n      description: The name of the <xref href=\"System.Data.DataTable\"></xref> namespace to look in.\n  overload: System.Data.DataTableCollection.Remove*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The collection does not have a table with the specified name.\n  platform:\n  - net462\n- uid: System.Data.DataTableCollection.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Data.DataTableCollection\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: DataTableCollection.RemoveAt(Int32)\n  fullName: System.Data.DataTableCollection.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Removes the <xref href=\"System.Data.DataTable\"></xref> object at the specified index from the collection.\n  remarks: The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs when a table is successfully removed.\n  example:\n  - \"The following example uses the <xref:System.Data.DataTableCollection.Contains%2A> and <xref:System.Data.DataTableCollection.CanRemove%2A> methods to test whether a table exists with the index 10. If so, the RemoveAt method is called to remove the table.  \\n  \\n [!code-vb[Classic WebData DataTableCollection.RemoveAt#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_15_1.vb)]\\n [!code-cs[Classic WebData DataTableCollection.RemoveAt#1](~/add/codesnippet/csharp/m-system.data.datatablec_15_1.cs)]\"\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index of the <xref uid=\"langword_csharp_DataTable\" name=\"DataTable\" href=\"\"></xref> to remove.\n  overload: System.Data.DataTableCollection.RemoveAt*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The collection does not have a table at the specified index.\n  platform:\n  - net462\nreferences:\n- uid: System.Data.InternalDataCollectionBase\n  isExternal: false\n  name: System.Data.InternalDataCollectionBase\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Data.DuplicateNameException\n  parent: System.Data\n  isExternal: false\n  name: DuplicateNameException\n  nameWithType: DuplicateNameException\n  fullName: System.Data.DuplicateNameException\n- uid: System.IndexOutOfRangeException\n  isExternal: true\n  name: System.IndexOutOfRangeException\n- uid: System.Data.DataTableCollection.Add\n  parent: System.Data.DataTableCollection\n  isExternal: false\n  name: Add()\n  nameWithType: DataTableCollection.Add()\n  fullName: System.Data.DataTableCollection.Add()\n- uid: System.Data.DataTable\n  parent: System.Data\n  isExternal: false\n  name: DataTable\n  nameWithType: DataTable\n  fullName: System.Data.DataTable\n- uid: System.Data.DataTableCollection.Add(System.Data.DataTable)\n  parent: System.Data.DataTableCollection\n  isExternal: false\n  name: Add(DataTable)\n  nameWithType: DataTableCollection.Add(DataTable)\n  fullName: System.Data.DataTableCollection.Add(DataTable)\n- uid: System.Data.DataTableCollection.Add(System.String)\n  parent: System.Data.DataTableCollection\n  isExternal: false\n  name: Add(String)\n  nameWithType: DataTableCollection.Add(String)\n  fullName: System.Data.DataTableCollection.Add(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.DataTableCollection.Add(System.String,System.String)\n  parent: System.Data.DataTableCollection\n  isExternal: false\n  name: Add(String,String)\n  nameWithType: DataTableCollection.Add(String,String)\n  fullName: System.Data.DataTableCollection.Add(String,String)\n- uid: System.Data.DataTableCollection.AddRange(System.Data.DataTable[])\n  parent: System.Data.DataTableCollection\n  isExternal: false\n  name: AddRange(DataTable[])\n  nameWithType: DataTableCollection.AddRange(DataTable[])\n  fullName: System.Data.DataTableCollection.AddRange(DataTable[])\n- uid: System.Data.DataTable[]\n  parent: System.Data\n  isExternal: false\n  name: DataTable\n  nameWithType: DataTable\n  fullName: System.Data.DataTable[]\n  spec.csharp:\n  - uid: System.Data.DataTable\n    name: DataTable\n    nameWithType: DataTable\n    fullName: DataTable[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.DataTableCollection.CanRemove(System.Data.DataTable)\n  parent: System.Data.DataTableCollection\n  isExternal: false\n  name: CanRemove(DataTable)\n  nameWithType: DataTableCollection.CanRemove(DataTable)\n  fullName: System.Data.DataTableCollection.CanRemove(DataTable)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.DataTableCollection.Clear\n  parent: System.Data.DataTableCollection\n  isExternal: false\n  name: Clear()\n  nameWithType: DataTableCollection.Clear()\n  fullName: System.Data.DataTableCollection.Clear()\n- uid: System.Data.DataTableCollection.CollectionChanged\n  parent: System.Data.DataTableCollection\n  isExternal: false\n  name: CollectionChanged\n  nameWithType: DataTableCollection.CollectionChanged\n  fullName: System.Data.DataTableCollection.CollectionChanged\n- uid: System.ComponentModel.CollectionChangeEventHandler\n  parent: System.ComponentModel\n  isExternal: false\n  name: CollectionChangeEventHandler\n  nameWithType: CollectionChangeEventHandler\n  fullName: System.ComponentModel.CollectionChangeEventHandler\n- uid: System.Data.DataTableCollection.CollectionChanging\n  parent: System.Data.DataTableCollection\n  isExternal: false\n  name: CollectionChanging\n  nameWithType: DataTableCollection.CollectionChanging\n  fullName: System.Data.DataTableCollection.CollectionChanging\n- uid: System.Data.DataTableCollection.Contains(System.String)\n  parent: System.Data.DataTableCollection\n  isExternal: false\n  name: Contains(String)\n  nameWithType: DataTableCollection.Contains(String)\n  fullName: System.Data.DataTableCollection.Contains(String)\n- uid: System.Data.DataTableCollection.Contains(System.String,System.String)\n  parent: System.Data.DataTableCollection\n  isExternal: false\n  name: Contains(String,String)\n  nameWithType: DataTableCollection.Contains(String,String)\n  fullName: System.Data.DataTableCollection.Contains(String,String)\n- uid: System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)\n  parent: System.Data.DataTableCollection\n  isExternal: false\n  name: CopyTo(DataTable[],Int32)\n  nameWithType: DataTableCollection.CopyTo(DataTable[],Int32)\n  fullName: System.Data.DataTableCollection.CopyTo(DataTable[],Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.DataTableCollection.IndexOf(System.Data.DataTable)\n  parent: System.Data.DataTableCollection\n  isExternal: false\n  name: IndexOf(DataTable)\n  nameWithType: DataTableCollection.IndexOf(DataTable)\n  fullName: System.Data.DataTableCollection.IndexOf(DataTable)\n- uid: System.Data.DataTableCollection.IndexOf(System.String)\n  parent: System.Data.DataTableCollection\n  isExternal: false\n  name: IndexOf(String)\n  nameWithType: DataTableCollection.IndexOf(String)\n  fullName: System.Data.DataTableCollection.IndexOf(String)\n- uid: System.Data.DataTableCollection.IndexOf(System.String,System.String)\n  parent: System.Data.DataTableCollection\n  isExternal: false\n  name: IndexOf(String,String)\n  nameWithType: DataTableCollection.IndexOf(String,String)\n  fullName: System.Data.DataTableCollection.IndexOf(String,String)\n- uid: System.Data.DataTableCollection.Item(System.Int32)\n  parent: System.Data.DataTableCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: DataTableCollection.Item(Int32)\n  fullName: System.Data.DataTableCollection.Item(Int32)\n- uid: System.Data.DataTableCollection.Item(System.String)\n  parent: System.Data.DataTableCollection\n  isExternal: false\n  name: Item(String)\n  nameWithType: DataTableCollection.Item(String)\n  fullName: System.Data.DataTableCollection.Item(String)\n- uid: System.Data.DataTableCollection.Item(System.String,System.String)\n  parent: System.Data.DataTableCollection\n  isExternal: false\n  name: Item(String,String)\n  nameWithType: DataTableCollection.Item(String,String)\n  fullName: System.Data.DataTableCollection.Item(String,String)\n- uid: System.Data.DataTableCollection.List\n  parent: System.Data.DataTableCollection\n  isExternal: false\n  name: List\n  nameWithType: DataTableCollection.List\n  fullName: System.Data.DataTableCollection.List\n- uid: System.Collections.ArrayList\n  parent: System.Collections\n  isExternal: false\n  name: ArrayList\n  nameWithType: ArrayList\n  fullName: System.Collections.ArrayList\n- uid: System.Data.DataTableCollection.Remove(System.Data.DataTable)\n  parent: System.Data.DataTableCollection\n  isExternal: false\n  name: Remove(DataTable)\n  nameWithType: DataTableCollection.Remove(DataTable)\n  fullName: System.Data.DataTableCollection.Remove(DataTable)\n- uid: System.Data.DataTableCollection.Remove(System.String)\n  parent: System.Data.DataTableCollection\n  isExternal: false\n  name: Remove(String)\n  nameWithType: DataTableCollection.Remove(String)\n  fullName: System.Data.DataTableCollection.Remove(String)\n- uid: System.Data.DataTableCollection.Remove(System.String,System.String)\n  parent: System.Data.DataTableCollection\n  isExternal: false\n  name: Remove(String,String)\n  nameWithType: DataTableCollection.Remove(String,String)\n  fullName: System.Data.DataTableCollection.Remove(String,String)\n- uid: System.Data.DataTableCollection.RemoveAt(System.Int32)\n  parent: System.Data.DataTableCollection\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: DataTableCollection.RemoveAt(Int32)\n  fullName: System.Data.DataTableCollection.RemoveAt(Int32)\n- uid: System.Data.DataTableCollection.Add*\n  parent: System.Data.DataTableCollection\n  isExternal: false\n  name: Add\n  nameWithType: DataTableCollection.Add\n- uid: System.Data.DataTableCollection.AddRange*\n  parent: System.Data.DataTableCollection\n  isExternal: false\n  name: AddRange\n  nameWithType: DataTableCollection.AddRange\n- uid: System.Data.DataTableCollection.CanRemove*\n  parent: System.Data.DataTableCollection\n  isExternal: false\n  name: CanRemove\n  nameWithType: DataTableCollection.CanRemove\n- uid: System.Data.DataTableCollection.Clear*\n  parent: System.Data.DataTableCollection\n  isExternal: false\n  name: Clear\n  nameWithType: DataTableCollection.Clear\n- uid: System.Data.DataTableCollection.Contains*\n  parent: System.Data.DataTableCollection\n  isExternal: false\n  name: Contains\n  nameWithType: DataTableCollection.Contains\n- uid: System.Data.DataTableCollection.CopyTo*\n  parent: System.Data.DataTableCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: DataTableCollection.CopyTo\n- uid: System.Data.DataTableCollection.IndexOf*\n  parent: System.Data.DataTableCollection\n  isExternal: false\n  name: IndexOf\n  nameWithType: DataTableCollection.IndexOf\n- uid: System.Data.DataTableCollection.Item*\n  parent: System.Data.DataTableCollection\n  isExternal: false\n  name: Item\n  nameWithType: DataTableCollection.Item\n- uid: System.Data.DataTableCollection.List*\n  parent: System.Data.DataTableCollection\n  isExternal: false\n  name: List\n  nameWithType: DataTableCollection.List\n- uid: System.Data.DataTableCollection.Remove*\n  parent: System.Data.DataTableCollection\n  isExternal: false\n  name: Remove\n  nameWithType: DataTableCollection.Remove\n- uid: System.Data.DataTableCollection.RemoveAt*\n  parent: System.Data.DataTableCollection\n  isExternal: false\n  name: RemoveAt\n  nameWithType: DataTableCollection.RemoveAt\n"}