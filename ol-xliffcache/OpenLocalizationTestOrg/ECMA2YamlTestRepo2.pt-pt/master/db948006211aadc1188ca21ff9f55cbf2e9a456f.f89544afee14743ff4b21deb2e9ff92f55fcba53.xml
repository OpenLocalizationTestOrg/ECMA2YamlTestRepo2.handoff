{"nodes":[{"pos":[1807,1964],"content":"A secure and interoperable binding that is designed for use with duplex service contracts that allows both services and clients to send and receive messages.","needQuote":true,"needEscape":true,"nodes":[{"content":"A secure and interoperable binding that is designed for use with duplex service contracts that allows both services and clients to send and receive messages.","pos":[0,157]}]},{"pos":[1977,3207],"content":"The WSDualHttpBinding provides the same support for Web Service protocols as the <xref:System.ServiceModel.WSHttpBinding>, but for use with duplex contracts. WSDualHttpBinding only supports SOAP security and requires reliable messaging. This binding requires that the client has a public URI that provides a callback endpoint for the service. This is provided by the <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A>. A dual binding exposes the IP address of the client to the service. The client should use security to ensure that it only connects to services it trusts.       By default the WSDualHttpBinding generates the following binding element stack:      -   <xref:System.ServiceModel.Channels.TransactionFlowBindingElement>      -   <xref:System.ServiceModel.Channels.ReliableSessionBindingElement>      -   <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement>      -   <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement>      -   <xref:System.ServiceModel.Channels.OneWayBindingElement>      -   <xref:System.ServiceModel.Channels.TextMessageEncodingBindingElement>      -   <xref:System.ServiceModel.Channels.HttpTransportBindingElement>","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The WSDualHttpBinding provides the same support for Web Service protocols as the <xref:System.ServiceModel.WSHttpBinding>, but for use with duplex contracts. WSDualHttpBinding only supports SOAP security and requires reliable messaging. This binding requires that the client has a public URI that provides a callback endpoint for the service. This is provided by the <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A>. A dual binding exposes the IP address of the client to the service. The client should use security to ensure that it only connects to services it trusts.       By default the WSDualHttpBinding generates the following binding element stack:      -   <xref:System.ServiceModel.Channels.TransactionFlowBindingElement>      -   <xref:System.ServiceModel.Channels.ReliableSessionBindingElement>      -   <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement>      -   <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement>      -   <xref:System.ServiceModel.Channels.OneWayBindingElement>      -   <xref:System.ServiceModel.Channels.TextMessageEncodingBindingElement>      -   <xref:System.ServiceModel.Channels.HttpTransportBindingElement>","pos":[0,1214],"nodes":[{"content":"The WSDualHttpBinding provides the same support for Web Service protocols as the &lt;xref:System.ServiceModel.WSHttpBinding&gt;, but for use with duplex contracts.","pos":[0,157],"source":"The WSDualHttpBinding provides the same support for Web Service protocols as the <xref:System.ServiceModel.WSHttpBinding>, but for use with duplex contracts."},{"content":"WSDualHttpBinding only supports SOAP security and requires reliable messaging.","pos":[158,236]},{"content":"This binding requires that the client has a public URI that provides a callback endpoint for the service.","pos":[237,342]},{"content":"This is provided by the &lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt;.","pos":[343,454],"source":" This is provided by the <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A>."},{"content":"A dual binding exposes the IP address of the client to the service.","pos":[455,522]},{"content":"The client should use security to ensure that it only connects to services it trusts.","pos":[523,608]},{"content":"By default the WSDualHttpBinding generates the following binding element stack:      -   &lt;xref:System.ServiceModel.Channels.TransactionFlowBindingElement&gt;      -   &lt;xref:System.ServiceModel.Channels.ReliableSessionBindingElement&gt;      -   &lt;xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement&gt;      -   &lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement&gt;      -   &lt;xref:System.ServiceModel.Channels.OneWayBindingElement&gt;      -   &lt;xref:System.ServiceModel.Channels.TextMessageEncodingBindingElement&gt;      -   &lt;xref:System.ServiceModel.Channels.HttpTransportBindingElement&gt;","pos":[615,1214],"source":"       By default the WSDualHttpBinding generates the following binding element stack:      -   <xref:System.ServiceModel.Channels.TransactionFlowBindingElement>      -   <xref:System.ServiceModel.Channels.ReliableSessionBindingElement>      -   <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement>      -   <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement>      -   <xref:System.ServiceModel.Channels.OneWayBindingElement>      -   <xref:System.ServiceModel.Channels.TextMessageEncodingBindingElement>      -   <xref:System.ServiceModel.Channels.HttpTransportBindingElement>"}]}]},{"pos":[4131,4230],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.WSDualHttpBinding\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.WSDualHttpBinding\"></xref> class."},{"pos":[5228,5381],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.WSDualHttpBinding\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with a specified type of security used by the binding.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.WSDualHttpBinding\"></xref> class with a specified type of security used by the binding."},{"pos":[5393,5709],"content":"Reliable messaging is required by the <xref:System.ServiceModel.WSDualHttpBinding>, so there is no constructor that provides a switch to turn it off as there is on the <xref:System.ServiceModel.WSHttpBinding.%23ctor%28System.ServiceModel.SecurityMode%29> constructor for the <xref:System.ServiceModel.WSHttpBinding>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Reliable messaging is required by the &lt;xref:System.ServiceModel.WSDualHttpBinding&gt;, so there is no constructor that provides a switch to turn it off as there is on the &lt;xref:System.ServiceModel.WSHttpBinding.%23ctor%28System.ServiceModel.SecurityMode%29&gt; constructor for the &lt;xref:System.ServiceModel.WSHttpBinding&gt;.","pos":[0,316],"source":"Reliable messaging is required by the <xref:System.ServiceModel.WSDualHttpBinding>, so there is no constructor that provides a switch to turn it off as there is on the <xref:System.ServiceModel.WSHttpBinding.%23ctor%28System.ServiceModel.SecurityMode%29> constructor for the <xref:System.ServiceModel.WSHttpBinding>."}]},{"pos":[6215,6382],"content":"The value of <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.WSDualHttpSecurityMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the type of security that is used with the SOAP message and for the client.","needQuote":true,"needEscape":true,"source":"The value of <xref href=\"System.ServiceModel.WSDualHttpSecurityMode\"></xref> that specifies the type of security that is used with the SOAP message and for the client."},{"pos":[6915,7065],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.WSDualHttpBinding\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with a binding specified by its configuration name.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.WSDualHttpBinding\"></xref> class with a binding specified by its configuration name."},{"pos":[7217,7332],"content":"The binding configuration name for the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Configuration.WSHttpBindingElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The binding configuration name for the <xref href=\"System.ServiceModel.Configuration.WSHttpBindingElement\"></xref>."},{"pos":[7548,7627],"content":"The binding element with the name <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">configurationName</ph><ept id=\"p1\">&lt;/code&gt;</ept> was not found.","needQuote":true,"needEscape":true,"source":"The binding element with the name <code>configurationName</code> was not found."},{"pos":[8056,8147],"content":"Gets or sets a value that indicates whether to bypass the proxy server for local addresses.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether to bypass the proxy server for local addresses.","pos":[0,91]}]},{"pos":[8160,8992],"content":"An Internet resource is local if it has a local address. A local address is one that is on the same computer, the local LAN or intranet and is identified, syntactically, by the lack of a period (.) as in the URIs \"http://webserver/\" and \"http://localhost/\".       Setting the BypassProxyOnLocal property determines whether endpoints configured with the <xref:System.ServiceModel.WSDualHttpBinding> use the proxy server when accessing local resources.       If BypassProxyOnLocal is `true`, requests to local Internet resources do not use the proxy server. Use the host name (rather than `localhost`) if you want clients to go through a proxy when talking to services on the same machine when this property is set to `true`.       When BypassProxyOnLocal is `false`, all Internet requests are made through the proxy server.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An Internet resource is local if it has a local address.","pos":[0,56]},{"content":"A local address is one that is on the same computer, the local LAN or intranet and is identified, syntactically, by the lack of a period (.) as in the URIs \"http://webserver/\" and \"http://localhost/\".","pos":[57,257]},{"content":"Setting the BypassProxyOnLocal property determines whether endpoints configured with the &lt;xref:System.ServiceModel.WSDualHttpBinding&gt; use the proxy server when accessing local resources.","pos":[264,450],"source":"       Setting the BypassProxyOnLocal property determines whether endpoints configured with the <xref:System.ServiceModel.WSDualHttpBinding> use the proxy server when accessing local resources."},{"content":"If BypassProxyOnLocal is <ph id=\"ph1\">`true`</ph>, requests to local Internet resources do not use the proxy server.","pos":[457,555],"source":"       If BypassProxyOnLocal is `true`, requests to local Internet resources do not use the proxy server."},{"content":"Use the host name (rather than <ph id=\"ph1\">`localhost`</ph>) if you want clients to go through a proxy when talking to services on the same machine when this property is set to <ph id=\"ph2\">`true`</ph>.","pos":[556,723],"source":" Use the host name (rather than `localhost`) if you want clients to go through a proxy when talking to services on the same machine when this property is set to `true`."},{"content":"When BypassProxyOnLocal is <ph id=\"ph1\">`false`</ph>, all Internet requests are made through the proxy server.","pos":[730,822],"source":"       When BypassProxyOnLocal is `false`, all Internet requests are made through the proxy server."}]},{"pos":[9850,10118],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to bypass the proxy server for local addresses; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to bypass the proxy server for local addresses; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,183],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to bypass the proxy server for local addresses; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[184,268],"source":" The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[10629,10673],"content":"Gets or sets the base address of the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the base address of the client.","pos":[0,44]}]},{"pos":[10685,10822],"content":"This public URI for the client provides the callback endpoint required for the service to contact the client when the contract is duplex.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This public URI for the client provides the callback endpoint required for the service to contact the client when the contract is duplex.","pos":[0,137]}]},{"pos":[11229,11373],"content":"The <xref:System.Uri> that is the base address of the client. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Uri&gt; that is the base address of the client.","pos":[0,61],"source":"The <xref:System.Uri> that is the base address of the client."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[62,144],"source":" The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[11907,11990],"content":"Returns an ordered collection of binding elements contained in the current binding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an ordered collection of binding elements contained in the current binding.","pos":[0,83]}]},{"pos":[12547,12900],"content":"A &lt;xref:System.ServiceModel.Channels.BindingElementCollection&gt; that includes a <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Channels.TransactionFlowBindingElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and, because a reliable session is required for the <bpt id=\"p2\">&lt;xref href=\"System.ServiceModel.WSDualHttpBinding\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, a <bpt id=\"p3\">&lt;xref href=\"System.ServiceModel.Channels.ReliableSessionBindingElement\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref:System.ServiceModel.Channels.BindingElementCollection> that includes a <xref href=\"System.ServiceModel.Channels.TransactionFlowBindingElement\"></xref> and, because a reliable session is required for the <xref href=\"System.ServiceModel.WSDualHttpBinding\"></xref>, a <xref href=\"System.ServiceModel.Channels.ReliableSessionBindingElement\"></xref>."},{"pos":[13404,13490],"content":"Gets the version of SOAP that is used for messages that are processed by this binding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the version of SOAP that is used for messages that are processed by this binding.","pos":[0,86]}]},{"pos":[13988,14114],"content":"The value of the <xref:System.ServiceModel.EnvelopeVersion> that is used with this binding. The value must always be SOAP 1.2.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the <xref:System.ServiceModel.EnvelopeVersion> that is used with this binding. The value must always be SOAP 1.2.","pos":[0,126],"nodes":[{"content":"The value of the &lt;xref:System.ServiceModel.EnvelopeVersion&gt; that is used with this binding.","pos":[0,91],"source":"The value of the <xref:System.ServiceModel.EnvelopeVersion> that is used with this binding."},{"content":"The value must always be SOAP 1.2.","pos":[92,126]}]}]},{"pos":[14647,14755],"content":"Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.","pos":[0,108]}]},{"pos":[15252,15569],"content":"The <xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode*> value that indicates whether the hostname is used to reach the service when matching on the URI. The default value is <xref href=\"System.ServiceModel.HostNameComparisonMode\"></xref>, which ignores the hostname in the match.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode*&gt; value that indicates whether the hostname is used to reach the service when matching on the URI.","pos":[0,190],"source":"The <xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode*> value that indicates whether the hostname is used to reach the service when matching on the URI."},{"content":"The default value is <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.HostNameComparisonMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, which ignores the hostname in the match.","pos":[191,317],"source":" The default value is <xref href=\"System.ServiceModel.HostNameComparisonMode\"></xref>, which ignores the hostname in the match."}]},{"pos":[16084,16262],"content":"Gets or sets the maximum amount of memory, in bytes, that can be allocated for the manager of message buffers that receive messages at the endpoints configured with this binding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the maximum amount of memory, in bytes, that can be allocated for the manager of message buffers that receive messages at the endpoints configured with this binding.","pos":[0,178]}]},{"pos":[16275,17227],"content":"The <xref:System.ServiceModel.Channels.BufferManager> minimizes the cost of using buffers with a buffer pool. Buffers are required to process messages by the service when they come out of the channel. If there is not sufficient memory in the buffer pool to process the message load, the <xref:System.ServiceModel.Channels.BufferManager> must allocate additional memory from the CLR heap, which increases the garbage collection overhead. Extensive allocation from the CLR garbage heap is an indication that the buffer pool size is too small and that performance can be improved with a larger allocation by increasing the MaxBufferPoolSize limit.       The limitations on buffer size set here are for optimizing the performance of message exchanges. If a message exceeds the maximum value set for the buffer, it is not dropped. Instead, more memory is requested from the CLR heap and this incurs more garbage collection overhead than using the buffers.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.ServiceModel.Channels.BufferManager> minimizes the cost of using buffers with a buffer pool. Buffers are required to process messages by the service when they come out of the channel. If there is not sufficient memory in the buffer pool to process the message load, the <xref:System.ServiceModel.Channels.BufferManager> must allocate additional memory from the CLR heap, which increases the garbage collection overhead. Extensive allocation from the CLR garbage heap is an indication that the buffer pool size is too small and that performance can be improved with a larger allocation by increasing the MaxBufferPoolSize limit.       The limitations on buffer size set here are for optimizing the performance of message exchanges. If a message exceeds the maximum value set for the buffer, it is not dropped. Instead, more memory is requested from the CLR heap and this incurs more garbage collection overhead than using the buffers.","pos":[0,950],"nodes":[{"content":"The &lt;xref:System.ServiceModel.Channels.BufferManager&gt; minimizes the cost of using buffers with a buffer pool.","pos":[0,109],"source":"The <xref:System.ServiceModel.Channels.BufferManager> minimizes the cost of using buffers with a buffer pool."},{"content":"Buffers are required to process messages by the service when they come out of the channel.","pos":[110,200]},{"content":"If there is not sufficient memory in the buffer pool to process the message load, the &lt;xref:System.ServiceModel.Channels.BufferManager&gt; must allocate additional memory from the CLR heap, which increases the garbage collection overhead.","pos":[201,436],"source":" If there is not sufficient memory in the buffer pool to process the message load, the <xref:System.ServiceModel.Channels.BufferManager> must allocate additional memory from the CLR heap, which increases the garbage collection overhead."},{"content":"Extensive allocation from the CLR garbage heap is an indication that the buffer pool size is too small and that performance can be improved with a larger allocation by increasing the MaxBufferPoolSize limit.","pos":[437,644]},{"content":"The limitations on buffer size set here are for optimizing the performance of message exchanges.","pos":[651,747]},{"content":"If a message exceeds the maximum value set for the buffer, it is not dropped.","pos":[748,825]},{"content":"Instead, more memory is requested from the CLR heap and this incurs more garbage collection overhead than using the buffers.","pos":[826,950]}]}]},{"pos":[17608,17744],"content":"The maximum size, in bytes, for the pool of buffers used by an endpoint configured with this binding. The default value is 524288 bytes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum size, in bytes, for the pool of buffers used by an endpoint configured with this binding. The default value is 524288 bytes.","pos":[0,136],"nodes":[{"content":"The maximum size, in bytes, for the pool of buffers used by an endpoint configured with this binding.","pos":[0,101]},{"content":"The default value is 524288 bytes.","pos":[102,136]}]}]},{"pos":[18279,18397],"content":"Gets or sets the maximum size, in bytes, for a message that can be received on a channel configured with this binding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the maximum size, in bytes, for a message that can be received on a channel configured with this binding.","pos":[0,118]}]},{"pos":[18410,19203],"content":"The size of the messages that can be received on the wire by services using the <xref:System.ServiceModel.WSDualHttpBinding> is bounded by the amount of memory allocated for each message. This bound on message size is intended to limit exposure to DOS-style attacks.       Note that the settings for <xref:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize%2A> and <xref:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize%2A> are local behavioral settings. This means that they are not transmitted to other endpoints in metadata. If you generate a proxy to a service with a maximum message size of 2GB from metadata, the proxy still has a default value 64K. This leaves control of the appropriate bounds for message and message buffer size in the scope of local administrators.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The size of the messages that can be received on the wire by services using the <xref:System.ServiceModel.WSDualHttpBinding> is bounded by the amount of memory allocated for each message. This bound on message size is intended to limit exposure to DOS-style attacks.       Note that the settings for <xref:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize%2A> and <xref:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize%2A> are local behavioral settings. This means that they are not transmitted to other endpoints in metadata. If you generate a proxy to a service with a maximum message size of 2GB from metadata, the proxy still has a default value 64K. This leaves control of the appropriate bounds for message and message buffer size in the scope of local administrators.","pos":[0,791],"nodes":[{"content":"The size of the messages that can be received on the wire by services using the &lt;xref:System.ServiceModel.WSDualHttpBinding&gt; is bounded by the amount of memory allocated for each message.","pos":[0,187],"source":"The size of the messages that can be received on the wire by services using the <xref:System.ServiceModel.WSDualHttpBinding> is bounded by the amount of memory allocated for each message."},{"content":"This bound on message size is intended to limit exposure to DOS-style attacks.","pos":[188,266]},{"content":"Note that the settings for &lt;xref:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize%2A&gt; and &lt;xref:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize%2A&gt; are local behavioral settings.","pos":[273,470],"source":"       Note that the settings for <xref:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize%2A> and <xref:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize%2A> are local behavioral settings."},{"content":"This means that they are not transmitted to other endpoints in metadata.","pos":[471,543]},{"content":"If you generate a proxy to a service with a maximum message size of 2GB from metadata, the proxy still has a default value 64K.","pos":[544,671]},{"content":"This leaves control of the appropriate bounds for message and message buffer size in the scope of local administrators.","pos":[672,791]}]}]},{"pos":[19601,19711],"content":"The maximum size, in bytes, for a message that is processed by the binding. The default value is 65,536 bytes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum size, in bytes, for a message that is processed by the binding. The default value is 65,536 bytes.","pos":[0,110],"nodes":[{"content":"The maximum size, in bytes, for a message that is processed by the binding.","pos":[0,75]},{"content":"The default value is 65,536 bytes.","pos":[76,110]}]}]},{"pos":[19914,19942],"content":"The value is less than zero.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value is less than zero.","pos":[0,28]}]},{"pos":[20356,20426],"content":"Gets or sets whether MTOM or Text/XML is used to encode SOAP messages.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets whether MTOM or Text/XML is used to encode SOAP messages.","pos":[0,70]}]},{"pos":[20893,21115],"content":"The value of <xref href=\"System.ServiceModel.WSMessageEncoding\"></xref> that indicates that MTOM or Text/XML is used to encode SOAP messages. The default value is <xref href=\"System.ServiceModel.WSMessageEncoding\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.WSMessageEncoding\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that indicates that MTOM or Text/XML is used to encode SOAP messages.","pos":[0,141],"source":"The value of <xref href=\"System.ServiceModel.WSMessageEncoding\"></xref> that indicates that MTOM or Text/XML is used to encode SOAP messages."},{"content":"The default value is <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.WSMessageEncoding\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[142,222],"source":" The default value is <xref href=\"System.ServiceModel.WSMessageEncoding\"></xref>."}]},{"pos":[21598,21645],"content":"Gets or sets the URI address of the HTTP proxy.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the URI address of the HTTP proxy.","pos":[0,47]}]},{"pos":[21657,21790],"content":"If the &lt;xref:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy%2A&gt; is set to <ph id=\"ph1\">`true`</ph>, the value of the ProxyAddress is ignored.","needQuote":true,"needEscape":true,"extradata":"MT","source":"If the <xref:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy%2A> is set to `true`, the value of the ProxyAddress is ignored."},{"pos":[22172,22320],"content":"A <xref:System.Uri> that serves as the address of the HTTP proxy. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Uri&gt; that serves as the address of the HTTP proxy.","pos":[0,65],"source":"A <xref:System.Uri> that serves as the address of the HTTP proxy."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[66,148],"source":" The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[22800,22924],"content":"Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.","pos":[0,124]}]},{"pos":[22936,23223],"content":"The complexity constraints include items such as a maximum element depth and a maximum length for string content within the message. The constraints protect against a class of denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The complexity constraints include items such as a maximum element depth and a maximum length for string content within the message. The constraints protect against a class of denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources.","pos":[0,287],"nodes":[{"content":"The complexity constraints include items such as a maximum element depth and a maximum length for string content within the message.","pos":[0,132]},{"content":"The constraints protect against a class of denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources.","pos":[133,287]}]}]},{"pos":[23658,23748],"content":"The <xref:System.Xml.XmlDictionaryReaderQuotas> that specifies the complexity constraints.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Xml.XmlDictionaryReaderQuotas&gt; that specifies the complexity constraints.","pos":[0,90],"source":"The <xref:System.Xml.XmlDictionaryReaderQuotas> that specifies the complexity constraints."}]},{"pos":[24243,24412],"content":"Gets an object that provides convenient access to the properties of a reliable session binding element that are available when using one of the system-provided bindings.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an object that provides convenient access to the properties of a reliable session binding element that are available when using one of the system-provided bindings.","pos":[0,169]}]},{"pos":[24424,24532],"content":"The reliable session is required for service configured with a <xref:System.ServiceModel.WSDualHttpBinding>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The reliable session is required for service configured with a &lt;xref:System.ServiceModel.WSDualHttpBinding&gt;.","pos":[0,108],"source":"The reliable session is required for service configured with a <xref:System.ServiceModel.WSDualHttpBinding>."}]},{"pos":[24969,25184],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.ReliableSession\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides convenient access to the properties of a reliable session binding element that are available when using one of the system-provided bindings.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ServiceModel.ReliableSession\"></xref> that provides convenient access to the properties of a reliable session binding element that are available when using one of the system-provided bindings."},{"pos":[25637,25736],"content":"Gets the URI transport scheme for the channels and listeners that are configured with this binding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the URI transport scheme for the channels and listeners that are configured with this binding.","pos":[0,99]}]},{"pos":[26161,26190],"content":"The transport scheme: \"http\".","needQuote":false,"needEscape":true,"nodes":[{"content":"The transport scheme: \"http\".","pos":[0,29]}]},{"pos":[26645,26720],"content":"Gets an object that specifies the security settings used with this binding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an object that specifies the security settings used with this binding.","pos":[0,75]}]},{"pos":[26732,26885],"content":"A dual binding exposes the IP address of the client to the service. The client should use security to ensure that it only connects to services it trusts.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A dual binding exposes the IP address of the client to the service. The client should use security to ensure that it only connects to services it trusts.","pos":[0,153],"nodes":[{"content":"A dual binding exposes the IP address of the client to the service.","pos":[0,67]},{"content":"The client should use security to ensure that it only connects to services it trusts.","pos":[68,153]}]}]},{"pos":[27328,27600],"content":"The <xref href=\"System.ServiceModel.WSDualHttpSecurity\"></xref> that specifies security settings used with the binding. The default value of <xref href=\"System.ServiceModel.WSDualHttpSecurityMode\"></xref> is <xref href=\"System.ServiceModel.WSDualHttpSecurityMode\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.WSDualHttpSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies security settings used with the binding.","pos":[0,119],"source":"The <xref href=\"System.ServiceModel.WSDualHttpSecurity\"></xref> that specifies security settings used with the binding."},{"content":"The default value of <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.WSDualHttpSecurityMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is <bpt id=\"p2\">&lt;xref href=\"System.ServiceModel.WSDualHttpSecurityMode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[120,272],"source":" The default value of <xref href=\"System.ServiceModel.WSDualHttpSecurityMode\"></xref> is <xref href=\"System.ServiceModel.WSDualHttpSecurityMode\"></xref>."}]},{"pos":[28155,28326],"content":"Returns a value that indicates whether the <xref:System.ServiceModel.WSDualHttpBinding.ReaderQuotas*> property has changed from its default value and should be serialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the &lt;xref:System.ServiceModel.WSDualHttpBinding.ReaderQuotas*&gt; property has changed from its default value and should be serialized.","pos":[0,171],"source":"Returns a value that indicates whether the <xref:System.ServiceModel.WSDualHttpBinding.ReaderQuotas*> property has changed from its default value and should be serialized."}]},{"pos":[28471,28709],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.ServiceModel.WSDualHttpBinding.ReaderQuotas*&gt; property value should be serialized; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.ServiceModel.WSDualHttpBinding.ReaderQuotas*> property value should be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[29298,29472],"content":"Returns a value that indicates whether the <xref:System.ServiceModel.WSDualHttpBinding.ReliableSession*> property has changed from its default value and should be serialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the &lt;xref:System.ServiceModel.WSDualHttpBinding.ReliableSession*&gt; property has changed from its default value and should be serialized.","pos":[0,174],"source":"Returns a value that indicates whether the <xref:System.ServiceModel.WSDualHttpBinding.ReliableSession*> property has changed from its default value and should be serialized."}]},{"pos":[29620,29861],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.ServiceModel.WSDualHttpBinding.ReliableSession*&gt; property value should be serialized; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.ServiceModel.WSDualHttpBinding.ReliableSession*> property value should be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[30418,30585],"content":"Returns a value that indicates whether the <xref:System.ServiceModel.WSDualHttpBinding.Security*> property has changed from its default value and should be serialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the &lt;xref:System.ServiceModel.WSDualHttpBinding.Security*&gt; property has changed from its default value and should be serialized.","pos":[0,167],"source":"Returns a value that indicates whether the <xref:System.ServiceModel.WSDualHttpBinding.Security*> property has changed from its default value and should be serialized."}]},{"pos":[30726,30960],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.ServiceModel.WSDualHttpBinding.Security*&gt; property value should be serialized; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.ServiceModel.WSDualHttpBinding.Security*> property value should be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[31530,31701],"content":"Returns a value that indicates whether the <xref:System.ServiceModel.WSDualHttpBinding.TextEncoding*> property has changed from its default value and should be serialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the &lt;xref:System.ServiceModel.WSDualHttpBinding.TextEncoding*&gt; property has changed from its default value and should be serialized.","pos":[0,171],"source":"Returns a value that indicates whether the <xref:System.ServiceModel.WSDualHttpBinding.TextEncoding*> property has changed from its default value and should be serialized."}]},{"pos":[31846,32084],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.ServiceModel.WSDualHttpBinding.TextEncoding*&gt; property value should be serialized; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.ServiceModel.WSDualHttpBinding.TextEncoding*> property value should be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[32913,33011],"content":"Gets a value that indicates whether incoming requests are handled synchronously or asynchronously.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether incoming requests are handled synchronously or asynchronously.","pos":[0,98]}]},{"pos":[33023,33083],"content":"This value can be changed by using a service model behavior.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This value can be changed by using a service model behavior.","pos":[0,60]}]},{"pos":[33798,34118],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if requests are handled synchronously; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if handled asynchronously. The value returned is always is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, to handle requests asynchronously.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if requests are handled synchronously; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if handled asynchronously.","pos":[0,189],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if requests are handled synchronously; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if handled asynchronously."},{"content":"The value returned is always is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, to handle requests asynchronously.","pos":[190,320],"source":" The value returned is always is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, to handle requests asynchronously."}]},{"pos":[34662,34732],"content":"Gets or sets the character encoding that is used for the message text.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the character encoding that is used for the message text.","pos":[0,70]}]},{"pos":[35178,35309],"content":"The <xref:System.Text.Encoding> that indicates the character encoding that is used. The default is <xref:System.Text.UTF8Encoding>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <xref:System.Text.Encoding> that indicates the character encoding that is used. The default is <xref:System.Text.UTF8Encoding>.","pos":[0,131],"nodes":[{"content":"The &lt;xref:System.Text.Encoding&gt; that indicates the character encoding that is used.","pos":[0,83],"source":"The <xref:System.Text.Encoding> that indicates the character encoding that is used."},{"content":"The default is &lt;xref:System.Text.UTF8Encoding&gt;.","pos":[84,131],"source":" The default is <xref:System.Text.UTF8Encoding>."}]}]},{"pos":[35804,35900],"content":"Gets or sets a value that indicates whether this binding should support flowing WS-Transactions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether this binding should support flowing WS-Transactions.","pos":[0,96]}]},{"pos":[35912,36048],"content":"The default value specifies that clients do not flow transactions and services reject messages with a flowed transaction message header.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default value specifies that clients do not flow transactions and services reject messages with a flowed transaction message header.","pos":[0,136]}]},{"pos":[36474,36739],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the flowing of transactions is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the flowing of transactions is supported; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,180],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the flowing of transactions is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[181,265],"source":" The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[37252,37370],"content":"Gets or sets a value that indicates whether the auto-configured HTTP proxy of the system should be used, if available.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the auto-configured HTTP proxy of the system should be used, if available.","pos":[0,118]}]},{"pos":[37829,38125],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the auto-configured HTTP proxy of the system should be used, if available; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the auto-configured HTTP proxy of the system should be used, if available; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,213],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the auto-configured HTTP proxy of the system should be used, if available; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[214,296],"source":" The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.WSDualHttpBinding\n  id: WSDualHttpBinding\n  children:\n  - System.ServiceModel.WSDualHttpBinding.#ctor\n  - System.ServiceModel.WSDualHttpBinding.#ctor(System.ServiceModel.WSDualHttpSecurityMode)\n  - System.ServiceModel.WSDualHttpBinding.#ctor(System.String)\n  - System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal\n  - System.ServiceModel.WSDualHttpBinding.ClientBaseAddress\n  - System.ServiceModel.WSDualHttpBinding.CreateBindingElements\n  - System.ServiceModel.WSDualHttpBinding.EnvelopeVersion\n  - System.ServiceModel.WSDualHttpBinding.HostNameComparisonMode\n  - System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize\n  - System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize\n  - System.ServiceModel.WSDualHttpBinding.MessageEncoding\n  - System.ServiceModel.WSDualHttpBinding.ProxyAddress\n  - System.ServiceModel.WSDualHttpBinding.ReaderQuotas\n  - System.ServiceModel.WSDualHttpBinding.ReliableSession\n  - System.ServiceModel.WSDualHttpBinding.Scheme\n  - System.ServiceModel.WSDualHttpBinding.Security\n  - System.ServiceModel.WSDualHttpBinding.ShouldSerializeReaderQuotas\n  - System.ServiceModel.WSDualHttpBinding.ShouldSerializeReliableSession\n  - System.ServiceModel.WSDualHttpBinding.ShouldSerializeSecurity\n  - System.ServiceModel.WSDualHttpBinding.ShouldSerializeTextEncoding\n  - System.ServiceModel.WSDualHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously\n  - System.ServiceModel.WSDualHttpBinding.TextEncoding\n  - System.ServiceModel.WSDualHttpBinding.TransactionFlow\n  - System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy\n  langs:\n  - csharp\n  name: WSDualHttpBinding\n  nameWithType: WSDualHttpBinding\n  fullName: System.ServiceModel.WSDualHttpBinding\n  type: Class\n  summary: A secure and interoperable binding that is designed for use with duplex service contracts that allows both services and clients to send and receive messages.\n  remarks: \"The WSDualHttpBinding provides the same support for Web Service protocols as the <xref:System.ServiceModel.WSHttpBinding>, but for use with duplex contracts. WSDualHttpBinding only supports SOAP security and requires reliable messaging. This binding requires that the client has a public URI that provides a callback endpoint for the service. This is provided by the <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A>. A dual binding exposes the IP address of the client to the service. The client should use security to ensure that it only connects to services it trusts.  \\n  \\n By default the WSDualHttpBinding generates the following binding element stack:  \\n  \\n-   <xref:System.ServiceModel.Channels.TransactionFlowBindingElement>  \\n  \\n-   <xref:System.ServiceModel.Channels.ReliableSessionBindingElement>  \\n  \\n-   <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement>  \\n  \\n-   <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement>  \\n  \\n-   <xref:System.ServiceModel.Channels.OneWayBindingElement>  \\n  \\n-   <xref:System.ServiceModel.Channels.TextMessageEncodingBindingElement>  \\n  \\n-   <xref:System.ServiceModel.Channels.HttpTransportBindingElement>\"\n  example:\n  - \"The following example shows how to specify the `wsDualHttpBinding` binding in a configuration file.  \\n  \\n [!code-cs[S_dualhttp#134](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#134)]\"\n  syntax:\n    content: 'public class WSDualHttpBinding : System.ServiceModel.Channels.Binding, System.ServiceModel.Channels.IBindingRuntimePreferences'\n  inheritance:\n  - System.ServiceModel.Channels.Binding\n  implements:\n  - System.ServiceModel.Channels.IBindingRuntimePreferences\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.WSDualHttpBinding.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.WSDualHttpBinding\n  langs:\n  - csharp\n  name: WSDualHttpBinding()\n  nameWithType: WSDualHttpBinding.WSDualHttpBinding()\n  fullName: System.ServiceModel.WSDualHttpBinding.WSDualHttpBinding()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.WSDualHttpBinding\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the default constructor for wsDualHttpBinding.  \\n  \\n [!code-cs[S_dualhttp#1](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#1)]\\n [!code-vb[S_dualhttp#1](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#1)]\"\n  syntax:\n    content: public WSDualHttpBinding ();\n    parameters: []\n  overload: System.ServiceModel.WSDualHttpBinding.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.WSDualHttpBinding.#ctor(System.ServiceModel.WSDualHttpSecurityMode)\n  id: '#ctor(System.ServiceModel.WSDualHttpSecurityMode)'\n  parent: System.ServiceModel.WSDualHttpBinding\n  langs:\n  - csharp\n  name: WSDualHttpBinding(WSDualHttpSecurityMode)\n  nameWithType: WSDualHttpBinding.WSDualHttpBinding(WSDualHttpSecurityMode)\n  fullName: System.ServiceModel.WSDualHttpBinding.WSDualHttpBinding(WSDualHttpSecurityMode)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.WSDualHttpBinding\"></xref> class with a specified type of security used by the binding.\n  remarks: Reliable messaging is required by the <xref:System.ServiceModel.WSDualHttpBinding>, so there is no constructor that provides a switch to turn it off as there is on the <xref:System.ServiceModel.WSHttpBinding.%23ctor%28System.ServiceModel.SecurityMode%29> constructor for the <xref:System.ServiceModel.WSHttpBinding>.\n  example:\n  - \"The following example shows how to use the `wsDualHttpBinding` constructor with a security mode.  \\n  \\n [!code-cs[S_dualhttp#3](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#3)]\\n [!code-vb[S_dualhttp#3](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#3)]\"\n  syntax:\n    content: public WSDualHttpBinding (System.ServiceModel.WSDualHttpSecurityMode securityMode);\n    parameters:\n    - id: securityMode\n      type: System.ServiceModel.WSDualHttpSecurityMode\n      description: The value of <xref href=\"System.ServiceModel.WSDualHttpSecurityMode\"></xref> that specifies the type of security that is used with the SOAP message and for the client.\n  overload: System.ServiceModel.WSDualHttpBinding.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.WSDualHttpBinding.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.ServiceModel.WSDualHttpBinding\n  langs:\n  - csharp\n  name: WSDualHttpBinding(String)\n  nameWithType: WSDualHttpBinding.WSDualHttpBinding(String)\n  fullName: System.ServiceModel.WSDualHttpBinding.WSDualHttpBinding(String)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.WSDualHttpBinding\"></xref> class with a binding specified by its configuration name.\n  syntax:\n    content: public WSDualHttpBinding (string configName);\n    parameters:\n    - id: configName\n      type: System.String\n      description: The binding configuration name for the <xref href=\"System.ServiceModel.Configuration.WSHttpBindingElement\"></xref>.\n  overload: System.ServiceModel.WSDualHttpBinding.#ctor*\n  exceptions:\n  - type: System.Configuration.ConfigurationErrorsException\n    commentId: T:System.Configuration.ConfigurationErrorsException\n    description: The binding element with the name <code>configurationName</code> was not found.\n  platform:\n  - net462\n- uid: System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal\n  id: BypassProxyOnLocal\n  parent: System.ServiceModel.WSDualHttpBinding\n  langs:\n  - csharp\n  name: BypassProxyOnLocal\n  nameWithType: WSDualHttpBinding.BypassProxyOnLocal\n  fullName: System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets a value that indicates whether to bypass the proxy server for local addresses.\n  remarks: \"An Internet resource is local if it has a local address. A local address is one that is on the same computer, the local LAN or intranet and is identified, syntactically, by the lack of a period (.) as in the URIs \\\"http://webserver/\\\" and \\\"http://localhost/\\\".  \\n  \\n Setting the BypassProxyOnLocal property determines whether endpoints configured with the <xref:System.ServiceModel.WSDualHttpBinding> use the proxy server when accessing local resources.  \\n  \\n If BypassProxyOnLocal is `true`, requests to local Internet resources do not use the proxy server. Use the host name (rather than `localhost`) if you want clients to go through a proxy when talking to services on the same machine when this property is set to `true`.  \\n  \\n When BypassProxyOnLocal is `false`, all Internet requests are made through the proxy server.\"\n  example:\n  - \"The following example shows how to specify the wsDualHttpBinding binding in a configuration file.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \\n  \\n The following example sets this property to indicate that the proxy should be bypassed for local resources.  \\n  \\n [!code-cs[S_dualhttp#6](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#6)]\\n [!code-vb[S_dualhttp#6](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#6)]  \\n  \\n The value of this property can also be set in the configuration file.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public bool BypassProxyOnLocal { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to bypass the proxy server for local addresses; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.WSDualHttpBinding.ClientBaseAddress\n  id: ClientBaseAddress\n  parent: System.ServiceModel.WSDualHttpBinding\n  langs:\n  - csharp\n  name: ClientBaseAddress\n  nameWithType: WSDualHttpBinding.ClientBaseAddress\n  fullName: System.ServiceModel.WSDualHttpBinding.ClientBaseAddress\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets the base address of the client.\n  remarks: This public URI for the client provides the callback endpoint required for the service to contact the client when the contract is duplex.\n  example:\n  - \"The following example shows how to specify the wsDualHttpBinding binding in a configuration file.  \\n  \\n [!code-cs[S_dualhttp#8](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#8)]\\n [!code-vb[S_dualhttp#8](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#8)]\"\n  syntax:\n    content: public Uri ClientBaseAddress { get; set; }\n    return:\n      type: System.Uri\n      description: The <xref:System.Uri> that is the base address of the client. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.ServiceModel.WSDualHttpBinding.ClientBaseAddress*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.WSDualHttpBinding.CreateBindingElements\n  id: CreateBindingElements\n  parent: System.ServiceModel.WSDualHttpBinding\n  langs:\n  - csharp\n  name: CreateBindingElements()\n  nameWithType: WSDualHttpBinding.CreateBindingElements()\n  fullName: System.ServiceModel.WSDualHttpBinding.CreateBindingElements()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Returns an ordered collection of binding elements contained in the current binding.\n  remarks: ''\n  example:\n  - \"The following example shows how to get an ordered collection of binding elements contained in the current binding.  \\n  \\n [!code-cs[S_dualhttp#20](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#20)]\\n [!code-vb[S_dualhttp#20](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#20)]\"\n  syntax:\n    content: public override System.ServiceModel.Channels.BindingElementCollection CreateBindingElements ();\n    parameters: []\n    return:\n      type: System.ServiceModel.Channels.BindingElementCollection\n      description: A <xref:System.ServiceModel.Channels.BindingElementCollection> that includes a <xref href=\"System.ServiceModel.Channels.TransactionFlowBindingElement\"></xref> and, because a reliable session is required for the <xref href=\"System.ServiceModel.WSDualHttpBinding\"></xref>, a <xref href=\"System.ServiceModel.Channels.ReliableSessionBindingElement\"></xref>.\n  overload: System.ServiceModel.WSDualHttpBinding.CreateBindingElements*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.WSDualHttpBinding.EnvelopeVersion\n  id: EnvelopeVersion\n  parent: System.ServiceModel.WSDualHttpBinding\n  langs:\n  - csharp\n  name: EnvelopeVersion\n  nameWithType: WSDualHttpBinding.EnvelopeVersion\n  fullName: System.ServiceModel.WSDualHttpBinding.EnvelopeVersion\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets the version of SOAP that is used for messages that are processed by this binding.\n  remarks: ''\n  example:\n  - \"The following example shows how to get the version of SOAP that is used for messages that are processed by this binding.  \\n  \\n [!code-cs[S_dualhttp#21](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#21)]\\n [!code-vb[S_dualhttp#21](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#21)]\"\n  syntax:\n    content: public System.ServiceModel.EnvelopeVersion EnvelopeVersion { get; }\n    return:\n      type: System.ServiceModel.EnvelopeVersion\n      description: The value of the <xref:System.ServiceModel.EnvelopeVersion> that is used with this binding. The value must always be SOAP 1.2.\n  overload: System.ServiceModel.WSDualHttpBinding.EnvelopeVersion*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.WSDualHttpBinding.HostNameComparisonMode\n  id: HostNameComparisonMode\n  parent: System.ServiceModel.WSDualHttpBinding\n  langs:\n  - csharp\n  name: HostNameComparisonMode\n  nameWithType: WSDualHttpBinding.HostNameComparisonMode\n  fullName: System.ServiceModel.WSDualHttpBinding.HostNameComparisonMode\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.\n  remarks: ''\n  example:\n  - \"The following example shows how to specify the wsDualHttpBinding binding in a configuration file.  \\n  \\n [!code-cs[S_dualhttp#9](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#9)]\\n [!code-vb[S_dualhttp#9](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#9)]\"\n  syntax:\n    content: public System.ServiceModel.HostNameComparisonMode HostNameComparisonMode { get; set; }\n    return:\n      type: System.ServiceModel.HostNameComparisonMode\n      description: The <xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode*> value that indicates whether the hostname is used to reach the service when matching on the URI. The default value is <xref href=\"System.ServiceModel.HostNameComparisonMode\"></xref>, which ignores the hostname in the match.\n  overload: System.ServiceModel.WSDualHttpBinding.HostNameComparisonMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize\n  id: MaxBufferPoolSize\n  parent: System.ServiceModel.WSDualHttpBinding\n  langs:\n  - csharp\n  name: MaxBufferPoolSize\n  nameWithType: WSDualHttpBinding.MaxBufferPoolSize\n  fullName: System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets the maximum amount of memory, in bytes, that can be allocated for the manager of message buffers that receive messages at the endpoints configured with this binding.\n  remarks: \"The <xref:System.ServiceModel.Channels.BufferManager> minimizes the cost of using buffers with a buffer pool. Buffers are required to process messages by the service when they come out of the channel. If there is not sufficient memory in the buffer pool to process the message load, the <xref:System.ServiceModel.Channels.BufferManager> must allocate additional memory from the CLR heap, which increases the garbage collection overhead. Extensive allocation from the CLR garbage heap is an indication that the buffer pool size is too small and that performance can be improved with a larger allocation by increasing the MaxBufferPoolSize limit.  \\n  \\n The limitations on buffer size set here are for optimizing the performance of message exchanges. If a message exceeds the maximum value set for the buffer, it is not dropped. Instead, more memory is requested from the CLR heap and this incurs more garbage collection overhead than using the buffers.\"\n  example:\n  - \"The following example shows how to set the `MaxBufferPoolSize`.  \\n  \\n [!code-cs[S_dualhttp#10](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#10)]\\n [!code-vb[S_dualhttp#10](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#10)]\"\n  syntax:\n    content: public long MaxBufferPoolSize { get; set; }\n    return:\n      type: System.Int64\n      description: The maximum size, in bytes, for the pool of buffers used by an endpoint configured with this binding. The default value is 524288 bytes.\n  overload: System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize\n  id: MaxReceivedMessageSize\n  parent: System.ServiceModel.WSDualHttpBinding\n  langs:\n  - csharp\n  name: MaxReceivedMessageSize\n  nameWithType: WSDualHttpBinding.MaxReceivedMessageSize\n  fullName: System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets the maximum size, in bytes, for a message that can be received on a channel configured with this binding.\n  remarks: \"The size of the messages that can be received on the wire by services using the <xref:System.ServiceModel.WSDualHttpBinding> is bounded by the amount of memory allocated for each message. This bound on message size is intended to limit exposure to DOS-style attacks.  \\n  \\n Note that the settings for <xref:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize%2A> and <xref:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize%2A> are local behavioral settings. This means that they are not transmitted to other endpoints in metadata. If you generate a proxy to a service with a maximum message size of 2GB from metadata, the proxy still has a default value 64K. This leaves control of the appropriate bounds for message and message buffer size in the scope of local administrators.\"\n  example:\n  - \"The following example shows how to get the MaxReceivedMessageSize property.  \\n  \\n [!code-cs[S_dualhttp#22](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#22)]\\n [!code-vb[S_dualhttp#22](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#22)]\"\n  syntax:\n    content: public long MaxReceivedMessageSize { get; set; }\n    return:\n      type: System.Int64\n      description: The maximum size, in bytes, for a message that is processed by the binding. The default value is 65,536 bytes.\n  overload: System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value is less than zero.\n  platform:\n  - net462\n- uid: System.ServiceModel.WSDualHttpBinding.MessageEncoding\n  id: MessageEncoding\n  parent: System.ServiceModel.WSDualHttpBinding\n  langs:\n  - csharp\n  name: MessageEncoding\n  nameWithType: WSDualHttpBinding.MessageEncoding\n  fullName: System.ServiceModel.WSDualHttpBinding.MessageEncoding\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets whether MTOM or Text/XML is used to encode SOAP messages.\n  remarks: ''\n  example:\n  - \"The following example shows how to set the `WSMessageEncoding` property to MTOM.  \\n  \\n [!code-cs[S_dualhttp#11](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#11)]\\n [!code-vb[S_dualhttp#11](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#11)]\"\n  syntax:\n    content: public System.ServiceModel.WSMessageEncoding MessageEncoding { get; set; }\n    return:\n      type: System.ServiceModel.WSMessageEncoding\n      description: The value of <xref href=\"System.ServiceModel.WSMessageEncoding\"></xref> that indicates that MTOM or Text/XML is used to encode SOAP messages. The default value is <xref href=\"System.ServiceModel.WSMessageEncoding\"></xref>.\n  overload: System.ServiceModel.WSDualHttpBinding.MessageEncoding*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.WSDualHttpBinding.ProxyAddress\n  id: ProxyAddress\n  parent: System.ServiceModel.WSDualHttpBinding\n  langs:\n  - csharp\n  name: ProxyAddress\n  nameWithType: WSDualHttpBinding.ProxyAddress\n  fullName: System.ServiceModel.WSDualHttpBinding.ProxyAddress\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets the URI address of the HTTP proxy.\n  remarks: If the <xref:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy%2A> is set to `true`, the value of the ProxyAddress is ignored.\n  example:\n  - \"The following example shows how to specify the address of the HTTP proxy.  \\n  \\n [!code-cs[S_dualhttp#12](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#12)]\\n [!code-vb[S_dualhttp#12](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#12)]\"\n  syntax:\n    content: public Uri ProxyAddress { get; set; }\n    return:\n      type: System.Uri\n      description: A <xref:System.Uri> that serves as the address of the HTTP proxy. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.ServiceModel.WSDualHttpBinding.ProxyAddress*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.WSDualHttpBinding.ReaderQuotas\n  id: ReaderQuotas\n  parent: System.ServiceModel.WSDualHttpBinding\n  langs:\n  - csharp\n  name: ReaderQuotas\n  nameWithType: WSDualHttpBinding.ReaderQuotas\n  fullName: System.ServiceModel.WSDualHttpBinding.ReaderQuotas\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.\n  remarks: The complexity constraints include items such as a maximum element depth and a maximum length for string content within the message. The constraints protect against a class of denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources.\n  example:\n  - \"The following example shows how to get the `ReaderQuotas` property.  \\n  \\n [!code-cs[S_dualhttp#13](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#13)]\\n [!code-vb[S_dualhttp#13](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#13)]\"\n  syntax:\n    content: public System.Xml.XmlDictionaryReaderQuotas ReaderQuotas { get; set; }\n    return:\n      type: System.Xml.XmlDictionaryReaderQuotas\n      description: The <xref:System.Xml.XmlDictionaryReaderQuotas> that specifies the complexity constraints.\n  overload: System.ServiceModel.WSDualHttpBinding.ReaderQuotas*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.WSDualHttpBinding.ReliableSession\n  id: ReliableSession\n  parent: System.ServiceModel.WSDualHttpBinding\n  langs:\n  - csharp\n  name: ReliableSession\n  nameWithType: WSDualHttpBinding.ReliableSession\n  fullName: System.ServiceModel.WSDualHttpBinding.ReliableSession\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets an object that provides convenient access to the properties of a reliable session binding element that are available when using one of the system-provided bindings.\n  remarks: The reliable session is required for service configured with a <xref:System.ServiceModel.WSDualHttpBinding>.\n  example:\n  - \"The following example shows how to get the ReliableSession property.  \\n  \\n [!code-cs[S_dualhttp#14](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#14)]\\n [!code-vb[S_dualhttp#14](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#14)]\"\n  syntax:\n    content: public System.ServiceModel.ReliableSession ReliableSession { get; set; }\n    return:\n      type: System.ServiceModel.ReliableSession\n      description: The <xref href=\"System.ServiceModel.ReliableSession\"></xref> that provides convenient access to the properties of a reliable session binding element that are available when using one of the system-provided bindings.\n  overload: System.ServiceModel.WSDualHttpBinding.ReliableSession*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.WSDualHttpBinding.Scheme\n  id: Scheme\n  parent: System.ServiceModel.WSDualHttpBinding\n  langs:\n  - csharp\n  name: Scheme\n  nameWithType: WSDualHttpBinding.Scheme\n  fullName: System.ServiceModel.WSDualHttpBinding.Scheme\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets the URI transport scheme for the channels and listeners that are configured with this binding.\n  remarks: ''\n  example:\n  - \"The following example shows how to specify the wsDualHttpBinding binding in a configuration file.  \\n  \\n [!code-cs[S_dualhttp#15](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#15)]\\n [!code-vb[S_dualhttp#15](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#15)]\"\n  syntax:\n    content: public override string Scheme { get; }\n    return:\n      type: System.String\n      description: 'The transport scheme: \"http\".'\n  overload: System.ServiceModel.WSDualHttpBinding.Scheme*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.WSDualHttpBinding.Security\n  id: Security\n  parent: System.ServiceModel.WSDualHttpBinding\n  langs:\n  - csharp\n  name: Security\n  nameWithType: WSDualHttpBinding.Security\n  fullName: System.ServiceModel.WSDualHttpBinding.Security\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets an object that specifies the security settings used with this binding.\n  remarks: A dual binding exposes the IP address of the client to the service. The client should use security to ensure that it only connects to services it trusts.\n  example:\n  - \"The following example shows how to get the type of security of the binding.  \\n  \\n [!code-cs[S_dualhttp#16](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#16)]\\n [!code-vb[S_dualhttp#16](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#16)]\"\n  syntax:\n    content: public System.ServiceModel.WSDualHttpSecurity Security { get; set; }\n    return:\n      type: System.ServiceModel.WSDualHttpSecurity\n      description: The <xref href=\"System.ServiceModel.WSDualHttpSecurity\"></xref> that specifies security settings used with the binding. The default value of <xref href=\"System.ServiceModel.WSDualHttpSecurityMode\"></xref> is <xref href=\"System.ServiceModel.WSDualHttpSecurityMode\"></xref>.\n  overload: System.ServiceModel.WSDualHttpBinding.Security*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.WSDualHttpBinding.ShouldSerializeReaderQuotas\n  id: ShouldSerializeReaderQuotas\n  parent: System.ServiceModel.WSDualHttpBinding\n  langs:\n  - csharp\n  name: ShouldSerializeReaderQuotas()\n  nameWithType: WSDualHttpBinding.ShouldSerializeReaderQuotas()\n  fullName: System.ServiceModel.WSDualHttpBinding.ShouldSerializeReaderQuotas()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Returns a value that indicates whether the <xref:System.ServiceModel.WSDualHttpBinding.ReaderQuotas*> property has changed from its default value and should be serialized.\n  syntax:\n    content: public bool ShouldSerializeReaderQuotas ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.ServiceModel.WSDualHttpBinding.ReaderQuotas*> property value should be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.WSDualHttpBinding.ShouldSerializeReaderQuotas*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.WSDualHttpBinding.ShouldSerializeReliableSession\n  id: ShouldSerializeReliableSession\n  parent: System.ServiceModel.WSDualHttpBinding\n  langs:\n  - csharp\n  name: ShouldSerializeReliableSession()\n  nameWithType: WSDualHttpBinding.ShouldSerializeReliableSession()\n  fullName: System.ServiceModel.WSDualHttpBinding.ShouldSerializeReliableSession()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Returns a value that indicates whether the <xref:System.ServiceModel.WSDualHttpBinding.ReliableSession*> property has changed from its default value and should be serialized.\n  syntax:\n    content: public bool ShouldSerializeReliableSession ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.ServiceModel.WSDualHttpBinding.ReliableSession*> property value should be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.WSDualHttpBinding.ShouldSerializeReliableSession*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.WSDualHttpBinding.ShouldSerializeSecurity\n  id: ShouldSerializeSecurity\n  parent: System.ServiceModel.WSDualHttpBinding\n  langs:\n  - csharp\n  name: ShouldSerializeSecurity()\n  nameWithType: WSDualHttpBinding.ShouldSerializeSecurity()\n  fullName: System.ServiceModel.WSDualHttpBinding.ShouldSerializeSecurity()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Returns a value that indicates whether the <xref:System.ServiceModel.WSDualHttpBinding.Security*> property has changed from its default value and should be serialized.\n  syntax:\n    content: public bool ShouldSerializeSecurity ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.ServiceModel.WSDualHttpBinding.Security*> property value should be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.WSDualHttpBinding.ShouldSerializeSecurity*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.WSDualHttpBinding.ShouldSerializeTextEncoding\n  id: ShouldSerializeTextEncoding\n  parent: System.ServiceModel.WSDualHttpBinding\n  langs:\n  - csharp\n  name: ShouldSerializeTextEncoding()\n  nameWithType: WSDualHttpBinding.ShouldSerializeTextEncoding()\n  fullName: System.ServiceModel.WSDualHttpBinding.ShouldSerializeTextEncoding()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Returns a value that indicates whether the <xref:System.ServiceModel.WSDualHttpBinding.TextEncoding*> property has changed from its default value and should be serialized.\n  syntax:\n    content: public bool ShouldSerializeTextEncoding ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.ServiceModel.WSDualHttpBinding.TextEncoding*> property value should be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.WSDualHttpBinding.ShouldSerializeTextEncoding*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.WSDualHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously\n  id: System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously\n  isEii: true\n  parent: System.ServiceModel.WSDualHttpBinding\n  langs:\n  - csharp\n  name: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously\n  nameWithType: WSDualHttpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously\n  fullName: System.ServiceModel.WSDualHttpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets a value that indicates whether incoming requests are handled synchronously or asynchronously.\n  remarks: This value can be changed by using a service model behavior.\n  example:\n  - \"The following examples show how to get the <xref:System.ServiceModel.WSDualHttpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> value.  \\n  \\n [!code-cs[S_dualhttp#23](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#23)]\\n [!code-vb[S_dualhttp#23](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#23)]  \\n  \\n [!code-cs[S_dualhttp#24](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#24)]\\n [!code-vb[S_dualhttp#24](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#24)]\"\n  syntax:\n    content: bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if requests are handled synchronously; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if handled asynchronously. The value returned is always is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, to handle requests asynchronously.\n  overload: System.ServiceModel.WSDualHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.WSDualHttpBinding.TextEncoding\n  id: TextEncoding\n  parent: System.ServiceModel.WSDualHttpBinding\n  langs:\n  - csharp\n  name: TextEncoding\n  nameWithType: WSDualHttpBinding.TextEncoding\n  fullName: System.ServiceModel.WSDualHttpBinding.TextEncoding\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets the character encoding that is used for the message text.\n  remarks: ''\n  example:\n  - \"The following example shows how to get the character encoding that is used for the message text.  \\n  \\n [!code-cs[S_dualhttp#17](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#17)]\\n [!code-vb[S_dualhttp#17](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#17)]\"\n  syntax:\n    content: public System.Text.Encoding TextEncoding { get; set; }\n    return:\n      type: System.Text.Encoding\n      description: The <xref:System.Text.Encoding> that indicates the character encoding that is used. The default is <xref:System.Text.UTF8Encoding>.\n  overload: System.ServiceModel.WSDualHttpBinding.TextEncoding*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.WSDualHttpBinding.TransactionFlow\n  id: TransactionFlow\n  parent: System.ServiceModel.WSDualHttpBinding\n  langs:\n  - csharp\n  name: TransactionFlow\n  nameWithType: WSDualHttpBinding.TransactionFlow\n  fullName: System.ServiceModel.WSDualHttpBinding.TransactionFlow\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets a value that indicates whether this binding should support flowing WS-Transactions.\n  remarks: The default value specifies that clients do not flow transactions and services reject messages with a flowed transaction message header.\n  example:\n  - \"The following example shows how to set the `TransactionFlow` property to support the flowing of transactions.  \\n  \\n [!code-cs[S_dualhttp#18](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#18)]\\n [!code-vb[S_dualhttp#18](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#18)]\"\n  syntax:\n    content: public bool TransactionFlow { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the flowing of transactions is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.WSDualHttpBinding.TransactionFlow*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy\n  id: UseDefaultWebProxy\n  parent: System.ServiceModel.WSDualHttpBinding\n  langs:\n  - csharp\n  name: UseDefaultWebProxy\n  nameWithType: WSDualHttpBinding.UseDefaultWebProxy\n  fullName: System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets a value that indicates whether the auto-configured HTTP proxy of the system should be used, if available.\n  remarks: ''\n  example:\n  - \"The following example shows how to set the `UseDefaultWebProxy` property to use the auto-configured HTTP proxy of the system.  \\n  \\n [!code-cs[S_dualhttp#19](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#19)]\\n [!code-vb[S_dualhttp#19](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#19)]\"\n  syntax:\n    content: public bool UseDefaultWebProxy { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the auto-configured HTTP proxy of the system should be used, if available; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: System.ServiceModel.Channels.Binding\n- uid: System.Configuration.ConfigurationErrorsException\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationErrorsException\n  nameWithType: ConfigurationErrorsException\n  fullName: System.Configuration.ConfigurationErrorsException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.ServiceModel.WSDualHttpBinding.#ctor\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: WSDualHttpBinding()\n  nameWithType: WSDualHttpBinding.WSDualHttpBinding()\n  fullName: System.ServiceModel.WSDualHttpBinding.WSDualHttpBinding()\n- uid: System.ServiceModel.WSDualHttpBinding.#ctor(System.ServiceModel.WSDualHttpSecurityMode)\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: WSDualHttpBinding(WSDualHttpSecurityMode)\n  nameWithType: WSDualHttpBinding.WSDualHttpBinding(WSDualHttpSecurityMode)\n  fullName: System.ServiceModel.WSDualHttpBinding.WSDualHttpBinding(WSDualHttpSecurityMode)\n- uid: System.ServiceModel.WSDualHttpSecurityMode\n  parent: System.ServiceModel\n  isExternal: false\n  name: WSDualHttpSecurityMode\n  nameWithType: WSDualHttpSecurityMode\n  fullName: System.ServiceModel.WSDualHttpSecurityMode\n- uid: System.ServiceModel.WSDualHttpBinding.#ctor(System.String)\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: WSDualHttpBinding(String)\n  nameWithType: WSDualHttpBinding.WSDualHttpBinding(String)\n  fullName: System.ServiceModel.WSDualHttpBinding.WSDualHttpBinding(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: BypassProxyOnLocal\n  nameWithType: WSDualHttpBinding.BypassProxyOnLocal\n  fullName: System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.WSDualHttpBinding.ClientBaseAddress\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: ClientBaseAddress\n  nameWithType: WSDualHttpBinding.ClientBaseAddress\n  fullName: System.ServiceModel.WSDualHttpBinding.ClientBaseAddress\n- uid: System.Uri\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.ServiceModel.WSDualHttpBinding.CreateBindingElements\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: CreateBindingElements()\n  nameWithType: WSDualHttpBinding.CreateBindingElements()\n  fullName: System.ServiceModel.WSDualHttpBinding.CreateBindingElements()\n- uid: System.ServiceModel.Channels.BindingElementCollection\n  parent: System.ServiceModel.Channels\n  isExternal: true\n  name: BindingElementCollection\n  nameWithType: BindingElementCollection\n  fullName: System.ServiceModel.Channels.BindingElementCollection\n- uid: System.ServiceModel.WSDualHttpBinding.EnvelopeVersion\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: EnvelopeVersion\n  nameWithType: WSDualHttpBinding.EnvelopeVersion\n  fullName: System.ServiceModel.WSDualHttpBinding.EnvelopeVersion\n- uid: System.ServiceModel.EnvelopeVersion\n  parent: System.ServiceModel\n  isExternal: true\n  name: EnvelopeVersion\n  nameWithType: EnvelopeVersion\n  fullName: System.ServiceModel.EnvelopeVersion\n- uid: System.ServiceModel.WSDualHttpBinding.HostNameComparisonMode\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: HostNameComparisonMode\n  nameWithType: WSDualHttpBinding.HostNameComparisonMode\n  fullName: System.ServiceModel.WSDualHttpBinding.HostNameComparisonMode\n- uid: System.ServiceModel.HostNameComparisonMode\n  parent: System.ServiceModel\n  isExternal: false\n  name: HostNameComparisonMode\n  nameWithType: HostNameComparisonMode\n  fullName: System.ServiceModel.HostNameComparisonMode\n- uid: System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: MaxBufferPoolSize\n  nameWithType: WSDualHttpBinding.MaxBufferPoolSize\n  fullName: System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize\n- uid: System.Int64\n  parent: System\n  isExternal: true\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: MaxReceivedMessageSize\n  nameWithType: WSDualHttpBinding.MaxReceivedMessageSize\n  fullName: System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize\n- uid: System.ServiceModel.WSDualHttpBinding.MessageEncoding\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: MessageEncoding\n  nameWithType: WSDualHttpBinding.MessageEncoding\n  fullName: System.ServiceModel.WSDualHttpBinding.MessageEncoding\n- uid: System.ServiceModel.WSMessageEncoding\n  parent: System.ServiceModel\n  isExternal: false\n  name: WSMessageEncoding\n  nameWithType: WSMessageEncoding\n  fullName: System.ServiceModel.WSMessageEncoding\n- uid: System.ServiceModel.WSDualHttpBinding.ProxyAddress\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: ProxyAddress\n  nameWithType: WSDualHttpBinding.ProxyAddress\n  fullName: System.ServiceModel.WSDualHttpBinding.ProxyAddress\n- uid: System.ServiceModel.WSDualHttpBinding.ReaderQuotas\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: ReaderQuotas\n  nameWithType: WSDualHttpBinding.ReaderQuotas\n  fullName: System.ServiceModel.WSDualHttpBinding.ReaderQuotas\n- uid: System.Xml.XmlDictionaryReaderQuotas\n  parent: System.Xml\n  isExternal: true\n  name: XmlDictionaryReaderQuotas\n  nameWithType: XmlDictionaryReaderQuotas\n  fullName: System.Xml.XmlDictionaryReaderQuotas\n- uid: System.ServiceModel.WSDualHttpBinding.ReliableSession\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: ReliableSession\n  nameWithType: WSDualHttpBinding.ReliableSession\n  fullName: System.ServiceModel.WSDualHttpBinding.ReliableSession\n- uid: System.ServiceModel.ReliableSession\n  parent: System.ServiceModel\n  isExternal: false\n  name: ReliableSession\n  nameWithType: ReliableSession\n  fullName: System.ServiceModel.ReliableSession\n- uid: System.ServiceModel.WSDualHttpBinding.Scheme\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: Scheme\n  nameWithType: WSDualHttpBinding.Scheme\n  fullName: System.ServiceModel.WSDualHttpBinding.Scheme\n- uid: System.ServiceModel.WSDualHttpBinding.Security\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: Security\n  nameWithType: WSDualHttpBinding.Security\n  fullName: System.ServiceModel.WSDualHttpBinding.Security\n- uid: System.ServiceModel.WSDualHttpSecurity\n  parent: System.ServiceModel\n  isExternal: false\n  name: WSDualHttpSecurity\n  nameWithType: WSDualHttpSecurity\n  fullName: System.ServiceModel.WSDualHttpSecurity\n- uid: System.ServiceModel.WSDualHttpBinding.ShouldSerializeReaderQuotas\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: ShouldSerializeReaderQuotas()\n  nameWithType: WSDualHttpBinding.ShouldSerializeReaderQuotas()\n  fullName: System.ServiceModel.WSDualHttpBinding.ShouldSerializeReaderQuotas()\n- uid: System.ServiceModel.WSDualHttpBinding.ShouldSerializeReliableSession\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: ShouldSerializeReliableSession()\n  nameWithType: WSDualHttpBinding.ShouldSerializeReliableSession()\n  fullName: System.ServiceModel.WSDualHttpBinding.ShouldSerializeReliableSession()\n- uid: System.ServiceModel.WSDualHttpBinding.ShouldSerializeSecurity\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: ShouldSerializeSecurity()\n  nameWithType: WSDualHttpBinding.ShouldSerializeSecurity()\n  fullName: System.ServiceModel.WSDualHttpBinding.ShouldSerializeSecurity()\n- uid: System.ServiceModel.WSDualHttpBinding.ShouldSerializeTextEncoding\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: ShouldSerializeTextEncoding()\n  nameWithType: WSDualHttpBinding.ShouldSerializeTextEncoding()\n  fullName: System.ServiceModel.WSDualHttpBinding.ShouldSerializeTextEncoding()\n- uid: System.ServiceModel.WSDualHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously\n  nameWithType: WSDualHttpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously\n  fullName: System.ServiceModel.WSDualHttpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously\n- uid: System.ServiceModel.WSDualHttpBinding.TextEncoding\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: TextEncoding\n  nameWithType: WSDualHttpBinding.TextEncoding\n  fullName: System.ServiceModel.WSDualHttpBinding.TextEncoding\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: true\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.ServiceModel.WSDualHttpBinding.TransactionFlow\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: TransactionFlow\n  nameWithType: WSDualHttpBinding.TransactionFlow\n  fullName: System.ServiceModel.WSDualHttpBinding.TransactionFlow\n- uid: System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: UseDefaultWebProxy\n  nameWithType: WSDualHttpBinding.UseDefaultWebProxy\n  fullName: System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy\n- uid: System.ServiceModel.WSDualHttpBinding.#ctor*\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: WSDualHttpBinding\n  nameWithType: WSDualHttpBinding.WSDualHttpBinding\n- uid: System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal*\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: BypassProxyOnLocal\n  nameWithType: WSDualHttpBinding.BypassProxyOnLocal\n- uid: System.ServiceModel.WSDualHttpBinding.ClientBaseAddress*\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: ClientBaseAddress\n  nameWithType: WSDualHttpBinding.ClientBaseAddress\n- uid: System.ServiceModel.WSDualHttpBinding.CreateBindingElements*\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: CreateBindingElements\n  nameWithType: WSDualHttpBinding.CreateBindingElements\n- uid: System.ServiceModel.WSDualHttpBinding.EnvelopeVersion*\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: EnvelopeVersion\n  nameWithType: WSDualHttpBinding.EnvelopeVersion\n- uid: System.ServiceModel.WSDualHttpBinding.HostNameComparisonMode*\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: HostNameComparisonMode\n  nameWithType: WSDualHttpBinding.HostNameComparisonMode\n- uid: System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize*\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: MaxBufferPoolSize\n  nameWithType: WSDualHttpBinding.MaxBufferPoolSize\n- uid: System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize*\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: MaxReceivedMessageSize\n  nameWithType: WSDualHttpBinding.MaxReceivedMessageSize\n- uid: System.ServiceModel.WSDualHttpBinding.MessageEncoding*\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: MessageEncoding\n  nameWithType: WSDualHttpBinding.MessageEncoding\n- uid: System.ServiceModel.WSDualHttpBinding.ProxyAddress*\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: ProxyAddress\n  nameWithType: WSDualHttpBinding.ProxyAddress\n- uid: System.ServiceModel.WSDualHttpBinding.ReaderQuotas*\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: ReaderQuotas\n  nameWithType: WSDualHttpBinding.ReaderQuotas\n- uid: System.ServiceModel.WSDualHttpBinding.ReliableSession*\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: ReliableSession\n  nameWithType: WSDualHttpBinding.ReliableSession\n- uid: System.ServiceModel.WSDualHttpBinding.Scheme*\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: Scheme\n  nameWithType: WSDualHttpBinding.Scheme\n- uid: System.ServiceModel.WSDualHttpBinding.Security*\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: Security\n  nameWithType: WSDualHttpBinding.Security\n- uid: System.ServiceModel.WSDualHttpBinding.ShouldSerializeReaderQuotas*\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: ShouldSerializeReaderQuotas\n  nameWithType: WSDualHttpBinding.ShouldSerializeReaderQuotas\n- uid: System.ServiceModel.WSDualHttpBinding.ShouldSerializeReliableSession*\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: ShouldSerializeReliableSession\n  nameWithType: WSDualHttpBinding.ShouldSerializeReliableSession\n- uid: System.ServiceModel.WSDualHttpBinding.ShouldSerializeSecurity*\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: ShouldSerializeSecurity\n  nameWithType: WSDualHttpBinding.ShouldSerializeSecurity\n- uid: System.ServiceModel.WSDualHttpBinding.ShouldSerializeTextEncoding*\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: ShouldSerializeTextEncoding\n  nameWithType: WSDualHttpBinding.ShouldSerializeTextEncoding\n- uid: System.ServiceModel.WSDualHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously*\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously\n  nameWithType: WSDualHttpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously\n- uid: System.ServiceModel.WSDualHttpBinding.TextEncoding*\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: TextEncoding\n  nameWithType: WSDualHttpBinding.TextEncoding\n- uid: System.ServiceModel.WSDualHttpBinding.TransactionFlow*\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: TransactionFlow\n  nameWithType: WSDualHttpBinding.TransactionFlow\n- uid: System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy*\n  parent: System.ServiceModel.WSDualHttpBinding\n  isExternal: false\n  name: UseDefaultWebProxy\n  nameWithType: WSDualHttpBinding.UseDefaultWebProxy\n"}