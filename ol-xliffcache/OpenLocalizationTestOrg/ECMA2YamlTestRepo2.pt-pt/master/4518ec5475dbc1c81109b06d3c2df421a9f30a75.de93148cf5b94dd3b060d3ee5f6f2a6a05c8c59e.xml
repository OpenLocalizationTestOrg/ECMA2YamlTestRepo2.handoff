{"nodes":[{"pos":[728,865],"content":"Provides the Authenticode X.509v3 digital signature of a code assembly as evidence for policy evaluation. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides the Authenticode X.509v3 digital signature of a code assembly as evidence for policy evaluation. This class cannot be inherited.","pos":[0,137],"nodes":[{"content":"Provides the Authenticode X.509v3 digital signature of a code assembly as evidence for policy evaluation.","pos":[0,105]},{"content":"This class cannot be inherited.","pos":[106,137]}]}]},{"pos":[878,1857],"content":"The presence of Publisher evidence produces a <xref:System.Security.Permissions.PublisherIdentityPermission> in the grant set. If there is a <xref:System.Security.CodeAccessPermission.Demand%2A> for <xref:System.Security.Permissions.PublisherIdentityPermission>, the <xref:System.Security.Permissions.PublisherIdentityPermission> that corresponds to the Publisher evidence will be compared with the demanded permission.       Publisher evidence is based on Authenticode X.509v3 signatures.       By default, code access security (CAS) does not check for Publisher evidence. Unless your computer has a custom code group based on the <xref:System.Security.Policy.PublisherMembershipCondition> class, you can improve performance by bypassing Authenticode signature verification. This is accomplished by configuring the runtime to not provide Publisher evidence for CAS. For more information about how to configure this option and which applications can use it, see the  element.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The presence of Publisher evidence produces a <xref:System.Security.Permissions.PublisherIdentityPermission> in the grant set. If there is a <xref:System.Security.CodeAccessPermission.Demand%2A> for <xref:System.Security.Permissions.PublisherIdentityPermission>, the <xref:System.Security.Permissions.PublisherIdentityPermission> that corresponds to the Publisher evidence will be compared with the demanded permission.       Publisher evidence is based on Authenticode X.509v3 signatures.       By default, code access security (CAS) does not check for Publisher evidence. Unless your computer has a custom code group based on the <xref:System.Security.Policy.PublisherMembershipCondition> class, you can improve performance by bypassing Authenticode signature verification. This is accomplished by configuring the runtime to not provide Publisher evidence for CAS. For more information about how to configure this option and which applications can use it, see the  element.","pos":[0,975],"nodes":[{"content":"The presence of Publisher evidence produces a &lt;xref:System.Security.Permissions.PublisherIdentityPermission&gt; in the grant set.","pos":[0,126],"source":"The presence of Publisher evidence produces a <xref:System.Security.Permissions.PublisherIdentityPermission> in the grant set."},{"content":"If there is a &lt;xref:System.Security.CodeAccessPermission.Demand%2A&gt; for &lt;xref:System.Security.Permissions.PublisherIdentityPermission&gt;, the &lt;xref:System.Security.Permissions.PublisherIdentityPermission&gt; that corresponds to the Publisher evidence will be compared with the demanded permission.","pos":[127,419],"source":" If there is a <xref:System.Security.CodeAccessPermission.Demand%2A> for <xref:System.Security.Permissions.PublisherIdentityPermission>, the <xref:System.Security.Permissions.PublisherIdentityPermission> that corresponds to the Publisher evidence will be compared with the demanded permission."},{"content":"Publisher evidence is based on Authenticode X.509v3 signatures.","pos":[426,489]},{"content":"By default, code access security (CAS) does not check for Publisher evidence.","pos":[496,573]},{"content":"Unless your computer has a custom code group based on the &lt;xref:System.Security.Policy.PublisherMembershipCondition&gt; class, you can improve performance by bypassing Authenticode signature verification.","pos":[574,775],"source":" Unless your computer has a custom code group based on the <xref:System.Security.Policy.PublisherMembershipCondition> class, you can improve performance by bypassing Authenticode signature verification."},{"content":"This is accomplished by configuring the runtime to not provide Publisher evidence for CAS.","pos":[776,866]},{"content":"For more information about how to configure this option and which applications can use it, see the  element.","pos":[867,975]}]}]},{"pos":[2757,2931],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.Publisher\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the Authenticode X.509v3 certificate containing the publisher's public key.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Policy.Publisher\"></xref> class with the Authenticode X.509v3 certificate containing the publisher's public key."},{"pos":[3166,3302],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the software publisher's public key.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> that contains the software publisher's public key."},{"pos":[3471,3567],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">cert</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>cert</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[3930,3984],"content":"Gets the publisher's Authenticode X.509v3 certificate.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the publisher's Authenticode X.509v3 certificate.","pos":[0,54]}]},{"pos":[4203,4302],"content":"The publisher's <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The publisher's <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref>."},{"pos":[4714,4774],"content":"Creates a new object that is a copy of the current instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a new object that is a copy of the current instance.","pos":[0,60]}]},{"pos":[4958,5003],"content":"A new object that is a copy of this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new object that is a copy of this instance.","pos":[0,45]}]},{"pos":[5404,5492],"content":"Creates an equivalent copy of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.Publisher\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates an equivalent copy of the <xref href=\"System.Security.Policy.Publisher\"></xref>."},{"pos":[5615,5698],"content":"A new, identical copy of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.Publisher\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A new, identical copy of the <xref href=\"System.Security.Policy.Publisher\"></xref>."},{"pos":[6288,6427],"content":"Creates an identity permission that corresponds to the current instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.Publisher\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Creates an identity permission that corresponds to the current instance of the <xref href=\"System.Security.Policy.Publisher\"></xref> class."},{"pos":[6653,6758],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.Evidence\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from which to construct the identity permission.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.Policy.Evidence\"></xref> from which to construct the identity permission."},{"pos":[6830,6981],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.PublisherIdentityPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the specified <bpt id=\"p2\">&lt;xref href=\"System.Security.Policy.Publisher\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.Permissions.PublisherIdentityPermission\"></xref> for the specified <xref href=\"System.Security.Policy.Publisher\"></xref>."},{"pos":[7459,7574],"content":"Compares the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.Publisher\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to the specified object for equivalence.","needQuote":true,"needEscape":true,"source":"Compares the current <xref href=\"System.Security.Policy.Publisher\"></xref> to the specified object for equivalence."},{"pos":[7586,7702],"content":"<xref:System.Security.Policy.Publisher> objects are equal if they designate the same software publisher certificate.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"&lt;xref:System.Security.Policy.Publisher&gt; objects are equal if they designate the same software publisher certificate.","pos":[0,116],"source":"<xref:System.Security.Policy.Publisher> objects are equal if they designate the same software publisher certificate."}]},{"pos":[7839,7945],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.Publisher\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to test for equivalence with the current object.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.Policy.Publisher\"></xref> to test for equivalence with the current object."},{"pos":[8004,8238],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two instances of the <bpt id=\"p2\">&lt;xref href=\"System.Security.Policy.Publisher\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> class are equal; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two instances of the <xref href=\"System.Security.Policy.Publisher\"></xref> class are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8400,8499],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">o</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a <bpt id=\"p2\">&lt;xref href=\"System.Security.Policy.Publisher\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The <code>o</code> parameter is not a <xref href=\"System.Security.Policy.Publisher\"></xref> object."},{"pos":[8866,8953],"content":"Gets the hash code of the current <xref:System.Security.Policy.Publisher.Certificate*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the hash code of the current &lt;xref:System.Security.Policy.Publisher.Certificate*&gt;.","pos":[0,87],"source":"Gets the hash code of the current <xref:System.Security.Policy.Publisher.Certificate*>."}]},{"pos":[9088,9170],"content":"The hash code of the current <xref:System.Security.Policy.Publisher.Certificate*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The hash code of the current &lt;xref:System.Security.Policy.Publisher.Certificate*&gt;.","pos":[0,82],"source":"The hash code of the current <xref:System.Security.Policy.Publisher.Certificate*>."}]},{"pos":[9597,9698],"content":"Returns a string representation of the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.Publisher\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a string representation of the current <xref href=\"System.Security.Policy.Publisher\"></xref>."},{"pos":[9834,9920],"content":"A representation of the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.Publisher\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A representation of the current <xref href=\"System.Security.Policy.Publisher\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Policy.Publisher\n  id: Publisher\n  children:\n  - System.Security.Policy.Publisher.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)\n  - System.Security.Policy.Publisher.Certificate\n  - System.Security.Policy.Publisher.Clone\n  - System.Security.Policy.Publisher.Copy\n  - System.Security.Policy.Publisher.CreateIdentityPermission(System.Security.Policy.Evidence)\n  - System.Security.Policy.Publisher.Equals(System.Object)\n  - System.Security.Policy.Publisher.GetHashCode\n  - System.Security.Policy.Publisher.ToString\n  langs:\n  - csharp\n  name: Publisher\n  nameWithType: Publisher\n  fullName: System.Security.Policy.Publisher\n  type: Class\n  summary: Provides the Authenticode X.509v3 digital signature of a code assembly as evidence for policy evaluation. This class cannot be inherited.\n  remarks: \"The presence of Publisher evidence produces a <xref:System.Security.Permissions.PublisherIdentityPermission> in the grant set. If there is a <xref:System.Security.CodeAccessPermission.Demand%2A> for <xref:System.Security.Permissions.PublisherIdentityPermission>, the <xref:System.Security.Permissions.PublisherIdentityPermission> that corresponds to the Publisher evidence will be compared with the demanded permission.  \\n  \\n Publisher evidence is based on Authenticode X.509v3 signatures.  \\n  \\n By default, code access security (CAS) does not check for Publisher evidence. Unless your computer has a custom code group based on the <xref:System.Security.Policy.PublisherMembershipCondition> class, you can improve performance by bypassing Authenticode signature verification. This is accomplished by configuring the runtime to not provide Publisher evidence for CAS. For more information about how to configure this option and which applications can use it, see the  element.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class Publisher : System.Security.Policy.EvidenceBase, System.Security.Policy.IIdentityPermissionFactory\n  inheritance:\n  - System.Object\n  - System.Security.Policy.EvidenceBase\n  implements:\n  - System.Security.Policy.IIdentityPermissionFactory\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Security.Policy.Publisher.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)\n  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)'\n  parent: System.Security.Policy.Publisher\n  langs:\n  - csharp\n  name: Publisher(X509Certificate)\n  nameWithType: Publisher.Publisher(X509Certificate)\n  fullName: System.Security.Policy.Publisher.Publisher(X509Certificate)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  summary: Initializes a new instance of the <xref href=\"System.Security.Policy.Publisher\"></xref> class with the Authenticode X.509v3 certificate containing the publisher's public key.\n  syntax:\n    content: public Publisher (System.Security.Cryptography.X509Certificates.X509Certificate cert);\n    parameters:\n    - id: cert\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> that contains the software publisher's public key.\n  overload: System.Security.Policy.Publisher.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>cert</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Security.Policy.Publisher.Certificate\n  id: Certificate\n  parent: System.Security.Policy.Publisher\n  langs:\n  - csharp\n  name: Certificate\n  nameWithType: Publisher.Certificate\n  fullName: System.Security.Policy.Publisher.Certificate\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  summary: Gets the publisher's Authenticode X.509v3 certificate.\n  syntax:\n    content: public System.Security.Cryptography.X509Certificates.X509Certificate Certificate { get; }\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: The publisher's <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref>.\n  overload: System.Security.Policy.Publisher.Certificate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Policy.Publisher.Clone\n  id: Clone\n  parent: System.Security.Policy.Publisher\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: Publisher.Clone()\n  fullName: System.Security.Policy.Publisher.Clone()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  summary: Creates a new object that is a copy of the current instance.\n  syntax:\n    content: public override System.Security.Policy.EvidenceBase Clone ();\n    parameters: []\n    return:\n      type: System.Security.Policy.EvidenceBase\n      description: A new object that is a copy of this instance.\n  overload: System.Security.Policy.Publisher.Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Policy.Publisher.Copy\n  id: Copy\n  parent: System.Security.Policy.Publisher\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: Publisher.Copy()\n  fullName: System.Security.Policy.Publisher.Copy()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  summary: Creates an equivalent copy of the <xref href=\"System.Security.Policy.Publisher\"></xref>.\n  syntax:\n    content: public object Copy ();\n    parameters: []\n    return:\n      type: System.Object\n      description: A new, identical copy of the <xref href=\"System.Security.Policy.Publisher\"></xref>.\n  overload: System.Security.Policy.Publisher.Copy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Policy.Publisher.CreateIdentityPermission(System.Security.Policy.Evidence)\n  id: CreateIdentityPermission(System.Security.Policy.Evidence)\n  parent: System.Security.Policy.Publisher\n  langs:\n  - csharp\n  name: CreateIdentityPermission(Evidence)\n  nameWithType: Publisher.CreateIdentityPermission(Evidence)\n  fullName: System.Security.Policy.Publisher.CreateIdentityPermission(Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  summary: Creates an identity permission that corresponds to the current instance of the <xref href=\"System.Security.Policy.Publisher\"></xref> class.\n  syntax:\n    content: public System.Security.IPermission CreateIdentityPermission (System.Security.Policy.Evidence evidence);\n    parameters:\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: The <xref href=\"System.Security.Policy.Evidence\"></xref> from which to construct the identity permission.\n    return:\n      type: System.Security.IPermission\n      description: A <xref href=\"System.Security.Permissions.PublisherIdentityPermission\"></xref> for the specified <xref href=\"System.Security.Policy.Publisher\"></xref>.\n  overload: System.Security.Policy.Publisher.CreateIdentityPermission*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Policy.Publisher.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Security.Policy.Publisher\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: Publisher.Equals(Object)\n  fullName: System.Security.Policy.Publisher.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  summary: Compares the current <xref href=\"System.Security.Policy.Publisher\"></xref> to the specified object for equivalence.\n  remarks: <xref:System.Security.Policy.Publisher> objects are equal if they designate the same software publisher certificate.\n  syntax:\n    content: public override bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: The <xref href=\"System.Security.Policy.Publisher\"></xref> to test for equivalence with the current object.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two instances of the <xref href=\"System.Security.Policy.Publisher\"></xref> class are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Policy.Publisher.Equals*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>o</code> parameter is not a <xref href=\"System.Security.Policy.Publisher\"></xref> object.\n  platform:\n  - net462\n- uid: System.Security.Policy.Publisher.GetHashCode\n  id: GetHashCode\n  parent: System.Security.Policy.Publisher\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: Publisher.GetHashCode()\n  fullName: System.Security.Policy.Publisher.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  summary: Gets the hash code of the current <xref:System.Security.Policy.Publisher.Certificate*>.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code of the current <xref:System.Security.Policy.Publisher.Certificate*>.\n  overload: System.Security.Policy.Publisher.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Policy.Publisher.ToString\n  id: ToString\n  parent: System.Security.Policy.Publisher\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Publisher.ToString()\n  fullName: System.Security.Policy.Publisher.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  summary: Returns a string representation of the current <xref href=\"System.Security.Policy.Publisher\"></xref>.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A representation of the current <xref href=\"System.Security.Policy.Publisher\"></xref>.\n  overload: System.Security.Policy.Publisher.ToString*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.Policy.EvidenceBase\n  isExternal: false\n  name: System.Security.Policy.EvidenceBase\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Security.Policy.Publisher.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)\n  parent: System.Security.Policy.Publisher\n  isExternal: false\n  name: Publisher(X509Certificate)\n  nameWithType: Publisher.Publisher(X509Certificate)\n  fullName: System.Security.Policy.Publisher.Publisher(X509Certificate)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate\n  nameWithType: X509Certificate\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate\n- uid: System.Security.Policy.Publisher.Certificate\n  parent: System.Security.Policy.Publisher\n  isExternal: false\n  name: Certificate\n  nameWithType: Publisher.Certificate\n  fullName: System.Security.Policy.Publisher.Certificate\n- uid: System.Security.Policy.Publisher.Clone\n  parent: System.Security.Policy.Publisher\n  isExternal: false\n  name: Clone()\n  nameWithType: Publisher.Clone()\n  fullName: System.Security.Policy.Publisher.Clone()\n- uid: System.Security.Policy.Publisher.Copy\n  parent: System.Security.Policy.Publisher\n  isExternal: false\n  name: Copy()\n  nameWithType: Publisher.Copy()\n  fullName: System.Security.Policy.Publisher.Copy()\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.Policy.Publisher.CreateIdentityPermission(System.Security.Policy.Evidence)\n  parent: System.Security.Policy.Publisher\n  isExternal: false\n  name: CreateIdentityPermission(Evidence)\n  nameWithType: Publisher.CreateIdentityPermission(Evidence)\n  fullName: System.Security.Policy.Publisher.CreateIdentityPermission(Evidence)\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Security.Policy.Publisher.Equals(System.Object)\n  parent: System.Security.Policy.Publisher\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Publisher.Equals(Object)\n  fullName: System.Security.Policy.Publisher.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Policy.Publisher.GetHashCode\n  parent: System.Security.Policy.Publisher\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Publisher.GetHashCode()\n  fullName: System.Security.Policy.Publisher.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Policy.Publisher.ToString\n  parent: System.Security.Policy.Publisher\n  isExternal: false\n  name: ToString()\n  nameWithType: Publisher.ToString()\n  fullName: System.Security.Policy.Publisher.ToString()\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Policy.Publisher.#ctor*\n  parent: System.Security.Policy.Publisher\n  isExternal: false\n  name: Publisher\n  nameWithType: Publisher.Publisher\n- uid: System.Security.Policy.Publisher.Certificate*\n  parent: System.Security.Policy.Publisher\n  isExternal: false\n  name: Certificate\n  nameWithType: Publisher.Certificate\n- uid: System.Security.Policy.Publisher.Clone*\n  parent: System.Security.Policy.Publisher\n  isExternal: false\n  name: Clone\n  nameWithType: Publisher.Clone\n- uid: System.Security.Policy.Publisher.Copy*\n  parent: System.Security.Policy.Publisher\n  isExternal: false\n  name: Copy\n  nameWithType: Publisher.Copy\n- uid: System.Security.Policy.Publisher.CreateIdentityPermission*\n  parent: System.Security.Policy.Publisher\n  isExternal: false\n  name: CreateIdentityPermission\n  nameWithType: Publisher.CreateIdentityPermission\n- uid: System.Security.Policy.Publisher.Equals*\n  parent: System.Security.Policy.Publisher\n  isExternal: false\n  name: Equals\n  nameWithType: Publisher.Equals\n- uid: System.Security.Policy.Publisher.GetHashCode*\n  parent: System.Security.Policy.Publisher\n  isExternal: false\n  name: GetHashCode\n  nameWithType: Publisher.GetHashCode\n- uid: System.Security.Policy.Publisher.ToString*\n  parent: System.Security.Policy.Publisher\n  isExternal: false\n  name: ToString\n  nameWithType: Publisher.ToString\n"}