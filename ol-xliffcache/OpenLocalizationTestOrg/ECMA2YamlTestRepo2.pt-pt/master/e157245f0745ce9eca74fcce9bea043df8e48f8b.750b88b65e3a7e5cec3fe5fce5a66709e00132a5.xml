{"nodes":[{"pos":[777,962],"content":"Represents a configuration element that defines a filter element. This element is used to define the type of filter, as well as any supporting data or parameters required by the filter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a configuration element that defines a filter element. This element is used to define the type of filter, as well as any supporting data or parameters required by the filter.","pos":[0,185],"nodes":[{"content":"Represents a configuration element that defines a filter element.","pos":[0,65]},{"content":"This element is used to define the type of filter, as well as any supporting data or parameters required by the filter.","pos":[66,185]}]}]},{"pos":[4406,4523],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Routing.Configuration.FilterElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Routing.Configuration.FilterElement\"></xref> class."},{"pos":[5151,5236],"content":"Gets or sets the fully-qualified type name of the custom type to be used as a filter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the fully-qualified type name of the custom type to be used as a filter.","pos":[0,85]}]},{"pos":[5249,5899],"content":"If <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterType%2A> is set to custom, CustomType is the fully-qualified type name of the class to create. <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A> can also contain values to be used during evaluation of the CustomType filter. The CustomType must implement a constructor that accepts a string value, which contains the <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A> information.       [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)] <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If &lt;xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterType%2A&gt; is set to custom, CustomType is the fully-qualified type name of the class to create.","pos":[0,165],"source":"If <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterType%2A> is set to custom, CustomType is the fully-qualified type name of the class to create."},{"content":"&lt;xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A&gt; can also contain values to be used during evaluation of the CustomType filter.","pos":[166,321],"source":" <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A> can also contain values to be used during evaluation of the CustomType filter."},{"content":"The CustomType must implement a constructor that accepts a string value, which contains the &lt;xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A&gt; information.","pos":[322,503],"source":" The CustomType must implement a constructor that accepts a string value, which contains the <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A> information."},{"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph> &lt;xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A&gt;.","pos":[510,648],"source":"[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)] <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>."}]},{"pos":[6020,6045],"content":"The fully-qualified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The fully-qualified type.","pos":[0,25]}]},{"pos":[6596,6775],"content":"Gets or sets the filter1 data of this configuration element. This value is only used when <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterType*> is set to And.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the filter1 data of this configuration element. This value is only used when <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterType*> is set to And.","pos":[0,179],"nodes":[{"content":"Gets or sets the filter1 data of this configuration element.","pos":[0,60]},{"content":"This value is only used when &lt;xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterType*&gt; is set to And.","pos":[61,179],"source":" This value is only used when <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterType*> is set to And."}]}]},{"pos":[6787,6997],"content":"The content of Filter1 is only used during evaluation of the AND filter. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]<xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The content of Filter1 is only used during evaluation of the AND filter.","pos":[0,72]},{"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph>&lt;xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A&gt;.","pos":[73,210],"source":"[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]<xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>."}]},{"pos":[7114,7148],"content":"The filter1 value of this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"The filter1 value of this element.","pos":[0,34]}]},{"pos":[7696,7875],"content":"Gets or sets the filter2 data of this configuration element. This value is only used when <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterType*> is set to AND.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the filter2 data of this configuration element. This value is only used when <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterType*> is set to AND.","pos":[0,179],"nodes":[{"content":"Gets or sets the filter2 data of this configuration element.","pos":[0,60]},{"content":"This value is only used when &lt;xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterType*&gt; is set to AND.","pos":[61,179],"source":" This value is only used when <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterType*> is set to AND."}]}]},{"pos":[7887,8098],"content":"The content of Filter2 is only used during evaluation of the AND filters. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]<xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The content of Filter2 is only used during evaluation of the AND filters.","pos":[0,73]},{"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph>&lt;xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A&gt;.","pos":[74,211],"source":"[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]<xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>."}]},{"pos":[8215,8249],"content":"The filter2 value of this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"The filter2 value of this element.","pos":[0,34]}]},{"pos":[8812,8871],"content":"Gets or sets the filter data of this configuration element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the filter data of this configuration element.","pos":[0,59]}]},{"pos":[11384,11416],"content":"The filter data of this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"The filter data of this element.","pos":[0,32]}]},{"pos":[11982,12103],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Routing.Configuration.FilterType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of this configuration element.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.ServiceModel.Routing.Configuration.FilterType\"></xref> of this configuration element."},{"pos":[12308,12340],"content":"The filter type of this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"The filter type of this element.","pos":[0,32]}]},{"pos":[12876,12928],"content":"Gets or sets the name of this configuration element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of this configuration element.","pos":[0,52]}]},{"pos":[13042,13088],"content":"The unique name of this configuration element.","needQuote":true,"needEscape":true,"nodes":[{"content":"The unique name of this configuration element.","pos":[0,46]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Routing.Configuration.FilterElement\n  id: FilterElement\n  children:\n  - System.ServiceModel.Routing.Configuration.FilterElement.#ctor\n  - System.ServiceModel.Routing.Configuration.FilterElement.CustomType\n  - System.ServiceModel.Routing.Configuration.FilterElement.Filter1\n  - System.ServiceModel.Routing.Configuration.FilterElement.Filter2\n  - System.ServiceModel.Routing.Configuration.FilterElement.FilterData\n  - System.ServiceModel.Routing.Configuration.FilterElement.FilterType\n  - System.ServiceModel.Routing.Configuration.FilterElement.Name\n  langs:\n  - csharp\n  name: FilterElement\n  nameWithType: FilterElement\n  fullName: System.ServiceModel.Routing.Configuration.FilterElement\n  type: Class\n  summary: Represents a configuration element that defines a filter element. This element is used to define the type of filter, as well as any supporting data or parameters required by the filter.\n  syntax:\n    content: 'public class FilterElement : System.Configuration.ConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Properties\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  langs:\n  - csharp\n  name: FilterElement()\n  nameWithType: FilterElement.FilterElement()\n  fullName: System.ServiceModel.Routing.Configuration.FilterElement.FilterElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Routing.Configuration.FilterElement\"></xref> class.\n  syntax:\n    content: public FilterElement ();\n    parameters: []\n  overload: System.ServiceModel.Routing.Configuration.FilterElement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.CustomType\n  id: CustomType\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  langs:\n  - csharp\n  name: CustomType\n  nameWithType: FilterElement.CustomType\n  fullName: System.ServiceModel.Routing.Configuration.FilterElement.CustomType\n  type: Property\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Gets or sets the fully-qualified type name of the custom type to be used as a filter.\n  remarks: \"If <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterType%2A> is set to custom, CustomType is the fully-qualified type name of the class to create. <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A> can also contain values to be used during evaluation of the CustomType filter. The CustomType must implement a constructor that accepts a string value, which contains the <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A> information.  \\n  \\n [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)] <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.\"\n  syntax:\n    content: public string CustomType { get; set; }\n    return:\n      type: System.String\n      description: The fully-qualified type.\n  overload: System.ServiceModel.Routing.Configuration.FilterElement.CustomType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.Filter1\n  id: Filter1\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  langs:\n  - csharp\n  name: Filter1\n  nameWithType: FilterElement.Filter1\n  fullName: System.ServiceModel.Routing.Configuration.FilterElement.Filter1\n  type: Property\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Gets or sets the filter1 data of this configuration element. This value is only used when <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterType*> is set to And.\n  remarks: The content of Filter1 is only used during evaluation of the AND filter. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]<xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.\n  syntax:\n    content: public string Filter1 { get; set; }\n    return:\n      type: System.String\n      description: The filter1 value of this element.\n  overload: System.ServiceModel.Routing.Configuration.FilterElement.Filter1*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.Filter2\n  id: Filter2\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  langs:\n  - csharp\n  name: Filter2\n  nameWithType: FilterElement.Filter2\n  fullName: System.ServiceModel.Routing.Configuration.FilterElement.Filter2\n  type: Property\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Gets or sets the filter2 data of this configuration element. This value is only used when <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterType*> is set to AND.\n  remarks: The content of Filter2 is only used during evaluation of the AND filters. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]<xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.\n  syntax:\n    content: public string Filter2 { get; set; }\n    return:\n      type: System.String\n      description: The filter2 value of this element.\n  overload: System.ServiceModel.Routing.Configuration.FilterElement.Filter2*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.FilterData\n  id: FilterData\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  langs:\n  - csharp\n  name: FilterData\n  nameWithType: FilterElement.FilterData\n  fullName: System.ServiceModel.Routing.Configuration.FilterElement.FilterData\n  type: Property\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Gets or sets the filter data of this configuration element.\n  remarks: \"The following table describes the meaning of FilterData based on the value of <xref:System.ServiceModel.Routing.Configuration.FilterType>.  \\n  \\n|Filter  Type|Description|Filter Data Meaning|Example Filter|  \\n|------------------|-----------------|-------------------------|--------------------|  \\n|Action|Uses the ActionMessageFilter that comes with WCF.|The Action to filter upon.|\\\\<filter name=\\\"action1\\\" filterType=\\\"Action\\\" filterData=\\\"http://ACTION\\\" />|  \\n|Address|Uses the EndpointAddressMessageFilter that comes with WCF with ignore host name == true.|The address to filter upon (in the To header).|\\\\<filter name=\\\"address1\\\" filterType=\\\"Address\\\" filterData=\\\"http://host/vdir/s.svc/b\\\"  />|  \\n|AddressPrefix|Uses the PrefixEndpointAddressMessageFilter that comes with WCF with ignore host name == true.|The address to filter upon using longest prefix matching.|\\\\<filter name=\\\"prefix1\\\" filterType=\\\"AddressPrefix\\\" filterData=\\\"http://host\\\" />|  \\n|StrictAnd|A custom AndMessageFilter that always evaluates both conditions before returning.|filterData is not used, instead filter1 and filter2 have the names of the corresponding messages filters (also in the table), which should be ANDed together.|\\\\<filter name=\\\"and1\\\" filterType=\\\"And\\\" filter1=\\\"address1\\\" filter2=\\\"action1\\\" />|  \\n|Custom|A user-defined type that extends MessageFilter and has a constructor taking a string.|customType attribute is the fully-qualified type name of the class to create, filterData is the string to pass to the constructor when creating the filter.|\\\\<filter name=\\\"custom1\\\" filterType=\\\"Custom\\\" customType=\\\"CustomAssembly.CustomMsgFilter, CustomAssembly\\\" filterData=\\\"Custom Data\\\" />|  \\n|EndpointName|A custom message filter for use solely in the Routing Service, which filters messages based on the name of the service endpoint.|The name of the service endpoint, for example: “serviceEndpoint1”.  This should be one of the endpoints exposed on the Routing Service.|\\\\<filter name=\\\"stock1\\\" filterType=\\\"Endpoint\\\" filterData=\\\"SvcEndpoint\\\" />|  \\n|MatchAll|Uses the MatchAllMessageFilter that comes with WCF.|N/A|\\\\<filter name=\\\"matchAll1\\\" filterType=\\\"MatchAll\\\" />|  \\n|XPath|Uses the XPathMessageFilter that comes with WCF.|The XPath query to use when matching messages.|\\\\<filter name=\\\"XPath1\\\" filterType=\\\"XPath\\\" filterData=\\\"//ns:element\\\" />|\"\n  syntax:\n    content: public string FilterData { get; set; }\n    return:\n      type: System.String\n      description: The filter data of this element.\n  overload: System.ServiceModel.Routing.Configuration.FilterElement.FilterData*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.FilterType\n  id: FilterType\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  langs:\n  - csharp\n  name: FilterType\n  nameWithType: FilterElement.FilterType\n  fullName: System.ServiceModel.Routing.Configuration.FilterElement.FilterType\n  type: Property\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Gets or sets the <xref href=\"System.ServiceModel.Routing.Configuration.FilterType\"></xref> of this configuration element.\n  syntax:\n    content: public System.ServiceModel.Routing.Configuration.FilterType FilterType { get; set; }\n    return:\n      type: System.ServiceModel.Routing.Configuration.FilterType\n      description: The filter type of this element.\n  overload: System.ServiceModel.Routing.Configuration.FilterElement.FilterType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.Name\n  id: Name\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  langs:\n  - csharp\n  name: Name\n  nameWithType: FilterElement.Name\n  fullName: System.ServiceModel.Routing.Configuration.FilterElement.Name\n  type: Property\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Gets or sets the name of this configuration element.\n  syntax:\n    content: public string Name { get; set; }\n    return:\n      type: System.String\n      description: The unique name of this configuration element.\n  overload: System.ServiceModel.Routing.Configuration.FilterElement.Name*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: System.Configuration.ConfigurationElement\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.#ctor\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  isExternal: false\n  name: FilterElement()\n  nameWithType: FilterElement.FilterElement()\n  fullName: System.ServiceModel.Routing.Configuration.FilterElement.FilterElement()\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.CustomType\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  isExternal: false\n  name: CustomType\n  nameWithType: FilterElement.CustomType\n  fullName: System.ServiceModel.Routing.Configuration.FilterElement.CustomType\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.Filter1\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  isExternal: false\n  name: Filter1\n  nameWithType: FilterElement.Filter1\n  fullName: System.ServiceModel.Routing.Configuration.FilterElement.Filter1\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.Filter2\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  isExternal: false\n  name: Filter2\n  nameWithType: FilterElement.Filter2\n  fullName: System.ServiceModel.Routing.Configuration.FilterElement.Filter2\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.FilterData\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  isExternal: false\n  name: FilterData\n  nameWithType: FilterElement.FilterData\n  fullName: System.ServiceModel.Routing.Configuration.FilterElement.FilterData\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.FilterType\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  isExternal: false\n  name: FilterType\n  nameWithType: FilterElement.FilterType\n  fullName: System.ServiceModel.Routing.Configuration.FilterElement.FilterType\n- uid: System.ServiceModel.Routing.Configuration.FilterType\n  parent: System.ServiceModel.Routing.Configuration\n  isExternal: false\n  name: FilterType\n  nameWithType: FilterType\n  fullName: System.ServiceModel.Routing.Configuration.FilterType\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.Name\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  isExternal: false\n  name: Name\n  nameWithType: FilterElement.Name\n  fullName: System.ServiceModel.Routing.Configuration.FilterElement.Name\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.#ctor*\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  isExternal: false\n  name: FilterElement\n  nameWithType: FilterElement.FilterElement\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.CustomType*\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  isExternal: false\n  name: CustomType\n  nameWithType: FilterElement.CustomType\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.Filter1*\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  isExternal: false\n  name: Filter1\n  nameWithType: FilterElement.Filter1\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.Filter2*\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  isExternal: false\n  name: Filter2\n  nameWithType: FilterElement.Filter2\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.FilterData*\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  isExternal: false\n  name: FilterData\n  nameWithType: FilterElement.FilterData\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.FilterType*\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  isExternal: false\n  name: FilterType\n  nameWithType: FilterElement.FilterType\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.Name*\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  isExternal: false\n  name: Name\n  nameWithType: FilterElement.Name\n"}