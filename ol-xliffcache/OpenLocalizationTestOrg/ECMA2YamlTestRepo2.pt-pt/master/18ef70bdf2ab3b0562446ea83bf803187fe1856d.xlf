<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-pt">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">18ef70bdf2ab3b0562446ea83bf803187fe1856d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Input.Manipulations.ManipulationProcessor2D.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1c50648a73b45f1ab4228c3419d0462734d1dbe3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7f3e8b33bc8c32996b8197c82c9ae5ed624abf4a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Implements a multiple-input, single-output compositor for two-dimensional (2-D) transformations in a shared coordinate space.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>A ManipulationProcessor2D object treats a collection of manipulators as a composite object.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your application is then freed from the necessity of tracking and managing individual manipulators.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>A manipulation processor by itself does not cause an element to move.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your application begins a manipulation as necessary, and then receives information from a manipulation processor by listening to the &lt;xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started&gt;, &lt;xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta&gt; and &lt;xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed&gt; events.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values received via these events enable you to change the location, size or orientation of an element as needed.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>You inform a manipulation processor which types of manipulations are allowed (translate, scale, rotate) by setting the &lt;xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can then provide non-conditional logic to the transformation of the element that is being manipulated.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For instance, instead of checking if rotation is enabled before changing the orientation of an element, you can unconditionally apply the rotation factor received from the manipulation processor; if rotation is not enabled, the manipulation processor will report that no rotational change has occurred.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an element that is being manipulated is released (all manipulators are removed), you can use inertia processing to simulate friction and cause the element to gradually slow its movements before coming to a stop.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information see the &lt;xref:System.Windows.Input.Manipulations.InertiaProcessor2D&gt; class.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Creates a new <bpt id="p1">&lt;xref href="System.Windows.Input.Manipulations.ManipulationProcessor2D"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The initial set of supported manipulations.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">supportedManipulations</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not a valid combination of the <bpt id="p2">&lt;xref href="System.Windows.Input.Manipulations.Manipulations2D"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> enumeration values.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Creates a new <bpt id="p1">&lt;xref href="System.Windows.Input.Manipulations.ManipulationProcessor2D"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The initial set of supported manipulations.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Pivot information for single-manipulator rotations.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">supportedManipulations</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not a valid combination of the <bpt id="p2">&lt;xref href="System.Windows.Input.Manipulations.Manipulations2D"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> enumeration values.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Occurs when a manipulation has competed.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Forces the current manipulation to complete and raises the <bpt id="p1">&lt;xref href="System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The timestamp to complete the manipulation, in 100-nanosecond ticks.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The timestamp is less than the previous timestamp for the current manipulation.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Occurs when the manipulation origin has changed or when translation, scaling, or rotation have occurred.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Delta event and the &lt;xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta?displayProperty=fullName&gt; event are the same type.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, you can use the same event handler for both events.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets or sets the minimum radius, in coordinate units, necessary for a manipulator to participate in scaling and rotation.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a manipulator is extremely close to the center of mass of the manipulators currently being processed, a very small manipulator motion can become a very large change to rotation or scaling.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid this problem, set MinimumScaleRotateRadius to something greater than zero.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any manipulator that is closer than that distance to the center of mass will not be included in rotation and scaling operations.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>A typical value to use should be based on the likely magnitude of "accidental" motions of the manipulators.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the manipulator is a human finger touching a screen, a radius corresponding to a centimeter or so might be appropriate.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value for MinimumScaleRotateRadius must be a finite, non-negative number.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The minimum radius, in coordinate units, necessary for a manipulator to participate in scaling and rotation.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets or sets the pivot information for the manipulation processor.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Pivot property is used to provide pivot information for single-manipulator rotations.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property to null disables single-manipulator rotations.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The pivot information for the manipulation processor.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Processes the specified manipulators as a single batch action.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The parameter <ph id="ph1">`manipulators`</ph> may be an empty list or null.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this results in the number of manipulators reaching zero, the &lt;xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed&gt; event is raised.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The timestamp for the batch, in 100-nanosecond ticks.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The set of manipulators that are currently in scope.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The timestamp is less than the previous timestamp for the current manipulation.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Sets parameters on the manipulation processor.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Parameters to set.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Occurs when a new manipulation has started.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Gets or sets the current set of supported manipulations.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The current set of supported manipulations.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The property tries to set a value that is not a valid combination of the <bpt id="p1">&lt;xref href="System.Windows.Input.Manipulations.Manipulations2D"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>       enumeration values.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>