{"nodes":[{"pos":[1018,1147],"content":"Implements a double-buffered <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that can split reading and writing to different threads.","needQuote":true,"needEscape":true,"source":"Implements a double-buffered <xref href=\"System.Xaml.XamlReader\"></xref> that can split reading and writing to different threads."},{"pos":[2048,2142],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlBackgroundReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xaml.XamlBackgroundReader\"></xref> class."},{"pos":[2328,2452],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that this <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlBackgroundReader\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is based on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Xaml.XamlReader\"></xref> that this <xref href=\"System.Xaml.XamlBackgroundReader\"></xref> is based on."},{"pos":[2621,2712],"content":"<ph id=\"ph1\">&lt;code&gt;wrappedReader&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>wrappedReader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[3115,3260],"content":"Releases the unmanaged resources used by the <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlBackgroundReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and optionally releases the managed resources.","needQuote":true,"needEscape":true,"source":"Releases the unmanaged resources used by the <xref href=\"System.Xaml.XamlBackgroundReader\"></xref> and optionally releases the managed resources."},{"pos":[3272,3394],"content":"In addition to calling the base implementation, this <ph id=\"ph1\">`Dispose`</ph> implementation disposes related writers and event handlers.","needQuote":true,"needEscape":true,"extradata":"MT","source":"In addition to calling the base implementation, this `Dispose` implementation disposes related writers and event handlers."},{"pos":[3550,3715],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to release managed resources; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release managed resources; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[4152,4218],"content":"Gets a value that specifies whether line information is available.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that specifies whether line information is available.","pos":[0,66]}]},{"pos":[4333,4502],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if line information is available; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if line information is available; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[4913,4985],"content":"Gets a value that reports whether the reader position is at end-of-file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that reports whether the reader position is at end-of-file.","pos":[0,72]}]},{"pos":[5103,5273],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the position is at end-of-file; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the position is at end-of-file; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[5703,5734],"content":"Gets the line number to report.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the line number to report.","pos":[0,31]}]},{"pos":[5845,5871],"content":"The line number to report.","needQuote":true,"needEscape":true,"nodes":[{"content":"The line number to report.","pos":[0,26]}]},{"pos":[6316,6349],"content":"Gets the line position to report.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the line position to report.","pos":[0,33]}]},{"pos":[6462,6490],"content":"The line position to report.","needQuote":true,"needEscape":true,"nodes":[{"content":"The line position to report.","pos":[0,28]}]},{"pos":[6907,7032],"content":"Gets the current member at the reader position, if the reader position is on a <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlNodeType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the current member at the reader position, if the reader position is on a <xref href=\"System.Xaml.XamlNodeType\"></xref>."},{"pos":[7177,7297],"content":"The current member; or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, if the position is not on a member.","needQuote":true,"needEscape":true,"source":"The current member; or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if the position is not on a member."},{"pos":[7723,7769],"content":"Gets the XAML namespace from the current node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the XAML namespace from the current node.","pos":[0,46]}]},{"pos":[7937,8049],"content":"The XAML namespace, if it is available; otherwise, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The XAML namespace, if it is available; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[8473,8507],"content":"Gets the type of the current node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the type of the current node.","pos":[0,34]}]},{"pos":[8658,8731],"content":"A value of the <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlNodeType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration.","needQuote":true,"needEscape":true,"source":"A value of the <xref href=\"System.Xaml.XamlNodeType\"></xref> enumeration."},{"pos":[9138,9206],"content":"Provides the next XAML node from the source, if a node is available.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides the next XAML node from the source, if a node is available.","pos":[0,68]}]},{"pos":[9337,9496],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a node is available; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a node is available; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9940,10020],"content":"Gets an object that provides schema context information for the information set.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an object that provides schema context information for the information set.","pos":[0,80]}]},{"pos":[10186,10261],"content":"An object that provides schema context information for the information set.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that provides schema context information for the information set.","pos":[0,75]}]},{"pos":[10708,10940],"content":"Creates and starts a new <bpt id=\"p1\">&lt;xref href=\"System.Threading.Thread\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> (constructed from <bpt id=\"p2\">&lt;xref href=\"System.Threading.ParameterizedThreadStart\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>) that handles a named thread for the <bpt id=\"p3\">&lt;xref href=\"System.Xaml.XamlReader\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates and starts a new <xref href=\"System.Threading.Thread\"></xref> (constructed from <xref href=\"System.Threading.ParameterizedThreadStart\"></xref>) that handles a named thread for the <xref href=\"System.Xaml.XamlReader\"></xref>."},{"pos":[10952,11005],"content":"By default, the thread is named <ph id=\"ph1\">`XAML reader thread`</ph>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"By default, the thread is named `XAML reader thread`."},{"pos":[11258,11288],"content":"The thread is already started.","needQuote":true,"needEscape":true,"nodes":[{"content":"The thread is already started.","pos":[0,30]}]},{"pos":[11706,11982],"content":"Creates and starts a new <xref href=\"System.Threading.Thread\"></xref> (constructed from <xref href=\"System.Threading.ParameterizedThreadStart\"></xref>) that handles a named thread for the <xref href=\"System.Xaml.XamlReader\"></xref>. You specify the thread name as a parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates and starts a new <bpt id=\"p1\">&lt;xref href=\"System.Threading.Thread\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> (constructed from <bpt id=\"p2\">&lt;xref href=\"System.Threading.ParameterizedThreadStart\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>) that handles a named thread for the <bpt id=\"p3\">&lt;xref href=\"System.Xaml.XamlReader\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,232],"source":"Creates and starts a new <xref href=\"System.Threading.Thread\"></xref> (constructed from <xref href=\"System.Threading.ParameterizedThreadStart\"></xref>) that handles a named thread for the <xref href=\"System.Xaml.XamlReader\"></xref>."},{"content":"You specify the thread name as a parameter.","pos":[233,276]}]},{"pos":[12133,12157],"content":"The name for the thread.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name for the thread.","pos":[0,24]}]},{"pos":[12340,12370],"content":"The thread is already started.","needQuote":true,"needEscape":true,"nodes":[{"content":"The thread is already started.","pos":[0,30]}]},{"pos":[12701,12772],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the current node.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Xaml.XamlType\"></xref> of the current node."},{"pos":[12911,13094],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the current node; or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, if the current reader position is not on an object.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Xaml.XamlType\"></xref> of the current node; or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if the current reader position is not on an object."},{"pos":[13498,13533],"content":"Gets the value of the current node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the current node.","pos":[0,35]}]},{"pos":[13652,13847],"content":"The value of the current node; or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, if the current reader position is not on a <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlNodeType\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> node type.","needQuote":true,"needEscape":true,"source":"The value of the current node; or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if the current reader position is not on a <xref href=\"System.Xaml.XamlNodeType\"></xref> node type."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xaml.XamlBackgroundReader\n  id: XamlBackgroundReader\n  children:\n  - System.Xaml.XamlBackgroundReader.#ctor(System.Xaml.XamlReader)\n  - System.Xaml.XamlBackgroundReader.Dispose(System.Boolean)\n  - System.Xaml.XamlBackgroundReader.HasLineInfo\n  - System.Xaml.XamlBackgroundReader.IsEof\n  - System.Xaml.XamlBackgroundReader.LineNumber\n  - System.Xaml.XamlBackgroundReader.LinePosition\n  - System.Xaml.XamlBackgroundReader.Member\n  - System.Xaml.XamlBackgroundReader.Namespace\n  - System.Xaml.XamlBackgroundReader.NodeType\n  - System.Xaml.XamlBackgroundReader.Read\n  - System.Xaml.XamlBackgroundReader.SchemaContext\n  - System.Xaml.XamlBackgroundReader.StartThread\n  - System.Xaml.XamlBackgroundReader.StartThread(System.String)\n  - System.Xaml.XamlBackgroundReader.Type\n  - System.Xaml.XamlBackgroundReader.Value\n  langs:\n  - csharp\n  name: XamlBackgroundReader\n  nameWithType: XamlBackgroundReader\n  fullName: System.Xaml.XamlBackgroundReader\n  type: Class\n  summary: Implements a double-buffered <xref href=\"System.Xaml.XamlReader\"></xref> that can split reading and writing to different threads.\n  syntax:\n    content: 'public class XamlBackgroundReader : System.Xaml.XamlReader, System.Xaml.IXamlLineInfo'\n  inheritance:\n  - System.Object\n  - System.Xaml.XamlReader\n  implements:\n  - System.Xaml.IXamlLineInfo\n  inheritedMembers:\n  - System.Xaml.XamlReader.Close\n  - System.Xaml.XamlReader.IsDisposed\n  - System.Xaml.XamlReader.ReadSubtree\n  - System.Xaml.XamlReader.Skip\n  - System.Xaml.XamlReader.System#IDisposable#Dispose\n  platform:\n  - net462\n- uid: System.Xaml.XamlBackgroundReader.#ctor(System.Xaml.XamlReader)\n  id: '#ctor(System.Xaml.XamlReader)'\n  parent: System.Xaml.XamlBackgroundReader\n  langs:\n  - csharp\n  name: XamlBackgroundReader(XamlReader)\n  nameWithType: XamlBackgroundReader.XamlBackgroundReader(XamlReader)\n  fullName: System.Xaml.XamlBackgroundReader.XamlBackgroundReader(XamlReader)\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Initializes a new instance of the <xref href=\"System.Xaml.XamlBackgroundReader\"></xref> class.\n  syntax:\n    content: public XamlBackgroundReader (System.Xaml.XamlReader wrappedReader);\n    parameters:\n    - id: wrappedReader\n      type: System.Xaml.XamlReader\n      description: The <xref href=\"System.Xaml.XamlReader\"></xref> that this <xref href=\"System.Xaml.XamlBackgroundReader\"></xref> is based on.\n  overload: System.Xaml.XamlBackgroundReader.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>wrappedReader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Xaml.XamlBackgroundReader.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Xaml.XamlBackgroundReader\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: XamlBackgroundReader.Dispose(Boolean)\n  fullName: System.Xaml.XamlBackgroundReader.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Releases the unmanaged resources used by the <xref href=\"System.Xaml.XamlBackgroundReader\"></xref> and optionally releases the managed resources.\n  remarks: In addition to calling the base implementation, this `Dispose` implementation disposes related writers and event handlers.\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release managed resources; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xaml.XamlBackgroundReader.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlBackgroundReader.HasLineInfo\n  id: HasLineInfo\n  parent: System.Xaml.XamlBackgroundReader\n  langs:\n  - csharp\n  name: HasLineInfo\n  nameWithType: XamlBackgroundReader.HasLineInfo\n  fullName: System.Xaml.XamlBackgroundReader.HasLineInfo\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that specifies whether line information is available.\n  syntax:\n    content: public bool HasLineInfo { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if line information is available; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xaml.XamlBackgroundReader.HasLineInfo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlBackgroundReader.IsEof\n  id: IsEof\n  parent: System.Xaml.XamlBackgroundReader\n  langs:\n  - csharp\n  name: IsEof\n  nameWithType: XamlBackgroundReader.IsEof\n  fullName: System.Xaml.XamlBackgroundReader.IsEof\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that reports whether the reader position is at end-of-file.\n  syntax:\n    content: public override bool IsEof { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the position is at end-of-file; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xaml.XamlBackgroundReader.IsEof*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlBackgroundReader.LineNumber\n  id: LineNumber\n  parent: System.Xaml.XamlBackgroundReader\n  langs:\n  - csharp\n  name: LineNumber\n  nameWithType: XamlBackgroundReader.LineNumber\n  fullName: System.Xaml.XamlBackgroundReader.LineNumber\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets the line number to report.\n  syntax:\n    content: public int LineNumber { get; }\n    return:\n      type: System.Int32\n      description: The line number to report.\n  overload: System.Xaml.XamlBackgroundReader.LineNumber*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlBackgroundReader.LinePosition\n  id: LinePosition\n  parent: System.Xaml.XamlBackgroundReader\n  langs:\n  - csharp\n  name: LinePosition\n  nameWithType: XamlBackgroundReader.LinePosition\n  fullName: System.Xaml.XamlBackgroundReader.LinePosition\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets the line position to report.\n  syntax:\n    content: public int LinePosition { get; }\n    return:\n      type: System.Int32\n      description: The line position to report.\n  overload: System.Xaml.XamlBackgroundReader.LinePosition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlBackgroundReader.Member\n  id: Member\n  parent: System.Xaml.XamlBackgroundReader\n  langs:\n  - csharp\n  name: Member\n  nameWithType: XamlBackgroundReader.Member\n  fullName: System.Xaml.XamlBackgroundReader.Member\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets the current member at the reader position, if the reader position is on a <xref href=\"System.Xaml.XamlNodeType\"></xref>.\n  syntax:\n    content: public override System.Xaml.XamlMember Member { get; }\n    return:\n      type: System.Xaml.XamlMember\n      description: The current member; or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if the position is not on a member.\n  overload: System.Xaml.XamlBackgroundReader.Member*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlBackgroundReader.Namespace\n  id: Namespace\n  parent: System.Xaml.XamlBackgroundReader\n  langs:\n  - csharp\n  name: Namespace\n  nameWithType: XamlBackgroundReader.Namespace\n  fullName: System.Xaml.XamlBackgroundReader.Namespace\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets the XAML namespace from the current node.\n  syntax:\n    content: public override System.Xaml.NamespaceDeclaration Namespace { get; }\n    return:\n      type: System.Xaml.NamespaceDeclaration\n      description: The XAML namespace, if it is available; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Xaml.XamlBackgroundReader.Namespace*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlBackgroundReader.NodeType\n  id: NodeType\n  parent: System.Xaml.XamlBackgroundReader\n  langs:\n  - csharp\n  name: NodeType\n  nameWithType: XamlBackgroundReader.NodeType\n  fullName: System.Xaml.XamlBackgroundReader.NodeType\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets the type of the current node.\n  syntax:\n    content: public override System.Xaml.XamlNodeType NodeType { get; }\n    return:\n      type: System.Xaml.XamlNodeType\n      description: A value of the <xref href=\"System.Xaml.XamlNodeType\"></xref> enumeration.\n  overload: System.Xaml.XamlBackgroundReader.NodeType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlBackgroundReader.Read\n  id: Read\n  parent: System.Xaml.XamlBackgroundReader\n  langs:\n  - csharp\n  name: Read()\n  nameWithType: XamlBackgroundReader.Read()\n  fullName: System.Xaml.XamlBackgroundReader.Read()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Provides the next XAML node from the source, if a node is available.\n  syntax:\n    content: public override bool Read ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a node is available; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xaml.XamlBackgroundReader.Read*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlBackgroundReader.SchemaContext\n  id: SchemaContext\n  parent: System.Xaml.XamlBackgroundReader\n  langs:\n  - csharp\n  name: SchemaContext\n  nameWithType: XamlBackgroundReader.SchemaContext\n  fullName: System.Xaml.XamlBackgroundReader.SchemaContext\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets an object that provides schema context information for the information set.\n  syntax:\n    content: public override System.Xaml.XamlSchemaContext SchemaContext { get; }\n    return:\n      type: System.Xaml.XamlSchemaContext\n      description: An object that provides schema context information for the information set.\n  overload: System.Xaml.XamlBackgroundReader.SchemaContext*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlBackgroundReader.StartThread\n  id: StartThread\n  parent: System.Xaml.XamlBackgroundReader\n  langs:\n  - csharp\n  name: StartThread()\n  nameWithType: XamlBackgroundReader.StartThread()\n  fullName: System.Xaml.XamlBackgroundReader.StartThread()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Creates and starts a new <xref href=\"System.Threading.Thread\"></xref> (constructed from <xref href=\"System.Threading.ParameterizedThreadStart\"></xref>) that handles a named thread for the <xref href=\"System.Xaml.XamlReader\"></xref>.\n  remarks: By default, the thread is named `XAML reader thread`.\n  syntax:\n    content: public void StartThread ();\n    parameters: []\n  overload: System.Xaml.XamlBackgroundReader.StartThread*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The thread is already started.\n  platform:\n  - net462\n- uid: System.Xaml.XamlBackgroundReader.StartThread(System.String)\n  id: StartThread(System.String)\n  parent: System.Xaml.XamlBackgroundReader\n  langs:\n  - csharp\n  name: StartThread(String)\n  nameWithType: XamlBackgroundReader.StartThread(String)\n  fullName: System.Xaml.XamlBackgroundReader.StartThread(String)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Creates and starts a new <xref href=\"System.Threading.Thread\"></xref> (constructed from <xref href=\"System.Threading.ParameterizedThreadStart\"></xref>) that handles a named thread for the <xref href=\"System.Xaml.XamlReader\"></xref>. You specify the thread name as a parameter.\n  syntax:\n    content: public void StartThread (string threadName);\n    parameters:\n    - id: threadName\n      type: System.String\n      description: The name for the thread.\n  overload: System.Xaml.XamlBackgroundReader.StartThread*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The thread is already started.\n  platform:\n  - net462\n- uid: System.Xaml.XamlBackgroundReader.Type\n  id: Type\n  parent: System.Xaml.XamlBackgroundReader\n  langs:\n  - csharp\n  name: Type\n  nameWithType: XamlBackgroundReader.Type\n  fullName: System.Xaml.XamlBackgroundReader.Type\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets the <xref href=\"System.Xaml.XamlType\"></xref> of the current node.\n  syntax:\n    content: public override System.Xaml.XamlType Type { get; }\n    return:\n      type: System.Xaml.XamlType\n      description: The <xref href=\"System.Xaml.XamlType\"></xref> of the current node; or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if the current reader position is not on an object.\n  overload: System.Xaml.XamlBackgroundReader.Type*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlBackgroundReader.Value\n  id: Value\n  parent: System.Xaml.XamlBackgroundReader\n  langs:\n  - csharp\n  name: Value\n  nameWithType: XamlBackgroundReader.Value\n  fullName: System.Xaml.XamlBackgroundReader.Value\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets the value of the current node.\n  syntax:\n    content: public override object Value { get; }\n    return:\n      type: System.Object\n      description: The value of the current node; or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if the current reader position is not on a <xref href=\"System.Xaml.XamlNodeType\"></xref> node type.\n  overload: System.Xaml.XamlBackgroundReader.Value*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Xaml.XamlReader\n  isExternal: false\n  name: System.Xaml.XamlReader\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Xaml.XamlBackgroundReader.#ctor(System.Xaml.XamlReader)\n  parent: System.Xaml.XamlBackgroundReader\n  isExternal: false\n  name: XamlBackgroundReader(XamlReader)\n  nameWithType: XamlBackgroundReader.XamlBackgroundReader(XamlReader)\n  fullName: System.Xaml.XamlBackgroundReader.XamlBackgroundReader(XamlReader)\n- uid: System.Xaml.XamlBackgroundReader.Dispose(System.Boolean)\n  parent: System.Xaml.XamlBackgroundReader\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: XamlBackgroundReader.Dispose(Boolean)\n  fullName: System.Xaml.XamlBackgroundReader.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Xaml.XamlBackgroundReader.HasLineInfo\n  parent: System.Xaml.XamlBackgroundReader\n  isExternal: false\n  name: HasLineInfo\n  nameWithType: XamlBackgroundReader.HasLineInfo\n  fullName: System.Xaml.XamlBackgroundReader.HasLineInfo\n- uid: System.Xaml.XamlBackgroundReader.IsEof\n  parent: System.Xaml.XamlBackgroundReader\n  isExternal: false\n  name: IsEof\n  nameWithType: XamlBackgroundReader.IsEof\n  fullName: System.Xaml.XamlBackgroundReader.IsEof\n- uid: System.Xaml.XamlBackgroundReader.LineNumber\n  parent: System.Xaml.XamlBackgroundReader\n  isExternal: false\n  name: LineNumber\n  nameWithType: XamlBackgroundReader.LineNumber\n  fullName: System.Xaml.XamlBackgroundReader.LineNumber\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Xaml.XamlBackgroundReader.LinePosition\n  parent: System.Xaml.XamlBackgroundReader\n  isExternal: false\n  name: LinePosition\n  nameWithType: XamlBackgroundReader.LinePosition\n  fullName: System.Xaml.XamlBackgroundReader.LinePosition\n- uid: System.Xaml.XamlBackgroundReader.Member\n  parent: System.Xaml.XamlBackgroundReader\n  isExternal: false\n  name: Member\n  nameWithType: XamlBackgroundReader.Member\n  fullName: System.Xaml.XamlBackgroundReader.Member\n- uid: System.Xaml.XamlMember\n  parent: System.Xaml\n  isExternal: false\n  name: XamlMember\n  nameWithType: XamlMember\n  fullName: System.Xaml.XamlMember\n- uid: System.Xaml.XamlBackgroundReader.Namespace\n  parent: System.Xaml.XamlBackgroundReader\n  isExternal: false\n  name: Namespace\n  nameWithType: XamlBackgroundReader.Namespace\n  fullName: System.Xaml.XamlBackgroundReader.Namespace\n- uid: System.Xaml.NamespaceDeclaration\n  parent: System.Xaml\n  isExternal: false\n  name: NamespaceDeclaration\n  nameWithType: NamespaceDeclaration\n  fullName: System.Xaml.NamespaceDeclaration\n- uid: System.Xaml.XamlBackgroundReader.NodeType\n  parent: System.Xaml.XamlBackgroundReader\n  isExternal: false\n  name: NodeType\n  nameWithType: XamlBackgroundReader.NodeType\n  fullName: System.Xaml.XamlBackgroundReader.NodeType\n- uid: System.Xaml.XamlNodeType\n  parent: System.Xaml\n  isExternal: false\n  name: XamlNodeType\n  nameWithType: XamlNodeType\n  fullName: System.Xaml.XamlNodeType\n- uid: System.Xaml.XamlBackgroundReader.Read\n  parent: System.Xaml.XamlBackgroundReader\n  isExternal: false\n  name: Read()\n  nameWithType: XamlBackgroundReader.Read()\n  fullName: System.Xaml.XamlBackgroundReader.Read()\n- uid: System.Xaml.XamlBackgroundReader.SchemaContext\n  parent: System.Xaml.XamlBackgroundReader\n  isExternal: false\n  name: SchemaContext\n  nameWithType: XamlBackgroundReader.SchemaContext\n  fullName: System.Xaml.XamlBackgroundReader.SchemaContext\n- uid: System.Xaml.XamlSchemaContext\n  parent: System.Xaml\n  isExternal: false\n  name: XamlSchemaContext\n  nameWithType: XamlSchemaContext\n  fullName: System.Xaml.XamlSchemaContext\n- uid: System.Xaml.XamlBackgroundReader.StartThread\n  parent: System.Xaml.XamlBackgroundReader\n  isExternal: false\n  name: StartThread()\n  nameWithType: XamlBackgroundReader.StartThread()\n  fullName: System.Xaml.XamlBackgroundReader.StartThread()\n- uid: System.Xaml.XamlBackgroundReader.StartThread(System.String)\n  parent: System.Xaml.XamlBackgroundReader\n  isExternal: false\n  name: StartThread(String)\n  nameWithType: XamlBackgroundReader.StartThread(String)\n  fullName: System.Xaml.XamlBackgroundReader.StartThread(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Xaml.XamlBackgroundReader.Type\n  parent: System.Xaml.XamlBackgroundReader\n  isExternal: false\n  name: Type\n  nameWithType: XamlBackgroundReader.Type\n  fullName: System.Xaml.XamlBackgroundReader.Type\n- uid: System.Xaml.XamlType\n  parent: System.Xaml\n  isExternal: false\n  name: XamlType\n  nameWithType: XamlType\n  fullName: System.Xaml.XamlType\n- uid: System.Xaml.XamlBackgroundReader.Value\n  parent: System.Xaml.XamlBackgroundReader\n  isExternal: false\n  name: Value\n  nameWithType: XamlBackgroundReader.Value\n  fullName: System.Xaml.XamlBackgroundReader.Value\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Xaml.XamlBackgroundReader.#ctor*\n  parent: System.Xaml.XamlBackgroundReader\n  isExternal: false\n  name: XamlBackgroundReader\n  nameWithType: XamlBackgroundReader.XamlBackgroundReader\n- uid: System.Xaml.XamlBackgroundReader.Dispose*\n  parent: System.Xaml.XamlBackgroundReader\n  isExternal: false\n  name: Dispose\n  nameWithType: XamlBackgroundReader.Dispose\n- uid: System.Xaml.XamlBackgroundReader.HasLineInfo*\n  parent: System.Xaml.XamlBackgroundReader\n  isExternal: false\n  name: HasLineInfo\n  nameWithType: XamlBackgroundReader.HasLineInfo\n- uid: System.Xaml.XamlBackgroundReader.IsEof*\n  parent: System.Xaml.XamlBackgroundReader\n  isExternal: false\n  name: IsEof\n  nameWithType: XamlBackgroundReader.IsEof\n- uid: System.Xaml.XamlBackgroundReader.LineNumber*\n  parent: System.Xaml.XamlBackgroundReader\n  isExternal: false\n  name: LineNumber\n  nameWithType: XamlBackgroundReader.LineNumber\n- uid: System.Xaml.XamlBackgroundReader.LinePosition*\n  parent: System.Xaml.XamlBackgroundReader\n  isExternal: false\n  name: LinePosition\n  nameWithType: XamlBackgroundReader.LinePosition\n- uid: System.Xaml.XamlBackgroundReader.Member*\n  parent: System.Xaml.XamlBackgroundReader\n  isExternal: false\n  name: Member\n  nameWithType: XamlBackgroundReader.Member\n- uid: System.Xaml.XamlBackgroundReader.Namespace*\n  parent: System.Xaml.XamlBackgroundReader\n  isExternal: false\n  name: Namespace\n  nameWithType: XamlBackgroundReader.Namespace\n- uid: System.Xaml.XamlBackgroundReader.NodeType*\n  parent: System.Xaml.XamlBackgroundReader\n  isExternal: false\n  name: NodeType\n  nameWithType: XamlBackgroundReader.NodeType\n- uid: System.Xaml.XamlBackgroundReader.Read*\n  parent: System.Xaml.XamlBackgroundReader\n  isExternal: false\n  name: Read\n  nameWithType: XamlBackgroundReader.Read\n- uid: System.Xaml.XamlBackgroundReader.SchemaContext*\n  parent: System.Xaml.XamlBackgroundReader\n  isExternal: false\n  name: SchemaContext\n  nameWithType: XamlBackgroundReader.SchemaContext\n- uid: System.Xaml.XamlBackgroundReader.StartThread*\n  parent: System.Xaml.XamlBackgroundReader\n  isExternal: false\n  name: StartThread\n  nameWithType: XamlBackgroundReader.StartThread\n- uid: System.Xaml.XamlBackgroundReader.Type*\n  parent: System.Xaml.XamlBackgroundReader\n  isExternal: false\n  name: Type\n  nameWithType: XamlBackgroundReader.Type\n- uid: System.Xaml.XamlBackgroundReader.Value*\n  parent: System.Xaml.XamlBackgroundReader\n  isExternal: false\n  name: Value\n  nameWithType: XamlBackgroundReader.Value\n"}