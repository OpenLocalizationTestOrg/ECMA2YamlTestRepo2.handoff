{"nodes":[{"pos":[882,1181],"content":"Describes the thickness of a frame around a rectangle. Four <xref:System.Double> values describe the <xref:System.Windows.Thickness.Left*>, <xref:System.Windows.Thickness.Top*>, <xref:System.Windows.Thickness.Right*>, and <xref:System.Windows.Thickness.Bottom*> sides of the rectangle, respectively.","needQuote":true,"needEscape":true,"nodes":[{"content":"Describes the thickness of a frame around a rectangle.","pos":[0,54]},{"content":"Four &lt;xref:System.Double&gt; values describe the &lt;xref:System.Windows.Thickness.Left<bpt id=\"p1\">*</bpt>&gt;, &lt;xref:System.Windows.Thickness.Top<ept id=\"p1\">*</ept>&gt;, &lt;xref:System.Windows.Thickness.Right<bpt id=\"p2\">*</bpt>&gt;, and &lt;xref:System.Windows.Thickness.Bottom<ept id=\"p2\">*</ept>&gt; sides of the rectangle, respectively.","pos":[55,299],"source":" Four <xref:System.Double> values describe the <xref:System.Windows.Thickness.Left*>, <xref:System.Windows.Thickness.Top*>, <xref:System.Windows.Thickness.Right*>, and <xref:System.Windows.Thickness.Bottom*> sides of the rectangle, respectively."}]},{"pos":[1194,4102],"content":"You can specify Thickness values in two ways. If you pass four <xref:System.Double> values to the structure, they represent the <xref:System.Windows.Thickness.Left%2A>, <xref:System.Windows.Thickness.Top%2A>, <xref:System.Windows.Thickness.Right%2A> and <xref:System.Windows.Thickness.Bottom%2A> sides, respectively, of the bounding rectangle. You can also supply a single value, which applies a uniform value to all four sides of the bounding rectangle.      <a name=\"xamlAttributeUsage_Thickness\"></a>    ## XAML Attribute Usage      ```   <object property=\"left\"/>   - or -   <object property=\"left,top\"/>   - or -   <object property=\" left,top,right,bottom\" ... />   ```      <a name=\"xamlValues_Thickness\"></a>    ## XAML Values    *left*    The left edge of the frame, described as either a <xref:System.Double> value that specifies a [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)] measure, or as a *qualifiedDouble* (see below). If only a single measure is specified, that measure is applied to ALL of the left,top,right,bottom values of a Thickness. If only a pair of left,top measures are specified, these measures are applied symmetrically to a Thickness: the left value is used for right; the top value is used for bottom.       *top*    The top edge of the frame, described as either a <xref:System.Double> value that specifies a [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)] measure, or as a *qualifiedDouble* (see below). If only a pair of left,top measures are specified, these measures are applied symmetrically to a Thickness: the left value is used for right; the top value is used for bottom.       *right*    The right edge of the frame, described as either a <xref:System.Double> value that specifies a [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)] measure, or as a *qualifiedDouble* (see below). If left unspecified, will use the left value.       *bottom*    The bottom edge of the frame, described as either a <xref:System.Double> value that specifies a [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)] measure, or as a *qualifiedDouble* (see below). If left unspecified, will use the left value.       *qualifiedDouble*    A *double* value as described above for any of the measures, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       `cm` is centimeters; 1cm==(96/2.54) px       `pt` is points; 1pt==(96/72) px      > [!NOTE] >  Values need not include the decimal point explicitly when specified as a string. The string \"1\" provided in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] evaluates to a value of 1.0 when referenced in code.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can specify Thickness values in two ways.","pos":[0,45]},{"content":"If you pass four &lt;xref:System.Double&gt; values to the structure, they represent the &lt;xref:System.Windows.Thickness.Left%2A&gt;, &lt;xref:System.Windows.Thickness.Top%2A&gt;, &lt;xref:System.Windows.Thickness.Right%2A&gt; and &lt;xref:System.Windows.Thickness.Bottom%2A&gt; sides, respectively, of the bounding rectangle.","pos":[46,343],"source":" If you pass four <xref:System.Double> values to the structure, they represent the <xref:System.Windows.Thickness.Left%2A>, <xref:System.Windows.Thickness.Top%2A>, <xref:System.Windows.Thickness.Right%2A> and <xref:System.Windows.Thickness.Bottom%2A> sides, respectively, of the bounding rectangle."},{"content":"You can also supply a single value, which applies a uniform value to all four sides of the bounding rectangle.","pos":[344,454]},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlAttributeUsage_Thickness\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id=\"ph1\">```   &lt;object property=\"left\"/&gt;   - or -   &lt;object property=\"left,top\"/&gt;   - or -   &lt;object property=\" left,top,right,bottom\" ... /&gt;   ```</ph>      <bpt id=\"p2\">&lt;a name=\"xamlValues_Thickness\"&gt;</bpt><ept id=\"p2\">&lt;/a&gt;</ept>    ## XAML Values    <bpt id=\"p3\">*</bpt>left<ept id=\"p3\">*</ept>    The left edge of the frame, described as either a &lt;xref:System.Double&gt; value that specifies a <ph id=\"ph2\">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph> measure, or as a <bpt id=\"p4\">*</bpt>qualifiedDouble<ept id=\"p4\">*</ept> (see below).","pos":[460,962],"source":"<a name=\"xamlAttributeUsage_Thickness\"></a>    ## XAML Attribute Usage      ```   <object property=\"left\"/>   - or -   <object property=\"left,top\"/>   - or -   <object property=\" left,top,right,bottom\" ... />   ```      <a name=\"xamlValues_Thickness\"></a>    ## XAML Values    *left*    The left edge of the frame, described as either a <xref:System.Double> value that specifies a [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)] measure, or as a *qualifiedDouble* (see below)."},{"content":"If only a single measure is specified, that measure is applied to ALL of the left,top,right,bottom values of a Thickness.","pos":[963,1084]},{"content":"If only a pair of left,top measures are specified, these measures are applied symmetrically to a Thickness: the left value is used for right; the top value is used for bottom.","pos":[1085,1260]},{"content":"<bpt id=\"p1\">*</bpt>top<ept id=\"p1\">*</ept>    The top edge of the frame, described as either a &lt;xref:System.Double&gt; value that specifies a <ph id=\"ph1\">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph> measure, or as a <bpt id=\"p2\">*</bpt>qualifiedDouble<ept id=\"p2\">*</ept> (see below).","pos":[1267,1490],"source":"*top*    The top edge of the frame, described as either a <xref:System.Double> value that specifies a [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)] measure, or as a *qualifiedDouble* (see below)."},{"content":"If only a pair of left,top measures are specified, these measures are applied symmetrically to a Thickness: the left value is used for right; the top value is used for bottom.","pos":[1491,1666]},{"content":"<bpt id=\"p1\">*</bpt>right<ept id=\"p1\">*</ept>    The right edge of the frame, described as either a &lt;xref:System.Double&gt; value that specifies a <ph id=\"ph1\">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph> measure, or as a <bpt id=\"p2\">*</bpt>qualifiedDouble<ept id=\"p2\">*</ept> (see below).","pos":[1673,1900],"source":"*right*    The right edge of the frame, described as either a <xref:System.Double> value that specifies a [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)] measure, or as a *qualifiedDouble* (see below)."},{"content":"If left unspecified, will use the left value.","pos":[1901,1946]},{"content":"<bpt id=\"p1\">*</bpt>bottom<ept id=\"p1\">*</ept>    The bottom edge of the frame, described as either a &lt;xref:System.Double&gt; value that specifies a <ph id=\"ph1\">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph> measure, or as a <bpt id=\"p2\">*</bpt>qualifiedDouble<ept id=\"p2\">*</ept> (see below).","pos":[1953,2182],"source":"*bottom*    The bottom edge of the frame, described as either a <xref:System.Double> value that specifies a [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)] measure, or as a *qualifiedDouble* (see below)."},{"content":"If left unspecified, will use the left value.","pos":[2183,2228]},{"content":"<bpt id=\"p1\">*</bpt>qualifiedDouble<ept id=\"p1\">*</ept>    A <bpt id=\"p2\">*</bpt>double<ept id=\"p2\">*</ept> value as described above for any of the measures, followed by one of the following unit declaration strings: <ph id=\"ph1\">`px`</ph>, <ph id=\"ph2\">`in`</ph>, <ph id=\"ph3\">`cm`</ph>, <ph id=\"ph4\">`pt`</ph>.","pos":[2235,2399],"source":"*qualifiedDouble*    A *double* value as described above for any of the measures, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`."},{"content":"<ph id=\"ph1\">`px`</ph> (default) is <ph id=\"ph2\">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>       <ph id=\"ph3\">`in`</ph> is inches; 1in==96px       <ph id=\"ph4\">`cm`</ph> is centimeters; 1cm==(96/2.54) px       <ph id=\"ph5\">`pt`</ph> is points; 1pt==(96/72) px      &gt; <ph id=\"ph6\">[!NOTE]</ph> &gt;  Values need not include the decimal point explicitly when specified as a string.","pos":[2406,2711],"source":"`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       `cm` is centimeters; 1cm==(96/2.54) px       `pt` is points; 1pt==(96/72) px      > [!NOTE] >  Values need not include the decimal point explicitly when specified as a string."},{"content":"The string \"1\" provided in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> evaluates to a value of 1.0 when referenced in code.","pos":[2712,2857],"source":" The string \"1\" provided in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] evaluates to a value of 1.0 when referenced in code."}]},{"pos":[5386,5527],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Thickness\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that has the specified uniform length on each side.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Thickness\"></xref> structure that has the specified uniform length on each side."},{"pos":[5677,5748],"content":"The uniform length applied to all four sides of the bounding rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The uniform length applied to all four sides of the bounding rectangle.","pos":[0,71]}]},{"pos":[6341,6532],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Thickness\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that has specific lengths (supplied as a &lt;xref:System.Double&gt;) applied to each side of the rectangle.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Thickness\"></xref> structure that has specific lengths (supplied as a <xref:System.Double>) applied to each side of the rectangle."},{"pos":[7135,7184],"content":"The thickness for the left side of the rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The thickness for the left side of the rectangle.","pos":[0,49]}]},{"pos":[7244,7294],"content":"The thickness for the upper side of the rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The thickness for the upper side of the rectangle.","pos":[0,50]}]},{"pos":[7356,7405],"content":"The thickness for the right side of the rectangle","needQuote":true,"needEscape":true,"nodes":[{"content":"The thickness for the right side of the rectangle","pos":[0,49]}]},{"pos":[7468,7518],"content":"The thickness for the lower side of the rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The thickness for the lower side of the rectangle.","pos":[0,50]}]},{"pos":[7898,7977],"content":"Gets or sets the width, in pixels, of the lower side of the bounding rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the width, in pixels, of the lower side of the bounding rectangle.","pos":[0,79]}]},{"pos":[8562,8789],"content":"A <xref:System.Double> that represents the width, in pixels, of the lower side of the bounding rectangle for this instance of <xref href=\"System.Windows.Thickness\"></xref>. A pixel is equal to 1/96 of an inch. The default is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Double&gt; that represents the width, in pixels, of the lower side of the bounding rectangle for this instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Thickness\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,172],"source":"A <xref:System.Double> that represents the width, in pixels, of the lower side of the bounding rectangle for this instance of <xref href=\"System.Windows.Thickness\"></xref>."},{"content":"A pixel is equal to 1/96 of an inch.","pos":[173,209]},{"content":"The default is 0.","pos":[210,227]}]},{"pos":[9222,9337],"content":"Compares this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Thickness\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to another &lt;xref:System.Object&gt; for equality.","needQuote":true,"needEscape":true,"source":"Compares this <xref href=\"System.Windows.Thickness\"></xref> structure to another <xref:System.Object> for equality."},{"pos":[9349,9518],"content":"Testing for equality on two floating-point values that are logically equivalent might fail because of precision errors that can accumulate as the values are operated on.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Testing for equality on two floating-point values that are logically equivalent might fail because of precision errors that can accumulate as the values are operated on.","pos":[0,169]}]},{"pos":[9659,9681],"content":"The object to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to compare.","pos":[0,22]}]},{"pos":[9740,9905],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two objects are equal; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two objects are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10369,10519],"content":"Compares this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Thickness\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to another <bpt id=\"p2\">&lt;xref href=\"System.Windows.Thickness\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure for equality.","needQuote":true,"needEscape":true,"source":"Compares this <xref href=\"System.Windows.Thickness\"></xref> structure to another <xref href=\"System.Windows.Thickness\"></xref> structure for equality."},{"pos":[10531,10714],"content":"Testing for equality or inequality on two floating-point values that are logically equivalent might fail because of precision errors that can accumulate as the values are operated on.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Testing for equality or inequality on two floating-point values that are logically equivalent might fail because of precision errors that can accumulate as the values are operated on.","pos":[0,183]}]},{"pos":[10887,10972],"content":"An instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Thickness\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare for equality.","needQuote":true,"needEscape":true,"source":"An instance of <xref href=\"System.Windows.Thickness\"></xref> to compare for equality."},{"pos":[11031,11247],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two instances of <bpt id=\"p2\">&lt;xref href=\"System.Windows.Thickness\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> are equal; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two instances of <xref href=\"System.Windows.Thickness\"></xref> are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11657,11696],"content":"Returns the hash code of the structure.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the hash code of the structure.","pos":[0,39]}]},{"pos":[11831,11910],"content":"A hash code for this instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Thickness\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A hash code for this instance of <xref href=\"System.Windows.Thickness\"></xref>."},{"pos":[12286,12364],"content":"Gets or sets the width, in pixels, of the left side of the bounding rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the width, in pixels, of the left side of the bounding rectangle.","pos":[0,78]}]},{"pos":[12945,13171],"content":"A <xref:System.Double> that represents the width, in pixels, of the left side of the bounding rectangle for this instance of <xref href=\"System.Windows.Thickness\"></xref>. a pixel is equal to 1/96 on an inch. The default is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Double&gt; that represents the width, in pixels, of the left side of the bounding rectangle for this instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Thickness\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,171],"source":"A <xref:System.Double> that represents the width, in pixels, of the left side of the bounding rectangle for this instance of <xref href=\"System.Windows.Thickness\"></xref>."},{"content":"a pixel is equal to 1/96 on an inch.","pos":[172,208]},{"content":"The default is 0.","pos":[209,226]}]},{"pos":[13740,13836],"content":"Compares the value of two <bpt id=\"p1\">&lt;xref href=\"System.Windows.Thickness\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures for equality.","needQuote":true,"needEscape":true,"source":"Compares the value of two <xref href=\"System.Windows.Thickness\"></xref> structures for equality."},{"pos":[13848,14017],"content":"Testing for equality on two floating-point values that are logically equivalent might fail because of precision errors that can accumulate as the values are operated on.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Testing for equality on two floating-point values that are logically equivalent might fail because of precision errors that can accumulate as the values are operated on.","pos":[0,169]}]},{"pos":[14217,14248],"content":"The first structure to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first structure to compare.","pos":[0,31]}]},{"pos":[14318,14349],"content":"The other structure to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The other structure to compare.","pos":[0,31]}]},{"pos":[14408,14624],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two instances of <bpt id=\"p2\">&lt;xref href=\"System.Windows.Thickness\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> are equal; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two instances of <xref href=\"System.Windows.Thickness\"></xref> are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[15210,15295],"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.Windows.Thickness\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures for inequality.","needQuote":true,"needEscape":true,"source":"Compares two <xref href=\"System.Windows.Thickness\"></xref> structures for inequality."},{"pos":[15307,15490],"content":"Testing for equality or inequality on two floating-point values that are logically equivalent might fail because of precision errors that can accumulate as the values are operated on.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Testing for equality or inequality on two floating-point values that are logically equivalent might fail because of precision errors that can accumulate as the values are operated on.","pos":[0,183]}]},{"pos":[15692,15723],"content":"The first structure to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first structure to compare.","pos":[0,31]}]},{"pos":[15793,15824],"content":"The other structure to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The other structure to compare.","pos":[0,31]}]},{"pos":[15883,16103],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two instances of <bpt id=\"p2\">&lt;xref href=\"System.Windows.Thickness\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> are not equal; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two instances of <xref href=\"System.Windows.Thickness\"></xref> are not equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[16486,16565],"content":"Gets or sets the width, in pixels, of the right side of the bounding rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the width, in pixels, of the right side of the bounding rectangle.","pos":[0,79]}]},{"pos":[17148,17375],"content":"A <xref:System.Double> that represents the width, in pixels, of the right side of the bounding rectangle for this instance of <xref href=\"System.Windows.Thickness\"></xref>. A pixel is equal to 1/96 of an inch. The default is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Double&gt; that represents the width, in pixels, of the right side of the bounding rectangle for this instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Thickness\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,172],"source":"A <xref:System.Double> that represents the width, in pixels, of the right side of the bounding rectangle for this instance of <xref href=\"System.Windows.Thickness\"></xref>."},{"content":"A pixel is equal to 1/96 of an inch.","pos":[173,209]},{"content":"The default is 0.","pos":[210,227]}]},{"pos":[17740,17819],"content":"Gets or sets the width, in pixels, of the upper side of the bounding rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the width, in pixels, of the upper side of the bounding rectangle.","pos":[0,79]}]},{"pos":[18398,18625],"content":"A <xref:System.Double> that represents the width, in pixels, of the upper side of the bounding rectangle for this instance of <xref href=\"System.Windows.Thickness\"></xref>. A pixel is equal to 1/96 of an inch. The default is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Double&gt; that represents the width, in pixels, of the upper side of the bounding rectangle for this instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Thickness\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,172],"source":"A <xref:System.Double> that represents the width, in pixels, of the upper side of the bounding rectangle for this instance of <xref href=\"System.Windows.Thickness\"></xref>."},{"content":"A pixel is equal to 1/96 of an inch.","pos":[173,209]},{"content":"The default is 0.","pos":[210,227]}]},{"pos":[19017,19114],"content":"Returns the string representation of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Thickness\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Returns the string representation of the <xref href=\"System.Windows.Thickness\"></xref> structure."},{"pos":[19250,19345],"content":"A &lt;xref:System.String&gt; that represents the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Thickness\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"A <xref:System.String> that represents the <xref href=\"System.Windows.Thickness\"></xref> value."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Thickness\n  id: Thickness\n  children:\n  - System.Windows.Thickness.#ctor(System.Double)\n  - System.Windows.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)\n  - System.Windows.Thickness.Bottom\n  - System.Windows.Thickness.Equals(System.Object)\n  - System.Windows.Thickness.Equals(System.Windows.Thickness)\n  - System.Windows.Thickness.GetHashCode\n  - System.Windows.Thickness.Left\n  - System.Windows.Thickness.op_Equality(System.Windows.Thickness,System.Windows.Thickness)\n  - System.Windows.Thickness.op_Inequality(System.Windows.Thickness,System.Windows.Thickness)\n  - System.Windows.Thickness.Right\n  - System.Windows.Thickness.Top\n  - System.Windows.Thickness.ToString\n  langs:\n  - csharp\n  name: Thickness\n  nameWithType: Thickness\n  fullName: System.Windows.Thickness\n  type: Struct\n  summary: Describes the thickness of a frame around a rectangle. Four <xref:System.Double> values describe the <xref:System.Windows.Thickness.Left*>, <xref:System.Windows.Thickness.Top*>, <xref:System.Windows.Thickness.Right*>, and <xref:System.Windows.Thickness.Bottom*> sides of the rectangle, respectively.\n  remarks: \"You can specify Thickness values in two ways. If you pass four <xref:System.Double> values to the structure, they represent the <xref:System.Windows.Thickness.Left%2A>, <xref:System.Windows.Thickness.Top%2A>, <xref:System.Windows.Thickness.Right%2A> and <xref:System.Windows.Thickness.Bottom%2A> sides, respectively, of the bounding rectangle. You can also supply a single value, which applies a uniform value to all four sides of the bounding rectangle.  \\n  \\n<a name=\\\"xamlAttributeUsage_Thickness\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object property=\\\"left\\\"/>  \\n- or -  \\n<object property=\\\"left,top\\\"/>  \\n- or -  \\n<object property=\\\" left,top,right,bottom\\\" ... />  \\n```  \\n  \\n<a name=\\\"xamlValues_Thickness\\\"></a>   \\n## XAML Values  \\n *left*  \\n The left edge of the frame, described as either a <xref:System.Double> value that specifies a [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)] measure, or as a *qualifiedDouble* (see below). If only a single measure is specified, that measure is applied to ALL of the left,top,right,bottom values of a Thickness. If only a pair of left,top measures are specified, these measures are applied symmetrically to a Thickness: the left value is used for right; the top value is used for bottom.  \\n  \\n *top*  \\n The top edge of the frame, described as either a <xref:System.Double> value that specifies a [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)] measure, or as a *qualifiedDouble* (see below). If only a pair of left,top measures are specified, these measures are applied symmetrically to a Thickness: the left value is used for right; the top value is used for bottom.  \\n  \\n *right*  \\n The right edge of the frame, described as either a <xref:System.Double> value that specifies a [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)] measure, or as a *qualifiedDouble* (see below). If left unspecified, will use the left value.  \\n  \\n *bottom*  \\n The bottom edge of the frame, described as either a <xref:System.Double> value that specifies a [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)] measure, or as a *qualifiedDouble* (see below). If left unspecified, will use the left value.  \\n  \\n *qualifiedDouble*  \\n A *double* value as described above for any of the measures, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.  \\n  \\n `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n `in` is inches; 1in==96px  \\n  \\n `cm` is centimeters; 1cm==(96/2.54) px  \\n  \\n `pt` is points; 1pt==(96/72) px  \\n  \\n> [!NOTE]\\n>  Values need not include the decimal point explicitly when specified as a string. The string \\\"1\\\" provided in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] evaluates to a value of 1.0 when referenced in code.\"\n  example:\n  - \"The following example shows how to create an instance of a Thickness structure and set its properties by using [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] and code.  \\n  \\n [!code-cs[ThicknessStruct#2](~/add/codesnippet/csharp/ThicknessSamp/ThicknessSamp.cs#2)]\\n [!code-xml[ThicknessStruct#2](~/add/codesnippet/xaml/ThicknessXAML/default.xaml#2)]\\n [!code-vb[ThicknessStruct#2](~/add/codesnippet/visualbasic/ThicknessSampVB/ThicknessSampVB.vb#2)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Windows.ThicknessConverter))]\n\n      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]\n\n      public struct Thickness : IEquatable<System.Windows.Thickness>\n  inheritance:\n  - System.ValueType\n  implements:\n  - System.IEquatable<System.Windows.Thickness>\n  platform:\n  - net462\n- uid: System.Windows.Thickness.#ctor(System.Double)\n  id: '#ctor(System.Double)'\n  parent: System.Windows.Thickness\n  langs:\n  - csharp\n  name: Thickness(Double)\n  nameWithType: Thickness.Thickness(Double)\n  fullName: System.Windows.Thickness.Thickness(Double)\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Thickness\"></xref> structure that has the specified uniform length on each side.\n  syntax:\n    content: public Thickness (double uniformLength);\n    parameters:\n    - id: uniformLength\n      type: System.Double\n      description: The uniform length applied to all four sides of the bounding rectangle.\n  overload: System.Windows.Thickness.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)\n  id: '#ctor(System.Double,System.Double,System.Double,System.Double)'\n  parent: System.Windows.Thickness\n  langs:\n  - csharp\n  name: Thickness(Double,Double,Double,Double)\n  nameWithType: Thickness.Thickness(Double,Double,Double,Double)\n  fullName: System.Windows.Thickness.Thickness(Double,Double,Double,Double)\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Thickness\"></xref> structure that has specific lengths (supplied as a <xref:System.Double>) applied to each side of the rectangle.\n  remarks: ''\n  example:\n  - \"The following example shows how to create an instance of a <xref:System.Windows.Thickness> structure by using code.  \\n  \\n [!code-cs[ThicknessStruct#1](~/add/codesnippet/csharp/ThicknessSamp/ThicknessSamp.cs#1)]\\n [!code-xml[ThicknessStruct#1](~/add/codesnippet/xaml/ThicknessXAML/default.xaml#1)]\\n [!code-vb[ThicknessStruct#1](~/add/codesnippet/visualbasic/ThicknessSampVB/ThicknessSampVB.vb#1)]\"\n  syntax:\n    content: public Thickness (double left, double top, double right, double bottom);\n    parameters:\n    - id: left\n      type: System.Double\n      description: The thickness for the left side of the rectangle.\n    - id: top\n      type: System.Double\n      description: The thickness for the upper side of the rectangle.\n    - id: right\n      type: System.Double\n      description: The thickness for the right side of the rectangle\n    - id: bottom\n      type: System.Double\n      description: The thickness for the lower side of the rectangle.\n  overload: System.Windows.Thickness.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Thickness.Bottom\n  id: Bottom\n  parent: System.Windows.Thickness\n  langs:\n  - csharp\n  name: Bottom\n  nameWithType: Thickness.Bottom\n  fullName: System.Windows.Thickness.Bottom\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets or sets the width, in pixels, of the lower side of the bounding rectangle.\n  remarks: ''\n  example:\n  - \"The following example shows how to set the value of the Bottom property by using [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] and code.  \\n  \\n [!code-cs[ThicknessStruct#2](~/add/codesnippet/csharp/ThicknessSamp/ThicknessSamp.cs#2)]\\n [!code-xml[ThicknessStruct#2](~/add/codesnippet/xaml/ThicknessXAML/default.xaml#2)]\\n [!code-vb[ThicknessStruct#2](~/add/codesnippet/visualbasic/ThicknessSampVB/ThicknessSampVB.vb#2)]\"\n  syntax:\n    content: public double Bottom { get; set; }\n    return:\n      type: System.Double\n      description: A <xref:System.Double> that represents the width, in pixels, of the lower side of the bounding rectangle for this instance of <xref href=\"System.Windows.Thickness\"></xref>. A pixel is equal to 1/96 of an inch. The default is 0.\n  overload: System.Windows.Thickness.Bottom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Thickness.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Windows.Thickness\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: Thickness.Equals(Object)\n  fullName: System.Windows.Thickness.Equals(Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Compares this <xref href=\"System.Windows.Thickness\"></xref> structure to another <xref:System.Object> for equality.\n  remarks: Testing for equality on two floating-point values that are logically equivalent might fail because of precision errors that can accumulate as the values are operated on.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two objects are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Thickness.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Thickness.Equals(System.Windows.Thickness)\n  id: Equals(System.Windows.Thickness)\n  parent: System.Windows.Thickness\n  langs:\n  - csharp\n  name: Equals(Thickness)\n  nameWithType: Thickness.Equals(Thickness)\n  fullName: System.Windows.Thickness.Equals(Thickness)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Compares this <xref href=\"System.Windows.Thickness\"></xref> structure to another <xref href=\"System.Windows.Thickness\"></xref> structure for equality.\n  remarks: Testing for equality or inequality on two floating-point values that are logically equivalent might fail because of precision errors that can accumulate as the values are operated on.\n  syntax:\n    content: public bool Equals (System.Windows.Thickness thickness);\n    parameters:\n    - id: thickness\n      type: System.Windows.Thickness\n      description: An instance of <xref href=\"System.Windows.Thickness\"></xref> to compare for equality.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two instances of <xref href=\"System.Windows.Thickness\"></xref> are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Thickness.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Thickness.GetHashCode\n  id: GetHashCode\n  parent: System.Windows.Thickness\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: Thickness.GetHashCode()\n  fullName: System.Windows.Thickness.GetHashCode()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Returns the hash code of the structure.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for this instance of <xref href=\"System.Windows.Thickness\"></xref>.\n  overload: System.Windows.Thickness.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Thickness.Left\n  id: Left\n  parent: System.Windows.Thickness\n  langs:\n  - csharp\n  name: Left\n  nameWithType: Thickness.Left\n  fullName: System.Windows.Thickness.Left\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets or sets the width, in pixels, of the left side of the bounding rectangle.\n  remarks: ''\n  example:\n  - \"The following example shows how to set the value of the Left property by using [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] and code.  \\n  \\n [!code-cs[ThicknessStruct#2](~/add/codesnippet/csharp/ThicknessSamp/ThicknessSamp.cs#2)]\\n [!code-xml[ThicknessStruct#2](~/add/codesnippet/xaml/ThicknessXAML/default.xaml#2)]\\n [!code-vb[ThicknessStruct#2](~/add/codesnippet/visualbasic/ThicknessSampVB/ThicknessSampVB.vb#2)]\"\n  syntax:\n    content: public double Left { get; set; }\n    return:\n      type: System.Double\n      description: A <xref:System.Double> that represents the width, in pixels, of the left side of the bounding rectangle for this instance of <xref href=\"System.Windows.Thickness\"></xref>. a pixel is equal to 1/96 on an inch. The default is 0.\n  overload: System.Windows.Thickness.Left*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Thickness.op_Equality(System.Windows.Thickness,System.Windows.Thickness)\n  id: op_Equality(System.Windows.Thickness,System.Windows.Thickness)\n  parent: System.Windows.Thickness\n  langs:\n  - csharp\n  name: op_Equality(Thickness,Thickness)\n  nameWithType: Thickness.op_Equality(Thickness,Thickness)\n  fullName: System.Windows.Thickness.op_Equality(Thickness,Thickness)\n  type: Operator\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Compares the value of two <xref href=\"System.Windows.Thickness\"></xref> structures for equality.\n  remarks: Testing for equality on two floating-point values that are logically equivalent might fail because of precision errors that can accumulate as the values are operated on.\n  syntax:\n    content: public static bool op_Equality (System.Windows.Thickness t1, System.Windows.Thickness t2);\n    parameters:\n    - id: t1\n      type: System.Windows.Thickness\n      description: The first structure to compare.\n    - id: t2\n      type: System.Windows.Thickness\n      description: The other structure to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two instances of <xref href=\"System.Windows.Thickness\"></xref> are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Thickness.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Thickness.op_Inequality(System.Windows.Thickness,System.Windows.Thickness)\n  id: op_Inequality(System.Windows.Thickness,System.Windows.Thickness)\n  parent: System.Windows.Thickness\n  langs:\n  - csharp\n  name: op_Inequality(Thickness,Thickness)\n  nameWithType: Thickness.op_Inequality(Thickness,Thickness)\n  fullName: System.Windows.Thickness.op_Inequality(Thickness,Thickness)\n  type: Operator\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Compares two <xref href=\"System.Windows.Thickness\"></xref> structures for inequality.\n  remarks: Testing for equality or inequality on two floating-point values that are logically equivalent might fail because of precision errors that can accumulate as the values are operated on.\n  syntax:\n    content: public static bool op_Inequality (System.Windows.Thickness t1, System.Windows.Thickness t2);\n    parameters:\n    - id: t1\n      type: System.Windows.Thickness\n      description: The first structure to compare.\n    - id: t2\n      type: System.Windows.Thickness\n      description: The other structure to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two instances of <xref href=\"System.Windows.Thickness\"></xref> are not equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Thickness.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Thickness.Right\n  id: Right\n  parent: System.Windows.Thickness\n  langs:\n  - csharp\n  name: Right\n  nameWithType: Thickness.Right\n  fullName: System.Windows.Thickness.Right\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets or sets the width, in pixels, of the right side of the bounding rectangle.\n  remarks: ''\n  example:\n  - \"The following example shows how to set the value of the Right property by using [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] and code.  \\n  \\n [!code-cs[ThicknessStruct#2](~/add/codesnippet/csharp/ThicknessSamp/ThicknessSamp.cs#2)]\\n [!code-xml[ThicknessStruct#2](~/add/codesnippet/xaml/ThicknessXAML/default.xaml#2)]\\n [!code-vb[ThicknessStruct#2](~/add/codesnippet/visualbasic/ThicknessSampVB/ThicknessSampVB.vb#2)]\"\n  syntax:\n    content: public double Right { get; set; }\n    return:\n      type: System.Double\n      description: A <xref:System.Double> that represents the width, in pixels, of the right side of the bounding rectangle for this instance of <xref href=\"System.Windows.Thickness\"></xref>. A pixel is equal to 1/96 of an inch. The default is 0.\n  overload: System.Windows.Thickness.Right*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Thickness.Top\n  id: Top\n  parent: System.Windows.Thickness\n  langs:\n  - csharp\n  name: Top\n  nameWithType: Thickness.Top\n  fullName: System.Windows.Thickness.Top\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets or sets the width, in pixels, of the upper side of the bounding rectangle.\n  remarks: ''\n  example:\n  - \"The following example shows how to set the value of the Top property by using [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] and code.  \\n  \\n [!code-cs[ThicknessStruct#2](~/add/codesnippet/csharp/ThicknessSamp/ThicknessSamp.cs#2)]\\n [!code-xml[ThicknessStruct#2](~/add/codesnippet/xaml/ThicknessXAML/default.xaml#2)]\\n [!code-vb[ThicknessStruct#2](~/add/codesnippet/visualbasic/ThicknessSampVB/ThicknessSampVB.vb#2)]\"\n  syntax:\n    content: public double Top { get; set; }\n    return:\n      type: System.Double\n      description: A <xref:System.Double> that represents the width, in pixels, of the upper side of the bounding rectangle for this instance of <xref href=\"System.Windows.Thickness\"></xref>. A pixel is equal to 1/96 of an inch. The default is 0.\n  overload: System.Windows.Thickness.Top*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Thickness.ToString\n  id: ToString\n  parent: System.Windows.Thickness\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Thickness.ToString()\n  fullName: System.Windows.Thickness.ToString()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Returns the string representation of the <xref href=\"System.Windows.Thickness\"></xref> structure.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A <xref:System.String> that represents the <xref href=\"System.Windows.Thickness\"></xref> value.\n  overload: System.Windows.Thickness.ToString*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Windows.Thickness.#ctor(System.Double)\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: Thickness(Double)\n  nameWithType: Thickness.Thickness(Double)\n  fullName: System.Windows.Thickness.Thickness(Double)\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: Thickness(Double,Double,Double,Double)\n  nameWithType: Thickness.Thickness(Double,Double,Double,Double)\n  fullName: System.Windows.Thickness.Thickness(Double,Double,Double,Double)\n- uid: System.Windows.Thickness.Bottom\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: Bottom\n  nameWithType: Thickness.Bottom\n  fullName: System.Windows.Thickness.Bottom\n- uid: System.Windows.Thickness.Equals(System.Object)\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Thickness.Equals(Object)\n  fullName: System.Windows.Thickness.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Thickness.Equals(System.Windows.Thickness)\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: Equals(Thickness)\n  nameWithType: Thickness.Equals(Thickness)\n  fullName: System.Windows.Thickness.Equals(Thickness)\n- uid: System.Windows.Thickness\n  parent: System.Windows\n  isExternal: false\n  name: Thickness\n  nameWithType: Thickness\n  fullName: System.Windows.Thickness\n- uid: System.Windows.Thickness.GetHashCode\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Thickness.GetHashCode()\n  fullName: System.Windows.Thickness.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Thickness.Left\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: Left\n  nameWithType: Thickness.Left\n  fullName: System.Windows.Thickness.Left\n- uid: System.Windows.Thickness.op_Equality(System.Windows.Thickness,System.Windows.Thickness)\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: op_Equality(Thickness,Thickness)\n  nameWithType: Thickness.op_Equality(Thickness,Thickness)\n  fullName: System.Windows.Thickness.op_Equality(Thickness,Thickness)\n- uid: System.Windows.Thickness.op_Inequality(System.Windows.Thickness,System.Windows.Thickness)\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: op_Inequality(Thickness,Thickness)\n  nameWithType: Thickness.op_Inequality(Thickness,Thickness)\n  fullName: System.Windows.Thickness.op_Inequality(Thickness,Thickness)\n- uid: System.Windows.Thickness.Right\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: Right\n  nameWithType: Thickness.Right\n  fullName: System.Windows.Thickness.Right\n- uid: System.Windows.Thickness.Top\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: Top\n  nameWithType: Thickness.Top\n  fullName: System.Windows.Thickness.Top\n- uid: System.Windows.Thickness.ToString\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: ToString()\n  nameWithType: Thickness.ToString()\n  fullName: System.Windows.Thickness.ToString()\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Thickness.#ctor*\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: Thickness\n  nameWithType: Thickness.Thickness\n- uid: System.Windows.Thickness.Bottom*\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: Bottom\n  nameWithType: Thickness.Bottom\n- uid: System.Windows.Thickness.Equals*\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: Equals\n  nameWithType: Thickness.Equals\n- uid: System.Windows.Thickness.GetHashCode*\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: GetHashCode\n  nameWithType: Thickness.GetHashCode\n- uid: System.Windows.Thickness.Left*\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: Left\n  nameWithType: Thickness.Left\n- uid: System.Windows.Thickness.op_Equality*\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: op_Equality\n  nameWithType: Thickness.op_Equality\n- uid: System.Windows.Thickness.op_Inequality*\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: op_Inequality\n  nameWithType: Thickness.op_Inequality\n- uid: System.Windows.Thickness.Right*\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: Right\n  nameWithType: Thickness.Right\n- uid: System.Windows.Thickness.Top*\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: Top\n  nameWithType: Thickness.Top\n- uid: System.Windows.Thickness.ToString*\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: ToString\n  nameWithType: Thickness.ToString\n"}