{"nodes":[{"pos":[338,429],"content":"Defines methods for obtaining and releasing an existing handle to a Windows device context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines methods for obtaining and releasing an existing handle to a Windows device context.","pos":[0,91]}]},{"pos":[441,636],"content":"A device context defines the graphics object for drawing on a Windows-based device. An example of a class that implements the IDeviceContext interface is the <xref:System.Drawing.Graphics> class.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A device context defines the graphics object for drawing on a Windows-based device. An example of a class that implements the IDeviceContext interface is the <xref:System.Drawing.Graphics> class.","pos":[0,195],"nodes":[{"content":"A device context defines the graphics object for drawing on a Windows-based device.","pos":[0,83]},{"content":"An example of a class that implements the IDeviceContext interface is the &lt;xref:System.Drawing.Graphics&gt; class.","pos":[84,195],"source":" An example of a class that implements the IDeviceContext interface is the <xref:System.Drawing.Graphics> class."}]}]},{"pos":[1080,1127],"content":"Returns the handle to a Windows device context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the handle to a Windows device context.","pos":[0,47]}]},{"pos":[1140,1572],"content":"GetHdc and <xref:System.Drawing.IDeviceContext.ReleaseHdc%2A> are two methods that allow you to get and release the handle for a Windows-based device. You should always follow a call to GetHdc with a call to <xref:System.Drawing.IDeviceContext.ReleaseHdc%2A> when you are finished with the Windows handle.       GetHdc is not designed to obtain handles created using Windows GDI methods such as `CreateDC` or `CreateCompatibleDC`.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"GetHdc and &lt;xref:System.Drawing.IDeviceContext.ReleaseHdc%2A&gt; are two methods that allow you to get and release the handle for a Windows-based device.","pos":[0,150],"source":"GetHdc and <xref:System.Drawing.IDeviceContext.ReleaseHdc%2A> are two methods that allow you to get and release the handle for a Windows-based device."},{"content":"You should always follow a call to GetHdc with a call to &lt;xref:System.Drawing.IDeviceContext.ReleaseHdc%2A&gt; when you are finished with the Windows handle.","pos":[151,305],"source":" You should always follow a call to GetHdc with a call to <xref:System.Drawing.IDeviceContext.ReleaseHdc%2A> when you are finished with the Windows handle."},{"content":"GetHdc is not designed to obtain handles created using Windows GDI methods such as <ph id=\"ph1\">`CreateDC`</ph> or <ph id=\"ph2\">`CreateCompatibleDC`</ph>.","pos":[312,430],"source":"       GetHdc is not designed to obtain handles created using Windows GDI methods such as `CreateDC` or `CreateCompatibleDC`."}]},{"pos":[1698,1766],"content":"An <xref:System.IntPtr> representing the handle of a device context.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.IntPtr&gt; representing the handle of a device context.","pos":[0,68],"source":"An <xref:System.IntPtr> representing the handle of a device context."}]},{"pos":[2189,2237],"content":"Releases the handle of a Windows device context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Releases the handle of a Windows device context.","pos":[0,48]}]},{"pos":[2249,2554],"content":"<xref:System.Drawing.IDeviceContext.GetHdc%2A> and ReleaseHdc are two methods that allow you to get and release the handle for a Windows-based device. You should always follow a call to <xref:System.Drawing.IDeviceContext.GetHdc%2A> with a call to ReleaseHdc when you are finished with the Windows handle.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"<xref:System.Drawing.IDeviceContext.GetHdc%2A> and ReleaseHdc are two methods that allow you to get and release the handle for a Windows-based device. You should always follow a call to <xref:System.Drawing.IDeviceContext.GetHdc%2A> with a call to ReleaseHdc when you are finished with the Windows handle.","pos":[0,305],"nodes":[{"content":"&lt;xref:System.Drawing.IDeviceContext.GetHdc%2A&gt; and ReleaseHdc are two methods that allow you to get and release the handle for a Windows-based device.","pos":[0,150],"source":"<xref:System.Drawing.IDeviceContext.GetHdc%2A> and ReleaseHdc are two methods that allow you to get and release the handle for a Windows-based device."},{"content":"You should always follow a call to &lt;xref:System.Drawing.IDeviceContext.GetHdc%2A&gt; with a call to ReleaseHdc when you are finished with the Windows handle.","pos":[151,305],"source":" You should always follow a call to <xref:System.Drawing.IDeviceContext.GetHdc%2A> with a call to ReleaseHdc when you are finished with the Windows handle."}]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Drawing.IDeviceContext\n  id: IDeviceContext\n  children:\n  - System.Drawing.IDeviceContext.GetHdc\n  - System.Drawing.IDeviceContext.ReleaseHdc\n  langs:\n  - csharp\n  name: IDeviceContext\n  nameWithType: IDeviceContext\n  fullName: System.Drawing.IDeviceContext\n  type: Interface\n  summary: Defines methods for obtaining and releasing an existing handle to a Windows device context.\n  remarks: A device context defines the graphics object for drawing on a Windows-based device. An example of a class that implements the IDeviceContext interface is the <xref:System.Drawing.Graphics> class.\n  syntax:\n    content: 'public interface IDeviceContext : IDisposable'\n  implements:\n  - System.IDisposable\n  platform:\n  - net462\n- uid: System.Drawing.IDeviceContext.GetHdc\n  id: GetHdc\n  parent: System.Drawing.IDeviceContext\n  langs:\n  - csharp\n  name: GetHdc()\n  nameWithType: IDeviceContext.GetHdc()\n  fullName: System.Drawing.IDeviceContext.GetHdc()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Returns the handle to a Windows device context.\n  remarks: \"GetHdc and <xref:System.Drawing.IDeviceContext.ReleaseHdc%2A> are two methods that allow you to get and release the handle for a Windows-based device. You should always follow a call to GetHdc with a call to <xref:System.Drawing.IDeviceContext.ReleaseHdc%2A> when you are finished with the Windows handle.  \\n  \\n GetHdc is not designed to obtain handles created using Windows GDI methods such as `CreateDC` or `CreateCompatibleDC`.\"\n  syntax:\n    content: public IntPtr GetHdc ();\n    parameters: []\n    return:\n      type: System.IntPtr\n      description: An <xref:System.IntPtr> representing the handle of a device context.\n  overload: System.Drawing.IDeviceContext.GetHdc*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.IDeviceContext.ReleaseHdc\n  id: ReleaseHdc\n  parent: System.Drawing.IDeviceContext\n  langs:\n  - csharp\n  name: ReleaseHdc()\n  nameWithType: IDeviceContext.ReleaseHdc()\n  fullName: System.Drawing.IDeviceContext.ReleaseHdc()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Releases the handle of a Windows device context.\n  remarks: <xref:System.Drawing.IDeviceContext.GetHdc%2A> and ReleaseHdc are two methods that allow you to get and release the handle for a Windows-based device. You should always follow a call to <xref:System.Drawing.IDeviceContext.GetHdc%2A> with a call to ReleaseHdc when you are finished with the Windows handle.\n  syntax:\n    content: public void ReleaseHdc ();\n    parameters: []\n  overload: System.Drawing.IDeviceContext.ReleaseHdc*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Drawing.IDeviceContext.GetHdc\n  parent: System.Drawing.IDeviceContext\n  isExternal: false\n  name: GetHdc()\n  nameWithType: IDeviceContext.GetHdc()\n  fullName: System.Drawing.IDeviceContext.GetHdc()\n- uid: System.IntPtr\n  parent: System\n  isExternal: true\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Drawing.IDeviceContext.ReleaseHdc\n  parent: System.Drawing.IDeviceContext\n  isExternal: false\n  name: ReleaseHdc()\n  nameWithType: IDeviceContext.ReleaseHdc()\n  fullName: System.Drawing.IDeviceContext.ReleaseHdc()\n- uid: System.Drawing.IDeviceContext.GetHdc*\n  parent: System.Drawing.IDeviceContext\n  isExternal: false\n  name: GetHdc\n  nameWithType: IDeviceContext.GetHdc\n- uid: System.Drawing.IDeviceContext.ReleaseHdc*\n  parent: System.Drawing.IDeviceContext\n  isExternal: false\n  name: ReleaseHdc\n  nameWithType: IDeviceContext.ReleaseHdc\n"}