{"nodes":[{"pos":[1648,1847],"content":"Defines an object that has a modifiable state and a read-only (frozen) state. Classes that derive from Freezable provide detailed change notification, can be made immutable, and can clone themselves.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines an object that has a modifiable state and a read-only (frozen) state. Classes that derive from Freezable provide detailed change notification, can be made immutable, and can clone themselves.","pos":[0,199],"nodes":[{"content":"Defines an object that has a modifiable state and a read-only (frozen) state.","pos":[0,77]},{"content":"Classes that derive from Freezable provide detailed change notification, can be made immutable, and can clone themselves.","pos":[78,199]}]}]},{"pos":[1860,3022],"content":"The Freezable class provides special features that can help improve application performance when using objects that are expensive to modify or copy. Examples of Freezable objects include the following:      -   <xref:System.Windows.Media.Brush>      -   <xref:System.Windows.Media.Pen>      -   <xref:System.Windows.Media.Geometry>      -   <xref:System.Windows.Media.Transform>      -   <xref:System.Windows.Media.Animation.AnimationTimeline>      ## Deriving From Freezable    A class that derives from Freezable gains the following features:      -   Special states: a read-only (frozen) state and a writable state.      -   Thread safety: a frozen Freezable object can be shared across threads.      -   Detailed change notification: Unlike other <xref:System.Windows.DependencyObject> objects, a Freezable object provides change notifications when sub-property values change.      -   Easy cloning: the Freezable class has already implemented several methods that produce deep clones.       For information on using and creating your own Freezable objects, see [Freezable Objects Overview](../Topic/Freezable%20Objects%20Overview.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Freezable class provides special features that can help improve application performance when using objects that are expensive to modify or copy.","pos":[0,148]},{"content":"Examples of Freezable objects include the following:      -   &lt;xref:System.Windows.Media.Brush&gt;      -   &lt;xref:System.Windows.Media.Pen&gt;      -   &lt;xref:System.Windows.Media.Geometry&gt;      -   &lt;xref:System.Windows.Media.Transform&gt;      -   &lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;      ## Deriving From Freezable    A class that derives from Freezable gains the following features:      -   Special states: a read-only (frozen) state and a writable state.","pos":[149,618],"source":" Examples of Freezable objects include the following:      -   <xref:System.Windows.Media.Brush>      -   <xref:System.Windows.Media.Pen>      -   <xref:System.Windows.Media.Geometry>      -   <xref:System.Windows.Media.Transform>      -   <xref:System.Windows.Media.Animation.AnimationTimeline>      ## Deriving From Freezable    A class that derives from Freezable gains the following features:      -   Special states: a read-only (frozen) state and a writable state."},{"content":"-   Thread safety: a frozen Freezable object can be shared across threads.","pos":[624,698]},{"content":"-   Detailed change notification: Unlike other &lt;xref:System.Windows.DependencyObject&gt; objects, a Freezable object provides change notifications when sub-property values change.","pos":[704,880],"source":"      -   Detailed change notification: Unlike other <xref:System.Windows.DependencyObject> objects, a Freezable object provides change notifications when sub-property values change."},{"content":"-   Easy cloning: the Freezable class has already implemented several methods that produce deep clones.","pos":[886,989]},{"content":"For information on using and creating your own Freezable objects, see <bpt id=\"p1\">[</bpt>Freezable Objects Overview<ept id=\"p1\">](../Topic/Freezable%20Objects%20Overview.md)</ept>.","pos":[996,1139],"source":"       For information on using and creating your own Freezable objects, see [Freezable Objects Overview](../Topic/Freezable%20Objects%20Overview.md)."}]},{"pos":[4928,5020],"content":"Initializes a new instance of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Freezable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> derived class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of a <xref href=\"System.Windows.Freezable\"></xref> derived class."},{"pos":[5032,5101],"content":"This is the protected-accessibility constructor of an abstract class.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This is the protected-accessibility constructor of an abstract class.","pos":[0,69]}]},{"pos":[5552,5624],"content":"Gets a value that indicates whether the object can be made unmodifiable.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the object can be made unmodifiable.","pos":[0,72]}]},{"pos":[5737,5947],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current object can be made unmodifiable or is already unmodifiable; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current object can be made unmodifiable or is already unmodifiable; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6323,6422],"content":"Occurs when the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Freezable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or an object it contains is modified.","needQuote":true,"needEscape":true,"source":"Occurs when the <xref href=\"System.Windows.Freezable\"></xref> or an object it contains is modified."},{"pos":[6434,6621],"content":"If you attempt to add or remove event handlers when the current object is not modifiable (when the &lt;xref:System.Windows.Freezable.IsFrozen%2A&gt; property is <ph id=\"ph1\">`true`</ph>), an exception is thrown.","needQuote":true,"needEscape":true,"extradata":"MT","source":"If you attempt to add or remove event handlers when the current object is not modifiable (when the <xref:System.Windows.Freezable.IsFrozen%2A> property is `true`), an exception is thrown."},{"pos":[6743,6755],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7080,7359],"content":"Creates a modifiable clone of the <xref href=\"System.Windows.Freezable\"></xref>, making deep copies of the object's values. When copying the object's dependency properties, this method copies expressions (which might no longer resolve) but not animations or their current values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a modifiable clone of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Freezable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, making deep copies of the object's values.","pos":[0,123],"source":"Creates a modifiable clone of the <xref href=\"System.Windows.Freezable\"></xref>, making deep copies of the object's values."},{"content":"When copying the object's dependency properties, this method copies expressions (which might no longer resolve) but not animations or their current values.","pos":[124,279]}]},{"pos":[7372,9033],"content":"The Clone and <xref:System.Windows.Freezable.CloneCurrentValue%2A> methods produce modifiable clones of frozen <xref:System.Windows.Freezable> objects (the methods also clone <xref:System.Windows.Freezable> objects that are not frozen). The clone is effectively a deep copy of the current object.       The following table summarizes the differences between the Clone and <xref:System.Windows.Freezable.CloneCurrentValue%2A> methods.      |Action|Clone method behavior|CloneCurrentValue method behavior|   |------------|---------------------------|---------------------------------------|   |Copying a dependency property that has an expression|The expression is copied, but might no longer resolve. For more information, see [Freezable Objects Overview](~/add/includes/ajax-current-ext-md.md).|The current value of the expression is copied, but not the expression itself.|   |Copying an animated dependency property|The property's base (non-animated) value is copied. Animations are not copied.|The property's current animated value is copied. Animations are not copied.|       Note that unset properties are not copied. If an unset property has a default value that is a frozen <xref:System.Windows.Freezable>, that property value remains frozen in the otherwise modifiable clone.      ## Move a Freezable Between Threads    This method can be useful for moving a <xref:System.Windows.Freezable> between threads. First, make the <xref:System.Windows.Freezable> unmodifiable by calling its <xref:System.Windows.Freezable.Freeze%2A> method. Now another thread can access the <xref:System.Windows.Freezable> and make a local Clone that it can access.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Clone and &lt;xref:System.Windows.Freezable.CloneCurrentValue%2A&gt; methods produce modifiable clones of frozen &lt;xref:System.Windows.Freezable&gt; objects (the methods also clone &lt;xref:System.Windows.Freezable&gt; objects that are not frozen).","pos":[0,236],"source":"The Clone and <xref:System.Windows.Freezable.CloneCurrentValue%2A> methods produce modifiable clones of frozen <xref:System.Windows.Freezable> objects (the methods also clone <xref:System.Windows.Freezable> objects that are not frozen)."},{"content":"The clone is effectively a deep copy of the current object.","pos":[237,296]},{"content":"The following table summarizes the differences between the Clone and &lt;xref:System.Windows.Freezable.CloneCurrentValue%2A&gt; methods.","pos":[303,433],"source":"       The following table summarizes the differences between the Clone and <xref:System.Windows.Freezable.CloneCurrentValue%2A> methods."},{"content":"|Action|Clone method behavior|CloneCurrentValue method behavior|   |------------|---------------------------|---------------------------------------|   |Copying a dependency property that has an expression|The expression is copied, but might no longer resolve.","pos":[439,699]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Freezable Objects Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.|The current value of the expression is copied, but not the expression itself.|   |Copying an animated dependency property|The property's base (non-animated) value is copied.","pos":[700,968],"source":" For more information, see [Freezable Objects Overview](~/add/includes/ajax-current-ext-md.md).|The current value of the expression is copied, but not the expression itself.|   |Copying an animated dependency property|The property's base (non-animated) value is copied."},{"content":"Animations are not copied.|The property's current animated value is copied.","pos":[969,1044]},{"content":"Animations are not copied.|       Note that unset properties are not copied.","pos":[1045,1121]},{"content":"If an unset property has a default value that is a frozen &lt;xref:System.Windows.Freezable&gt;, that property value remains frozen in the otherwise modifiable clone.","pos":[1122,1282],"source":" If an unset property has a default value that is a frozen <xref:System.Windows.Freezable>, that property value remains frozen in the otherwise modifiable clone."},{"content":"Move a Freezable Between Threads    This method can be useful for moving a &lt;xref:System.Windows.Freezable&gt; between threads.","pos":[1291,1414],"source":"      ## Move a Freezable Between Threads    This method can be useful for moving a <xref:System.Windows.Freezable> between threads."},{"content":"First, make the &lt;xref:System.Windows.Freezable&gt; unmodifiable by calling its &lt;xref:System.Windows.Freezable.Freeze%2A&gt; method.","pos":[1415,1540],"source":" First, make the <xref:System.Windows.Freezable> unmodifiable by calling its <xref:System.Windows.Freezable.Freeze%2A> method."},{"content":"Now another thread can access the &lt;xref:System.Windows.Freezable&gt; and make a local Clone that it can access.","pos":[1541,1649],"source":" Now another thread can access the <xref:System.Windows.Freezable> and make a local Clone that it can access."}]},{"pos":[9187,9503],"content":"A modifiable clone of the current object. The cloned object's <xref:System.Windows.Freezable.IsFrozen*> property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> even if the source's <xref:System.Windows.Freezable.IsFrozen*> property is <xref uid=\"langword_csharp_true.\" name=\"true.\" href=\"\"></xref>","needQuote":true,"needEscape":true,"nodes":[{"content":"A modifiable clone of the current object.","pos":[0,41]},{"content":"The cloned object's &lt;xref:System.Windows.Freezable.IsFrozen<bpt id=\"p1\">*</bpt>&gt; property is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> even if the source's &lt;xref:System.Windows.Freezable.IsFrozen<ept id=\"p1\">*</ept>&gt; property is <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_true.\" name=\"true.\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>","pos":[42,316],"source":" The cloned object's <xref:System.Windows.Freezable.IsFrozen*> property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> even if the source's <xref:System.Windows.Freezable.IsFrozen*> property is <xref uid=\"langword_csharp_true.\" name=\"true.\" href=\"\"></xref>"}]},{"pos":[9971,10115],"content":"Makes the instance a clone (deep copy) of the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Freezable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> using base (non-animated) property values.","needQuote":true,"needEscape":true,"source":"Makes the instance a clone (deep copy) of the specified <xref href=\"System.Windows.Freezable\"></xref> using base (non-animated) property values."},{"pos":[10127,10465],"content":"This method is called by the <xref:System.Windows.Freezable.Clone%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.Clone%2A> instead of calling this method directly.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is called by the <xref:System.Windows.Freezable.Clone%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.Clone%2A> instead of calling this method directly.","pos":[0,338],"nodes":[{"content":"This method is called by the &lt;xref:System.Windows.Freezable.Clone%2A&gt; method and should not be called directly from your code, except when calling the base implementation while overriding this method.","pos":[0,200],"source":"This method is called by the <xref:System.Windows.Freezable.Clone%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method."},{"content":"To create a modifiable copy of the current object, call &lt;xref:System.Windows.Freezable.Clone%2A&gt; instead of calling this method directly.","pos":[201,338],"source":" To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.Clone%2A> instead of calling this method directly."}]}]},{"pos":[10664,10684],"content":"The object to clone.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to clone.","pos":[0,20]}]},{"pos":[11117,11234],"content":"Creates a modifiable clone (deep copy) of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Freezable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> using its current values.","needQuote":true,"needEscape":true,"source":"Creates a modifiable clone (deep copy) of the <xref href=\"System.Windows.Freezable\"></xref> using its current values."},{"pos":[11247,12906],"content":"The <xref:System.Windows.Freezable.Clone%2A> and CloneCurrentValue methods produce modifiable clones of frozen <xref:System.Windows.Freezable> objects (the methods also clone <xref:System.Windows.Freezable> objects that are not frozen). The clone is effectively a deep copy of the current object.       The following table summarizes the differences between the <xref:System.Windows.Freezable.Clone%2A> and CloneCurrentValue methods.      |Action|Clone method behavior|CloneCurrentValue method behavior|   |------------|---------------------------|---------------------------------------|   |Copying a dependency property that has an expression|The expression is copied, but might no longer resolve. For more information, see [Freezable Objects Overview](~/add/includes/ajax-current-ext-md.md).|The current value of the expression is copied, but not the expression itself.|   |Copying an animated dependency property|The property's base (non-animated) value is copied. Animations are not copied.|The property's current animated value is copied. Animations are not copied.|       Note that unset properties are not copied. If an unset property has a default value that is a frozen <xref:System.Windows.Freezable>, that property value remains frozen in the otherwise modifiable clone.      ## Move a Freezable Between Threads    This method can be useful for moving a <xref:System.Windows.Freezable> between threads. First, make the <xref:System.Windows.Freezable> unmodifiable by using its <xref:System.Windows.Freezable.Freeze%2A> method. Now another thread can access the <xref:System.Windows.Freezable> and make a local clone that it can access.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Windows.Freezable.Clone%2A&gt; and CloneCurrentValue methods produce modifiable clones of frozen &lt;xref:System.Windows.Freezable&gt; objects (the methods also clone &lt;xref:System.Windows.Freezable&gt; objects that are not frozen).","pos":[0,236],"source":"The <xref:System.Windows.Freezable.Clone%2A> and CloneCurrentValue methods produce modifiable clones of frozen <xref:System.Windows.Freezable> objects (the methods also clone <xref:System.Windows.Freezable> objects that are not frozen)."},{"content":"The clone is effectively a deep copy of the current object.","pos":[237,296]},{"content":"The following table summarizes the differences between the &lt;xref:System.Windows.Freezable.Clone%2A&gt; and CloneCurrentValue methods.","pos":[303,433],"source":"       The following table summarizes the differences between the <xref:System.Windows.Freezable.Clone%2A> and CloneCurrentValue methods."},{"content":"|Action|Clone method behavior|CloneCurrentValue method behavior|   |------------|---------------------------|---------------------------------------|   |Copying a dependency property that has an expression|The expression is copied, but might no longer resolve.","pos":[439,699]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Freezable Objects Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.|The current value of the expression is copied, but not the expression itself.|   |Copying an animated dependency property|The property's base (non-animated) value is copied.","pos":[700,968],"source":" For more information, see [Freezable Objects Overview](~/add/includes/ajax-current-ext-md.md).|The current value of the expression is copied, but not the expression itself.|   |Copying an animated dependency property|The property's base (non-animated) value is copied."},{"content":"Animations are not copied.|The property's current animated value is copied.","pos":[969,1044]},{"content":"Animations are not copied.|       Note that unset properties are not copied.","pos":[1045,1121]},{"content":"If an unset property has a default value that is a frozen &lt;xref:System.Windows.Freezable&gt;, that property value remains frozen in the otherwise modifiable clone.","pos":[1122,1282],"source":" If an unset property has a default value that is a frozen <xref:System.Windows.Freezable>, that property value remains frozen in the otherwise modifiable clone."},{"content":"Move a Freezable Between Threads    This method can be useful for moving a &lt;xref:System.Windows.Freezable&gt; between threads.","pos":[1291,1414],"source":"      ## Move a Freezable Between Threads    This method can be useful for moving a <xref:System.Windows.Freezable> between threads."},{"content":"First, make the &lt;xref:System.Windows.Freezable&gt; unmodifiable by using its &lt;xref:System.Windows.Freezable.Freeze%2A&gt; method.","pos":[1415,1538],"source":" First, make the <xref:System.Windows.Freezable> unmodifiable by using its <xref:System.Windows.Freezable.Freeze%2A> method."},{"content":"Now another thread can access the &lt;xref:System.Windows.Freezable&gt; and make a local clone that it can access.","pos":[1539,1647],"source":" Now another thread can access the <xref:System.Windows.Freezable> and make a local clone that it can access."}]},{"pos":[13072,13388],"content":"A modifiable clone of the current object. The cloned object's <xref:System.Windows.Freezable.IsFrozen*> property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> even if the source's <xref:System.Windows.Freezable.IsFrozen*> property is <xref uid=\"langword_csharp_true.\" name=\"true.\" href=\"\"></xref>","needQuote":true,"needEscape":true,"nodes":[{"content":"A modifiable clone of the current object.","pos":[0,41]},{"content":"The cloned object's &lt;xref:System.Windows.Freezable.IsFrozen<bpt id=\"p1\">*</bpt>&gt; property is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> even if the source's &lt;xref:System.Windows.Freezable.IsFrozen<ept id=\"p1\">*</ept>&gt; property is <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_true.\" name=\"true.\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>","pos":[42,316],"source":" The cloned object's <xref:System.Windows.Freezable.IsFrozen*> property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> even if the source's <xref:System.Windows.Freezable.IsFrozen*> property is <xref uid=\"langword_csharp_true.\" name=\"true.\" href=\"\"></xref>"}]},{"pos":[13928,14071],"content":"Makes the instance a modifiable clone (deep copy) of the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Freezable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> using current property values.","needQuote":true,"needEscape":true,"source":"Makes the instance a modifiable clone (deep copy) of the specified <xref href=\"System.Windows.Freezable\"></xref> using current property values."},{"pos":[14083,14445],"content":"This method is called by the <xref:System.Windows.Freezable.CloneCurrentValue%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.CloneCurrentValue%2A> instead of calling this method directly.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is called by the <xref:System.Windows.Freezable.CloneCurrentValue%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.CloneCurrentValue%2A> instead of calling this method directly.","pos":[0,362],"nodes":[{"content":"This method is called by the &lt;xref:System.Windows.Freezable.CloneCurrentValue%2A&gt; method and should not be called directly from your code, except when calling the base implementation while overriding this method.","pos":[0,212],"source":"This method is called by the <xref:System.Windows.Freezable.CloneCurrentValue%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method."},{"content":"To create a modifiable copy of the current object, call &lt;xref:System.Windows.Freezable.CloneCurrentValue%2A&gt; instead of calling this method directly.","pos":[213,362],"source":" To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.CloneCurrentValue%2A> instead of calling this method directly."}]}]},{"pos":[14656,14719],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Freezable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to be cloned.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Freezable\"></xref> to be cloned."},{"pos":[15149,15235],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Freezable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Freezable\"></xref> class."},{"pos":[15247,15488],"content":"This is a protected method, and the actual object-specific implementations for the behavior are dependent on the override implementation of the <xref:System.Windows.Freezable.CreateInstanceCore%2A> method, which this method calls internally.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This is a protected method, and the actual object-specific implementations for the behavior are dependent on the override implementation of the &lt;xref:System.Windows.Freezable.CreateInstanceCore%2A&gt; method, which this method calls internally.","pos":[0,241],"source":"This is a protected method, and the actual object-specific implementations for the behavior are dependent on the override implementation of the <xref:System.Windows.Freezable.CreateInstanceCore%2A> method, which this method calls internally."}]},{"pos":[15653,15670],"content":"The new instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new instance.","pos":[0,17]}]},{"pos":[16113,16240],"content":"When implemented in a derived class, creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Freezable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> derived class.","needQuote":true,"needEscape":true,"source":"When implemented in a derived class, creates a new instance of the <xref href=\"System.Windows.Freezable\"></xref> derived class."},{"pos":[16252,16505],"content":"Do not call this method directly (except when calling base in an implementation). This method is called internally by the <xref:System.Windows.Freezable.CreateInstance%2A> method whenever a new instance of the <xref:System.Windows.Freezable> is created.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Do not call this method directly (except when calling base in an implementation). This method is called internally by the <xref:System.Windows.Freezable.CreateInstance%2A> method whenever a new instance of the <xref:System.Windows.Freezable> is created.","pos":[0,253],"nodes":[{"content":"Do not call this method directly (except when calling base in an implementation).","pos":[0,81]},{"content":"This method is called internally by the &lt;xref:System.Windows.Freezable.CreateInstance%2A&gt; method whenever a new instance of the &lt;xref:System.Windows.Freezable&gt; is created.","pos":[82,253],"source":" This method is called internally by the <xref:System.Windows.Freezable.CreateInstance%2A> method whenever a new instance of the <xref:System.Windows.Freezable> is created."}]}]},{"pos":[17114,17131],"content":"The new instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new instance.","pos":[0,17]}]},{"pos":[17518,17684],"content":"Makes the current object unmodifiable and sets its &lt;xref:System.Windows.Freezable.IsFrozen*&gt; property to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Makes the current object unmodifiable and sets its <xref:System.Windows.Freezable.IsFrozen*> property to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."},{"pos":[17696,17966],"content":"To avoid the possibility of an <xref:System.InvalidOperationException> when calling this method, check the <xref:System.Windows.Freezable.CanFreeze%2A> property to determine whether the <xref:System.Windows.Freezable> can be made unmodifiable before calling this method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"To avoid the possibility of an &lt;xref:System.InvalidOperationException&gt; when calling this method, check the &lt;xref:System.Windows.Freezable.CanFreeze%2A&gt; property to determine whether the &lt;xref:System.Windows.Freezable&gt; can be made unmodifiable before calling this method.","pos":[0,270],"source":"To avoid the possibility of an <xref:System.InvalidOperationException> when calling this method, check the <xref:System.Windows.Freezable.CanFreeze%2A> property to determine whether the <xref:System.Windows.Freezable> can be made unmodifiable before calling this method."}]},{"pos":[18201,18279],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Freezable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> cannot be made unmodifiable.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Freezable\"></xref> cannot be made unmodifiable."},{"pos":[18725,19203],"content":"If the <code>isChecking</code> parameter is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, this method indicates whether the specified <xref href=\"System.Windows.Freezable\"></xref> can be made unmodifiable. If the <code>isChecking</code> parameter is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, this method attempts to make the specified <xref href=\"System.Windows.Freezable\"></xref> unmodifiable and indicates whether the operation succeeded.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">isChecking</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, this method indicates whether the specified <bpt id=\"p3\">&lt;xref href=\"System.Windows.Freezable\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> can be made unmodifiable.","pos":[0,221],"source":"If the <code>isChecking</code> parameter is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, this method indicates whether the specified <xref href=\"System.Windows.Freezable\"></xref> can be made unmodifiable."},{"content":"If the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">isChecking</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, this method attempts to make the specified <bpt id=\"p3\">&lt;xref href=\"System.Windows.Freezable\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> unmodifiable and indicates whether the operation succeeded.","pos":[222,478],"source":" If the <code>isChecking</code> parameter is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, this method attempts to make the specified <xref href=\"System.Windows.Freezable\"></xref> unmodifiable and indicates whether the operation succeeded."}]},{"pos":[19216,19679],"content":"Do not call this method unless you are deriving from <xref:System.Windows.Freezable> and overriding the <xref:System.Windows.Freezable.FreezeCore%2A> method.  This method may be used in the <xref:System.Windows.Freezable.FreezeCore%2A> method to freeze class data members that are themselves <xref:System.Windows.Freezable> objects.       It is alright to call this method again on a <xref:System.Windows.Freezable> object that is already frozen (unmodifiable).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Do not call this method unless you are deriving from <xref:System.Windows.Freezable> and overriding the <xref:System.Windows.Freezable.FreezeCore%2A> method.  This method may be used in the <xref:System.Windows.Freezable.FreezeCore%2A> method to freeze class data members that are themselves <xref:System.Windows.Freezable> objects.       It is alright to call this method again on a <xref:System.Windows.Freezable> object that is already frozen (unmodifiable).","pos":[0,461],"nodes":[{"content":"Do not call this method unless you are deriving from &lt;xref:System.Windows.Freezable&gt; and overriding the &lt;xref:System.Windows.Freezable.FreezeCore%2A&gt; method.","pos":[0,157],"source":"Do not call this method unless you are deriving from <xref:System.Windows.Freezable> and overriding the <xref:System.Windows.Freezable.FreezeCore%2A> method."},{"content":"This method may be used in the &lt;xref:System.Windows.Freezable.FreezeCore%2A&gt; method to freeze class data members that are themselves &lt;xref:System.Windows.Freezable&gt; objects.","pos":[159,332],"source":"  This method may be used in the <xref:System.Windows.Freezable.FreezeCore%2A> method to freeze class data members that are themselves <xref:System.Windows.Freezable> objects."},{"content":"It is alright to call this method again on a &lt;xref:System.Windows.Freezable&gt; object that is already frozen (unmodifiable).","pos":[339,461],"source":"       It is alright to call this method again on a <xref:System.Windows.Freezable> object that is already frozen (unmodifiable)."}]}]},{"pos":[19880,20203],"content":"The object to check or make unmodifiable. If `isChecking` is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the object is checked to determine whether it can be made unmodifiable. If `isChecking` is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, the object is made unmodifiable, if possible.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to check or make unmodifiable.","pos":[0,41]},{"content":"If <ph id=\"ph1\">`isChecking`</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the object is checked to determine whether it can be made unmodifiable.","pos":[42,194],"source":" If `isChecking` is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the object is checked to determine whether it can be made unmodifiable."},{"content":"If <ph id=\"ph1\">`isChecking`</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the object is made unmodifiable, if possible.","pos":[195,323],"source":" If `isChecking` is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, the object is made unmodifiable, if possible."}]},{"pos":[20271,20517],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to return an indication of whether the object can be frozen (without actually freezing it); <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to actually freeze the object.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to return an indication of whether the object can be frozen (without actually freezing it); <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to actually freeze the object."},{"pos":[20576,21298],"content":"If <code>isChecking</code> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, this method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref href=\"System.Windows.Freezable\"></xref> can be made unmodifiable, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it cannot be made unmodifiable. If <code>isChecking</code> is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, this method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref href=\"System.Windows.Freezable\"></xref> is now unmodifiable, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it cannot be made unmodifiable.","needQuote":true,"needEscape":true,"nodes":[{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">isChecking</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, this method returns <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if the specified <bpt id=\"p4\">&lt;xref href=\"System.Windows.Freezable\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> can be made unmodifiable, or <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept> if it cannot be made unmodifiable.","pos":[0,362],"source":"If <code>isChecking</code> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, this method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref href=\"System.Windows.Freezable\"></xref> can be made unmodifiable, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it cannot be made unmodifiable."},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">isChecking</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, this method returns <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if the specified <bpt id=\"p4\">&lt;xref href=\"System.Windows.Freezable\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> is now unmodifiable, or <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept> if it cannot be made unmodifiable.","pos":[363,722],"source":" If <code>isChecking</code> is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, this method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref href=\"System.Windows.Freezable\"></xref> is now unmodifiable, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it cannot be made unmodifiable."}]},{"pos":[21468,21707],"content":"When <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">isChecking</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, the attempt to make <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">freezable</ph><ept id=\"p3\">&lt;/code&gt;</ept> unmodifiable was unsuccessful; the object is now in an unknown state (it might be partially frozen).","needQuote":true,"needEscape":true,"source":"When <code>isChecking</code> is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, the attempt to make <code>freezable</code> unmodifiable was unsuccessful; the object is now in an unknown state (it might be partially frozen)."},{"pos":[22093,22214],"content":"Makes the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Freezable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object unmodifiable or tests whether it can be made unmodifiable.","needQuote":true,"needEscape":true,"source":"Makes the <xref href=\"System.Windows.Freezable\"></xref> object unmodifiable or tests whether it can be made unmodifiable."},{"pos":[22226,22532],"content":"Do not call this method directly (except when calling base in an implementation). This method is called internally by the <xref:System.Windows.Freezable.CanFreeze%2A> property (with `isChecking` equal to `true`) and the <xref:System.Windows.Freezable.Freeze%2A> method (with `isChecking` equal to `false`).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Do not call this method directly (except when calling base in an implementation).","pos":[0,81]},{"content":"This method is called internally by the &lt;xref:System.Windows.Freezable.CanFreeze%2A&gt; property (with <ph id=\"ph1\">`isChecking`</ph> equal to <ph id=\"ph2\">`true`</ph>) and the &lt;xref:System.Windows.Freezable.Freeze%2A&gt; method (with <ph id=\"ph3\">`isChecking`</ph> equal to <ph id=\"ph4\">`false`</ph>).","pos":[82,306],"source":" This method is called internally by the <xref:System.Windows.Freezable.CanFreeze%2A> property (with `isChecking` equal to `true`) and the <xref:System.Windows.Freezable.Freeze%2A> method (with `isChecking` equal to `false`)."}]},{"pos":[22692,22938],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to return an indication of whether the object can be frozen (without actually freezing it); <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to actually freeze the object.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to return an indication of whether the object can be frozen (without actually freezing it); <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to actually freeze the object."},{"pos":[22997,23716],"content":"If <code>isChecking</code> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, this method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Freezable\"></xref> can be made unmodifiable, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it cannot be made unmodifiable. If <code>isChecking</code> is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, this method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the if the specified <xref href=\"System.Windows.Freezable\"></xref> is now unmodifiable, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it cannot be made unmodifiable.","needQuote":true,"needEscape":true,"nodes":[{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">isChecking</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, this method returns <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if the <bpt id=\"p4\">&lt;xref href=\"System.Windows.Freezable\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> can be made unmodifiable, or <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept> if it cannot be made unmodifiable.","pos":[0,352],"source":"If <code>isChecking</code> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, this method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Freezable\"></xref> can be made unmodifiable, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it cannot be made unmodifiable."},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">isChecking</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, this method returns <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if the if the specified <bpt id=\"p4\">&lt;xref href=\"System.Windows.Freezable\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> is now unmodifiable, or <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept> if it cannot be made unmodifiable.","pos":[353,719],"source":" If <code>isChecking</code> is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, this method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the if the specified <xref href=\"System.Windows.Freezable\"></xref> is now unmodifiable, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it cannot be made unmodifiable."}]},{"pos":[24120,24314],"content":"Creates a frozen copy of the <xref href=\"System.Windows.Freezable\"></xref>, using base (non-animated) property values. Because the copy is frozen, any frozen sub-objects are copied by reference.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a frozen copy of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Freezable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, using base (non-animated) property values.","pos":[0,118],"source":"Creates a frozen copy of the <xref href=\"System.Windows.Freezable\"></xref>, using base (non-animated) property values."},{"content":"Because the copy is frozen, any frozen sub-objects are copied by reference.","pos":[119,194]}]},{"pos":[24327,25955],"content":"You should check the <xref:System.Windows.Freezable.CanFreeze%2A> property before calling this method to verify that the <xref:System.Windows.Freezable> can be frozen. Using this method is similar to creating a copy using the <xref:System.Windows.Freezable.Clone%2A> and then freezing it with the <xref:System.Windows.Freezable.Freeze%2A> method.       The GetAsFrozen and <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> methods can improve copying performance because they do not clone <xref:System.Windows.Freezable> sub-objects that are already frozen; they only copy them by reference.       The following table summarizes the differences between the GetAsFrozen and <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> methods.      |Action|GetAsFrozen method behavior|GetCurrentValueAsFrozen method behavior|   |------------|---------------------------------|---------------------------------------------|   |Copying a dependency property that has an expression|The method throws an <xref:System.InvalidOperationException> because it cannot <xref:System.Windows.Freezable.Freeze%2A> the property.|The current value of the expression is copied, but not the expression itself.|   |Copying an animated dependency property|The property's base (non-animated) value is copied. Animations are not copied.|The property's current animated value is copied. Animations are not copied.|       Note that unset properties are not copied, nor are read-only properties.       To create a copy of the <xref:System.Windows.Freezable> that is not frozen, use the <xref:System.Windows.Freezable.Clone%2A> method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You should check the <xref:System.Windows.Freezable.CanFreeze%2A> property before calling this method to verify that the <xref:System.Windows.Freezable> can be frozen. Using this method is similar to creating a copy using the <xref:System.Windows.Freezable.Clone%2A> and then freezing it with the <xref:System.Windows.Freezable.Freeze%2A> method.       The GetAsFrozen and <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> methods can improve copying performance because they do not clone <xref:System.Windows.Freezable> sub-objects that are already frozen; they only copy them by reference.       The following table summarizes the differences between the GetAsFrozen and <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> methods.      |Action|GetAsFrozen method behavior|GetCurrentValueAsFrozen method behavior|   |------------|---------------------------------|---------------------------------------------|   |Copying a dependency property that has an expression|The method throws an <xref:System.InvalidOperationException> because it cannot <xref:System.Windows.Freezable.Freeze%2A> the property.|The current value of the expression is copied, but not the expression itself.|   |Copying an animated dependency property|The property's base (non-animated) value is copied. Animations are not copied.|The property's current animated value is copied. Animations are not copied.|       Note that unset properties are not copied, nor are read-only properties.       To create a copy of the <xref:System.Windows.Freezable> that is not frozen, use the <xref:System.Windows.Freezable.Clone%2A> method.","pos":[0,1615],"nodes":[{"content":"You should check the &lt;xref:System.Windows.Freezable.CanFreeze%2A&gt; property before calling this method to verify that the &lt;xref:System.Windows.Freezable&gt; can be frozen.","pos":[0,167],"source":"You should check the <xref:System.Windows.Freezable.CanFreeze%2A> property before calling this method to verify that the <xref:System.Windows.Freezable> can be frozen."},{"content":"Using this method is similar to creating a copy using the &lt;xref:System.Windows.Freezable.Clone%2A&gt; and then freezing it with the &lt;xref:System.Windows.Freezable.Freeze%2A&gt; method.","pos":[168,346],"source":" Using this method is similar to creating a copy using the <xref:System.Windows.Freezable.Clone%2A> and then freezing it with the <xref:System.Windows.Freezable.Freeze%2A> method."},{"content":"The GetAsFrozen and &lt;xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A&gt; methods can improve copying performance because they do not clone &lt;xref:System.Windows.Freezable&gt; sub-objects that are already frozen; they only copy them by reference.","pos":[353,600],"source":"       The GetAsFrozen and <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> methods can improve copying performance because they do not clone <xref:System.Windows.Freezable> sub-objects that are already frozen; they only copy them by reference."},{"content":"The following table summarizes the differences between the GetAsFrozen and &lt;xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A&gt; methods.","pos":[607,749],"source":"       The following table summarizes the differences between the GetAsFrozen and <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> methods."},{"content":"|Action|GetAsFrozen method behavior|GetCurrentValueAsFrozen method behavior|   |------------|---------------------------------|---------------------------------------------|   |Copying a dependency property that has an expression|The method throws an &lt;xref:System.InvalidOperationException&gt; because it cannot &lt;xref:System.Windows.Freezable.Freeze%2A&gt; the property.|The current value of the expression is copied, but not the expression itself.|   |Copying an animated dependency property|The property's base (non-animated) value is copied.","pos":[755,1293],"source":"      |Action|GetAsFrozen method behavior|GetCurrentValueAsFrozen method behavior|   |------------|---------------------------------|---------------------------------------------|   |Copying a dependency property that has an expression|The method throws an <xref:System.InvalidOperationException> because it cannot <xref:System.Windows.Freezable.Freeze%2A> the property.|The current value of the expression is copied, but not the expression itself.|   |Copying an animated dependency property|The property's base (non-animated) value is copied."},{"content":"Animations are not copied.|The property's current animated value is copied.","pos":[1294,1369]},{"content":"Animations are not copied.|       Note that unset properties are not copied, nor are read-only properties.","pos":[1370,1476]},{"content":"To create a copy of the &lt;xref:System.Windows.Freezable&gt; that is not frozen, use the &lt;xref:System.Windows.Freezable.Clone%2A&gt; method.","pos":[1483,1615],"source":"       To create a copy of the <xref:System.Windows.Freezable> that is not frozen, use the <xref:System.Windows.Freezable.Clone%2A> method."}]}]},{"pos":[26115,26316],"content":"A frozen copy of the <xref href=\"System.Windows.Freezable\"></xref>. The copy's <xref:System.Windows.Freezable.IsFrozen*> property is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A frozen copy of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Freezable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,67],"source":"A frozen copy of the <xref href=\"System.Windows.Freezable\"></xref>."},{"content":"The copy's &lt;xref:System.Windows.Freezable.IsFrozen*&gt; property is set to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[68,201],"source":" The copy's <xref:System.Windows.Freezable.IsFrozen*> property is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[26491,26613],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Freezable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> cannot be frozen because it contains expressions or animated properties.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Freezable\"></xref> cannot be frozen because it contains expressions or animated properties."},{"pos":[27050,27189],"content":"Makes the instance a frozen clone of the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Freezable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> using base (non-animated) property values.","needQuote":true,"needEscape":true,"source":"Makes the instance a frozen clone of the specified <xref href=\"System.Windows.Freezable\"></xref> using base (non-animated) property values."},{"pos":[27201,27547],"content":"This method is called by the <xref:System.Windows.Freezable.GetAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is called by the <xref:System.Windows.Freezable.GetAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly.","pos":[0,346],"nodes":[{"content":"This method is called by the &lt;xref:System.Windows.Freezable.GetAsFrozen%2A&gt; method and should not be called directly from your code, except when calling the base implementation while overriding this method.","pos":[0,206],"source":"This method is called by the <xref:System.Windows.Freezable.GetAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method."},{"content":"To create a frozen copy of the current object, call &lt;xref:System.Windows.Freezable.GetAsFrozen%2A&gt; instead of calling this method directly.","pos":[207,346],"source":" To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly."}]}]},{"pos":[27752,27773],"content":"The instance to copy.","needQuote":true,"needEscape":true,"nodes":[{"content":"The instance to copy.","pos":[0,21]}]},{"pos":[28242,28423],"content":"Creates a frozen copy of the <xref href=\"System.Windows.Freezable\"></xref> using current property values. Because the copy is frozen, any frozen sub-objects are copied by reference.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a frozen copy of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Freezable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> using current property values.","pos":[0,105],"source":"Creates a frozen copy of the <xref href=\"System.Windows.Freezable\"></xref> using current property values."},{"content":"Because the copy is frozen, any frozen sub-objects are copied by reference.","pos":[106,181]}]},{"pos":[28436,29920],"content":"Using this method is similar to creating a copy using the <xref:System.Windows.Freezable.CloneCurrentValue%2A> and then freezing it with the <xref:System.Windows.Freezable.Freeze%2A> method.       The <xref:System.Windows.Freezable.GetAsFrozen%2A> and GetCurrentValueAsFrozen methods can improve copying performance because they do not clone <xref:System.Windows.Freezable> sub-objects that are already frozen; they only copy them by reference.       The following table summarizes the differences between the <xref:System.Windows.Freezable.GetAsFrozen%2A> and GetCurrentValueAsFrozen methods.      |Action|GetAsFrozen method behavior|GetCurrentValueAsFrozen method behavior|   |------------|---------------------------------|---------------------------------------------|   |Copying a dependency property that has an expression|The method throws an <xref:System.InvalidOperationException> because it cannot <xref:System.Windows.Freezable.Freeze%2A> the property.|The current value of the expression is copied, but not the expression itself.|   |Copying an animated dependency property|The property's base (non-animated) value is copied. Animations are not copied.|The property's current animated value is copied. Animations are not copied.|       Note that unset properties are not copied, nor are read-only properties.       To create a copy of the <xref:System.Windows.Freezable> that is not frozen, use the <xref:System.Windows.Freezable.CloneCurrentValue%2A> method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Using this method is similar to creating a copy using the <xref:System.Windows.Freezable.CloneCurrentValue%2A> and then freezing it with the <xref:System.Windows.Freezable.Freeze%2A> method.       The <xref:System.Windows.Freezable.GetAsFrozen%2A> and GetCurrentValueAsFrozen methods can improve copying performance because they do not clone <xref:System.Windows.Freezable> sub-objects that are already frozen; they only copy them by reference.       The following table summarizes the differences between the <xref:System.Windows.Freezable.GetAsFrozen%2A> and GetCurrentValueAsFrozen methods.      |Action|GetAsFrozen method behavior|GetCurrentValueAsFrozen method behavior|   |------------|---------------------------------|---------------------------------------------|   |Copying a dependency property that has an expression|The method throws an <xref:System.InvalidOperationException> because it cannot <xref:System.Windows.Freezable.Freeze%2A> the property.|The current value of the expression is copied, but not the expression itself.|   |Copying an animated dependency property|The property's base (non-animated) value is copied. Animations are not copied.|The property's current animated value is copied. Animations are not copied.|       Note that unset properties are not copied, nor are read-only properties.       To create a copy of the <xref:System.Windows.Freezable> that is not frozen, use the <xref:System.Windows.Freezable.CloneCurrentValue%2A> method.","pos":[0,1471],"nodes":[{"content":"Using this method is similar to creating a copy using the &lt;xref:System.Windows.Freezable.CloneCurrentValue%2A&gt; and then freezing it with the &lt;xref:System.Windows.Freezable.Freeze%2A&gt; method.","pos":[0,190],"source":"Using this method is similar to creating a copy using the <xref:System.Windows.Freezable.CloneCurrentValue%2A> and then freezing it with the <xref:System.Windows.Freezable.Freeze%2A> method."},{"content":"The &lt;xref:System.Windows.Freezable.GetAsFrozen%2A&gt; and GetCurrentValueAsFrozen methods can improve copying performance because they do not clone &lt;xref:System.Windows.Freezable&gt; sub-objects that are already frozen; they only copy them by reference.","pos":[197,444],"source":"       The <xref:System.Windows.Freezable.GetAsFrozen%2A> and GetCurrentValueAsFrozen methods can improve copying performance because they do not clone <xref:System.Windows.Freezable> sub-objects that are already frozen; they only copy them by reference."},{"content":"The following table summarizes the differences between the &lt;xref:System.Windows.Freezable.GetAsFrozen%2A&gt; and GetCurrentValueAsFrozen methods.","pos":[451,593],"source":"       The following table summarizes the differences between the <xref:System.Windows.Freezable.GetAsFrozen%2A> and GetCurrentValueAsFrozen methods."},{"content":"|Action|GetAsFrozen method behavior|GetCurrentValueAsFrozen method behavior|   |------------|---------------------------------|---------------------------------------------|   |Copying a dependency property that has an expression|The method throws an &lt;xref:System.InvalidOperationException&gt; because it cannot &lt;xref:System.Windows.Freezable.Freeze%2A&gt; the property.|The current value of the expression is copied, but not the expression itself.|   |Copying an animated dependency property|The property's base (non-animated) value is copied.","pos":[599,1137],"source":"      |Action|GetAsFrozen method behavior|GetCurrentValueAsFrozen method behavior|   |------------|---------------------------------|---------------------------------------------|   |Copying a dependency property that has an expression|The method throws an <xref:System.InvalidOperationException> because it cannot <xref:System.Windows.Freezable.Freeze%2A> the property.|The current value of the expression is copied, but not the expression itself.|   |Copying an animated dependency property|The property's base (non-animated) value is copied."},{"content":"Animations are not copied.|The property's current animated value is copied.","pos":[1138,1213]},{"content":"Animations are not copied.|       Note that unset properties are not copied, nor are read-only properties.","pos":[1214,1320]},{"content":"To create a copy of the &lt;xref:System.Windows.Freezable&gt; that is not frozen, use the &lt;xref:System.Windows.Freezable.CloneCurrentValue%2A&gt; method.","pos":[1327,1471],"source":"       To create a copy of the <xref:System.Windows.Freezable> that is not frozen, use the <xref:System.Windows.Freezable.CloneCurrentValue%2A> method."}]}]},{"pos":[30092,30293],"content":"A frozen copy of the <xref href=\"System.Windows.Freezable\"></xref>. The copy's <xref:System.Windows.Freezable.IsFrozen*> property is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A frozen copy of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Freezable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,67],"source":"A frozen copy of the <xref href=\"System.Windows.Freezable\"></xref>."},{"content":"The copy's &lt;xref:System.Windows.Freezable.IsFrozen*&gt; property is set to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[68,201],"source":" The copy's <xref:System.Windows.Freezable.IsFrozen*> property is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[30869,31066],"content":"Makes the current instance a frozen clone of the specified <xref href=\"System.Windows.Freezable\"></xref>. If the object has animated dependency properties, their current animated values are copied.","needQuote":true,"needEscape":true,"nodes":[{"content":"Makes the current instance a frozen clone of the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Freezable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,105],"source":"Makes the current instance a frozen clone of the specified <xref href=\"System.Windows.Freezable\"></xref>."},{"content":"If the object has animated dependency properties, their current animated values are copied.","pos":[106,197]}]},{"pos":[31078,31448],"content":"This method is called by the <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> instead of calling this method directly.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is called by the <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> instead of calling this method directly.","pos":[0,370],"nodes":[{"content":"This method is called by the &lt;xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A&gt; method and should not be called directly from your code, except when calling the base implementation while overriding this method.","pos":[0,218],"source":"This method is called by the <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method."},{"content":"To create a frozen copy of the current object, call &lt;xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A&gt; instead of calling this method directly.","pos":[219,370],"source":" To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> instead of calling this method directly."}]}]},{"pos":[31665,31734],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Freezable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to copy and freeze.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Freezable\"></xref> to copy and freeze."},{"pos":[32136,32207],"content":"Gets a value that indicates whether the object is currently modifiable.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the object is currently modifiable.","pos":[0,71]}]},{"pos":[32220,33349],"content":"Attempting to modify an object when its IsFrozen property is `true` throws an <xref:System.InvalidOperationException>.       This property is read-only from the object model perspective. Some of the documentation about <xref:System.Windows.Freezable> behaviors may mention \"sets IsFrozen to `true`\" or similar language when discussing the behavior of other methods of <xref:System.Windows.Freezable>, but this behavior is happening internally in the class instances, when methods of the instance manipulate the private variables that exist within the abstract class. To set the value of this property, you should call <xref:System.Windows.Freezable.Freeze%2A>. This effectively is a one-time operation to change the IsFrozen property from the initial default `false` state to the `true` state. There is no available means to set the value back to `false`. Instead, you could change any deep copy made from the original (see the <xref:System.Windows.Freezable.Clone%2A> method). This is by design and is how any derived class should behave when applied to the cases where the <xref:System.Windows.Freezable> pattern is useful.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Attempting to modify an object when its IsFrozen property is <ph id=\"ph1\">`true`</ph> throws an &lt;xref:System.InvalidOperationException&gt;.","pos":[0,118],"source":"Attempting to modify an object when its IsFrozen property is `true` throws an <xref:System.InvalidOperationException>."},{"content":"This property is read-only from the object model perspective.","pos":[125,186]},{"content":"Some of the documentation about &lt;xref:System.Windows.Freezable&gt; behaviors may mention \"sets IsFrozen to <ph id=\"ph1\">`true`</ph>\" or similar language when discussing the behavior of other methods of &lt;xref:System.Windows.Freezable&gt;, but this behavior is happening internally in the class instances, when methods of the instance manipulate the private variables that exist within the abstract class.","pos":[187,566],"source":" Some of the documentation about <xref:System.Windows.Freezable> behaviors may mention \"sets IsFrozen to `true`\" or similar language when discussing the behavior of other methods of <xref:System.Windows.Freezable>, but this behavior is happening internally in the class instances, when methods of the instance manipulate the private variables that exist within the abstract class."},{"content":"To set the value of this property, you should call &lt;xref:System.Windows.Freezable.Freeze%2A&gt;.","pos":[567,660],"source":" To set the value of this property, you should call <xref:System.Windows.Freezable.Freeze%2A>."},{"content":"This effectively is a one-time operation to change the IsFrozen property from the initial default <ph id=\"ph1\">`false`</ph> state to the <ph id=\"ph2\">`true`</ph> state.","pos":[661,793],"source":" This effectively is a one-time operation to change the IsFrozen property from the initial default `false` state to the `true` state."},{"content":"There is no available means to set the value back to <ph id=\"ph1\">`false`</ph>.","pos":[794,855],"source":" There is no available means to set the value back to `false`."},{"content":"Instead, you could change any deep copy made from the original (see the &lt;xref:System.Windows.Freezable.Clone%2A&gt; method).","pos":[856,977],"source":" Instead, you could change any deep copy made from the original (see the <xref:System.Windows.Freezable.Clone%2A> method)."},{"content":"This is by design and is how any derived class should behave when applied to the cases where the &lt;xref:System.Windows.Freezable&gt; pattern is useful.","pos":[978,1125],"source":" This is by design and is how any derived class should behave when applied to the cases where the <xref:System.Windows.Freezable> pattern is useful."}]},{"pos":[33462,33664],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the object is frozen and cannot be modified; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the object can be modified.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the object is frozen and cannot be modified; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the object can be modified."},{"pos":[34056,34145],"content":"Called when the current <bpt id=\"p1\">&lt;xref href=\"System.Windows.Freezable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is modified.","needQuote":true,"needEscape":true,"source":"Called when the current <xref href=\"System.Windows.Freezable\"></xref> object is modified."},{"pos":[34157,34245],"content":"This method is called whenever the <xref:System.Windows.Freezable.Changed> event occurs.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is called whenever the &lt;xref:System.Windows.Freezable.Changed&gt; event occurs.","pos":[0,88],"source":"This method is called whenever the <xref:System.Windows.Freezable.Changed> event occurs."}]},{"pos":[35031,35187],"content":"Ensures that appropriate context pointers are established for a <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyObjectType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> data member that has just been set.","needQuote":true,"needEscape":true,"source":"Ensures that appropriate context pointers are established for a <xref href=\"System.Windows.DependencyObjectType\"></xref> data member that has just been set."},{"pos":[35200,35579],"content":"This method should be called by <xref:System.Windows.Freezable> inheritors each time a <xref:System.Windows.DependencyObject> data member that is not stored as a <xref:System.Windows.DependencyProperty> is set.       This method does not need to be called for <xref:System.Windows.DependencyObject> data members that are stored using a <xref:System.Windows.DependencyProperty>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method should be called by <xref:System.Windows.Freezable> inheritors each time a <xref:System.Windows.DependencyObject> data member that is not stored as a <xref:System.Windows.DependencyProperty> is set.       This method does not need to be called for <xref:System.Windows.DependencyObject> data members that are stored using a <xref:System.Windows.DependencyProperty>.","pos":[0,377],"nodes":[{"content":"This method should be called by &lt;xref:System.Windows.Freezable&gt; inheritors each time a &lt;xref:System.Windows.DependencyObject&gt; data member that is not stored as a &lt;xref:System.Windows.DependencyProperty&gt; is set.","pos":[0,210],"source":"This method should be called by <xref:System.Windows.Freezable> inheritors each time a <xref:System.Windows.DependencyObject> data member that is not stored as a <xref:System.Windows.DependencyProperty> is set."},{"content":"This method does not need to be called for &lt;xref:System.Windows.DependencyObject&gt; data members that are stored using a &lt;xref:System.Windows.DependencyProperty&gt;.","pos":[217,377],"source":"       This method does not need to be called for <xref:System.Windows.DependencyObject> data members that are stored using a <xref:System.Windows.DependencyProperty>."}]}]},{"pos":[35830,35868],"content":"The previous value of the data member.","needQuote":true,"needEscape":true,"nodes":[{"content":"The previous value of the data member.","pos":[0,38]}]},{"pos":[35951,35988],"content":"The current value of the data member.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current value of the data member.","pos":[0,37]}]},{"pos":[36837,37001],"content":"This member supports the <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> infrastructure and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"source":"This member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code."},{"pos":[37295,37333],"content":"The previous value of the data member.","needQuote":true,"needEscape":true,"nodes":[{"content":"The previous value of the data member.","pos":[0,38]}]},{"pos":[37416,37453],"content":"The current value of the data member.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current value of the data member.","pos":[0,37]}]},{"pos":[37538,37564],"content":"The property that changed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The property that changed.","pos":[0,26]}]},{"pos":[38218,38543],"content":"Overrides the <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyObject\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation of &lt;xref:System.Windows.DependencyObject.OnPropertyChanged*&gt; to also invoke any <bpt id=\"p2\">&lt;xref href=\"System.Windows.Freezable.Changed\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> handlers in response to a changing dependency property of type <bpt id=\"p3\">&lt;xref href=\"System.Windows.Freezable\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Overrides the <xref href=\"System.Windows.DependencyObject\"></xref> implementation of <xref:System.Windows.DependencyObject.OnPropertyChanged*> to also invoke any <xref href=\"System.Windows.Freezable.Changed\"></xref> handlers in response to a changing dependency property of type <xref href=\"System.Windows.Freezable\"></xref>."},{"pos":[38555,38753],"content":"The event data contains information about only the <xref:System.Windows.Freezable> itself. Any sub-property information must be obtained through the <xref:System.Windows.Freezable.Changed> handlers.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The event data contains information about only the <xref:System.Windows.Freezable> itself. Any sub-property information must be obtained through the <xref:System.Windows.Freezable.Changed> handlers.","pos":[0,198],"nodes":[{"content":"The event data contains information about only the &lt;xref:System.Windows.Freezable&gt; itself.","pos":[0,90],"source":"The event data contains information about only the <xref:System.Windows.Freezable> itself."},{"content":"Any sub-property information must be obtained through the &lt;xref:System.Windows.Freezable.Changed&gt; handlers.","pos":[91,198],"source":" Any sub-property information must be obtained through the <xref:System.Windows.Freezable.Changed> handlers."}]}]},{"pos":[38983,39077],"content":"Event data that contains information about which property changed, and its old and new values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Event data that contains information about which property changed, and its old and new values.","pos":[0,94]}]},{"pos":[39493,39822],"content":"Ensures that the <xref href=\"System.Windows.Freezable\"></xref> is being accessed from a valid thread. Inheritors of <xref href=\"System.Windows.Freezable\"></xref> must call this method at the beginning of any [!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)] that reads data members that are not dependency properties.","needQuote":true,"needEscape":true,"nodes":[{"content":"Ensures that the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Freezable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is being accessed from a valid thread.","pos":[0,101],"source":"Ensures that the <xref href=\"System.Windows.Freezable\"></xref> is being accessed from a valid thread."},{"content":"Inheritors of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Freezable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> must call this method at the beginning of any <ph id=\"ph1\">[!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)]</ph> that reads data members that are not dependency properties.","pos":[102,329],"source":" Inheritors of <xref href=\"System.Windows.Freezable\"></xref> must call this method at the beginning of any [!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)] that reads data members that are not dependency properties."}]},{"pos":[40322,40704],"content":"Raises the <xref href=\"System.Windows.Freezable.Changed\"></xref> event for the <xref href=\"System.Windows.Freezable\"></xref> and invokes its <xref:System.Windows.Freezable.OnChanged*> method. Classes that derive from <xref href=\"System.Windows.Freezable\"></xref> should call this method at the end of any API that modifies class members that are not stored as dependency properties.","needQuote":true,"needEscape":true,"nodes":[{"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Freezable.Changed\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event for the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Freezable\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and invokes its &lt;xref:System.Windows.Freezable.OnChanged*&gt; method.","pos":[0,191],"source":"Raises the <xref href=\"System.Windows.Freezable.Changed\"></xref> event for the <xref href=\"System.Windows.Freezable\"></xref> and invokes its <xref:System.Windows.Freezable.OnChanged*> method."},{"content":"Classes that derive from <bpt id=\"p1\">&lt;xref href=\"System.Windows.Freezable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> should call this method at the end of any API that modifies class members that are not stored as dependency properties.","pos":[192,382],"source":" Classes that derive from <xref href=\"System.Windows.Freezable\"></xref> should call this method at the end of any API that modifies class members that are not stored as dependency properties."}]},{"pos":[41200,41570],"content":"Verifies that the <xref href=\"System.Windows.Freezable\"></xref> is not frozen and that it is being accessed from a valid threading context. <xref href=\"System.Windows.Freezable\"></xref> inheritors should call this method at the beginning of any [!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)] that writes to data members that are not dependency properties.","needQuote":true,"needEscape":true,"nodes":[{"content":"Verifies that the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Freezable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is not frozen and that it is being accessed from a valid threading context.","pos":[0,139],"source":"Verifies that the <xref href=\"System.Windows.Freezable\"></xref> is not frozen and that it is being accessed from a valid threading context."},{"content":"<bpt id=\"p1\">&lt;xref href=\"System.Windows.Freezable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> inheritors should call this method at the beginning of any <ph id=\"ph1\">[!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)]</ph> that writes to data members that are not dependency properties.","pos":[140,370],"source":"<xref href=\"System.Windows.Freezable\"></xref> inheritors should call this method at the beginning of any [!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)] that writes to data members that are not dependency properties."}]},{"pos":[41582,41805],"content":"This method calls <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> to verify the threading context is accessible, and it throws an exception if the <xref:System.Windows.Freezable> instance is already frozen.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method calls &lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt; to verify the threading context is accessible, and it throws an exception if the &lt;xref:System.Windows.Freezable&gt; instance is already frozen.","pos":[0,223],"source":"This method calls <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> to verify the threading context is accessible, and it throws an exception if the <xref:System.Windows.Freezable> instance is already frozen."}]},{"pos":[42057,42165],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Freezable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance is frozen and cannot have its members written to.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Freezable\"></xref> instance is frozen and cannot have its members written to."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Freezable\n  id: Freezable\n  children:\n  - System.Windows.Freezable.#ctor\n  - System.Windows.Freezable.CanFreeze\n  - System.Windows.Freezable.Changed\n  - System.Windows.Freezable.Clone\n  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CloneCurrentValue\n  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CreateInstance\n  - System.Windows.Freezable.CreateInstanceCore\n  - System.Windows.Freezable.Freeze\n  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  - System.Windows.Freezable.FreezeCore(System.Boolean)\n  - System.Windows.Freezable.GetAsFrozen\n  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.GetCurrentValueAsFrozen\n  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.IsFrozen\n  - System.Windows.Freezable.OnChanged\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.Freezable.ReadPreamble\n  - System.Windows.Freezable.WritePostscript\n  - System.Windows.Freezable.WritePreamble\n  langs:\n  - csharp\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n  type: Class\n  summary: Defines an object that has a modifiable state and a read-only (frozen) state. Classes that derive from Freezable provide detailed change notification, can be made immutable, and can clone themselves.\n  remarks: \"The Freezable class provides special features that can help improve application performance when using objects that are expensive to modify or copy. Examples of Freezable objects include the following:  \\n  \\n-   <xref:System.Windows.Media.Brush>  \\n  \\n-   <xref:System.Windows.Media.Pen>  \\n  \\n-   <xref:System.Windows.Media.Geometry>  \\n  \\n-   <xref:System.Windows.Media.Transform>  \\n  \\n-   <xref:System.Windows.Media.Animation.AnimationTimeline>  \\n  \\n## Deriving From Freezable  \\n A class that derives from Freezable gains the following features:  \\n  \\n-   Special states: a read-only (frozen) state and a writable state.  \\n  \\n-   Thread safety: a frozen Freezable object can be shared across threads.  \\n  \\n-   Detailed change notification: Unlike other <xref:System.Windows.DependencyObject> objects, a Freezable object provides change notifications when sub-property values change.  \\n  \\n-   Easy cloning: the Freezable class has already implemented several methods that produce deep clones.  \\n  \\n For information on using and creating your own Freezable objects, see [Freezable Objects Overview](../Topic/Freezable%20Objects%20Overview.md).\"\n  syntax:\n    content: 'public abstract class Freezable : System.Windows.DependencyObject'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  implements: []\n  inheritedMembers:\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  platform:\n  - net462\n- uid: System.Windows.Freezable.#ctor\n  id: '#ctor'\n  parent: System.Windows.Freezable\n  langs:\n  - csharp\n  name: Freezable()\n  nameWithType: Freezable.Freezable()\n  fullName: System.Windows.Freezable.Freezable()\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Initializes a new instance of a <xref href=\"System.Windows.Freezable\"></xref> derived class.\n  remarks: This is the protected-accessibility constructor of an abstract class.\n  syntax:\n    content: protected Freezable ();\n    parameters: []\n  overload: System.Windows.Freezable.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Freezable.CanFreeze\n  id: CanFreeze\n  parent: System.Windows.Freezable\n  langs:\n  - csharp\n  name: CanFreeze\n  nameWithType: Freezable.CanFreeze\n  fullName: System.Windows.Freezable.CanFreeze\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Gets a value that indicates whether the object can be made unmodifiable.\n  syntax:\n    content: public bool CanFreeze { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current object can be made unmodifiable or is already unmodifiable; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Freezable.CanFreeze*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Freezable.Changed\n  id: Changed\n  parent: System.Windows.Freezable\n  langs:\n  - csharp\n  name: Changed\n  nameWithType: Freezable.Changed\n  fullName: System.Windows.Freezable.Changed\n  type: Event\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Occurs when the <xref href=\"System.Windows.Freezable\"></xref> or an object it contains is modified.\n  remarks: If you attempt to add or remove event handlers when the current object is not modifiable (when the <xref:System.Windows.Freezable.IsFrozen%2A> property is `true`), an exception is thrown.\n  syntax:\n    content: public event EventHandler Changed;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Freezable.Clone\n  id: Clone\n  parent: System.Windows.Freezable\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: Freezable.Clone()\n  fullName: System.Windows.Freezable.Clone()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Creates a modifiable clone of the <xref href=\"System.Windows.Freezable\"></xref>, making deep copies of the object's values. When copying the object's dependency properties, this method copies expressions (which might no longer resolve) but not animations or their current values.\n  remarks: \"The Clone and <xref:System.Windows.Freezable.CloneCurrentValue%2A> methods produce modifiable clones of frozen <xref:System.Windows.Freezable> objects (the methods also clone <xref:System.Windows.Freezable> objects that are not frozen). The clone is effectively a deep copy of the current object.  \\n  \\n The following table summarizes the differences between the Clone and <xref:System.Windows.Freezable.CloneCurrentValue%2A> methods.  \\n  \\n|Action|Clone method behavior|CloneCurrentValue method behavior|  \\n|------------|---------------------------|---------------------------------------|  \\n|Copying a dependency property that has an expression|The expression is copied, but might no longer resolve. For more information, see [Freezable Objects Overview](~/add/includes/ajax-current-ext-md.md).|The current value of the expression is copied, but not the expression itself.|  \\n|Copying an animated dependency property|The property's base (non-animated) value is copied. Animations are not copied.|The property's current animated value is copied. Animations are not copied.|  \\n  \\n Note that unset properties are not copied. If an unset property has a default value that is a frozen <xref:System.Windows.Freezable>, that property value remains frozen in the otherwise modifiable clone.  \\n  \\n## Move a Freezable Between Threads  \\n This method can be useful for moving a <xref:System.Windows.Freezable> between threads. First, make the <xref:System.Windows.Freezable> unmodifiable by calling its <xref:System.Windows.Freezable.Freeze%2A> method. Now another thread can access the <xref:System.Windows.Freezable> and make a local Clone that it can access.\"\n  syntax:\n    content: public System.Windows.Freezable Clone ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: A modifiable clone of the current object. The cloned object's <xref:System.Windows.Freezable.IsFrozen*> property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> even if the source's <xref:System.Windows.Freezable.IsFrozen*> property is <xref uid=\"langword_csharp_true.\" name=\"true.\" href=\"\"></xref>\n  overload: System.Windows.Freezable.Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  id: CloneCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  langs:\n  - csharp\n  name: CloneCore(Freezable)\n  nameWithType: Freezable.CloneCore(Freezable)\n  fullName: System.Windows.Freezable.CloneCore(Freezable)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Makes the instance a clone (deep copy) of the specified <xref href=\"System.Windows.Freezable\"></xref> using base (non-animated) property values.\n  remarks: This method is called by the <xref:System.Windows.Freezable.Clone%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.Clone%2A> instead of calling this method directly.\n  syntax:\n    content: protected virtual void CloneCore (System.Windows.Freezable sourceFreezable);\n    parameters:\n    - id: sourceFreezable\n      type: System.Windows.Freezable\n      description: The object to clone.\n  overload: System.Windows.Freezable.CloneCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Freezable.CloneCurrentValue\n  id: CloneCurrentValue\n  parent: System.Windows.Freezable\n  langs:\n  - csharp\n  name: CloneCurrentValue()\n  nameWithType: Freezable.CloneCurrentValue()\n  fullName: System.Windows.Freezable.CloneCurrentValue()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Creates a modifiable clone (deep copy) of the <xref href=\"System.Windows.Freezable\"></xref> using its current values.\n  remarks: \"The <xref:System.Windows.Freezable.Clone%2A> and CloneCurrentValue methods produce modifiable clones of frozen <xref:System.Windows.Freezable> objects (the methods also clone <xref:System.Windows.Freezable> objects that are not frozen). The clone is effectively a deep copy of the current object.  \\n  \\n The following table summarizes the differences between the <xref:System.Windows.Freezable.Clone%2A> and CloneCurrentValue methods.  \\n  \\n|Action|Clone method behavior|CloneCurrentValue method behavior|  \\n|------------|---------------------------|---------------------------------------|  \\n|Copying a dependency property that has an expression|The expression is copied, but might no longer resolve. For more information, see [Freezable Objects Overview](~/add/includes/ajax-current-ext-md.md).|The current value of the expression is copied, but not the expression itself.|  \\n|Copying an animated dependency property|The property's base (non-animated) value is copied. Animations are not copied.|The property's current animated value is copied. Animations are not copied.|  \\n  \\n Note that unset properties are not copied. If an unset property has a default value that is a frozen <xref:System.Windows.Freezable>, that property value remains frozen in the otherwise modifiable clone.  \\n  \\n## Move a Freezable Between Threads  \\n This method can be useful for moving a <xref:System.Windows.Freezable> between threads. First, make the <xref:System.Windows.Freezable> unmodifiable by using its <xref:System.Windows.Freezable.Freeze%2A> method. Now another thread can access the <xref:System.Windows.Freezable> and make a local clone that it can access.\"\n  syntax:\n    content: public System.Windows.Freezable CloneCurrentValue ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: A modifiable clone of the current object. The cloned object's <xref:System.Windows.Freezable.IsFrozen*> property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> even if the source's <xref:System.Windows.Freezable.IsFrozen*> property is <xref uid=\"langword_csharp_true.\" name=\"true.\" href=\"\"></xref>\n  overload: System.Windows.Freezable.CloneCurrentValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  id: CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  langs:\n  - csharp\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: Freezable.CloneCurrentValueCore(Freezable)\n  fullName: System.Windows.Freezable.CloneCurrentValueCore(Freezable)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Makes the instance a modifiable clone (deep copy) of the specified <xref href=\"System.Windows.Freezable\"></xref> using current property values.\n  remarks: This method is called by the <xref:System.Windows.Freezable.CloneCurrentValue%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.CloneCurrentValue%2A> instead of calling this method directly.\n  syntax:\n    content: protected virtual void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);\n    parameters:\n    - id: sourceFreezable\n      type: System.Windows.Freezable\n      description: The <xref href=\"System.Windows.Freezable\"></xref> to be cloned.\n  overload: System.Windows.Freezable.CloneCurrentValueCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Freezable.CreateInstance\n  id: CreateInstance\n  parent: System.Windows.Freezable\n  langs:\n  - csharp\n  name: CreateInstance()\n  nameWithType: Freezable.CreateInstance()\n  fullName: System.Windows.Freezable.CreateInstance()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Freezable\"></xref> class.\n  remarks: This is a protected method, and the actual object-specific implementations for the behavior are dependent on the override implementation of the <xref:System.Windows.Freezable.CreateInstanceCore%2A> method, which this method calls internally.\n  syntax:\n    content: protected System.Windows.Freezable CreateInstance ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: The new instance.\n  overload: System.Windows.Freezable.CreateInstance*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Freezable.CreateInstanceCore\n  id: CreateInstanceCore\n  parent: System.Windows.Freezable\n  langs:\n  - csharp\n  name: CreateInstanceCore()\n  nameWithType: Freezable.CreateInstanceCore()\n  fullName: System.Windows.Freezable.CreateInstanceCore()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: When implemented in a derived class, creates a new instance of the <xref href=\"System.Windows.Freezable\"></xref> derived class.\n  remarks: Do not call this method directly (except when calling base in an implementation). This method is called internally by the <xref:System.Windows.Freezable.CreateInstance%2A> method whenever a new instance of the <xref:System.Windows.Freezable> is created.\n  example:\n  - \"The following example shows a typical implementation of CreateInstanceCore.  \\n  \\n [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/add/codesnippet/visualbasic/freezablesample_visualbasic/freezablesample.vb#createinstancecoreexample)]\\n [!code-cs[freezablesample_procedural#CreateInstanceCoreExample](~/add/codesnippet/csharp/freezablesample_csharp/freezablesample.cs#createinstancecoreexample)]\"\n  syntax:\n    content: protected abstract System.Windows.Freezable CreateInstanceCore ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: The new instance.\n  overload: System.Windows.Freezable.CreateInstanceCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Freezable.Freeze\n  id: Freeze\n  parent: System.Windows.Freezable\n  langs:\n  - csharp\n  name: Freeze()\n  nameWithType: Freezable.Freeze()\n  fullName: System.Windows.Freezable.Freeze()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Makes the current object unmodifiable and sets its <xref:System.Windows.Freezable.IsFrozen*> property to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  remarks: To avoid the possibility of an <xref:System.InvalidOperationException> when calling this method, check the <xref:System.Windows.Freezable.CanFreeze%2A> property to determine whether the <xref:System.Windows.Freezable> can be made unmodifiable before calling this method.\n  syntax:\n    content: public void Freeze ();\n    parameters: []\n  overload: System.Windows.Freezable.Freeze*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Windows.Freezable\"></xref> cannot be made unmodifiable.\n  platform:\n  - net462\n- uid: System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  id: Freeze(System.Windows.Freezable,System.Boolean)\n  parent: System.Windows.Freezable\n  langs:\n  - csharp\n  name: Freeze(Freezable,Boolean)\n  nameWithType: Freezable.Freeze(Freezable,Boolean)\n  fullName: System.Windows.Freezable.Freeze(Freezable,Boolean)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: If the <code>isChecking</code> parameter is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, this method indicates whether the specified <xref href=\"System.Windows.Freezable\"></xref> can be made unmodifiable. If the <code>isChecking</code> parameter is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, this method attempts to make the specified <xref href=\"System.Windows.Freezable\"></xref> unmodifiable and indicates whether the operation succeeded.\n  remarks: \"Do not call this method unless you are deriving from <xref:System.Windows.Freezable> and overriding the <xref:System.Windows.Freezable.FreezeCore%2A> method.  This method may be used in the <xref:System.Windows.Freezable.FreezeCore%2A> method to freeze class data members that are themselves <xref:System.Windows.Freezable> objects.  \\n  \\n It is alright to call this method again on a <xref:System.Windows.Freezable> object that is already frozen (unmodifiable).\"\n  syntax:\n    content: protected static bool Freeze (System.Windows.Freezable freezable, bool isChecking);\n    parameters:\n    - id: freezable\n      type: System.Windows.Freezable\n      description: The object to check or make unmodifiable. If `isChecking` is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the object is checked to determine whether it can be made unmodifiable. If `isChecking` is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, the object is made unmodifiable, if possible.\n    - id: isChecking\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to return an indication of whether the object can be frozen (without actually freezing it); <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to actually freeze the object.\n    return:\n      type: System.Boolean\n      description: If <code>isChecking</code> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, this method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref href=\"System.Windows.Freezable\"></xref> can be made unmodifiable, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it cannot be made unmodifiable. If <code>isChecking</code> is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, this method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref href=\"System.Windows.Freezable\"></xref> is now unmodifiable, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it cannot be made unmodifiable.\n  overload: System.Windows.Freezable.Freeze*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: When <code>isChecking</code> is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, the attempt to make <code>freezable</code> unmodifiable was unsuccessful; the object is now in an unknown state (it might be partially frozen).\n  platform:\n  - net462\n- uid: System.Windows.Freezable.FreezeCore(System.Boolean)\n  id: FreezeCore(System.Boolean)\n  parent: System.Windows.Freezable\n  langs:\n  - csharp\n  name: FreezeCore(Boolean)\n  nameWithType: Freezable.FreezeCore(Boolean)\n  fullName: System.Windows.Freezable.FreezeCore(Boolean)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Makes the <xref href=\"System.Windows.Freezable\"></xref> object unmodifiable or tests whether it can be made unmodifiable.\n  remarks: Do not call this method directly (except when calling base in an implementation). This method is called internally by the <xref:System.Windows.Freezable.CanFreeze%2A> property (with `isChecking` equal to `true`) and the <xref:System.Windows.Freezable.Freeze%2A> method (with `isChecking` equal to `false`).\n  syntax:\n    content: protected virtual bool FreezeCore (bool isChecking);\n    parameters:\n    - id: isChecking\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to return an indication of whether the object can be frozen (without actually freezing it); <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to actually freeze the object.\n    return:\n      type: System.Boolean\n      description: If <code>isChecking</code> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, this method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Freezable\"></xref> can be made unmodifiable, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it cannot be made unmodifiable. If <code>isChecking</code> is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, this method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the if the specified <xref href=\"System.Windows.Freezable\"></xref> is now unmodifiable, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it cannot be made unmodifiable.\n  overload: System.Windows.Freezable.FreezeCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Freezable.GetAsFrozen\n  id: GetAsFrozen\n  parent: System.Windows.Freezable\n  langs:\n  - csharp\n  name: GetAsFrozen()\n  nameWithType: Freezable.GetAsFrozen()\n  fullName: System.Windows.Freezable.GetAsFrozen()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Creates a frozen copy of the <xref href=\"System.Windows.Freezable\"></xref>, using base (non-animated) property values. Because the copy is frozen, any frozen sub-objects are copied by reference.\n  remarks: \"You should check the <xref:System.Windows.Freezable.CanFreeze%2A> property before calling this method to verify that the <xref:System.Windows.Freezable> can be frozen. Using this method is similar to creating a copy using the <xref:System.Windows.Freezable.Clone%2A> and then freezing it with the <xref:System.Windows.Freezable.Freeze%2A> method.  \\n  \\n The GetAsFrozen and <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> methods can improve copying performance because they do not clone <xref:System.Windows.Freezable> sub-objects that are already frozen; they only copy them by reference.  \\n  \\n The following table summarizes the differences between the GetAsFrozen and <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> methods.  \\n  \\n|Action|GetAsFrozen method behavior|GetCurrentValueAsFrozen method behavior|  \\n|------------|---------------------------------|---------------------------------------------|  \\n|Copying a dependency property that has an expression|The method throws an <xref:System.InvalidOperationException> because it cannot <xref:System.Windows.Freezable.Freeze%2A> the property.|The current value of the expression is copied, but not the expression itself.|  \\n|Copying an animated dependency property|The property's base (non-animated) value is copied. Animations are not copied.|The property's current animated value is copied. Animations are not copied.|  \\n  \\n Note that unset properties are not copied, nor are read-only properties.  \\n  \\n To create a copy of the <xref:System.Windows.Freezable> that is not frozen, use the <xref:System.Windows.Freezable.Clone%2A> method.\"\n  syntax:\n    content: public System.Windows.Freezable GetAsFrozen ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: A frozen copy of the <xref href=\"System.Windows.Freezable\"></xref>. The copy's <xref:System.Windows.Freezable.IsFrozen*> property is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Windows.Freezable.GetAsFrozen*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Windows.Freezable\"></xref> cannot be frozen because it contains expressions or animated properties.\n  platform:\n  - net462\n- uid: System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)\n  id: GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  langs:\n  - csharp\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: Freezable.GetAsFrozenCore(Freezable)\n  fullName: System.Windows.Freezable.GetAsFrozenCore(Freezable)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Makes the instance a frozen clone of the specified <xref href=\"System.Windows.Freezable\"></xref> using base (non-animated) property values.\n  remarks: This method is called by the <xref:System.Windows.Freezable.GetAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly.\n  syntax:\n    content: protected virtual void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);\n    parameters:\n    - id: sourceFreezable\n      type: System.Windows.Freezable\n      description: The instance to copy.\n  overload: System.Windows.Freezable.GetAsFrozenCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Freezable.GetCurrentValueAsFrozen\n  id: GetCurrentValueAsFrozen\n  parent: System.Windows.Freezable\n  langs:\n  - csharp\n  name: GetCurrentValueAsFrozen()\n  nameWithType: Freezable.GetCurrentValueAsFrozen()\n  fullName: System.Windows.Freezable.GetCurrentValueAsFrozen()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Creates a frozen copy of the <xref href=\"System.Windows.Freezable\"></xref> using current property values. Because the copy is frozen, any frozen sub-objects are copied by reference.\n  remarks: \"Using this method is similar to creating a copy using the <xref:System.Windows.Freezable.CloneCurrentValue%2A> and then freezing it with the <xref:System.Windows.Freezable.Freeze%2A> method.  \\n  \\n The <xref:System.Windows.Freezable.GetAsFrozen%2A> and GetCurrentValueAsFrozen methods can improve copying performance because they do not clone <xref:System.Windows.Freezable> sub-objects that are already frozen; they only copy them by reference.  \\n  \\n The following table summarizes the differences between the <xref:System.Windows.Freezable.GetAsFrozen%2A> and GetCurrentValueAsFrozen methods.  \\n  \\n|Action|GetAsFrozen method behavior|GetCurrentValueAsFrozen method behavior|  \\n|------------|---------------------------------|---------------------------------------------|  \\n|Copying a dependency property that has an expression|The method throws an <xref:System.InvalidOperationException> because it cannot <xref:System.Windows.Freezable.Freeze%2A> the property.|The current value of the expression is copied, but not the expression itself.|  \\n|Copying an animated dependency property|The property's base (non-animated) value is copied. Animations are not copied.|The property's current animated value is copied. Animations are not copied.|  \\n  \\n Note that unset properties are not copied, nor are read-only properties.  \\n  \\n To create a copy of the <xref:System.Windows.Freezable> that is not frozen, use the <xref:System.Windows.Freezable.CloneCurrentValue%2A> method.\"\n  syntax:\n    content: public System.Windows.Freezable GetCurrentValueAsFrozen ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: A frozen copy of the <xref href=\"System.Windows.Freezable\"></xref>. The copy's <xref:System.Windows.Freezable.IsFrozen*> property is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Windows.Freezable.GetCurrentValueAsFrozen*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  id: GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  langs:\n  - csharp\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: Freezable.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: System.Windows.Freezable.GetCurrentValueAsFrozenCore(Freezable)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Makes the current instance a frozen clone of the specified <xref href=\"System.Windows.Freezable\"></xref>. If the object has animated dependency properties, their current animated values are copied.\n  remarks: This method is called by the <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> instead of calling this method directly.\n  syntax:\n    content: protected virtual void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);\n    parameters:\n    - id: sourceFreezable\n      type: System.Windows.Freezable\n      description: The <xref href=\"System.Windows.Freezable\"></xref> to copy and freeze.\n  overload: System.Windows.Freezable.GetCurrentValueAsFrozenCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Freezable.IsFrozen\n  id: IsFrozen\n  parent: System.Windows.Freezable\n  langs:\n  - csharp\n  name: IsFrozen\n  nameWithType: Freezable.IsFrozen\n  fullName: System.Windows.Freezable.IsFrozen\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Gets a value that indicates whether the object is currently modifiable.\n  remarks: \"Attempting to modify an object when its IsFrozen property is `true` throws an <xref:System.InvalidOperationException>.  \\n  \\n This property is read-only from the object model perspective. Some of the documentation about <xref:System.Windows.Freezable> behaviors may mention \\\"sets IsFrozen to `true`\\\" or similar language when discussing the behavior of other methods of <xref:System.Windows.Freezable>, but this behavior is happening internally in the class instances, when methods of the instance manipulate the private variables that exist within the abstract class. To set the value of this property, you should call <xref:System.Windows.Freezable.Freeze%2A>. This effectively is a one-time operation to change the IsFrozen property from the initial default `false` state to the `true` state. There is no available means to set the value back to `false`. Instead, you could change any deep copy made from the original (see the <xref:System.Windows.Freezable.Clone%2A> method). This is by design and is how any derived class should behave when applied to the cases where the <xref:System.Windows.Freezable> pattern is useful.\"\n  syntax:\n    content: public bool IsFrozen { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the object is frozen and cannot be modified; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the object can be modified.\n  overload: System.Windows.Freezable.IsFrozen*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Freezable.OnChanged\n  id: OnChanged\n  parent: System.Windows.Freezable\n  langs:\n  - csharp\n  name: OnChanged()\n  nameWithType: Freezable.OnChanged()\n  fullName: System.Windows.Freezable.OnChanged()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Called when the current <xref href=\"System.Windows.Freezable\"></xref> object is modified.\n  remarks: This method is called whenever the <xref:System.Windows.Freezable.Changed> event occurs.\n  syntax:\n    content: protected virtual void OnChanged ();\n    parameters: []\n  overload: System.Windows.Freezable.OnChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  id: OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  parent: System.Windows.Freezable\n  langs:\n  - csharp\n  name: OnFreezablePropertyChanged(DependencyObject,DependencyObject)\n  nameWithType: Freezable.OnFreezablePropertyChanged(DependencyObject,DependencyObject)\n  fullName: System.Windows.Freezable.OnFreezablePropertyChanged(DependencyObject,DependencyObject)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Ensures that appropriate context pointers are established for a <xref href=\"System.Windows.DependencyObjectType\"></xref> data member that has just been set.\n  remarks: \"This method should be called by <xref:System.Windows.Freezable> inheritors each time a <xref:System.Windows.DependencyObject> data member that is not stored as a <xref:System.Windows.DependencyProperty> is set.  \\n  \\n This method does not need to be called for <xref:System.Windows.DependencyObject> data members that are stored using a <xref:System.Windows.DependencyProperty>.\"\n  syntax:\n    content: protected void OnFreezablePropertyChanged (System.Windows.DependencyObject oldValue, System.Windows.DependencyObject newValue);\n    parameters:\n    - id: oldValue\n      type: System.Windows.DependencyObject\n      description: The previous value of the data member.\n    - id: newValue\n      type: System.Windows.DependencyObject\n      description: The current value of the data member.\n  overload: System.Windows.Freezable.OnFreezablePropertyChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  id: OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  parent: System.Windows.Freezable\n  langs:\n  - csharp\n  name: OnFreezablePropertyChanged(DependencyObject,DependencyObject,DependencyProperty)\n  nameWithType: Freezable.OnFreezablePropertyChanged(DependencyObject,DependencyObject,DependencyProperty)\n  fullName: System.Windows.Freezable.OnFreezablePropertyChanged(DependencyObject,DependencyObject,DependencyProperty)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: This member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code.\n  syntax:\n    content: protected void OnFreezablePropertyChanged (System.Windows.DependencyObject oldValue, System.Windows.DependencyObject newValue, System.Windows.DependencyProperty property);\n    parameters:\n    - id: oldValue\n      type: System.Windows.DependencyObject\n      description: The previous value of the data member.\n    - id: newValue\n      type: System.Windows.DependencyObject\n      description: The current value of the data member.\n    - id: property\n      type: System.Windows.DependencyProperty\n      description: The property that changed.\n  overload: System.Windows.Freezable.OnFreezablePropertyChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  id: OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.Freezable\n  langs:\n  - csharp\n  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  fullName: System.Windows.Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Overrides the <xref href=\"System.Windows.DependencyObject\"></xref> implementation of <xref:System.Windows.DependencyObject.OnPropertyChanged*> to also invoke any <xref href=\"System.Windows.Freezable.Changed\"></xref> handlers in response to a changing dependency property of type <xref href=\"System.Windows.Freezable\"></xref>.\n  remarks: The event data contains information about only the <xref:System.Windows.Freezable> itself. Any sub-property information must be obtained through the <xref:System.Windows.Freezable.Changed> handlers.\n  syntax:\n    content: protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.DependencyPropertyChangedEventArgs\n      description: Event data that contains information about which property changed, and its old and new values.\n  overload: System.Windows.Freezable.OnPropertyChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Freezable.ReadPreamble\n  id: ReadPreamble\n  parent: System.Windows.Freezable\n  langs:\n  - csharp\n  name: ReadPreamble()\n  nameWithType: Freezable.ReadPreamble()\n  fullName: System.Windows.Freezable.ReadPreamble()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Ensures that the <xref href=\"System.Windows.Freezable\"></xref> is being accessed from a valid thread. Inheritors of <xref href=\"System.Windows.Freezable\"></xref> must call this method at the beginning of any [!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)] that reads data members that are not dependency properties.\n  syntax:\n    content: protected void ReadPreamble ();\n    parameters: []\n  overload: System.Windows.Freezable.ReadPreamble*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Freezable.WritePostscript\n  id: WritePostscript\n  parent: System.Windows.Freezable\n  langs:\n  - csharp\n  name: WritePostscript()\n  nameWithType: Freezable.WritePostscript()\n  fullName: System.Windows.Freezable.WritePostscript()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Raises the <xref href=\"System.Windows.Freezable.Changed\"></xref> event for the <xref href=\"System.Windows.Freezable\"></xref> and invokes its <xref:System.Windows.Freezable.OnChanged*> method. Classes that derive from <xref href=\"System.Windows.Freezable\"></xref> should call this method at the end of any API that modifies class members that are not stored as dependency properties.\n  syntax:\n    content: protected void WritePostscript ();\n    parameters: []\n  overload: System.Windows.Freezable.WritePostscript*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Freezable.WritePreamble\n  id: WritePreamble\n  parent: System.Windows.Freezable\n  langs:\n  - csharp\n  name: WritePreamble()\n  nameWithType: Freezable.WritePreamble()\n  fullName: System.Windows.Freezable.WritePreamble()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Verifies that the <xref href=\"System.Windows.Freezable\"></xref> is not frozen and that it is being accessed from a valid threading context. <xref href=\"System.Windows.Freezable\"></xref> inheritors should call this method at the beginning of any [!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)] that writes to data members that are not dependency properties.\n  remarks: This method calls <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> to verify the threading context is accessible, and it throws an exception if the <xref:System.Windows.Freezable> instance is already frozen.\n  syntax:\n    content: protected void WritePreamble ();\n    parameters: []\n  overload: System.Windows.Freezable.WritePreamble*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Windows.Freezable\"></xref> instance is frozen and cannot have its members written to.\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.DependencyObject\n  isExternal: false\n  name: System.Windows.DependencyObject\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Windows.Freezable.#ctor\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Freezable()\n  nameWithType: Freezable.Freezable()\n  fullName: System.Windows.Freezable.Freezable()\n- uid: System.Windows.Freezable.CanFreeze\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CanFreeze\n  nameWithType: Freezable.CanFreeze\n  fullName: System.Windows.Freezable.CanFreeze\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Freezable.Changed\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Changed\n  nameWithType: Freezable.Changed\n  fullName: System.Windows.Freezable.Changed\n- uid: System.EventHandler\n  parent: System\n  isExternal: true\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Windows.Freezable.Clone\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Clone()\n  nameWithType: Freezable.Clone()\n  fullName: System.Windows.Freezable.Clone()\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: false\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCore(Freezable)\n  nameWithType: Freezable.CloneCore(Freezable)\n  fullName: System.Windows.Freezable.CloneCore(Freezable)\n- uid: System.Windows.Freezable.CloneCurrentValue\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCurrentValue()\n  nameWithType: Freezable.CloneCurrentValue()\n  fullName: System.Windows.Freezable.CloneCurrentValue()\n- uid: System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: Freezable.CloneCurrentValueCore(Freezable)\n  fullName: System.Windows.Freezable.CloneCurrentValueCore(Freezable)\n- uid: System.Windows.Freezable.CreateInstance\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CreateInstance()\n  nameWithType: Freezable.CreateInstance()\n  fullName: System.Windows.Freezable.CreateInstance()\n- uid: System.Windows.Freezable.CreateInstanceCore\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CreateInstanceCore()\n  nameWithType: Freezable.CreateInstanceCore()\n  fullName: System.Windows.Freezable.CreateInstanceCore()\n- uid: System.Windows.Freezable.Freeze\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Freeze()\n  nameWithType: Freezable.Freeze()\n  fullName: System.Windows.Freezable.Freeze()\n- uid: System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Freeze(Freezable,Boolean)\n  nameWithType: Freezable.Freeze(Freezable,Boolean)\n  fullName: System.Windows.Freezable.Freeze(Freezable,Boolean)\n- uid: System.Windows.Freezable.FreezeCore(System.Boolean)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: FreezeCore(Boolean)\n  nameWithType: Freezable.FreezeCore(Boolean)\n  fullName: System.Windows.Freezable.FreezeCore(Boolean)\n- uid: System.Windows.Freezable.GetAsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetAsFrozen()\n  nameWithType: Freezable.GetAsFrozen()\n  fullName: System.Windows.Freezable.GetAsFrozen()\n- uid: System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: Freezable.GetAsFrozenCore(Freezable)\n  fullName: System.Windows.Freezable.GetAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable.GetCurrentValueAsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetCurrentValueAsFrozen()\n  nameWithType: Freezable.GetCurrentValueAsFrozen()\n  fullName: System.Windows.Freezable.GetCurrentValueAsFrozen()\n- uid: System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: Freezable.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: System.Windows.Freezable.GetCurrentValueAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable.IsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: IsFrozen\n  nameWithType: Freezable.IsFrozen\n  fullName: System.Windows.Freezable.IsFrozen\n- uid: System.Windows.Freezable.OnChanged\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnChanged()\n  nameWithType: Freezable.OnChanged()\n  fullName: System.Windows.Freezable.OnChanged()\n- uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnFreezablePropertyChanged(DependencyObject,DependencyObject)\n  nameWithType: Freezable.OnFreezablePropertyChanged(DependencyObject,DependencyObject)\n  fullName: System.Windows.Freezable.OnFreezablePropertyChanged(DependencyObject,DependencyObject)\n- uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnFreezablePropertyChanged(DependencyObject,DependencyObject,DependencyProperty)\n  nameWithType: Freezable.OnFreezablePropertyChanged(DependencyObject,DependencyObject,DependencyProperty)\n  fullName: System.Windows.Freezable.OnFreezablePropertyChanged(DependencyObject,DependencyObject,DependencyProperty)\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  fullName: System.Windows.Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.DependencyPropertyChangedEventArgs\n  parent: System.Windows\n  isExternal: false\n  name: DependencyPropertyChangedEventArgs\n  nameWithType: DependencyPropertyChangedEventArgs\n  fullName: System.Windows.DependencyPropertyChangedEventArgs\n- uid: System.Windows.Freezable.ReadPreamble\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: ReadPreamble()\n  nameWithType: Freezable.ReadPreamble()\n  fullName: System.Windows.Freezable.ReadPreamble()\n- uid: System.Windows.Freezable.WritePostscript\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: WritePostscript()\n  nameWithType: Freezable.WritePostscript()\n  fullName: System.Windows.Freezable.WritePostscript()\n- uid: System.Windows.Freezable.WritePreamble\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: WritePreamble()\n  nameWithType: Freezable.WritePreamble()\n  fullName: System.Windows.Freezable.WritePreamble()\n- uid: System.Windows.Freezable.#ctor*\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Freezable\n  nameWithType: Freezable.Freezable\n- uid: System.Windows.Freezable.CanFreeze*\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CanFreeze\n  nameWithType: Freezable.CanFreeze\n- uid: System.Windows.Freezable.Clone*\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Clone\n  nameWithType: Freezable.Clone\n- uid: System.Windows.Freezable.CloneCore*\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCore\n  nameWithType: Freezable.CloneCore\n- uid: System.Windows.Freezable.CloneCurrentValue*\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCurrentValue\n  nameWithType: Freezable.CloneCurrentValue\n- uid: System.Windows.Freezable.CloneCurrentValueCore*\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCurrentValueCore\n  nameWithType: Freezable.CloneCurrentValueCore\n- uid: System.Windows.Freezable.CreateInstance*\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CreateInstance\n  nameWithType: Freezable.CreateInstance\n- uid: System.Windows.Freezable.CreateInstanceCore*\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CreateInstanceCore\n  nameWithType: Freezable.CreateInstanceCore\n- uid: System.Windows.Freezable.Freeze*\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Freeze\n  nameWithType: Freezable.Freeze\n- uid: System.Windows.Freezable.FreezeCore*\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: FreezeCore\n  nameWithType: Freezable.FreezeCore\n- uid: System.Windows.Freezable.GetAsFrozen*\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetAsFrozen\n  nameWithType: Freezable.GetAsFrozen\n- uid: System.Windows.Freezable.GetAsFrozenCore*\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetAsFrozenCore\n  nameWithType: Freezable.GetAsFrozenCore\n- uid: System.Windows.Freezable.GetCurrentValueAsFrozen*\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetCurrentValueAsFrozen\n  nameWithType: Freezable.GetCurrentValueAsFrozen\n- uid: System.Windows.Freezable.GetCurrentValueAsFrozenCore*\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetCurrentValueAsFrozenCore\n  nameWithType: Freezable.GetCurrentValueAsFrozenCore\n- uid: System.Windows.Freezable.IsFrozen*\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: IsFrozen\n  nameWithType: Freezable.IsFrozen\n- uid: System.Windows.Freezable.OnChanged*\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnChanged\n  nameWithType: Freezable.OnChanged\n- uid: System.Windows.Freezable.OnFreezablePropertyChanged*\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnFreezablePropertyChanged\n  nameWithType: Freezable.OnFreezablePropertyChanged\n- uid: System.Windows.Freezable.OnPropertyChanged*\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnPropertyChanged\n  nameWithType: Freezable.OnPropertyChanged\n- uid: System.Windows.Freezable.ReadPreamble*\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: ReadPreamble\n  nameWithType: Freezable.ReadPreamble\n- uid: System.Windows.Freezable.WritePostscript*\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: WritePostscript\n  nameWithType: Freezable.WritePostscript\n- uid: System.Windows.Freezable.WritePreamble*\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: WritePreamble\n  nameWithType: Freezable.WritePreamble\n"}