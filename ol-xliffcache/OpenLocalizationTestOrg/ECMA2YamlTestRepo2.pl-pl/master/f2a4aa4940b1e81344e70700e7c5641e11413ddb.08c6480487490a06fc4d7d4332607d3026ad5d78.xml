{"nodes":[{"pos":[2880,2892],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2953,2965],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3024,3036],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3115,3127],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4076,4088],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4149,4161],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4221,4233],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4302,4314],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4393,4405],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4916,4928],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5466,5478],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6080,6092],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6151,6163],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6904,6916],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6975,6987],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7557,7569],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8144,8156],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8672,8684],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9643,9655],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9735,9747],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9806,9818],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10795,10807],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10887,10899],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10958,10970],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11941,11953],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13258,13270],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13366,13378],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13967,13979],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14483,14495],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.TimeZoneInfo.TransitionTime\n  id: TimeZoneInfo.TransitionTime\n  children:\n  - System.TimeZoneInfo.TransitionTime.CreateFixedDateRule(System.DateTime,System.Int32,System.Int32)\n  - System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule(System.DateTime,System.Int32,System.Int32,System.DayOfWeek)\n  - System.TimeZoneInfo.TransitionTime.Day\n  - System.TimeZoneInfo.TransitionTime.DayOfWeek\n  - System.TimeZoneInfo.TransitionTime.Equals(System.Object)\n  - System.TimeZoneInfo.TransitionTime.Equals(System.TimeZoneInfo.TransitionTime)\n  - System.TimeZoneInfo.TransitionTime.GetHashCode\n  - System.TimeZoneInfo.TransitionTime.IsFixedDateRule\n  - System.TimeZoneInfo.TransitionTime.Month\n  - System.TimeZoneInfo.TransitionTime.op_Equality(System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)\n  - System.TimeZoneInfo.TransitionTime.op_Inequality(System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)\n  - System.TimeZoneInfo.TransitionTime.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  - System.TimeZoneInfo.TransitionTime.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.TimeZoneInfo.TransitionTime.TimeOfDay\n  - System.TimeZoneInfo.TransitionTime.Week\n  langs:\n  - csharp\n  name: TimeZoneInfo+TransitionTime\n  nameWithType: TimeZoneInfo+TransitionTime\n  fullName: System.TimeZoneInfo+TransitionTime\n  type: Struct\n  syntax:\n    content: >-\n      [System.Runtime.CompilerServices.TypeForwardedFrom(\"System.Core, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=b77a5c561934e089\")]\n\n      public struct TimeZoneInfo.TransitionTime : IEquatable<TimeZoneInfo.TransitionTime>, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable\n  inheritance:\n  - System.ValueType\n  implements:\n  - System.IEquatable<System.TimeZoneInfo+TransitionTime>\n  - System.Runtime.Serialization.IDeserializationCallback\n  - System.Runtime.Serialization.ISerializable\n  platform:\n  - net462\n- uid: System.TimeZoneInfo.TransitionTime.CreateFixedDateRule(System.DateTime,System.Int32,System.Int32)\n  id: CreateFixedDateRule(System.DateTime,System.Int32,System.Int32)\n  parent: System.TimeZoneInfo.TransitionTime\n  langs:\n  - csharp\n  name: CreateFixedDateRule(DateTime,Int32,Int32)\n  nameWithType: TimeZoneInfo+TransitionTime.CreateFixedDateRule(DateTime,Int32,Int32)\n  fullName: System.TimeZoneInfo+TransitionTime.CreateFixedDateRule(DateTime,Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static TimeZoneInfo.TransitionTime CreateFixedDateRule (DateTime timeOfDay, int month, int day);\n    parameters:\n    - id: timeOfDay\n      type: System.DateTime\n      description: To be added.\n    - id: month\n      type: System.Int32\n      description: To be added.\n    - id: day\n      type: System.Int32\n      description: To be added.\n    return:\n      type: System.TimeZoneInfo.TransitionTime\n      description: To be added.\n  overload: System.TimeZoneInfo.TransitionTime.CreateFixedDateRule*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule(System.DateTime,System.Int32,System.Int32,System.DayOfWeek)\n  id: CreateFloatingDateRule(System.DateTime,System.Int32,System.Int32,System.DayOfWeek)\n  parent: System.TimeZoneInfo.TransitionTime\n  langs:\n  - csharp\n  name: CreateFloatingDateRule(DateTime,Int32,Int32,DayOfWeek)\n  nameWithType: TimeZoneInfo+TransitionTime.CreateFloatingDateRule(DateTime,Int32,Int32,DayOfWeek)\n  fullName: System.TimeZoneInfo+TransitionTime.CreateFloatingDateRule(DateTime,Int32,Int32,DayOfWeek)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static TimeZoneInfo.TransitionTime CreateFloatingDateRule (DateTime timeOfDay, int month, int week, DayOfWeek dayOfWeek);\n    parameters:\n    - id: timeOfDay\n      type: System.DateTime\n      description: To be added.\n    - id: month\n      type: System.Int32\n      description: To be added.\n    - id: week\n      type: System.Int32\n      description: To be added.\n    - id: dayOfWeek\n      type: System.DayOfWeek\n      description: To be added.\n    return:\n      type: System.TimeZoneInfo.TransitionTime\n      description: To be added.\n  overload: System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.TimeZoneInfo.TransitionTime.Day\n  id: Day\n  parent: System.TimeZoneInfo.TransitionTime\n  langs:\n  - csharp\n  name: Day\n  nameWithType: TimeZoneInfo+TransitionTime.Day\n  fullName: System.TimeZoneInfo+TransitionTime.Day\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int Day { get; }\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System.TimeZoneInfo.TransitionTime.Day*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.TimeZoneInfo.TransitionTime.DayOfWeek\n  id: DayOfWeek\n  parent: System.TimeZoneInfo.TransitionTime\n  langs:\n  - csharp\n  name: DayOfWeek\n  nameWithType: TimeZoneInfo+TransitionTime.DayOfWeek\n  fullName: System.TimeZoneInfo+TransitionTime.DayOfWeek\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public DayOfWeek DayOfWeek { get; }\n    return:\n      type: System.DayOfWeek\n      description: To be added.\n  overload: System.TimeZoneInfo.TransitionTime.DayOfWeek*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.TimeZoneInfo.TransitionTime.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.TimeZoneInfo.TransitionTime\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: TimeZoneInfo+TransitionTime.Equals(Object)\n  fullName: System.TimeZoneInfo+TransitionTime.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.TimeZoneInfo.TransitionTime.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.TimeZoneInfo.TransitionTime.Equals(System.TimeZoneInfo.TransitionTime)\n  id: Equals(System.TimeZoneInfo.TransitionTime)\n  parent: System.TimeZoneInfo.TransitionTime\n  langs:\n  - csharp\n  name: Equals(TimeZoneInfo+TransitionTime)\n  nameWithType: TimeZoneInfo+TransitionTime.Equals(TimeZoneInfo+TransitionTime)\n  fullName: System.TimeZoneInfo+TransitionTime.Equals(TimeZoneInfo+TransitionTime)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public bool Equals (TimeZoneInfo.TransitionTime other);\n    parameters:\n    - id: other\n      type: System.TimeZoneInfo.TransitionTime\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.TimeZoneInfo.TransitionTime.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.TimeZoneInfo.TransitionTime.GetHashCode\n  id: GetHashCode\n  parent: System.TimeZoneInfo.TransitionTime\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: TimeZoneInfo+TransitionTime.GetHashCode()\n  fullName: System.TimeZoneInfo+TransitionTime.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System.TimeZoneInfo.TransitionTime.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.TimeZoneInfo.TransitionTime.IsFixedDateRule\n  id: IsFixedDateRule\n  parent: System.TimeZoneInfo.TransitionTime\n  langs:\n  - csharp\n  name: IsFixedDateRule\n  nameWithType: TimeZoneInfo+TransitionTime.IsFixedDateRule\n  fullName: System.TimeZoneInfo+TransitionTime.IsFixedDateRule\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public bool IsFixedDateRule { get; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.TimeZoneInfo.TransitionTime.IsFixedDateRule*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.TimeZoneInfo.TransitionTime.Month\n  id: Month\n  parent: System.TimeZoneInfo.TransitionTime\n  langs:\n  - csharp\n  name: Month\n  nameWithType: TimeZoneInfo+TransitionTime.Month\n  fullName: System.TimeZoneInfo+TransitionTime.Month\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int Month { get; }\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System.TimeZoneInfo.TransitionTime.Month*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.TimeZoneInfo.TransitionTime.op_Equality(System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)\n  id: op_Equality(System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)\n  parent: System.TimeZoneInfo.TransitionTime\n  langs:\n  - csharp\n  name: op_Equality(TimeZoneInfo+TransitionTime,TimeZoneInfo+TransitionTime)\n  nameWithType: TimeZoneInfo+TransitionTime.op_Equality(TimeZoneInfo+TransitionTime,TimeZoneInfo+TransitionTime)\n  fullName: System.TimeZoneInfo+TransitionTime.op_Equality(TimeZoneInfo+TransitionTime,TimeZoneInfo+TransitionTime)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static bool op_Equality (TimeZoneInfo.TransitionTime t1, TimeZoneInfo.TransitionTime t2);\n    parameters:\n    - id: t1\n      type: System.TimeZoneInfo.TransitionTime\n      description: To be added.\n    - id: t2\n      type: System.TimeZoneInfo.TransitionTime\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.TimeZoneInfo.TransitionTime.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.TimeZoneInfo.TransitionTime.op_Inequality(System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)\n  id: op_Inequality(System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)\n  parent: System.TimeZoneInfo.TransitionTime\n  langs:\n  - csharp\n  name: op_Inequality(TimeZoneInfo+TransitionTime,TimeZoneInfo+TransitionTime)\n  nameWithType: TimeZoneInfo+TransitionTime.op_Inequality(TimeZoneInfo+TransitionTime,TimeZoneInfo+TransitionTime)\n  fullName: System.TimeZoneInfo+TransitionTime.op_Inequality(TimeZoneInfo+TransitionTime,TimeZoneInfo+TransitionTime)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static bool op_Inequality (TimeZoneInfo.TransitionTime t1, TimeZoneInfo.TransitionTime t2);\n    parameters:\n    - id: t1\n      type: System.TimeZoneInfo.TransitionTime\n      description: To be added.\n    - id: t2\n      type: System.TimeZoneInfo.TransitionTime\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.TimeZoneInfo.TransitionTime.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.TimeZoneInfo.TransitionTime.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  id: System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  isEii: true\n  parent: System.TimeZoneInfo.TransitionTime\n  langs:\n  - csharp\n  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)\n  nameWithType: TimeZoneInfo+TransitionTime.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)\n  fullName: System.TimeZoneInfo+TransitionTime.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: void IDeserializationCallback.OnDeserialization (object sender);\n    parameters:\n    - id: sender\n      type: System.Object\n      description: To be added.\n  overload: System.TimeZoneInfo.TransitionTime.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.TimeZoneInfo.TransitionTime.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  isEii: true\n  parent: System.TimeZoneInfo.TransitionTime\n  langs:\n  - csharp\n  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: TimeZoneInfo+TransitionTime.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.TimeZoneInfo+TransitionTime.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: To be added.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: To be added.\n  overload: System.TimeZoneInfo.TransitionTime.System#Runtime#Serialization#ISerializable#GetObjectData*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.TimeZoneInfo.TransitionTime.TimeOfDay\n  id: TimeOfDay\n  parent: System.TimeZoneInfo.TransitionTime\n  langs:\n  - csharp\n  name: TimeOfDay\n  nameWithType: TimeZoneInfo+TransitionTime.TimeOfDay\n  fullName: System.TimeZoneInfo+TransitionTime.TimeOfDay\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public DateTime TimeOfDay { get; }\n    return:\n      type: System.DateTime\n      description: To be added.\n  overload: System.TimeZoneInfo.TransitionTime.TimeOfDay*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.TimeZoneInfo.TransitionTime.Week\n  id: Week\n  parent: System.TimeZoneInfo.TransitionTime\n  langs:\n  - csharp\n  name: Week\n  nameWithType: TimeZoneInfo+TransitionTime.Week\n  fullName: System.TimeZoneInfo+TransitionTime.Week\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int Week { get; }\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System.TimeZoneInfo.TransitionTime.Week*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.TimeZoneInfo.TransitionTime.CreateFixedDateRule(System.DateTime,System.Int32,System.Int32)\n  parent: System.TimeZoneInfo.TransitionTime\n  isExternal: false\n  name: CreateFixedDateRule(DateTime,Int32,Int32)\n  nameWithType: TimeZoneInfo+TransitionTime.CreateFixedDateRule(DateTime,Int32,Int32)\n  fullName: System.TimeZoneInfo+TransitionTime.CreateFixedDateRule(DateTime,Int32,Int32)\n- uid: System.TimeZoneInfo.TransitionTime\n  parent: System\n  isExternal: false\n  name: TimeZoneInfo+TransitionTime\n  nameWithType: TimeZoneInfo+TransitionTime\n  fullName: System.TimeZoneInfo+TransitionTime\n- uid: System.DateTime\n  parent: System\n  isExternal: true\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule(System.DateTime,System.Int32,System.Int32,System.DayOfWeek)\n  parent: System.TimeZoneInfo.TransitionTime\n  isExternal: false\n  name: CreateFloatingDateRule(DateTime,Int32,Int32,DayOfWeek)\n  nameWithType: TimeZoneInfo+TransitionTime.CreateFloatingDateRule(DateTime,Int32,Int32,DayOfWeek)\n  fullName: System.TimeZoneInfo+TransitionTime.CreateFloatingDateRule(DateTime,Int32,Int32,DayOfWeek)\n- uid: System.DayOfWeek\n  parent: System\n  isExternal: true\n  name: DayOfWeek\n  nameWithType: DayOfWeek\n  fullName: System.DayOfWeek\n- uid: System.TimeZoneInfo.TransitionTime.Day\n  parent: System.TimeZoneInfo.TransitionTime\n  isExternal: false\n  name: Day\n  nameWithType: TimeZoneInfo+TransitionTime.Day\n  fullName: System.TimeZoneInfo+TransitionTime.Day\n- uid: System.TimeZoneInfo.TransitionTime.DayOfWeek\n  parent: System.TimeZoneInfo.TransitionTime\n  isExternal: false\n  name: DayOfWeek\n  nameWithType: TimeZoneInfo+TransitionTime.DayOfWeek\n  fullName: System.TimeZoneInfo+TransitionTime.DayOfWeek\n- uid: System.TimeZoneInfo.TransitionTime.Equals(System.Object)\n  parent: System.TimeZoneInfo.TransitionTime\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: TimeZoneInfo+TransitionTime.Equals(Object)\n  fullName: System.TimeZoneInfo+TransitionTime.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.TimeZoneInfo.TransitionTime.Equals(System.TimeZoneInfo.TransitionTime)\n  parent: System.TimeZoneInfo.TransitionTime\n  isExternal: false\n  name: Equals(TimeZoneInfo+TransitionTime)\n  nameWithType: TimeZoneInfo+TransitionTime.Equals(TimeZoneInfo+TransitionTime)\n  fullName: System.TimeZoneInfo+TransitionTime.Equals(TimeZoneInfo+TransitionTime)\n- uid: System.TimeZoneInfo.TransitionTime.GetHashCode\n  parent: System.TimeZoneInfo.TransitionTime\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: TimeZoneInfo+TransitionTime.GetHashCode()\n  fullName: System.TimeZoneInfo+TransitionTime.GetHashCode()\n- uid: System.TimeZoneInfo.TransitionTime.IsFixedDateRule\n  parent: System.TimeZoneInfo.TransitionTime\n  isExternal: false\n  name: IsFixedDateRule\n  nameWithType: TimeZoneInfo+TransitionTime.IsFixedDateRule\n  fullName: System.TimeZoneInfo+TransitionTime.IsFixedDateRule\n- uid: System.TimeZoneInfo.TransitionTime.Month\n  parent: System.TimeZoneInfo.TransitionTime\n  isExternal: false\n  name: Month\n  nameWithType: TimeZoneInfo+TransitionTime.Month\n  fullName: System.TimeZoneInfo+TransitionTime.Month\n- uid: System.TimeZoneInfo.TransitionTime.op_Equality(System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)\n  parent: System.TimeZoneInfo.TransitionTime\n  isExternal: false\n  name: op_Equality(TimeZoneInfo+TransitionTime,TimeZoneInfo+TransitionTime)\n  nameWithType: TimeZoneInfo+TransitionTime.op_Equality(TimeZoneInfo+TransitionTime,TimeZoneInfo+TransitionTime)\n  fullName: System.TimeZoneInfo+TransitionTime.op_Equality(TimeZoneInfo+TransitionTime,TimeZoneInfo+TransitionTime)\n- uid: System.TimeZoneInfo.TransitionTime.op_Inequality(System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)\n  parent: System.TimeZoneInfo.TransitionTime\n  isExternal: false\n  name: op_Inequality(TimeZoneInfo+TransitionTime,TimeZoneInfo+TransitionTime)\n  nameWithType: TimeZoneInfo+TransitionTime.op_Inequality(TimeZoneInfo+TransitionTime,TimeZoneInfo+TransitionTime)\n  fullName: System.TimeZoneInfo+TransitionTime.op_Inequality(TimeZoneInfo+TransitionTime,TimeZoneInfo+TransitionTime)\n- uid: System.TimeZoneInfo.TransitionTime.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  parent: System.TimeZoneInfo.TransitionTime\n  isExternal: false\n  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)\n  nameWithType: TimeZoneInfo+TransitionTime.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)\n  fullName: System.TimeZoneInfo+TransitionTime.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)\n- uid: System.TimeZoneInfo.TransitionTime.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.TimeZoneInfo.TransitionTime\n  isExternal: false\n  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: TimeZoneInfo+TransitionTime.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.TimeZoneInfo+TransitionTime.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: true\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.TimeZoneInfo.TransitionTime.TimeOfDay\n  parent: System.TimeZoneInfo.TransitionTime\n  isExternal: false\n  name: TimeOfDay\n  nameWithType: TimeZoneInfo+TransitionTime.TimeOfDay\n  fullName: System.TimeZoneInfo+TransitionTime.TimeOfDay\n- uid: System.TimeZoneInfo.TransitionTime.Week\n  parent: System.TimeZoneInfo.TransitionTime\n  isExternal: false\n  name: Week\n  nameWithType: TimeZoneInfo+TransitionTime.Week\n  fullName: System.TimeZoneInfo+TransitionTime.Week\n- uid: System.TimeZoneInfo.TransitionTime.CreateFixedDateRule*\n  parent: System.TimeZoneInfo.TransitionTime\n  isExternal: false\n  name: CreateFixedDateRule\n  nameWithType: TimeZoneInfo+TransitionTime.CreateFixedDateRule\n- uid: System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule*\n  parent: System.TimeZoneInfo.TransitionTime\n  isExternal: false\n  name: CreateFloatingDateRule\n  nameWithType: TimeZoneInfo+TransitionTime.CreateFloatingDateRule\n- uid: System.TimeZoneInfo.TransitionTime.Day*\n  parent: System.TimeZoneInfo.TransitionTime\n  isExternal: false\n  name: Day\n  nameWithType: TimeZoneInfo+TransitionTime.Day\n- uid: System.TimeZoneInfo.TransitionTime.DayOfWeek*\n  parent: System.TimeZoneInfo.TransitionTime\n  isExternal: false\n  name: DayOfWeek\n  nameWithType: TimeZoneInfo+TransitionTime.DayOfWeek\n- uid: System.TimeZoneInfo.TransitionTime.Equals*\n  parent: System.TimeZoneInfo.TransitionTime\n  isExternal: false\n  name: Equals\n  nameWithType: TimeZoneInfo+TransitionTime.Equals\n- uid: System.TimeZoneInfo.TransitionTime.GetHashCode*\n  parent: System.TimeZoneInfo.TransitionTime\n  isExternal: false\n  name: GetHashCode\n  nameWithType: TimeZoneInfo+TransitionTime.GetHashCode\n- uid: System.TimeZoneInfo.TransitionTime.IsFixedDateRule*\n  parent: System.TimeZoneInfo.TransitionTime\n  isExternal: false\n  name: IsFixedDateRule\n  nameWithType: TimeZoneInfo+TransitionTime.IsFixedDateRule\n- uid: System.TimeZoneInfo.TransitionTime.Month*\n  parent: System.TimeZoneInfo.TransitionTime\n  isExternal: false\n  name: Month\n  nameWithType: TimeZoneInfo+TransitionTime.Month\n- uid: System.TimeZoneInfo.TransitionTime.op_Equality*\n  parent: System.TimeZoneInfo.TransitionTime\n  isExternal: false\n  name: op_Equality\n  nameWithType: TimeZoneInfo+TransitionTime.op_Equality\n- uid: System.TimeZoneInfo.TransitionTime.op_Inequality*\n  parent: System.TimeZoneInfo.TransitionTime\n  isExternal: false\n  name: op_Inequality\n  nameWithType: TimeZoneInfo+TransitionTime.op_Inequality\n- uid: System.TimeZoneInfo.TransitionTime.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization*\n  parent: System.TimeZoneInfo.TransitionTime\n  isExternal: false\n  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization\n  nameWithType: TimeZoneInfo+TransitionTime.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization\n- uid: System.TimeZoneInfo.TransitionTime.System#Runtime#Serialization#ISerializable#GetObjectData*\n  parent: System.TimeZoneInfo.TransitionTime\n  isExternal: false\n  name: System.Runtime.Serialization.ISerializable.GetObjectData\n  nameWithType: TimeZoneInfo+TransitionTime.System.Runtime.Serialization.ISerializable.GetObjectData\n- uid: System.TimeZoneInfo.TransitionTime.TimeOfDay*\n  parent: System.TimeZoneInfo.TransitionTime\n  isExternal: false\n  name: TimeOfDay\n  nameWithType: TimeZoneInfo+TransitionTime.TimeOfDay\n- uid: System.TimeZoneInfo.TransitionTime.Week*\n  parent: System.TimeZoneInfo.TransitionTime\n  isExternal: false\n  name: Week\n  nameWithType: TimeZoneInfo+TransitionTime.Week\n"}