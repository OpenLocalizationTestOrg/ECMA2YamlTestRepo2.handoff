{"nodes":[{"pos":[4687,4778],"content":"Contains information about how bitmap and metafile colors are manipulated during rendering.","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains information about how bitmap and metafile colors are manipulated during rendering.","pos":[0,91]}]},{"pos":[4790,5306],"content":"An ImageAttributes object maintains several color-adjustment settings, including color-adjustment matrices, grayscale-adjustment matrices, gamma-correction values, color-map tables, and color-threshold values. During rendering, colors can be corrected, darkened, lightened, and removed. To apply such manipulations, initialize an ImageAttributes object and pass the path of that ImageAttributes object (along with the path of an <xref:System.Drawing.Image>) to the <xref:System.Drawing.Graphics.DrawImage%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"An ImageAttributes object maintains several color-adjustment settings, including color-adjustment matrices, grayscale-adjustment matrices, gamma-correction values, color-map tables, and color-threshold values. During rendering, colors can be corrected, darkened, lightened, and removed. To apply such manipulations, initialize an ImageAttributes object and pass the path of that ImageAttributes object (along with the path of an <xref:System.Drawing.Image>) to the <xref:System.Drawing.Graphics.DrawImage%2A> method.","pos":[0,516],"nodes":[{"content":"An ImageAttributes object maintains several color-adjustment settings, including color-adjustment matrices, grayscale-adjustment matrices, gamma-correction values, color-map tables, and color-threshold values.","pos":[0,209]},{"content":"During rendering, colors can be corrected, darkened, lightened, and removed.","pos":[210,286]},{"content":"To apply such manipulations, initialize an ImageAttributes object and pass the path of that ImageAttributes object (along with the path of an &lt;xref:System.Drawing.Image&gt;) to the &lt;xref:System.Drawing.Graphics.DrawImage%2A&gt; method.","pos":[287,516],"source":" To apply such manipulations, initialize an ImageAttributes object and pass the path of that ImageAttributes object (along with the path of an <xref:System.Drawing.Image>) to the <xref:System.Drawing.Graphics.DrawImage%2A> method."}]}]},{"pos":[7010,7110],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Imaging.ImageAttributes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Drawing.Imaging.ImageAttributes\"></xref> class."},{"pos":[7696,7806],"content":"Clears the brush color-remap table of this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Imaging.ImageAttributes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Clears the brush color-remap table of this <xref href=\"System.Drawing.Imaging.ImageAttributes\"></xref> object."},{"pos":[7819,9245],"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify one color-remap table for the default category, a different color-remap table for the bitmap category, and still a different color-remap table for the brush category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the brush category, the default settings apply to the brush category.       As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a default remap table that converts red to green, and you specify a default gamma value of 1.8. If you call the <xref:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable%2A> method, the default remap table (red to green) and the default gamma value (1.8) will not apply to brushes. If you later call the ClearBrushRemapTable method, the brush category will not revert to the default remap table; rather, the brush category will have no remap table. Similarly, the brush category will not revert to the default gamma value; rather, the brush category will have no gamma value.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify one color-remap table for the default category, a different color-remap table for the bitmap category, and still a different color-remap table for the brush category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the brush category, the default settings apply to the brush category.       As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a default remap table that converts red to green, and you specify a default gamma value of 1.8. If you call the <xref:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable%2A> method, the default remap table (red to green) and the default gamma value (1.8) will not apply to brushes. If you later call the ClearBrushRemapTable method, the brush category will not revert to the default remap table; rather, the brush category will have no remap table. Similarly, the brush category will not revert to the default gamma value; rather, the brush category will have no gamma value.","pos":[0,1422],"nodes":[{"content":"An &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text.","pos":[0,165],"source":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text."},{"content":"For example, you can specify one color-remap table for the default category, a different color-remap table for the bitmap category, and still a different color-remap table for the brush category.","pos":[166,361]},{"content":"The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own.","pos":[368,505]},{"content":"For example, if you never specify any adjustment settings for the brush category, the default settings apply to the brush category.","pos":[506,637]},{"content":"As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category.","pos":[644,807]},{"content":"For example, suppose you specify a default remap table that converts red to green, and you specify a default gamma value of 1.8.","pos":[808,936]},{"content":"If you call the &lt;xref:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable%2A&gt; method, the default remap table (red to green) and the default gamma value (1.8) will not apply to brushes.","pos":[937,1128],"source":" If you call the <xref:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable%2A> method, the default remap table (red to green) and the default gamma value (1.8) will not apply to brushes."},{"content":"If you later call the ClearBrushRemapTable method, the brush category will not revert to the default remap table; rather, the brush category will have no remap table.","pos":[1129,1295]},{"content":"Similarly, the brush category will not revert to the default gamma value; rather, the brush category will have no gamma value.","pos":[1296,1422]}]}]},{"pos":[9822,9889],"content":"Clears the color key (transparency range) for the default category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears the color key (transparency range) for the default category.","pos":[0,67]}]},{"pos":[9902,10511],"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify one color key for the default category, a different color key for the bitmap category, and still a different color key for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify one color key for the default category, a different color key for the bitmap category, and still a different color key for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","pos":[0,607],"nodes":[{"content":"An &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text.","pos":[0,165],"source":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text."},{"content":"For example, you can specify one color key for the default category, a different color key for the bitmap category, and still a different color key for the pen category.","pos":[166,335]},{"content":"The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own.","pos":[342,479]},{"content":"For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","pos":[480,607]}]}]},{"pos":[11199,11266],"content":"Clears the color key (transparency range) for a specified category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears the color key (transparency range) for a specified category.","pos":[0,67]}]},{"pos":[11279,12792],"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify one color key for the default category, a different color key for the bitmap category, and still a different color key for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.       As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a default color key that makes any color with a red component from 200 through 255 transparent, and you specify a default gamma value of 1.8. If you set the color key of the pen category by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> method, the default color key and the default gamma value will not apply to pens. If you later clear the pen color key by calling the <xref:System.Drawing.Imaging.ImageAttributes.ClearColorKey%2A> method, the pen category will not revert to the default color key; rather, the pen category will have no color key. Similarly, the pen category will not revert to the default gamma value; rather, the pen category will have no gamma value.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify one color key for the default category, a different color key for the bitmap category, and still a different color key for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.       As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a default color key that makes any color with a red component from 200 through 255 transparent, and you specify a default gamma value of 1.8. If you set the color key of the pen category by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> method, the default color key and the default gamma value will not apply to pens. If you later clear the pen color key by calling the <xref:System.Drawing.Imaging.ImageAttributes.ClearColorKey%2A> method, the pen category will not revert to the default color key; rather, the pen category will have no color key. Similarly, the pen category will not revert to the default gamma value; rather, the pen category will have no gamma value.","pos":[0,1509],"nodes":[{"content":"An &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text.","pos":[0,165],"source":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text."},{"content":"For example, you can specify one color key for the default category, a different color key for the bitmap category, and still a different color key for the pen category.","pos":[166,335]},{"content":"The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own.","pos":[342,479]},{"content":"For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","pos":[480,607]},{"content":"As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category.","pos":[614,777]},{"content":"For example, suppose you specify a default color key that makes any color with a red component from 200 through 255 transparent, and you specify a default gamma value of 1.8.","pos":[778,952]},{"content":"If you set the color key of the pen category by calling the &lt;xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A&gt; method, the default color key and the default gamma value will not apply to pens.","pos":[953,1155],"source":" If you set the color key of the pen category by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> method, the default color key and the default gamma value will not apply to pens."},{"content":"If you later clear the pen color key by calling the &lt;xref:System.Drawing.Imaging.ImageAttributes.ClearColorKey%2A&gt; method, the pen category will not revert to the default color key; rather, the pen category will have no color key.","pos":[1156,1386],"source":" If you later clear the pen color key by calling the <xref:System.Drawing.Imaging.ImageAttributes.ClearColorKey%2A> method, the pen category will not revert to the default color key; rather, the pen category will have no color key."},{"content":"Similarly, the pen category will not revert to the default gamma value; rather, the pen category will have no gamma value.","pos":[1387,1509]}]}]},{"pos":[12991,13128],"content":"An element of <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Imaging.ColorAdjustType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the category for which the color key is cleared.","needQuote":true,"needEscape":true,"source":"An element of <xref href=\"System.Drawing.Imaging.ColorAdjustType\"></xref> that specifies the category for which the color key is cleared."},{"pos":[13633,13693],"content":"Clears the color-adjustment matrix for the default category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears the color-adjustment matrix for the default category.","pos":[0,60]}]},{"pos":[13706,14360],"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a color-adjustment matrix for the default category, a different color-adjustment matrix for the bitmap category, and still a different color-adjustment matrix for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, then the default settings apply to the pen category.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a color-adjustment matrix for the default category, a different color-adjustment matrix for the bitmap category, and still a different color-adjustment matrix for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, then the default settings apply to the pen category.","pos":[0,652],"nodes":[{"content":"An &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text.","pos":[0,165],"source":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text."},{"content":"For example, you can specify a color-adjustment matrix for the default category, a different color-adjustment matrix for the bitmap category, and still a different color-adjustment matrix for the pen category.","pos":[166,375]},{"content":"The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own.","pos":[382,519]},{"content":"For example, if you never specify any adjustment settings for the pen category, then the default settings apply to the pen category.","pos":[520,652]}]}]},{"pos":[15069,15129],"content":"Clears the color-adjustment matrix for a specified category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears the color-adjustment matrix for a specified category.","pos":[0,60]}]},{"pos":[15142,16663],"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a color-adjustment matrix for the default category, a different color-adjustment matrix for the bitmap category, and still a different color-adjustment matrix for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, then the default settings apply to the pen category.       As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a color-adjustment matrix and a gamma value for the default category. If you set a color-adjustment matrix for the pen category by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> method, the default color-adjustment matrix will not apply to pens. If you later clear the pen color-adjustment matrix by calling the <xref:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix%2A> method, the pen category will not revert to the default adjustment matrix; rather, the pen category will have no adjustment matrix. Similarly, the pen category will not revert to the default gamma value; rather, the pen category will have no gamma value.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a color-adjustment matrix for the default category, a different color-adjustment matrix for the bitmap category, and still a different color-adjustment matrix for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, then the default settings apply to the pen category.       As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a color-adjustment matrix and a gamma value for the default category. If you set a color-adjustment matrix for the pen category by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> method, the default color-adjustment matrix will not apply to pens. If you later clear the pen color-adjustment matrix by calling the <xref:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix%2A> method, the pen category will not revert to the default adjustment matrix; rather, the pen category will have no adjustment matrix. Similarly, the pen category will not revert to the default gamma value; rather, the pen category will have no gamma value.","pos":[0,1517],"nodes":[{"content":"An &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text.","pos":[0,165],"source":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text."},{"content":"For example, you can specify a color-adjustment matrix for the default category, a different color-adjustment matrix for the bitmap category, and still a different color-adjustment matrix for the pen category.","pos":[166,375]},{"content":"The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own.","pos":[382,519]},{"content":"For example, if you never specify any adjustment settings for the pen category, then the default settings apply to the pen category.","pos":[520,652]},{"content":"As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category.","pos":[659,822]},{"content":"For example, suppose you specify a color-adjustment matrix and a gamma value for the default category.","pos":[823,925]},{"content":"If you set a color-adjustment matrix for the pen category by calling the &lt;xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A&gt; method, the default color-adjustment matrix will not apply to pens.","pos":[926,1130],"source":" If you set a color-adjustment matrix for the pen category by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> method, the default color-adjustment matrix will not apply to pens."},{"content":"If you later clear the pen color-adjustment matrix by calling the &lt;xref:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix%2A&gt; method, the pen category will not revert to the default adjustment matrix; rather, the pen category will have no adjustment matrix.","pos":[1131,1394],"source":" If you later clear the pen color-adjustment matrix by calling the <xref:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix%2A> method, the pen category will not revert to the default adjustment matrix; rather, the pen category will have no adjustment matrix."},{"content":"Similarly, the pen category will not revert to the default gamma value; rather, the pen category will have no gamma value.","pos":[1395,1517]}]}]},{"pos":[16865,17016],"content":"An element of <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Imaging.ColorAdjustType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the category for which the color-adjustment matrix is cleared.","needQuote":true,"needEscape":true,"source":"An element of <xref href=\"System.Drawing.Imaging.ColorAdjustType\"></xref> that specifies the category for which the color-adjustment matrix is cleared."},{"pos":[17494,17545],"content":"Disables gamma correction for the default category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Disables gamma correction for the default category.","pos":[0,51]}]},{"pos":[17558,18171],"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a gamma value for the default category, a different gamma value for the bitmap category, and still a different gamma value for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a gamma value for the default category, a different gamma value for the bitmap category, and still a different gamma value for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","pos":[0,611],"nodes":[{"content":"An &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text.","pos":[0,165],"source":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text."},{"content":"For example, you can specify a gamma value for the default category, a different gamma value for the bitmap category, and still a different gamma value for the pen category.","pos":[166,339]},{"content":"The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own.","pos":[346,483]},{"content":"For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","pos":[484,611]}]}]},{"pos":[18838,18889],"content":"Disables gamma correction for a specified category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Disables gamma correction for a specified category.","pos":[0,51]}]},{"pos":[18902,20353],"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a gamma value for the default category, a different gamma value for the bitmap category, and still a different gamma value for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, then the default settings apply to the pen category.       As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a gamma value and a color-adjustment matrix for the default category. If you set the gamma value for the pen category by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> method, the default gamma value will not apply to pens. If you later clear the pen gamma value by calling the <xref:System.Drawing.Imaging.ImageAttributes.ClearGamma%2A> method, the pen category will not revert to the default gamma value; rather, the pen category will have no gamma value. Similarly, the pen category will not revert to the default color-adjustment matrix; rather, the pen category will have no color-adjustment matrix.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a gamma value for the default category, a different gamma value for the bitmap category, and still a different gamma value for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, then the default settings apply to the pen category.       As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a gamma value and a color-adjustment matrix for the default category. If you set the gamma value for the pen category by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> method, the default gamma value will not apply to pens. If you later clear the pen gamma value by calling the <xref:System.Drawing.Imaging.ImageAttributes.ClearGamma%2A> method, the pen category will not revert to the default gamma value; rather, the pen category will have no gamma value. Similarly, the pen category will not revert to the default color-adjustment matrix; rather, the pen category will have no color-adjustment matrix.","pos":[0,1447],"nodes":[{"content":"An &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text.","pos":[0,165],"source":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text."},{"content":"For example, you can specify a gamma value for the default category, a different gamma value for the bitmap category, and still a different gamma value for the pen category.","pos":[166,339]},{"content":"The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own.","pos":[346,483]},{"content":"For example, if you never specify any adjustment settings for the pen category, then the default settings apply to the pen category.","pos":[484,616]},{"content":"As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category.","pos":[623,786]},{"content":"For example, suppose you specify a gamma value and a color-adjustment matrix for the default category.","pos":[787,889]},{"content":"If you set the gamma value for the pen category by calling the &lt;xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A&gt; method, the default gamma value will not apply to pens.","pos":[890,1066],"source":" If you set the gamma value for the pen category by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> method, the default gamma value will not apply to pens."},{"content":"If you later clear the pen gamma value by calling the &lt;xref:System.Drawing.Imaging.ImageAttributes.ClearGamma%2A&gt; method, the pen category will not revert to the default gamma value; rather, the pen category will have no gamma value.","pos":[1067,1300],"source":" If you later clear the pen gamma value by calling the <xref:System.Drawing.Imaging.ImageAttributes.ClearGamma%2A> method, the pen category will not revert to the default gamma value; rather, the pen category will have no gamma value."},{"content":"Similarly, the pen category will not revert to the default color-adjustment matrix; rather, the pen category will have no color-adjustment matrix.","pos":[1301,1447]}]}]},{"pos":[20549,20690],"content":"An element of <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Imaging.ColorAdjustType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the category for which gamma correction is disabled.","needQuote":true,"needEscape":true,"source":"An element of <xref href=\"System.Drawing.Imaging.ColorAdjustType\"></xref> that specifies the category for which gamma correction is disabled."},{"pos":[21157,21262],"content":"Clears the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_NoOp\" name=\"NoOp\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> setting for the default category.","needQuote":true,"needEscape":true,"source":"Clears the <xref uid=\"langword_csharp_NoOp\" name=\"NoOp\" href=\"\"></xref> setting for the default category."},{"pos":[21275,22041],"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a gamma value for the default category, a different gamma value for the bitmap category, and still a different gamma value for the pen category.       You can disable color adjustment for the default category by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> method. Later, you can reinstate color adjustment for the default category by calling the <xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp%2A> method. The color adjustment then returns to what was in place before the call to <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a gamma value for the default category, a different gamma value for the bitmap category, and still a different gamma value for the pen category.       You can disable color adjustment for the default category by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> method. Later, you can reinstate color adjustment for the default category by calling the <xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp%2A> method. The color adjustment then returns to what was in place before the call to <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>.","pos":[0,764],"nodes":[{"content":"An &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text.","pos":[0,165],"source":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text."},{"content":"For example, you can specify a gamma value for the default category, a different gamma value for the bitmap category, and still a different gamma value for the pen category.","pos":[166,339]},{"content":"You can disable color adjustment for the default category by calling the &lt;xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A&gt; method.","pos":[346,483],"source":"       You can disable color adjustment for the default category by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> method."},{"content":"Later, you can reinstate color adjustment for the default category by calling the &lt;xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp%2A&gt; method.","pos":[484,632],"source":" Later, you can reinstate color adjustment for the default category by calling the <xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp%2A> method."},{"content":"The color adjustment then returns to what was in place before the call to &lt;xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A&gt;.","pos":[633,764],"source":" The color adjustment then returns to what was in place before the call to <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>."}]}]},{"pos":[22701,22806],"content":"Clears the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_NoOp\" name=\"NoOp\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> setting for a specified category.","needQuote":true,"needEscape":true,"source":"Clears the <xref uid=\"langword_csharp_NoOp\" name=\"NoOp\" href=\"\"></xref> setting for a specified category."},{"pos":[22819,23576],"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a gamma value for the default category, a different gamma value for the bitmap category, and still a different gamma value for the pen category.       You can disable color adjustment for a certain category by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> method. Later, you can reinstate color adjustment for that category by calling the <xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp%2A> method. The color adjustment then returns to what was in place before the call to <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a gamma value for the default category, a different gamma value for the bitmap category, and still a different gamma value for the pen category.       You can disable color adjustment for a certain category by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> method. Later, you can reinstate color adjustment for that category by calling the <xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp%2A> method. The color adjustment then returns to what was in place before the call to <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>.","pos":[0,755],"nodes":[{"content":"An &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text.","pos":[0,165],"source":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text."},{"content":"For example, you can specify a gamma value for the default category, a different gamma value for the bitmap category, and still a different gamma value for the pen category.","pos":[166,339]},{"content":"You can disable color adjustment for a certain category by calling the &lt;xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A&gt; method.","pos":[346,481],"source":"       You can disable color adjustment for a certain category by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> method."},{"content":"Later, you can reinstate color adjustment for that category by calling the &lt;xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp%2A&gt; method.","pos":[482,623],"source":" Later, you can reinstate color adjustment for that category by calling the <xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp%2A> method."},{"content":"The color adjustment then returns to what was in place before the call to &lt;xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A&gt;.","pos":[624,755],"source":" The color adjustment then returns to what was in place before the call to <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>."}]}]},{"pos":[23771,23967],"content":"An element of <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Imaging.ColorAdjustType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the category for which the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_NoOp\" name=\"NoOp\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> setting is cleared.","needQuote":true,"needEscape":true,"source":"An element of <xref href=\"System.Drawing.Imaging.ColorAdjustType\"></xref> that specifies the category for which the <xref uid=\"langword_csharp_NoOp\" name=\"NoOp\" href=\"\"></xref> setting is cleared."},{"pos":[24478,24570],"content":"Clears the CMYK (cyan-magenta-yellow-black) output channel setting for the default category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears the CMYK (cyan-magenta-yellow-black) output channel setting for the default category.","pos":[0,92]}]},{"pos":[24583,25156],"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify an output channel for the default category and a different output channel for the bitmap category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the bitmap category, the default settings apply to the bitmap category.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify an output channel for the default category and a different output channel for the bitmap category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the bitmap category, the default settings apply to the bitmap category.","pos":[0,571],"nodes":[{"content":"An &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text.","pos":[0,165],"source":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text."},{"content":"For example, you can specify an output channel for the default category and a different output channel for the bitmap category.","pos":[166,293]},{"content":"The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own.","pos":[300,437]},{"content":"For example, if you never specify any adjustment settings for the bitmap category, the default settings apply to the bitmap category.","pos":[438,571]}]}]},{"pos":[25879,25966],"content":"Clears the (cyan-magenta-yellow-black) output channel setting for a specified category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears the (cyan-magenta-yellow-black) output channel setting for a specified category.","pos":[0,87]}]},{"pos":[25979,27444],"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify an output channel for the default category and a different output channel for the bitmap category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the bitmap category, the default settings apply to the bitmap category.       As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify an output channel and an adjustment matrix for the default category. If you set the output channel for the bitmap category by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> method, the default output channel will not apply to bitmaps. If you later clear the bitmap output channel by calling the <xref:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel%2A> method, the bitmap category will not revert to the default output channel; rather, the bitmap category will have no output channel setting. Similarly, the bitmap category will not revert to the default color-adjustment matrix; rather, the bitmap category will have no color-adjustment matrix.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify an output channel for the default category and a different output channel for the bitmap category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the bitmap category, the default settings apply to the bitmap category.       As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify an output channel and an adjustment matrix for the default category. If you set the output channel for the bitmap category by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> method, the default output channel will not apply to bitmaps. If you later clear the bitmap output channel by calling the <xref:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel%2A> method, the bitmap category will not revert to the default output channel; rather, the bitmap category will have no output channel setting. Similarly, the bitmap category will not revert to the default color-adjustment matrix; rather, the bitmap category will have no color-adjustment matrix.","pos":[0,1461],"nodes":[{"content":"An &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text.","pos":[0,165],"source":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text."},{"content":"For example, you can specify an output channel for the default category and a different output channel for the bitmap category.","pos":[166,293]},{"content":"The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own.","pos":[300,437]},{"content":"For example, if you never specify any adjustment settings for the bitmap category, the default settings apply to the bitmap category.","pos":[438,571]},{"content":"As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category.","pos":[578,741]},{"content":"For example, suppose you specify an output channel and an adjustment matrix for the default category.","pos":[742,843]},{"content":"If you set the output channel for the bitmap category by calling the &lt;xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A&gt; method, the default output channel will not apply to bitmaps.","pos":[844,1040],"source":" If you set the output channel for the bitmap category by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> method, the default output channel will not apply to bitmaps."},{"content":"If you later clear the bitmap output channel by calling the &lt;xref:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel%2A&gt; method, the bitmap category will not revert to the default output channel; rather, the bitmap category will have no output channel setting.","pos":[1041,1308],"source":" If you later clear the bitmap output channel by calling the <xref:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel%2A> method, the bitmap category will not revert to the default output channel; rather, the bitmap category will have no output channel setting."},{"content":"Similarly, the bitmap category will not revert to the default color-adjustment matrix; rather, the bitmap category will have no color-adjustment matrix.","pos":[1309,1461]}]}]},{"pos":[27648,27798],"content":"An element of <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Imaging.ColorAdjustType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the category for which the output channel setting is cleared.","needQuote":true,"needEscape":true,"source":"An element of <xref href=\"System.Drawing.Imaging.ColorAdjustType\"></xref> that specifies the category for which the output channel setting is cleared."},{"pos":[28378,28451],"content":"Clears the output channel color profile setting for the default category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears the output channel color profile setting for the default category.","pos":[0,73]}]},{"pos":[28464,29053],"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify an output channel profile for the default category and a different output channel profile for the bitmap category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the bitmap category, the default settings apply to the bitmap category.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify an output channel profile for the default category and a different output channel profile for the bitmap category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the bitmap category, the default settings apply to the bitmap category.","pos":[0,587],"nodes":[{"content":"An &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text.","pos":[0,165],"source":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text."},{"content":"For example, you can specify an output channel profile for the default category and a different output channel profile for the bitmap category.","pos":[166,309]},{"content":"The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own.","pos":[316,453]},{"content":"For example, if you never specify any adjustment settings for the bitmap category, the default settings apply to the bitmap category.","pos":[454,587]}]}]},{"pos":[29860,29933],"content":"Clears the output channel color profile setting for a specified category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears the output channel color profile setting for a specified category.","pos":[0,73]}]},{"pos":[29946,31499],"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify an output channel profile for the default category and a different output channel profile for the bitmap category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the bitmap category, the default settings apply to the bitmap category.       As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify an output channel profile and an adjustment matrix for the default category. If you set the output channel profile for the bitmap category by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> method, the default output channel profile will not apply to bitmaps. If you later clear the bitmap output channel profile by calling the <xref:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile%2A> method, the bitmap category will not revert to the default output channel profile; rather, the bitmap category will have no output channel profile setting. Similarly, the bitmap category will not revert to the default color-adjustment matrix; rather, the bitmap category will have no color-adjustment matrix.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify an output channel profile for the default category and a different output channel profile for the bitmap category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the bitmap category, the default settings apply to the bitmap category.       As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify an output channel profile and an adjustment matrix for the default category. If you set the output channel profile for the bitmap category by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> method, the default output channel profile will not apply to bitmaps. If you later clear the bitmap output channel profile by calling the <xref:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile%2A> method, the bitmap category will not revert to the default output channel profile; rather, the bitmap category will have no output channel profile setting. Similarly, the bitmap category will not revert to the default color-adjustment matrix; rather, the bitmap category will have no color-adjustment matrix.","pos":[0,1549],"nodes":[{"content":"An &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text.","pos":[0,165],"source":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text."},{"content":"For example, you can specify an output channel profile for the default category and a different output channel profile for the bitmap category.","pos":[166,309]},{"content":"The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own.","pos":[316,453]},{"content":"For example, if you never specify any adjustment settings for the bitmap category, the default settings apply to the bitmap category.","pos":[454,587]},{"content":"As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category.","pos":[594,757]},{"content":"For example, suppose you specify an output channel profile and an adjustment matrix for the default category.","pos":[758,867]},{"content":"If you set the output channel profile for the bitmap category by calling the &lt;xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A&gt; method, the default output channel profile will not apply to bitmaps.","pos":[868,1092],"source":" If you set the output channel profile for the bitmap category by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> method, the default output channel profile will not apply to bitmaps."},{"content":"If you later clear the bitmap output channel profile by calling the &lt;xref:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile%2A&gt; method, the bitmap category will not revert to the default output channel profile; rather, the bitmap category will have no output channel profile setting.","pos":[1093,1396],"source":" If you later clear the bitmap output channel profile by calling the <xref:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile%2A> method, the bitmap category will not revert to the default output channel profile; rather, the bitmap category will have no output channel profile setting."},{"content":"Similarly, the bitmap category will not revert to the default color-adjustment matrix; rather, the bitmap category will have no color-adjustment matrix.","pos":[1397,1549]}]}]},{"pos":[31715,31873],"content":"An element of <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Imaging.ColorAdjustType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the category for which the output channel profile setting is cleared.","needQuote":true,"needEscape":true,"source":"An element of <xref href=\"System.Drawing.Imaging.ColorAdjustType\"></xref> that specifies the category for which the output channel profile setting is cleared."},{"pos":[32390,32444],"content":"Clears the color-remap table for the default category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears the color-remap table for the default category.","pos":[0,54]}]},{"pos":[32457,33070],"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a remap table for the default category, a different remap table for the bitmap category, and still a different remap table for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a remap table for the default category, a different remap table for the bitmap category, and still a different remap table for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","pos":[0,611],"nodes":[{"content":"An &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text.","pos":[0,165],"source":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text."},{"content":"For example, you can specify a remap table for the default category, a different remap table for the bitmap category, and still a different remap table for the pen category.","pos":[166,339]},{"content":"The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own.","pos":[346,483]},{"content":"For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","pos":[484,611]}]}]},{"pos":[33772,33826],"content":"Clears the color-remap table for a specified category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears the color-remap table for a specified category.","pos":[0,54]}]},{"pos":[33839,35264],"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a remap table for the default category, a different remap table for the bitmap category, and still a different remap table for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, then the default settings apply to the pen category.       As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a remap table and a gamma value for the default category. If you set the remap table for the pen category by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> method, the default remap table will not apply to pens. If you later clear the pen remap table by calling the <xref:System.Drawing.Imaging.ImageAttributes.ClearRemapTable%2A> method, the pen category will not revert to the default remap table; rather, the pen category will have no remap table. Similarly, the pen category will not revert to the default gamma value; rather, the pen category will have no gamma value.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a remap table for the default category, a different remap table for the bitmap category, and still a different remap table for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, then the default settings apply to the pen category.       As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a remap table and a gamma value for the default category. If you set the remap table for the pen category by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> method, the default remap table will not apply to pens. If you later clear the pen remap table by calling the <xref:System.Drawing.Imaging.ImageAttributes.ClearRemapTable%2A> method, the pen category will not revert to the default remap table; rather, the pen category will have no remap table. Similarly, the pen category will not revert to the default gamma value; rather, the pen category will have no gamma value.","pos":[0,1421],"nodes":[{"content":"An &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text.","pos":[0,165],"source":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text."},{"content":"For example, you can specify a remap table for the default category, a different remap table for the bitmap category, and still a different remap table for the pen category.","pos":[166,339]},{"content":"The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own.","pos":[346,483]},{"content":"For example, if you never specify any adjustment settings for the pen category, then the default settings apply to the pen category.","pos":[484,616]},{"content":"As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category.","pos":[623,786]},{"content":"For example, suppose you specify a remap table and a gamma value for the default category.","pos":[787,877]},{"content":"If you set the remap table for the pen category by calling the &lt;xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A&gt; method, the default remap table will not apply to pens.","pos":[878,1059],"source":" If you set the remap table for the pen category by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> method, the default remap table will not apply to pens."},{"content":"If you later clear the pen remap table by calling the &lt;xref:System.Drawing.Imaging.ImageAttributes.ClearRemapTable%2A&gt; method, the pen category will not revert to the default remap table; rather, the pen category will have no remap table.","pos":[1060,1298],"source":" If you later clear the pen remap table by calling the <xref:System.Drawing.Imaging.ImageAttributes.ClearRemapTable%2A> method, the pen category will not revert to the default remap table; rather, the pen category will have no remap table."},{"content":"Similarly, the pen category will not revert to the default gamma value; rather, the pen category will have no gamma value.","pos":[1299,1421]}]}]},{"pos":[35465,35604],"content":"An element of <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Imaging.ColorAdjustType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the category for which the remap table is cleared.","needQuote":true,"needEscape":true,"source":"An element of <xref href=\"System.Drawing.Imaging.ColorAdjustType\"></xref> that specifies the category for which the remap table is cleared."},{"pos":[36101,36153],"content":"Clears the threshold value for the default category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears the threshold value for the default category.","pos":[0,52]}]},{"pos":[36166,37340],"content":"The threshold is a value from 0 through 1 that specifies a cutoff point for each color component. For example, suppose the threshold is set to 0.7, and suppose you are rendering a color whose red, green, and blue components are 230, 50, and 220, respectively. The red component (230) is greater than 0.7x255, so the red component will be changed to 255 (full intensity). The green component (50) is less than 0.7x255, so the green component will be changed to 0. The blue component (220) is greater than 0.7x255, so the blue component will be changed to 255.       An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a threshold for the default category, a different threshold for the bitmap category, and still a different threshold for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The threshold is a value from 0 through 1 that specifies a cutoff point for each color component. For example, suppose the threshold is set to 0.7, and suppose you are rendering a color whose red, green, and blue components are 230, 50, and 220, respectively. The red component (230) is greater than 0.7x255, so the red component will be changed to 255 (full intensity). The green component (50) is less than 0.7x255, so the green component will be changed to 0. The blue component (220) is greater than 0.7x255, so the blue component will be changed to 255.       An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a threshold for the default category, a different threshold for the bitmap category, and still a different threshold for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","pos":[0,1170],"nodes":[{"content":"The threshold is a value from 0 through 1 that specifies a cutoff point for each color component.","pos":[0,97]},{"content":"For example, suppose the threshold is set to 0.7, and suppose you are rendering a color whose red, green, and blue components are 230, 50, and 220, respectively.","pos":[98,259]},{"content":"The red component (230) is greater than 0.7x255, so the red component will be changed to 255 (full intensity).","pos":[260,370]},{"content":"The green component (50) is less than 0.7x255, so the green component will be changed to 0.","pos":[371,462]},{"content":"The blue component (220) is greater than 0.7x255, so the blue component will be changed to 255.","pos":[463,558]},{"content":"An &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text.","pos":[565,730],"source":"       An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text."},{"content":"For example, you can specify a threshold for the default category, a different threshold for the bitmap category, and still a different threshold for the pen category.","pos":[731,898]},{"content":"The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own.","pos":[905,1042]},{"content":"For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","pos":[1043,1170]}]}]},{"pos":[38035,38087],"content":"Clears the threshold value for a specified category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears the threshold value for a specified category.","pos":[0,52]}]},{"pos":[38100,40066],"content":"The threshold is a value from 0 through 1 that specifies a cutoff point for each color component. For example, suppose the threshold is set to 0.7, and suppose you are rendering a color whose red, green, and blue components are 230, 50, and 220, respectively. The red component (230) is greater than 0.7x55, so the red component will be changed to 255 (full intensity). The green component (50) is less than 0.7x255, so the green component will be changed to 0. The blue component (220) is greater than 0.7x255, so the blue component will be changed to 255.       An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a threshold for the default category, a different threshold for the bitmap category, and still a different threshold for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.       As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a threshold and a gamma value for the default category. If you set the threshold for the pen category by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> method, the default threshold will not apply to pens. If you later clear the pen threshold by calling the <xref:System.Drawing.Imaging.ImageAttributes.ClearThreshold%2A> method, the pen category will not revert to the default threshold; rather, the pen category will have no threshold. Similarly, the pen category will not revert to the default gamma value; rather, the pen category will have no gamma value.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The threshold is a value from 0 through 1 that specifies a cutoff point for each color component. For example, suppose the threshold is set to 0.7, and suppose you are rendering a color whose red, green, and blue components are 230, 50, and 220, respectively. The red component (230) is greater than 0.7x55, so the red component will be changed to 255 (full intensity). The green component (50) is less than 0.7x255, so the green component will be changed to 0. The blue component (220) is greater than 0.7x255, so the blue component will be changed to 255.       An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a threshold for the default category, a different threshold for the bitmap category, and still a different threshold for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.       As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a threshold and a gamma value for the default category. If you set the threshold for the pen category by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> method, the default threshold will not apply to pens. If you later clear the pen threshold by calling the <xref:System.Drawing.Imaging.ImageAttributes.ClearThreshold%2A> method, the pen category will not revert to the default threshold; rather, the pen category will have no threshold. Similarly, the pen category will not revert to the default gamma value; rather, the pen category will have no gamma value.","pos":[0,1960],"nodes":[{"content":"The threshold is a value from 0 through 1 that specifies a cutoff point for each color component.","pos":[0,97]},{"content":"For example, suppose the threshold is set to 0.7, and suppose you are rendering a color whose red, green, and blue components are 230, 50, and 220, respectively.","pos":[98,259]},{"content":"The red component (230) is greater than 0.7x55, so the red component will be changed to 255 (full intensity).","pos":[260,369]},{"content":"The green component (50) is less than 0.7x255, so the green component will be changed to 0.","pos":[370,461]},{"content":"The blue component (220) is greater than 0.7x255, so the blue component will be changed to 255.","pos":[462,557]},{"content":"An &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text.","pos":[564,729],"source":"       An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text."},{"content":"For example, you can specify a threshold for the default category, a different threshold for the bitmap category, and still a different threshold for the pen category.","pos":[730,897]},{"content":"The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own.","pos":[904,1041]},{"content":"For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","pos":[1042,1169]},{"content":"As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category.","pos":[1176,1339]},{"content":"For example, suppose you specify a threshold and a gamma value for the default category.","pos":[1340,1428]},{"content":"If you set the threshold for the pen category by calling the &lt;xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A&gt; method, the default threshold will not apply to pens.","pos":[1429,1605],"source":" If you set the threshold for the pen category by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> method, the default threshold will not apply to pens."},{"content":"If you later clear the pen threshold by calling the &lt;xref:System.Drawing.Imaging.ImageAttributes.ClearThreshold%2A&gt; method, the pen category will not revert to the default threshold; rather, the pen category will have no threshold.","pos":[1606,1837],"source":" If you later clear the pen threshold by calling the <xref:System.Drawing.Imaging.ImageAttributes.ClearThreshold%2A> method, the pen category will not revert to the default threshold; rather, the pen category will have no threshold."},{"content":"Similarly, the pen category will not revert to the default gamma value; rather, the pen category will have no gamma value.","pos":[1838,1960]}]}]},{"pos":[40266,40403],"content":"An element of <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Imaging.ColorAdjustType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the category for which the threshold is cleared.","needQuote":true,"needEscape":true,"source":"An element of <xref href=\"System.Drawing.Imaging.ColorAdjustType\"></xref> that specifies the category for which the threshold is cleared."},{"pos":[40854,40951],"content":"Creates an exact copy of this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Imaging.ImageAttributes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Creates an exact copy of this <xref href=\"System.Drawing.Imaging.ImageAttributes\"></xref> object."},{"pos":[41075,41184],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Imaging.ImageAttributes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object this class creates, cast as an object.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Imaging.ImageAttributes\"></xref> object this class creates, cast as an object."},{"pos":[41636,41739],"content":"Releases all resources used by this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Imaging.ImageAttributes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Releases all resources used by this <xref href=\"System.Drawing.Imaging.ImageAttributes\"></xref> object."},{"pos":[41752,42643],"content":"Call Dispose when you are finished using the <xref:System.Drawing.Imaging.ImageAttributes>. The Dispose method leaves the <xref:System.Drawing.Imaging.ImageAttributes> in an unusable state. After calling Dispose, you must release all references to the <xref:System.Drawing.Imaging.ImageAttributes> so the garbage collector can reclaim the memory that the <xref:System.Drawing.Imaging.ImageAttributes> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md) and [Implementing a Dispose Method](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  Always call Dispose before you release your last reference to the <xref:System.Drawing.Imaging.ImageAttributes>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.Imaging.ImageAttributes> object's `Finalize` method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Call Dispose when you are finished using the &lt;xref:System.Drawing.Imaging.ImageAttributes&gt;.","pos":[0,91],"source":"Call Dispose when you are finished using the <xref:System.Drawing.Imaging.ImageAttributes>."},{"content":"The Dispose method leaves the &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; in an unusable state.","pos":[92,189],"source":" The Dispose method leaves the <xref:System.Drawing.Imaging.ImageAttributes> in an unusable state."},{"content":"After calling Dispose, you must release all references to the &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; was occupying.","pos":[190,415],"source":" After calling Dispose, you must release all references to the <xref:System.Drawing.Imaging.ImageAttributes> so the garbage collector can reclaim the memory that the <xref:System.Drawing.Imaging.ImageAttributes> was occupying."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id=\"p2\">[</bpt>Implementing a Dispose Method<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[416,590],"source":" For more information, see [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md) and [Implementing a Dispose Method](~/add/includes/ajax-current-ext-md.md)."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Always call Dispose before you release your last reference to the &lt;xref:System.Drawing.Imaging.ImageAttributes&gt;.","pos":[596,721],"source":"      > [!NOTE] >  Always call Dispose before you release your last reference to the <xref:System.Drawing.Imaging.ImageAttributes>."},{"content":"Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object's <ph id=\"ph1\">`Finalize`</ph> method.","pos":[722,888],"source":" Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.Imaging.ImageAttributes> object's `Finalize` method."}]},{"pos":[43169,43293],"content":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.","pos":[0,124]}]},{"pos":[44102,44195],"content":"Adjusts the colors in a palette according to the adjustment settings of a specified category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adjusts the colors in a palette according to the adjustment settings of a specified category.","pos":[0,93]}]},{"pos":[44208,44892],"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a color-remap table for the default category, a different color-remap table for the bitmap category, and still a different color-remap table for the pen category.       When you call the GetAdjustedPalette method, you can specify the adjustment category that is used to adjust the palette colors. For example, if you pass <xref:System.Drawing.Imaging.ColorAdjustType> to the GetAdjustedPalette method, the adjustment settings of the bitmap category are used to adjust the palette colors.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a color-remap table for the default category, a different color-remap table for the bitmap category, and still a different color-remap table for the pen category.       When you call the GetAdjustedPalette method, you can specify the adjustment category that is used to adjust the palette colors. For example, if you pass <xref:System.Drawing.Imaging.ColorAdjustType> to the GetAdjustedPalette method, the adjustment settings of the bitmap category are used to adjust the palette colors.","pos":[0,682],"nodes":[{"content":"An &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text.","pos":[0,165],"source":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text."},{"content":"For example, you can specify a color-remap table for the default category, a different color-remap table for the bitmap category, and still a different color-remap table for the pen category.","pos":[166,357]},{"content":"When you call the GetAdjustedPalette method, you can specify the adjustment category that is used to adjust the palette colors.","pos":[364,491]},{"content":"For example, if you pass &lt;xref:System.Drawing.Imaging.ColorAdjustType&gt; to the GetAdjustedPalette method, the adjustment settings of the bitmap category are used to adjust the palette colors.","pos":[492,682],"source":" For example, if you pass <xref:System.Drawing.Imaging.ColorAdjustType> to the GetAdjustedPalette method, the adjustment settings of the bitmap category are used to adjust the palette colors."}]}]},{"pos":[45141,45295],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Imaging.ColorPalette\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that on input contains the palette to be adjusted, and on output contains the adjusted palette.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Imaging.ColorPalette\"></xref> that on input contains the palette to be adjusted, and on output contains the adjusted palette."},{"pos":[45381,45540],"content":"An element of <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Imaging.ColorAdjustType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the category whose adjustment settings will be applied to the palette.","needQuote":true,"needEscape":true,"source":"An element of <xref href=\"System.Drawing.Imaging.ColorAdjustType\"></xref> that specifies the category whose adjustment settings will be applied to the palette."},{"pos":[46160,46210],"content":"Sets the color-remap table for the brush category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the color-remap table for the brush category.","pos":[0,50]}]},{"pos":[46223,46965],"content":"A color-remap table is an array of <xref:System.Drawing.Imaging.ColorMap> structures. Each <xref:System.Drawing.Imaging.ColorMap> structure has two <xref:System.Drawing.Color> objects: one that specifies an old color and one that specifies a corresponding new color. During rendering, any color that matches one of the old colors in the remap table is changed to the corresponding new color.       Calling the SetBrushRemapTable method has the same effect as passing <xref:System.Drawing.Imaging.ColorAdjustType> to the <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> method. The specified remap table applies to items in metafiles that are filled with a brush.       This method is intended to be used only with metafiles.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A color-remap table is an array of <xref:System.Drawing.Imaging.ColorMap> structures. Each <xref:System.Drawing.Imaging.ColorMap> structure has two <xref:System.Drawing.Color> objects: one that specifies an old color and one that specifies a corresponding new color. During rendering, any color that matches one of the old colors in the remap table is changed to the corresponding new color.       Calling the SetBrushRemapTable method has the same effect as passing <xref:System.Drawing.Imaging.ColorAdjustType> to the <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> method. The specified remap table applies to items in metafiles that are filled with a brush.       This method is intended to be used only with metafiles.","pos":[0,738],"nodes":[{"content":"A color-remap table is an array of &lt;xref:System.Drawing.Imaging.ColorMap&gt; structures.","pos":[0,85],"source":"A color-remap table is an array of <xref:System.Drawing.Imaging.ColorMap> structures."},{"content":"Each &lt;xref:System.Drawing.Imaging.ColorMap&gt; structure has two &lt;xref:System.Drawing.Color&gt; objects: one that specifies an old color and one that specifies a corresponding new color.","pos":[86,266],"source":" Each <xref:System.Drawing.Imaging.ColorMap> structure has two <xref:System.Drawing.Color> objects: one that specifies an old color and one that specifies a corresponding new color."},{"content":"During rendering, any color that matches one of the old colors in the remap table is changed to the corresponding new color.","pos":[267,391]},{"content":"Calling the SetBrushRemapTable method has the same effect as passing &lt;xref:System.Drawing.Imaging.ColorAdjustType&gt; to the &lt;xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A&gt; method.","pos":[398,590],"source":"       Calling the SetBrushRemapTable method has the same effect as passing <xref:System.Drawing.Imaging.ColorAdjustType> to the <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> method."},{"content":"The specified remap table applies to items in metafiles that are filled with a brush.","pos":[591,676]},{"content":"This method is intended to be used only with metafiles.","pos":[683,738]}]}]},{"pos":[48037,48110],"content":"An array of <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Imaging.ColorMap\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"An array of <xref href=\"System.Drawing.Imaging.ColorMap\"></xref> objects."},{"pos":[48714,48758],"content":"Sets the color key for the default category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the color key for the default category.","pos":[0,44]}]},{"pos":[48771,49644],"content":"This method sets the high and low color-key values so that a range of colors can be made transparent. Any color that has each of its three components (red, green, blue) between the corresponding components of the high and low color keys is made transparent.       An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a color key for the default category, a different color key for the bitmap category, and still a different color key for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method sets the high and low color-key values so that a range of colors can be made transparent. Any color that has each of its three components (red, green, blue) between the corresponding components of the high and low color keys is made transparent.       An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a color key for the default category, a different color key for the bitmap category, and still a different color key for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","pos":[0,869],"nodes":[{"content":"This method sets the high and low color-key values so that a range of colors can be made transparent.","pos":[0,101]},{"content":"Any color that has each of its three components (red, green, blue) between the corresponding components of the high and low color keys is made transparent.","pos":[102,257]},{"content":"An &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text.","pos":[264,429],"source":"       An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text."},{"content":"For example, you can specify a color key for the default category, a different color key for the bitmap category, and still a different color key for the pen category.","pos":[430,597]},{"content":"The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own.","pos":[604,741]},{"content":"For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","pos":[742,869]}]}]},{"pos":[50044,50068],"content":"The low color-key value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The low color-key value.","pos":[0,24]}]},{"pos":[50141,50166],"content":"The high color-key value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The high color-key value.","pos":[0,25]}]},{"pos":[50889,50954],"content":"Sets the color key (transparency range) for a specified category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the color key (transparency range) for a specified category.","pos":[0,65]}]},{"pos":[50967,52346],"content":"This method sets the high and low color-key values so that a range of colors can be made transparent. Any color that has each of its three components (red, green, blue) between the corresponding components of the high and low color keys is made transparent.       An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a color key for the default category, a different color key for the bitmap category, and still a different color key for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.       As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a collection of adjustment settings for the default category. If you set the color key for the pen category by passing <xref:System.Drawing.Imaging.ColorAdjustType> to the <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> method, none of the default adjustment settings will apply to pens.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method sets the high and low color-key values so that a range of colors can be made transparent. Any color that has each of its three components (red, green, blue) between the corresponding components of the high and low color keys is made transparent.       An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a color key for the default category, a different color key for the bitmap category, and still a different color key for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.       As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a collection of adjustment settings for the default category. If you set the color key for the pen category by passing <xref:System.Drawing.Imaging.ColorAdjustType> to the <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> method, none of the default adjustment settings will apply to pens.","pos":[0,1373],"nodes":[{"content":"This method sets the high and low color-key values so that a range of colors can be made transparent.","pos":[0,101]},{"content":"Any color that has each of its three components (red, green, blue) between the corresponding components of the high and low color keys is made transparent.","pos":[102,257]},{"content":"An &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text.","pos":[264,429],"source":"       An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text."},{"content":"For example, you can specify a color key for the default category, a different color key for the bitmap category, and still a different color key for the pen category.","pos":[430,597]},{"content":"The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own.","pos":[604,741]},{"content":"For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","pos":[742,869]},{"content":"As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category.","pos":[876,1039]},{"content":"For example, suppose you specify a collection of adjustment settings for the default category.","pos":[1040,1134]},{"content":"If you set the color key for the pen category by passing &lt;xref:System.Drawing.Imaging.ColorAdjustType&gt; to the &lt;xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A&gt; method, none of the default adjustment settings will apply to pens.","pos":[1135,1373],"source":" If you set the color key for the pen category by passing <xref:System.Drawing.Imaging.ColorAdjustType> to the <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> method, none of the default adjustment settings will apply to pens."}]}]},{"pos":[53639,53663],"content":"The low color-key value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The low color-key value.","pos":[0,24]}]},{"pos":[53736,53761],"content":"The high color-key value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The high color-key value.","pos":[0,25]}]},{"pos":[53847,53980],"content":"An element of <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Imaging.ColorAdjustType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the category for which the color key is set.","needQuote":true,"needEscape":true,"source":"An element of <xref href=\"System.Drawing.Imaging.ColorAdjustType\"></xref> that specifies the category for which the color key is set."},{"pos":[54694,54788],"content":"Sets the color-adjustment matrix and the grayscale-adjustment matrix for the default category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the color-adjustment matrix and the grayscale-adjustment matrix for the default category.","pos":[0,94]}]},{"pos":[54801,56105],"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify adjustment matrices for the default category, different adjustment matrices for the bitmap category, and still different adjustment matrices for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.       Calling the SetColorMatrices method is equivalent to calling the <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrixFlag%29?displayProperty=fullName> method and passing <xref:System.Drawing.Imaging.ColorMatrixFlag?displayProperty=fullName> for the `flags` parameter. <xref:System.Drawing.Imaging.ColorMatrixFlag?displayProperty=fullName> specifies that all colors (including grays) are adjusted by the color-adjustment matrix, not the grayscale-adjustment matrix. Therefore, the grayscale-adjustment matrix passed to this method has no effect.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text.","pos":[0,165],"source":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text."},{"content":"For example, you can specify adjustment matrices for the default category, different adjustment matrices for the bitmap category, and still different adjustment matrices for the pen category.","pos":[166,357]},{"content":"The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own.","pos":[364,501]},{"content":"For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","pos":[502,629]},{"content":"Calling the SetColorMatrices method is equivalent to calling the &lt;xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrixFlag%29?displayProperty=fullName&gt; method and passing &lt;xref:System.Drawing.Imaging.ColorMatrixFlag?displayProperty=fullName&gt; for the <ph id=\"ph1\">`flags`</ph> parameter.","pos":[636,1023],"source":"       Calling the SetColorMatrices method is equivalent to calling the <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrixFlag%29?displayProperty=fullName> method and passing <xref:System.Drawing.Imaging.ColorMatrixFlag?displayProperty=fullName> for the `flags` parameter."},{"content":"&lt;xref:System.Drawing.Imaging.ColorMatrixFlag?displayProperty=fullName&gt; specifies that all colors (including grays) are adjusted by the color-adjustment matrix, not the grayscale-adjustment matrix.","pos":[1024,1220],"source":" <xref:System.Drawing.Imaging.ColorMatrixFlag?displayProperty=fullName> specifies that all colors (including grays) are adjusted by the color-adjustment matrix, not the grayscale-adjustment matrix."},{"content":"Therefore, the grayscale-adjustment matrix passed to this method has no effect.","pos":[1221,1300]}]},{"pos":[56366,56394],"content":"The color-adjustment matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The color-adjustment matrix.","pos":[0,28]}]},{"pos":[56482,56514],"content":"The grayscale-adjustment matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The grayscale-adjustment matrix.","pos":[0,32]}]},{"pos":[57359,57453],"content":"Sets the color-adjustment matrix and the grayscale-adjustment matrix for the default category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the color-adjustment matrix and the grayscale-adjustment matrix for the default category.","pos":[0,94]}]},{"pos":[57466,58097],"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify adjustment matrices for the default category, different adjustment matrices for the bitmap category, and still different adjustment matrices for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify adjustment matrices for the default category, different adjustment matrices for the bitmap category, and still different adjustment matrices for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","pos":[0,629],"nodes":[{"content":"An &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text.","pos":[0,165],"source":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text."},{"content":"For example, you can specify adjustment matrices for the default category, different adjustment matrices for the bitmap category, and still different adjustment matrices for the pen category.","pos":[166,357]},{"content":"The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own.","pos":[364,501]},{"content":"For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","pos":[502,629]}]}]},{"pos":[58404,58432],"content":"The color-adjustment matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The color-adjustment matrix.","pos":[0,28]}]},{"pos":[58520,58552],"content":"The grayscale-adjustment matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The grayscale-adjustment matrix.","pos":[0,32]}]},{"pos":[58639,58836],"content":"An element of <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Imaging.ColorMatrixFlag\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the type of image and color that will be affected by the color-adjustment and grayscale-adjustment matrices.","needQuote":true,"needEscape":true,"source":"An element of <xref href=\"System.Drawing.Imaging.ColorMatrixFlag\"></xref> that specifies the type of image and color that will be affected by the color-adjustment and grayscale-adjustment matrices."},{"pos":[59807,59901],"content":"Sets the color-adjustment matrix and the grayscale-adjustment matrix for a specified category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the color-adjustment matrix and the grayscale-adjustment matrix for a specified category.","pos":[0,94]}]},{"pos":[59914,61097],"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify adjustment matrices for the default category, different adjustment matrices for the bitmap category, and still different adjustment matrices for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.       As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a collection of adjustment settings for the default category. If you set the color-adjustment and grayscale-adjustment matrices for the pen category by passing <xref:System.Drawing.Imaging.ColorAdjustType> to the <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%2A> method, none of the default adjustment settings will apply to pens.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify adjustment matrices for the default category, different adjustment matrices for the bitmap category, and still different adjustment matrices for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.       As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a collection of adjustment settings for the default category. If you set the color-adjustment and grayscale-adjustment matrices for the pen category by passing <xref:System.Drawing.Imaging.ColorAdjustType> to the <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%2A> method, none of the default adjustment settings will apply to pens.","pos":[0,1179],"nodes":[{"content":"An &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text.","pos":[0,165],"source":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text."},{"content":"For example, you can specify adjustment matrices for the default category, different adjustment matrices for the bitmap category, and still different adjustment matrices for the pen category.","pos":[166,357]},{"content":"The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own.","pos":[364,501]},{"content":"For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","pos":[502,629]},{"content":"As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category.","pos":[636,799]},{"content":"For example, suppose you specify a collection of adjustment settings for the default category.","pos":[800,894]},{"content":"If you set the color-adjustment and grayscale-adjustment matrices for the pen category by passing &lt;xref:System.Drawing.Imaging.ColorAdjustType&gt; to the &lt;xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%2A&gt; method, none of the default adjustment settings will apply to pens.","pos":[895,1179],"source":" If you set the color-adjustment and grayscale-adjustment matrices for the pen category by passing <xref:System.Drawing.Imaging.ColorAdjustType> to the <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%2A> method, none of the default adjustment settings will apply to pens."}]}]},{"pos":[61448,61476],"content":"The color-adjustment matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The color-adjustment matrix.","pos":[0,28]}]},{"pos":[61564,61596],"content":"The grayscale-adjustment matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The grayscale-adjustment matrix.","pos":[0,32]}]},{"pos":[61682,61879],"content":"An element of <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Imaging.ColorMatrixFlag\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the type of image and color that will be affected by the color-adjustment and grayscale-adjustment matrices.","needQuote":true,"needEscape":true,"source":"An element of <xref href=\"System.Drawing.Imaging.ColorMatrixFlag\"></xref> that specifies the type of image and color that will be affected by the color-adjustment and grayscale-adjustment matrices."},{"pos":[61965,62140],"content":"An element of <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Imaging.ColorAdjustType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the category for which the color-adjustment and grayscale-adjustment matrices are set.","needQuote":true,"needEscape":true,"source":"An element of <xref href=\"System.Drawing.Imaging.ColorAdjustType\"></xref> that specifies the category for which the color-adjustment and grayscale-adjustment matrices are set."},{"pos":[62743,62801],"content":"Sets the color-adjustment matrix for the default category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the color-adjustment matrix for the default category.","pos":[0,58]}]},{"pos":[62814,63977],"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a color-adjustment matrix for the default category, a different color-adjustment matrix for the bitmap category, and still a different color-adjustment matrix for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.       Calling the SetColorMatrix method is equivalent to calling the <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrixFlag%29?displayProperty=fullName> method and passing <xref:System.Drawing.Imaging.ColorMatrixFlag?displayProperty=fullName> for the `flags` parameter. <xref:System.Drawing.Imaging.ColorMatrixFlag?displayProperty=fullName> specifies that all colors (including grays) are adjusted by the color-adjustment matrix","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text.","pos":[0,165],"source":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text."},{"content":"For example, you can specify a color-adjustment matrix for the default category, a different color-adjustment matrix for the bitmap category, and still a different color-adjustment matrix for the pen category.","pos":[166,375]},{"content":"The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own.","pos":[382,519]},{"content":"For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","pos":[520,647]},{"content":"Calling the SetColorMatrix method is equivalent to calling the &lt;xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrixFlag%29?displayProperty=fullName&gt; method and passing &lt;xref:System.Drawing.Imaging.ColorMatrixFlag?displayProperty=fullName&gt; for the <ph id=\"ph1\">`flags`</ph> parameter.","pos":[654,1000],"source":"       Calling the SetColorMatrix method is equivalent to calling the <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrixFlag%29?displayProperty=fullName> method and passing <xref:System.Drawing.Imaging.ColorMatrixFlag?displayProperty=fullName> for the `flags` parameter."},{"content":"&lt;xref:System.Drawing.Imaging.ColorMatrixFlag?displayProperty=fullName&gt; specifies that all colors (including grays) are adjusted by the color-adjustment matrix","pos":[1001,1159],"source":" <xref:System.Drawing.Imaging.ColorMatrixFlag?displayProperty=fullName> specifies that all colors (including grays) are adjusted by the color-adjustment matrix"}]},{"pos":[65626,65654],"content":"The color-adjustment matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The color-adjustment matrix.","pos":[0,28]}]},{"pos":[66381,66439],"content":"Sets the color-adjustment matrix for the default category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the color-adjustment matrix for the default category.","pos":[0,58]}]},{"pos":[66452,67101],"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a color-adjustment matrix for the default category, a different color-adjustment matrix for the bitmap category, and still a different color-adjustment matrix for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a color-adjustment matrix for the default category, a different color-adjustment matrix for the bitmap category, and still a different color-adjustment matrix for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","pos":[0,647],"nodes":[{"content":"An &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text.","pos":[0,165],"source":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text."},{"content":"For example, you can specify a color-adjustment matrix for the default category, a different color-adjustment matrix for the bitmap category, and still a different color-adjustment matrix for the pen category.","pos":[166,375]},{"content":"The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own.","pos":[382,519]},{"content":"For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","pos":[520,647]}]}]},{"pos":[67511,67539],"content":"The color-adjustment matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The color-adjustment matrix.","pos":[0,28]}]},{"pos":[67626,67796],"content":"An element of <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Imaging.ColorMatrixFlag\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the type of image and color that will be affected by the color-adjustment matrix.","needQuote":true,"needEscape":true,"source":"An element of <xref href=\"System.Drawing.Imaging.ColorMatrixFlag\"></xref> that specifies the type of image and color that will be affected by the color-adjustment matrix."},{"pos":[68649,68707],"content":"Sets the color-adjustment matrix for a specified category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the color-adjustment matrix for a specified category.","pos":[0,58]}]},{"pos":[68720,69892],"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a color-adjustment matrix for the default category, a different color-adjustment matrix for the bitmap category, and still a different color-adjustment matrix for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.       As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a collection of adjustment settings for the default category. If you set the color-adjustment matrix for the pen category by passing <xref:System.Drawing.Imaging.ColorAdjustType> to the <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> method, none of the default adjustment settings will apply to pens.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a color-adjustment matrix for the default category, a different color-adjustment matrix for the bitmap category, and still a different color-adjustment matrix for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.       As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a collection of adjustment settings for the default category. If you set the color-adjustment matrix for the pen category by passing <xref:System.Drawing.Imaging.ColorAdjustType> to the <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> method, none of the default adjustment settings will apply to pens.","pos":[0,1168],"nodes":[{"content":"An &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text.","pos":[0,165],"source":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text."},{"content":"For example, you can specify a color-adjustment matrix for the default category, a different color-adjustment matrix for the bitmap category, and still a different color-adjustment matrix for the pen category.","pos":[166,375]},{"content":"The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own.","pos":[382,519]},{"content":"For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","pos":[520,647]},{"content":"As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category.","pos":[654,817]},{"content":"For example, suppose you specify a collection of adjustment settings for the default category.","pos":[818,912]},{"content":"If you set the color-adjustment matrix for the pen category by passing &lt;xref:System.Drawing.Imaging.ColorAdjustType&gt; to the &lt;xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A&gt; method, none of the default adjustment settings will apply to pens.","pos":[913,1168],"source":" If you set the color-adjustment matrix for the pen category by passing <xref:System.Drawing.Imaging.ColorAdjustType> to the <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> method, none of the default adjustment settings will apply to pens."}]}]},{"pos":[70720,70748],"content":"The color-adjustment matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The color-adjustment matrix.","pos":[0,28]}]},{"pos":[70834,71004],"content":"An element of <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Imaging.ColorMatrixFlag\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the type of image and color that will be affected by the color-adjustment matrix.","needQuote":true,"needEscape":true,"source":"An element of <xref href=\"System.Drawing.Imaging.ColorMatrixFlag\"></xref> that specifies the type of image and color that will be affected by the color-adjustment matrix."},{"pos":[71090,71237],"content":"An element of <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Imaging.ColorAdjustType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the category for which the color-adjustment matrix is set.","needQuote":true,"needEscape":true,"source":"An element of <xref href=\"System.Drawing.Imaging.ColorAdjustType\"></xref> that specifies the category for which the color-adjustment matrix is set."},{"pos":[71751,71797],"content":"Sets the gamma value for the default category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the gamma value for the default category.","pos":[0,46]}]},{"pos":[71810,72756],"content":"Typical values for the `gamma` parameter are from 1.0 to 2.2; however, values from 0.1 to 5.0 could prove useful in some circumstances.       An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a gamma value for the default category, a different gamma value for the bitmap category, and still a different gamma value for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.       Gamma values outside the usual range may be useful for old CRT monitors or for monitors that are in unusual lighting conditions, such as industrial environments or window displays.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Typical values for the <ph id=\"ph1\">`gamma`</ph> parameter are from 1.0 to 2.2; however, values from 0.1 to 5.0 could prove useful in some circumstances.","pos":[0,135],"source":"Typical values for the `gamma` parameter are from 1.0 to 2.2; however, values from 0.1 to 5.0 could prove useful in some circumstances."},{"content":"An &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text.","pos":[142,307],"source":"       An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text."},{"content":"For example, you can specify a gamma value for the default category, a different gamma value for the bitmap category, and still a different gamma value for the pen category.","pos":[308,481]},{"content":"The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own.","pos":[488,625]},{"content":"For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","pos":[626,753]},{"content":"Gamma values outside the usual range may be useful for old CRT monitors or for monitors that are in unusual lighting conditions, such as industrial environments or window displays.","pos":[760,940]}]},{"pos":[74109,74136],"content":"The gamma correction value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The gamma correction value.","pos":[0,27]}]},{"pos":[74770,74816],"content":"Sets the gamma value for a specified category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the gamma value for a specified category.","pos":[0,46]}]},{"pos":[74829,76280],"content":"Typical values for the `gamma` parameter are from 1.0 to 2.2; however, values from 0.1 to 5.0 could prove useful in some circumstances.       An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a gamma value for the default category, a different gamma value for the bitmap category, and still a different gamma value for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.       As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a collection of adjustment settings for the default category. If you set the gamma value for the pen category by passing <xref:System.Drawing.Imaging.ColorAdjustType> to the <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> method, none of the default adjustment settings will apply to pens.       Gamma values outside the usual range may be useful for old CRT monitors or for monitors that are in unusual lighting conditions, such as industrial environments or window displays.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Typical values for the <ph id=\"ph1\">`gamma`</ph> parameter are from 1.0 to 2.2; however, values from 0.1 to 5.0 could prove useful in some circumstances.","pos":[0,135],"source":"Typical values for the `gamma` parameter are from 1.0 to 2.2; however, values from 0.1 to 5.0 could prove useful in some circumstances."},{"content":"An &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text.","pos":[142,307],"source":"       An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text."},{"content":"For example, you can specify a gamma value for the default category, a different gamma value for the bitmap category, and still a different gamma value for the pen category.","pos":[308,481]},{"content":"The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own.","pos":[488,625]},{"content":"For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","pos":[626,753]},{"content":"As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category.","pos":[760,923]},{"content":"For example, suppose you specify a collection of adjustment settings for the default category.","pos":[924,1018]},{"content":"If you set the gamma value for the pen category by passing &lt;xref:System.Drawing.Imaging.ColorAdjustType&gt; to the &lt;xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A&gt; method, none of the default adjustment settings will apply to pens.","pos":[1019,1256],"source":" If you set the gamma value for the pen category by passing <xref:System.Drawing.Imaging.ColorAdjustType> to the <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> method, none of the default adjustment settings will apply to pens."},{"content":"Gamma values outside the usual range may be useful for old CRT monitors or for monitors that are in unusual lighting conditions, such as industrial environments or window displays.","pos":[1263,1443]}]},{"pos":[76588,76615],"content":"The gamma correction value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The gamma correction value.","pos":[0,27]}]},{"pos":[76701,76852],"content":"An element of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Imaging.ColorAdjustType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration that specifies the category for which the gamma value is set.","needQuote":true,"needEscape":true,"source":"An element of the <xref href=\"System.Drawing.Imaging.ColorAdjustType\"></xref> enumeration that specifies the category for which the gamma value is set."},{"pos":[77307,77588],"content":"Turns off color adjustment for the default category. You can call the <xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp*> method to reinstate the color-adjustment settings that were in place before the call to the <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Turns off color adjustment for the default category.","pos":[0,52]},{"content":"You can call the &lt;xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp<bpt id=\"p1\">*</bpt>&gt; method to reinstate the color-adjustment settings that were in place before the call to the &lt;xref:System.Drawing.Imaging.ImageAttributes.SetNoOp<ept id=\"p1\">*</ept>&gt; method.","pos":[53,281],"source":" You can call the <xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp*> method to reinstate the color-adjustment settings that were in place before the call to the <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp*> method."}]},{"pos":[77601,78214],"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a gamma value for the default category, a different gamma value for the bitmap category, and still a different gamma value for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a gamma value for the default category, a different gamma value for the bitmap category, and still a different gamma value for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","pos":[0,611],"nodes":[{"content":"An &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text.","pos":[0,165],"source":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text."},{"content":"For example, you can specify a gamma value for the default category, a different gamma value for the bitmap category, and still a different gamma value for the pen category.","pos":[166,339]},{"content":"The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own.","pos":[346,483]},{"content":"For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","pos":[484,611]}]}]},{"pos":[80120,80401],"content":"Turns off color adjustment for a specified category. You can call the <xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp*> method to reinstate the color-adjustment settings that were in place before the call to the <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Turns off color adjustment for a specified category.","pos":[0,52]},{"content":"You can call the &lt;xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp<bpt id=\"p1\">*</bpt>&gt; method to reinstate the color-adjustment settings that were in place before the call to the &lt;xref:System.Drawing.Imaging.ImageAttributes.SetNoOp<ept id=\"p1\">*</ept>&gt; method.","pos":[53,281],"source":" You can call the <xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp*> method to reinstate the color-adjustment settings that were in place before the call to the <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp*> method."}]},{"pos":[80414,80753],"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a gamma value for the default category, a different gamma value for the bitmap category, and still a different gamma value for the pen category.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a gamma value for the default category, a different gamma value for the bitmap category, and still a different gamma value for the pen category.","pos":[0,339],"nodes":[{"content":"An &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text.","pos":[0,165],"source":"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text."},{"content":"For example, you can specify a gamma value for the default category, a different gamma value for the bitmap category, and still a different gamma value for the pen category.","pos":[166,339]}]}]},{"pos":[81051,81194],"content":"An element of <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Imaging.ColorAdjustType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the category for which color correction is turned off.","needQuote":true,"needEscape":true,"source":"An element of <xref href=\"System.Drawing.Imaging.ColorAdjustType\"></xref> that specifies the category for which color correction is turned off."},{"pos":[81823,81905],"content":"Sets the CMYK (cyan-magenta-yellow-black) output channel for the default category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the CMYK (cyan-magenta-yellow-black) output channel for the default category.","pos":[0,82]}]},{"pos":[81918,83268],"content":"You can use the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> method to convert an image to a CMYK color space and examine the intensities of one of the CMYK color channels. For example, suppose you create an <xref:System.Drawing.Imaging.ImageAttributes> object and set its bitmap output channel to <xref:System.Drawing.Imaging.ColorChannelFlag>. If you pass the path of that <xref:System.Drawing.Imaging.ImageAttributes> object to the <xref:System.Drawing.Graphics.DrawImage%2A> method, the cyan component of each pixel is calculated, and each pixel in the rendered image is a shade of gray that indicates the intensity of its cyan channel. Similarly, you can render images that indicate the intensities of the magenta, yellow, and black channels.       An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify an output channel for the default category and a different output channel for the bitmap category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the bitmap category, the default settings apply to the bitmap category.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can use the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> method to convert an image to a CMYK color space and examine the intensities of one of the CMYK color channels. For example, suppose you create an <xref:System.Drawing.Imaging.ImageAttributes> object and set its bitmap output channel to <xref:System.Drawing.Imaging.ColorChannelFlag>. If you pass the path of that <xref:System.Drawing.Imaging.ImageAttributes> object to the <xref:System.Drawing.Graphics.DrawImage%2A> method, the cyan component of each pixel is calculated, and each pixel in the rendered image is a shade of gray that indicates the intensity of its cyan channel. Similarly, you can render images that indicate the intensities of the magenta, yellow, and black channels.       An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify an output channel for the default category and a different output channel for the bitmap category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the bitmap category, the default settings apply to the bitmap category.","pos":[0,1346],"nodes":[{"content":"You can use the &lt;xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A&gt; method to convert an image to a CMYK color space and examine the intensities of one of the CMYK color channels.","pos":[0,193],"source":"You can use the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> method to convert an image to a CMYK color space and examine the intensities of one of the CMYK color channels."},{"content":"For example, suppose you create an &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object and set its bitmap output channel to &lt;xref:System.Drawing.Imaging.ColorChannelFlag&gt;.","pos":[194,366],"source":" For example, suppose you create an <xref:System.Drawing.Imaging.ImageAttributes> object and set its bitmap output channel to <xref:System.Drawing.Imaging.ColorChannelFlag>."},{"content":"If you pass the path of that &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object to the &lt;xref:System.Drawing.Graphics.DrawImage%2A&gt; method, the cyan component of each pixel is calculated, and each pixel in the rendered image is a shade of gray that indicates the intensity of its cyan channel.","pos":[367,661],"source":" If you pass the path of that <xref:System.Drawing.Imaging.ImageAttributes> object to the <xref:System.Drawing.Graphics.DrawImage%2A> method, the cyan component of each pixel is calculated, and each pixel in the rendered image is a shade of gray that indicates the intensity of its cyan channel."},{"content":"Similarly, you can render images that indicate the intensities of the magenta, yellow, and black channels.","pos":[662,768]},{"content":"An &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text.","pos":[775,940],"source":"       An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text."},{"content":"For example, you can specify an output channel for the default category and a different output channel for the bitmap category.","pos":[941,1068]},{"content":"The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own.","pos":[1075,1212]},{"content":"For example, if you never specify any adjustment settings for the bitmap category, the default settings apply to the bitmap category.","pos":[1213,1346]}]}]},{"pos":[84039,84148],"content":"An element of <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Imaging.ColorChannelFlag\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the output channel.","needQuote":true,"needEscape":true,"source":"An element of <xref href=\"System.Drawing.Imaging.ColorChannelFlag\"></xref> that specifies the output channel."},{"pos":[84912,84994],"content":"Sets the CMYK (cyan-magenta-yellow-black) output channel for a specified category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the CMYK (cyan-magenta-yellow-black) output channel for a specified category.","pos":[0,82]}]},{"pos":[85007,86830],"content":"You can use the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> method to convert an image to a CMYK color space and examine the intensities of one of the CMYK color channels. For example, suppose you create an <xref:System.Drawing.Imaging.ImageAttributes> object and set its bitmap output channel to <xref:System.Drawing.Imaging.ColorChannelFlag>. If you pass the path of that <xref:System.Drawing.Imaging.ImageAttributes> object to the <xref:System.Drawing.Graphics.DrawImage%2A> method, the cyan component of each pixel is calculated, and each pixel in the rendered image is a shade of gray that indicates the intensity of its cyan channel. Similarly, you can render images that indicate the intensities of the magenta, yellow, and black channels.       An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify an output channel for the default category and a different output channel for the bitmap category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the bitmap category, the default settings apply to the bitmap category.       As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a collection of adjustment settings for the default category. If you set the output channel for the bitmap category by passing <xref:System.Drawing.Imaging.ColorAdjustType> to the SetOutputChannel method, none of the default adjustment settings will apply to bitmaps.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can use the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> method to convert an image to a CMYK color space and examine the intensities of one of the CMYK color channels. For example, suppose you create an <xref:System.Drawing.Imaging.ImageAttributes> object and set its bitmap output channel to <xref:System.Drawing.Imaging.ColorChannelFlag>. If you pass the path of that <xref:System.Drawing.Imaging.ImageAttributes> object to the <xref:System.Drawing.Graphics.DrawImage%2A> method, the cyan component of each pixel is calculated, and each pixel in the rendered image is a shade of gray that indicates the intensity of its cyan channel. Similarly, you can render images that indicate the intensities of the magenta, yellow, and black channels.       An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify an output channel for the default category and a different output channel for the bitmap category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the bitmap category, the default settings apply to the bitmap category.       As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a collection of adjustment settings for the default category. If you set the output channel for the bitmap category by passing <xref:System.Drawing.Imaging.ColorAdjustType> to the SetOutputChannel method, none of the default adjustment settings will apply to bitmaps.","pos":[0,1817],"nodes":[{"content":"You can use the &lt;xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A&gt; method to convert an image to a CMYK color space and examine the intensities of one of the CMYK color channels.","pos":[0,193],"source":"You can use the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> method to convert an image to a CMYK color space and examine the intensities of one of the CMYK color channels."},{"content":"For example, suppose you create an &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object and set its bitmap output channel to &lt;xref:System.Drawing.Imaging.ColorChannelFlag&gt;.","pos":[194,366],"source":" For example, suppose you create an <xref:System.Drawing.Imaging.ImageAttributes> object and set its bitmap output channel to <xref:System.Drawing.Imaging.ColorChannelFlag>."},{"content":"If you pass the path of that &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object to the &lt;xref:System.Drawing.Graphics.DrawImage%2A&gt; method, the cyan component of each pixel is calculated, and each pixel in the rendered image is a shade of gray that indicates the intensity of its cyan channel.","pos":[367,661],"source":" If you pass the path of that <xref:System.Drawing.Imaging.ImageAttributes> object to the <xref:System.Drawing.Graphics.DrawImage%2A> method, the cyan component of each pixel is calculated, and each pixel in the rendered image is a shade of gray that indicates the intensity of its cyan channel."},{"content":"Similarly, you can render images that indicate the intensities of the magenta, yellow, and black channels.","pos":[662,768]},{"content":"An &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text.","pos":[775,940],"source":"       An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text."},{"content":"For example, you can specify an output channel for the default category and a different output channel for the bitmap category.","pos":[941,1068]},{"content":"The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own.","pos":[1075,1212]},{"content":"For example, if you never specify any adjustment settings for the bitmap category, the default settings apply to the bitmap category.","pos":[1213,1346]},{"content":"As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category.","pos":[1353,1516]},{"content":"For example, suppose you specify a collection of adjustment settings for the default category.","pos":[1517,1611]},{"content":"If you set the output channel for the bitmap category by passing &lt;xref:System.Drawing.Imaging.ColorAdjustType&gt; to the SetOutputChannel method, none of the default adjustment settings will apply to bitmaps.","pos":[1612,1817],"source":" If you set the output channel for the bitmap category by passing <xref:System.Drawing.Imaging.ColorAdjustType> to the SetOutputChannel method, none of the default adjustment settings will apply to bitmaps."}]}]},{"pos":[87597,87706],"content":"An element of <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Imaging.ColorChannelFlag\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the output channel.","needQuote":true,"needEscape":true,"source":"An element of <xref href=\"System.Drawing.Imaging.ColorChannelFlag\"></xref> that specifies the output channel."},{"pos":[87792,87930],"content":"An element of <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Imaging.ColorAdjustType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the category for which the output channel is set.","needQuote":true,"needEscape":true,"source":"An element of <xref href=\"System.Drawing.Imaging.ColorAdjustType\"></xref> that specifies the category for which the output channel is set."},{"pos":[88546,88614],"content":"Sets the output channel color-profile file for the default category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the output channel color-profile file for the default category.","pos":[0,68]}]},{"pos":[88627,90609],"content":"You can use the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> and <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> methods to convert an image to a CMYK (cyan-magenta-yellow-black) color space and examine the intensities of one of the CMYK color channels. For example, suppose you write code that performs the following steps:      1.  Create an <xref:System.Drawing.Image>.      2.  Create an <xref:System.Drawing.Imaging.ImageAttributes> object.      3.  Pass <xref:System.Drawing.Imaging.ColorChannelFlag> to the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> method of the <xref:System.Drawing.Imaging.ImageAttributes> object.      4.  Pass the path name of a color profile file to the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> method of the <xref:System.Drawing.Imaging.ImageAttributes> object.      5.  Pass the paths of the <xref:System.Drawing.Image> and <xref:System.Drawing.Imaging.ImageAttributes> objects to the <xref:System.Drawing.Graphics.DrawImage%2A> method.       [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] will use the color-profile file to calculate the cyan component of each pixel in the image, and each pixel in the rendered image will be a shade of gray that indicates the intensity of its cyan channel.       An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify an output channel color-profile file for the default category and a different output channel color-profile file for the bitmap category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the bitmap category, the default settings apply to the bitmap category.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can use the &lt;xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A&gt; and &lt;xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A&gt; methods to convert an image to a CMYK (cyan-magenta-yellow-black) color space and examine the intensities of one of the CMYK color channels.","pos":[0,304],"source":"You can use the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> and <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> methods to convert an image to a CMYK (cyan-magenta-yellow-black) color space and examine the intensities of one of the CMYK color channels."},{"content":"For example, suppose you write code that performs the following steps:      1.","pos":[305,383]},{"content":"Create an &lt;xref:System.Drawing.Image&gt;.","pos":[385,423],"source":"  Create an <xref:System.Drawing.Image>."},{"content":"2.","pos":[429,431]},{"content":"Create an &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object.","pos":[433,496],"source":"  Create an <xref:System.Drawing.Imaging.ImageAttributes> object."},{"content":"3.","pos":[502,504]},{"content":"Pass &lt;xref:System.Drawing.Imaging.ColorChannelFlag&gt; to the &lt;xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A&gt; method of the &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object.","pos":[506,698],"source":"  Pass <xref:System.Drawing.Imaging.ColorChannelFlag> to the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> method of the <xref:System.Drawing.Imaging.ImageAttributes> object."},{"content":"4.","pos":[704,706]},{"content":"Pass the path name of a color profile file to the &lt;xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A&gt; method of the &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object.","pos":[708,903],"source":"  Pass the path name of a color profile file to the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> method of the <xref:System.Drawing.Imaging.ImageAttributes> object."},{"content":"5.","pos":[909,911]},{"content":"Pass the paths of the &lt;xref:System.Drawing.Image&gt; and &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; objects to the &lt;xref:System.Drawing.Graphics.DrawImage%2A&gt; method.","pos":[913,1079],"source":"  Pass the paths of the <xref:System.Drawing.Image> and <xref:System.Drawing.Imaging.ImageAttributes> objects to the <xref:System.Drawing.Graphics.DrawImage%2A> method."},{"content":"<ph id=\"ph1\">[!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]</ph> will use the color-profile file to calculate the cyan component of each pixel in the image, and each pixel in the rendered image will be a shade of gray that indicates the intensity of its cyan channel.","pos":[1086,1350],"source":"[!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] will use the color-profile file to calculate the cyan component of each pixel in the image, and each pixel in the rendered image will be a shade of gray that indicates the intensity of its cyan channel."},{"content":"An &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text.","pos":[1357,1522],"source":"       An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text."},{"content":"For example, you can specify an output channel color-profile file for the default category and a different output channel color-profile file for the bitmap category.","pos":[1523,1688]},{"content":"The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own.","pos":[1695,1832]},{"content":"For example, if you never specify any adjustment settings for the bitmap category, the default settings apply to the bitmap category.","pos":[1833,1966]}]},{"pos":[90798,91027],"content":"The path name of a color-profile file. If the color-profile file is in the %SystemRoot%\\System32\\Spool\\Drivers\\Color directory, this parameter can be the file name. Otherwise, this parameter must be the fully qualified path name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path name of a color-profile file. If the color-profile file is in the %SystemRoot%\\System32\\Spool\\Drivers\\Color directory, this parameter can be the file name. Otherwise, this parameter must be the fully qualified path name.","pos":[0,229],"nodes":[{"content":"The path name of a color-profile file.","pos":[0,38]},{"content":"If the color-profile file is in the %SystemRoot%\\System32\\Spool\\Drivers\\Color directory, this parameter can be the file name.","pos":[39,164]},{"content":"Otherwise, this parameter must be the fully qualified path name.","pos":[165,229]}]}]},{"pos":[91781,91849],"content":"Sets the output channel color-profile file for a specified category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the output channel color-profile file for a specified category.","pos":[0,68]}]},{"pos":[91862,94397],"content":"You can use the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> and <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> methods to convert an image to a CMYK (cyan-magenta-yellow-black) color space and examine the intensities of one of the CMYK color channels. For example, suppose you write code that performs the following steps:      1.  Create an <xref:System.Drawing.Image>.      2.  Create an <xref:System.Drawing.Imaging.ImageAttributes> object.      3.  Pass <xref:System.Drawing.Imaging.ColorChannelFlag> to the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> method of the <xref:System.Drawing.Imaging.ImageAttributes> object.      4.  Pass the path name of a color profile file to the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> method of the <xref:System.Drawing.Imaging.ImageAttributes> object.      5.  Pass the paths of the <xref:System.Drawing.Image> and <xref:System.Drawing.Imaging.ImageAttributes> objects to the <xref:System.Drawing.Graphics.DrawImage%2A> method.       [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] will use the color-profile file to calculate the cyan component of each pixel in the image, and each pixel in the rendered image will be a shade of gray that indicates the intensity of its cyan channel.       An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify an output channel color-profile file for the default category and a different output channel color-profile file for the bitmap category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the bitmap category, the default settings apply to the bitmap category.       As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a collection of adjustment settings for the default category. If you set the output channel color-profile file for the bitmap category by passing <xref:System.Drawing.Imaging.ColorAdjustType> to the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> method, none of the default adjustment settings will apply to bitmaps.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can use the &lt;xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A&gt; and &lt;xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A&gt; methods to convert an image to a CMYK (cyan-magenta-yellow-black) color space and examine the intensities of one of the CMYK color channels.","pos":[0,304],"source":"You can use the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> and <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> methods to convert an image to a CMYK (cyan-magenta-yellow-black) color space and examine the intensities of one of the CMYK color channels."},{"content":"For example, suppose you write code that performs the following steps:      1.","pos":[305,383]},{"content":"Create an &lt;xref:System.Drawing.Image&gt;.","pos":[385,423],"source":"  Create an <xref:System.Drawing.Image>."},{"content":"2.","pos":[429,431]},{"content":"Create an &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object.","pos":[433,496],"source":"  Create an <xref:System.Drawing.Imaging.ImageAttributes> object."},{"content":"3.","pos":[502,504]},{"content":"Pass &lt;xref:System.Drawing.Imaging.ColorChannelFlag&gt; to the &lt;xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A&gt; method of the &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object.","pos":[506,698],"source":"  Pass <xref:System.Drawing.Imaging.ColorChannelFlag> to the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> method of the <xref:System.Drawing.Imaging.ImageAttributes> object."},{"content":"4.","pos":[704,706]},{"content":"Pass the path name of a color profile file to the &lt;xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A&gt; method of the &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object.","pos":[708,903],"source":"  Pass the path name of a color profile file to the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> method of the <xref:System.Drawing.Imaging.ImageAttributes> object."},{"content":"5.","pos":[909,911]},{"content":"Pass the paths of the &lt;xref:System.Drawing.Image&gt; and &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; objects to the &lt;xref:System.Drawing.Graphics.DrawImage%2A&gt; method.","pos":[913,1079],"source":"  Pass the paths of the <xref:System.Drawing.Image> and <xref:System.Drawing.Imaging.ImageAttributes> objects to the <xref:System.Drawing.Graphics.DrawImage%2A> method."},{"content":"<ph id=\"ph1\">[!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]</ph> will use the color-profile file to calculate the cyan component of each pixel in the image, and each pixel in the rendered image will be a shade of gray that indicates the intensity of its cyan channel.","pos":[1086,1350],"source":"[!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] will use the color-profile file to calculate the cyan component of each pixel in the image, and each pixel in the rendered image will be a shade of gray that indicates the intensity of its cyan channel."},{"content":"An &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text.","pos":[1357,1522],"source":"       An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text."},{"content":"For example, you can specify an output channel color-profile file for the default category and a different output channel color-profile file for the bitmap category.","pos":[1523,1688]},{"content":"The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own.","pos":[1695,1832]},{"content":"For example, if you never specify any adjustment settings for the bitmap category, the default settings apply to the bitmap category.","pos":[1833,1966]},{"content":"As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category.","pos":[1973,2136]},{"content":"For example, suppose you specify a collection of adjustment settings for the default category.","pos":[2137,2231]},{"content":"If you set the output channel color-profile file for the bitmap category by passing &lt;xref:System.Drawing.Imaging.ColorAdjustType&gt; to the &lt;xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A&gt; method, none of the default adjustment settings will apply to bitmaps.","pos":[2232,2517],"source":" If you set the output channel color-profile file for the bitmap category by passing <xref:System.Drawing.Imaging.ColorAdjustType> to the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> method, none of the default adjustment settings will apply to bitmaps."}]},{"pos":[94631,94860],"content":"The path name of a color-profile file. If the color-profile file is in the %SystemRoot%\\System32\\Spool\\Drivers\\Color directory, this parameter can be the file name. Otherwise, this parameter must be the fully qualified path name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path name of a color-profile file. If the color-profile file is in the %SystemRoot%\\System32\\Spool\\Drivers\\Color directory, this parameter can be the file name. Otherwise, this parameter must be the fully qualified path name.","pos":[0,229],"nodes":[{"content":"The path name of a color-profile file.","pos":[0,38]},{"content":"If the color-profile file is in the %SystemRoot%\\System32\\Spool\\Drivers\\Color directory, this parameter can be the file name.","pos":[39,164]},{"content":"Otherwise, this parameter must be the fully qualified path name.","pos":[165,229]}]}]},{"pos":[94946,95103],"content":"An element of <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Imaging.ColorAdjustType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the category for which the output channel color-profile file is set.","needQuote":true,"needEscape":true,"source":"An element of <xref href=\"System.Drawing.Imaging.ColorAdjustType\"></xref> that specifies the category for which the output channel color-profile file is set."},{"pos":[95708,95760],"content":"Sets the color-remap table for the default category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the color-remap table for the default category.","pos":[0,52]}]},{"pos":[95773,96788],"content":"A color-remap table is an array of <xref:System.Drawing.Imaging.ColorMap> structures. Each <xref:System.Drawing.Imaging.ColorMap> structure has two <xref:System.Drawing.Color> objects: one that specifies an old color and one that specifies a corresponding new color. During rendering, any color that matches one of the old colors in the remap table is changed to the corresponding new color.       An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a color remap for the default category, a color-remap table for the bitmap category, and still a different color-remap table for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A color-remap table is an array of <xref:System.Drawing.Imaging.ColorMap> structures. Each <xref:System.Drawing.Imaging.ColorMap> structure has two <xref:System.Drawing.Color> objects: one that specifies an old color and one that specifies a corresponding new color. During rendering, any color that matches one of the old colors in the remap table is changed to the corresponding new color.       An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a color remap for the default category, a color-remap table for the bitmap category, and still a different color-remap table for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","pos":[0,1011],"nodes":[{"content":"A color-remap table is an array of &lt;xref:System.Drawing.Imaging.ColorMap&gt; structures.","pos":[0,85],"source":"A color-remap table is an array of <xref:System.Drawing.Imaging.ColorMap> structures."},{"content":"Each &lt;xref:System.Drawing.Imaging.ColorMap&gt; structure has two &lt;xref:System.Drawing.Color&gt; objects: one that specifies an old color and one that specifies a corresponding new color.","pos":[86,266],"source":" Each <xref:System.Drawing.Imaging.ColorMap> structure has two <xref:System.Drawing.Color> objects: one that specifies an old color and one that specifies a corresponding new color."},{"content":"During rendering, any color that matches one of the old colors in the remap table is changed to the corresponding new color.","pos":[267,391]},{"content":"An &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text.","pos":[398,563],"source":"       An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text."},{"content":"For example, you can specify a color remap for the default category, a color-remap table for the bitmap category, and still a different color-remap table for the pen category.","pos":[564,739]},{"content":"The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own.","pos":[746,883]},{"content":"For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","pos":[884,1011]}]}]},{"pos":[97901,98107],"content":"An array of color pairs of type <xref href=\"System.Drawing.Imaging.ColorMap\"></xref>. Each color pair contains an existing color (the first value) and the color that it will be mapped to (the second value).","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of color pairs of type <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Imaging.ColorMap\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,85],"source":"An array of color pairs of type <xref href=\"System.Drawing.Imaging.ColorMap\"></xref>."},{"content":"Each color pair contains an existing color (the first value) and the color that it will be mapped to (the second value).","pos":[86,206]}]},{"pos":[98823,98875],"content":"Sets the color-remap table for a specified category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the color-remap table for a specified category.","pos":[0,52]}]},{"pos":[98888,100370],"content":"A color-remap table is an array of <xref:System.Drawing.Imaging.ColorMap> structures. Each <xref:System.Drawing.Imaging.ColorMap> structure has two <xref:System.Drawing.Color> objects: one that specifies an old color and one that specifies a corresponding new color. During rendering, any color that matches one of the old colors in the remap table is changed to the corresponding new color.       An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a color remap for the default category, a color-remap table for the bitmap category, and still a different color-remap table for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.       As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a collection of adjustment settings for the default category. If you set the color-remap table for the pen category by passing <xref:System.Drawing.Imaging.ColorAdjustType> to the SetRemapTable method, none of the default adjustment settings will apply to pens.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A color-remap table is an array of <xref:System.Drawing.Imaging.ColorMap> structures. Each <xref:System.Drawing.Imaging.ColorMap> structure has two <xref:System.Drawing.Color> objects: one that specifies an old color and one that specifies a corresponding new color. During rendering, any color that matches one of the old colors in the remap table is changed to the corresponding new color.       An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a color remap for the default category, a color-remap table for the bitmap category, and still a different color-remap table for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.       As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a collection of adjustment settings for the default category. If you set the color-remap table for the pen category by passing <xref:System.Drawing.Imaging.ColorAdjustType> to the SetRemapTable method, none of the default adjustment settings will apply to pens.","pos":[0,1476],"nodes":[{"content":"A color-remap table is an array of &lt;xref:System.Drawing.Imaging.ColorMap&gt; structures.","pos":[0,85],"source":"A color-remap table is an array of <xref:System.Drawing.Imaging.ColorMap> structures."},{"content":"Each &lt;xref:System.Drawing.Imaging.ColorMap&gt; structure has two &lt;xref:System.Drawing.Color&gt; objects: one that specifies an old color and one that specifies a corresponding new color.","pos":[86,266],"source":" Each <xref:System.Drawing.Imaging.ColorMap> structure has two <xref:System.Drawing.Color> objects: one that specifies an old color and one that specifies a corresponding new color."},{"content":"During rendering, any color that matches one of the old colors in the remap table is changed to the corresponding new color.","pos":[267,391]},{"content":"An &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text.","pos":[398,563],"source":"       An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text."},{"content":"For example, you can specify a color remap for the default category, a color-remap table for the bitmap category, and still a different color-remap table for the pen category.","pos":[564,739]},{"content":"The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own.","pos":[746,883]},{"content":"For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","pos":[884,1011]},{"content":"As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category.","pos":[1018,1181]},{"content":"For example, suppose you specify a collection of adjustment settings for the default category.","pos":[1182,1276]},{"content":"If you set the color-remap table for the pen category by passing &lt;xref:System.Drawing.Imaging.ColorAdjustType&gt; to the SetRemapTable method, none of the default adjustment settings will apply to pens.","pos":[1277,1476],"source":" If you set the color-remap table for the pen category by passing <xref:System.Drawing.Imaging.ColorAdjustType> to the SetRemapTable method, none of the default adjustment settings will apply to pens."}]}]},{"pos":[100821,101027],"content":"An array of color pairs of type <xref href=\"System.Drawing.Imaging.ColorMap\"></xref>. Each color pair contains an existing color (the first value) and the color that it will be mapped to (the second value).","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of color pairs of type <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Imaging.ColorMap\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,85],"source":"An array of color pairs of type <xref href=\"System.Drawing.Imaging.ColorMap\"></xref>."},{"content":"Each color pair contains an existing color (the first value) and the color that it will be mapped to (the second value).","pos":[86,206]}]},{"pos":[101113,101254],"content":"An element of <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Imaging.ColorAdjustType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the category for which the color-remap table is set.","needQuote":true,"needEscape":true,"source":"An element of <xref href=\"System.Drawing.Imaging.ColorAdjustType\"></xref> that specifies the category for which the color-remap table is set."},{"pos":[101787,101852],"content":"Sets the threshold (transparency range) for the default category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the threshold (transparency range) for the default category.","pos":[0,65]}]},{"pos":[101865,103029],"content":"The threshold is a value from 0 through 1 that specifies a cutoff point for each color component. For example, suppose the threshold is set to 0.7, and suppose you are rendering a color whose red, green, and blue components are 230, 50, and 220, respectively. The red component (230) is greater than 0.7x255, so the red component will be changed to 255 (full intensity). The green component (50) is less than 0.7x255, so the green component will be changed to 0. The blue component (220) is greater than 0.7x255, so the blue component will be changed to 255.       An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a threshold for the default category, a threshold for the bitmap category, and still a different threshold for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The threshold is a value from 0 through 1 that specifies a cutoff point for each color component. For example, suppose the threshold is set to 0.7, and suppose you are rendering a color whose red, green, and blue components are 230, 50, and 220, respectively. The red component (230) is greater than 0.7x255, so the red component will be changed to 255 (full intensity). The green component (50) is less than 0.7x255, so the green component will be changed to 0. The blue component (220) is greater than 0.7x255, so the blue component will be changed to 255.       An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a threshold for the default category, a threshold for the bitmap category, and still a different threshold for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","pos":[0,1160],"nodes":[{"content":"The threshold is a value from 0 through 1 that specifies a cutoff point for each color component.","pos":[0,97]},{"content":"For example, suppose the threshold is set to 0.7, and suppose you are rendering a color whose red, green, and blue components are 230, 50, and 220, respectively.","pos":[98,259]},{"content":"The red component (230) is greater than 0.7x255, so the red component will be changed to 255 (full intensity).","pos":[260,370]},{"content":"The green component (50) is less than 0.7x255, so the green component will be changed to 0.","pos":[371,462]},{"content":"The blue component (220) is greater than 0.7x255, so the blue component will be changed to 255.","pos":[463,558]},{"content":"An &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text.","pos":[565,730],"source":"       An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text."},{"content":"For example, you can specify a threshold for the default category, a threshold for the bitmap category, and still a different threshold for the pen category.","pos":[731,888]},{"content":"The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own.","pos":[895,1032]},{"content":"For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","pos":[1033,1160]}]}]},{"pos":[104204,104253],"content":"A real number that specifies the threshold value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A real number that specifies the threshold value.","pos":[0,49]}]},{"pos":[104911,104976],"content":"Sets the threshold (transparency range) for a specified category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the threshold (transparency range) for a specified category.","pos":[0,65]}]},{"pos":[104989,106611],"content":"The threshold is a value from 0 through 1 that specifies a cutoff point for each color component. For example, suppose the threshold is set to 0.7, and suppose you are rendering a color whose red, green, and blue components are 230, 50, and 220, respectively. The red component (230) is greater than 0.7x255, so the red component will be changed to 255 (full intensity). The green component (50) is less than 0.7x255, so the green component will be changed to 0. The blue component (220) is greater than 0.7x255, so the blue component will be changed to 255.       An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a threshold for the default category, a threshold for the bitmap category, and still a different threshold for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.       As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a collection of adjustment settings for the default category. If you set the threshold for the pen category by passing <xref:System.Drawing.Imaging.ColorAdjustType> to the SetThreshold method, none of the default adjustment settings will apply to pens.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The threshold is a value from 0 through 1 that specifies a cutoff point for each color component. For example, suppose the threshold is set to 0.7, and suppose you are rendering a color whose red, green, and blue components are 230, 50, and 220, respectively. The red component (230) is greater than 0.7x255, so the red component will be changed to 255 (full intensity). The green component (50) is less than 0.7x255, so the green component will be changed to 0. The blue component (220) is greater than 0.7x255, so the blue component will be changed to 255.       An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a threshold for the default category, a threshold for the bitmap category, and still a different threshold for the pen category.       The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.       As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a collection of adjustment settings for the default category. If you set the threshold for the pen category by passing <xref:System.Drawing.Imaging.ColorAdjustType> to the SetThreshold method, none of the default adjustment settings will apply to pens.","pos":[0,1616],"nodes":[{"content":"The threshold is a value from 0 through 1 that specifies a cutoff point for each color component.","pos":[0,97]},{"content":"For example, suppose the threshold is set to 0.7, and suppose you are rendering a color whose red, green, and blue components are 230, 50, and 220, respectively.","pos":[98,259]},{"content":"The red component (230) is greater than 0.7x255, so the red component will be changed to 255 (full intensity).","pos":[260,370]},{"content":"The green component (50) is less than 0.7x255, so the green component will be changed to 0.","pos":[371,462]},{"content":"The blue component (220) is greater than 0.7x255, so the blue component will be changed to 255.","pos":[463,558]},{"content":"An &lt;xref:System.Drawing.Imaging.ImageAttributes&gt; object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text.","pos":[565,730],"source":"       An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text."},{"content":"For example, you can specify a threshold for the default category, a threshold for the bitmap category, and still a different threshold for the pen category.","pos":[731,888]},{"content":"The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own.","pos":[895,1032]},{"content":"For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.","pos":[1033,1160]},{"content":"As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category.","pos":[1167,1330]},{"content":"For example, suppose you specify a collection of adjustment settings for the default category.","pos":[1331,1425]},{"content":"If you set the threshold for the pen category by passing &lt;xref:System.Drawing.Imaging.ColorAdjustType&gt; to the SetThreshold method, none of the default adjustment settings will apply to pens.","pos":[1426,1616],"source":" If you set the threshold for the pen category by passing <xref:System.Drawing.Imaging.ColorAdjustType> to the SetThreshold method, none of the default adjustment settings will apply to pens."}]}]},{"pos":[106935,107072],"content":"A threshold value from 0.0 to 1.0 that is used as a breakpoint to sort colors that will be mapped to either a maximum or a minimum value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A threshold value from 0.0 to 1.0 that is used as a breakpoint to sort colors that will be mapped to either a maximum or a minimum value.","pos":[0,137]}]},{"pos":[107158,107297],"content":"An element of <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Imaging.ColorAdjustType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the category for which the color threshold is set.","needQuote":true,"needEscape":true,"source":"An element of <xref href=\"System.Drawing.Imaging.ColorAdjustType\"></xref> that specifies the category for which the color threshold is set."},{"pos":[107870,108079],"content":"Sets the wrap mode that is used to decide how to tile a texture across a shape, or at shape boundaries. A texture is tiled across a shape to fill it in when the texture is smaller than the shape it is filling.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the wrap mode that is used to decide how to tile a texture across a shape, or at shape boundaries. A texture is tiled across a shape to fill it in when the texture is smaller than the shape it is filling.","pos":[0,209],"nodes":[{"content":"Sets the wrap mode that is used to decide how to tile a texture across a shape, or at shape boundaries.","pos":[0,103]},{"content":"A texture is tiled across a shape to fill it in when the texture is smaller than the shape it is filling.","pos":[104,209]}]}]},{"pos":[108091,108706],"content":"Calling the SetWrapMode method is equivalent to calling <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%2CSystem.Drawing.Color%29> and passing <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> for the `color` parameter. <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> specifies the color of pixels outside of a rendered image. This color is visible if the mode parameter is set to <xref:System.Drawing.Drawing2D.WrapMode> and the source rectangle passed to the <xref:System.Drawing.Graphics.DrawImage%2A> method is larger than the image itself.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Calling the SetWrapMode method is equivalent to calling &lt;xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%2CSystem.Drawing.Color%29&gt; and passing &lt;xref:System.Drawing.Color.Black%2A?displayProperty=fullName&gt; for the <ph id=\"ph1\">`color`</ph> parameter.","pos":[0,276],"source":"Calling the SetWrapMode method is equivalent to calling <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%2CSystem.Drawing.Color%29> and passing <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> for the `color` parameter."},{"content":"&lt;xref:System.Drawing.Color.Black%2A?displayProperty=fullName&gt; specifies the color of pixels outside of a rendered image.","pos":[277,397],"source":" <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> specifies the color of pixels outside of a rendered image."},{"content":"This color is visible if the mode parameter is set to &lt;xref:System.Drawing.Drawing2D.WrapMode&gt; and the source rectangle passed to the &lt;xref:System.Drawing.Graphics.DrawImage%2A&gt; method is larger than the image itself.","pos":[398,615],"source":" This color is visible if the mode parameter is set to <xref:System.Drawing.Drawing2D.WrapMode> and the source rectangle passed to the <xref:System.Drawing.Graphics.DrawImage%2A> method is larger than the image itself."}]},{"pos":[110039,110180],"content":"An element of <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Drawing2D.WrapMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies how repeated copies of an image are used to tile an area.","needQuote":true,"needEscape":true,"source":"An element of <xref href=\"System.Drawing.Drawing2D.WrapMode\"></xref> that specifies how repeated copies of an image are used to tile an area."},{"pos":[110812,111023],"content":"Sets the wrap mode and color used to decide how to tile a texture across a shape, or at shape boundaries. A texture is tiled across a shape to fill it in when the texture is smaller than the shape it is filling.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the wrap mode and color used to decide how to tile a texture across a shape, or at shape boundaries. A texture is tiled across a shape to fill it in when the texture is smaller than the shape it is filling.","pos":[0,211],"nodes":[{"content":"Sets the wrap mode and color used to decide how to tile a texture across a shape, or at shape boundaries.","pos":[0,105]},{"content":"A texture is tiled across a shape to fill it in when the texture is smaller than the shape it is filling.","pos":[106,211]}]}]},{"pos":[111399,111540],"content":"An element of <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Drawing2D.WrapMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies how repeated copies of an image are used to tile an area.","needQuote":true,"needEscape":true,"source":"An element of <xref href=\"System.Drawing.Drawing2D.WrapMode\"></xref> that specifies how repeated copies of an image are used to tile an area."},{"pos":[111609,111961],"content":"An <xref href=\"System.Drawing.Imaging.ImageAttributes\"></xref> object that specifies the color of pixels outside of a rendered image. This color is visible if the mode parameter is set to <xref href=\"System.Drawing.Drawing2D.WrapMode\"></xref> and the source rectangle passed to <xref:System.Drawing.Graphics.DrawImage*> is larger than the image itself.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Imaging.ImageAttributes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that specifies the color of pixels outside of a rendered image.","pos":[0,133],"source":"An <xref href=\"System.Drawing.Imaging.ImageAttributes\"></xref> object that specifies the color of pixels outside of a rendered image."},{"content":"This color is visible if the mode parameter is set to <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Drawing2D.WrapMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and the source rectangle passed to &lt;xref:System.Drawing.Graphics.DrawImage*&gt; is larger than the image itself.","pos":[134,352],"source":" This color is visible if the mode parameter is set to <xref href=\"System.Drawing.Drawing2D.WrapMode\"></xref> and the source rectangle passed to <xref:System.Drawing.Graphics.DrawImage*> is larger than the image itself."}]},{"pos":[112647,112858],"content":"Sets the wrap mode and color used to decide how to tile a texture across a shape, or at shape boundaries. A texture is tiled across a shape to fill it in when the texture is smaller than the shape it is filling.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the wrap mode and color used to decide how to tile a texture across a shape, or at shape boundaries. A texture is tiled across a shape to fill it in when the texture is smaller than the shape it is filling.","pos":[0,211],"nodes":[{"content":"Sets the wrap mode and color used to decide how to tile a texture across a shape, or at shape boundaries.","pos":[0,105]},{"content":"A texture is tiled across a shape to fill it in when the texture is smaller than the shape it is filling.","pos":[106,211]}]}]},{"pos":[113246,113387],"content":"An element of <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Drawing2D.WrapMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies how repeated copies of an image are used to tile an area.","needQuote":true,"needEscape":true,"source":"An element of <xref href=\"System.Drawing.Drawing2D.WrapMode\"></xref> that specifies how repeated copies of an image are used to tile an area."},{"pos":[113456,113753],"content":"A color object that specifies the color of pixels outside of a rendered image. This color is visible if the mode parameter is set to <xref href=\"System.Drawing.Drawing2D.WrapMode\"></xref> and the source rectangle passed to <xref:System.Drawing.Graphics.DrawImage*> is larger than the image itself.","needQuote":true,"needEscape":true,"nodes":[{"content":"A color object that specifies the color of pixels outside of a rendered image.","pos":[0,78]},{"content":"This color is visible if the mode parameter is set to <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Drawing2D.WrapMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and the source rectangle passed to &lt;xref:System.Drawing.Graphics.DrawImage*&gt; is larger than the image itself.","pos":[79,297],"source":" This color is visible if the mode parameter is set to <xref href=\"System.Drawing.Drawing2D.WrapMode\"></xref> and the source rectangle passed to <xref:System.Drawing.Graphics.DrawImage*> is larger than the image itself."}]},{"pos":[113816,113919],"content":"This parameter has no effect. Set it to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"This parameter has no effect.","pos":[0,29]},{"content":"Set it to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[30,103],"source":" Set it to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Drawing.Imaging.ImageAttributes\n  id: ImageAttributes\n  children:\n  - System.Drawing.Imaging.ImageAttributes.#ctor\n  - System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable\n  - System.Drawing.Imaging.ImageAttributes.ClearColorKey\n  - System.Drawing.Imaging.ImageAttributes.ClearColorKey(System.Drawing.Imaging.ColorAdjustType)\n  - System.Drawing.Imaging.ImageAttributes.ClearColorMatrix\n  - System.Drawing.Imaging.ImageAttributes.ClearColorMatrix(System.Drawing.Imaging.ColorAdjustType)\n  - System.Drawing.Imaging.ImageAttributes.ClearGamma\n  - System.Drawing.Imaging.ImageAttributes.ClearGamma(System.Drawing.Imaging.ColorAdjustType)\n  - System.Drawing.Imaging.ImageAttributes.ClearNoOp\n  - System.Drawing.Imaging.ImageAttributes.ClearNoOp(System.Drawing.Imaging.ColorAdjustType)\n  - System.Drawing.Imaging.ImageAttributes.ClearOutputChannel\n  - System.Drawing.Imaging.ImageAttributes.ClearOutputChannel(System.Drawing.Imaging.ColorAdjustType)\n  - System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile\n  - System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile(System.Drawing.Imaging.ColorAdjustType)\n  - System.Drawing.Imaging.ImageAttributes.ClearRemapTable\n  - System.Drawing.Imaging.ImageAttributes.ClearRemapTable(System.Drawing.Imaging.ColorAdjustType)\n  - System.Drawing.Imaging.ImageAttributes.ClearThreshold\n  - System.Drawing.Imaging.ImageAttributes.ClearThreshold(System.Drawing.Imaging.ColorAdjustType)\n  - System.Drawing.Imaging.ImageAttributes.Clone\n  - System.Drawing.Imaging.ImageAttributes.Dispose\n  - System.Drawing.Imaging.ImageAttributes.Finalize\n  - System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette(System.Drawing.Imaging.ColorPalette,System.Drawing.Imaging.ColorAdjustType)\n  - System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable(System.Drawing.Imaging.ColorMap[])\n  - System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color)\n  - System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color,System.Drawing.Imaging.ColorAdjustType)\n  - System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix)\n  - System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)\n  - System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)\n  - System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix)\n  - System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)\n  - System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)\n  - System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single)\n  - System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single,System.Drawing.Imaging.ColorAdjustType)\n  - System.Drawing.Imaging.ImageAttributes.SetNoOp\n  - System.Drawing.Imaging.ImageAttributes.SetNoOp(System.Drawing.Imaging.ColorAdjustType)\n  - System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag)\n  - System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag,System.Drawing.Imaging.ColorAdjustType)\n  - System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String)\n  - System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String,System.Drawing.Imaging.ColorAdjustType)\n  - System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[])\n  - System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[],System.Drawing.Imaging.ColorAdjustType)\n  - System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single)\n  - System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single,System.Drawing.Imaging.ColorAdjustType)\n  - System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode)\n  - System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color)\n  - System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color,System.Boolean)\n  langs:\n  - csharp\n  name: ImageAttributes\n  nameWithType: ImageAttributes\n  fullName: System.Drawing.Imaging.ImageAttributes\n  type: Class\n  summary: Contains information about how bitmap and metafile colors are manipulated during rendering.\n  remarks: An ImageAttributes object maintains several color-adjustment settings, including color-adjustment matrices, grayscale-adjustment matrices, gamma-correction values, color-map tables, and color-threshold values. During rendering, colors can be corrected, darkened, lightened, and removed. To apply such manipulations, initialize an ImageAttributes object and pass the path of that ImageAttributes object (along with the path of an <xref:System.Drawing.Image>) to the <xref:System.Drawing.Graphics.DrawImage%2A> method.\n  example:\n  - \"The following example takes an image that is all one color (0.2, 0.0, 0.4, 1.0) and doubles the red component adds 0.2 to the red, green, and blue components  \\n  \\n The following illustration shows the original image on the left and the transformed image on the right.  \\n  \\n ![Colors](~/add/media/colortrans1.png \\\"Colors\\\")  \\n  \\n The code in the following example uses the following steps to perform the recoloring:  \\n  \\n1.  Initialize a <xref:System.Drawing.Imaging.ColorMatrix> object.  \\n  \\n2.  Create an ImageAttributes object and pass the <xref:System.Drawing.Imaging.ColorMatrix> object to the <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> method of the ImageAttributes object.  \\n  \\n3.  Pass the ImageAttributes object to the <xref:System.Drawing.Graphics.DrawImage%2A> method of a <xref:System.Drawing.Graphics> object.  \\n  \\n [!code-vb[System.Drawing.RecoloringImages#21](~/add/codesnippet/visualbasic/t-system.drawing.imaging_5_1.vb)]\\n [!code-cs[System.Drawing.RecoloringImages#21](~/add/codesnippet/csharp/t-system.drawing.imaging_5_1.cs)]\"\n  syntax:\n    content: 'public sealed class ImageAttributes : ICloneable, IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.ICloneable\n  - System.IDisposable\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.#ctor\n  id: '#ctor'\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: ImageAttributes()\n  nameWithType: ImageAttributes.ImageAttributes()\n  fullName: System.Drawing.Imaging.ImageAttributes.ImageAttributes()\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Initializes a new instance of the <xref href=\"System.Drawing.Imaging.ImageAttributes\"></xref> class.\n  syntax:\n    content: public ImageAttributes ();\n    parameters: []\n  overload: System.Drawing.Imaging.ImageAttributes.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable\n  id: ClearBrushRemapTable\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: ClearBrushRemapTable()\n  nameWithType: ImageAttributes.ClearBrushRemapTable()\n  fullName: System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Clears the brush color-remap table of this <xref href=\"System.Drawing.Imaging.ImageAttributes\"></xref> object.\n  remarks: \"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify one color-remap table for the default category, a different color-remap table for the bitmap category, and still a different color-remap table for the brush category.  \\n  \\n The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the brush category, the default settings apply to the brush category.  \\n  \\n As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a default remap table that converts red to green, and you specify a default gamma value of 1.8. If you call the <xref:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable%2A> method, the default remap table (red to green) and the default gamma value (1.8) will not apply to brushes. If you later call the ClearBrushRemapTable method, the brush category will not revert to the default remap table; rather, the brush category will have no remap table. Similarly, the brush category will not revert to the default gamma value; rather, the brush category will have no gamma value.\"\n  syntax:\n    content: public void ClearBrushRemapTable ();\n    parameters: []\n  overload: System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.ClearColorKey\n  id: ClearColorKey\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: ClearColorKey()\n  nameWithType: ImageAttributes.ClearColorKey()\n  fullName: System.Drawing.Imaging.ImageAttributes.ClearColorKey()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Clears the color key (transparency range) for the default category.\n  remarks: \"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify one color key for the default category, a different color key for the bitmap category, and still a different color key for the pen category.  \\n  \\n The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.\"\n  syntax:\n    content: public void ClearColorKey ();\n    parameters: []\n  overload: System.Drawing.Imaging.ImageAttributes.ClearColorKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.ClearColorKey(System.Drawing.Imaging.ColorAdjustType)\n  id: ClearColorKey(System.Drawing.Imaging.ColorAdjustType)\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: ClearColorKey(ColorAdjustType)\n  nameWithType: ImageAttributes.ClearColorKey(ColorAdjustType)\n  fullName: System.Drawing.Imaging.ImageAttributes.ClearColorKey(ColorAdjustType)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Clears the color key (transparency range) for a specified category.\n  remarks: \"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify one color key for the default category, a different color key for the bitmap category, and still a different color key for the pen category.  \\n  \\n The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.  \\n  \\n As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a default color key that makes any color with a red component from 200 through 255 transparent, and you specify a default gamma value of 1.8. If you set the color key of the pen category by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> method, the default color key and the default gamma value will not apply to pens. If you later clear the pen color key by calling the <xref:System.Drawing.Imaging.ImageAttributes.ClearColorKey%2A> method, the pen category will not revert to the default color key; rather, the pen category will have no color key. Similarly, the pen category will not revert to the default gamma value; rather, the pen category will have no gamma value.\"\n  syntax:\n    content: public void ClearColorKey (System.Drawing.Imaging.ColorAdjustType type);\n    parameters:\n    - id: type\n      type: System.Drawing.Imaging.ColorAdjustType\n      description: An element of <xref href=\"System.Drawing.Imaging.ColorAdjustType\"></xref> that specifies the category for which the color key is cleared.\n  overload: System.Drawing.Imaging.ImageAttributes.ClearColorKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.ClearColorMatrix\n  id: ClearColorMatrix\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: ClearColorMatrix()\n  nameWithType: ImageAttributes.ClearColorMatrix()\n  fullName: System.Drawing.Imaging.ImageAttributes.ClearColorMatrix()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Clears the color-adjustment matrix for the default category.\n  remarks: \"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a color-adjustment matrix for the default category, a different color-adjustment matrix for the bitmap category, and still a different color-adjustment matrix for the pen category.  \\n  \\n The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, then the default settings apply to the pen category.\"\n  syntax:\n    content: public void ClearColorMatrix ();\n    parameters: []\n  overload: System.Drawing.Imaging.ImageAttributes.ClearColorMatrix*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.ClearColorMatrix(System.Drawing.Imaging.ColorAdjustType)\n  id: ClearColorMatrix(System.Drawing.Imaging.ColorAdjustType)\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: ClearColorMatrix(ColorAdjustType)\n  nameWithType: ImageAttributes.ClearColorMatrix(ColorAdjustType)\n  fullName: System.Drawing.Imaging.ImageAttributes.ClearColorMatrix(ColorAdjustType)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Clears the color-adjustment matrix for a specified category.\n  remarks: \"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a color-adjustment matrix for the default category, a different color-adjustment matrix for the bitmap category, and still a different color-adjustment matrix for the pen category.  \\n  \\n The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, then the default settings apply to the pen category.  \\n  \\n As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a color-adjustment matrix and a gamma value for the default category. If you set a color-adjustment matrix for the pen category by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> method, the default color-adjustment matrix will not apply to pens. If you later clear the pen color-adjustment matrix by calling the <xref:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix%2A> method, the pen category will not revert to the default adjustment matrix; rather, the pen category will have no adjustment matrix. Similarly, the pen category will not revert to the default gamma value; rather, the pen category will have no gamma value.\"\n  syntax:\n    content: public void ClearColorMatrix (System.Drawing.Imaging.ColorAdjustType type);\n    parameters:\n    - id: type\n      type: System.Drawing.Imaging.ColorAdjustType\n      description: An element of <xref href=\"System.Drawing.Imaging.ColorAdjustType\"></xref> that specifies the category for which the color-adjustment matrix is cleared.\n  overload: System.Drawing.Imaging.ImageAttributes.ClearColorMatrix*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.ClearGamma\n  id: ClearGamma\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: ClearGamma()\n  nameWithType: ImageAttributes.ClearGamma()\n  fullName: System.Drawing.Imaging.ImageAttributes.ClearGamma()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Disables gamma correction for the default category.\n  remarks: \"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a gamma value for the default category, a different gamma value for the bitmap category, and still a different gamma value for the pen category.  \\n  \\n The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.\"\n  syntax:\n    content: public void ClearGamma ();\n    parameters: []\n  overload: System.Drawing.Imaging.ImageAttributes.ClearGamma*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.ClearGamma(System.Drawing.Imaging.ColorAdjustType)\n  id: ClearGamma(System.Drawing.Imaging.ColorAdjustType)\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: ClearGamma(ColorAdjustType)\n  nameWithType: ImageAttributes.ClearGamma(ColorAdjustType)\n  fullName: System.Drawing.Imaging.ImageAttributes.ClearGamma(ColorAdjustType)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Disables gamma correction for a specified category.\n  remarks: \"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a gamma value for the default category, a different gamma value for the bitmap category, and still a different gamma value for the pen category.  \\n  \\n The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, then the default settings apply to the pen category.  \\n  \\n As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a gamma value and a color-adjustment matrix for the default category. If you set the gamma value for the pen category by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> method, the default gamma value will not apply to pens. If you later clear the pen gamma value by calling the <xref:System.Drawing.Imaging.ImageAttributes.ClearGamma%2A> method, the pen category will not revert to the default gamma value; rather, the pen category will have no gamma value. Similarly, the pen category will not revert to the default color-adjustment matrix; rather, the pen category will have no color-adjustment matrix.\"\n  syntax:\n    content: public void ClearGamma (System.Drawing.Imaging.ColorAdjustType type);\n    parameters:\n    - id: type\n      type: System.Drawing.Imaging.ColorAdjustType\n      description: An element of <xref href=\"System.Drawing.Imaging.ColorAdjustType\"></xref> that specifies the category for which gamma correction is disabled.\n  overload: System.Drawing.Imaging.ImageAttributes.ClearGamma*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.ClearNoOp\n  id: ClearNoOp\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: ClearNoOp()\n  nameWithType: ImageAttributes.ClearNoOp()\n  fullName: System.Drawing.Imaging.ImageAttributes.ClearNoOp()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Clears the <xref uid=\"langword_csharp_NoOp\" name=\"NoOp\" href=\"\"></xref> setting for the default category.\n  remarks: \"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a gamma value for the default category, a different gamma value for the bitmap category, and still a different gamma value for the pen category.  \\n  \\n You can disable color adjustment for the default category by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> method. Later, you can reinstate color adjustment for the default category by calling the <xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp%2A> method. The color adjustment then returns to what was in place before the call to <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>.\"\n  syntax:\n    content: public void ClearNoOp ();\n    parameters: []\n  overload: System.Drawing.Imaging.ImageAttributes.ClearNoOp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.ClearNoOp(System.Drawing.Imaging.ColorAdjustType)\n  id: ClearNoOp(System.Drawing.Imaging.ColorAdjustType)\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: ClearNoOp(ColorAdjustType)\n  nameWithType: ImageAttributes.ClearNoOp(ColorAdjustType)\n  fullName: System.Drawing.Imaging.ImageAttributes.ClearNoOp(ColorAdjustType)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Clears the <xref uid=\"langword_csharp_NoOp\" name=\"NoOp\" href=\"\"></xref> setting for a specified category.\n  remarks: \"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a gamma value for the default category, a different gamma value for the bitmap category, and still a different gamma value for the pen category.  \\n  \\n You can disable color adjustment for a certain category by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> method. Later, you can reinstate color adjustment for that category by calling the <xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp%2A> method. The color adjustment then returns to what was in place before the call to <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>.\"\n  syntax:\n    content: public void ClearNoOp (System.Drawing.Imaging.ColorAdjustType type);\n    parameters:\n    - id: type\n      type: System.Drawing.Imaging.ColorAdjustType\n      description: An element of <xref href=\"System.Drawing.Imaging.ColorAdjustType\"></xref> that specifies the category for which the <xref uid=\"langword_csharp_NoOp\" name=\"NoOp\" href=\"\"></xref> setting is cleared.\n  overload: System.Drawing.Imaging.ImageAttributes.ClearNoOp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.ClearOutputChannel\n  id: ClearOutputChannel\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: ClearOutputChannel()\n  nameWithType: ImageAttributes.ClearOutputChannel()\n  fullName: System.Drawing.Imaging.ImageAttributes.ClearOutputChannel()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Clears the CMYK (cyan-magenta-yellow-black) output channel setting for the default category.\n  remarks: \"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify an output channel for the default category and a different output channel for the bitmap category.  \\n  \\n The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the bitmap category, the default settings apply to the bitmap category.\"\n  syntax:\n    content: public void ClearOutputChannel ();\n    parameters: []\n  overload: System.Drawing.Imaging.ImageAttributes.ClearOutputChannel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.ClearOutputChannel(System.Drawing.Imaging.ColorAdjustType)\n  id: ClearOutputChannel(System.Drawing.Imaging.ColorAdjustType)\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: ClearOutputChannel(ColorAdjustType)\n  nameWithType: ImageAttributes.ClearOutputChannel(ColorAdjustType)\n  fullName: System.Drawing.Imaging.ImageAttributes.ClearOutputChannel(ColorAdjustType)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Clears the (cyan-magenta-yellow-black) output channel setting for a specified category.\n  remarks: \"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify an output channel for the default category and a different output channel for the bitmap category.  \\n  \\n The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the bitmap category, the default settings apply to the bitmap category.  \\n  \\n As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify an output channel and an adjustment matrix for the default category. If you set the output channel for the bitmap category by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> method, the default output channel will not apply to bitmaps. If you later clear the bitmap output channel by calling the <xref:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel%2A> method, the bitmap category will not revert to the default output channel; rather, the bitmap category will have no output channel setting. Similarly, the bitmap category will not revert to the default color-adjustment matrix; rather, the bitmap category will have no color-adjustment matrix.\"\n  syntax:\n    content: public void ClearOutputChannel (System.Drawing.Imaging.ColorAdjustType type);\n    parameters:\n    - id: type\n      type: System.Drawing.Imaging.ColorAdjustType\n      description: An element of <xref href=\"System.Drawing.Imaging.ColorAdjustType\"></xref> that specifies the category for which the output channel setting is cleared.\n  overload: System.Drawing.Imaging.ImageAttributes.ClearOutputChannel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile\n  id: ClearOutputChannelColorProfile\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: ClearOutputChannelColorProfile()\n  nameWithType: ImageAttributes.ClearOutputChannelColorProfile()\n  fullName: System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Clears the output channel color profile setting for the default category.\n  remarks: \"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify an output channel profile for the default category and a different output channel profile for the bitmap category.  \\n  \\n The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the bitmap category, the default settings apply to the bitmap category.\"\n  syntax:\n    content: public void ClearOutputChannelColorProfile ();\n    parameters: []\n  overload: System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile(System.Drawing.Imaging.ColorAdjustType)\n  id: ClearOutputChannelColorProfile(System.Drawing.Imaging.ColorAdjustType)\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: ClearOutputChannelColorProfile(ColorAdjustType)\n  nameWithType: ImageAttributes.ClearOutputChannelColorProfile(ColorAdjustType)\n  fullName: System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile(ColorAdjustType)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Clears the output channel color profile setting for a specified category.\n  remarks: \"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify an output channel profile for the default category and a different output channel profile for the bitmap category.  \\n  \\n The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the bitmap category, the default settings apply to the bitmap category.  \\n  \\n As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify an output channel profile and an adjustment matrix for the default category. If you set the output channel profile for the bitmap category by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> method, the default output channel profile will not apply to bitmaps. If you later clear the bitmap output channel profile by calling the <xref:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile%2A> method, the bitmap category will not revert to the default output channel profile; rather, the bitmap category will have no output channel profile setting. Similarly, the bitmap category will not revert to the default color-adjustment matrix; rather, the bitmap category will have no color-adjustment matrix.\"\n  syntax:\n    content: public void ClearOutputChannelColorProfile (System.Drawing.Imaging.ColorAdjustType type);\n    parameters:\n    - id: type\n      type: System.Drawing.Imaging.ColorAdjustType\n      description: An element of <xref href=\"System.Drawing.Imaging.ColorAdjustType\"></xref> that specifies the category for which the output channel profile setting is cleared.\n  overload: System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.ClearRemapTable\n  id: ClearRemapTable\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: ClearRemapTable()\n  nameWithType: ImageAttributes.ClearRemapTable()\n  fullName: System.Drawing.Imaging.ImageAttributes.ClearRemapTable()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Clears the color-remap table for the default category.\n  remarks: \"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a remap table for the default category, a different remap table for the bitmap category, and still a different remap table for the pen category.  \\n  \\n The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.\"\n  syntax:\n    content: public void ClearRemapTable ();\n    parameters: []\n  overload: System.Drawing.Imaging.ImageAttributes.ClearRemapTable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.ClearRemapTable(System.Drawing.Imaging.ColorAdjustType)\n  id: ClearRemapTable(System.Drawing.Imaging.ColorAdjustType)\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: ClearRemapTable(ColorAdjustType)\n  nameWithType: ImageAttributes.ClearRemapTable(ColorAdjustType)\n  fullName: System.Drawing.Imaging.ImageAttributes.ClearRemapTable(ColorAdjustType)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Clears the color-remap table for a specified category.\n  remarks: \"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a remap table for the default category, a different remap table for the bitmap category, and still a different remap table for the pen category.  \\n  \\n The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, then the default settings apply to the pen category.  \\n  \\n As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a remap table and a gamma value for the default category. If you set the remap table for the pen category by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> method, the default remap table will not apply to pens. If you later clear the pen remap table by calling the <xref:System.Drawing.Imaging.ImageAttributes.ClearRemapTable%2A> method, the pen category will not revert to the default remap table; rather, the pen category will have no remap table. Similarly, the pen category will not revert to the default gamma value; rather, the pen category will have no gamma value.\"\n  syntax:\n    content: public void ClearRemapTable (System.Drawing.Imaging.ColorAdjustType type);\n    parameters:\n    - id: type\n      type: System.Drawing.Imaging.ColorAdjustType\n      description: An element of <xref href=\"System.Drawing.Imaging.ColorAdjustType\"></xref> that specifies the category for which the remap table is cleared.\n  overload: System.Drawing.Imaging.ImageAttributes.ClearRemapTable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.ClearThreshold\n  id: ClearThreshold\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: ClearThreshold()\n  nameWithType: ImageAttributes.ClearThreshold()\n  fullName: System.Drawing.Imaging.ImageAttributes.ClearThreshold()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Clears the threshold value for the default category.\n  remarks: \"The threshold is a value from 0 through 1 that specifies a cutoff point for each color component. For example, suppose the threshold is set to 0.7, and suppose you are rendering a color whose red, green, and blue components are 230, 50, and 220, respectively. The red component (230) is greater than 0.7x255, so the red component will be changed to 255 (full intensity). The green component (50) is less than 0.7x255, so the green component will be changed to 0. The blue component (220) is greater than 0.7x255, so the blue component will be changed to 255.  \\n  \\n An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a threshold for the default category, a different threshold for the bitmap category, and still a different threshold for the pen category.  \\n  \\n The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.\"\n  syntax:\n    content: public void ClearThreshold ();\n    parameters: []\n  overload: System.Drawing.Imaging.ImageAttributes.ClearThreshold*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.ClearThreshold(System.Drawing.Imaging.ColorAdjustType)\n  id: ClearThreshold(System.Drawing.Imaging.ColorAdjustType)\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: ClearThreshold(ColorAdjustType)\n  nameWithType: ImageAttributes.ClearThreshold(ColorAdjustType)\n  fullName: System.Drawing.Imaging.ImageAttributes.ClearThreshold(ColorAdjustType)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Clears the threshold value for a specified category.\n  remarks: \"The threshold is a value from 0 through 1 that specifies a cutoff point for each color component. For example, suppose the threshold is set to 0.7, and suppose you are rendering a color whose red, green, and blue components are 230, 50, and 220, respectively. The red component (230) is greater than 0.7x55, so the red component will be changed to 255 (full intensity). The green component (50) is less than 0.7x255, so the green component will be changed to 0. The blue component (220) is greater than 0.7x255, so the blue component will be changed to 255.  \\n  \\n An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a threshold for the default category, a different threshold for the bitmap category, and still a different threshold for the pen category.  \\n  \\n The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.  \\n  \\n As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a threshold and a gamma value for the default category. If you set the threshold for the pen category by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> method, the default threshold will not apply to pens. If you later clear the pen threshold by calling the <xref:System.Drawing.Imaging.ImageAttributes.ClearThreshold%2A> method, the pen category will not revert to the default threshold; rather, the pen category will have no threshold. Similarly, the pen category will not revert to the default gamma value; rather, the pen category will have no gamma value.\"\n  syntax:\n    content: public void ClearThreshold (System.Drawing.Imaging.ColorAdjustType type);\n    parameters:\n    - id: type\n      type: System.Drawing.Imaging.ColorAdjustType\n      description: An element of <xref href=\"System.Drawing.Imaging.ColorAdjustType\"></xref> that specifies the category for which the threshold is cleared.\n  overload: System.Drawing.Imaging.ImageAttributes.ClearThreshold*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.Clone\n  id: Clone\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: ImageAttributes.Clone()\n  fullName: System.Drawing.Imaging.ImageAttributes.Clone()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Creates an exact copy of this <xref href=\"System.Drawing.Imaging.ImageAttributes\"></xref> object.\n  syntax:\n    content: public object Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: The <xref href=\"System.Drawing.Imaging.ImageAttributes\"></xref> object this class creates, cast as an object.\n  overload: System.Drawing.Imaging.ImageAttributes.Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.Dispose\n  id: Dispose\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: ImageAttributes.Dispose()\n  fullName: System.Drawing.Imaging.ImageAttributes.Dispose()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Releases all resources used by this <xref href=\"System.Drawing.Imaging.ImageAttributes\"></xref> object.\n  remarks: \"Call Dispose when you are finished using the <xref:System.Drawing.Imaging.ImageAttributes>. The Dispose method leaves the <xref:System.Drawing.Imaging.ImageAttributes> in an unusable state. After calling Dispose, you must release all references to the <xref:System.Drawing.Imaging.ImageAttributes> so the garbage collector can reclaim the memory that the <xref:System.Drawing.Imaging.ImageAttributes> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md) and [Implementing a Dispose Method](~/add/includes/ajax-current-ext-md.md).  \\n  \\n> [!NOTE]\\n>  Always call Dispose before you release your last reference to the <xref:System.Drawing.Imaging.ImageAttributes>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.Imaging.ImageAttributes> object's `Finalize` method.\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Drawing.Imaging.ImageAttributes.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.Finalize\n  id: Finalize\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: ImageAttributes.Finalize()\n  fullName: System.Drawing.Imaging.ImageAttributes.Finalize()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.\n  syntax:\n    content: ~ImageAttributes ();\n    parameters: []\n  overload: System.Drawing.Imaging.ImageAttributes.Finalize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette(System.Drawing.Imaging.ColorPalette,System.Drawing.Imaging.ColorAdjustType)\n  id: GetAdjustedPalette(System.Drawing.Imaging.ColorPalette,System.Drawing.Imaging.ColorAdjustType)\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: GetAdjustedPalette(ColorPalette,ColorAdjustType)\n  nameWithType: ImageAttributes.GetAdjustedPalette(ColorPalette,ColorAdjustType)\n  fullName: System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette(ColorPalette,ColorAdjustType)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Adjusts the colors in a palette according to the adjustment settings of a specified category.\n  remarks: \"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a color-remap table for the default category, a different color-remap table for the bitmap category, and still a different color-remap table for the pen category.  \\n  \\n When you call the GetAdjustedPalette method, you can specify the adjustment category that is used to adjust the palette colors. For example, if you pass <xref:System.Drawing.Imaging.ColorAdjustType> to the GetAdjustedPalette method, the adjustment settings of the bitmap category are used to adjust the palette colors.\"\n  syntax:\n    content: public void GetAdjustedPalette (System.Drawing.Imaging.ColorPalette palette, System.Drawing.Imaging.ColorAdjustType type);\n    parameters:\n    - id: palette\n      type: System.Drawing.Imaging.ColorPalette\n      description: A <xref href=\"System.Drawing.Imaging.ColorPalette\"></xref> that on input contains the palette to be adjusted, and on output contains the adjusted palette.\n    - id: type\n      type: System.Drawing.Imaging.ColorAdjustType\n      description: An element of <xref href=\"System.Drawing.Imaging.ColorAdjustType\"></xref> that specifies the category whose adjustment settings will be applied to the palette.\n  overload: System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable(System.Drawing.Imaging.ColorMap[])\n  id: SetBrushRemapTable(System.Drawing.Imaging.ColorMap[])\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: SetBrushRemapTable(ColorMap[])\n  nameWithType: ImageAttributes.SetBrushRemapTable(ColorMap[])\n  fullName: System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable(ColorMap[])\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Sets the color-remap table for the brush category.\n  remarks: \"A color-remap table is an array of <xref:System.Drawing.Imaging.ColorMap> structures. Each <xref:System.Drawing.Imaging.ColorMap> structure has two <xref:System.Drawing.Color> objects: one that specifies an old color and one that specifies a corresponding new color. During rendering, any color that matches one of the old colors in the remap table is changed to the corresponding new color.  \\n  \\n Calling the SetBrushRemapTable method has the same effect as passing <xref:System.Drawing.Imaging.ColorAdjustType> to the <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> method. The specified remap table applies to items in metafiles that are filled with a brush.  \\n  \\n This method is intended to be used only with metafiles.\"\n  example:\n  - \"The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \\n  \\n1.  Creates a single-element <xref:System.Drawing.Imaging.ColorMap> array that holds red as the old color and green as the new color.  \\n  \\n2.  Passes this array to a newly created <xref:System.Drawing.Imaging.ImageAttributes> object.  \\n  \\n [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#1](~/add/codesnippet/cpp/03cb420b-6413-4b57-9e9e-_1.cpp)]\\n [!code-cs[System.Drawing.ClassicImaging.ImageAttributes#1](~/add/codesnippet/csharp/03cb420b-6413-4b57-9e9e-_1.cs)]\\n [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#1](~/add/codesnippet/visualbasic/03cb420b-6413-4b57-9e9e-_1.vb)]\"\n  syntax:\n    content: public void SetBrushRemapTable (System.Drawing.Imaging.ColorMap[] map);\n    parameters:\n    - id: map\n      type: System.Drawing.Imaging.ColorMap[]\n      description: An array of <xref href=\"System.Drawing.Imaging.ColorMap\"></xref> objects.\n  overload: System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color)\n  id: SetColorKey(System.Drawing.Color,System.Drawing.Color)\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: SetColorKey(Color,Color)\n  nameWithType: ImageAttributes.SetColorKey(Color,Color)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetColorKey(Color,Color)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Sets the color key for the default category.\n  remarks: \"This method sets the high and low color-key values so that a range of colors can be made transparent. Any color that has each of its three components (red, green, blue) between the corresponding components of the high and low color keys is made transparent.  \\n  \\n An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a color key for the default category, a different color key for the bitmap category, and still a different color key for the pen category.  \\n  \\n The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.\"\n  example:\n  - For a code example, see the <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%28System.Drawing.Color%2CSystem.Drawing.Color%2CSystem.Drawing.Imaging.ColorAdjustType%29> method.\n  syntax:\n    content: public void SetColorKey (System.Drawing.Color colorLow, System.Drawing.Color colorHigh);\n    parameters:\n    - id: colorLow\n      type: System.Drawing.Color\n      description: The low color-key value.\n    - id: colorHigh\n      type: System.Drawing.Color\n      description: The high color-key value.\n  overload: System.Drawing.Imaging.ImageAttributes.SetColorKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color,System.Drawing.Imaging.ColorAdjustType)\n  id: SetColorKey(System.Drawing.Color,System.Drawing.Color,System.Drawing.Imaging.ColorAdjustType)\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: SetColorKey(Color,Color,ColorAdjustType)\n  nameWithType: ImageAttributes.SetColorKey(Color,Color,ColorAdjustType)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetColorKey(Color,Color,ColorAdjustType)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Sets the color key (transparency range) for a specified category.\n  remarks: \"This method sets the high and low color-key values so that a range of colors can be made transparent. Any color that has each of its three components (red, green, blue) between the corresponding components of the high and low color keys is made transparent.  \\n  \\n An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a color key for the default category, a different color key for the bitmap category, and still a different color key for the pen category.  \\n  \\n The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.  \\n  \\n As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a collection of adjustment settings for the default category. If you set the color key for the pen category by passing <xref:System.Drawing.Imaging.ColorAdjustType> to the <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> method, none of the default adjustment settings will apply to pens.\"\n  example:\n  - \"The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \\n  \\n1.  Opens an <xref:System.Drawing.Image> that uses the file Circle.bmp and draws it to the screen.  \\n  \\n2.  Creates an <xref:System.Drawing.Imaging.ImageAttributes> object and sets its color key by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> method.  \\n  \\n3.  Draws the image to the screen using the color key of the <xref:System.Drawing.Imaging.ImageAttributes> object.  \\n  \\n [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#2](~/add/codesnippet/cpp/71066d96-794d-4f7b-950a-_1.cpp)]\\n [!code-cs[System.Drawing.ClassicImaging.ImageAttributes#2](~/add/codesnippet/csharp/71066d96-794d-4f7b-950a-_1.cs)]\\n [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#2](~/add/codesnippet/visualbasic/71066d96-794d-4f7b-950a-_1.vb)]\"\n  syntax:\n    content: public void SetColorKey (System.Drawing.Color colorLow, System.Drawing.Color colorHigh, System.Drawing.Imaging.ColorAdjustType type);\n    parameters:\n    - id: colorLow\n      type: System.Drawing.Color\n      description: The low color-key value.\n    - id: colorHigh\n      type: System.Drawing.Color\n      description: The high color-key value.\n    - id: type\n      type: System.Drawing.Imaging.ColorAdjustType\n      description: An element of <xref href=\"System.Drawing.Imaging.ColorAdjustType\"></xref> that specifies the category for which the color key is set.\n  overload: System.Drawing.Imaging.ImageAttributes.SetColorKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix)\n  id: SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix)\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: SetColorMatrices(ColorMatrix,ColorMatrix)\n  nameWithType: ImageAttributes.SetColorMatrices(ColorMatrix,ColorMatrix)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetColorMatrices(ColorMatrix,ColorMatrix)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Sets the color-adjustment matrix and the grayscale-adjustment matrix for the default category.\n  remarks: \"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify adjustment matrices for the default category, different adjustment matrices for the bitmap category, and still different adjustment matrices for the pen category.  \\n  \\n The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.  \\n  \\n Calling the SetColorMatrices method is equivalent to calling the <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrixFlag%29?displayProperty=fullName> method and passing <xref:System.Drawing.Imaging.ColorMatrixFlag?displayProperty=fullName> for the `flags` parameter. <xref:System.Drawing.Imaging.ColorMatrixFlag?displayProperty=fullName> specifies that all colors (including grays) are adjusted by the color-adjustment matrix, not the grayscale-adjustment matrix. Therefore, the grayscale-adjustment matrix passed to this method has no effect.\"\n  syntax:\n    content: public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix);\n    parameters:\n    - id: newColorMatrix\n      type: System.Drawing.Imaging.ColorMatrix\n      description: The color-adjustment matrix.\n    - id: grayMatrix\n      type: System.Drawing.Imaging.ColorMatrix\n      description: The grayscale-adjustment matrix.\n  overload: System.Drawing.Imaging.ImageAttributes.SetColorMatrices*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)\n  id: SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: SetColorMatrices(ColorMatrix,ColorMatrix,ColorMatrixFlag)\n  nameWithType: ImageAttributes.SetColorMatrices(ColorMatrix,ColorMatrix,ColorMatrixFlag)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetColorMatrices(ColorMatrix,ColorMatrix,ColorMatrixFlag)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Sets the color-adjustment matrix and the grayscale-adjustment matrix for the default category.\n  remarks: \"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify adjustment matrices for the default category, different adjustment matrices for the bitmap category, and still different adjustment matrices for the pen category.  \\n  \\n The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.\"\n  syntax:\n    content: public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix, System.Drawing.Imaging.ColorMatrixFlag flags);\n    parameters:\n    - id: newColorMatrix\n      type: System.Drawing.Imaging.ColorMatrix\n      description: The color-adjustment matrix.\n    - id: grayMatrix\n      type: System.Drawing.Imaging.ColorMatrix\n      description: The grayscale-adjustment matrix.\n    - id: flags\n      type: System.Drawing.Imaging.ColorMatrixFlag\n      description: An element of <xref href=\"System.Drawing.Imaging.ColorMatrixFlag\"></xref> that specifies the type of image and color that will be affected by the color-adjustment and grayscale-adjustment matrices.\n  overload: System.Drawing.Imaging.ImageAttributes.SetColorMatrices*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)\n  id: SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: SetColorMatrices(ColorMatrix,ColorMatrix,ColorMatrixFlag,ColorAdjustType)\n  nameWithType: ImageAttributes.SetColorMatrices(ColorMatrix,ColorMatrix,ColorMatrixFlag,ColorAdjustType)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetColorMatrices(ColorMatrix,ColorMatrix,ColorMatrixFlag,ColorAdjustType)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Sets the color-adjustment matrix and the grayscale-adjustment matrix for a specified category.\n  remarks: \"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify adjustment matrices for the default category, different adjustment matrices for the bitmap category, and still different adjustment matrices for the pen category.  \\n  \\n The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.  \\n  \\n As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a collection of adjustment settings for the default category. If you set the color-adjustment and grayscale-adjustment matrices for the pen category by passing <xref:System.Drawing.Imaging.ColorAdjustType> to the <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%2A> method, none of the default adjustment settings will apply to pens.\"\n  syntax:\n    content: public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix, System.Drawing.Imaging.ColorMatrixFlag mode, System.Drawing.Imaging.ColorAdjustType type);\n    parameters:\n    - id: newColorMatrix\n      type: System.Drawing.Imaging.ColorMatrix\n      description: The color-adjustment matrix.\n    - id: grayMatrix\n      type: System.Drawing.Imaging.ColorMatrix\n      description: The grayscale-adjustment matrix.\n    - id: mode\n      type: System.Drawing.Imaging.ColorMatrixFlag\n      description: An element of <xref href=\"System.Drawing.Imaging.ColorMatrixFlag\"></xref> that specifies the type of image and color that will be affected by the color-adjustment and grayscale-adjustment matrices.\n    - id: type\n      type: System.Drawing.Imaging.ColorAdjustType\n      description: An element of <xref href=\"System.Drawing.Imaging.ColorAdjustType\"></xref> that specifies the category for which the color-adjustment and grayscale-adjustment matrices are set.\n  overload: System.Drawing.Imaging.ImageAttributes.SetColorMatrices*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix)\n  id: SetColorMatrix(System.Drawing.Imaging.ColorMatrix)\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: SetColorMatrix(ColorMatrix)\n  nameWithType: ImageAttributes.SetColorMatrix(ColorMatrix)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetColorMatrix(ColorMatrix)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Sets the color-adjustment matrix for the default category.\n  remarks: \"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a color-adjustment matrix for the default category, a different color-adjustment matrix for the bitmap category, and still a different color-adjustment matrix for the pen category.  \\n  \\n The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.  \\n  \\n Calling the SetColorMatrix method is equivalent to calling the <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrixFlag%29?displayProperty=fullName> method and passing <xref:System.Drawing.Imaging.ColorMatrixFlag?displayProperty=fullName> for the `flags` parameter. <xref:System.Drawing.Imaging.ColorMatrixFlag?displayProperty=fullName> specifies that all colors (including grays) are adjusted by the color-adjustment matrix\"\n  example:\n  - \"The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \\n  \\n1.  Creates a rectangle image that has all the color values set to 128, producing a rectangle that is filled with a solid medium-gray color. The code then draws this rectangle image to the screen.  \\n  \\n2.  Creates a <xref:System.Drawing.Imaging.ColorMatrix> and sets its <xref:System.Drawing.Drawing2D.Matrix> location to 1.75, which emphasizes the red component of the image.  \\n  \\n3.  Creates an <xref:System.Drawing.Imaging.ImageAttributes> object and calls the <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> method.  \\n  \\n4.  Draws the image (a second rectangle) to the screen using the <xref:System.Drawing.Imaging.ColorMatrix> just set in the <xref:System.Drawing.Imaging.ImageAttributes> object.  \\n  \\n Note that the second rectangle has the color red emphasized.  \\n  \\n [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#3](~/add/codesnippet/cpp/177ae5c1-d9d6-4cf6-ac7b-_1.cpp)]\\n [!code-cs[System.Drawing.ClassicImaging.ImageAttributes#3](~/add/codesnippet/csharp/177ae5c1-d9d6-4cf6-ac7b-_1.cs)]\\n [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#3](~/add/codesnippet/visualbasic/177ae5c1-d9d6-4cf6-ac7b-_1.vb)]\"\n  syntax:\n    content: public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix);\n    parameters:\n    - id: newColorMatrix\n      type: System.Drawing.Imaging.ColorMatrix\n      description: The color-adjustment matrix.\n  overload: System.Drawing.Imaging.ImageAttributes.SetColorMatrix*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)\n  id: SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: SetColorMatrix(ColorMatrix,ColorMatrixFlag)\n  nameWithType: ImageAttributes.SetColorMatrix(ColorMatrix,ColorMatrixFlag)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetColorMatrix(ColorMatrix,ColorMatrixFlag)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Sets the color-adjustment matrix for the default category.\n  remarks: \"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a color-adjustment matrix for the default category, a different color-adjustment matrix for the bitmap category, and still a different color-adjustment matrix for the pen category.  \\n  \\n The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.\"\n  example:\n  - For a code example, see the <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%29> method.\n  syntax:\n    content: public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrixFlag flags);\n    parameters:\n    - id: newColorMatrix\n      type: System.Drawing.Imaging.ColorMatrix\n      description: The color-adjustment matrix.\n    - id: flags\n      type: System.Drawing.Imaging.ColorMatrixFlag\n      description: An element of <xref href=\"System.Drawing.Imaging.ColorMatrixFlag\"></xref> that specifies the type of image and color that will be affected by the color-adjustment matrix.\n  overload: System.Drawing.Imaging.ImageAttributes.SetColorMatrix*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)\n  id: SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: SetColorMatrix(ColorMatrix,ColorMatrixFlag,ColorAdjustType)\n  nameWithType: ImageAttributes.SetColorMatrix(ColorMatrix,ColorMatrixFlag,ColorAdjustType)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetColorMatrix(ColorMatrix,ColorMatrixFlag,ColorAdjustType)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Sets the color-adjustment matrix for a specified category.\n  remarks: \"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a color-adjustment matrix for the default category, a different color-adjustment matrix for the bitmap category, and still a different color-adjustment matrix for the pen category.  \\n  \\n The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.  \\n  \\n As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a collection of adjustment settings for the default category. If you set the color-adjustment matrix for the pen category by passing <xref:System.Drawing.Imaging.ColorAdjustType> to the <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> method, none of the default adjustment settings will apply to pens.\"\n  example:\n  - \"The following code example demonstrates how to use the SetColorMatrix method. To run this example, paste the code into a Windows Form and call `RotateColors` from the form's <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \\n  \\n [!code-vb[System.Drawing.RotateColors#1](~/add/codesnippet/visualbasic/90629bc4-1375-4e58-926d-_1.vb)]\\n [!code-cs[System.Drawing.RotateColors#1](~/add/codesnippet/csharp/90629bc4-1375-4e58-926d-_1.cs)]\"\n  syntax:\n    content: public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrixFlag mode, System.Drawing.Imaging.ColorAdjustType type);\n    parameters:\n    - id: newColorMatrix\n      type: System.Drawing.Imaging.ColorMatrix\n      description: The color-adjustment matrix.\n    - id: mode\n      type: System.Drawing.Imaging.ColorMatrixFlag\n      description: An element of <xref href=\"System.Drawing.Imaging.ColorMatrixFlag\"></xref> that specifies the type of image and color that will be affected by the color-adjustment matrix.\n    - id: type\n      type: System.Drawing.Imaging.ColorAdjustType\n      description: An element of <xref href=\"System.Drawing.Imaging.ColorAdjustType\"></xref> that specifies the category for which the color-adjustment matrix is set.\n  overload: System.Drawing.Imaging.ImageAttributes.SetColorMatrix*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single)\n  id: SetGamma(System.Single)\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: SetGamma(Single)\n  nameWithType: ImageAttributes.SetGamma(Single)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetGamma(Single)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Sets the gamma value for the default category.\n  remarks: \"Typical values for the `gamma` parameter are from 1.0 to 2.2; however, values from 0.1 to 5.0 could prove useful in some circumstances.  \\n  \\n An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a gamma value for the default category, a different gamma value for the bitmap category, and still a different gamma value for the pen category.  \\n  \\n The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.  \\n  \\n Gamma values outside the usual range may be useful for old CRT monitors or for monitors that are in unusual lighting conditions, such as industrial environments or window displays.\"\n  example:\n  - \"The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. In addition, you need to change the image file path to a path and image name valid on your system. The code performs the following actions:  \\n  \\n1.  Opens an <xref:System.Drawing.Image> that uses the file Camera.jpg and draws it to the screen using the default value for gamma.  \\n  \\n2.  Creates an <xref:System.Drawing.Imaging.ImageAttributes> object and sets its gamma to 2.2 by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> method.  \\n  \\n3.  Draws the image (a second camera) to the screen using the gamma value just set in the <xref:System.Drawing.Imaging.ImageAttributes> object.  \\n  \\n [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#4](~/add/codesnippet/cpp/m-system.drawing.imaging_4_1.cpp)]\\n [!code-cs[System.Drawing.ClassicImaging.ImageAttributes#4](~/add/codesnippet/csharp/m-system.drawing.imaging_4_1.cs)]\\n [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#4](~/add/codesnippet/visualbasic/m-system.drawing.imaging_4_1.vb)]\"\n  syntax:\n    content: public void SetGamma (float gamma);\n    parameters:\n    - id: gamma\n      type: System.Single\n      description: The gamma correction value.\n  overload: System.Drawing.Imaging.ImageAttributes.SetGamma*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single,System.Drawing.Imaging.ColorAdjustType)\n  id: SetGamma(System.Single,System.Drawing.Imaging.ColorAdjustType)\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: SetGamma(Single,ColorAdjustType)\n  nameWithType: ImageAttributes.SetGamma(Single,ColorAdjustType)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetGamma(Single,ColorAdjustType)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Sets the gamma value for a specified category.\n  remarks: \"Typical values for the `gamma` parameter are from 1.0 to 2.2; however, values from 0.1 to 5.0 could prove useful in some circumstances.  \\n  \\n An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a gamma value for the default category, a different gamma value for the bitmap category, and still a different gamma value for the pen category.  \\n  \\n The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.  \\n  \\n As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a collection of adjustment settings for the default category. If you set the gamma value for the pen category by passing <xref:System.Drawing.Imaging.ColorAdjustType> to the <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> method, none of the default adjustment settings will apply to pens.  \\n  \\n Gamma values outside the usual range may be useful for old CRT monitors or for monitors that are in unusual lighting conditions, such as industrial environments or window displays.\"\n  example:\n  - For a code example, see the <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%28System.Single%29> method.\n  syntax:\n    content: public void SetGamma (float gamma, System.Drawing.Imaging.ColorAdjustType type);\n    parameters:\n    - id: gamma\n      type: System.Single\n      description: The gamma correction value.\n    - id: type\n      type: System.Drawing.Imaging.ColorAdjustType\n      description: An element of the <xref href=\"System.Drawing.Imaging.ColorAdjustType\"></xref> enumeration that specifies the category for which the gamma value is set.\n  overload: System.Drawing.Imaging.ImageAttributes.SetGamma*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.SetNoOp\n  id: SetNoOp\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: SetNoOp()\n  nameWithType: ImageAttributes.SetNoOp()\n  fullName: System.Drawing.Imaging.ImageAttributes.SetNoOp()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Turns off color adjustment for the default category. You can call the <xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp*> method to reinstate the color-adjustment settings that were in place before the call to the <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp*> method.\n  remarks: \"An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a gamma value for the default category, a different gamma value for the bitmap category, and still a different gamma value for the pen category.  \\n  \\n The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.\"\n  example:\n  - \"The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \\n  \\n1.  Opens an <xref:System.Drawing.Image> that uses the file Camera.jpg.  \\n  \\n2.  Sets the gamma value of the <xref:System.Drawing.Imaging.ImageAttributes> object to 0.25.  \\n  \\n3.  Draws the image to the screen.  \\n  \\n4.  Calls the SetNoOp method.  \\n  \\n5.  Draws the image (a second camera) to the screen; however, because the SetNoOp method was called, the gamma setting defaults to a value of 1.0 and the image is drawn to the screen with the default gamma setting.  \\n  \\n Note that the image on the left is very washed out (gamma of 0.25) and the image on the right has more contrast (gamma of 1.0).  \\n  \\n [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#5](~/add/codesnippet/cpp/m-system.drawing.imaging_0_1.cpp)]\\n [!code-cs[System.Drawing.ClassicImaging.ImageAttributes#5](~/add/codesnippet/csharp/m-system.drawing.imaging_0_1.cs)]\\n [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#5](~/add/codesnippet/visualbasic/m-system.drawing.imaging_0_1.vb)]\"\n  syntax:\n    content: public void SetNoOp ();\n    parameters: []\n  overload: System.Drawing.Imaging.ImageAttributes.SetNoOp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.SetNoOp(System.Drawing.Imaging.ColorAdjustType)\n  id: SetNoOp(System.Drawing.Imaging.ColorAdjustType)\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: SetNoOp(ColorAdjustType)\n  nameWithType: ImageAttributes.SetNoOp(ColorAdjustType)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetNoOp(ColorAdjustType)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Turns off color adjustment for a specified category. You can call the <xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp*> method to reinstate the color-adjustment settings that were in place before the call to the <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp*> method.\n  remarks: 'An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a gamma value for the default category, a different gamma value for the bitmap category, and still a different gamma value for the pen category.'\n  example:\n  - For a code example, see the <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp> method.\n  syntax:\n    content: public void SetNoOp (System.Drawing.Imaging.ColorAdjustType type);\n    parameters:\n    - id: type\n      type: System.Drawing.Imaging.ColorAdjustType\n      description: An element of <xref href=\"System.Drawing.Imaging.ColorAdjustType\"></xref> that specifies the category for which color correction is turned off.\n  overload: System.Drawing.Imaging.ImageAttributes.SetNoOp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag)\n  id: SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag)\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: SetOutputChannel(ColorChannelFlag)\n  nameWithType: ImageAttributes.SetOutputChannel(ColorChannelFlag)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetOutputChannel(ColorChannelFlag)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Sets the CMYK (cyan-magenta-yellow-black) output channel for the default category.\n  remarks: \"You can use the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> method to convert an image to a CMYK color space and examine the intensities of one of the CMYK color channels. For example, suppose you create an <xref:System.Drawing.Imaging.ImageAttributes> object and set its bitmap output channel to <xref:System.Drawing.Imaging.ColorChannelFlag>. If you pass the path of that <xref:System.Drawing.Imaging.ImageAttributes> object to the <xref:System.Drawing.Graphics.DrawImage%2A> method, the cyan component of each pixel is calculated, and each pixel in the rendered image is a shade of gray that indicates the intensity of its cyan channel. Similarly, you can render images that indicate the intensities of the magenta, yellow, and black channels.  \\n  \\n An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify an output channel for the default category and a different output channel for the bitmap category.  \\n  \\n The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the bitmap category, the default settings apply to the bitmap category.\"\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> method. To run this example, paste the following code into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `ShowOutputChannels`, passing `e` as<xref:System.Windows.Forms.PaintEventArgs>.  \\n  \\n [!code-vb[System.Drawing.Misc3#4](~/add/codesnippet/visualbasic/9ad3adf3-ee86-4369-8698-_1.vb)]\\n [!code-cs[System.Drawing.Misc3#4](~/add/codesnippet/csharp/9ad3adf3-ee86-4369-8698-_1.cs)]\"\n  syntax:\n    content: public void SetOutputChannel (System.Drawing.Imaging.ColorChannelFlag flags);\n    parameters:\n    - id: flags\n      type: System.Drawing.Imaging.ColorChannelFlag\n      description: An element of <xref href=\"System.Drawing.Imaging.ColorChannelFlag\"></xref> that specifies the output channel.\n  overload: System.Drawing.Imaging.ImageAttributes.SetOutputChannel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag,System.Drawing.Imaging.ColorAdjustType)\n  id: SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag,System.Drawing.Imaging.ColorAdjustType)\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: SetOutputChannel(ColorChannelFlag,ColorAdjustType)\n  nameWithType: ImageAttributes.SetOutputChannel(ColorChannelFlag,ColorAdjustType)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetOutputChannel(ColorChannelFlag,ColorAdjustType)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Sets the CMYK (cyan-magenta-yellow-black) output channel for a specified category.\n  remarks: \"You can use the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> method to convert an image to a CMYK color space and examine the intensities of one of the CMYK color channels. For example, suppose you create an <xref:System.Drawing.Imaging.ImageAttributes> object and set its bitmap output channel to <xref:System.Drawing.Imaging.ColorChannelFlag>. If you pass the path of that <xref:System.Drawing.Imaging.ImageAttributes> object to the <xref:System.Drawing.Graphics.DrawImage%2A> method, the cyan component of each pixel is calculated, and each pixel in the rendered image is a shade of gray that indicates the intensity of its cyan channel. Similarly, you can render images that indicate the intensities of the magenta, yellow, and black channels.  \\n  \\n An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify an output channel for the default category and a different output channel for the bitmap category.  \\n  \\n The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the bitmap category, the default settings apply to the bitmap category.  \\n  \\n As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a collection of adjustment settings for the default category. If you set the output channel for the bitmap category by passing <xref:System.Drawing.Imaging.ColorAdjustType> to the SetOutputChannel method, none of the default adjustment settings will apply to bitmaps.\"\n  example:\n  - \"The following code example demonstrates how to use the SetOutputChannel method. To run this example, paste the following code into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `ShowOutputChannels`, passing `e` as<xref:System.Windows.Forms.PaintEventArgs>.  \\n  \\n [!code-vb[System.Drawing.Misc3#4](~/add/codesnippet/visualbasic/980f8f9a-f561-44e4-94f4-_1.vb)]\\n [!code-cs[System.Drawing.Misc3#4](~/add/codesnippet/csharp/980f8f9a-f561-44e4-94f4-_1.cs)]\"\n  syntax:\n    content: public void SetOutputChannel (System.Drawing.Imaging.ColorChannelFlag flags, System.Drawing.Imaging.ColorAdjustType type);\n    parameters:\n    - id: flags\n      type: System.Drawing.Imaging.ColorChannelFlag\n      description: An element of <xref href=\"System.Drawing.Imaging.ColorChannelFlag\"></xref> that specifies the output channel.\n    - id: type\n      type: System.Drawing.Imaging.ColorAdjustType\n      description: An element of <xref href=\"System.Drawing.Imaging.ColorAdjustType\"></xref> that specifies the category for which the output channel is set.\n  overload: System.Drawing.Imaging.ImageAttributes.SetOutputChannel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String)\n  id: SetOutputChannelColorProfile(System.String)\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: SetOutputChannelColorProfile(String)\n  nameWithType: ImageAttributes.SetOutputChannelColorProfile(String)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(String)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Sets the output channel color-profile file for the default category.\n  remarks: \"You can use the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> and <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> methods to convert an image to a CMYK (cyan-magenta-yellow-black) color space and examine the intensities of one of the CMYK color channels. For example, suppose you write code that performs the following steps:  \\n  \\n1.  Create an <xref:System.Drawing.Image>.  \\n  \\n2.  Create an <xref:System.Drawing.Imaging.ImageAttributes> object.  \\n  \\n3.  Pass <xref:System.Drawing.Imaging.ColorChannelFlag> to the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> method of the <xref:System.Drawing.Imaging.ImageAttributes> object.  \\n  \\n4.  Pass the path name of a color profile file to the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> method of the <xref:System.Drawing.Imaging.ImageAttributes> object.  \\n  \\n5.  Pass the paths of the <xref:System.Drawing.Image> and <xref:System.Drawing.Imaging.ImageAttributes> objects to the <xref:System.Drawing.Graphics.DrawImage%2A> method.  \\n  \\n [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] will use the color-profile file to calculate the cyan component of each pixel in the image, and each pixel in the rendered image will be a shade of gray that indicates the intensity of its cyan channel.  \\n  \\n An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify an output channel color-profile file for the default category and a different output channel color-profile file for the bitmap category.  \\n  \\n The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the bitmap category, the default settings apply to the bitmap category.\"\n  syntax:\n    content: public void SetOutputChannelColorProfile (string colorProfileFilename);\n    parameters:\n    - id: colorProfileFilename\n      type: System.String\n      description: The path name of a color-profile file. If the color-profile file is in the %SystemRoot%\\System32\\Spool\\Drivers\\Color directory, this parameter can be the file name. Otherwise, this parameter must be the fully qualified path name.\n  overload: System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String,System.Drawing.Imaging.ColorAdjustType)\n  id: SetOutputChannelColorProfile(System.String,System.Drawing.Imaging.ColorAdjustType)\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: SetOutputChannelColorProfile(String,ColorAdjustType)\n  nameWithType: ImageAttributes.SetOutputChannelColorProfile(String,ColorAdjustType)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(String,ColorAdjustType)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Sets the output channel color-profile file for a specified category.\n  remarks: \"You can use the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> and <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> methods to convert an image to a CMYK (cyan-magenta-yellow-black) color space and examine the intensities of one of the CMYK color channels. For example, suppose you write code that performs the following steps:  \\n  \\n1.  Create an <xref:System.Drawing.Image>.  \\n  \\n2.  Create an <xref:System.Drawing.Imaging.ImageAttributes> object.  \\n  \\n3.  Pass <xref:System.Drawing.Imaging.ColorChannelFlag> to the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> method of the <xref:System.Drawing.Imaging.ImageAttributes> object.  \\n  \\n4.  Pass the path name of a color profile file to the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> method of the <xref:System.Drawing.Imaging.ImageAttributes> object.  \\n  \\n5.  Pass the paths of the <xref:System.Drawing.Image> and <xref:System.Drawing.Imaging.ImageAttributes> objects to the <xref:System.Drawing.Graphics.DrawImage%2A> method.  \\n  \\n [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] will use the color-profile file to calculate the cyan component of each pixel in the image, and each pixel in the rendered image will be a shade of gray that indicates the intensity of its cyan channel.  \\n  \\n An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify an output channel color-profile file for the default category and a different output channel color-profile file for the bitmap category.  \\n  \\n The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the bitmap category, the default settings apply to the bitmap category.  \\n  \\n As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a collection of adjustment settings for the default category. If you set the output channel color-profile file for the bitmap category by passing <xref:System.Drawing.Imaging.ColorAdjustType> to the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> method, none of the default adjustment settings will apply to bitmaps.\"\n  syntax:\n    content: public void SetOutputChannelColorProfile (string colorProfileFilename, System.Drawing.Imaging.ColorAdjustType type);\n    parameters:\n    - id: colorProfileFilename\n      type: System.String\n      description: The path name of a color-profile file. If the color-profile file is in the %SystemRoot%\\System32\\Spool\\Drivers\\Color directory, this parameter can be the file name. Otherwise, this parameter must be the fully qualified path name.\n    - id: type\n      type: System.Drawing.Imaging.ColorAdjustType\n      description: An element of <xref href=\"System.Drawing.Imaging.ColorAdjustType\"></xref> that specifies the category for which the output channel color-profile file is set.\n  overload: System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[])\n  id: SetRemapTable(System.Drawing.Imaging.ColorMap[])\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: SetRemapTable(ColorMap[])\n  nameWithType: ImageAttributes.SetRemapTable(ColorMap[])\n  fullName: System.Drawing.Imaging.ImageAttributes.SetRemapTable(ColorMap[])\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Sets the color-remap table for the default category.\n  remarks: \"A color-remap table is an array of <xref:System.Drawing.Imaging.ColorMap> structures. Each <xref:System.Drawing.Imaging.ColorMap> structure has two <xref:System.Drawing.Color> objects: one that specifies an old color and one that specifies a corresponding new color. During rendering, any color that matches one of the old colors in the remap table is changed to the corresponding new color.  \\n  \\n An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a color remap for the default category, a color-remap table for the bitmap category, and still a different color-remap table for the pen category.  \\n  \\n The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.\"\n  example:\n  - \"The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \\n  \\n1.  Creates an image (a red circle), saves it as Circle2.jpg, opens that image, and draws it to the screen.  \\n  \\n2.  Creates a color map that maps the color red to the color green.  \\n  \\n3.  Draws the image created earlier to the screen again, but this time using the color map.  \\n  \\n [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#6](~/add/codesnippet/cpp/de604fe6-6d67-4cfb-bb54-_1.cpp)]\\n [!code-cs[System.Drawing.ClassicImaging.ImageAttributes#6](~/add/codesnippet/csharp/de604fe6-6d67-4cfb-bb54-_1.cs)]\\n [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#6](~/add/codesnippet/visualbasic/de604fe6-6d67-4cfb-bb54-_1.vb)]\"\n  syntax:\n    content: public void SetRemapTable (System.Drawing.Imaging.ColorMap[] map);\n    parameters:\n    - id: map\n      type: System.Drawing.Imaging.ColorMap[]\n      description: An array of color pairs of type <xref href=\"System.Drawing.Imaging.ColorMap\"></xref>. Each color pair contains an existing color (the first value) and the color that it will be mapped to (the second value).\n  overload: System.Drawing.Imaging.ImageAttributes.SetRemapTable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[],System.Drawing.Imaging.ColorAdjustType)\n  id: SetRemapTable(System.Drawing.Imaging.ColorMap[],System.Drawing.Imaging.ColorAdjustType)\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: SetRemapTable(ColorMap[],ColorAdjustType)\n  nameWithType: ImageAttributes.SetRemapTable(ColorMap[],ColorAdjustType)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetRemapTable(ColorMap[],ColorAdjustType)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Sets the color-remap table for a specified category.\n  remarks: \"A color-remap table is an array of <xref:System.Drawing.Imaging.ColorMap> structures. Each <xref:System.Drawing.Imaging.ColorMap> structure has two <xref:System.Drawing.Color> objects: one that specifies an old color and one that specifies a corresponding new color. During rendering, any color that matches one of the old colors in the remap table is changed to the corresponding new color.  \\n  \\n An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a color remap for the default category, a color-remap table for the bitmap category, and still a different color-remap table for the pen category.  \\n  \\n The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.  \\n  \\n As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a collection of adjustment settings for the default category. If you set the color-remap table for the pen category by passing <xref:System.Drawing.Imaging.ColorAdjustType> to the SetRemapTable method, none of the default adjustment settings will apply to pens.\"\n  example:\n  - For a code example, see the [SetRemapTable(ColorMap\\[\\])](assetId:///M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[])?qualifyHint=False&autoUpgrade=False) method.\n  syntax:\n    content: public void SetRemapTable (System.Drawing.Imaging.ColorMap[] map, System.Drawing.Imaging.ColorAdjustType type);\n    parameters:\n    - id: map\n      type: System.Drawing.Imaging.ColorMap[]\n      description: An array of color pairs of type <xref href=\"System.Drawing.Imaging.ColorMap\"></xref>. Each color pair contains an existing color (the first value) and the color that it will be mapped to (the second value).\n    - id: type\n      type: System.Drawing.Imaging.ColorAdjustType\n      description: An element of <xref href=\"System.Drawing.Imaging.ColorAdjustType\"></xref> that specifies the category for which the color-remap table is set.\n  overload: System.Drawing.Imaging.ImageAttributes.SetRemapTable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single)\n  id: SetThreshold(System.Single)\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: SetThreshold(Single)\n  nameWithType: ImageAttributes.SetThreshold(Single)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetThreshold(Single)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Sets the threshold (transparency range) for the default category.\n  remarks: \"The threshold is a value from 0 through 1 that specifies a cutoff point for each color component. For example, suppose the threshold is set to 0.7, and suppose you are rendering a color whose red, green, and blue components are 230, 50, and 220, respectively. The red component (230) is greater than 0.7x255, so the red component will be changed to 255 (full intensity). The green component (50) is less than 0.7x255, so the green component will be changed to 0. The blue component (220) is greater than 0.7x255, so the blue component will be changed to 255.  \\n  \\n An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a threshold for the default category, a threshold for the bitmap category, and still a different threshold for the pen category.  \\n  \\n The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.\"\n  example:\n  - \"The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \\n  \\n1.  Opens an <xref:System.Drawing.Image> and draws it to the screen.  \\n  \\n2.  Creates an <xref:System.Drawing.Imaging.ImageAttributes> object and sets its threshold by using the <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> method.  \\n  \\n3.  Draws the image to the screen by using the threshold of the <xref:System.Drawing.Imaging.ImageAttributes> object.  \\n  \\n [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#7](~/add/codesnippet/cpp/m-system.drawing.imaging_1_1.cpp)]\\n [!code-cs[System.Drawing.ClassicImaging.ImageAttributes#7](~/add/codesnippet/csharp/m-system.drawing.imaging_1_1.cs)]\\n [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#7](~/add/codesnippet/visualbasic/m-system.drawing.imaging_1_1.vb)]\"\n  syntax:\n    content: public void SetThreshold (float threshold);\n    parameters:\n    - id: threshold\n      type: System.Single\n      description: A real number that specifies the threshold value.\n  overload: System.Drawing.Imaging.ImageAttributes.SetThreshold*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single,System.Drawing.Imaging.ColorAdjustType)\n  id: SetThreshold(System.Single,System.Drawing.Imaging.ColorAdjustType)\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: SetThreshold(Single,ColorAdjustType)\n  nameWithType: ImageAttributes.SetThreshold(Single,ColorAdjustType)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetThreshold(Single,ColorAdjustType)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Sets the threshold (transparency range) for a specified category.\n  remarks: \"The threshold is a value from 0 through 1 that specifies a cutoff point for each color component. For example, suppose the threshold is set to 0.7, and suppose you are rendering a color whose red, green, and blue components are 230, 50, and 220, respectively. The red component (230) is greater than 0.7x255, so the red component will be changed to 255 (full intensity). The green component (50) is less than 0.7x255, so the green component will be changed to 0. The blue component (220) is greater than 0.7x255, so the blue component will be changed to 255.  \\n  \\n An <xref:System.Drawing.Imaging.ImageAttributes> object maintains color and grayscale settings for five adjustment categories: default, bitmap, brush, pen, and text. For example, you can specify a threshold for the default category, a threshold for the bitmap category, and still a different threshold for the pen category.  \\n  \\n The default color-adjustment and grayscale-adjustment settings apply to all categories that do not have adjustment settings of their own. For example, if you never specify any adjustment settings for the pen category, the default settings apply to the pen category.  \\n  \\n As soon as you specify a color-adjustment or grayscale-adjustment setting for a certain category, the default adjustment settings no longer apply to that category. For example, suppose you specify a collection of adjustment settings for the default category. If you set the threshold for the pen category by passing <xref:System.Drawing.Imaging.ColorAdjustType> to the SetThreshold method, none of the default adjustment settings will apply to pens.\"\n  example:\n  - For a code example, see the <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%28System.Single%29> method.\n  syntax:\n    content: public void SetThreshold (float threshold, System.Drawing.Imaging.ColorAdjustType type);\n    parameters:\n    - id: threshold\n      type: System.Single\n      description: A threshold value from 0.0 to 1.0 that is used as a breakpoint to sort colors that will be mapped to either a maximum or a minimum value.\n    - id: type\n      type: System.Drawing.Imaging.ColorAdjustType\n      description: An element of <xref href=\"System.Drawing.Imaging.ColorAdjustType\"></xref> that specifies the category for which the color threshold is set.\n  overload: System.Drawing.Imaging.ImageAttributes.SetThreshold*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode)\n  id: SetWrapMode(System.Drawing.Drawing2D.WrapMode)\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: SetWrapMode(WrapMode)\n  nameWithType: ImageAttributes.SetWrapMode(WrapMode)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetWrapMode(WrapMode)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Sets the wrap mode that is used to decide how to tile a texture across a shape, or at shape boundaries. A texture is tiled across a shape to fill it in when the texture is smaller than the shape it is filling.\n  remarks: Calling the SetWrapMode method is equivalent to calling <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%2CSystem.Drawing.Color%29> and passing <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> for the `color` parameter. <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> specifies the color of pixels outside of a rendered image. This color is visible if the mode parameter is set to <xref:System.Drawing.Drawing2D.WrapMode> and the source rectangle passed to the <xref:System.Drawing.Graphics.DrawImage%2A> method is larger than the image itself.\n  example:\n  - \"The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \\n  \\n1.  Opens an <xref:System.Drawing.Image> from the Circle3.jpg file (a small, red-filled circle) and draws it to the screen.  \\n  \\n2.  Creates an <xref:System.Drawing.Imaging.ImageAttributes> object and sets the <xref:System.Drawing.Drawing2D.WrapMode> enumeration to <xref:System.Drawing.Drawing2D.WrapMode>.  \\n  \\n3.  Creates a <xref:System.Drawing.TextureBrush> using the image from the Circle3.jpg file.  \\n  \\n4.  Draws a rectangle to the screen that is filled with the small, red-filled circles.  \\n  \\n [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#8](~/add/codesnippet/cpp/1dc37210-933f-4e57-8209-_1.cpp)]\\n [!code-cs[System.Drawing.ClassicImaging.ImageAttributes#8](~/add/codesnippet/csharp/1dc37210-933f-4e57-8209-_1.cs)]\\n [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#8](~/add/codesnippet/visualbasic/1dc37210-933f-4e57-8209-_1.vb)]\"\n  syntax:\n    content: public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode);\n    parameters:\n    - id: mode\n      type: System.Drawing.Drawing2D.WrapMode\n      description: An element of <xref href=\"System.Drawing.Drawing2D.WrapMode\"></xref> that specifies how repeated copies of an image are used to tile an area.\n  overload: System.Drawing.Imaging.ImageAttributes.SetWrapMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color)\n  id: SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color)\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: SetWrapMode(WrapMode,Color)\n  nameWithType: ImageAttributes.SetWrapMode(WrapMode,Color)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetWrapMode(WrapMode,Color)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Sets the wrap mode and color used to decide how to tile a texture across a shape, or at shape boundaries. A texture is tiled across a shape to fill it in when the texture is smaller than the shape it is filling.\n  remarks: ''\n  example:\n  - For a code example, see the <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%29> method.\n  syntax:\n    content: public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode, System.Drawing.Color color);\n    parameters:\n    - id: mode\n      type: System.Drawing.Drawing2D.WrapMode\n      description: An element of <xref href=\"System.Drawing.Drawing2D.WrapMode\"></xref> that specifies how repeated copies of an image are used to tile an area.\n    - id: color\n      type: System.Drawing.Color\n      description: An <xref href=\"System.Drawing.Imaging.ImageAttributes\"></xref> object that specifies the color of pixels outside of a rendered image. This color is visible if the mode parameter is set to <xref href=\"System.Drawing.Drawing2D.WrapMode\"></xref> and the source rectangle passed to <xref:System.Drawing.Graphics.DrawImage*> is larger than the image itself.\n  overload: System.Drawing.Imaging.ImageAttributes.SetWrapMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color,System.Boolean)\n  id: SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color,System.Boolean)\n  parent: System.Drawing.Imaging.ImageAttributes\n  langs:\n  - csharp\n  name: SetWrapMode(WrapMode,Color,Boolean)\n  nameWithType: ImageAttributes.SetWrapMode(WrapMode,Color,Boolean)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetWrapMode(WrapMode,Color,Boolean)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Sets the wrap mode and color used to decide how to tile a texture across a shape, or at shape boundaries. A texture is tiled across a shape to fill it in when the texture is smaller than the shape it is filling.\n  remarks: ''\n  example:\n  - For a code example, see the <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%29> method.\n  syntax:\n    content: public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode, System.Drawing.Color color, bool clamp);\n    parameters:\n    - id: mode\n      type: System.Drawing.Drawing2D.WrapMode\n      description: An element of <xref href=\"System.Drawing.Drawing2D.WrapMode\"></xref> that specifies how repeated copies of an image are used to tile an area.\n    - id: color\n      type: System.Drawing.Color\n      description: A color object that specifies the color of pixels outside of a rendered image. This color is visible if the mode parameter is set to <xref href=\"System.Drawing.Drawing2D.WrapMode\"></xref> and the source rectangle passed to <xref:System.Drawing.Graphics.DrawImage*> is larger than the image itself.\n    - id: clamp\n      type: System.Boolean\n      description: This parameter has no effect. Set it to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Drawing.Imaging.ImageAttributes.SetWrapMode*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Drawing.Imaging.ImageAttributes.#ctor\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: ImageAttributes()\n  nameWithType: ImageAttributes.ImageAttributes()\n  fullName: System.Drawing.Imaging.ImageAttributes.ImageAttributes()\n- uid: System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: ClearBrushRemapTable()\n  nameWithType: ImageAttributes.ClearBrushRemapTable()\n  fullName: System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable()\n- uid: System.Drawing.Imaging.ImageAttributes.ClearColorKey\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: ClearColorKey()\n  nameWithType: ImageAttributes.ClearColorKey()\n  fullName: System.Drawing.Imaging.ImageAttributes.ClearColorKey()\n- uid: System.Drawing.Imaging.ImageAttributes.ClearColorKey(System.Drawing.Imaging.ColorAdjustType)\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: ClearColorKey(ColorAdjustType)\n  nameWithType: ImageAttributes.ClearColorKey(ColorAdjustType)\n  fullName: System.Drawing.Imaging.ImageAttributes.ClearColorKey(ColorAdjustType)\n- uid: System.Drawing.Imaging.ColorAdjustType\n  parent: System.Drawing.Imaging\n  isExternal: false\n  name: ColorAdjustType\n  nameWithType: ColorAdjustType\n  fullName: System.Drawing.Imaging.ColorAdjustType\n- uid: System.Drawing.Imaging.ImageAttributes.ClearColorMatrix\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: ClearColorMatrix()\n  nameWithType: ImageAttributes.ClearColorMatrix()\n  fullName: System.Drawing.Imaging.ImageAttributes.ClearColorMatrix()\n- uid: System.Drawing.Imaging.ImageAttributes.ClearColorMatrix(System.Drawing.Imaging.ColorAdjustType)\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: ClearColorMatrix(ColorAdjustType)\n  nameWithType: ImageAttributes.ClearColorMatrix(ColorAdjustType)\n  fullName: System.Drawing.Imaging.ImageAttributes.ClearColorMatrix(ColorAdjustType)\n- uid: System.Drawing.Imaging.ImageAttributes.ClearGamma\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: ClearGamma()\n  nameWithType: ImageAttributes.ClearGamma()\n  fullName: System.Drawing.Imaging.ImageAttributes.ClearGamma()\n- uid: System.Drawing.Imaging.ImageAttributes.ClearGamma(System.Drawing.Imaging.ColorAdjustType)\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: ClearGamma(ColorAdjustType)\n  nameWithType: ImageAttributes.ClearGamma(ColorAdjustType)\n  fullName: System.Drawing.Imaging.ImageAttributes.ClearGamma(ColorAdjustType)\n- uid: System.Drawing.Imaging.ImageAttributes.ClearNoOp\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: ClearNoOp()\n  nameWithType: ImageAttributes.ClearNoOp()\n  fullName: System.Drawing.Imaging.ImageAttributes.ClearNoOp()\n- uid: System.Drawing.Imaging.ImageAttributes.ClearNoOp(System.Drawing.Imaging.ColorAdjustType)\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: ClearNoOp(ColorAdjustType)\n  nameWithType: ImageAttributes.ClearNoOp(ColorAdjustType)\n  fullName: System.Drawing.Imaging.ImageAttributes.ClearNoOp(ColorAdjustType)\n- uid: System.Drawing.Imaging.ImageAttributes.ClearOutputChannel\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: ClearOutputChannel()\n  nameWithType: ImageAttributes.ClearOutputChannel()\n  fullName: System.Drawing.Imaging.ImageAttributes.ClearOutputChannel()\n- uid: System.Drawing.Imaging.ImageAttributes.ClearOutputChannel(System.Drawing.Imaging.ColorAdjustType)\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: ClearOutputChannel(ColorAdjustType)\n  nameWithType: ImageAttributes.ClearOutputChannel(ColorAdjustType)\n  fullName: System.Drawing.Imaging.ImageAttributes.ClearOutputChannel(ColorAdjustType)\n- uid: System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: ClearOutputChannelColorProfile()\n  nameWithType: ImageAttributes.ClearOutputChannelColorProfile()\n  fullName: System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile()\n- uid: System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile(System.Drawing.Imaging.ColorAdjustType)\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: ClearOutputChannelColorProfile(ColorAdjustType)\n  nameWithType: ImageAttributes.ClearOutputChannelColorProfile(ColorAdjustType)\n  fullName: System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile(ColorAdjustType)\n- uid: System.Drawing.Imaging.ImageAttributes.ClearRemapTable\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: ClearRemapTable()\n  nameWithType: ImageAttributes.ClearRemapTable()\n  fullName: System.Drawing.Imaging.ImageAttributes.ClearRemapTable()\n- uid: System.Drawing.Imaging.ImageAttributes.ClearRemapTable(System.Drawing.Imaging.ColorAdjustType)\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: ClearRemapTable(ColorAdjustType)\n  nameWithType: ImageAttributes.ClearRemapTable(ColorAdjustType)\n  fullName: System.Drawing.Imaging.ImageAttributes.ClearRemapTable(ColorAdjustType)\n- uid: System.Drawing.Imaging.ImageAttributes.ClearThreshold\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: ClearThreshold()\n  nameWithType: ImageAttributes.ClearThreshold()\n  fullName: System.Drawing.Imaging.ImageAttributes.ClearThreshold()\n- uid: System.Drawing.Imaging.ImageAttributes.ClearThreshold(System.Drawing.Imaging.ColorAdjustType)\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: ClearThreshold(ColorAdjustType)\n  nameWithType: ImageAttributes.ClearThreshold(ColorAdjustType)\n  fullName: System.Drawing.Imaging.ImageAttributes.ClearThreshold(ColorAdjustType)\n- uid: System.Drawing.Imaging.ImageAttributes.Clone\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: Clone()\n  nameWithType: ImageAttributes.Clone()\n  fullName: System.Drawing.Imaging.ImageAttributes.Clone()\n- uid: System.Drawing.Imaging.ImageAttributes.Dispose\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: Dispose()\n  nameWithType: ImageAttributes.Dispose()\n  fullName: System.Drawing.Imaging.ImageAttributes.Dispose()\n- uid: System.Drawing.Imaging.ImageAttributes.Finalize\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: Finalize()\n  nameWithType: ImageAttributes.Finalize()\n  fullName: System.Drawing.Imaging.ImageAttributes.Finalize()\n- uid: System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette(System.Drawing.Imaging.ColorPalette,System.Drawing.Imaging.ColorAdjustType)\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: GetAdjustedPalette(ColorPalette,ColorAdjustType)\n  nameWithType: ImageAttributes.GetAdjustedPalette(ColorPalette,ColorAdjustType)\n  fullName: System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette(ColorPalette,ColorAdjustType)\n- uid: System.Drawing.Imaging.ColorPalette\n  parent: System.Drawing.Imaging\n  isExternal: false\n  name: ColorPalette\n  nameWithType: ColorPalette\n  fullName: System.Drawing.Imaging.ColorPalette\n- uid: System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable(System.Drawing.Imaging.ColorMap[])\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: SetBrushRemapTable(ColorMap[])\n  nameWithType: ImageAttributes.SetBrushRemapTable(ColorMap[])\n  fullName: System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable(ColorMap[])\n- uid: System.Drawing.Imaging.ColorMap[]\n  parent: System.Drawing.Imaging\n  isExternal: false\n  name: ColorMap\n  nameWithType: ColorMap\n  fullName: System.Drawing.Imaging.ColorMap[]\n  spec.csharp:\n  - uid: System.Drawing.Imaging.ColorMap\n    name: ColorMap\n    nameWithType: ColorMap\n    fullName: ColorMap[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color)\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: SetColorKey(Color,Color)\n  nameWithType: ImageAttributes.SetColorKey(Color,Color)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetColorKey(Color,Color)\n- uid: System.Drawing.Color\n  parent: System.Drawing\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Drawing.Color\n- uid: System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color,System.Drawing.Imaging.ColorAdjustType)\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: SetColorKey(Color,Color,ColorAdjustType)\n  nameWithType: ImageAttributes.SetColorKey(Color,Color,ColorAdjustType)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetColorKey(Color,Color,ColorAdjustType)\n- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix)\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: SetColorMatrices(ColorMatrix,ColorMatrix)\n  nameWithType: ImageAttributes.SetColorMatrices(ColorMatrix,ColorMatrix)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetColorMatrices(ColorMatrix,ColorMatrix)\n- uid: System.Drawing.Imaging.ColorMatrix\n  parent: System.Drawing.Imaging\n  isExternal: false\n  name: ColorMatrix\n  nameWithType: ColorMatrix\n  fullName: System.Drawing.Imaging.ColorMatrix\n- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: SetColorMatrices(ColorMatrix,ColorMatrix,ColorMatrixFlag)\n  nameWithType: ImageAttributes.SetColorMatrices(ColorMatrix,ColorMatrix,ColorMatrixFlag)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetColorMatrices(ColorMatrix,ColorMatrix,ColorMatrixFlag)\n- uid: System.Drawing.Imaging.ColorMatrixFlag\n  parent: System.Drawing.Imaging\n  isExternal: false\n  name: ColorMatrixFlag\n  nameWithType: ColorMatrixFlag\n  fullName: System.Drawing.Imaging.ColorMatrixFlag\n- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: SetColorMatrices(ColorMatrix,ColorMatrix,ColorMatrixFlag,ColorAdjustType)\n  nameWithType: ImageAttributes.SetColorMatrices(ColorMatrix,ColorMatrix,ColorMatrixFlag,ColorAdjustType)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetColorMatrices(ColorMatrix,ColorMatrix,ColorMatrixFlag,ColorAdjustType)\n- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix)\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: SetColorMatrix(ColorMatrix)\n  nameWithType: ImageAttributes.SetColorMatrix(ColorMatrix)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetColorMatrix(ColorMatrix)\n- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: SetColorMatrix(ColorMatrix,ColorMatrixFlag)\n  nameWithType: ImageAttributes.SetColorMatrix(ColorMatrix,ColorMatrixFlag)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetColorMatrix(ColorMatrix,ColorMatrixFlag)\n- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: SetColorMatrix(ColorMatrix,ColorMatrixFlag,ColorAdjustType)\n  nameWithType: ImageAttributes.SetColorMatrix(ColorMatrix,ColorMatrixFlag,ColorAdjustType)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetColorMatrix(ColorMatrix,ColorMatrixFlag,ColorAdjustType)\n- uid: System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single)\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: SetGamma(Single)\n  nameWithType: ImageAttributes.SetGamma(Single)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetGamma(Single)\n- uid: System.Single\n  parent: System\n  isExternal: true\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single,System.Drawing.Imaging.ColorAdjustType)\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: SetGamma(Single,ColorAdjustType)\n  nameWithType: ImageAttributes.SetGamma(Single,ColorAdjustType)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetGamma(Single,ColorAdjustType)\n- uid: System.Drawing.Imaging.ImageAttributes.SetNoOp\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: SetNoOp()\n  nameWithType: ImageAttributes.SetNoOp()\n  fullName: System.Drawing.Imaging.ImageAttributes.SetNoOp()\n- uid: System.Drawing.Imaging.ImageAttributes.SetNoOp(System.Drawing.Imaging.ColorAdjustType)\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: SetNoOp(ColorAdjustType)\n  nameWithType: ImageAttributes.SetNoOp(ColorAdjustType)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetNoOp(ColorAdjustType)\n- uid: System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag)\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: SetOutputChannel(ColorChannelFlag)\n  nameWithType: ImageAttributes.SetOutputChannel(ColorChannelFlag)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetOutputChannel(ColorChannelFlag)\n- uid: System.Drawing.Imaging.ColorChannelFlag\n  parent: System.Drawing.Imaging\n  isExternal: false\n  name: ColorChannelFlag\n  nameWithType: ColorChannelFlag\n  fullName: System.Drawing.Imaging.ColorChannelFlag\n- uid: System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag,System.Drawing.Imaging.ColorAdjustType)\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: SetOutputChannel(ColorChannelFlag,ColorAdjustType)\n  nameWithType: ImageAttributes.SetOutputChannel(ColorChannelFlag,ColorAdjustType)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetOutputChannel(ColorChannelFlag,ColorAdjustType)\n- uid: System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String)\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: SetOutputChannelColorProfile(String)\n  nameWithType: ImageAttributes.SetOutputChannelColorProfile(String)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String,System.Drawing.Imaging.ColorAdjustType)\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: SetOutputChannelColorProfile(String,ColorAdjustType)\n  nameWithType: ImageAttributes.SetOutputChannelColorProfile(String,ColorAdjustType)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(String,ColorAdjustType)\n- uid: System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[])\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: SetRemapTable(ColorMap[])\n  nameWithType: ImageAttributes.SetRemapTable(ColorMap[])\n  fullName: System.Drawing.Imaging.ImageAttributes.SetRemapTable(ColorMap[])\n- uid: System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[],System.Drawing.Imaging.ColorAdjustType)\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: SetRemapTable(ColorMap[],ColorAdjustType)\n  nameWithType: ImageAttributes.SetRemapTable(ColorMap[],ColorAdjustType)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetRemapTable(ColorMap[],ColorAdjustType)\n- uid: System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single)\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: SetThreshold(Single)\n  nameWithType: ImageAttributes.SetThreshold(Single)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetThreshold(Single)\n- uid: System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single,System.Drawing.Imaging.ColorAdjustType)\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: SetThreshold(Single,ColorAdjustType)\n  nameWithType: ImageAttributes.SetThreshold(Single,ColorAdjustType)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetThreshold(Single,ColorAdjustType)\n- uid: System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode)\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: SetWrapMode(WrapMode)\n  nameWithType: ImageAttributes.SetWrapMode(WrapMode)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetWrapMode(WrapMode)\n- uid: System.Drawing.Drawing2D.WrapMode\n  parent: System.Drawing.Drawing2D\n  isExternal: false\n  name: WrapMode\n  nameWithType: WrapMode\n  fullName: System.Drawing.Drawing2D.WrapMode\n- uid: System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color)\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: SetWrapMode(WrapMode,Color)\n  nameWithType: ImageAttributes.SetWrapMode(WrapMode,Color)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetWrapMode(WrapMode,Color)\n- uid: System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color,System.Boolean)\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: SetWrapMode(WrapMode,Color,Boolean)\n  nameWithType: ImageAttributes.SetWrapMode(WrapMode,Color,Boolean)\n  fullName: System.Drawing.Imaging.ImageAttributes.SetWrapMode(WrapMode,Color,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Drawing.Imaging.ImageAttributes.#ctor*\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: ImageAttributes\n  nameWithType: ImageAttributes.ImageAttributes\n- uid: System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable*\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: ClearBrushRemapTable\n  nameWithType: ImageAttributes.ClearBrushRemapTable\n- uid: System.Drawing.Imaging.ImageAttributes.ClearColorKey*\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: ClearColorKey\n  nameWithType: ImageAttributes.ClearColorKey\n- uid: System.Drawing.Imaging.ImageAttributes.ClearColorMatrix*\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: ClearColorMatrix\n  nameWithType: ImageAttributes.ClearColorMatrix\n- uid: System.Drawing.Imaging.ImageAttributes.ClearGamma*\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: ClearGamma\n  nameWithType: ImageAttributes.ClearGamma\n- uid: System.Drawing.Imaging.ImageAttributes.ClearNoOp*\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: ClearNoOp\n  nameWithType: ImageAttributes.ClearNoOp\n- uid: System.Drawing.Imaging.ImageAttributes.ClearOutputChannel*\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: ClearOutputChannel\n  nameWithType: ImageAttributes.ClearOutputChannel\n- uid: System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile*\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: ClearOutputChannelColorProfile\n  nameWithType: ImageAttributes.ClearOutputChannelColorProfile\n- uid: System.Drawing.Imaging.ImageAttributes.ClearRemapTable*\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: ClearRemapTable\n  nameWithType: ImageAttributes.ClearRemapTable\n- uid: System.Drawing.Imaging.ImageAttributes.ClearThreshold*\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: ClearThreshold\n  nameWithType: ImageAttributes.ClearThreshold\n- uid: System.Drawing.Imaging.ImageAttributes.Clone*\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: Clone\n  nameWithType: ImageAttributes.Clone\n- uid: System.Drawing.Imaging.ImageAttributes.Dispose*\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: Dispose\n  nameWithType: ImageAttributes.Dispose\n- uid: System.Drawing.Imaging.ImageAttributes.Finalize*\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: Finalize\n  nameWithType: ImageAttributes.Finalize\n- uid: System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette*\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: GetAdjustedPalette\n  nameWithType: ImageAttributes.GetAdjustedPalette\n- uid: System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable*\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: SetBrushRemapTable\n  nameWithType: ImageAttributes.SetBrushRemapTable\n- uid: System.Drawing.Imaging.ImageAttributes.SetColorKey*\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: SetColorKey\n  nameWithType: ImageAttributes.SetColorKey\n- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrices*\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: SetColorMatrices\n  nameWithType: ImageAttributes.SetColorMatrices\n- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrix*\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: SetColorMatrix\n  nameWithType: ImageAttributes.SetColorMatrix\n- uid: System.Drawing.Imaging.ImageAttributes.SetGamma*\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: SetGamma\n  nameWithType: ImageAttributes.SetGamma\n- uid: System.Drawing.Imaging.ImageAttributes.SetNoOp*\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: SetNoOp\n  nameWithType: ImageAttributes.SetNoOp\n- uid: System.Drawing.Imaging.ImageAttributes.SetOutputChannel*\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: SetOutputChannel\n  nameWithType: ImageAttributes.SetOutputChannel\n- uid: System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile*\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: SetOutputChannelColorProfile\n  nameWithType: ImageAttributes.SetOutputChannelColorProfile\n- uid: System.Drawing.Imaging.ImageAttributes.SetRemapTable*\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: SetRemapTable\n  nameWithType: ImageAttributes.SetRemapTable\n- uid: System.Drawing.Imaging.ImageAttributes.SetThreshold*\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: SetThreshold\n  nameWithType: ImageAttributes.SetThreshold\n- uid: System.Drawing.Imaging.ImageAttributes.SetWrapMode*\n  parent: System.Drawing.Imaging.ImageAttributes\n  isExternal: false\n  name: SetWrapMode\n  nameWithType: ImageAttributes.SetWrapMode\n"}