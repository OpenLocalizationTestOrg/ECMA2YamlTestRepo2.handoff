{"nodes":[{"pos":[2489,2584],"content":"Represents the base class for all <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Button\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> controls.","needQuote":true,"needEscape":true,"source":"Represents the base class for all <xref href=\"System.Windows.Controls.Button\"></xref> controls."},{"pos":[2597,3999],"content":"Handle the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event to respond when the user clicks a ButtonBase. The user can raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event by using an <xref:System.Windows.Controls.AccessText> or by pressing ENTER or the SPACEBAR when the control has focus.  When the user presses the SPACEBAR, the control sets <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> to `true` and captures the mouse.  As a result, the control will raise mouse events such as <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>. Note that using the <xref:System.Windows.Controls.AccessText> or ENTER does not change <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> or capture the mouse, but it does raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.       The ButtonBase sets the <xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A> attached property to `true`.       The ButtonBase sets the <xref:System.Windows.UIElement.IsInputMethodEnabled%2A> property to `false`.       A ButtonBase is a <xref:System.Windows.Controls.ContentControl>, which means that it can contain a single object of any type (such as a string, an image, or a panel). For more information, see the <xref:System.Windows.Controls.ContentControl> class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Handle the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt; event to respond when the user clicks a ButtonBase.","pos":[0,121],"source":"Handle the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event to respond when the user clicks a ButtonBase."},{"content":"The user can raise the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt; event by using an &lt;xref:System.Windows.Controls.AccessText&gt; or by pressing ENTER or the SPACEBAR when the control has focus.","pos":[122,328],"source":" The user can raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event by using an <xref:System.Windows.Controls.AccessText> or by pressing ENTER or the SPACEBAR when the control has focus."},{"content":"When the user presses the SPACEBAR, the control sets &lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt; to <ph id=\"ph1\">`true`</ph> and captures the mouse.","pos":[330,482],"source":"  When the user presses the SPACEBAR, the control sets <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> to `true` and captures the mouse."},{"content":"As a result, the control will raise mouse events such as &lt;xref:System.Windows.UIElement.MouseEnter&gt; and &lt;xref:System.Windows.UIElement.IsMouseDirectlyOverChanged&gt;.","pos":[484,647],"source":"  As a result, the control will raise mouse events such as <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>."},{"content":"Note that using the &lt;xref:System.Windows.Controls.AccessText&gt; or ENTER does not change &lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt; or capture the mouse, but it does raise the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt; event.","pos":[648,910],"source":" Note that using the <xref:System.Windows.Controls.AccessText> or ENTER does not change <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> or capture the mouse, but it does raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event."},{"content":"The ButtonBase sets the &lt;xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A&gt; attached property to <ph id=\"ph1\">`true`</ph>.","pos":[917,1033],"source":"       The ButtonBase sets the <xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A> attached property to `true`."},{"content":"The ButtonBase sets the &lt;xref:System.Windows.UIElement.IsInputMethodEnabled%2A&gt; property to <ph id=\"ph1\">`false`</ph>.","pos":[1040,1140],"source":"       The ButtonBase sets the <xref:System.Windows.UIElement.IsInputMethodEnabled%2A> property to `false`."},{"content":"A ButtonBase is a &lt;xref:System.Windows.Controls.ContentControl&gt;, which means that it can contain a single object of any type (such as a string, an image, or a panel).","pos":[1147,1313],"source":"       A ButtonBase is a <xref:System.Windows.Controls.ContentControl>, which means that it can contain a single object of any type (such as a string, an image, or a panel)."},{"content":"For more information, see the &lt;xref:System.Windows.Controls.ContentControl&gt; class.","pos":[1314,1396],"source":" For more information, see the <xref:System.Windows.Controls.ContentControl> class."}]},{"pos":[42777,42884],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Primitives.ButtonBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Controls.Primitives.ButtonBase\"></xref> class."},{"pos":[43428,43505],"content":"Occurs when a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Button\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is clicked.","needQuote":true,"needEscape":true,"source":"Occurs when a <xref href=\"System.Windows.Controls.Button\"></xref> is clicked."},{"pos":[43518,45201],"content":"The user can raise the Click event by using an <xref:System.Windows.Controls.AccessText> or by pressing ENTER or the SPACEBAR when the control has focus.  When the user presses the SPACEBAR, the control sets <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> to `true` and captures the mouse.  As a result, the control will raise mouse events such as <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>. Note that using the <xref:System.Windows.Controls.AccessText> or ENTER does not change <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> or capture the mouse, but it does raise the Click event.       The <xref:System.Windows.Controls.Primitives.ButtonBase> marks the <xref:System.Windows.UIElement.MouseLeftButtonDown> event as handled in the <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> method and raises the Click event. Hence, the <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> event will never occur for a control that inherits from <xref:System.Windows.Controls.Primitives.ButtonBase>. Instead, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.      <a name=\"routedEventInfo_Click\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.ButtonBase.ClickEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.RoutedEventHandler>|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The user can raise the Click event by using an &lt;xref:System.Windows.Controls.AccessText&gt; or by pressing ENTER or the SPACEBAR when the control has focus.","pos":[0,153],"source":"The user can raise the Click event by using an <xref:System.Windows.Controls.AccessText> or by pressing ENTER or the SPACEBAR when the control has focus."},{"content":"When the user presses the SPACEBAR, the control sets &lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt; to <ph id=\"ph1\">`true`</ph> and captures the mouse.","pos":[155,307],"source":"  When the user presses the SPACEBAR, the control sets <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> to `true` and captures the mouse."},{"content":"As a result, the control will raise mouse events such as &lt;xref:System.Windows.UIElement.MouseEnter&gt; and &lt;xref:System.Windows.UIElement.IsMouseDirectlyOverChanged&gt;.","pos":[309,472],"source":"  As a result, the control will raise mouse events such as <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>."},{"content":"Note that using the &lt;xref:System.Windows.Controls.AccessText&gt; or ENTER does not change &lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt; or capture the mouse, but it does raise the Click event.","pos":[473,682],"source":" Note that using the <xref:System.Windows.Controls.AccessText> or ENTER does not change <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> or capture the mouse, but it does raise the Click event."},{"content":"The &lt;xref:System.Windows.Controls.Primitives.ButtonBase&gt; marks the &lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt; event as handled in the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A&gt; method and raises the Click event.","pos":[689,944],"source":"       The <xref:System.Windows.Controls.Primitives.ButtonBase> marks the <xref:System.Windows.UIElement.MouseLeftButtonDown> event as handled in the <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> method and raises the Click event."},{"content":"Hence, the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A&gt; event will never occur for a control that inherits from &lt;xref:System.Windows.Controls.Primitives.ButtonBase&gt;.","pos":[945,1143],"source":" Hence, the <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> event will never occur for a control that inherits from <xref:System.Windows.Controls.Primitives.ButtonBase>."},{"content":"Instead, attach an event handler to the &lt;xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown&gt; event, or call &lt;xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt; with <ph id=\"ph1\">`handledEventsToo`</ph> set to <ph id=\"ph2\">`true`</ph>.","pos":[1144,1411],"source":" Instead, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_Click\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.RoutedEventHandler&gt;|","pos":[1417,1670],"source":"<a name=\"routedEventInfo_Click\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.ButtonBase.ClickEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.RoutedEventHandler>|"}]},{"pos":[46127,46139],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[46576,46677],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Primitives.ButtonBase.Click\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.Controls.Primitives.ButtonBase.Click\"></xref> routed event."},{"pos":[46689,46741],"content":"This event corresponds to a left mouse button click.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This event corresponds to a left mouse button click.","pos":[0,52]}]},{"pos":[46897,46909],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[47344,47452],"content":"Gets or sets when the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Primitives.ButtonBase.Click\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event occurs.","needQuote":true,"needEscape":true,"source":"Gets or sets when the <xref href=\"System.Windows.Controls.Primitives.ButtonBase.Click\"></xref> event occurs."},{"pos":[47465,47710],"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_ClickMode\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","needQuote":false,"needEscape":true,"extradata":"MT","source":"<a name=\"dependencyPropertyInfo_ClickMode\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty>|   |Metadata properties set to `true`|None|"},{"pos":[47877,48049],"content":"When the <xref href=\"System.Windows.Controls.Primitives.ButtonBase.Click\"></xref> event occurs. The default value is <xref href=\"System.Windows.Controls.ClickMode\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"When the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Primitives.ButtonBase.Click\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event occurs.","pos":[0,95],"source":"When the <xref href=\"System.Windows.Controls.Primitives.ButtonBase.Click\"></xref> event occurs."},{"content":"The default value is <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.ClickMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[96,172],"source":" The default value is <xref href=\"System.Windows.Controls.ClickMode\"></xref>."}]},{"pos":[48590,48689],"content":"Identifies the <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode*&gt; dependency property.","pos":[0,99],"source":"Identifies the <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode*> dependency property."}]},{"pos":[48866,48878],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[49303,49366],"content":"Gets or sets the command to invoke when this button is pressed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the command to invoke when this button is pressed.","pos":[0,63]}]},{"pos":[49379,50383],"content":"This property is used to associate a command with a particular button instance.       In [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)], this property is most often set to be a static command value from one of the existing command libraries, such as <xref:System.Windows.Input.ApplicationCommands> or <xref:System.Windows.Input.NavigationCommands>. For details, see [Commanding Overview](~/add/includes/ajax-current-ext-md.md) or <xref:System.Windows.Input.ICommand>.      <a name=\"xamlAttributeUsage_Command\"></a>    ## XAML Attribute Usage      ```   <object Command=\"commandName\"/>   ```      <a name=\"xamlValues_Command\"></a>    ## XAML Values    *commandName*    The command to invoke when this button is pressed.      <a name=\"dependencyPropertyInfo_Command\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.ButtonBase.CommandProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property is used to associate a command with a particular button instance.","pos":[0,79]},{"content":"In <ph id=\"ph1\">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>, this property is most often set to be a static command value from one of the existing command libraries, such as &lt;xref:System.Windows.Input.ApplicationCommands&gt; or &lt;xref:System.Windows.Input.NavigationCommands&gt;.","pos":[86,365],"source":"       In [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)], this property is most often set to be a static command value from one of the existing command libraries, such as <xref:System.Windows.Input.ApplicationCommands> or <xref:System.Windows.Input.NavigationCommands>."},{"content":"For details, see <bpt id=\"p1\">[</bpt>Commanding Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> or &lt;xref:System.Windows.Input.ICommand&gt;.","pos":[366,484],"source":" For details, see [Commanding Overview](~/add/includes/ajax-current-ext-md.md) or <xref:System.Windows.Input.ICommand>."},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlAttributeUsage_Command\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id=\"ph1\">```   &lt;object Command=\"commandName\"/&gt;   ```</ph>      <bpt id=\"p2\">&lt;a name=\"xamlValues_Command\"&gt;</bpt><ept id=\"p2\">&lt;/a&gt;</ept>    ## XAML Values    <bpt id=\"p3\">*</bpt>commandName<ept id=\"p3\">*</ept>    The command to invoke when this button is pressed.","pos":[490,735],"source":"<a name=\"xamlAttributeUsage_Command\"></a>    ## XAML Attribute Usage      ```   <object Command=\"commandName\"/>   ```      <a name=\"xamlValues_Command\"></a>    ## XAML Values    *commandName*    The command to invoke when this button is pressed."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_Command\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Primitives.ButtonBase.CommandProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[741,974],"source":"<a name=\"dependencyPropertyInfo_Command\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.ButtonBase.CommandProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[50540,50671],"content":"A command to invoke when this button is pressed. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A command to invoke when this button is pressed.","pos":[0,48]},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[49,131],"source":" The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[51208,51321],"content":"Gets or sets the parameter to pass to the <xref:System.Windows.Controls.Primitives.ButtonBase.Command*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the parameter to pass to the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Command*&gt; property.","pos":[0,113],"source":"Gets or sets the parameter to pass to the <xref:System.Windows.Controls.Primitives.ButtonBase.Command*> property."}]},{"pos":[51334,53241],"content":"Most existing commands from the command libraries do not use a command parameter. Of the commands that do use a command parameter, most of these take a parameter with some primitive type value, such as an integer or a string. However, it is possible to create a custom command where that command expects a nonprimitive type as its command parameter. For a custom command case like this, setting CommandParameter in code might require a new or existing object instance. Setting CommandParameter in markup might require property element syntax, where the object element filling the property element syntax is a new element of the type expected by that command. Alternatively, setting in markup might require a reference through a markup extension to an existing object (typically these references are made with [Binding Markup Extension](~/add/includes/ajax-current-ext-md.md) or [StaticResource Markup Extension](~/add/includes/ajax-current-ext-md.md)).      <a name=\"xamlAttributeUsage_CommandParameter\"></a>    ## XAML Attribute Usage      ```   <object CommandParameter=\"commandParameter\" />   ```      <a name=\"xamlValues_CommandParameter\"></a>    ## XAML Values    *commandParameter*    A value of the same type as the particular command specified in the <xref:System.Windows.Controls.Primitives.ButtonBase.Command%2A> property expects. If you use an existing command library command, see that command library's documentation for [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] usage information, including which type of CommandParameter the command expects. If you use a custom command, see Remarks.      <a name=\"dependencyPropertyInfo_CommandParameter\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Most existing commands from the command libraries do not use a command parameter.","pos":[0,81]},{"content":"Of the commands that do use a command parameter, most of these take a parameter with some primitive type value, such as an integer or a string.","pos":[82,225]},{"content":"However, it is possible to create a custom command where that command expects a nonprimitive type as its command parameter.","pos":[226,349]},{"content":"For a custom command case like this, setting CommandParameter in code might require a new or existing object instance.","pos":[350,468]},{"content":"Setting CommandParameter in markup might require property element syntax, where the object element filling the property element syntax is a new element of the type expected by that command.","pos":[469,658]},{"content":"Alternatively, setting in markup might require a reference through a markup extension to an existing object (typically these references are made with <bpt id=\"p1\">[</bpt>Binding Markup Extension<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> or <bpt id=\"p2\">[</bpt>StaticResource Markup Extension<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>).","pos":[659,952],"source":" Alternatively, setting in markup might require a reference through a markup extension to an existing object (typically these references are made with [Binding Markup Extension](~/add/includes/ajax-current-ext-md.md) or [StaticResource Markup Extension](~/add/includes/ajax-current-ext-md.md))."},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlAttributeUsage_CommandParameter\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id=\"ph1\">```   &lt;object CommandParameter=\"commandParameter\" /&gt;   ```</ph>      <bpt id=\"p2\">&lt;a name=\"xamlValues_CommandParameter\"&gt;</bpt><ept id=\"p2\">&lt;/a&gt;</ept>    ## XAML Values    <bpt id=\"p3\">*</bpt>commandParameter<ept id=\"p3\">*</ept>    A value of the same type as the particular command specified in the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Command%2A&gt; property expects.","pos":[958,1340],"source":"<a name=\"xamlAttributeUsage_CommandParameter\"></a>    ## XAML Attribute Usage      ```   <object CommandParameter=\"commandParameter\" />   ```      <a name=\"xamlValues_CommandParameter\"></a>    ## XAML Values    *commandParameter*    A value of the same type as the particular command specified in the <xref:System.Windows.Controls.Primitives.ButtonBase.Command%2A> property expects."},{"content":"If you use an existing command library command, see that command library's documentation for <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> usage information, including which type of CommandParameter the command expects.","pos":[1341,1580],"source":" If you use an existing command library command, see that command library's documentation for [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] usage information, including which type of CommandParameter the command expects."},{"content":"If you use a custom command, see Remarks.","pos":[1581,1622]},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_CommandParameter\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[1628,1879],"source":"<a name=\"dependencyPropertyInfo_CommandParameter\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[53368,53464],"content":"Parameter to pass to the <xref:System.Windows.Controls.Primitives.ButtonBase.Command*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter to pass to the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Command*&gt; property.","pos":[0,96],"source":"Parameter to pass to the <xref:System.Windows.Controls.Primitives.ButtonBase.Command*> property."}]},{"pos":[54047,54153],"content":"Identifies the <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter*&gt; dependency property.","pos":[0,106],"source":"Identifies the <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter*> dependency property."}]},{"pos":[54337,54349],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[54811,54915],"content":"Identifies the routed <xref:System.Windows.Controls.Primitives.ButtonBase.Command*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the routed &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Command*&gt; dependency property.","pos":[0,104],"source":"Identifies the routed <xref:System.Windows.Controls.Primitives.ButtonBase.Command*> dependency property."}]},{"pos":[55090,55102],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[55557,55622],"content":"Gets or sets the element on which to raise the specified command.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the element on which to raise the specified command.","pos":[0,65]}]},{"pos":[55635,56431],"content":"The CommandTarget property cannot be used to define a <xref:System.Windows.UIElement>. The CommandTarget property provides a reference to an element that is already defined somewhere in your application.      <a name=\"xamlAttributeUsage_Target\"></a>    ## XAML Attribute Usage      ```   <ButtonBase CommandTarget=\"{Binding ElementName= elementName }\"/>   ```      <a name=\"xamlValues_CommandTarget\"></a>    ## XAML Values    *elementName*    The name of <xref:System.Windows.IInputElement> that receives the command.      <a name=\"dependencyPropertyInfo_CommandTarget\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.ButtonBase.CommandTargetProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The CommandTarget property cannot be used to define a &lt;xref:System.Windows.UIElement&gt;.","pos":[0,86],"source":"The CommandTarget property cannot be used to define a <xref:System.Windows.UIElement>."},{"content":"The CommandTarget property provides a reference to an element that is already defined somewhere in your application.","pos":[87,203]},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlAttributeUsage_Target\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id=\"ph1\">```   &lt;ButtonBase CommandTarget=\"{Binding ElementName= elementName }\"/&gt;   ```</ph>      <bpt id=\"p2\">&lt;a name=\"xamlValues_CommandTarget\"&gt;</bpt><ept id=\"p2\">&lt;/a&gt;</ept>    ## XAML Values    <bpt id=\"p3\">*</bpt>elementName<ept id=\"p3\">*</ept>    The name of &lt;xref:System.Windows.IInputElement&gt; that receives the command.","pos":[209,517],"source":"<a name=\"xamlAttributeUsage_Target\"></a>    ## XAML Attribute Usage      ```   <ButtonBase CommandTarget=\"{Binding ElementName= elementName }\"/>   ```      <a name=\"xamlValues_CommandTarget\"></a>    ## XAML Values    *elementName*    The name of <xref:System.Windows.IInputElement> that receives the command."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_CommandTarget\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Primitives.ButtonBase.CommandTargetProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[523,768],"source":"<a name=\"dependencyPropertyInfo_CommandTarget\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.ButtonBase.CommandTargetProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[56592,56628],"content":"Element on which to raise a command.","needQuote":true,"needEscape":true,"nodes":[{"content":"Element on which to raise a command.","pos":[0,36]}]},{"pos":[57193,57296],"content":"Identifies the <xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget*&gt; dependency property.","pos":[0,103],"source":"Identifies the <xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget*> dependency property."}]},{"pos":[57477,57489],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[57944,58023],"content":"Gets the value of the <xref:System.Windows.ContentElement.IsEnabled*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the &lt;xref:System.Windows.ContentElement.IsEnabled*&gt; property.","pos":[0,79],"source":"Gets the value of the <xref:System.Windows.ContentElement.IsEnabled*> property."}]},{"pos":[58035,58125],"content":"If you choose to override this implementation, make certain that you call the base method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If you choose to override this implementation, make certain that you call the base method.","pos":[0,90]}]},{"pos":[58254,58416],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the control is enabled; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the control is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[58924,59052],"content":"Gets a value that indicates whether a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Primitives.ButtonBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is currently activated.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether a <xref href=\"System.Windows.Controls.Primitives.ButtonBase\"></xref> is currently activated."},{"pos":[59065,60147],"content":"IsPressed is the state of a button that indicates the left mouse button or SPACEBAR is pressed over the button. When IsPressed is `true`, the control captures the mouse.  As a result, the control will raise mouse events such as <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>. Note that using the <xref:System.Windows.Controls.AccessText> or ENTER does not change IsPressed or capture the mouse, but is does raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.       Starting with the .NET Framework version 3.0 Service Pack 1, IsPressed has a protected setter. To use this functionality, your application should target the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"dependencyPropertyInfo_IsPressed\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"IsPressed is the state of a button that indicates the left mouse button or SPACEBAR is pressed over the button.","pos":[0,111]},{"content":"When IsPressed is <ph id=\"ph1\">`true`</ph>, the control captures the mouse.","pos":[112,169],"source":" When IsPressed is `true`, the control captures the mouse."},{"content":"As a result, the control will raise mouse events such as &lt;xref:System.Windows.UIElement.MouseEnter&gt; and &lt;xref:System.Windows.UIElement.IsMouseDirectlyOverChanged&gt;.","pos":[171,334],"source":"  As a result, the control will raise mouse events such as <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>."},{"content":"Note that using the &lt;xref:System.Windows.Controls.AccessText&gt; or ENTER does not change IsPressed or capture the mouse, but is does raise the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt; event.","pos":[335,541],"source":" Note that using the <xref:System.Windows.Controls.AccessText> or ENTER does not change IsPressed or capture the mouse, but is does raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event."},{"content":"Starting with the .NET Framework version 3.0 Service Pack 1, IsPressed has a protected setter.","pos":[548,642]},{"content":"To use this functionality, your application should target the .NET Framework version 3.5.","pos":[643,732]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[734,827],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_IsPressed\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[833,1070],"source":"<a name=\"dependencyPropertyInfo_IsPressed\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[60456,60757],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Controls.Primitives.ButtonBase\"></xref> is activated; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.Primitives.ButtonBase\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is activated; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,222],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Controls.Primitives.ButtonBase\"></xref> is activated; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[223,301],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[61298,61397],"content":"Identifies the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed*&gt; dependency property.","pos":[0,99],"source":"Identifies the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed*> dependency property."}]},{"pos":[61574,61586],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[62171,62269],"content":"Responds when the <xref:System.Windows.Controls.AccessText.AccessKey*> for this control is called.","needQuote":true,"needEscape":true,"nodes":[{"content":"Responds when the &lt;xref:System.Windows.Controls.AccessText.AccessKey*&gt; for this control is called.","pos":[0,98],"source":"Responds when the <xref:System.Windows.Controls.AccessText.AccessKey*> for this control is called."}]},{"pos":[62281,62531],"content":"If <xref:System.Windows.Input.AccessKeyEventArgs.IsMultiple%2A> is `true`, this method calls the base implementation, which gives this control focus.  Otherwise, this method raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If &lt;xref:System.Windows.Input.AccessKeyEventArgs.IsMultiple%2A&gt; is <ph id=\"ph1\">`true`</ph>, this method calls the base implementation, which gives this control focus.","pos":[0,149],"source":"If <xref:System.Windows.Input.AccessKeyEventArgs.IsMultiple%2A> is `true`, this method calls the base implementation, which gives this control focus."},{"content":"Otherwise, this method raises the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt; event.","pos":[151,250],"source":"  Otherwise, this method raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event."}]},{"pos":[62735,62826],"content":"The event data for the <xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed> event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event data for the &lt;xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed&gt; event.","pos":[0,91],"source":"The event data for the <xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed> event."}]},{"pos":[63326,63423],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Primitives.ButtonBase.Click\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Controls.Primitives.ButtonBase.Click\"></xref> routed event."},{"pos":[63435,63671],"content":"The control raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event by calling <xref:System.Windows.UIElement.RaiseEvent%2A>. For more information, see [Routed Events Overview](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The control raises the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt; event by calling &lt;xref:System.Windows.UIElement.RaiseEvent%2A&gt;.","pos":[0,145],"source":"The control raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event by calling <xref:System.Windows.UIElement.RaiseEvent%2A>."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Routed Events Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[146,236],"source":" For more information, see [Routed Events Overview](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[64503,64600],"content":"Called when the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed*> property changes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Called when the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed*&gt; property changes.","pos":[0,97],"source":"Called when the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed*> property changes."}]},{"pos":[64830,64914],"content":"The data for <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The data for <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref>."},{"pos":[65537,65705],"content":"Provides class handling for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement.KeyDown\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event that occurs when the user presses a key while this control has focus.","needQuote":true,"needEscape":true,"source":"Provides class handling for the <xref href=\"System.Windows.UIElement.KeyDown\"></xref> routed event that occurs when the user presses a key while this control has focus."},{"pos":[65718,66449],"content":"This implementation marks the <xref:System.Windows.UIElement.KeyDown> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode> and one of the following cases are true:      -   The user presses the SPACEBAR.      -   The user presses ENTER and <xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A> is `true` for this control.       In all other cases, this implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.KeyDown> event data.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This implementation marks the &lt;xref:System.Windows.UIElement.KeyDown&gt; event as handled by setting the &lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt; property of the event data to <ph id=\"ph1\">`true`</ph> when &lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt; is not set to &lt;xref:System.Windows.Controls.ClickMode&gt; and one of the following cases are true:      -   The user presses the SPACEBAR.","pos":[0,394],"source":"This implementation marks the <xref:System.Windows.UIElement.KeyDown> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode> and one of the following cases are true:      -   The user presses the SPACEBAR."},{"content":"-   The user presses ENTER and &lt;xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A&gt; is <ph id=\"ph1\">`true`</ph> for this control.","pos":[400,522],"source":"      -   The user presses ENTER and <xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A> is `true` for this control."},{"content":"In all other cases, this implementation does not change the handled state (the &lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt; property) of the &lt;xref:System.Windows.UIElement.KeyDown&gt; event data.","pos":[529,725],"source":"       In all other cases, this implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.KeyDown> event data."}]},{"pos":[66640,66655],"content":"The event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event data.","pos":[0,15]}]},{"pos":[67259,67426],"content":"Provides class handling for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement.KeyUp\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event that occurs when the user releases a key while this control has focus.","needQuote":true,"needEscape":true,"source":"Provides class handling for the <xref href=\"System.Windows.UIElement.KeyUp\"></xref> routed event that occurs when the user releases a key while this control has focus."},{"pos":[67438,67846],"content":"This implementation marks the <xref:System.Windows.UIElement.KeyUp> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when the user releases the SPACEBAR. Otherwise, this implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.KeyUp> event data.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This implementation marks the &lt;xref:System.Windows.UIElement.KeyUp&gt; event as handled by setting the &lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt; property of the event data to <ph id=\"ph1\">`true`</ph> when the user releases the SPACEBAR.","pos":[0,222],"source":"This implementation marks the <xref:System.Windows.UIElement.KeyUp> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when the user releases the SPACEBAR."},{"content":"Otherwise, this implementation does not change the handled state (the &lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt; property) of the &lt;xref:System.Windows.UIElement.KeyUp&gt; event data.","pos":[223,408],"source":" Otherwise, this implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.KeyUp> event data."}]},{"pos":[68034,68115],"content":"The event data for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement.KeyUp\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"The event data for the <xref href=\"System.Windows.UIElement.KeyUp\"></xref> event."},{"pos":[68862,68906],"content":"Called when an element loses keyboard focus.","needQuote":true,"needEscape":true,"nodes":[{"content":"Called when an element loses keyboard focus.","pos":[0,44]}]},{"pos":[69140,69237],"content":"The event data for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.IInputElement.LostKeyboardFocus\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"The event data for the <xref href=\"System.Windows.IInputElement.LostKeyboardFocus\"></xref> event."},{"pos":[69916,70098],"content":"Provides class handling for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement.LostMouseCapture\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event that occurs when this control is no longer receiving mouse event messages.","needQuote":true,"needEscape":true,"source":"Provides class handling for the <xref href=\"System.Windows.UIElement.LostMouseCapture\"></xref> routed event that occurs when this control is no longer receiving mouse event messages."},{"pos":[70110,70295],"content":"This implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.LostMouseCapture> event data.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This implementation does not change the handled state (the &lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt; property) of the &lt;xref:System.Windows.UIElement.LostMouseCapture&gt; event data.","pos":[0,185],"source":"This implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.LostMouseCapture> event data."}]},{"pos":[70498,70578],"content":"The event data for the <xref:System.Windows.Input.Mouse.LostMouseCapture> event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event data for the &lt;xref:System.Windows.Input.Mouse.LostMouseCapture&gt; event.","pos":[0,80],"source":"The event data for the <xref:System.Windows.Input.Mouse.LostMouseCapture> event."}]},{"pos":[71226,71382],"content":"Provides class handling for the <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode*> routed event that occurs when the mouse enters this control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides class handling for the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode*&gt; routed event that occurs when the mouse enters this control.","pos":[0,156],"source":"Provides class handling for the <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode*> routed event that occurs when the mouse enters this control."}]},{"pos":[71394,71788],"content":"When &lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt; is set to &lt;xref:System.Windows.Controls.ClickMode&gt;, this implementation marks the &lt;xref:System.Windows.UIElement.MouseEnter&gt; event as handled by setting the &lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt; property of the event data to <ph id=\"ph1\">`true`</ph> and raises the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt; event.","needQuote":true,"needEscape":true,"extradata":"MT","source":"When <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode>, this implementation marks the <xref:System.Windows.UIElement.MouseEnter> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` and raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event."},{"pos":[71985,72059],"content":"The event data for the <xref:System.Windows.Input.Mouse.MouseEnter> event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event data for the &lt;xref:System.Windows.Input.Mouse.MouseEnter&gt; event.","pos":[0,74],"source":"The event data for the <xref:System.Windows.Input.Mouse.MouseEnter> event."}]},{"pos":[72701,72848],"content":"Provides class handling for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement.MouseLeave\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event that occurs when the mouse leaves an element.","needQuote":true,"needEscape":true,"source":"Provides class handling for the <xref href=\"System.Windows.UIElement.MouseLeave\"></xref> routed event that occurs when the mouse leaves an element."},{"pos":[72860,73173],"content":"This implementation marks the &lt;xref:System.Windows.UIElement.MouseLeave&gt; event as handled by setting the &lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt; property of the event data to <ph id=\"ph1\">`true`</ph> when &lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt; is set to &lt;xref:System.Windows.Controls.ClickMode&gt;.","needQuote":true,"needEscape":true,"extradata":"MT","source":"This implementation marks the <xref:System.Windows.UIElement.MouseLeave> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode>."},{"pos":[73370,73444],"content":"The event data for the <xref:System.Windows.Input.Mouse.MouseLeave> event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event data for the &lt;xref:System.Windows.Input.Mouse.MouseLeave&gt; event.","pos":[0,74],"source":"The event data for the <xref:System.Windows.Input.Mouse.MouseLeave> event."}]},{"pos":[74161,74367],"content":"Provides class handling for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement.MouseLeftButtonDown\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event that occurs when the left mouse button is pressed while the mouse pointer is over this control.","needQuote":true,"needEscape":true,"source":"Provides class handling for the <xref href=\"System.Windows.UIElement.MouseLeftButtonDown\"></xref> routed event that occurs when the left mouse button is pressed while the mouse pointer is over this control."},{"pos":[74380,75262],"content":"This implementation marks the <xref:System.Windows.UIElement.MouseLeftButtonDown> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode>. To respond to the <xref:System.Windows.UIElement.MouseLeftButtonDown> event, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.       When <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode>, this method raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This implementation marks the &lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt; event as handled by setting the &lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt; property of the event data to <ph id=\"ph1\">`true`</ph> when &lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt; is not set to &lt;xref:System.Windows.Controls.ClickMode&gt;.","pos":[0,326],"source":"This implementation marks the <xref:System.Windows.UIElement.MouseLeftButtonDown> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode>."},{"content":"To respond to the &lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt; event, attach an event handler to the &lt;xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown&gt; event, or call &lt;xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt; with <ph id=\"ph1\">`handledEventsToo`</ph> set to <ph id=\"ph2\">`true`</ph>.","pos":[327,662],"source":" To respond to the <xref:System.Windows.UIElement.MouseLeftButtonDown> event, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`."},{"content":"When &lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt; is set to &lt;xref:System.Windows.Controls.ClickMode&gt;, this method raises the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt; event.","pos":[669,880],"source":"       When <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode>, this method raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event."}]},{"pos":[75481,75496],"content":"The event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event data.","pos":[0,15]}]},{"pos":[76212,76417],"content":"Provides class handling for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement.MouseLeftButtonUp\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event that occurs when the left mouse button is released while the mouse pointer is over this control.","needQuote":true,"needEscape":true,"source":"Provides class handling for the <xref href=\"System.Windows.UIElement.MouseLeftButtonUp\"></xref> routed event that occurs when the left mouse button is released while the mouse pointer is over this control."},{"pos":[76430,77385],"content":"This implementation marks the <xref:System.Windows.UIElement.MouseLeftButtonUp> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode>. To respond to the <xref:System.Windows.UIElement.MouseLeftButtonUp> event, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.       When <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode> is <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is `true`, this method raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This implementation marks the &lt;xref:System.Windows.UIElement.MouseLeftButtonUp&gt; event as handled by setting the &lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt; property of the event data to <ph id=\"ph1\">`true`</ph> when &lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt; is not set to &lt;xref:System.Windows.Controls.ClickMode&gt;.","pos":[0,324],"source":"This implementation marks the <xref:System.Windows.UIElement.MouseLeftButtonUp> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode>."},{"content":"To respond to the &lt;xref:System.Windows.UIElement.MouseLeftButtonUp&gt; event, attach an event handler to the &lt;xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp&gt; event, or call &lt;xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt; with <ph id=\"ph1\">`handledEventsToo`</ph> set to <ph id=\"ph2\">`true`</ph>.","pos":[325,656],"source":" To respond to the <xref:System.Windows.UIElement.MouseLeftButtonUp> event, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`."},{"content":"When &lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt; is set to &lt;xref:System.Windows.Controls.ClickMode&gt; is &lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt; is <ph id=\"ph1\">`true`</ph>, this method raises the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt; event.","pos":[663,953],"source":"       When <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode> is <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is `true`, this method raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event."}]},{"pos":[77602,77617],"content":"The event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event data.","pos":[0,15]}]},{"pos":[78261,78427],"content":"Provides class handling for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement.MouseMove\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event that occurs when the mouse pointer moves while over this element.","needQuote":true,"needEscape":true,"source":"Provides class handling for the <xref href=\"System.Windows.UIElement.MouseMove\"></xref> routed event that occurs when the mouse pointer moves while over this element."},{"pos":[78439,79151],"content":"This implementation marks the <xref:System.Windows.UIElement.MouseMove> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode> and <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is `true`. To respond to the <xref:System.Windows.UIElement.MouseMove> event, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseMove> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This implementation marks the &lt;xref:System.Windows.UIElement.MouseMove&gt; event as handled by setting the &lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt; property of the event data to <ph id=\"ph1\">`true`</ph> when &lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt; is not set to &lt;xref:System.Windows.Controls.ClickMode&gt; and &lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt; is <ph id=\"ph2\">`true`</ph>.","pos":[0,396],"source":"This implementation marks the <xref:System.Windows.UIElement.MouseMove> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode> and <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is `true`."},{"content":"To respond to the &lt;xref:System.Windows.UIElement.MouseMove&gt; event, attach an event handler to the &lt;xref:System.Windows.ContentElement.PreviewMouseMove&gt; event, or call &lt;xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt; with <ph id=\"ph1\">`handledEventsToo`</ph> set to <ph id=\"ph2\">`true`</ph>.","pos":[397,712],"source":" To respond to the <xref:System.Windows.UIElement.MouseMove> event, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseMove> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`."}]},{"pos":[79347,79362],"content":"The event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event data.","pos":[0,15]}]},{"pos":[80031,80082],"content":"Called when the rendered size of a control changes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Called when the rendered size of a control changes.","pos":[0,51]}]},{"pos":[80094,80174],"content":"Overrides the OnRenderSizeChanged method of the <xref:System.Windows.UIElement>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Overrides the OnRenderSizeChanged method of the &lt;xref:System.Windows.UIElement&gt;.","pos":[0,80],"source":"Overrides the OnRenderSizeChanged method of the <xref:System.Windows.UIElement>."}]},{"pos":[80382,80409],"content":"Specifies the size changes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the size changes.","pos":[0,27]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Controls.Primitives.ButtonBase\n  id: ButtonBase\n  children:\n  - System.Windows.Controls.Primitives.ButtonBase.#ctor\n  - System.Windows.Controls.Primitives.ButtonBase.Click\n  - System.Windows.Controls.Primitives.ButtonBase.ClickEvent\n  - System.Windows.Controls.Primitives.ButtonBase.ClickMode\n  - System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty\n  - System.Windows.Controls.Primitives.ButtonBase.Command\n  - System.Windows.Controls.Primitives.ButtonBase.CommandParameter\n  - System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty\n  - System.Windows.Controls.Primitives.ButtonBase.CommandProperty\n  - System.Windows.Controls.Primitives.ButtonBase.CommandTarget\n  - System.Windows.Controls.Primitives.ButtonBase.CommandTargetProperty\n  - System.Windows.Controls.Primitives.ButtonBase.IsEnabledCore\n  - System.Windows.Controls.Primitives.ButtonBase.IsPressed\n  - System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty\n  - System.Windows.Controls.Primitives.ButtonBase.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)\n  - System.Windows.Controls.Primitives.ButtonBase.OnClick\n  - System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)\n  - System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)\n  - System.Windows.Controls.Primitives.ButtonBase.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)\n  - System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)\n  - System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)\n  - System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)\n  - System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged(System.Windows.SizeChangedInfo)\n  langs:\n  - csharp\n  name: ButtonBase\n  nameWithType: ButtonBase\n  fullName: System.Windows.Controls.Primitives.ButtonBase\n  type: Class\n  summary: Represents the base class for all <xref href=\"System.Windows.Controls.Button\"></xref> controls.\n  remarks: \"Handle the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event to respond when the user clicks a ButtonBase. The user can raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event by using an <xref:System.Windows.Controls.AccessText> or by pressing ENTER or the SPACEBAR when the control has focus.  When the user presses the SPACEBAR, the control sets <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> to `true` and captures the mouse.  As a result, the control will raise mouse events such as <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>. Note that using the <xref:System.Windows.Controls.AccessText> or ENTER does not change <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> or capture the mouse, but it does raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.  \\n  \\n The ButtonBase sets the <xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A> attached property to `true`.  \\n  \\n The ButtonBase sets the <xref:System.Windows.UIElement.IsInputMethodEnabled%2A> property to `false`.  \\n  \\n A ButtonBase is a <xref:System.Windows.Controls.ContentControl>, which means that it can contain a single object of any type (such as a string, an image, or a panel). For more information, see the <xref:System.Windows.Controls.ContentControl> class.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.DefaultEvent(\"Click\")]\n\n      [System.Windows.Localizability(System.Windows.LocalizationCategory.Button)]\n\n      public abstract class ButtonBase : System.Windows.Controls.ContentControl, System.Windows.Input.ICommandSource\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Media.Visual\n  - System.Windows.UIElement\n  - System.Windows.FrameworkElement\n  - System.Windows.Controls.Control\n  - System.Windows.Controls.ContentControl\n  implements:\n  - System.Windows.Input.ICommandSource\n  inheritedMembers:\n  - System.Windows.Controls.ContentControl.AddChild(System.Object)\n  - System.Windows.Controls.ContentControl.AddText(System.String)\n  - System.Windows.Controls.ContentControl.Content\n  - System.Windows.Controls.ContentControl.ContentProperty\n  - System.Windows.Controls.ContentControl.ContentStringFormat\n  - System.Windows.Controls.ContentControl.ContentStringFormatProperty\n  - System.Windows.Controls.ContentControl.ContentTemplate\n  - System.Windows.Controls.ContentControl.ContentTemplateProperty\n  - System.Windows.Controls.ContentControl.ContentTemplateSelector\n  - System.Windows.Controls.ContentControl.ContentTemplateSelectorProperty\n  - System.Windows.Controls.ContentControl.HasContent\n  - System.Windows.Controls.ContentControl.HasContentProperty\n  - System.Windows.Controls.ContentControl.LogicalChildren\n  - System.Windows.Controls.ContentControl.OnContentChanged(System.Object,System.Object)\n  - System.Windows.Controls.ContentControl.OnContentStringFormatChanged(System.String,System.String)\n  - System.Windows.Controls.ContentControl.OnContentTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)\n  - System.Windows.Controls.ContentControl.OnContentTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)\n  - System.Windows.Controls.ContentControl.ShouldSerializeContent\n  - System.Windows.Controls.ContentControl.System#Windows#Markup#IAddChild#AddChild(System.Object)\n  - System.Windows.Controls.ContentControl.System#Windows#Markup#IAddChild#AddText(System.String)\n  - System.Windows.Controls.Control.ArrangeOverride(System.Windows.Size)\n  - System.Windows.Controls.Control.Background\n  - System.Windows.Controls.Control.BackgroundProperty\n  - System.Windows.Controls.Control.BorderBrush\n  - System.Windows.Controls.Control.BorderBrushProperty\n  - System.Windows.Controls.Control.BorderThickness\n  - System.Windows.Controls.Control.BorderThicknessProperty\n  - System.Windows.Controls.Control.FontFamily\n  - System.Windows.Controls.Control.FontFamilyProperty\n  - System.Windows.Controls.Control.FontSize\n  - System.Windows.Controls.Control.FontSizeProperty\n  - System.Windows.Controls.Control.FontStretch\n  - System.Windows.Controls.Control.FontStretchProperty\n  - System.Windows.Controls.Control.FontStyle\n  - System.Windows.Controls.Control.FontStyleProperty\n  - System.Windows.Controls.Control.FontWeight\n  - System.Windows.Controls.Control.FontWeightProperty\n  - System.Windows.Controls.Control.Foreground\n  - System.Windows.Controls.Control.ForegroundProperty\n  - System.Windows.Controls.Control.HandlesScrolling\n  - System.Windows.Controls.Control.HorizontalContentAlignment\n  - System.Windows.Controls.Control.HorizontalContentAlignmentProperty\n  - System.Windows.Controls.Control.IsTabStop\n  - System.Windows.Controls.Control.IsTabStopProperty\n  - System.Windows.Controls.Control.MeasureOverride(System.Windows.Size)\n  - System.Windows.Controls.Control.MouseDoubleClick\n  - System.Windows.Controls.Control.MouseDoubleClickEvent\n  - System.Windows.Controls.Control.OnMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.Controls.Control.OnPreviewMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.Controls.Control.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)\n  - System.Windows.Controls.Control.Padding\n  - System.Windows.Controls.Control.PaddingProperty\n  - System.Windows.Controls.Control.PreviewMouseDoubleClick\n  - System.Windows.Controls.Control.PreviewMouseDoubleClickEvent\n  - System.Windows.Controls.Control.TabIndex\n  - System.Windows.Controls.Control.TabIndexProperty\n  - System.Windows.Controls.Control.Template\n  - System.Windows.Controls.Control.TemplateProperty\n  - System.Windows.Controls.Control.ToString\n  - System.Windows.Controls.Control.VerticalContentAlignment\n  - System.Windows.Controls.Control.VerticalContentAlignmentProperty\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.FrameworkElement.ActualHeight\n  - System.Windows.FrameworkElement.ActualHeightProperty\n  - System.Windows.FrameworkElement.ActualWidth\n  - System.Windows.FrameworkElement.ActualWidthProperty\n  - System.Windows.FrameworkElement.AddLogicalChild(System.Object)\n  - System.Windows.FrameworkElement.ApplyTemplate\n  - System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)\n  - System.Windows.FrameworkElement.BeginInit\n  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)\n  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)\n  - System.Windows.FrameworkElement.BindingGroup\n  - System.Windows.FrameworkElement.BindingGroupProperty\n  - System.Windows.FrameworkElement.BringIntoView\n  - System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)\n  - System.Windows.FrameworkElement.ContextMenu\n  - System.Windows.FrameworkElement.ContextMenuClosing\n  - System.Windows.FrameworkElement.ContextMenuClosingEvent\n  - System.Windows.FrameworkElement.ContextMenuOpening\n  - System.Windows.FrameworkElement.ContextMenuOpeningEvent\n  - System.Windows.FrameworkElement.ContextMenuProperty\n  - System.Windows.FrameworkElement.Cursor\n  - System.Windows.FrameworkElement.CursorProperty\n  - System.Windows.FrameworkElement.DataContext\n  - System.Windows.FrameworkElement.DataContextChanged\n  - System.Windows.FrameworkElement.DataContextProperty\n  - System.Windows.FrameworkElement.DefaultStyleKey\n  - System.Windows.FrameworkElement.DefaultStyleKeyProperty\n  - System.Windows.FrameworkElement.EndInit\n  - System.Windows.FrameworkElement.FindName(System.String)\n  - System.Windows.FrameworkElement.FindResource(System.Object)\n  - System.Windows.FrameworkElement.FlowDirection\n  - System.Windows.FrameworkElement.FlowDirectionProperty\n  - System.Windows.FrameworkElement.FocusVisualStyle\n  - System.Windows.FrameworkElement.FocusVisualStyleProperty\n  - System.Windows.FrameworkElement.ForceCursor\n  - System.Windows.FrameworkElement.ForceCursorProperty\n  - System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)\n  - System.Windows.FrameworkElement.GetFlowDirection(System.Windows.DependencyObject)\n  - System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)\n  - System.Windows.FrameworkElement.GetTemplateChild(System.String)\n  - System.Windows.FrameworkElement.GetUIParentCore\n  - System.Windows.FrameworkElement.GetVisualChild(System.Int32)\n  - System.Windows.FrameworkElement.Height\n  - System.Windows.FrameworkElement.HeightProperty\n  - System.Windows.FrameworkElement.HorizontalAlignment\n  - System.Windows.FrameworkElement.HorizontalAlignmentProperty\n  - System.Windows.FrameworkElement.InheritanceBehavior\n  - System.Windows.FrameworkElement.Initialized\n  - System.Windows.FrameworkElement.InputScope\n  - System.Windows.FrameworkElement.InputScopeProperty\n  - System.Windows.FrameworkElement.IsInitialized\n  - System.Windows.FrameworkElement.IsLoaded\n  - System.Windows.FrameworkElement.Language\n  - System.Windows.FrameworkElement.LanguageProperty\n  - System.Windows.FrameworkElement.LayoutTransform\n  - System.Windows.FrameworkElement.LayoutTransformProperty\n  - System.Windows.FrameworkElement.Loaded\n  - System.Windows.FrameworkElement.LoadedEvent\n  - System.Windows.FrameworkElement.Margin\n  - System.Windows.FrameworkElement.MarginProperty\n  - System.Windows.FrameworkElement.MaxHeight\n  - System.Windows.FrameworkElement.MaxHeightProperty\n  - System.Windows.FrameworkElement.MaxWidth\n  - System.Windows.FrameworkElement.MaxWidthProperty\n  - System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)\n  - System.Windows.FrameworkElement.MinHeight\n  - System.Windows.FrameworkElement.MinHeightProperty\n  - System.Windows.FrameworkElement.MinWidth\n  - System.Windows.FrameworkElement.MinWidthProperty\n  - System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)\n  - System.Windows.FrameworkElement.Name\n  - System.Windows.FrameworkElement.NameProperty\n  - System.Windows.FrameworkElement.OnApplyTemplate\n  - System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)\n  - System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)\n  - System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)\n  - System.Windows.FrameworkElement.OnInitialized(System.EventArgs)\n  - System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)\n  - System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)\n  - System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)\n  - System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)\n  - System.Windows.FrameworkElement.OverridesDefaultStyle\n  - System.Windows.FrameworkElement.OverridesDefaultStyleProperty\n  - System.Windows.FrameworkElement.Parent\n  - System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)\n  - System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)\n  - System.Windows.FrameworkElement.RegisterName(System.String,System.Object)\n  - System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)\n  - System.Windows.FrameworkElement.RequestBringIntoView\n  - System.Windows.FrameworkElement.RequestBringIntoViewEvent\n  - System.Windows.FrameworkElement.Resources\n  - System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)\n  - System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)\n  - System.Windows.FrameworkElement.SetFlowDirection(System.Windows.DependencyObject,System.Windows.FlowDirection)\n  - System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.FrameworkElement.ShouldSerializeResources\n  - System.Windows.FrameworkElement.ShouldSerializeStyle\n  - System.Windows.FrameworkElement.ShouldSerializeTriggers\n  - System.Windows.FrameworkElement.SizeChanged\n  - System.Windows.FrameworkElement.SizeChangedEvent\n  - System.Windows.FrameworkElement.SourceUpdated\n  - System.Windows.FrameworkElement.Style\n  - System.Windows.FrameworkElement.StyleProperty\n  - System.Windows.FrameworkElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)\n  - System.Windows.FrameworkElement.Tag\n  - System.Windows.FrameworkElement.TagProperty\n  - System.Windows.FrameworkElement.TargetUpdated\n  - System.Windows.FrameworkElement.TemplatedParent\n  - System.Windows.FrameworkElement.ToolTip\n  - System.Windows.FrameworkElement.ToolTipClosing\n  - System.Windows.FrameworkElement.ToolTipClosingEvent\n  - System.Windows.FrameworkElement.ToolTipOpening\n  - System.Windows.FrameworkElement.ToolTipOpeningEvent\n  - System.Windows.FrameworkElement.ToolTipProperty\n  - System.Windows.FrameworkElement.Triggers\n  - System.Windows.FrameworkElement.TryFindResource(System.Object)\n  - System.Windows.FrameworkElement.Unloaded\n  - System.Windows.FrameworkElement.UnloadedEvent\n  - System.Windows.FrameworkElement.UnregisterName(System.String)\n  - System.Windows.FrameworkElement.UpdateDefaultStyle\n  - System.Windows.FrameworkElement.UseLayoutRounding\n  - System.Windows.FrameworkElement.UseLayoutRoundingProperty\n  - System.Windows.FrameworkElement.VerticalAlignment\n  - System.Windows.FrameworkElement.VerticalAlignmentProperty\n  - System.Windows.FrameworkElement.VisualChildrenCount\n  - System.Windows.FrameworkElement.Width\n  - System.Windows.FrameworkElement.WidthProperty\n  - System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)\n  - System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)\n  - System.Windows.Media.Visual.PointToScreen(System.Windows.Point)\n  - System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)\n  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.VisualBitmapEffect\n  - System.Windows.Media.Visual.VisualBitmapEffectInput\n  - System.Windows.Media.Visual.VisualBitmapScalingMode\n  - System.Windows.Media.Visual.VisualCacheMode\n  - System.Windows.Media.Visual.VisualClearTypeHint\n  - System.Windows.Media.Visual.VisualClip\n  - System.Windows.Media.Visual.VisualEdgeMode\n  - System.Windows.Media.Visual.VisualEffect\n  - System.Windows.Media.Visual.VisualOffset\n  - System.Windows.Media.Visual.VisualOpacity\n  - System.Windows.Media.Visual.VisualOpacityMask\n  - System.Windows.Media.Visual.VisualParent\n  - System.Windows.Media.Visual.VisualScrollableAreaClip\n  - System.Windows.Media.Visual.VisualTextHintingMode\n  - System.Windows.Media.Visual.VisualTextRenderingMode\n  - System.Windows.Media.Visual.VisualTransform\n  - System.Windows.Media.Visual.VisualXSnappingGuidelines\n  - System.Windows.Media.Visual.VisualYSnappingGuidelines\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)\n  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)\n  - System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)\n  - System.Windows.UIElement.AllowDrop\n  - System.Windows.UIElement.AllowDropProperty\n  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.UIElement.AreAnyTouchesCaptured\n  - System.Windows.UIElement.AreAnyTouchesCapturedProperty\n  - System.Windows.UIElement.AreAnyTouchesCapturedWithin\n  - System.Windows.UIElement.AreAnyTouchesCapturedWithinProperty\n  - System.Windows.UIElement.AreAnyTouchesDirectlyOver\n  - System.Windows.UIElement.AreAnyTouchesDirectlyOverProperty\n  - System.Windows.UIElement.AreAnyTouchesOver\n  - System.Windows.UIElement.AreAnyTouchesOverProperty\n  - System.Windows.UIElement.Arrange(System.Windows.Rect)\n  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.UIElement.BitmapEffect\n  - System.Windows.UIElement.BitmapEffectInput\n  - System.Windows.UIElement.BitmapEffectInputProperty\n  - System.Windows.UIElement.BitmapEffectProperty\n  - System.Windows.UIElement.CacheMode\n  - System.Windows.UIElement.CacheModeProperty\n  - System.Windows.UIElement.CaptureMouse\n  - System.Windows.UIElement.CaptureStylus\n  - System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)\n  - System.Windows.UIElement.Clip\n  - System.Windows.UIElement.ClipProperty\n  - System.Windows.UIElement.ClipToBounds\n  - System.Windows.UIElement.ClipToBoundsProperty\n  - System.Windows.UIElement.CommandBindings\n  - System.Windows.UIElement.DesiredSize\n  - System.Windows.UIElement.DragEnter\n  - System.Windows.UIElement.DragEnterEvent\n  - System.Windows.UIElement.DragLeave\n  - System.Windows.UIElement.DragLeaveEvent\n  - System.Windows.UIElement.DragOver\n  - System.Windows.UIElement.DragOverEvent\n  - System.Windows.UIElement.Drop\n  - System.Windows.UIElement.DropEvent\n  - System.Windows.UIElement.Effect\n  - System.Windows.UIElement.EffectProperty\n  - System.Windows.UIElement.Focus\n  - System.Windows.UIElement.Focusable\n  - System.Windows.UIElement.FocusableChanged\n  - System.Windows.UIElement.FocusableProperty\n  - System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.UIElement.GiveFeedback\n  - System.Windows.UIElement.GiveFeedbackEvent\n  - System.Windows.UIElement.GotFocus\n  - System.Windows.UIElement.GotFocusEvent\n  - System.Windows.UIElement.GotKeyboardFocus\n  - System.Windows.UIElement.GotKeyboardFocusEvent\n  - System.Windows.UIElement.GotMouseCapture\n  - System.Windows.UIElement.GotMouseCaptureEvent\n  - System.Windows.UIElement.GotStylusCapture\n  - System.Windows.UIElement.GotStylusCaptureEvent\n  - System.Windows.UIElement.GotTouchCapture\n  - System.Windows.UIElement.GotTouchCaptureEvent\n  - System.Windows.UIElement.HasAnimatedProperties\n  - System.Windows.UIElement.HasEffectiveKeyboardFocus\n  - System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)\n  - System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters)\n  - System.Windows.UIElement.InputBindings\n  - System.Windows.UIElement.InputHitTest(System.Windows.Point)\n  - System.Windows.UIElement.InvalidateArrange\n  - System.Windows.UIElement.InvalidateMeasure\n  - System.Windows.UIElement.InvalidateVisual\n  - System.Windows.UIElement.IsArrangeValid\n  - System.Windows.UIElement.IsEnabled\n  - System.Windows.UIElement.IsEnabledChanged\n  - System.Windows.UIElement.IsEnabledProperty\n  - System.Windows.UIElement.IsFocused\n  - System.Windows.UIElement.IsFocusedProperty\n  - System.Windows.UIElement.IsHitTestVisible\n  - System.Windows.UIElement.IsHitTestVisibleChanged\n  - System.Windows.UIElement.IsHitTestVisibleProperty\n  - System.Windows.UIElement.IsInputMethodEnabled\n  - System.Windows.UIElement.IsKeyboardFocused\n  - System.Windows.UIElement.IsKeyboardFocusedChanged\n  - System.Windows.UIElement.IsKeyboardFocusedProperty\n  - System.Windows.UIElement.IsKeyboardFocusWithin\n  - System.Windows.UIElement.IsKeyboardFocusWithinChanged\n  - System.Windows.UIElement.IsKeyboardFocusWithinProperty\n  - System.Windows.UIElement.IsManipulationEnabled\n  - System.Windows.UIElement.IsManipulationEnabledProperty\n  - System.Windows.UIElement.IsMeasureValid\n  - System.Windows.UIElement.IsMouseCaptured\n  - System.Windows.UIElement.IsMouseCapturedChanged\n  - System.Windows.UIElement.IsMouseCapturedProperty\n  - System.Windows.UIElement.IsMouseCaptureWithin\n  - System.Windows.UIElement.IsMouseCaptureWithinChanged\n  - System.Windows.UIElement.IsMouseCaptureWithinProperty\n  - System.Windows.UIElement.IsMouseDirectlyOver\n  - System.Windows.UIElement.IsMouseDirectlyOverChanged\n  - System.Windows.UIElement.IsMouseDirectlyOverProperty\n  - System.Windows.UIElement.IsMouseOver\n  - System.Windows.UIElement.IsMouseOverProperty\n  - System.Windows.UIElement.IsStylusCaptured\n  - System.Windows.UIElement.IsStylusCapturedChanged\n  - System.Windows.UIElement.IsStylusCapturedProperty\n  - System.Windows.UIElement.IsStylusCaptureWithin\n  - System.Windows.UIElement.IsStylusCaptureWithinChanged\n  - System.Windows.UIElement.IsStylusCaptureWithinProperty\n  - System.Windows.UIElement.IsStylusDirectlyOver\n  - System.Windows.UIElement.IsStylusDirectlyOverChanged\n  - System.Windows.UIElement.IsStylusDirectlyOverProperty\n  - System.Windows.UIElement.IsStylusOver\n  - System.Windows.UIElement.IsStylusOverProperty\n  - System.Windows.UIElement.IsVisible\n  - System.Windows.UIElement.IsVisibleChanged\n  - System.Windows.UIElement.IsVisibleProperty\n  - System.Windows.UIElement.KeyDown\n  - System.Windows.UIElement.KeyDownEvent\n  - System.Windows.UIElement.KeyUp\n  - System.Windows.UIElement.KeyUpEvent\n  - System.Windows.UIElement.LayoutUpdated\n  - System.Windows.UIElement.LostFocus\n  - System.Windows.UIElement.LostFocusEvent\n  - System.Windows.UIElement.LostKeyboardFocus\n  - System.Windows.UIElement.LostKeyboardFocusEvent\n  - System.Windows.UIElement.LostMouseCapture\n  - System.Windows.UIElement.LostMouseCaptureEvent\n  - System.Windows.UIElement.LostStylusCapture\n  - System.Windows.UIElement.LostStylusCaptureEvent\n  - System.Windows.UIElement.LostTouchCapture\n  - System.Windows.UIElement.LostTouchCaptureEvent\n  - System.Windows.UIElement.ManipulationBoundaryFeedback\n  - System.Windows.UIElement.ManipulationBoundaryFeedbackEvent\n  - System.Windows.UIElement.ManipulationCompleted\n  - System.Windows.UIElement.ManipulationCompletedEvent\n  - System.Windows.UIElement.ManipulationDelta\n  - System.Windows.UIElement.ManipulationDeltaEvent\n  - System.Windows.UIElement.ManipulationInertiaStarting\n  - System.Windows.UIElement.ManipulationInertiaStartingEvent\n  - System.Windows.UIElement.ManipulationStarted\n  - System.Windows.UIElement.ManipulationStartedEvent\n  - System.Windows.UIElement.ManipulationStarting\n  - System.Windows.UIElement.ManipulationStartingEvent\n  - System.Windows.UIElement.Measure(System.Windows.Size)\n  - System.Windows.UIElement.MouseDown\n  - System.Windows.UIElement.MouseDownEvent\n  - System.Windows.UIElement.MouseEnter\n  - System.Windows.UIElement.MouseEnterEvent\n  - System.Windows.UIElement.MouseLeave\n  - System.Windows.UIElement.MouseLeaveEvent\n  - System.Windows.UIElement.MouseLeftButtonDown\n  - System.Windows.UIElement.MouseLeftButtonDownEvent\n  - System.Windows.UIElement.MouseLeftButtonUp\n  - System.Windows.UIElement.MouseLeftButtonUpEvent\n  - System.Windows.UIElement.MouseMove\n  - System.Windows.UIElement.MouseMoveEvent\n  - System.Windows.UIElement.MouseRightButtonDown\n  - System.Windows.UIElement.MouseRightButtonDownEvent\n  - System.Windows.UIElement.MouseRightButtonUp\n  - System.Windows.UIElement.MouseRightButtonUpEvent\n  - System.Windows.UIElement.MouseUp\n  - System.Windows.UIElement.MouseUpEvent\n  - System.Windows.UIElement.MouseWheel\n  - System.Windows.UIElement.MouseWheelEvent\n  - System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)\n  - System.Windows.UIElement.OnCreateAutomationPeer\n  - System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)\n  - System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)\n  - System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)\n  - System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)\n  - System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)\n  - System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)\n  - System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)\n  - System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)\n  - System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)\n  - System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)\n  - System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)\n  - System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)\n  - System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)\n  - System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)\n  - System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)\n  - System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)\n  - System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)\n  - System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)\n  - System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.Opacity\n  - System.Windows.UIElement.OpacityMask\n  - System.Windows.UIElement.OpacityMaskProperty\n  - System.Windows.UIElement.OpacityProperty\n  - System.Windows.UIElement.PersistId\n  - System.Windows.UIElement.PreviewDragEnter\n  - System.Windows.UIElement.PreviewDragEnterEvent\n  - System.Windows.UIElement.PreviewDragLeave\n  - System.Windows.UIElement.PreviewDragLeaveEvent\n  - System.Windows.UIElement.PreviewDragOver\n  - System.Windows.UIElement.PreviewDragOverEvent\n  - System.Windows.UIElement.PreviewDrop\n  - System.Windows.UIElement.PreviewDropEvent\n  - System.Windows.UIElement.PreviewGiveFeedback\n  - System.Windows.UIElement.PreviewGiveFeedbackEvent\n  - System.Windows.UIElement.PreviewGotKeyboardFocus\n  - System.Windows.UIElement.PreviewGotKeyboardFocusEvent\n  - System.Windows.UIElement.PreviewKeyDown\n  - System.Windows.UIElement.PreviewKeyDownEvent\n  - System.Windows.UIElement.PreviewKeyUp\n  - System.Windows.UIElement.PreviewKeyUpEvent\n  - System.Windows.UIElement.PreviewLostKeyboardFocus\n  - System.Windows.UIElement.PreviewLostKeyboardFocusEvent\n  - System.Windows.UIElement.PreviewMouseDown\n  - System.Windows.UIElement.PreviewMouseDownEvent\n  - System.Windows.UIElement.PreviewMouseLeftButtonDown\n  - System.Windows.UIElement.PreviewMouseLeftButtonDownEvent\n  - System.Windows.UIElement.PreviewMouseLeftButtonUp\n  - System.Windows.UIElement.PreviewMouseLeftButtonUpEvent\n  - System.Windows.UIElement.PreviewMouseMove\n  - System.Windows.UIElement.PreviewMouseMoveEvent\n  - System.Windows.UIElement.PreviewMouseRightButtonDown\n  - System.Windows.UIElement.PreviewMouseRightButtonDownEvent\n  - System.Windows.UIElement.PreviewMouseRightButtonUp\n  - System.Windows.UIElement.PreviewMouseRightButtonUpEvent\n  - System.Windows.UIElement.PreviewMouseUp\n  - System.Windows.UIElement.PreviewMouseUpEvent\n  - System.Windows.UIElement.PreviewMouseWheel\n  - System.Windows.UIElement.PreviewMouseWheelEvent\n  - System.Windows.UIElement.PreviewQueryContinueDrag\n  - System.Windows.UIElement.PreviewQueryContinueDragEvent\n  - System.Windows.UIElement.PreviewStylusButtonDown\n  - System.Windows.UIElement.PreviewStylusButtonDownEvent\n  - System.Windows.UIElement.PreviewStylusButtonUp\n  - System.Windows.UIElement.PreviewStylusButtonUpEvent\n  - System.Windows.UIElement.PreviewStylusDown\n  - System.Windows.UIElement.PreviewStylusDownEvent\n  - System.Windows.UIElement.PreviewStylusInAirMove\n  - System.Windows.UIElement.PreviewStylusInAirMoveEvent\n  - System.Windows.UIElement.PreviewStylusInRange\n  - System.Windows.UIElement.PreviewStylusInRangeEvent\n  - System.Windows.UIElement.PreviewStylusMove\n  - System.Windows.UIElement.PreviewStylusMoveEvent\n  - System.Windows.UIElement.PreviewStylusOutOfRange\n  - System.Windows.UIElement.PreviewStylusOutOfRangeEvent\n  - System.Windows.UIElement.PreviewStylusSystemGesture\n  - System.Windows.UIElement.PreviewStylusSystemGestureEvent\n  - System.Windows.UIElement.PreviewStylusUp\n  - System.Windows.UIElement.PreviewStylusUpEvent\n  - System.Windows.UIElement.PreviewTextInput\n  - System.Windows.UIElement.PreviewTextInputEvent\n  - System.Windows.UIElement.PreviewTouchDown\n  - System.Windows.UIElement.PreviewTouchDownEvent\n  - System.Windows.UIElement.PreviewTouchMove\n  - System.Windows.UIElement.PreviewTouchMoveEvent\n  - System.Windows.UIElement.PreviewTouchUp\n  - System.Windows.UIElement.PreviewTouchUpEvent\n  - System.Windows.UIElement.QueryContinueDrag\n  - System.Windows.UIElement.QueryContinueDragEvent\n  - System.Windows.UIElement.QueryCursor\n  - System.Windows.UIElement.QueryCursorEvent\n  - System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)\n  - System.Windows.UIElement.ReleaseAllTouchCaptures\n  - System.Windows.UIElement.ReleaseMouseCapture\n  - System.Windows.UIElement.ReleaseStylusCapture\n  - System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)\n  - System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)\n  - System.Windows.UIElement.RenderSize\n  - System.Windows.UIElement.RenderTransform\n  - System.Windows.UIElement.RenderTransformOrigin\n  - System.Windows.UIElement.RenderTransformOriginProperty\n  - System.Windows.UIElement.RenderTransformProperty\n  - System.Windows.UIElement.ShouldSerializeCommandBindings\n  - System.Windows.UIElement.ShouldSerializeInputBindings\n  - System.Windows.UIElement.SnapsToDevicePixels\n  - System.Windows.UIElement.SnapsToDevicePixelsProperty\n  - System.Windows.UIElement.StylusButtonDown\n  - System.Windows.UIElement.StylusButtonDownEvent\n  - System.Windows.UIElement.StylusButtonUp\n  - System.Windows.UIElement.StylusButtonUpEvent\n  - System.Windows.UIElement.StylusDown\n  - System.Windows.UIElement.StylusDownEvent\n  - System.Windows.UIElement.StylusEnter\n  - System.Windows.UIElement.StylusEnterEvent\n  - System.Windows.UIElement.StylusInAirMove\n  - System.Windows.UIElement.StylusInAirMoveEvent\n  - System.Windows.UIElement.StylusInRange\n  - System.Windows.UIElement.StylusInRangeEvent\n  - System.Windows.UIElement.StylusLeave\n  - System.Windows.UIElement.StylusLeaveEvent\n  - System.Windows.UIElement.StylusMove\n  - System.Windows.UIElement.StylusMoveEvent\n  - System.Windows.UIElement.StylusOutOfRange\n  - System.Windows.UIElement.StylusOutOfRangeEvent\n  - System.Windows.UIElement.StylusPlugIns\n  - System.Windows.UIElement.StylusSystemGesture\n  - System.Windows.UIElement.StylusSystemGestureEvent\n  - System.Windows.UIElement.StylusUp\n  - System.Windows.UIElement.StylusUpEvent\n  - System.Windows.UIElement.TextInput\n  - System.Windows.UIElement.TextInputEvent\n  - System.Windows.UIElement.TouchDown\n  - System.Windows.UIElement.TouchDownEvent\n  - System.Windows.UIElement.TouchEnter\n  - System.Windows.UIElement.TouchEnterEvent\n  - System.Windows.UIElement.TouchesCaptured\n  - System.Windows.UIElement.TouchesCapturedWithin\n  - System.Windows.UIElement.TouchesDirectlyOver\n  - System.Windows.UIElement.TouchesOver\n  - System.Windows.UIElement.TouchLeave\n  - System.Windows.UIElement.TouchLeaveEvent\n  - System.Windows.UIElement.TouchMove\n  - System.Windows.UIElement.TouchMoveEvent\n  - System.Windows.UIElement.TouchUp\n  - System.Windows.UIElement.TouchUpEvent\n  - System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)\n  - System.Windows.UIElement.Uid\n  - System.Windows.UIElement.UidProperty\n  - System.Windows.UIElement.UpdateLayout\n  - System.Windows.UIElement.Visibility\n  - System.Windows.UIElement.VisibilityProperty\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.ButtonBase.#ctor\n  id: '#ctor'\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  langs:\n  - csharp\n  name: ButtonBase()\n  nameWithType: ButtonBase.ButtonBase()\n  fullName: System.Windows.Controls.Primitives.ButtonBase.ButtonBase()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Controls.Primitives.ButtonBase\"></xref> class.\n  syntax:\n    content: protected ButtonBase ();\n    parameters: []\n  overload: System.Windows.Controls.Primitives.ButtonBase.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.ButtonBase.Click\n  id: Click\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  langs:\n  - csharp\n  name: Click\n  nameWithType: ButtonBase.Click\n  fullName: System.Windows.Controls.Primitives.ButtonBase.Click\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Occurs when a <xref href=\"System.Windows.Controls.Button\"></xref> is clicked.\n  remarks: \"The user can raise the Click event by using an <xref:System.Windows.Controls.AccessText> or by pressing ENTER or the SPACEBAR when the control has focus.  When the user presses the SPACEBAR, the control sets <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> to `true` and captures the mouse.  As a result, the control will raise mouse events such as <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>. Note that using the <xref:System.Windows.Controls.AccessText> or ENTER does not change <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> or capture the mouse, but it does raise the Click event.  \\n  \\n The <xref:System.Windows.Controls.Primitives.ButtonBase> marks the <xref:System.Windows.UIElement.MouseLeftButtonDown> event as handled in the <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> method and raises the Click event. Hence, the <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> event will never occur for a control that inherits from <xref:System.Windows.Controls.Primitives.ButtonBase>. Instead, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.  \\n  \\n<a name=\\\"routedEventInfo_Click\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.Primitives.ButtonBase.ClickEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.RoutedEventHandler>|\"\n  example:\n  - \"The following example shows three buttons that respond to clicks in three different ways.  \\n  \\n-   Hover - the first button changes colors when the user hovers with the mouse over the button  \\n  \\n-   Press - the second button requires that the mouse be pressed while the mouse pointer is in the button.  \\n  \\n-   Release - the third does not reset the background color of the buttons until the mouse is pressed and released in the button.  \\n  \\n [!code-xml[ClickModes_snip#1](~/add/codesnippet/xaml/ClickModes_snip.ButtonAlign/Pane1.xaml#1)]  \\n  \\n [!code-cs[ClickModes_snip#2](~/add/codesnippet/csharp/ClickModes_snip.ButtonAlign/Pane1.xaml.cs#2)]\\n [!code-vb[ClickModes_snip#2](~/add/codesnippet/visualbasic/ClickMode_Snips/Window1.xaml.vb#2)]\"\n  syntax:\n    content: public event System.Windows.RoutedEventHandler Click;\n    return:\n      type: System.Windows.RoutedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.ButtonBase.ClickEvent\n  id: ClickEvent\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  langs:\n  - csharp\n  name: ClickEvent\n  nameWithType: ButtonBase.ClickEvent\n  fullName: System.Windows.Controls.Primitives.ButtonBase.ClickEvent\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Identifies the <xref href=\"System.Windows.Controls.Primitives.ButtonBase.Click\"></xref> routed event.\n  remarks: This event corresponds to a left mouse button click.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent ClickEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.ButtonBase.ClickMode\n  id: ClickMode\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  langs:\n  - csharp\n  name: ClickMode\n  nameWithType: ButtonBase.ClickMode\n  fullName: System.Windows.Controls.Primitives.ButtonBase.ClickMode\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Gets or sets when the <xref href=\"System.Windows.Controls.Primitives.ButtonBase.Click\"></xref> event occurs.\n  remarks: \"<a name=\\\"dependencyPropertyInfo_ClickMode\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public System.Windows.Controls.ClickMode ClickMode { get; set; }\n    return:\n      type: System.Windows.Controls.ClickMode\n      description: When the <xref href=\"System.Windows.Controls.Primitives.ButtonBase.Click\"></xref> event occurs. The default value is <xref href=\"System.Windows.Controls.ClickMode\"></xref>.\n  overload: System.Windows.Controls.Primitives.ButtonBase.ClickMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty\n  id: ClickModeProperty\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  langs:\n  - csharp\n  name: ClickModeProperty\n  nameWithType: ButtonBase.ClickModeProperty\n  fullName: System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Identifies the <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty ClickModeProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.ButtonBase.Command\n  id: Command\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  langs:\n  - csharp\n  name: Command\n  nameWithType: ButtonBase.Command\n  fullName: System.Windows.Controls.Primitives.ButtonBase.Command\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Gets or sets the command to invoke when this button is pressed.\n  remarks: \"This property is used to associate a command with a particular button instance.  \\n  \\n In [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)], this property is most often set to be a static command value from one of the existing command libraries, such as <xref:System.Windows.Input.ApplicationCommands> or <xref:System.Windows.Input.NavigationCommands>. For details, see [Commanding Overview](~/add/includes/ajax-current-ext-md.md) or <xref:System.Windows.Input.ICommand>.  \\n  \\n<a name=\\\"xamlAttributeUsage_Command\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object Command=\\\"commandName\\\"/>  \\n```  \\n  \\n<a name=\\\"xamlValues_Command\\\"></a>   \\n## XAML Values  \\n *commandName*  \\n The command to invoke when this button is pressed.  \\n  \\n<a name=\\\"dependencyPropertyInfo_Command\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.Primitives.ButtonBase.CommandProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public System.Windows.Input.ICommand Command { get; set; }\n    return:\n      type: System.Windows.Input.ICommand\n      description: A command to invoke when this button is pressed. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Windows.Controls.Primitives.ButtonBase.Command*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.ButtonBase.CommandParameter\n  id: CommandParameter\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  langs:\n  - csharp\n  name: CommandParameter\n  nameWithType: ButtonBase.CommandParameter\n  fullName: System.Windows.Controls.Primitives.ButtonBase.CommandParameter\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Gets or sets the parameter to pass to the <xref:System.Windows.Controls.Primitives.ButtonBase.Command*> property.\n  remarks: \"Most existing commands from the command libraries do not use a command parameter. Of the commands that do use a command parameter, most of these take a parameter with some primitive type value, such as an integer or a string. However, it is possible to create a custom command where that command expects a nonprimitive type as its command parameter. For a custom command case like this, setting CommandParameter in code might require a new or existing object instance. Setting CommandParameter in markup might require property element syntax, where the object element filling the property element syntax is a new element of the type expected by that command. Alternatively, setting in markup might require a reference through a markup extension to an existing object (typically these references are made with [Binding Markup Extension](~/add/includes/ajax-current-ext-md.md) or [StaticResource Markup Extension](~/add/includes/ajax-current-ext-md.md)).  \\n  \\n<a name=\\\"xamlAttributeUsage_CommandParameter\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object CommandParameter=\\\"commandParameter\\\" />  \\n```  \\n  \\n<a name=\\\"xamlValues_CommandParameter\\\"></a>   \\n## XAML Values  \\n *commandParameter*  \\n A value of the same type as the particular command specified in the <xref:System.Windows.Controls.Primitives.ButtonBase.Command%2A> property expects. If you use an existing command library command, see that command library's documentation for [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] usage information, including which type of CommandParameter the command expects. If you use a custom command, see Remarks.  \\n  \\n<a name=\\\"dependencyPropertyInfo_CommandParameter\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public object CommandParameter { get; set; }\n    return:\n      type: System.Object\n      description: Parameter to pass to the <xref:System.Windows.Controls.Primitives.ButtonBase.Command*> property.\n  overload: System.Windows.Controls.Primitives.ButtonBase.CommandParameter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty\n  id: CommandParameterProperty\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  langs:\n  - csharp\n  name: CommandParameterProperty\n  nameWithType: ButtonBase.CommandParameterProperty\n  fullName: System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Identifies the <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty CommandParameterProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.ButtonBase.CommandProperty\n  id: CommandProperty\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  langs:\n  - csharp\n  name: CommandProperty\n  nameWithType: ButtonBase.CommandProperty\n  fullName: System.Windows.Controls.Primitives.ButtonBase.CommandProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Identifies the routed <xref:System.Windows.Controls.Primitives.ButtonBase.Command*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty CommandProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.ButtonBase.CommandTarget\n  id: CommandTarget\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  langs:\n  - csharp\n  name: CommandTarget\n  nameWithType: ButtonBase.CommandTarget\n  fullName: System.Windows.Controls.Primitives.ButtonBase.CommandTarget\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Gets or sets the element on which to raise the specified command.\n  remarks: \"The CommandTarget property cannot be used to define a <xref:System.Windows.UIElement>. The CommandTarget property provides a reference to an element that is already defined somewhere in your application.  \\n  \\n<a name=\\\"xamlAttributeUsage_Target\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<ButtonBase CommandTarget=\\\"{Binding ElementName= elementName }\\\"/>  \\n```  \\n  \\n<a name=\\\"xamlValues_CommandTarget\\\"></a>   \\n## XAML Values  \\n *elementName*  \\n The name of <xref:System.Windows.IInputElement> that receives the command.  \\n  \\n<a name=\\\"dependencyPropertyInfo_CommandTarget\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.Primitives.ButtonBase.CommandTargetProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public System.Windows.IInputElement CommandTarget { get; set; }\n    return:\n      type: System.Windows.IInputElement\n      description: Element on which to raise a command.\n  overload: System.Windows.Controls.Primitives.ButtonBase.CommandTarget*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.ButtonBase.CommandTargetProperty\n  id: CommandTargetProperty\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  langs:\n  - csharp\n  name: CommandTargetProperty\n  nameWithType: ButtonBase.CommandTargetProperty\n  fullName: System.Windows.Controls.Primitives.ButtonBase.CommandTargetProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Identifies the <xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty CommandTargetProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.ButtonBase.IsEnabledCore\n  id: IsEnabledCore\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  langs:\n  - csharp\n  name: IsEnabledCore\n  nameWithType: ButtonBase.IsEnabledCore\n  fullName: System.Windows.Controls.Primitives.ButtonBase.IsEnabledCore\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Gets the value of the <xref:System.Windows.ContentElement.IsEnabled*> property.\n  remarks: If you choose to override this implementation, make certain that you call the base method.\n  syntax:\n    content: protected override bool IsEnabledCore { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the control is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.Primitives.ButtonBase.IsEnabledCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.ButtonBase.IsPressed\n  id: IsPressed\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  langs:\n  - csharp\n  name: IsPressed\n  nameWithType: ButtonBase.IsPressed\n  fullName: System.Windows.Controls.Primitives.ButtonBase.IsPressed\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Gets a value that indicates whether a <xref href=\"System.Windows.Controls.Primitives.ButtonBase\"></xref> is currently activated.\n  remarks: \"IsPressed is the state of a button that indicates the left mouse button or SPACEBAR is pressed over the button. When IsPressed is `true`, the control captures the mouse.  As a result, the control will raise mouse events such as <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>. Note that using the <xref:System.Windows.Controls.AccessText> or ENTER does not change IsPressed or capture the mouse, but is does raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.  \\n  \\n Starting with the .NET Framework version 3.0 Service Pack 1, IsPressed has a protected setter. To use this functionality, your application should target the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"dependencyPropertyInfo_IsPressed\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty>|  \\n|Metadata properties set to `true`|None|\"\n  example:\n  - \"This example shows how to use the IsPressed property in a trigger style.  \\n  \\n [!code-xml[BtnColor#9](~/add/codesnippet/xaml/BtnColor.ButtonAlign/Pane1.xaml#9)]\"\n  syntax:\n    content: public bool IsPressed { get; protected set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Controls.Primitives.ButtonBase\"></xref> is activated; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.Primitives.ButtonBase.IsPressed*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty\n  id: IsPressedProperty\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  langs:\n  - csharp\n  name: IsPressedProperty\n  nameWithType: ButtonBase.IsPressedProperty\n  fullName: System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Identifies the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty IsPressedProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)\n  id: OnAccessKey(System.Windows.Input.AccessKeyEventArgs)\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  langs:\n  - csharp\n  name: OnAccessKey(AccessKeyEventArgs)\n  nameWithType: ButtonBase.OnAccessKey(AccessKeyEventArgs)\n  fullName: System.Windows.Controls.Primitives.ButtonBase.OnAccessKey(AccessKeyEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Responds when the <xref:System.Windows.Controls.AccessText.AccessKey*> for this control is called.\n  remarks: If <xref:System.Windows.Input.AccessKeyEventArgs.IsMultiple%2A> is `true`, this method calls the base implementation, which gives this control focus.  Otherwise, this method raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.\n  syntax:\n    content: protected override void OnAccessKey (System.Windows.Input.AccessKeyEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.AccessKeyEventArgs\n      description: The event data for the <xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed> event.\n  overload: System.Windows.Controls.Primitives.ButtonBase.OnAccessKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnClick\n  id: OnClick\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  langs:\n  - csharp\n  name: OnClick()\n  nameWithType: ButtonBase.OnClick()\n  fullName: System.Windows.Controls.Primitives.ButtonBase.OnClick()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Raises the <xref href=\"System.Windows.Controls.Primitives.ButtonBase.Click\"></xref> routed event.\n  remarks: The control raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event by calling <xref:System.Windows.UIElement.RaiseEvent%2A>. For more information, see [Routed Events Overview](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: protected virtual void OnClick ();\n    parameters: []\n  overload: System.Windows.Controls.Primitives.ButtonBase.OnClick*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  id: OnIsPressedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  langs:\n  - csharp\n  name: OnIsPressedChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: ButtonBase.OnIsPressedChanged(DependencyPropertyChangedEventArgs)\n  fullName: System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged(DependencyPropertyChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Called when the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed*> property changes.\n  syntax:\n    content: protected virtual void OnIsPressedChanged (System.Windows.DependencyPropertyChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.DependencyPropertyChangedEventArgs\n      description: The data for <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref>.\n  overload: System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)\n  id: OnKeyDown(System.Windows.Input.KeyEventArgs)\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  langs:\n  - csharp\n  name: OnKeyDown(KeyEventArgs)\n  nameWithType: ButtonBase.OnKeyDown(KeyEventArgs)\n  fullName: System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(KeyEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Provides class handling for the <xref href=\"System.Windows.UIElement.KeyDown\"></xref> routed event that occurs when the user presses a key while this control has focus.\n  remarks: \"This implementation marks the <xref:System.Windows.UIElement.KeyDown> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode> and one of the following cases are true:  \\n  \\n-   The user presses the SPACEBAR.  \\n  \\n-   The user presses ENTER and <xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A> is `true` for this control.  \\n  \\n In all other cases, this implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.KeyDown> event data.\"\n  syntax:\n    content: protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.KeyEventArgs\n      description: The event data.\n  overload: System.Windows.Controls.Primitives.ButtonBase.OnKeyDown*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)\n  id: OnKeyUp(System.Windows.Input.KeyEventArgs)\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  langs:\n  - csharp\n  name: OnKeyUp(KeyEventArgs)\n  nameWithType: ButtonBase.OnKeyUp(KeyEventArgs)\n  fullName: System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(KeyEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Provides class handling for the <xref href=\"System.Windows.UIElement.KeyUp\"></xref> routed event that occurs when the user releases a key while this control has focus.\n  remarks: This implementation marks the <xref:System.Windows.UIElement.KeyUp> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when the user releases the SPACEBAR. Otherwise, this implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.KeyUp> event data.\n  syntax:\n    content: protected override void OnKeyUp (System.Windows.Input.KeyEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.KeyEventArgs\n      description: The event data for the <xref href=\"System.Windows.UIElement.KeyUp\"></xref> event.\n  overload: System.Windows.Controls.Primitives.ButtonBase.OnKeyUp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  id: OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  langs:\n  - csharp\n  name: OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)\n  nameWithType: ButtonBase.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)\n  fullName: System.Windows.Controls.Primitives.ButtonBase.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Called when an element loses keyboard focus.\n  syntax:\n    content: protected override void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.KeyboardFocusChangedEventArgs\n      description: The event data for the <xref href=\"System.Windows.IInputElement.LostKeyboardFocus\"></xref> event.\n  overload: System.Windows.Controls.Primitives.ButtonBase.OnLostKeyboardFocus*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)\n  id: OnLostMouseCapture(System.Windows.Input.MouseEventArgs)\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  langs:\n  - csharp\n  name: OnLostMouseCapture(MouseEventArgs)\n  nameWithType: ButtonBase.OnLostMouseCapture(MouseEventArgs)\n  fullName: System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(MouseEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Provides class handling for the <xref href=\"System.Windows.UIElement.LostMouseCapture\"></xref> routed event that occurs when this control is no longer receiving mouse event messages.\n  remarks: This implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.LostMouseCapture> event data.\n  syntax:\n    content: protected override void OnLostMouseCapture (System.Windows.Input.MouseEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.MouseEventArgs\n      description: The event data for the <xref:System.Windows.Input.Mouse.LostMouseCapture> event.\n  overload: System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)\n  id: OnMouseEnter(System.Windows.Input.MouseEventArgs)\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  langs:\n  - csharp\n  name: OnMouseEnter(MouseEventArgs)\n  nameWithType: ButtonBase.OnMouseEnter(MouseEventArgs)\n  fullName: System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(MouseEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Provides class handling for the <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode*> routed event that occurs when the mouse enters this control.\n  remarks: When <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode>, this implementation marks the <xref:System.Windows.UIElement.MouseEnter> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` and raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.\n  syntax:\n    content: protected override void OnMouseEnter (System.Windows.Input.MouseEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.MouseEventArgs\n      description: The event data for the <xref:System.Windows.Input.Mouse.MouseEnter> event.\n  overload: System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)\n  id: OnMouseLeave(System.Windows.Input.MouseEventArgs)\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  langs:\n  - csharp\n  name: OnMouseLeave(MouseEventArgs)\n  nameWithType: ButtonBase.OnMouseLeave(MouseEventArgs)\n  fullName: System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(MouseEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Provides class handling for the <xref href=\"System.Windows.UIElement.MouseLeave\"></xref> routed event that occurs when the mouse leaves an element.\n  remarks: This implementation marks the <xref:System.Windows.UIElement.MouseLeave> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode>.\n  syntax:\n    content: protected override void OnMouseLeave (System.Windows.Input.MouseEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.MouseEventArgs\n      description: The event data for the <xref:System.Windows.Input.Mouse.MouseLeave> event.\n  overload: System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  id: OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  langs:\n  - csharp\n  name: OnMouseLeftButtonDown(MouseButtonEventArgs)\n  nameWithType: ButtonBase.OnMouseLeftButtonDown(MouseButtonEventArgs)\n  fullName: System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(MouseButtonEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Provides class handling for the <xref href=\"System.Windows.UIElement.MouseLeftButtonDown\"></xref> routed event that occurs when the left mouse button is pressed while the mouse pointer is over this control.\n  remarks: \"This implementation marks the <xref:System.Windows.UIElement.MouseLeftButtonDown> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode>. To respond to the <xref:System.Windows.UIElement.MouseLeftButtonDown> event, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.  \\n  \\n When <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode>, this method raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.\"\n  syntax:\n    content: protected override void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.MouseButtonEventArgs\n      description: The event data.\n  overload: System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  id: OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  langs:\n  - csharp\n  name: OnMouseLeftButtonUp(MouseButtonEventArgs)\n  nameWithType: ButtonBase.OnMouseLeftButtonUp(MouseButtonEventArgs)\n  fullName: System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(MouseButtonEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Provides class handling for the <xref href=\"System.Windows.UIElement.MouseLeftButtonUp\"></xref> routed event that occurs when the left mouse button is released while the mouse pointer is over this control.\n  remarks: \"This implementation marks the <xref:System.Windows.UIElement.MouseLeftButtonUp> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode>. To respond to the <xref:System.Windows.UIElement.MouseLeftButtonUp> event, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.  \\n  \\n When <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode> is <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is `true`, this method raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.\"\n  syntax:\n    content: protected override void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.MouseButtonEventArgs\n      description: The event data.\n  overload: System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)\n  id: OnMouseMove(System.Windows.Input.MouseEventArgs)\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  langs:\n  - csharp\n  name: OnMouseMove(MouseEventArgs)\n  nameWithType: ButtonBase.OnMouseMove(MouseEventArgs)\n  fullName: System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(MouseEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Provides class handling for the <xref href=\"System.Windows.UIElement.MouseMove\"></xref> routed event that occurs when the mouse pointer moves while over this element.\n  remarks: This implementation marks the <xref:System.Windows.UIElement.MouseMove> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode> and <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is `true`. To respond to the <xref:System.Windows.UIElement.MouseMove> event, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseMove> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.\n  syntax:\n    content: protected override void OnMouseMove (System.Windows.Input.MouseEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.MouseEventArgs\n      description: The event data.\n  overload: System.Windows.Controls.Primitives.ButtonBase.OnMouseMove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged(System.Windows.SizeChangedInfo)\n  id: OnRenderSizeChanged(System.Windows.SizeChangedInfo)\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  langs:\n  - csharp\n  name: OnRenderSizeChanged(SizeChangedInfo)\n  nameWithType: ButtonBase.OnRenderSizeChanged(SizeChangedInfo)\n  fullName: System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged(SizeChangedInfo)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls.Primitives\n  summary: Called when the rendered size of a control changes.\n  remarks: Overrides the OnRenderSizeChanged method of the <xref:System.Windows.UIElement>.\n  syntax:\n    content: protected override void OnRenderSizeChanged (System.Windows.SizeChangedInfo sizeInfo);\n    parameters:\n    - id: sizeInfo\n      type: System.Windows.SizeChangedInfo\n      description: Specifies the size changes.\n  overload: System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Controls.ContentControl\n  isExternal: false\n  name: System.Windows.Controls.ContentControl\n- uid: System.Windows.Controls.Primitives.ButtonBase.#ctor\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: ButtonBase()\n  nameWithType: ButtonBase.ButtonBase()\n  fullName: System.Windows.Controls.Primitives.ButtonBase.ButtonBase()\n- uid: System.Windows.Controls.Primitives.ButtonBase.Click\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: Click\n  nameWithType: ButtonBase.Click\n  fullName: System.Windows.Controls.Primitives.ButtonBase.Click\n- uid: System.Windows.RoutedEventHandler\n  parent: System.Windows\n  isExternal: false\n  name: RoutedEventHandler\n  nameWithType: RoutedEventHandler\n  fullName: System.Windows.RoutedEventHandler\n- uid: System.Windows.Controls.Primitives.ButtonBase.ClickEvent\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: ClickEvent\n  nameWithType: ButtonBase.ClickEvent\n  fullName: System.Windows.Controls.Primitives.ButtonBase.ClickEvent\n- uid: System.Windows.RoutedEvent\n  parent: System.Windows\n  isExternal: false\n  name: RoutedEvent\n  nameWithType: RoutedEvent\n  fullName: System.Windows.RoutedEvent\n- uid: System.Windows.Controls.Primitives.ButtonBase.ClickMode\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: ClickMode\n  nameWithType: ButtonBase.ClickMode\n  fullName: System.Windows.Controls.Primitives.ButtonBase.ClickMode\n- uid: System.Windows.Controls.ClickMode\n  parent: System.Windows.Controls\n  isExternal: false\n  name: ClickMode\n  nameWithType: ClickMode\n  fullName: System.Windows.Controls.ClickMode\n- uid: System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: ClickModeProperty\n  nameWithType: ButtonBase.ClickModeProperty\n  fullName: System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Controls.Primitives.ButtonBase.Command\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: Command\n  nameWithType: ButtonBase.Command\n  fullName: System.Windows.Controls.Primitives.ButtonBase.Command\n- uid: System.Windows.Input.ICommand\n  parent: System.Windows.Input\n  isExternal: true\n  name: ICommand\n  nameWithType: ICommand\n  fullName: System.Windows.Input.ICommand\n- uid: System.Windows.Controls.Primitives.ButtonBase.CommandParameter\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: CommandParameter\n  nameWithType: ButtonBase.CommandParameter\n  fullName: System.Windows.Controls.Primitives.ButtonBase.CommandParameter\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: CommandParameterProperty\n  nameWithType: ButtonBase.CommandParameterProperty\n  fullName: System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty\n- uid: System.Windows.Controls.Primitives.ButtonBase.CommandProperty\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: CommandProperty\n  nameWithType: ButtonBase.CommandProperty\n  fullName: System.Windows.Controls.Primitives.ButtonBase.CommandProperty\n- uid: System.Windows.Controls.Primitives.ButtonBase.CommandTarget\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: CommandTarget\n  nameWithType: ButtonBase.CommandTarget\n  fullName: System.Windows.Controls.Primitives.ButtonBase.CommandTarget\n- uid: System.Windows.IInputElement\n  parent: System.Windows\n  isExternal: false\n  name: IInputElement\n  nameWithType: IInputElement\n  fullName: System.Windows.IInputElement\n- uid: System.Windows.Controls.Primitives.ButtonBase.CommandTargetProperty\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: CommandTargetProperty\n  nameWithType: ButtonBase.CommandTargetProperty\n  fullName: System.Windows.Controls.Primitives.ButtonBase.CommandTargetProperty\n- uid: System.Windows.Controls.Primitives.ButtonBase.IsEnabledCore\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: IsEnabledCore\n  nameWithType: ButtonBase.IsEnabledCore\n  fullName: System.Windows.Controls.Primitives.ButtonBase.IsEnabledCore\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Controls.Primitives.ButtonBase.IsPressed\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: IsPressed\n  nameWithType: ButtonBase.IsPressed\n  fullName: System.Windows.Controls.Primitives.ButtonBase.IsPressed\n- uid: System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: IsPressedProperty\n  nameWithType: ButtonBase.IsPressedProperty\n  fullName: System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: OnAccessKey(AccessKeyEventArgs)\n  nameWithType: ButtonBase.OnAccessKey(AccessKeyEventArgs)\n  fullName: System.Windows.Controls.Primitives.ButtonBase.OnAccessKey(AccessKeyEventArgs)\n- uid: System.Windows.Input.AccessKeyEventArgs\n  parent: System.Windows.Input\n  isExternal: false\n  name: AccessKeyEventArgs\n  nameWithType: AccessKeyEventArgs\n  fullName: System.Windows.Input.AccessKeyEventArgs\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnClick\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: OnClick()\n  nameWithType: ButtonBase.OnClick()\n  fullName: System.Windows.Controls.Primitives.ButtonBase.OnClick()\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: OnIsPressedChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: ButtonBase.OnIsPressedChanged(DependencyPropertyChangedEventArgs)\n  fullName: System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.DependencyPropertyChangedEventArgs\n  parent: System.Windows\n  isExternal: false\n  name: DependencyPropertyChangedEventArgs\n  nameWithType: DependencyPropertyChangedEventArgs\n  fullName: System.Windows.DependencyPropertyChangedEventArgs\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: OnKeyDown(KeyEventArgs)\n  nameWithType: ButtonBase.OnKeyDown(KeyEventArgs)\n  fullName: System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(KeyEventArgs)\n- uid: System.Windows.Input.KeyEventArgs\n  parent: System.Windows.Input\n  isExternal: false\n  name: KeyEventArgs\n  nameWithType: KeyEventArgs\n  fullName: System.Windows.Input.KeyEventArgs\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: OnKeyUp(KeyEventArgs)\n  nameWithType: ButtonBase.OnKeyUp(KeyEventArgs)\n  fullName: System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(KeyEventArgs)\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)\n  nameWithType: ButtonBase.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)\n  fullName: System.Windows.Controls.Primitives.ButtonBase.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)\n- uid: System.Windows.Input.KeyboardFocusChangedEventArgs\n  parent: System.Windows.Input\n  isExternal: false\n  name: KeyboardFocusChangedEventArgs\n  nameWithType: KeyboardFocusChangedEventArgs\n  fullName: System.Windows.Input.KeyboardFocusChangedEventArgs\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: OnLostMouseCapture(MouseEventArgs)\n  nameWithType: ButtonBase.OnLostMouseCapture(MouseEventArgs)\n  fullName: System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(MouseEventArgs)\n- uid: System.Windows.Input.MouseEventArgs\n  parent: System.Windows.Input\n  isExternal: false\n  name: MouseEventArgs\n  nameWithType: MouseEventArgs\n  fullName: System.Windows.Input.MouseEventArgs\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: OnMouseEnter(MouseEventArgs)\n  nameWithType: ButtonBase.OnMouseEnter(MouseEventArgs)\n  fullName: System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(MouseEventArgs)\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: OnMouseLeave(MouseEventArgs)\n  nameWithType: ButtonBase.OnMouseLeave(MouseEventArgs)\n  fullName: System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(MouseEventArgs)\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: OnMouseLeftButtonDown(MouseButtonEventArgs)\n  nameWithType: ButtonBase.OnMouseLeftButtonDown(MouseButtonEventArgs)\n  fullName: System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(MouseButtonEventArgs)\n- uid: System.Windows.Input.MouseButtonEventArgs\n  parent: System.Windows.Input\n  isExternal: false\n  name: MouseButtonEventArgs\n  nameWithType: MouseButtonEventArgs\n  fullName: System.Windows.Input.MouseButtonEventArgs\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: OnMouseLeftButtonUp(MouseButtonEventArgs)\n  nameWithType: ButtonBase.OnMouseLeftButtonUp(MouseButtonEventArgs)\n  fullName: System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(MouseButtonEventArgs)\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: OnMouseMove(MouseEventArgs)\n  nameWithType: ButtonBase.OnMouseMove(MouseEventArgs)\n  fullName: System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(MouseEventArgs)\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged(System.Windows.SizeChangedInfo)\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: OnRenderSizeChanged(SizeChangedInfo)\n  nameWithType: ButtonBase.OnRenderSizeChanged(SizeChangedInfo)\n  fullName: System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged(SizeChangedInfo)\n- uid: System.Windows.SizeChangedInfo\n  parent: System.Windows\n  isExternal: false\n  name: SizeChangedInfo\n  nameWithType: SizeChangedInfo\n  fullName: System.Windows.SizeChangedInfo\n- uid: System.Windows.Controls.Primitives.ButtonBase.#ctor*\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: ButtonBase\n  nameWithType: ButtonBase.ButtonBase\n- uid: System.Windows.Controls.Primitives.ButtonBase.ClickMode*\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: ClickMode\n  nameWithType: ButtonBase.ClickMode\n- uid: System.Windows.Controls.Primitives.ButtonBase.Command*\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: Command\n  nameWithType: ButtonBase.Command\n- uid: System.Windows.Controls.Primitives.ButtonBase.CommandParameter*\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: CommandParameter\n  nameWithType: ButtonBase.CommandParameter\n- uid: System.Windows.Controls.Primitives.ButtonBase.CommandTarget*\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: CommandTarget\n  nameWithType: ButtonBase.CommandTarget\n- uid: System.Windows.Controls.Primitives.ButtonBase.IsEnabledCore*\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: IsEnabledCore\n  nameWithType: ButtonBase.IsEnabledCore\n- uid: System.Windows.Controls.Primitives.ButtonBase.IsPressed*\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: IsPressed\n  nameWithType: ButtonBase.IsPressed\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnAccessKey*\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: OnAccessKey\n  nameWithType: ButtonBase.OnAccessKey\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnClick*\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: OnClick\n  nameWithType: ButtonBase.OnClick\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged*\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: OnIsPressedChanged\n  nameWithType: ButtonBase.OnIsPressedChanged\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnKeyDown*\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: OnKeyDown\n  nameWithType: ButtonBase.OnKeyDown\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnKeyUp*\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: OnKeyUp\n  nameWithType: ButtonBase.OnKeyUp\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnLostKeyboardFocus*\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: OnLostKeyboardFocus\n  nameWithType: ButtonBase.OnLostKeyboardFocus\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture*\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: OnLostMouseCapture\n  nameWithType: ButtonBase.OnLostMouseCapture\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter*\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: OnMouseEnter\n  nameWithType: ButtonBase.OnMouseEnter\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave*\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: OnMouseLeave\n  nameWithType: ButtonBase.OnMouseLeave\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown*\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: OnMouseLeftButtonDown\n  nameWithType: ButtonBase.OnMouseLeftButtonDown\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp*\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: OnMouseLeftButtonUp\n  nameWithType: ButtonBase.OnMouseLeftButtonUp\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnMouseMove*\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: OnMouseMove\n  nameWithType: ButtonBase.OnMouseMove\n- uid: System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged*\n  parent: System.Windows.Controls.Primitives.ButtonBase\n  isExternal: false\n  name: OnRenderSizeChanged\n  nameWithType: ButtonBase.OnRenderSizeChanged\n"}