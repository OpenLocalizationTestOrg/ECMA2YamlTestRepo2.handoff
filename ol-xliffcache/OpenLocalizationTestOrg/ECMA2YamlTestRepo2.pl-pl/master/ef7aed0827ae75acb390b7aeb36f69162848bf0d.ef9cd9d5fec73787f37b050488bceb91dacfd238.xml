{"nodes":[{"pos":[439,599],"content":"Reads incoming request parameters for Web services implemented using HTTP with name-value pairs encoded in the URL's query string rather than as a SOAP message.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reads incoming request parameters for Web services implemented using HTTP with name-value pairs encoded in the URL's query string rather than as a SOAP message.","pos":[0,160]}]},{"pos":[612,1817],"content":"UrlParameterReader and other classes in the <xref:System.Web.Services.Protocols> namespace support the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations. Web service writers and readers serialize and deserialize, respectively, between the parameters or return objects of Web methods and the HTTP request or response streams. Web service writers and readers use HTTP for transport but don't exchange messages using the SOAP standard.       The UrlParameterReader class provides a service-side method, <xref:System.Web.Services.Protocols.UrlParameterReader.Read%2A>, to read parameter name/value pairs that are encoded into an HTTP request URL's query string. For example, in the URL `http://contoso.com?a=1&b=2`, `a` and `b` are parameter names, and `1` and `2` are their values.       You typically will not need to use UrlParameterReader directly. HTTP-GET Web services are enabled when an ASP.NET configuration file's (Web.config) `protocols` element contains an `add` element whose name attribute's value is \"`HttpGet`\". The UrlParameterReader class is automatically used when an HTTP-GET Web service is enabled and an applicable HTTP request is received.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"UrlParameterReader and other classes in the &lt;xref:System.Web.Services.Protocols&gt; namespace support the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations.","pos":[0,194],"source":"UrlParameterReader and other classes in the <xref:System.Web.Services.Protocols> namespace support the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations."},{"content":"Web service writers and readers serialize and deserialize, respectively, between the parameters or return objects of Web methods and the HTTP request or response streams.","pos":[195,365]},{"content":"Web service writers and readers use HTTP for transport but don't exchange messages using the SOAP standard.","pos":[366,473]},{"content":"The UrlParameterReader class provides a service-side method, &lt;xref:System.Web.Services.Protocols.UrlParameterReader.Read%2A&gt;, to read parameter name/value pairs that are encoded into an HTTP request URL's query string.","pos":[480,698],"source":"       The UrlParameterReader class provides a service-side method, <xref:System.Web.Services.Protocols.UrlParameterReader.Read%2A>, to read parameter name/value pairs that are encoded into an HTTP request URL's query string."},{"content":"For example, in the URL <ph id=\"ph1\">`http://contoso.com?a=1&amp;b=2`</ph>, <ph id=\"ph2\">`a`</ph> and <ph id=\"ph3\">`b`</ph> are parameter names, and <ph id=\"ph4\">`1`</ph> and <ph id=\"ph5\">`2`</ph> are their values.","pos":[699,819],"source":" For example, in the URL `http://contoso.com?a=1&b=2`, `a` and `b` are parameter names, and `1` and `2` are their values."},{"content":"You typically will not need to use UrlParameterReader directly.","pos":[826,889]},{"content":"HTTP-GET Web services are enabled when an ASP.NET configuration file's (Web.config) <ph id=\"ph1\">`protocols`</ph> element contains an <ph id=\"ph2\">`add`</ph> element whose name attribute's value is \"<ph id=\"ph3\">`HttpGet`</ph>\".","pos":[890,1064],"source":" HTTP-GET Web services are enabled when an ASP.NET configuration file's (Web.config) `protocols` element contains an `add` element whose name attribute's value is \"`HttpGet`\"."},{"content":"The UrlParameterReader class is automatically used when an HTTP-GET Web service is enabled and an applicable HTTP request is received.","pos":[1065,1199]}]},{"pos":[3667,3777],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Services.Protocols.UrlParameterReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Services.Protocols.UrlParameterReader\"></xref> class."},{"pos":[4422,4525],"content":"Reads name/value pairs encoded in the query string of an HTTP request into Web method parameter values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reads name/value pairs encoded in the query string of an HTTP request into Web method parameter values.","pos":[0,103]}]},{"pos":[4537,4670],"content":"The Read method uses the content of the <xref:System.Web.HttpRequest> object's <xref:System.Web.HttpRequest.QueryString%2A> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Read method uses the content of the &lt;xref:System.Web.HttpRequest&gt; object's &lt;xref:System.Web.HttpRequest.QueryString%2A&gt; property.","pos":[0,133],"source":"The Read method uses the content of the <xref:System.Web.HttpRequest> object's <xref:System.Web.HttpRequest.QueryString%2A> property."}]},{"pos":[4846,4929],"content":"A <xref:System.Net.WebResponse> objectcontaining HTML URL-encoded name/value pairs.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Net.WebResponse&gt; objectcontaining HTML URL-encoded name/value pairs.","pos":[0,83],"source":"A <xref:System.Net.WebResponse> objectcontaining HTML URL-encoded name/value pairs."}]},{"pos":[4989,5018],"content":"An array of name/value pairs.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of name/value pairs.","pos":[0,29]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Services.Protocols.UrlParameterReader\n  id: UrlParameterReader\n  children:\n  - System.Web.Services.Protocols.UrlParameterReader.#ctor\n  - System.Web.Services.Protocols.UrlParameterReader.Read(System.Web.HttpRequest)\n  langs:\n  - csharp\n  name: UrlParameterReader\n  nameWithType: UrlParameterReader\n  fullName: System.Web.Services.Protocols.UrlParameterReader\n  type: Class\n  summary: Reads incoming request parameters for Web services implemented using HTTP with name-value pairs encoded in the URL's query string rather than as a SOAP message.\n  remarks: \"UrlParameterReader and other classes in the <xref:System.Web.Services.Protocols> namespace support the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations. Web service writers and readers serialize and deserialize, respectively, between the parameters or return objects of Web methods and the HTTP request or response streams. Web service writers and readers use HTTP for transport but don't exchange messages using the SOAP standard.  \\n  \\n The UrlParameterReader class provides a service-side method, <xref:System.Web.Services.Protocols.UrlParameterReader.Read%2A>, to read parameter name/value pairs that are encoded into an HTTP request URL's query string. For example, in the URL `http://contoso.com?a=1&b=2`, `a` and `b` are parameter names, and `1` and `2` are their values.  \\n  \\n You typically will not need to use UrlParameterReader directly. HTTP-GET Web services are enabled when an ASP.NET configuration file's (Web.config) `protocols` element contains an `add` element whose name attribute's value is \\\"`HttpGet`\\\". The UrlParameterReader class is automatically used when an HTTP-GET Web service is enabled and an applicable HTTP request is received.\"\n  syntax:\n    content: 'public class UrlParameterReader : System.Web.Services.Protocols.ValueCollectionParameterReader'\n  inheritance:\n  - System.Object\n  - System.Web.Services.Protocols.MimeFormatter\n  - System.Web.Services.Protocols.MimeParameterReader\n  - System.Web.Services.Protocols.ValueCollectionParameterReader\n  implements: []\n  inheritedMembers:\n  - System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)\n  - System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)\n  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])\n  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])\n  - System.Web.Services.Protocols.ValueCollectionParameterReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)\n  - System.Web.Services.Protocols.ValueCollectionParameterReader.Initialize(System.Object)\n  - System.Web.Services.Protocols.ValueCollectionParameterReader.IsSupported(System.Reflection.ParameterInfo)\n  - System.Web.Services.Protocols.ValueCollectionParameterReader.IsSupported(System.Web.Services.Protocols.LogicalMethodInfo)\n  - System.Web.Services.Protocols.ValueCollectionParameterReader.Read(System.Collections.Specialized.NameValueCollection)\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.UrlParameterReader.#ctor\n  id: '#ctor'\n  parent: System.Web.Services.Protocols.UrlParameterReader\n  langs:\n  - csharp\n  name: UrlParameterReader()\n  nameWithType: UrlParameterReader.UrlParameterReader()\n  fullName: System.Web.Services.Protocols.UrlParameterReader.UrlParameterReader()\n  type: Constructor\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Initializes a new instance of the <xref href=\"System.Web.Services.Protocols.UrlParameterReader\"></xref> class.\n  syntax:\n    content: public UrlParameterReader ();\n    parameters: []\n  overload: System.Web.Services.Protocols.UrlParameterReader.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.UrlParameterReader.Read(System.Web.HttpRequest)\n  id: Read(System.Web.HttpRequest)\n  parent: System.Web.Services.Protocols.UrlParameterReader\n  langs:\n  - csharp\n  name: Read(HttpRequest)\n  nameWithType: UrlParameterReader.Read(HttpRequest)\n  fullName: System.Web.Services.Protocols.UrlParameterReader.Read(HttpRequest)\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Reads name/value pairs encoded in the query string of an HTTP request into Web method parameter values.\n  remarks: The Read method uses the content of the <xref:System.Web.HttpRequest> object's <xref:System.Web.HttpRequest.QueryString%2A> property.\n  syntax:\n    content: public override object[] Read (System.Web.HttpRequest request);\n    parameters:\n    - id: request\n      type: System.Web.HttpRequest\n      description: A <xref:System.Net.WebResponse> objectcontaining HTML URL-encoded name/value pairs.\n    return:\n      type: System.Object[]\n      description: An array of name/value pairs.\n  overload: System.Web.Services.Protocols.UrlParameterReader.Read*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.Services.Protocols.ValueCollectionParameterReader\n  isExternal: false\n  name: System.Web.Services.Protocols.ValueCollectionParameterReader\n- uid: System.Web.Services.Protocols.UrlParameterReader.#ctor\n  parent: System.Web.Services.Protocols.UrlParameterReader\n  isExternal: false\n  name: UrlParameterReader()\n  nameWithType: UrlParameterReader.UrlParameterReader()\n  fullName: System.Web.Services.Protocols.UrlParameterReader.UrlParameterReader()\n- uid: System.Web.Services.Protocols.UrlParameterReader.Read(System.Web.HttpRequest)\n  parent: System.Web.Services.Protocols.UrlParameterReader\n  isExternal: false\n  name: Read(HttpRequest)\n  nameWithType: UrlParameterReader.Read(HttpRequest)\n  fullName: System.Web.Services.Protocols.UrlParameterReader.Read(HttpRequest)\n- uid: System.Object[]\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Web.HttpRequest\n  parent: System.Web\n  isExternal: false\n  name: HttpRequest\n  nameWithType: HttpRequest\n  fullName: System.Web.HttpRequest\n- uid: System.Web.Services.Protocols.UrlParameterReader.#ctor*\n  parent: System.Web.Services.Protocols.UrlParameterReader\n  isExternal: false\n  name: UrlParameterReader\n  nameWithType: UrlParameterReader.UrlParameterReader\n- uid: System.Web.Services.Protocols.UrlParameterReader.Read*\n  parent: System.Web.Services.Protocols.UrlParameterReader\n  isExternal: false\n  name: Read\n  nameWithType: UrlParameterReader.Read\n"}