{"nodes":[{"pos":[475,591],"content":"Throws a previously thrown exception from within a <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.Catch\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> activity.","needQuote":true,"needEscape":true,"source":"Throws a previously thrown exception from within a <xref href=\"System.Activities.Statements.Catch\"></xref> activity."},{"pos":[603,822],"content":"The error is re-thrown retaining the original source of the exception. Rethrow can only be used within a <xref:System.Activities.Statements.Catch> block of a <xref:System.Activities.Statements.TryCatchFinally> activity.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The error is re-thrown retaining the original source of the exception. Rethrow can only be used within a <xref:System.Activities.Statements.Catch> block of a <xref:System.Activities.Statements.TryCatchFinally> activity.","pos":[0,219],"nodes":[{"content":"The error is re-thrown retaining the original source of the exception.","pos":[0,70]},{"content":"Rethrow can only be used within a &lt;xref:System.Activities.Statements.Catch&gt; block of a &lt;xref:System.Activities.Statements.TryCatchFinally&gt; activity.","pos":[71,219],"source":" Rethrow can only be used within a <xref:System.Activities.Statements.Catch> block of a <xref:System.Activities.Statements.TryCatchFinally> activity."}]}]},{"pos":[2510,2607],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.Rethrow\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> activity.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.Activities.Statements.Rethrow\"></xref> activity."},{"pos":[3503,3515],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4313,4325],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Statements.Rethrow\n  id: Rethrow\n  children:\n  - System.Activities.Statements.Rethrow.#ctor\n  - System.Activities.Statements.Rethrow.CacheMetadata(System.Activities.NativeActivityMetadata)\n  - System.Activities.Statements.Rethrow.Execute(System.Activities.NativeActivityContext)\n  langs:\n  - csharp\n  name: Rethrow\n  nameWithType: Rethrow\n  fullName: System.Activities.Statements.Rethrow\n  type: Class\n  summary: Throws a previously thrown exception from within a <xref href=\"System.Activities.Statements.Catch\"></xref> activity.\n  remarks: The error is re-thrown retaining the original source of the exception. Rethrow can only be used within a <xref:System.Activities.Statements.Catch> block of a <xref:System.Activities.Statements.TryCatchFinally> activity.\n  syntax:\n    content: 'public sealed class Rethrow : System.Activities.NativeActivity'\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.NativeActivity\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)\n  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)\n  - System.Activities.NativeActivity.CanInduceIdle\n  - System.Activities.NativeActivity.Implementation\n  - System.Activities.NativeActivity.ImplementationVersion\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  platform:\n  - net462\n- uid: System.Activities.Statements.Rethrow.#ctor\n  id: '#ctor'\n  parent: System.Activities.Statements.Rethrow\n  langs:\n  - csharp\n  name: Rethrow()\n  nameWithType: Rethrow.Rethrow()\n  fullName: System.Activities.Statements.Rethrow.Rethrow()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Creates a new instance of the <xref href=\"System.Activities.Statements.Rethrow\"></xref> activity.\n  syntax:\n    content: public Rethrow ();\n    parameters: []\n  overload: System.Activities.Statements.Rethrow.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.Rethrow.CacheMetadata(System.Activities.NativeActivityMetadata)\n  id: CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.Rethrow\n  langs:\n  - csharp\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: Rethrow.CacheMetadata(NativeActivityMetadata)\n  fullName: System.Activities.Statements.Rethrow.CacheMetadata(NativeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.NativeActivityMetadata\n      description: To be added.\n  overload: System.Activities.Statements.Rethrow.CacheMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.Rethrow.Execute(System.Activities.NativeActivityContext)\n  id: Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.Rethrow\n  langs:\n  - csharp\n  name: Execute(NativeActivityContext)\n  nameWithType: Rethrow.Execute(NativeActivityContext)\n  fullName: System.Activities.Statements.Rethrow.Execute(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Execute (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: To be added.\n  overload: System.Activities.Statements.Rethrow.Execute*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.NativeActivity\n  isExternal: false\n  name: System.Activities.NativeActivity\n- uid: System.Activities.Statements.Rethrow.#ctor\n  parent: System.Activities.Statements.Rethrow\n  isExternal: false\n  name: Rethrow()\n  nameWithType: Rethrow.Rethrow()\n  fullName: System.Activities.Statements.Rethrow.Rethrow()\n- uid: System.Activities.Statements.Rethrow.CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.Rethrow\n  isExternal: false\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: Rethrow.CacheMetadata(NativeActivityMetadata)\n  fullName: System.Activities.Statements.Rethrow.CacheMetadata(NativeActivityMetadata)\n- uid: System.Activities.NativeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityMetadata\n  nameWithType: NativeActivityMetadata\n  fullName: System.Activities.NativeActivityMetadata\n- uid: System.Activities.Statements.Rethrow.Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.Rethrow\n  isExternal: false\n  name: Execute(NativeActivityContext)\n  nameWithType: Rethrow.Execute(NativeActivityContext)\n  fullName: System.Activities.Statements.Rethrow.Execute(NativeActivityContext)\n- uid: System.Activities.NativeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityContext\n  nameWithType: NativeActivityContext\n  fullName: System.Activities.NativeActivityContext\n- uid: System.Activities.Statements.Rethrow.#ctor*\n  parent: System.Activities.Statements.Rethrow\n  isExternal: false\n  name: Rethrow\n  nameWithType: Rethrow.Rethrow\n- uid: System.Activities.Statements.Rethrow.CacheMetadata*\n  parent: System.Activities.Statements.Rethrow\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: Rethrow.CacheMetadata\n- uid: System.Activities.Statements.Rethrow.Execute*\n  parent: System.Activities.Statements.Rethrow\n  isExternal: false\n  name: Execute\n  nameWithType: Rethrow.Execute\n"}