{"nodes":[{"pos":[625,680],"content":"Identifies and installs components in the COM+ catalog.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies and installs components in the COM+ catalog.","pos":[0,55]}]},{"pos":[692,810],"content":"ComManagedImportUtil is used internally by the .NET Framework. You do not need to use the class directly in your code.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"ComManagedImportUtil is used internally by the .NET Framework. You do not need to use the class directly in your code.","pos":[0,118],"nodes":[{"content":"ComManagedImportUtil is used internally by the .NET Framework.","pos":[0,62]},{"content":"You do not need to use the class directly in your code.","pos":[63,118]}]}]},{"pos":[1649,1766],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.EnterpriseServices.Internal.ComManagedImportUtil\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.EnterpriseServices.Internal.ComManagedImportUtil\"></xref> class."},{"pos":[2583,2632],"content":"Gets the component information from the assembly.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the component information from the assembly.","pos":[0,49]}]},{"pos":[2644,2792],"content":"This method is called by the COM+ catalog to identify the class identifiers (CLSIDs) and ProgIDs of the components in a DLL before it is registered.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is called by the COM+ catalog to identify the class identifiers (CLSIDs) and ProgIDs of the components in a DLL before it is registered.","pos":[0,148]}]},{"pos":[3004,3029],"content":"The path to the assembly.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path to the assembly.","pos":[0,25]}]},{"pos":[3099,3190],"content":"When this method returns, this parameter contains the number of components in the assembly.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, this parameter contains the number of components in the assembly.","pos":[0,91]}]},{"pos":[3260,3347],"content":"When this method returns, this parameter contains the information about the components.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, this parameter contains the information about the components.","pos":[0,87]}]},{"pos":[3543,3782],"content":"<code>assemblyPath</code> is an empty string, contains only white space, or contains one or more invalid characters as defined by <xref:System.IO.Path.InvalidPathChars>.       -or-       The system could not retrieve the absolute path.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;assemblyPath&lt;/code&gt;</ph> is an empty string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref:System.IO.Path.InvalidPathChars&gt;</ph>.","pos":[0,169],"source":"<code>assemblyPath</code> is an empty string, contains only white space, or contains one or more invalid characters as defined by <xref:System.IO.Path.InvalidPathChars>."},{"content":"-or-       The system could not retrieve the absolute path.","pos":[176,235]}]},{"pos":[3896,3946],"content":"The caller does not have the required permissions.","needQuote":true,"needEscape":true,"nodes":[{"content":"The caller does not have the required permissions.","pos":[0,50]}]},{"pos":[4049,4139],"content":"<ph id=\"ph1\">&lt;code&gt;assemblyPath&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>assemblyPath</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[4242,4291],"content":"<ph id=\"ph1\">&lt;code&gt;assemblyPath&lt;/code&gt;</ph> contains a colon (\":\").","needQuote":true,"needEscape":true,"source":"<code>assemblyPath</code> contains a colon (\":\")."},{"pos":[4398,4608],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]},{"pos":[5250,5295],"content":"Installs an assembly into a COM+ application.","needQuote":true,"needEscape":true,"nodes":[{"content":"Installs an assembly into a COM+ application.","pos":[0,45]}]},{"pos":[5308,5837],"content":"InstallAssembly calls <xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A?displayProperty=fullName>, which performs the following steps:      1.  Registration of the assembly.      2.  Generation of a type library.      3.  Registration of the type library.      4.  Installation of the type library under the specified application.      5.  Configuration of the components contained in the type library.       This method requires the caller to have administrative privileges on the local computer.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"InstallAssembly calls <xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A?displayProperty=fullName>, which performs the following steps:      1.  Registration of the assembly.      2.  Generation of a type library.      3.  Registration of the type library.      4.  Installation of the type library under the specified application.      5.  Configuration of the components contained in the type library.       This method requires the caller to have administrative privileges on the local computer.","pos":[0,517],"nodes":[{"content":"InstallAssembly calls &lt;xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A?displayProperty=fullName&gt;, which performs the following steps:      1.","pos":[0,162],"source":"InstallAssembly calls <xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A?displayProperty=fullName>, which performs the following steps:      1."},{"content":"Registration of the assembly.","pos":[164,193]},{"content":"2.","pos":[199,201]},{"content":"Generation of a type library.","pos":[203,232]},{"content":"3.","pos":[238,240]},{"content":"Registration of the type library.","pos":[242,275]},{"content":"4.","pos":[281,283]},{"content":"Installation of the type library under the specified application.","pos":[285,350]},{"content":"5.","pos":[356,358]},{"content":"Configuration of the components contained in the type library.","pos":[360,422]},{"content":"This method requires the caller to have administrative privileges on the local computer.","pos":[429,517]}]}]},{"pos":[6019,6045],"content":"The path for the assembly.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path for the assembly.","pos":[0,26]}]},{"pos":[6109,6133],"content":"The COM+ partition name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The COM+ partition name.","pos":[0,24]}]},{"pos":[6197,6223],"content":"The COM+ application name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The COM+ application name.","pos":[0,26]}]},{"pos":[6435,6512],"content":"A caller in the call chain does not have permission to access unmanaged code.","needQuote":true,"needEscape":true,"nodes":[{"content":"A caller in the call chain does not have permission to access unmanaged code.","pos":[0,77]}]},{"pos":[6653,6700],"content":"The input assembly does not have a strong name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The input assembly does not have a strong name.","pos":[0,47]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.EnterpriseServices.Internal.ComManagedImportUtil\n  id: ComManagedImportUtil\n  children:\n  - System.EnterpriseServices.Internal.ComManagedImportUtil.#ctor\n  - System.EnterpriseServices.Internal.ComManagedImportUtil.GetComponentInfo(System.String,System.String@,System.String@)\n  - System.EnterpriseServices.Internal.ComManagedImportUtil.InstallAssembly(System.String,System.String,System.String)\n  langs:\n  - csharp\n  name: ComManagedImportUtil\n  nameWithType: ComManagedImportUtil\n  fullName: System.EnterpriseServices.Internal.ComManagedImportUtil\n  type: Class\n  summary: Identifies and installs components in the COM+ catalog.\n  remarks: ComManagedImportUtil is used internally by the .NET Framework. You do not need to use the class directly in your code.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.Guid(\"3b0398c9-7812-4007-85cb-18c771f2206f\")]\n\n      public class ComManagedImportUtil : System.EnterpriseServices.Internal.IComManagedImportUtil\n  inheritance:\n  - System.Object\n  implements:\n  - System.EnterpriseServices.Internal.IComManagedImportUtil\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.Internal.ComManagedImportUtil.#ctor\n  id: '#ctor'\n  parent: System.EnterpriseServices.Internal.ComManagedImportUtil\n  langs:\n  - csharp\n  name: ComManagedImportUtil()\n  nameWithType: ComManagedImportUtil.ComManagedImportUtil()\n  fullName: System.EnterpriseServices.Internal.ComManagedImportUtil.ComManagedImportUtil()\n  type: Constructor\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.Internal\n  summary: Initializes a new instance of the <xref href=\"System.EnterpriseServices.Internal.ComManagedImportUtil\"></xref> class.\n  syntax:\n    content: public ComManagedImportUtil ();\n    parameters: []\n  overload: System.EnterpriseServices.Internal.ComManagedImportUtil.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.Internal.ComManagedImportUtil.GetComponentInfo(System.String,System.String@,System.String@)\n  id: GetComponentInfo(System.String,System.String@,System.String@)\n  parent: System.EnterpriseServices.Internal.ComManagedImportUtil\n  langs:\n  - csharp\n  name: GetComponentInfo(String,String,String)\n  nameWithType: ComManagedImportUtil.GetComponentInfo(String,String,String)\n  fullName: System.EnterpriseServices.Internal.ComManagedImportUtil.GetComponentInfo(String,String,String)\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.Internal\n  summary: Gets the component information from the assembly.\n  remarks: This method is called by the COM+ catalog to identify the class identifiers (CLSIDs) and ProgIDs of the components in a DLL before it is registered.\n  syntax:\n    content: public void GetComponentInfo (string assemblyPath, out string numComponents, out string componentInfo);\n    parameters:\n    - id: assemblyPath\n      type: System.String\n      description: The path to the assembly.\n    - id: numComponents\n      type: System.String\n      description: When this method returns, this parameter contains the number of components in the assembly.\n    - id: componentInfo\n      type: System.String\n      description: When this method returns, this parameter contains the information about the components.\n  overload: System.EnterpriseServices.Internal.ComManagedImportUtil.GetComponentInfo*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>assemblyPath</code> is an empty string, contains only white space, or contains one or more invalid characters as defined by <xref:System.IO.Path.InvalidPathChars>.  \\n  \\n -or-  \\n  \\n The system could not retrieve the absolute path.\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permissions.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>assemblyPath</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>assemblyPath</code> contains a colon (\":\").\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  platform:\n  - net462\n- uid: System.EnterpriseServices.Internal.ComManagedImportUtil.InstallAssembly(System.String,System.String,System.String)\n  id: InstallAssembly(System.String,System.String,System.String)\n  parent: System.EnterpriseServices.Internal.ComManagedImportUtil\n  langs:\n  - csharp\n  name: InstallAssembly(String,String,String)\n  nameWithType: ComManagedImportUtil.InstallAssembly(String,String,String)\n  fullName: System.EnterpriseServices.Internal.ComManagedImportUtil.InstallAssembly(String,String,String)\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.Internal\n  summary: Installs an assembly into a COM+ application.\n  remarks: \"InstallAssembly calls <xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A?displayProperty=fullName>, which performs the following steps:  \\n  \\n1.  Registration of the assembly.  \\n  \\n2.  Generation of a type library.  \\n  \\n3.  Registration of the type library.  \\n  \\n4.  Installation of the type library under the specified application.  \\n  \\n5.  Configuration of the components contained in the type library.  \\n  \\n This method requires the caller to have administrative privileges on the local computer.\"\n  syntax:\n    content: public void InstallAssembly (string asmpath, string parname, string appname);\n    parameters:\n    - id: asmpath\n      type: System.String\n      description: The path for the assembly.\n    - id: parname\n      type: System.String\n      description: The COM+ partition name.\n    - id: appname\n      type: System.String\n      description: The COM+ application name.\n  overload: System.EnterpriseServices.Internal.ComManagedImportUtil.InstallAssembly*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: A caller in the call chain does not have permission to access unmanaged code.\n  - type: System.EnterpriseServices.RegistrationException\n    commentId: T:System.EnterpriseServices.RegistrationException\n    description: The input assembly does not have a strong name.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Security.SecurityException\n  isExternal: true\n  name: System.Security.SecurityException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.IO.PathTooLongException\n  isExternal: true\n  name: System.IO.PathTooLongException\n- uid: System.EnterpriseServices.RegistrationException\n  parent: System.EnterpriseServices\n  isExternal: false\n  name: RegistrationException\n  nameWithType: RegistrationException\n  fullName: System.EnterpriseServices.RegistrationException\n- uid: System.EnterpriseServices.Internal.ComManagedImportUtil.#ctor\n  parent: System.EnterpriseServices.Internal.ComManagedImportUtil\n  isExternal: false\n  name: ComManagedImportUtil()\n  nameWithType: ComManagedImportUtil.ComManagedImportUtil()\n  fullName: System.EnterpriseServices.Internal.ComManagedImportUtil.ComManagedImportUtil()\n- uid: System.EnterpriseServices.Internal.ComManagedImportUtil.GetComponentInfo(System.String,System.String@,System.String@)\n  parent: System.EnterpriseServices.Internal.ComManagedImportUtil\n  isExternal: false\n  name: GetComponentInfo(String,String,String)\n  nameWithType: ComManagedImportUtil.GetComponentInfo(String,String,String)\n  fullName: System.EnterpriseServices.Internal.ComManagedImportUtil.GetComponentInfo(String,String,String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.EnterpriseServices.Internal.ComManagedImportUtil.InstallAssembly(System.String,System.String,System.String)\n  parent: System.EnterpriseServices.Internal.ComManagedImportUtil\n  isExternal: false\n  name: InstallAssembly(String,String,String)\n  nameWithType: ComManagedImportUtil.InstallAssembly(String,String,String)\n  fullName: System.EnterpriseServices.Internal.ComManagedImportUtil.InstallAssembly(String,String,String)\n- uid: System.EnterpriseServices.Internal.ComManagedImportUtil.#ctor*\n  parent: System.EnterpriseServices.Internal.ComManagedImportUtil\n  isExternal: false\n  name: ComManagedImportUtil\n  nameWithType: ComManagedImportUtil.ComManagedImportUtil\n- uid: System.EnterpriseServices.Internal.ComManagedImportUtil.GetComponentInfo*\n  parent: System.EnterpriseServices.Internal.ComManagedImportUtil\n  isExternal: false\n  name: GetComponentInfo\n  nameWithType: ComManagedImportUtil.GetComponentInfo\n- uid: System.EnterpriseServices.Internal.ComManagedImportUtil.InstallAssembly*\n  parent: System.EnterpriseServices.Internal.ComManagedImportUtil\n  isExternal: false\n  name: InstallAssembly\n  nameWithType: ComManagedImportUtil.InstallAssembly\n"}