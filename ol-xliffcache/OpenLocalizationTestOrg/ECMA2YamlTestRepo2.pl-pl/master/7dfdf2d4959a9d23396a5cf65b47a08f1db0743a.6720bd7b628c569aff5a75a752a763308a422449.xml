{"nodes":[{"pos":[1121,1232],"content":"Represents the smallest and largest possible paragraph width that can fully contain the specified text content.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the smallest and largest possible paragraph width that can fully contain the specified text content.","pos":[0,111]}]},{"pos":[2526,2679],"content":"Determines whether the specified object is equal to the current <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Determines whether the specified object is equal to the current <xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"></xref> object."},{"pos":[2820,2962],"content":"The &lt;xref:System.Object&gt; to compare with the current <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The <xref:System.Object> to compare with the current <xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"></xref> object."},{"pos":[3021,3485],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>obj</code> is equal to the current <xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"></xref> object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. If <code>obj</code> is not a <xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"></xref> object, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> is returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p2\">&lt;/code&gt;</ept> is equal to the current <bpt id=\"p3\">&lt;xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> object; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","pos":[0,269],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>obj</code> is equal to the current <xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"></xref> object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> is returned.","pos":[270,464],"source":" If <code>obj</code> is not a <xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"></xref> object, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> is returned."}]},{"pos":[4201,4419],"content":"Determines whether the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is equal to the current <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Determines whether the <xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"></xref> is equal to the current <xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"></xref> object."},{"pos":[4648,4851],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare with the current <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"></xref> to compare with the current <xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"></xref> object."},{"pos":[4910,5181],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p2\">&lt;/code&gt;</ept> is equal to the current <bpt id=\"p3\">&lt;xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> object; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>value</code> is equal to the current <xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"></xref> object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[5746,5945],"content":"Serves as a hash function for <xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"></xref>. It is suitable for use in hashing algorithms and data structures such as a hash table.","needQuote":true,"needEscape":true,"nodes":[{"content":"Serves as a hash function for <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,112],"source":"Serves as a hash function for <xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"></xref>."},{"content":"It is suitable for use in hashing algorithms and data structures such as a hash table.","pos":[113,199]}]},{"pos":[6080,6162],"content":"An <xref:System.Int32> value that represents the hash code for the current object.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Int32&gt; value that represents the hash code for the current object.","pos":[0,82],"source":"An <xref:System.Int32> value that represents the hash code for the current object."}]},{"pos":[6713,6805],"content":"Gets the largest paragraph width possible that can fully contain the specified text content.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the largest paragraph width possible that can fully contain the specified text content.","pos":[0,92]}]},{"pos":[6918,6994],"content":"A <xref:System.Double> that represents the largest paragraph width possible.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Double&gt; that represents the largest paragraph width possible.","pos":[0,76],"source":"A <xref:System.Double> that represents the largest paragraph width possible."}]},{"pos":[7542,7635],"content":"Gets the smallest paragraph width possible that can fully contain the specified text content.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the smallest paragraph width possible that can fully contain the specified text content.","pos":[0,93]}]},{"pos":[7647,7747],"content":"The minimum paragraph width corresponds to the word that has the greatest width in the text content.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The minimum paragraph width corresponds to the word that has the greatest width in the text content.","pos":[0,100]}]},{"pos":[8318,8395],"content":"A <xref:System.Double> that represents the smallest paragraph width possible.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Double&gt; that represents the smallest paragraph width possible.","pos":[0,77],"source":"A <xref:System.Double> that represents the smallest paragraph width possible."}]},{"pos":[9317,9432],"content":"Compare two <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> strings for equality.","needQuote":true,"needEscape":true,"source":"Compare two <xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"></xref> strings for equality."},{"pos":[9735,9850],"content":"The first instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare.","needQuote":true,"needEscape":true,"source":"The first instance of <xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"></xref> to compare."},{"pos":[9955,10071],"content":"The second instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare.","needQuote":true,"needEscape":true,"source":"The second instance of <xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"></xref> to compare."},{"pos":[10130,10388],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to show the specified <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects are equal; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to show the specified <xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"></xref> objects are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11323,11440],"content":"Compare two <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects for inequality.","needQuote":true,"needEscape":true,"source":"Compare two <xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"></xref> objects for inequality."},{"pos":[11452,11660],"content":"The objects are equal if their <xref:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MinWidth%2A> and <xref:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MaxWidth%2A> properties are equal.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The objects are equal if their &lt;xref:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MinWidth%2A&gt; and &lt;xref:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MaxWidth%2A&gt; properties are equal.","pos":[0,208],"source":"The objects are equal if their <xref:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MinWidth%2A> and <xref:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MaxWidth%2A> properties are equal."}]},{"pos":[11965,12080],"content":"The first instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare.","needQuote":true,"needEscape":true,"source":"The first instance of <xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"></xref> to compare."},{"pos":[12185,12301],"content":"The second instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare.","needQuote":true,"needEscape":true,"source":"The second instance of <xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"></xref> to compare."},{"pos":[12360,12553],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to show <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p2\">&lt;/code&gt;</ept> is equal to <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">right</ph><ept id=\"p3\">&lt;/code&gt;</ept>; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to show <code>left</code> is equal to <code>right</code>; otherwise, <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  id: MinMaxParagraphWidth\n  children:\n  - System.Windows.Media.TextFormatting.MinMaxParagraphWidth.Equals(System.Object)\n  - System.Windows.Media.TextFormatting.MinMaxParagraphWidth.Equals(System.Windows.Media.TextFormatting.MinMaxParagraphWidth)\n  - System.Windows.Media.TextFormatting.MinMaxParagraphWidth.GetHashCode\n  - System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MaxWidth\n  - System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MinWidth\n  - System.Windows.Media.TextFormatting.MinMaxParagraphWidth.op_Equality(System.Windows.Media.TextFormatting.MinMaxParagraphWidth,System.Windows.Media.TextFormatting.MinMaxParagraphWidth)\n  - System.Windows.Media.TextFormatting.MinMaxParagraphWidth.op_Inequality(System.Windows.Media.TextFormatting.MinMaxParagraphWidth,System.Windows.Media.TextFormatting.MinMaxParagraphWidth)\n  langs:\n  - csharp\n  name: MinMaxParagraphWidth\n  nameWithType: MinMaxParagraphWidth\n  fullName: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  type: Struct\n  summary: Represents the smallest and largest possible paragraph width that can fully contain the specified text content.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the <xref:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MinWidth%2A> property to generate the minimum paragraph width for the formatted lines of text.  \\n  \\n [!code-vb[TextFormattingSnippets#TextFormattingSnippet3](~/add/codesnippet/visualbasic/textformattingsnippets/window1.xaml.vb#textformattingsnippet3)]\\n [!code-cs[TextFormattingSnippets#TextFormattingSnippet3](~/add/codesnippet/csharp/TextFormattingSnippets/Window1.xaml.cs#textformattingsnippet3)]\"\n  syntax:\n    content: 'public struct MinMaxParagraphWidth : IEquatable<System.Windows.Media.TextFormatting.MinMaxParagraphWidth>'\n  inheritance:\n  - System.ValueType\n  implements:\n  - System.IEquatable<System.Windows.Media.TextFormatting.MinMaxParagraphWidth>\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: MinMaxParagraphWidth.Equals(Object)\n  fullName: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.Equals(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Determines whether the specified object is equal to the current <xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"></xref> object.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The <xref:System.Object> to compare with the current <xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"></xref> object.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>obj</code> is equal to the current <xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"></xref> object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. If <code>obj</code> is not a <xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"></xref> object, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> is returned.\n  overload: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.Equals(System.Windows.Media.TextFormatting.MinMaxParagraphWidth)\n  id: Equals(System.Windows.Media.TextFormatting.MinMaxParagraphWidth)\n  parent: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  langs:\n  - csharp\n  name: Equals(MinMaxParagraphWidth)\n  nameWithType: MinMaxParagraphWidth.Equals(MinMaxParagraphWidth)\n  fullName: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.Equals(MinMaxParagraphWidth)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Determines whether the <xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"></xref> is equal to the current <xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"></xref> object.\n  syntax:\n    content: public bool Equals (System.Windows.Media.TextFormatting.MinMaxParagraphWidth value);\n    parameters:\n    - id: value\n      type: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n      description: The <xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"></xref> to compare with the current <xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"></xref> object.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>value</code> is equal to the current <xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"></xref> object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.GetHashCode\n  id: GetHashCode\n  parent: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: MinMaxParagraphWidth.GetHashCode()\n  fullName: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.GetHashCode()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Serves as a hash function for <xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"></xref>. It is suitable for use in hashing algorithms and data structures such as a hash table.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: An <xref:System.Int32> value that represents the hash code for the current object.\n  overload: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MaxWidth\n  id: MaxWidth\n  parent: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  langs:\n  - csharp\n  name: MaxWidth\n  nameWithType: MinMaxParagraphWidth.MaxWidth\n  fullName: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MaxWidth\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Gets the largest paragraph width possible that can fully contain the specified text content.\n  syntax:\n    content: public double MaxWidth { get; }\n    return:\n      type: System.Double\n      description: A <xref:System.Double> that represents the largest paragraph width possible.\n  overload: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MaxWidth*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MinWidth\n  id: MinWidth\n  parent: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  langs:\n  - csharp\n  name: MinWidth\n  nameWithType: MinMaxParagraphWidth.MinWidth\n  fullName: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MinWidth\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Gets the smallest paragraph width possible that can fully contain the specified text content.\n  remarks: The minimum paragraph width corresponds to the word that has the greatest width in the text content.\n  example:\n  - \"The following example shows how to use the MinWidth property to generate the minimum paragraph width for the formatted lines of text.  \\n  \\n [!code-vb[TextFormattingSnippets#TextFormattingSnippet3](~/add/codesnippet/visualbasic/textformattingsnippets/window1.xaml.vb#textformattingsnippet3)]\\n [!code-cs[TextFormattingSnippets#TextFormattingSnippet3](~/add/codesnippet/csharp/TextFormattingSnippets/Window1.xaml.cs#textformattingsnippet3)]\"\n  syntax:\n    content: public double MinWidth { get; }\n    return:\n      type: System.Double\n      description: A <xref:System.Double> that represents the smallest paragraph width possible.\n  overload: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MinWidth*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.op_Equality(System.Windows.Media.TextFormatting.MinMaxParagraphWidth,System.Windows.Media.TextFormatting.MinMaxParagraphWidth)\n  id: op_Equality(System.Windows.Media.TextFormatting.MinMaxParagraphWidth,System.Windows.Media.TextFormatting.MinMaxParagraphWidth)\n  parent: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  langs:\n  - csharp\n  name: op_Equality(MinMaxParagraphWidth,MinMaxParagraphWidth)\n  nameWithType: MinMaxParagraphWidth.op_Equality(MinMaxParagraphWidth,MinMaxParagraphWidth)\n  fullName: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.op_Equality(MinMaxParagraphWidth,MinMaxParagraphWidth)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Compare two <xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"></xref> strings for equality.\n  syntax:\n    content: public static bool op_Equality (System.Windows.Media.TextFormatting.MinMaxParagraphWidth left, System.Windows.Media.TextFormatting.MinMaxParagraphWidth right);\n    parameters:\n    - id: left\n      type: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n      description: The first instance of <xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"></xref> to compare.\n    - id: right\n      type: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n      description: The second instance of <xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"></xref> to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to show the specified <xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"></xref> objects are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.op_Inequality(System.Windows.Media.TextFormatting.MinMaxParagraphWidth,System.Windows.Media.TextFormatting.MinMaxParagraphWidth)\n  id: op_Inequality(System.Windows.Media.TextFormatting.MinMaxParagraphWidth,System.Windows.Media.TextFormatting.MinMaxParagraphWidth)\n  parent: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  langs:\n  - csharp\n  name: op_Inequality(MinMaxParagraphWidth,MinMaxParagraphWidth)\n  nameWithType: MinMaxParagraphWidth.op_Inequality(MinMaxParagraphWidth,MinMaxParagraphWidth)\n  fullName: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.op_Inequality(MinMaxParagraphWidth,MinMaxParagraphWidth)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Compare two <xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"></xref> objects for inequality.\n  remarks: The objects are equal if their <xref:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MinWidth%2A> and <xref:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MaxWidth%2A> properties are equal.\n  syntax:\n    content: public static bool op_Inequality (System.Windows.Media.TextFormatting.MinMaxParagraphWidth left, System.Windows.Media.TextFormatting.MinMaxParagraphWidth right);\n    parameters:\n    - id: left\n      type: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n      description: The first instance of <xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"></xref> to compare.\n    - id: right\n      type: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n      description: The second instance of <xref href=\"System.Windows.Media.TextFormatting.CharacterBufferReference\"></xref> to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to show <code>left</code> is equal to <code>right</code>; otherwise, <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.Equals(System.Object)\n  parent: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: MinMaxParagraphWidth.Equals(Object)\n  fullName: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.Equals(System.Windows.Media.TextFormatting.MinMaxParagraphWidth)\n  parent: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  isExternal: false\n  name: Equals(MinMaxParagraphWidth)\n  nameWithType: MinMaxParagraphWidth.Equals(MinMaxParagraphWidth)\n  fullName: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.Equals(MinMaxParagraphWidth)\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  parent: System.Windows.Media.TextFormatting\n  isExternal: false\n  name: MinMaxParagraphWidth\n  nameWithType: MinMaxParagraphWidth\n  fullName: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.GetHashCode\n  parent: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: MinMaxParagraphWidth.GetHashCode()\n  fullName: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MaxWidth\n  parent: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  isExternal: false\n  name: MaxWidth\n  nameWithType: MinMaxParagraphWidth.MaxWidth\n  fullName: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MaxWidth\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MinWidth\n  parent: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  isExternal: false\n  name: MinWidth\n  nameWithType: MinMaxParagraphWidth.MinWidth\n  fullName: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MinWidth\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.op_Equality(System.Windows.Media.TextFormatting.MinMaxParagraphWidth,System.Windows.Media.TextFormatting.MinMaxParagraphWidth)\n  parent: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  isExternal: false\n  name: op_Equality(MinMaxParagraphWidth,MinMaxParagraphWidth)\n  nameWithType: MinMaxParagraphWidth.op_Equality(MinMaxParagraphWidth,MinMaxParagraphWidth)\n  fullName: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.op_Equality(MinMaxParagraphWidth,MinMaxParagraphWidth)\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.op_Inequality(System.Windows.Media.TextFormatting.MinMaxParagraphWidth,System.Windows.Media.TextFormatting.MinMaxParagraphWidth)\n  parent: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  isExternal: false\n  name: op_Inequality(MinMaxParagraphWidth,MinMaxParagraphWidth)\n  nameWithType: MinMaxParagraphWidth.op_Inequality(MinMaxParagraphWidth,MinMaxParagraphWidth)\n  fullName: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.op_Inequality(MinMaxParagraphWidth,MinMaxParagraphWidth)\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.Equals*\n  parent: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  isExternal: false\n  name: Equals\n  nameWithType: MinMaxParagraphWidth.Equals\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.GetHashCode*\n  parent: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  isExternal: false\n  name: GetHashCode\n  nameWithType: MinMaxParagraphWidth.GetHashCode\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MaxWidth*\n  parent: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  isExternal: false\n  name: MaxWidth\n  nameWithType: MinMaxParagraphWidth.MaxWidth\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MinWidth*\n  parent: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  isExternal: false\n  name: MinWidth\n  nameWithType: MinMaxParagraphWidth.MinWidth\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.op_Equality*\n  parent: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  isExternal: false\n  name: op_Equality\n  nameWithType: MinMaxParagraphWidth.op_Equality\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.op_Inequality*\n  parent: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  isExternal: false\n  name: op_Inequality\n  nameWithType: MinMaxParagraphWidth.op_Inequality\n"}