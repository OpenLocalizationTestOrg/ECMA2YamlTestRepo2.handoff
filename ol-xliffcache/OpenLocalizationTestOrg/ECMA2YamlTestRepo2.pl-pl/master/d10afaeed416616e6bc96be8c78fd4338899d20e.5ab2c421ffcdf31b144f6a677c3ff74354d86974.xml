{"nodes":[{"pos":[692,761],"content":"Contains values passed to the ASP.NET compiler during precompilation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains values passed to the ASP.NET compiler during precompilation.","pos":[0,69]}]},{"pos":[774,2638],"content":"ASP.NET Web pages and code files can be precompiled to facilitate a faster response for users and allow for the deployment of the site without deploying the source code. For more information on precompiling an ASP.NET Web site, see [ASP.NET Web Site Project Precompilation Overview](~/add/includes/ajax-current-ext-md.md).       The ClientBuildManagerParameter class stores values that are used during precompilation. The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property determines how the assembly will be built. For example, you can set <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> to <xref:System.Web.Compilation.PrecompilationFlags> to recompile any previously compiled components, or set it to <xref:System.Web.Compilation.PrecompilationFlags> to permit the resulting assembly to overwrite any components in the target directory. The <xref:System.Web.Compilation.PrecompilationFlags> enumerator has a <xref:System.FlagsAttribute> attribute that allows a bitwise combination of its member values. The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property can contain more than one value from the <xref:System.Web.Compilation.PrecompilationFlags> enumeration to specify a combination of precompilation behaviors.       Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly. Both values do not need to be set to create a strong-named assembly.       A ClientBuildManagerParameter object is passed to the <xref:System.Web.Compilation.ClientBuildManager> object through the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"ASP.NET Web pages and code files can be precompiled to facilitate a faster response for users and allow for the deployment of the site without deploying the source code.","pos":[0,169]},{"content":"For more information on precompiling an ASP.NET Web site, see <bpt id=\"p1\">[</bpt>ASP.NET Web Site Project Precompilation Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[170,322],"source":" For more information on precompiling an ASP.NET Web site, see [ASP.NET Web Site Project Precompilation Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"The ClientBuildManagerParameter class stores values that are used during precompilation.","pos":[329,417]},{"content":"The &lt;xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A&gt; property determines how the assembly will be built.","pos":[418,554],"source":" The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property determines how the assembly will be built."},{"content":"For example, you can set &lt;xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A&gt; to &lt;xref:System.Web.Compilation.PrecompilationFlags&gt; to recompile any previously compiled components, or set it to &lt;xref:System.Web.Compilation.PrecompilationFlags&gt; to permit the resulting assembly to overwrite any components in the target directory.","pos":[555,911],"source":" For example, you can set <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> to <xref:System.Web.Compilation.PrecompilationFlags> to recompile any previously compiled components, or set it to <xref:System.Web.Compilation.PrecompilationFlags> to permit the resulting assembly to overwrite any components in the target directory."},{"content":"The &lt;xref:System.Web.Compilation.PrecompilationFlags&gt; enumerator has a &lt;xref:System.FlagsAttribute&gt; attribute that allows a bitwise combination of its member values.","pos":[912,1077],"source":" The <xref:System.Web.Compilation.PrecompilationFlags> enumerator has a <xref:System.FlagsAttribute> attribute that allows a bitwise combination of its member values."},{"content":"The &lt;xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A&gt; property can contain more than one value from the &lt;xref:System.Web.Compilation.PrecompilationFlags&gt; enumeration to specify a combination of precompilation behaviors.","pos":[1078,1328],"source":" The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property can contain more than one value from the <xref:System.Web.Compilation.PrecompilationFlags> enumeration to specify a combination of precompilation behaviors."},{"content":"Either the &lt;xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A&gt; property or the &lt;xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A&gt; property is assigned a value to create a strong-named assembly.","pos":[1335,1588],"source":"       Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly."},{"content":"Both values do not need to be set to create a strong-named assembly.","pos":[1589,1657]},{"content":"A ClientBuildManagerParameter object is passed to the &lt;xref:System.Web.Compilation.ClientBuildManager&gt; object through the &lt;xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt; constructor.","pos":[1664,1858],"source":"       A ClientBuildManagerParameter object is passed to the <xref:System.Web.Compilation.ClientBuildManager> object through the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor."}]},{"pos":[3917,4029],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Compilation.ClientBuildManagerParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Compilation.ClientBuildManagerParameter\"></xref> class."},{"pos":[4041,4431],"content":"This constructor does not initialize any property values. Those values must be set through the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>, <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>, and <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> properties after the object has been created.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This constructor does not initialize any property values. Those values must be set through the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>, <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>, and <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> properties after the object has been created.","pos":[0,390],"nodes":[{"content":"This constructor does not initialize any property values.","pos":[0,57]},{"content":"Those values must be set through the &lt;xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A&gt;, &lt;xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A&gt;, and &lt;xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A&gt; properties after the object has been created.","pos":[58,390],"source":" Those values must be set through the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>, <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>, and <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> properties after the object has been created."}]}]},{"pos":[5764,5800],"content":"Gets or sets excluded virtual paths.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets excluded virtual paths.","pos":[0,36]}]},{"pos":[5991,6014],"content":"Excluded virtual paths.","needQuote":true,"needEscape":true,"nodes":[{"content":"Excluded virtual paths.","pos":[0,23]}]},{"pos":[6593,6655],"content":"Gets or sets the flags that determine precompilation behavior.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the flags that determine precompilation behavior.","pos":[0,62]}]},{"pos":[6667,7394],"content":"The PrecompilationFlags property determines how the assembly will be built. For example, you can set PrecompilationFlags to <xref:System.Web.Compilation.PrecompilationFlags> to recompile any previously compiled components, or set it to <xref:System.Web.Compilation.PrecompilationFlags> to permit the resulting assembly to overwrite any components in the target directory. The <xref:System.Web.Compilation.PrecompilationFlags> enumerator has a <xref:System.FlagsAttribute> attribute that allows a bitwise combination of its member values. The PrecompilationFlags property can contain more than one value from the <xref:System.Web.Compilation.PrecompilationFlags> enumeration to specify a combination of precompilation behaviors.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The PrecompilationFlags property determines how the assembly will be built. For example, you can set PrecompilationFlags to <xref:System.Web.Compilation.PrecompilationFlags> to recompile any previously compiled components, or set it to <xref:System.Web.Compilation.PrecompilationFlags> to permit the resulting assembly to overwrite any components in the target directory. The <xref:System.Web.Compilation.PrecompilationFlags> enumerator has a <xref:System.FlagsAttribute> attribute that allows a bitwise combination of its member values. The PrecompilationFlags property can contain more than one value from the <xref:System.Web.Compilation.PrecompilationFlags> enumeration to specify a combination of precompilation behaviors.","pos":[0,727],"nodes":[{"content":"The PrecompilationFlags property determines how the assembly will be built.","pos":[0,75]},{"content":"For example, you can set PrecompilationFlags to &lt;xref:System.Web.Compilation.PrecompilationFlags&gt; to recompile any previously compiled components, or set it to &lt;xref:System.Web.Compilation.PrecompilationFlags&gt; to permit the resulting assembly to overwrite any components in the target directory.","pos":[76,371],"source":" For example, you can set PrecompilationFlags to <xref:System.Web.Compilation.PrecompilationFlags> to recompile any previously compiled components, or set it to <xref:System.Web.Compilation.PrecompilationFlags> to permit the resulting assembly to overwrite any components in the target directory."},{"content":"The &lt;xref:System.Web.Compilation.PrecompilationFlags&gt; enumerator has a &lt;xref:System.FlagsAttribute&gt; attribute that allows a bitwise combination of its member values.","pos":[372,537],"source":" The <xref:System.Web.Compilation.PrecompilationFlags> enumerator has a <xref:System.FlagsAttribute> attribute that allows a bitwise combination of its member values."},{"content":"The PrecompilationFlags property can contain more than one value from the &lt;xref:System.Web.Compilation.PrecompilationFlags&gt; enumeration to specify a combination of precompilation behaviors.","pos":[538,727],"source":" The PrecompilationFlags property can contain more than one value from the <xref:System.Web.Compilation.PrecompilationFlags> enumeration to specify a combination of precompilation behaviors."}]}]},{"pos":[8275,8362],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.Compilation.PrecompilationFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for a client build.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.Compilation.PrecompilationFlags\"></xref> for a client build."},{"pos":[8955,9010],"content":"Gets or sets the key container used during compilation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the key container used during compilation.","pos":[0,55]}]},{"pos":[9022,9283],"content":"Either the StrongNameKeyContainer property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly. Both values do not need to be set to create a strong-named assembly.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Either the StrongNameKeyContainer property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly. Both values do not need to be set to create a strong-named assembly.","pos":[0,261],"nodes":[{"content":"Either the StrongNameKeyContainer property or the &lt;xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A&gt; property is assigned a value to create a strong-named assembly.","pos":[0,192],"source":"Either the StrongNameKeyContainer property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly."},{"content":"Both values do not need to be set to create a strong-named assembly.","pos":[193,261]}]}]},{"pos":[10013,10071],"content":"A <xref:System.String> of the value for the key container.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; of the value for the key container.","pos":[0,58],"source":"A <xref:System.String> of the value for the key container."}]},{"pos":[10642,10692],"content":"Gets or sets the key file used during compilation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the key file used during compilation.","pos":[0,50]}]},{"pos":[10704,10965],"content":"Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the StrongNameKeyFile property is assigned a value to create a strong-named assembly. Both values do not need to be set to create a strong-named assembly.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the StrongNameKeyFile property is assigned a value to create a strong-named assembly. Both values do not need to be set to create a strong-named assembly.","pos":[0,261],"nodes":[{"content":"Either the &lt;xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A&gt; property or the StrongNameKeyFile property is assigned a value to create a strong-named assembly.","pos":[0,192],"source":"Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the StrongNameKeyFile property is assigned a value to create a strong-named assembly."},{"content":"Both values do not need to be set to create a strong-named assembly.","pos":[193,261]}]}]},{"pos":[11779,11832],"content":"A <xref:System.String> of the value for the key file.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; of the value for the key file.","pos":[0,53],"source":"A <xref:System.String> of the value for the key file."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Compilation.ClientBuildManagerParameter\n  id: ClientBuildManagerParameter\n  children:\n  - System.Web.Compilation.ClientBuildManagerParameter.#ctor\n  - System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths\n  - System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags\n  - System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer\n  - System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile\n  langs:\n  - csharp\n  name: ClientBuildManagerParameter\n  nameWithType: ClientBuildManagerParameter\n  fullName: System.Web.Compilation.ClientBuildManagerParameter\n  type: Class\n  summary: Contains values passed to the ASP.NET compiler during precompilation.\n  remarks: \"ASP.NET Web pages and code files can be precompiled to facilitate a faster response for users and allow for the deployment of the site without deploying the source code. For more information on precompiling an ASP.NET Web site, see [ASP.NET Web Site Project Precompilation Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The ClientBuildManagerParameter class stores values that are used during precompilation. The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property determines how the assembly will be built. For example, you can set <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> to <xref:System.Web.Compilation.PrecompilationFlags> to recompile any previously compiled components, or set it to <xref:System.Web.Compilation.PrecompilationFlags> to permit the resulting assembly to overwrite any components in the target directory. The <xref:System.Web.Compilation.PrecompilationFlags> enumerator has a <xref:System.FlagsAttribute> attribute that allows a bitwise combination of its member values. The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property can contain more than one value from the <xref:System.Web.Compilation.PrecompilationFlags> enumeration to specify a combination of precompilation behaviors.  \\n  \\n Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly. Both values do not need to be set to create a strong-named assembly.  \\n  \\n A ClientBuildManagerParameter object is passed to the <xref:System.Web.Compilation.ClientBuildManager> object through the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor.\"\n  example:\n  - \"The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview. In the example, a ClientBuildManagerParameter object is created and its values set. The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.  \\n  \\n [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/visualbasic/t-system.web.compilation_9_1.vb)]\\n [!code-cs[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/csharp/t-system.web.compilation_9_1.cs)]\"\n  syntax:\n    content: public class ClientBuildManagerParameter\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.Compilation.ClientBuildManagerParameter.#ctor\n  id: '#ctor'\n  parent: System.Web.Compilation.ClientBuildManagerParameter\n  langs:\n  - csharp\n  name: ClientBuildManagerParameter()\n  nameWithType: ClientBuildManagerParameter.ClientBuildManagerParameter()\n  fullName: System.Web.Compilation.ClientBuildManagerParameter.ClientBuildManagerParameter()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Initializes a new instance of the <xref href=\"System.Web.Compilation.ClientBuildManagerParameter\"></xref> class.\n  remarks: This constructor does not initialize any property values. Those values must be set through the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>, <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>, and <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> properties after the object has been created.\n  example:\n  - \"The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview. In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set. The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.  \\n  \\n [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/visualbasic/m-system.web.compilation_1.vb)]\\n [!code-cs[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/csharp/m-system.web.compilation_1.cs)]\"\n  syntax:\n    content: public ClientBuildManagerParameter ();\n    parameters: []\n  overload: System.Web.Compilation.ClientBuildManagerParameter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths\n  id: ExcludedVirtualPaths\n  parent: System.Web.Compilation.ClientBuildManagerParameter\n  langs:\n  - csharp\n  name: ExcludedVirtualPaths\n  nameWithType: ClientBuildManagerParameter.ExcludedVirtualPaths\n  fullName: System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Gets or sets excluded virtual paths.\n  syntax:\n    content: public System.Collections.Generic.List<string> ExcludedVirtualPaths { get; }\n    return:\n      type: System.Collections.Generic.List{System.String}\n      description: Excluded virtual paths.\n  overload: System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags\n  id: PrecompilationFlags\n  parent: System.Web.Compilation.ClientBuildManagerParameter\n  langs:\n  - csharp\n  name: PrecompilationFlags\n  nameWithType: ClientBuildManagerParameter.PrecompilationFlags\n  fullName: System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Gets or sets the flags that determine precompilation behavior.\n  remarks: The PrecompilationFlags property determines how the assembly will be built. For example, you can set PrecompilationFlags to <xref:System.Web.Compilation.PrecompilationFlags> to recompile any previously compiled components, or set it to <xref:System.Web.Compilation.PrecompilationFlags> to permit the resulting assembly to overwrite any components in the target directory. The <xref:System.Web.Compilation.PrecompilationFlags> enumerator has a <xref:System.FlagsAttribute> attribute that allows a bitwise combination of its member values. The PrecompilationFlags property can contain more than one value from the <xref:System.Web.Compilation.PrecompilationFlags> enumeration to specify a combination of precompilation behaviors.\n  example:\n  - \"The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview. In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set. The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.  \\n  \\n [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/visualbasic/p-system.web.compilation_3_1.vb)]\\n [!code-cs[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/csharp/p-system.web.compilation_3_1.cs)]\"\n  syntax:\n    content: public System.Web.Compilation.PrecompilationFlags PrecompilationFlags { get; set; }\n    return:\n      type: System.Web.Compilation.PrecompilationFlags\n      description: The <xref href=\"System.Web.Compilation.PrecompilationFlags\"></xref> for a client build.\n  overload: System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer\n  id: StrongNameKeyContainer\n  parent: System.Web.Compilation.ClientBuildManagerParameter\n  langs:\n  - csharp\n  name: StrongNameKeyContainer\n  nameWithType: ClientBuildManagerParameter.StrongNameKeyContainer\n  fullName: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Gets or sets the key container used during compilation.\n  remarks: Either the StrongNameKeyContainer property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly. Both values do not need to be set to create a strong-named assembly.\n  example:\n  - \"The following code example is similar to the code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview except that the resulting assembly will have a strong name based on the provided key container. It will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.  \\n  \\n [!code-cs[System.Web.Compilation.ClientBuildManager_2#1](~/add/codesnippet/csharp/p-system.web.compilation_1_1.cs)]\\n [!code-vb[System.Web.Compilation.ClientBuildManager_2#1](~/add/codesnippet/visualbasic/p-system.web.compilation_1_1.vb)]\"\n  syntax:\n    content: public string StrongNameKeyContainer { get; set; }\n    return:\n      type: System.String\n      description: A <xref:System.String> of the value for the key container.\n  overload: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile\n  id: StrongNameKeyFile\n  parent: System.Web.Compilation.ClientBuildManagerParameter\n  langs:\n  - csharp\n  name: StrongNameKeyFile\n  nameWithType: ClientBuildManagerParameter.StrongNameKeyFile\n  fullName: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Gets or sets the key file used during compilation.\n  remarks: Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the StrongNameKeyFile property is assigned a value to create a strong-named assembly. Both values do not need to be set to create a strong-named assembly.\n  example:\n  - \"The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview. In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set. The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.  \\n  \\n [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/visualbasic/p-system.web.compilation_2_1.vb)]\\n [!code-cs[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/csharp/p-system.web.compilation_2_1.cs)]\"\n  syntax:\n    content: public string StrongNameKeyFile { get; set; }\n    return:\n      type: System.String\n      description: A <xref:System.String> of the value for the key file.\n  overload: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Web.Compilation.ClientBuildManagerParameter.#ctor\n  parent: System.Web.Compilation.ClientBuildManagerParameter\n  isExternal: false\n  name: ClientBuildManagerParameter()\n  nameWithType: ClientBuildManagerParameter.ClientBuildManagerParameter()\n  fullName: System.Web.Compilation.ClientBuildManagerParameter.ClientBuildManagerParameter()\n- uid: System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths\n  parent: System.Web.Compilation.ClientBuildManagerParameter\n  isExternal: false\n  name: ExcludedVirtualPaths\n  nameWithType: ClientBuildManagerParameter.ExcludedVirtualPaths\n  fullName: System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths\n- uid: System.Collections.Generic.List{System.String}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: List<String>\n  nameWithType: List<String>\n  fullName: System.Collections.Generic.List<System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.List`1\n    name: List\n    nameWithType: List\n    fullName: List<System.String>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags\n  parent: System.Web.Compilation.ClientBuildManagerParameter\n  isExternal: false\n  name: PrecompilationFlags\n  nameWithType: ClientBuildManagerParameter.PrecompilationFlags\n  fullName: System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags\n- uid: System.Web.Compilation.PrecompilationFlags\n  parent: System.Web.Compilation\n  isExternal: false\n  name: PrecompilationFlags\n  nameWithType: PrecompilationFlags\n  fullName: System.Web.Compilation.PrecompilationFlags\n- uid: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer\n  parent: System.Web.Compilation.ClientBuildManagerParameter\n  isExternal: false\n  name: StrongNameKeyContainer\n  nameWithType: ClientBuildManagerParameter.StrongNameKeyContainer\n  fullName: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile\n  parent: System.Web.Compilation.ClientBuildManagerParameter\n  isExternal: false\n  name: StrongNameKeyFile\n  nameWithType: ClientBuildManagerParameter.StrongNameKeyFile\n  fullName: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile\n- uid: System.Web.Compilation.ClientBuildManagerParameter.#ctor*\n  parent: System.Web.Compilation.ClientBuildManagerParameter\n  isExternal: false\n  name: ClientBuildManagerParameter\n  nameWithType: ClientBuildManagerParameter.ClientBuildManagerParameter\n- uid: System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths*\n  parent: System.Web.Compilation.ClientBuildManagerParameter\n  isExternal: false\n  name: ExcludedVirtualPaths\n  nameWithType: ClientBuildManagerParameter.ExcludedVirtualPaths\n- uid: System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags*\n  parent: System.Web.Compilation.ClientBuildManagerParameter\n  isExternal: false\n  name: PrecompilationFlags\n  nameWithType: ClientBuildManagerParameter.PrecompilationFlags\n- uid: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer*\n  parent: System.Web.Compilation.ClientBuildManagerParameter\n  isExternal: false\n  name: StrongNameKeyContainer\n  nameWithType: ClientBuildManagerParameter.StrongNameKeyContainer\n- uid: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile*\n  parent: System.Web.Compilation.ClientBuildManagerParameter\n  isExternal: false\n  name: StrongNameKeyFile\n  nameWithType: ClientBuildManagerParameter.StrongNameKeyFile\n"}