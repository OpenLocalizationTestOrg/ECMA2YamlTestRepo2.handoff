{"nodes":[{"pos":[1278,1420],"content":"A token handler for encrypted security tokens. Handles tokens of type <xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A token handler for encrypted security tokens.","pos":[0,46]},{"content":"Handles tokens of type <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[47,142],"source":" Handles tokens of type <xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"></xref>."}]},{"pos":[1432,1818],"content":"A token handler that serializes and deserializes &lt;xref:System.IdentityModel.Tokens.EncryptedSecurityToken&gt; objects from <ph id=\"ph1\">`&lt;xenc:EncryptedData&gt;`</ph> elements and &lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause&gt; objects from <ph id=\"ph2\">`&lt;xenc:EncryptedKey&gt;`</ph> elements as defined in the XML Encryption Syntax and Processing specification (http://www.w3.org/TR/2002/REC-xmlenc-core-20021210).","needQuote":true,"needEscape":true,"extradata":"MT","source":"A token handler that serializes and deserializes <xref:System.IdentityModel.Tokens.EncryptedSecurityToken> objects from `<xenc:EncryptedData>` elements and <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> objects from `<xenc:EncryptedKey>` elements as defined in the XML Encryption Syntax and Processing specification (http://www.w3.org/TR/2002/REC-xmlenc-core-20021210)."},{"pos":[4344,4463],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\"></xref> class."},{"pos":[5265,5581],"content":"Returns a value that indicates whether the current XML element is pointing to an <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;xenc:EncryptedKey&amp;gt;\" name=\"&amp;lt;xenc:EncryptedKey&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element that can be deserialized to a <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> by this instance.","needQuote":true,"needEscape":true,"source":"Returns a value that indicates whether the current XML element is pointing to an <xref uid=\"langword_csharp_&lt;xenc:EncryptedKey&gt;\" name=\"&lt;xenc:EncryptedKey&gt;\" href=\"\"></xref> element that can be deserialized to a <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> by this instance."},{"pos":[5769,5850],"content":"An XML reader positioned at the start element. The reader should not be advanced.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML reader positioned at the start element. The reader should not be advanced.","pos":[0,81],"nodes":[{"content":"An XML reader positioned at the start element.","pos":[0,46]},{"content":"The reader should not be advanced.","pos":[47,81]}]}]},{"pos":[5909,6333],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the XML reader is positioned at an <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_&amp;lt;xenc:EncryptedKey&amp;gt;\" name=\"&amp;lt;xenc:EncryptedKey&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> element as defined in section 3.5.1 of the XML Encryption Syntax and Processing specification (http://www.w3.org/TR/2002/REC-xmlenc-core-20021210); otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the XML reader is positioned at an <xref uid=\"langword_csharp_&lt;xenc:EncryptedKey&gt;\" name=\"&lt;xenc:EncryptedKey&gt;\" href=\"\"></xref> element as defined in section 3.5.1 of the XML Encryption Syntax and Processing specification (http://www.w3.org/TR/2002/REC-xmlenc-core-20021210); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6548,6632],"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[7187,7368],"content":"Returns a value that indicates whether the reader is pointing to an <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;xenc:EncryptedData&amp;gt;\" name=\"&amp;lt;xenc:EncryptedData&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element.","needQuote":true,"needEscape":true,"source":"Returns a value that indicates whether the reader is pointing to an <xref uid=\"langword_csharp_&lt;xenc:EncryptedData&gt;\" name=\"&lt;xenc:EncryptedData&gt;\" href=\"\"></xref> element."},{"pos":[7380,7429],"content":"Does not move the reader when it returns <ph id=\"ph1\">`false`</ph>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"Does not move the reader when it returns `false`."},{"pos":[7603,7760],"content":"The reader positioned at a security token (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;xenc:EncryptedData&amp;gt;\" name=\"&amp;lt;xenc:EncryptedData&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element.)","needQuote":true,"needEscape":true,"source":"The reader positioned at a security token (<xref uid=\"langword_csharp_&lt;xenc:EncryptedData&gt;\" name=\"&lt;xenc:EncryptedData&gt;\" href=\"\"></xref> element.)"},{"pos":[7819,8102],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the reader is positioned at an <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_&amp;lt;xenc:EncryptedData&amp;gt;\" name=\"&amp;lt;xenc:EncryptedData&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> element; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the reader is positioned at an <xref uid=\"langword_csharp_&lt;xenc:EncryptedData&gt;\" name=\"&lt;xenc:EncryptedData&gt;\" href=\"\"></xref> element; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8688,8784],"content":"Gets a value that indicates whether the handler provides serialization functionality for tokens.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the handler provides serialization functionality for tokens.","pos":[0,96]}]},{"pos":[8910,9151],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the handler can serialize tokens; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the handler can serialize tokens; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,172],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the handler can serialize tokens; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"Always <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[173,241],"source":" Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[9792,9865],"content":"Gets the type identifier URIs for tokens handled by the current instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the type identifier URIs for tokens handled by the current instance.","pos":[0,73]}]},{"pos":[10020,10290],"content":"By default, returns an array with a single <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> string because there is not a specific token type identifier that is associated with the <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> type.","needQuote":true,"needEscape":true,"source":"By default, returns an array with a single <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> string because there is not a specific token type identifier that is associated with the <xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"></xref> type."},{"pos":[10907,11185],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that will be used to serialize and deserialize key identifiers from the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_&amp;lt;xenc:EncryptedData&amp;gt;\" name=\"&amp;lt;xenc:EncryptedData&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> element.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"></xref> that will be used to serialize and deserialize key identifiers from the <xref uid=\"langword_csharp_&lt;xenc:EncryptedData&gt;\" name=\"&lt;xenc:EncryptedData&gt;\" href=\"\"></xref> element."},{"pos":[11401,11482],"content":"The token serializer that will be used to read and write key the key identifiers.","needQuote":true,"needEscape":true,"nodes":[{"content":"The token serializer that will be used to read and write key the key identifiers.","pos":[0,81]}]},{"pos":[11688,11790],"content":"An attempt to set the property to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> occurs.","needQuote":true,"needEscape":true,"source":"An attempt to set the property to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> occurs."},{"pos":[12400,12506],"content":"Reads an <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from an XML stream.","needQuote":true,"needEscape":true,"source":"Reads an <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\"></xref> from an XML stream."},{"pos":[12742,13026],"content":"An XML reader positioned at an <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;xenc:EncryptedKey&amp;gt;\" name=\"&amp;lt;xenc:EncryptedKey&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element as defined in 'http://www.w3.org/TR/2002/REC-xmlenc-core-20021210'; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An XML reader positioned at an <xref uid=\"langword_csharp_&lt;xenc:EncryptedKey&gt;\" name=\"&lt;xenc:EncryptedKey&gt;\" href=\"\"></xref> element as defined in 'http://www.w3.org/TR/2002/REC-xmlenc-core-20021210'; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[13126,13236],"content":"A key identifier clause of type <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A key identifier clause of type <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\"></xref>."},{"pos":[13448,13532],"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[13643,13798],"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is not positioned at an <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;xenc:EncryptedKey&amp;gt;\" name=\"&amp;lt;xenc:EncryptedKey&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element.","needQuote":true,"needEscape":true,"source":"<code>reader</code> is not positioned at an <xref uid=\"langword_csharp_&lt;xenc:EncryptedKey&gt;\" name=\"&lt;xenc:EncryptedKey&gt;\" href=\"\"></xref> element."},{"pos":[14338,14372],"content":"Reads an encrypted security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reads an encrypted security token.","pos":[0,34]}]},{"pos":[14580,14620],"content":"The reader from which to read the token.","needQuote":true,"needEscape":true,"nodes":[{"content":"The reader from which to read the token.","pos":[0,40]}]},{"pos":[14706,14803],"content":"A security token of type <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A security token of type <xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"></xref>."},{"pos":[15001,15085],"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[15197,16112],"content":"There is no configured service token resolver. (Either the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A?displayProperty=fullName&gt; property or the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.ServiceTokenResolver%2A?displayProperty=fullName&gt; property of the referenced token handler configuration is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>. A service token resolver is required to obtain keys for decryption.       -or-       The <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerCollection\"></xref>Referenced through the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection*> property is unable to find a <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler\"></xref> that can read the decrypted XML and return a <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"There is no configured service token resolver.","pos":[0,46]},{"content":"(Either the <ph id=\"ph1\">&amp;lt;</ph>xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> property or the <ph id=\"ph3\">&amp;lt;</ph>xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.ServiceTokenResolver%2A?displayProperty=fullName<ph id=\"ph4\">&amp;gt;</ph> property of the referenced token handler configuration is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[47,422],"source":" (Either the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A?displayProperty=fullName&gt; property or the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.ServiceTokenResolver%2A?displayProperty=fullName&gt; property of the referenced token handler configuration is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"A service token resolver is required to obtain keys for decryption.","pos":[423,490]},{"content":"-or-       The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>Referenced through the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection*&gt; property is unable to find a <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> that can read the decrypted XML and return a <bpt id=\"p3\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[497,899],"source":"       -or-       The <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerCollection\"></xref>Referenced through the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection*> property is unable to find a <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler\"></xref> that can read the decrypted XML and return a <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref>."}]},{"pos":[16261,16569],"content":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> is not found inside the XML pointed to by the reader.       -or-       The <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> is not a <xref href=\"System.IdentityModel.Tokens.SymmetricSecurityKey\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is not found inside the XML pointed to by the reader.","pos":[0,126],"source":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> is not found inside the XML pointed to by the reader."},{"content":"-or-       The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is not a <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Tokens.SymmetricSecurityKey\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[133,298],"source":"       -or-       The <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> is not a <xref href=\"System.IdentityModel.Tokens.SymmetricSecurityKey\"></xref>."}]},{"pos":[16751,16973],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> found inside the XML cannot be resolved by the configured service token resolver to a <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKey\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> found inside the XML cannot be resolved by the configured service token resolver to a <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref>."},{"pos":[17438,17497],"content":"Gets the type of the token handled by the current instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the type of the token handled by the current instance.","pos":[0,59]}]},{"pos":[17616,17815],"content":"The token type handled by the current instance. The default is <xref uid=\"langword_csharp_typeof\" name=\"typeof\" href=\"\"></xref><xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The token type handled by the current instance.","pos":[0,47]},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_typeof\" name=\"typeof\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept><bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[48,199],"source":" The default is <xref uid=\"langword_csharp_typeof\" name=\"typeof\" href=\"\"></xref><xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"></xref>."}]},{"pos":[18584,18640],"content":"Writes an encrypted security token using the XML writer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Writes an encrypted security token using the XML writer.","pos":[0,56]}]},{"pos":[18861,18914],"content":"The XML writer to which to write the encrypted token.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML writer to which to write the encrypted token.","pos":[0,53]}]},{"pos":[19004,19129],"content":"The encrypted security token, must be an instance of <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The encrypted security token, must be an instance of <xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"></xref>."},{"pos":[19329,19530],"content":"<code>writer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>token</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;writer&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,84],"source":"<code>writer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[91,185],"source":"       -or-       <code>token</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[19626,19738],"content":"<ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> is not assignable as <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>token</code> is not assignable as <xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"></xref>."},{"pos":[19850,20552],"content":"The &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A?displayProperty=fullName&gt; property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>. This property is required for obtaining keys for encryption.       -or-       The token handler collection returned by the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection*> property was unable to find a <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler\"></xref> that can write the <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> returned by the &lt;xref:System.IdentityModel.Tokens.EncryptedSecurityToken.Token%2A?displayProperty=fullName&gt; property.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">&amp;lt;</ph>xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> property is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,181],"source":"The &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A?displayProperty=fullName&gt; property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"This property is required for obtaining keys for encryption.","pos":[182,242]},{"content":"-or-       The token handler collection returned by the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection*&gt; property was unable to find a <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that can write the <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> returned by the <ph id=\"ph1\">&amp;lt;</ph>xref:System.IdentityModel.Tokens.EncryptedSecurityToken.Token%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> property.","pos":[249,688],"source":"       -or-       The token handler collection returned by the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection*> property was unable to find a <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler\"></xref> that can write the <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> returned by the &lt;xref:System.IdentityModel.Tokens.EncryptedSecurityToken.Token%2A?displayProperty=fullName&gt; property."}]},{"pos":[20700,20907],"content":"The <ph id=\"ph1\">&amp;lt;</ph>xref:System.IdentityModel.Tokens.EncryptingCredentials.SecurityKey%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> property is not assignable as <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SymmetricSecurityKey\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The &lt;xref:System.IdentityModel.Tokens.EncryptingCredentials.SecurityKey%2A?displayProperty=fullName&gt; property is not assignable as <xref href=\"System.IdentityModel.Tokens.SymmetricSecurityKey\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  id: EncryptedSecurityTokenHandler\n  children:\n  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.#ctor\n  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanWriteToken\n  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers\n  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.KeyInfoSerializer\n  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadToken(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.TokenType\n  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  langs:\n  - csharp\n  name: EncryptedSecurityTokenHandler\n  nameWithType: EncryptedSecurityTokenHandler\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  type: Class\n  summary: A token handler for encrypted security tokens. Handles tokens of type <xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"></xref>.\n  remarks: A token handler that serializes and deserializes <xref:System.IdentityModel.Tokens.EncryptedSecurityToken> objects from `<xenc:EncryptedData>` elements and <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> objects from `<xenc:EncryptedKey>` elements as defined in the XML Encryption Syntax and Processing specification (http://www.w3.org/TR/2002/REC-xmlenc-core-20021210).\n  syntax:\n    content: 'public class EncryptedSecurityTokenHandler : System.IdentityModel.Tokens.SecurityTokenHandler'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Tokens.SecurityTokenHandler\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.Configuration\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  langs:\n  - csharp\n  name: EncryptedSecurityTokenHandler()\n  nameWithType: EncryptedSecurityTokenHandler.EncryptedSecurityTokenHandler()\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.EncryptedSecurityTokenHandler()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\"></xref> class.\n  syntax:\n    content: public EncryptedSecurityTokenHandler ();\n    parameters: []\n  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  id: CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  langs:\n  - csharp\n  name: CanReadKeyIdentifierClause(XmlReader)\n  nameWithType: EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns a value that indicates whether the current XML element is pointing to an <xref uid=\"langword_csharp_&lt;xenc:EncryptedKey&gt;\" name=\"&lt;xenc:EncryptedKey&gt;\" href=\"\"></xref> element that can be deserialized to a <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> by this instance.\n  syntax:\n    content: public override bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: An XML reader positioned at the start element. The reader should not be advanced.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the XML reader is positioned at an <xref uid=\"langword_csharp_&lt;xenc:EncryptedKey&gt;\" name=\"&lt;xenc:EncryptedKey&gt;\" href=\"\"></xref> element as defined in section 3.5.1 of the XML Encryption Syntax and Processing specification (http://www.w3.org/TR/2002/REC-xmlenc-core-20021210); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)\n  id: CanReadToken(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  langs:\n  - csharp\n  name: CanReadToken(XmlReader)\n  nameWithType: EncryptedSecurityTokenHandler.CanReadToken(XmlReader)\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadToken(XmlReader)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns a value that indicates whether the reader is pointing to an <xref uid=\"langword_csharp_&lt;xenc:EncryptedData&gt;\" name=\"&lt;xenc:EncryptedData&gt;\" href=\"\"></xref> element.\n  remarks: Does not move the reader when it returns `false`.\n  syntax:\n    content: public override bool CanReadToken (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: The reader positioned at a security token (<xref uid=\"langword_csharp_&lt;xenc:EncryptedData&gt;\" name=\"&lt;xenc:EncryptedData&gt;\" href=\"\"></xref> element.)\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the reader is positioned at an <xref uid=\"langword_csharp_&lt;xenc:EncryptedData&gt;\" name=\"&lt;xenc:EncryptedData&gt;\" href=\"\"></xref> element; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanWriteToken\n  id: CanWriteToken\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  langs:\n  - csharp\n  name: CanWriteToken\n  nameWithType: EncryptedSecurityTokenHandler.CanWriteToken\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanWriteToken\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a value that indicates whether the handler provides serialization functionality for tokens.\n  syntax:\n    content: public override bool CanWriteToken { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the handler can serialize tokens; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanWriteToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers\n  id: GetTokenTypeIdentifiers\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  langs:\n  - csharp\n  name: GetTokenTypeIdentifiers()\n  nameWithType: EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers()\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the type identifier URIs for tokens handled by the current instance.\n  syntax:\n    content: public override string[] GetTokenTypeIdentifiers ();\n    parameters: []\n    return:\n      type: System.String[]\n      description: By default, returns an array with a single <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> string because there is not a specific token type identifier that is associated with the <xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"></xref> type.\n  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.KeyInfoSerializer\n  id: KeyInfoSerializer\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  langs:\n  - csharp\n  name: KeyInfoSerializer\n  nameWithType: EncryptedSecurityTokenHandler.KeyInfoSerializer\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.KeyInfoSerializer\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets or sets the <xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"></xref> that will be used to serialize and deserialize key identifiers from the <xref uid=\"langword_csharp_&lt;xenc:EncryptedData&gt;\" name=\"&lt;xenc:EncryptedData&gt;\" href=\"\"></xref> element.\n  syntax:\n    content: public System.IdentityModel.Selectors.SecurityTokenSerializer KeyInfoSerializer { get; set; }\n    return:\n      type: System.IdentityModel.Selectors.SecurityTokenSerializer\n      description: The token serializer that will be used to read and write key the key identifiers.\n  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.KeyInfoSerializer*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: An attempt to set the property to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> occurs.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)\n  id: ReadKeyIdentifierClause(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  langs:\n  - csharp\n  name: ReadKeyIdentifierClause(XmlReader)\n  nameWithType: EncryptedSecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Reads an <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\"></xref> from an XML stream.\n  syntax:\n    content: public override System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: An XML reader positioned at an <xref uid=\"langword_csharp_&lt;xenc:EncryptedKey&gt;\" name=\"&lt;xenc:EncryptedKey&gt;\" href=\"\"></xref> element as defined in 'http://www.w3.org/TR/2002/REC-xmlenc-core-20021210'; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: A key identifier clause of type <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\"></xref>.\n  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadKeyIdentifierClause*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>reader</code> is not positioned at an <xref uid=\"langword_csharp_&lt;xenc:EncryptedKey&gt;\" name=\"&lt;xenc:EncryptedKey&gt;\" href=\"\"></xref> element.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadToken(System.Xml.XmlReader)\n  id: ReadToken(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  langs:\n  - csharp\n  name: ReadToken(XmlReader)\n  nameWithType: EncryptedSecurityTokenHandler.ReadToken(XmlReader)\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadToken(XmlReader)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Reads an encrypted security token.\n  syntax:\n    content: public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: The reader from which to read the token.\n    return:\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: A security token of type <xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"></xref>.\n  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"There is no configured service token resolver. (Either the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A?displayProperty=fullName&gt; property or the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.ServiceTokenResolver%2A?displayProperty=fullName&gt; property of the referenced token handler configuration is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>. A service token resolver is required to obtain keys for decryption.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.IdentityModel.Tokens.SecurityTokenHandlerCollection\\\"></xref>Referenced through the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection*> property is unable to find a <xref href=\\\"System.IdentityModel.Tokens.SecurityTokenHandler\\\"></xref> that can read the decrypted XML and return a <xref href=\\\"System.IdentityModel.Tokens.SecurityToken\\\"></xref>.\"\n  - type: System.IdentityModel.Tokens.SecurityTokenException\n    commentId: T:System.IdentityModel.Tokens.SecurityTokenException\n    description: \"A <xref href=\\\"System.IdentityModel.Tokens.SecurityKeyIdentifier\\\"></xref> is not found inside the XML pointed to by the reader.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.IdentityModel.Tokens.SecurityKeyIdentifier\\\"></xref> is not a <xref href=\\\"System.IdentityModel.Tokens.SymmetricSecurityKey\\\"></xref>.\"\n  - type: System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException\n    commentId: T:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException\n    description: The <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> found inside the XML cannot be resolved by the configured service token resolver to a <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.TokenType\n  id: TokenType\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  langs:\n  - csharp\n  name: TokenType\n  nameWithType: EncryptedSecurityTokenHandler.TokenType\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.TokenType\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the type of the token handled by the current instance.\n  syntax:\n    content: public override Type TokenType { get; }\n    return:\n      type: System.Type\n      description: The token type handled by the current instance. The default is <xref uid=\"langword_csharp_typeof\" name=\"typeof\" href=\"\"></xref><xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"></xref>.\n  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.TokenType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  id: WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  langs:\n  - csharp\n  name: WriteToken(XmlWriter,SecurityToken)\n  nameWithType: EncryptedSecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Writes an encrypted security token using the XML writer.\n  syntax:\n    content: public override void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: The XML writer to which to write the encrypted token.\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The encrypted security token, must be an instance of <xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"></xref>.\n  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.WriteToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>writer</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>token</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>token</code> is not assignable as <xref href=\"System.IdentityModel.Tokens.EncryptedSecurityToken\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A?displayProperty=fullName&gt; property is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>. This property is required for obtaining keys for encryption.  \\n  \\n -or-  \\n  \\n The token handler collection returned by the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection*> property was unable to find a <xref href=\\\"System.IdentityModel.Tokens.SecurityTokenHandler\\\"></xref> that can write the <xref href=\\\"System.IdentityModel.Tokens.SecurityToken\\\"></xref> returned by the &lt;xref:System.IdentityModel.Tokens.EncryptedSecurityToken.Token%2A?displayProperty=fullName&gt; property.\"\n  - type: System.IdentityModel.Tokens.SecurityTokenException\n    commentId: T:System.IdentityModel.Tokens.SecurityTokenException\n    description: The &lt;xref:System.IdentityModel.Tokens.EncryptingCredentials.SecurityKey%2A?displayProperty=fullName&gt; property is not assignable as <xref href=\"System.IdentityModel.Tokens.SymmetricSecurityKey\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: System.IdentityModel.Tokens.SecurityTokenHandler\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.IdentityModel.Tokens.SecurityTokenException\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityTokenException\n  nameWithType: SecurityTokenException\n  fullName: System.IdentityModel.Tokens.SecurityTokenException\n- uid: System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: EncryptedTokenDecryptionFailedException\n  nameWithType: EncryptedTokenDecryptionFailedException\n  fullName: System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.#ctor\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: EncryptedSecurityTokenHandler()\n  nameWithType: EncryptedSecurityTokenHandler.EncryptedSecurityTokenHandler()\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.EncryptedSecurityTokenHandler()\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: CanReadKeyIdentifierClause(XmlReader)\n  nameWithType: EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Xml.XmlReader\n  parent: System.Xml\n  isExternal: true\n  name: XmlReader\n  nameWithType: XmlReader\n  fullName: System.Xml.XmlReader\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: CanReadToken(XmlReader)\n  nameWithType: EncryptedSecurityTokenHandler.CanReadToken(XmlReader)\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadToken(XmlReader)\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanWriteToken\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: CanWriteToken\n  nameWithType: EncryptedSecurityTokenHandler.CanWriteToken\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanWriteToken\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: GetTokenTypeIdentifiers()\n  nameWithType: EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers()\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers()\n- uid: System.String[]\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.KeyInfoSerializer\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: KeyInfoSerializer\n  nameWithType: EncryptedSecurityTokenHandler.KeyInfoSerializer\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.KeyInfoSerializer\n- uid: System.IdentityModel.Selectors.SecurityTokenSerializer\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: SecurityTokenSerializer\n  nameWithType: SecurityTokenSerializer\n  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: ReadKeyIdentifierClause(XmlReader)\n  nameWithType: EncryptedSecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifierClause\n  nameWithType: SecurityKeyIdentifierClause\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadToken(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: ReadToken(XmlReader)\n  nameWithType: EncryptedSecurityTokenHandler.ReadToken(XmlReader)\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadToken(XmlReader)\n- uid: System.IdentityModel.Tokens.SecurityToken\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityToken\n  nameWithType: SecurityToken\n  fullName: System.IdentityModel.Tokens.SecurityToken\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.TokenType\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: TokenType\n  nameWithType: EncryptedSecurityTokenHandler.TokenType\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.TokenType\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: WriteToken(XmlWriter,SecurityToken)\n  nameWithType: EncryptedSecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)\n  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)\n- uid: System.Xml.XmlWriter\n  parent: System.Xml\n  isExternal: true\n  name: XmlWriter\n  nameWithType: XmlWriter\n  fullName: System.Xml.XmlWriter\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.#ctor*\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: EncryptedSecurityTokenHandler\n  nameWithType: EncryptedSecurityTokenHandler.EncryptedSecurityTokenHandler\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause*\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: CanReadKeyIdentifierClause\n  nameWithType: EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadToken*\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: CanReadToken\n  nameWithType: EncryptedSecurityTokenHandler.CanReadToken\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanWriteToken*\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: CanWriteToken\n  nameWithType: EncryptedSecurityTokenHandler.CanWriteToken\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers*\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: GetTokenTypeIdentifiers\n  nameWithType: EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.KeyInfoSerializer*\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: KeyInfoSerializer\n  nameWithType: EncryptedSecurityTokenHandler.KeyInfoSerializer\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadKeyIdentifierClause*\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: ReadKeyIdentifierClause\n  nameWithType: EncryptedSecurityTokenHandler.ReadKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadToken*\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: ReadToken\n  nameWithType: EncryptedSecurityTokenHandler.ReadToken\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.TokenType*\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: TokenType\n  nameWithType: EncryptedSecurityTokenHandler.TokenType\n- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.WriteToken*\n  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler\n  isExternal: false\n  name: WriteToken\n  nameWithType: EncryptedSecurityTokenHandler.WriteToken\n"}