{"nodes":[{"pos":[2916,3001],"content":"Validates user credentials and manages user settings. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Validates user credentials and manages user settings. This class cannot be inherited.","pos":[0,85],"nodes":[{"content":"Validates user credentials and manages user settings.","pos":[0,53]},{"content":"This class cannot be inherited.","pos":[54,85]}]}]},{"pos":[3014,7935],"content":"The Membership class is used in ASP.NET applications to validate user credentials and manage user settings such as passwords and e-mail addresses. The Membership class can be used on its own, or in conjunction with the <xref:System.Web.Security.FormsAuthentication> to create a complete system for authenticating users of a Web application or site. The <xref:System.Web.UI.WebControls.Login> control encapsulates the Membership class to provide a convenient mechanism for validating users.      > [!NOTE] >  If you are not familiar with the membership features of ASP.NET, see [Introduction to Membership](~/add/includes/ajax-current-ext-md.md) before continuing. For a list of other topics related to membership, see [Managing Users by Using Membership](~/add/includes/ajax-current-ext-md.md).       The Membership class provides facilities for:      -   Creating new users.      -   Storing membership information (user names, passwords, e-mail addresses, and supporting data) in Microsoft SQL Server or in an alternative data store.      -   Authenticating users who visit your site. You can authenticate users programmatically, or you can use the <xref:System.Web.UI.WebControls.Login> control to create a complete authentication system that requires little or no code.      -   Managing passwords, which includes creating, changing, retrieving, and resetting them, and so on. You can optionally configure ASP.NET membership to require a password question and answer to authenticate password reset or retrieval requests for users that have forgotten their password.       Although ASP.NET membership is a self-standing feature in ASP.NET For authentication, it can be integrated with ASP.NET role management to provide authorization services for your site. Membership can also be integrated with the ASP.NET user <xref:System.Web.Profile> to provide application-specific customization that can be tailored to individual users. For details, see [Understanding Role Management](~/add/includes/ajax-current-ext-md.md) and [ASP.NET Profile Properties Overview](~/add/includes/ajax-current-ext-md.md).       The Membership class relies on membership providers to communicate with a data source. The .NET Framework includes a <xref:System.Web.Security.SqlMembershipProvider>, which stores user information in a Microsoft SQL Server database, and an <xref:System.Web.Security.ActiveDirectoryMembershipProvider>, which enables you to store user information on an Active Directory or Active Directory Application Mode (ADAM) server. You can also implement a custom membership provider to communicate with an alternative data source that can be used by the Membership class. Custom membership providers inherit the <xref:System.Web.Security.MembershipProvider> abstract class. For more information, see [Implementing a Membership Provider](~/add/includes/ajax-current-ext-md.md).       By default, ASP.NET membership is enabled for all ASP.NET applications. The default membership provider is the <xref:System.Web.Security.SqlMembershipProvider> and is specified in the machine configuration with the name `AspNetSqlProvider`. The default instance of the <xref:System.Web.Security.SqlMembershipProvider> is configured to connect to a local instance of Microsoft SQL Server.       You can modify the default settings to specify a <xref:System.Web.Security.SqlMembershipProvider> other than the `AspNetSqlProvider` instance as the default provider, or specify an instance of a custom provider as the default provider for your ASP.NET application using the Web.config file. You can specify the ASP.NET membership configuration for your Web application using the  configuration section in the Web.config file. You can use the `providers` subsection of the  section to specify a membership provider other than one of the default providers. For example, the following  section removes the default membership providers from the current application configuration and adds a new provider with a name of `SqlProvider` that connects to a SQL Server instance named `AspSqlServer`.      ```   <configuration>     <connectionStrings>       <add name=\"SqlServices\" connectionString=\"Data Source=AspSqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;\" />     </connectionStrings>     <system.web>       <membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">         <providers>           <remove name=\"AspNetSqlProvider\" />           <add name=\"SqlProvider\"             type=\"System.Web.Security.SqlMembershipProvider\"             connectionStringName=\"SqlServices\"             enablePasswordRetrieval=\"false\"             enablePasswordReset=\"true\"             requiresQuestionAndAnswer=\"true\"             passwordFormat=\"Hashed\"             applicationName=\"/\" />         </providers>       </membership>     </system.web>   </configuration>   ```","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Membership class is used in ASP.NET applications to validate user credentials and manage user settings such as passwords and e-mail addresses.","pos":[0,146]},{"content":"The Membership class can be used on its own, or in conjunction with the &lt;xref:System.Web.Security.FormsAuthentication&gt; to create a complete system for authenticating users of a Web application or site.","pos":[147,348],"source":" The Membership class can be used on its own, or in conjunction with the <xref:System.Web.Security.FormsAuthentication> to create a complete system for authenticating users of a Web application or site."},{"content":"The &lt;xref:System.Web.UI.WebControls.Login&gt; control encapsulates the Membership class to provide a convenient mechanism for validating users.","pos":[349,489],"source":" The <xref:System.Web.UI.WebControls.Login> control encapsulates the Membership class to provide a convenient mechanism for validating users."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If you are not familiar with the membership features of ASP.NET, see <bpt id=\"p1\">[</bpt>Introduction to Membership<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> before continuing.","pos":[495,663],"source":"      > [!NOTE] >  If you are not familiar with the membership features of ASP.NET, see [Introduction to Membership](~/add/includes/ajax-current-ext-md.md) before continuing."},{"content":"For a list of other topics related to membership, see <bpt id=\"p1\">[</bpt>Managing Users by Using Membership<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[664,794],"source":" For a list of other topics related to membership, see [Managing Users by Using Membership](~/add/includes/ajax-current-ext-md.md)."},{"content":"The Membership class provides facilities for:      -   Creating new users.","pos":[801,875]},{"content":"-   Storing membership information (user names, passwords, e-mail addresses, and supporting data) in Microsoft SQL Server or in an alternative data store.","pos":[881,1035]},{"content":"-   Authenticating users who visit your site.","pos":[1041,1086]},{"content":"You can authenticate users programmatically, or you can use the &lt;xref:System.Web.UI.WebControls.Login&gt; control to create a complete authentication system that requires little or no code.","pos":[1087,1273],"source":" You can authenticate users programmatically, or you can use the <xref:System.Web.UI.WebControls.Login> control to create a complete authentication system that requires little or no code."},{"content":"-   Managing passwords, which includes creating, changing, retrieving, and resetting them, and so on.","pos":[1279,1380]},{"content":"You can optionally configure ASP.NET membership to require a password question and answer to authenticate password reset or retrieval requests for users that have forgotten their password.","pos":[1381,1569]},{"content":"Although ASP.NET membership is a self-standing feature in ASP.NET For authentication, it can be integrated with ASP.NET role management to provide authorization services for your site.","pos":[1576,1760]},{"content":"Membership can also be integrated with the ASP.NET user &lt;xref:System.Web.Profile&gt; to provide application-specific customization that can be tailored to individual users.","pos":[1761,1930],"source":" Membership can also be integrated with the ASP.NET user <xref:System.Web.Profile> to provide application-specific customization that can be tailored to individual users."},{"content":"For details, see <bpt id=\"p1\">[</bpt>Understanding Role Management<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id=\"p2\">[</bpt>ASP.NET Profile Properties Overview<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1931,2100],"source":" For details, see [Understanding Role Management](~/add/includes/ajax-current-ext-md.md) and [ASP.NET Profile Properties Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"The Membership class relies on membership providers to communicate with a data source.","pos":[2107,2193]},{"content":"The .NET Framework includes a &lt;xref:System.Web.Security.SqlMembershipProvider&gt;, which stores user information in a Microsoft SQL Server database, and an &lt;xref:System.Web.Security.ActiveDirectoryMembershipProvider&gt;, which enables you to store user information on an Active Directory or Active Directory Application Mode (ADAM) server.","pos":[2194,2527],"source":" The .NET Framework includes a <xref:System.Web.Security.SqlMembershipProvider>, which stores user information in a Microsoft SQL Server database, and an <xref:System.Web.Security.ActiveDirectoryMembershipProvider>, which enables you to store user information on an Active Directory or Active Directory Application Mode (ADAM) server."},{"content":"You can also implement a custom membership provider to communicate with an alternative data source that can be used by the Membership class.","pos":[2528,2668]},{"content":"Custom membership providers inherit the &lt;xref:System.Web.Security.MembershipProvider&gt; abstract class.","pos":[2669,2770],"source":" Custom membership providers inherit the <xref:System.Web.Security.MembershipProvider> abstract class."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Implementing a Membership Provider<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[2771,2873],"source":" For more information, see [Implementing a Membership Provider](~/add/includes/ajax-current-ext-md.md)."},{"content":"By default, ASP.NET membership is enabled for all ASP.NET applications.","pos":[2880,2951]},{"content":"The default membership provider is the &lt;xref:System.Web.Security.SqlMembershipProvider&gt; and is specified in the machine configuration with the name <ph id=\"ph1\">`AspNetSqlProvider`</ph>.","pos":[2952,3120],"source":" The default membership provider is the <xref:System.Web.Security.SqlMembershipProvider> and is specified in the machine configuration with the name `AspNetSqlProvider`."},{"content":"The default instance of the &lt;xref:System.Web.Security.SqlMembershipProvider&gt; is configured to connect to a local instance of Microsoft SQL Server.","pos":[3121,3267],"source":" The default instance of the <xref:System.Web.Security.SqlMembershipProvider> is configured to connect to a local instance of Microsoft SQL Server."},{"content":"You can modify the default settings to specify a &lt;xref:System.Web.Security.SqlMembershipProvider&gt; other than the <ph id=\"ph1\">`AspNetSqlProvider`</ph> instance as the default provider, or specify an instance of a custom provider as the default provider for your ASP.NET application using the Web.config file.","pos":[3274,3564],"source":"       You can modify the default settings to specify a <xref:System.Web.Security.SqlMembershipProvider> other than the `AspNetSqlProvider` instance as the default provider, or specify an instance of a custom provider as the default provider for your ASP.NET application using the Web.config file."},{"content":"You can specify the ASP.NET membership configuration for your Web application using the  configuration section in the Web.config file.","pos":[3565,3699]},{"content":"You can use the <ph id=\"ph1\">`providers`</ph> subsection of the  section to specify a membership provider other than one of the default providers.","pos":[3700,3828],"source":" You can use the `providers` subsection of the  section to specify a membership provider other than one of the default providers."},{"content":"For example, the following  section removes the default membership providers from the current application configuration and adds a new provider with a name of <ph id=\"ph1\">`SqlProvider`</ph> that connects to a SQL Server instance named <ph id=\"ph2\">`AspSqlServer`</ph>.","pos":[3829,4062],"source":" For example, the following  section removes the default membership providers from the current application configuration and adds a new provider with a name of `SqlProvider` that connects to a SQL Server instance named `AspSqlServer`."}]},{"pos":[9878,9919],"content":"Gets or sets the name of the application.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the application.","pos":[0,41]}]},{"pos":[9932,11339],"content":"The ApplicationName is used to identify users specific to an application. That is, the same user name can exist in the database for multiple ASP.NET applications that specify a different ApplicationName. This enables multiple applications to use the same database to store user information without running into duplicate user name conflicts. Alternatively, multiple ASP.NET applications can use the same user database by specifying the same ApplicationName. The ApplicationName can be set programmatically or declaratively in the configuration for the Web application.      > [!CAUTION] >  Because a single default membership provider instance is used for all of the requests served by an <xref:System.Web.HttpApplication> object, you can have multiple requests executing concurrently and attempting to set the ApplicationName property value. The ApplicationName property is not thread safe for multiple writes, and changing the ApplicationName property value can result in unexpected behavior for multiple users of an application. We recommend that you avoid writing code that allows users to set the ApplicationName property, unless you must. An example of an application where setting the ApplicationName property may be required is an administrative application that manages membership data for multiple applications. Such an application should be a single-user application and not a Web application.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ApplicationName is used to identify users specific to an application.","pos":[0,73]},{"content":"That is, the same user name can exist in the database for multiple ASP.NET applications that specify a different ApplicationName.","pos":[74,203]},{"content":"This enables multiple applications to use the same database to store user information without running into duplicate user name conflicts.","pos":[204,341]},{"content":"Alternatively, multiple ASP.NET applications can use the same user database by specifying the same ApplicationName.","pos":[342,457]},{"content":"The ApplicationName can be set programmatically or declaratively in the configuration for the Web application.","pos":[458,568]},{"content":"&gt; <ph id=\"ph1\">[!CAUTION]</ph> &gt;  Because a single default membership provider instance is used for all of the requests served by an &lt;xref:System.Web.HttpApplication&gt; object, you can have multiple requests executing concurrently and attempting to set the ApplicationName property value.","pos":[574,842],"source":"      > [!CAUTION] >  Because a single default membership provider instance is used for all of the requests served by an <xref:System.Web.HttpApplication> object, you can have multiple requests executing concurrently and attempting to set the ApplicationName property value."},{"content":"The ApplicationName property is not thread safe for multiple writes, and changing the ApplicationName property value can result in unexpected behavior for multiple users of an application.","pos":[843,1031]},{"content":"We recommend that you avoid writing code that allows users to set the ApplicationName property, unless you must.","pos":[1032,1144]},{"content":"An example of an application where setting the ApplicationName property may be required is an administrative application that manages membership data for multiple applications.","pos":[1145,1321]},{"content":"Such an application should be a single-user application and not a Web application.","pos":[1322,1404]}]},{"pos":[12257,12285],"content":"The name of the application.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the application.","pos":[0,28]}]},{"pos":[12815,12849],"content":"Adds a new user to the data store.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a new user to the data store.","pos":[0,34]}]},{"pos":[12862,14718],"content":"CreateUser adds a new user to the data store and returns a <xref:System.Web.Security.MembershipUser> object for the newly created user. If the user creation fails, a <xref:System.Web.Security.MembershipCreateUserException> is thrown. You can retrieve a <xref:System.Web.Security.MembershipCreateStatus> value from the <xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> property of the <xref:System.Web.Security.MembershipCreateUserException> that indicates why user creation failed.       Once a membership user has been created and you have a reference to a <xref:System.Web.Security.MembershipUser> object for that user, you can modify the settings for that user with the <xref:System.Web.Security.MembershipUser> public methods, such as <xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> for applications where <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> is `true`, or by setting the property values of the <xref:System.Web.Security.MembershipUser> object and passing them to the <xref:System.Web.Security.Membership.UpdateUser%2A> method.       If a user already exists in the data source for the application, you can obtain a <xref:System.Web.Security.MembershipUser> object for the existing user with the <xref:System.Web.Security.Membership.GetUser%2A> method.       The <xref:System.Web.Security.SqlMembershipProvider> provides an option to require a unique e-mail address for each user. If the <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> property is `true`, you will need to use one of the CreateUser overloads that allows you to specify an e-mail address for the user being created. Otherwise, a <xref:System.Web.Security.MembershipCreateUserException> will be thrown.       Leading and trailing spaces are trimmed from all parameter values.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"CreateUser adds a new user to the data store and returns a &lt;xref:System.Web.Security.MembershipUser&gt; object for the newly created user.","pos":[0,135],"source":"CreateUser adds a new user to the data store and returns a <xref:System.Web.Security.MembershipUser> object for the newly created user."},{"content":"If the user creation fails, a &lt;xref:System.Web.Security.MembershipCreateUserException&gt; is thrown.","pos":[136,233],"source":" If the user creation fails, a <xref:System.Web.Security.MembershipCreateUserException> is thrown."},{"content":"You can retrieve a &lt;xref:System.Web.Security.MembershipCreateStatus&gt; value from the &lt;xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A&gt; property of the &lt;xref:System.Web.Security.MembershipCreateUserException&gt; that indicates why user creation failed.","pos":[234,502],"source":" You can retrieve a <xref:System.Web.Security.MembershipCreateStatus> value from the <xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> property of the <xref:System.Web.Security.MembershipCreateUserException> that indicates why user creation failed."},{"content":"Once a membership user has been created and you have a reference to a &lt;xref:System.Web.Security.MembershipUser&gt; object for that user, you can modify the settings for that user with the &lt;xref:System.Web.Security.MembershipUser&gt; public methods, such as &lt;xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A&gt; for applications where &lt;xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A&gt; is <ph id=\"ph1\">`true`</ph>, or by setting the property values of the &lt;xref:System.Web.Security.MembershipUser&gt; object and passing them to the &lt;xref:System.Web.Security.Membership.UpdateUser%2A&gt; method.","pos":[509,1111],"source":"       Once a membership user has been created and you have a reference to a <xref:System.Web.Security.MembershipUser> object for that user, you can modify the settings for that user with the <xref:System.Web.Security.MembershipUser> public methods, such as <xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> for applications where <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> is `true`, or by setting the property values of the <xref:System.Web.Security.MembershipUser> object and passing them to the <xref:System.Web.Security.Membership.UpdateUser%2A> method."},{"content":"If a user already exists in the data source for the application, you can obtain a &lt;xref:System.Web.Security.MembershipUser&gt; object for the existing user with the &lt;xref:System.Web.Security.Membership.GetUser%2A&gt; method.","pos":[1118,1336],"source":"       If a user already exists in the data source for the application, you can obtain a <xref:System.Web.Security.MembershipUser> object for the existing user with the <xref:System.Web.Security.Membership.GetUser%2A> method."},{"content":"The &lt;xref:System.Web.Security.SqlMembershipProvider&gt; provides an option to require a unique e-mail address for each user.","pos":[1343,1464],"source":"       The <xref:System.Web.Security.SqlMembershipProvider> provides an option to require a unique e-mail address for each user."},{"content":"If the &lt;xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A&gt; property is <ph id=\"ph1\">`true`</ph>, you will need to use one of the CreateUser overloads that allows you to specify an e-mail address for the user being created.","pos":[1465,1689],"source":" If the <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> property is `true`, you will need to use one of the CreateUser overloads that allows you to specify an e-mail address for the user being created."},{"content":"Otherwise, a &lt;xref:System.Web.Security.MembershipCreateUserException&gt; will be thrown.","pos":[1690,1775],"source":" Otherwise, a <xref:System.Web.Security.MembershipCreateUserException> will be thrown."},{"content":"Leading and trailing spaces are trimmed from all parameter values.","pos":[1782,1848]}]},{"pos":[15759,15790],"content":"The user name for the new user.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user name for the new user.","pos":[0,31]}]},{"pos":[15855,15885],"content":"The password for the new user.","needQuote":true,"needEscape":true,"nodes":[{"content":"The password for the new user.","pos":[0,30]}]},{"pos":[15964,16042],"content":"A <xref:System.Web.Security.MembershipUser> object for the newly created user.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Web.Security.MembershipUser&gt; object for the newly created user.","pos":[0,78],"source":"A <xref:System.Web.Security.MembershipUser> object for the newly created user."}]},{"pos":[16256,16432],"content":"The user was not created. Check the <xref:System.Web.Security.MembershipCreateUserException.StatusCode*> property for a <xref:System.Web.Security.MembershipCreateStatus> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user was not created. Check the <xref:System.Web.Security.MembershipCreateUserException.StatusCode*> property for a <xref:System.Web.Security.MembershipCreateStatus> value.","pos":[0,176],"nodes":[{"content":"The user was not created.","pos":[0,25]},{"content":"Check the &lt;xref:System.Web.Security.MembershipCreateUserException.StatusCode*&gt; property for a &lt;xref:System.Web.Security.MembershipCreateStatus&gt; value.","pos":[26,176],"source":" Check the <xref:System.Web.Security.MembershipCreateUserException.StatusCode*> property for a <xref:System.Web.Security.MembershipCreateStatus> value."}]}]},{"pos":[16934,17000],"content":"Adds a new user with a specified e-mail address to the data store.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a new user with a specified e-mail address to the data store.","pos":[0,66]}]},{"pos":[17013,18469],"content":"<xref:System.Web.Security.Membership.CreateUser%2A> adds a new user to the data store and returns a <xref:System.Web.Security.MembershipUser> object for the newly created user. If the user creation fails, a <xref:System.Web.Security.MembershipCreateUserException> is thrown. You can retrieve a <xref:System.Web.Security.MembershipCreateStatus> value from the <xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> property of the <xref:System.Web.Security.MembershipCreateUserException> that indicates why user creation failed.       Once a membership user has been created and you have a reference to a <xref:System.Web.Security.MembershipUser> object for that user, you can modify the settings for that user with the <xref:System.Web.Security.MembershipUser> public methods, such as <xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> for applications where <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> is `true`, or by setting the property values of the <xref:System.Web.Security.MembershipUser> object and passing them to the <xref:System.Web.Security.Membership.UpdateUser%2A> method.       If a user already exists in the data source for the application, you can obtain a <xref:System.Web.Security.MembershipUser> object for the existing user with the <xref:System.Web.Security.Membership.GetUser%2A> method.       Leading and trailing spaces are trimmed from all parameter values.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"&lt;xref:System.Web.Security.Membership.CreateUser%2A&gt; adds a new user to the data store and returns a &lt;xref:System.Web.Security.MembershipUser&gt; object for the newly created user.","pos":[0,176],"source":"<xref:System.Web.Security.Membership.CreateUser%2A> adds a new user to the data store and returns a <xref:System.Web.Security.MembershipUser> object for the newly created user."},{"content":"If the user creation fails, a &lt;xref:System.Web.Security.MembershipCreateUserException&gt; is thrown.","pos":[177,274],"source":" If the user creation fails, a <xref:System.Web.Security.MembershipCreateUserException> is thrown."},{"content":"You can retrieve a &lt;xref:System.Web.Security.MembershipCreateStatus&gt; value from the &lt;xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A&gt; property of the &lt;xref:System.Web.Security.MembershipCreateUserException&gt; that indicates why user creation failed.","pos":[275,543],"source":" You can retrieve a <xref:System.Web.Security.MembershipCreateStatus> value from the <xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> property of the <xref:System.Web.Security.MembershipCreateUserException> that indicates why user creation failed."},{"content":"Once a membership user has been created and you have a reference to a &lt;xref:System.Web.Security.MembershipUser&gt; object for that user, you can modify the settings for that user with the &lt;xref:System.Web.Security.MembershipUser&gt; public methods, such as &lt;xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A&gt; for applications where &lt;xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A&gt; is <ph id=\"ph1\">`true`</ph>, or by setting the property values of the &lt;xref:System.Web.Security.MembershipUser&gt; object and passing them to the &lt;xref:System.Web.Security.Membership.UpdateUser%2A&gt; method.","pos":[550,1152],"source":"       Once a membership user has been created and you have a reference to a <xref:System.Web.Security.MembershipUser> object for that user, you can modify the settings for that user with the <xref:System.Web.Security.MembershipUser> public methods, such as <xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> for applications where <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> is `true`, or by setting the property values of the <xref:System.Web.Security.MembershipUser> object and passing them to the <xref:System.Web.Security.Membership.UpdateUser%2A> method."},{"content":"If a user already exists in the data source for the application, you can obtain a &lt;xref:System.Web.Security.MembershipUser&gt; object for the existing user with the &lt;xref:System.Web.Security.Membership.GetUser%2A&gt; method.","pos":[1159,1377],"source":"       If a user already exists in the data source for the application, you can obtain a <xref:System.Web.Security.MembershipUser> object for the existing user with the <xref:System.Web.Security.Membership.GetUser%2A> method."},{"content":"Leading and trailing spaces are trimmed from all parameter values.","pos":[1384,1450]}]},{"pos":[19520,19551],"content":"The user name for the new user.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user name for the new user.","pos":[0,31]}]},{"pos":[19616,19646],"content":"The password for the new user.","needQuote":true,"needEscape":true,"nodes":[{"content":"The password for the new user.","pos":[0,30]}]},{"pos":[19708,19744],"content":"The e-mail address for the new user.","needQuote":true,"needEscape":true,"nodes":[{"content":"The e-mail address for the new user.","pos":[0,36]}]},{"pos":[19823,19901],"content":"A <xref:System.Web.Security.MembershipUser> object for the newly created user.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Web.Security.MembershipUser&gt; object for the newly created user.","pos":[0,78],"source":"A <xref:System.Web.Security.MembershipUser> object for the newly created user."}]},{"pos":[20115,20291],"content":"The user was not created. Check the <xref:System.Web.Security.MembershipCreateUserException.StatusCode*> property for a <xref:System.Web.Security.MembershipCreateStatus> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user was not created. Check the <xref:System.Web.Security.MembershipCreateUserException.StatusCode*> property for a <xref:System.Web.Security.MembershipCreateStatus> value.","pos":[0,176],"nodes":[{"content":"The user was not created.","pos":[0,25]},{"content":"Check the &lt;xref:System.Web.Security.MembershipCreateUserException.StatusCode*&gt; property for a &lt;xref:System.Web.Security.MembershipCreateStatus&gt; value.","pos":[26,176],"source":" Check the <xref:System.Web.Security.MembershipCreateUserException.StatusCode*> property for a <xref:System.Web.Security.MembershipCreateStatus> value."}]}]},{"pos":[21102,21287],"content":"Adds a new user with specified property values to the data store and returns a status parameter indicating that the user was successfully created or the reason the user creation failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a new user with specified property values to the data store and returns a status parameter indicating that the user was successfully created or the reason the user creation failed.","pos":[0,185]}]},{"pos":[21300,22680],"content":"CreateUser adds a new user to the data store and returns a <xref:System.Web.Security.MembershipUser> object for the newly created user. If the user creation fails, you can retrieve a <xref:System.Web.Security.MembershipCreateStatus> value from the `status` output parameter that indicates why user creation failed.       The CreateUser method will return `null` if `password` is an empty string or `null`, `username` is an empty string or `null` or contains a comma (,), `passwordQuestion` is not `null` and is an empty string, or `passwordAnswer` is not `null` and contains an empty string.       Once a membership user has been created and you have a reference to a <xref:System.Web.Security.MembershipUser> object for that user, you can modify the settings for that user with the <xref:System.Web.Security.MembershipUser> public methods and by setting the property values of the <xref:System.Web.Security.MembershipUser> object and then passing the <xref:System.Web.Security.MembershipUser> object to the <xref:System.Web.Security.Membership.UpdateUser%2A> method.       If a user already exists in the data source for the application, you can obtain a <xref:System.Web.Security.MembershipUser> object for the existing user with the <xref:System.Web.Security.Membership.GetUser%2A> method.       Leading and trailing spaces are trimmed from all string parameter values.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"CreateUser adds a new user to the data store and returns a &lt;xref:System.Web.Security.MembershipUser&gt; object for the newly created user.","pos":[0,135],"source":"CreateUser adds a new user to the data store and returns a <xref:System.Web.Security.MembershipUser> object for the newly created user."},{"content":"If the user creation fails, you can retrieve a &lt;xref:System.Web.Security.MembershipCreateStatus&gt; value from the <ph id=\"ph1\">`status`</ph> output parameter that indicates why user creation failed.","pos":[136,314],"source":" If the user creation fails, you can retrieve a <xref:System.Web.Security.MembershipCreateStatus> value from the `status` output parameter that indicates why user creation failed."},{"content":"The CreateUser method will return <ph id=\"ph1\">`null`</ph> if <ph id=\"ph2\">`password`</ph> is an empty string or <ph id=\"ph3\">`null`</ph>, <ph id=\"ph4\">`username`</ph> is an empty string or <ph id=\"ph5\">`null`</ph> or contains a comma (,), <ph id=\"ph6\">`passwordQuestion`</ph> is not <ph id=\"ph7\">`null`</ph> and is an empty string, or <ph id=\"ph8\">`passwordAnswer`</ph> is not <ph id=\"ph9\">`null`</ph> and contains an empty string.","pos":[321,591],"source":"       The CreateUser method will return `null` if `password` is an empty string or `null`, `username` is an empty string or `null` or contains a comma (,), `passwordQuestion` is not `null` and is an empty string, or `passwordAnswer` is not `null` and contains an empty string."},{"content":"Once a membership user has been created and you have a reference to a &lt;xref:System.Web.Security.MembershipUser&gt; object for that user, you can modify the settings for that user with the &lt;xref:System.Web.Security.MembershipUser&gt; public methods and by setting the property values of the &lt;xref:System.Web.Security.MembershipUser&gt; object and then passing the &lt;xref:System.Web.Security.MembershipUser&gt; object to the &lt;xref:System.Web.Security.Membership.UpdateUser%2A&gt; method.","pos":[598,1067],"source":"       Once a membership user has been created and you have a reference to a <xref:System.Web.Security.MembershipUser> object for that user, you can modify the settings for that user with the <xref:System.Web.Security.MembershipUser> public methods and by setting the property values of the <xref:System.Web.Security.MembershipUser> object and then passing the <xref:System.Web.Security.MembershipUser> object to the <xref:System.Web.Security.Membership.UpdateUser%2A> method."},{"content":"If a user already exists in the data source for the application, you can obtain a &lt;xref:System.Web.Security.MembershipUser&gt; object for the existing user with the &lt;xref:System.Web.Security.Membership.GetUser%2A&gt; method.","pos":[1074,1292],"source":"       If a user already exists in the data source for the application, you can obtain a <xref:System.Web.Security.MembershipUser> object for the existing user with the <xref:System.Web.Security.Membership.GetUser%2A> method."},{"content":"Leading and trailing spaces are trimmed from all string parameter values.","pos":[1299,1372]}]},{"pos":[23873,23904],"content":"The user name for the new user.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user name for the new user.","pos":[0,31]}]},{"pos":[23969,23999],"content":"The password for the new user.","needQuote":true,"needEscape":true,"nodes":[{"content":"The password for the new user.","pos":[0,30]}]},{"pos":[24061,24097],"content":"The e-mail address for the new user.","needQuote":true,"needEscape":true,"nodes":[{"content":"The e-mail address for the new user.","pos":[0,36]}]},{"pos":[24170,24222],"content":"The password-question value for the membership user.","needQuote":true,"needEscape":true,"nodes":[{"content":"The password-question value for the membership user.","pos":[0,52]}]},{"pos":[24293,24343],"content":"The password-answer value for the membership user.","needQuote":true,"needEscape":true,"nodes":[{"content":"The password-answer value for the membership user.","pos":[0,50]}]},{"pos":[24411,24479],"content":"A Boolean that indicates whether the new user is approved to log on.","needQuote":true,"needEscape":true,"nodes":[{"content":"A Boolean that indicates whether the new user is approved to log on.","pos":[0,68]}]},{"pos":[24571,24708],"content":"A <xref:System.Web.Security.MembershipCreateStatus> indicating that the user was created successfully or the reason that creation failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Web.Security.MembershipCreateStatus&gt; indicating that the user was created successfully or the reason that creation failed.","pos":[0,137],"source":"A <xref:System.Web.Security.MembershipCreateStatus> indicating that the user was created successfully or the reason that creation failed."}]},{"pos":[24787,24971],"content":"A <xref:System.Web.Security.MembershipUser> object for the newly created user. If no user was created, this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Web.Security.MembershipUser&gt; object for the newly created user.","pos":[0,78],"source":"A <xref:System.Web.Security.MembershipUser> object for the newly created user."},{"content":"If no user was created, this method returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[79,184],"source":" If no user was created, this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[25903,26112],"content":"Adds a new user with specified property values and a unique identifier to the data store and returns a status parameter indicating that the user was successfully created or the reason the user creation failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a new user with specified property values and a unique identifier to the data store and returns a status parameter indicating that the user was successfully created or the reason the user creation failed.","pos":[0,209]}]},{"pos":[26125,27647],"content":"CreateUser adds a new user to the data store and returns a <xref:System.Web.Security.MembershipUser> object for the newly created user. If the user creation fails, you can retrieve a <xref:System.Web.Security.MembershipCreateStatus> value from the `status` output parameter that indicates why user creation failed. You can specify a unique identifier for the user, such as a primary key value for a database, by using the `providerUserKey` parameter.       The CreateUser method will return `null` if `password` is an empty string or `null`, `username` is an empty string or `null` or contains a comma (,), `passwordQuestion` is not `null` and contains an empty string, or `passwordAnswer` is not `null` and contains an empty string.       Once a membership user has been created and you have a reference to a <xref:System.Web.Security.MembershipUser> object for that user, you can modify the settings for that user with the <xref:System.Web.Security.MembershipUser> public methods and by setting the property values of the <xref:System.Web.Security.MembershipUser> object and then passing the <xref:System.Web.Security.MembershipUser> object to the <xref:System.Web.Security.Membership.UpdateUser%2A> method.       If a user already exists in the data source for the application, you can obtain a <xref:System.Web.Security.MembershipUser> object for the existing user with the <xref:System.Web.Security.Membership.GetUser%2A> method.       Leading and trailing spaces are trimmed from all string parameter values.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"CreateUser adds a new user to the data store and returns a &lt;xref:System.Web.Security.MembershipUser&gt; object for the newly created user.","pos":[0,135],"source":"CreateUser adds a new user to the data store and returns a <xref:System.Web.Security.MembershipUser> object for the newly created user."},{"content":"If the user creation fails, you can retrieve a &lt;xref:System.Web.Security.MembershipCreateStatus&gt; value from the <ph id=\"ph1\">`status`</ph> output parameter that indicates why user creation failed.","pos":[136,314],"source":" If the user creation fails, you can retrieve a <xref:System.Web.Security.MembershipCreateStatus> value from the `status` output parameter that indicates why user creation failed."},{"content":"You can specify a unique identifier for the user, such as a primary key value for a database, by using the <ph id=\"ph1\">`providerUserKey`</ph> parameter.","pos":[315,450],"source":" You can specify a unique identifier for the user, such as a primary key value for a database, by using the `providerUserKey` parameter."},{"content":"The CreateUser method will return <ph id=\"ph1\">`null`</ph> if <ph id=\"ph2\">`password`</ph> is an empty string or <ph id=\"ph3\">`null`</ph>, <ph id=\"ph4\">`username`</ph> is an empty string or <ph id=\"ph5\">`null`</ph> or contains a comma (,), <ph id=\"ph6\">`passwordQuestion`</ph> is not <ph id=\"ph7\">`null`</ph> and contains an empty string, or <ph id=\"ph8\">`passwordAnswer`</ph> is not <ph id=\"ph9\">`null`</ph> and contains an empty string.","pos":[457,733],"source":"       The CreateUser method will return `null` if `password` is an empty string or `null`, `username` is an empty string or `null` or contains a comma (,), `passwordQuestion` is not `null` and contains an empty string, or `passwordAnswer` is not `null` and contains an empty string."},{"content":"Once a membership user has been created and you have a reference to a &lt;xref:System.Web.Security.MembershipUser&gt; object for that user, you can modify the settings for that user with the &lt;xref:System.Web.Security.MembershipUser&gt; public methods and by setting the property values of the &lt;xref:System.Web.Security.MembershipUser&gt; object and then passing the &lt;xref:System.Web.Security.MembershipUser&gt; object to the &lt;xref:System.Web.Security.Membership.UpdateUser%2A&gt; method.","pos":[740,1209],"source":"       Once a membership user has been created and you have a reference to a <xref:System.Web.Security.MembershipUser> object for that user, you can modify the settings for that user with the <xref:System.Web.Security.MembershipUser> public methods and by setting the property values of the <xref:System.Web.Security.MembershipUser> object and then passing the <xref:System.Web.Security.MembershipUser> object to the <xref:System.Web.Security.Membership.UpdateUser%2A> method."},{"content":"If a user already exists in the data source for the application, you can obtain a &lt;xref:System.Web.Security.MembershipUser&gt; object for the existing user with the &lt;xref:System.Web.Security.Membership.GetUser%2A&gt; method.","pos":[1216,1434],"source":"       If a user already exists in the data source for the application, you can obtain a <xref:System.Web.Security.MembershipUser> object for the existing user with the <xref:System.Web.Security.Membership.GetUser%2A> method."},{"content":"Leading and trailing spaces are trimmed from all string parameter values.","pos":[1441,1514]}]},{"pos":[28006,28037],"content":"The user name for the new user.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user name for the new user.","pos":[0,31]}]},{"pos":[28102,28132],"content":"The password for the new user.","needQuote":true,"needEscape":true,"nodes":[{"content":"The password for the new user.","pos":[0,30]}]},{"pos":[28194,28230],"content":"The e-mail address for the new user.","needQuote":true,"needEscape":true,"nodes":[{"content":"The e-mail address for the new user.","pos":[0,36]}]},{"pos":[28303,28355],"content":"The password-question value for the membership user.","needQuote":true,"needEscape":true,"nodes":[{"content":"The password-question value for the membership user.","pos":[0,52]}]},{"pos":[28426,28476],"content":"The password-answer value for the membership user.","needQuote":true,"needEscape":true,"nodes":[{"content":"The password-answer value for the membership user.","pos":[0,50]}]},{"pos":[28544,28612],"content":"A Boolean that indicates whether the new user is approved to log on.","needQuote":true,"needEscape":true,"nodes":[{"content":"A Boolean that indicates whether the new user is approved to log on.","pos":[0,68]}]},{"pos":[28684,28768],"content":"The user identifier for the user that should be stored in the membership data store.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user identifier for the user that should be stored in the membership data store.","pos":[0,84]}]},{"pos":[28860,28992],"content":"A <xref:System.Web.Security.MembershipCreateStatus> indicating that the user was created successfully or the reason creation failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Web.Security.MembershipCreateStatus&gt; indicating that the user was created successfully or the reason creation failed.","pos":[0,132],"source":"A <xref:System.Web.Security.MembershipCreateStatus> indicating that the user was created successfully or the reason creation failed."}]},{"pos":[29071,29255],"content":"A <xref:System.Web.Security.MembershipUser> object for the newly created user. If no user was created, this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Web.Security.MembershipUser&gt; object for the newly created user.","pos":[0,78],"source":"A <xref:System.Web.Security.MembershipUser> object for the newly created user."},{"content":"If no user was created, this method returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[79,184],"source":" If no user was created, this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[29731,29790],"content":"Deletes a user and any related user data from the database.","needQuote":true,"needEscape":true,"nodes":[{"content":"Deletes a user and any related user data from the database.","pos":[0,59]}]},{"pos":[29802,30215],"content":"User data stored in the database for the <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, or <xref:System.Web.UI.WebControls.WebParts.WebPart> personalization is also deleted when you are using the <xref:System.Web.Security.SqlRoleProvider>, <xref:System.Web.Profile.SqlProfileProvider>, and <xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> objects for data storage.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"User data stored in the database for the &lt;xref:System.Web.Security.Roles&gt;, &lt;xref:System.Web.HttpContext.Profile%2A&gt;, or &lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt; personalization is also deleted when you are using the &lt;xref:System.Web.Security.SqlRoleProvider&gt;, &lt;xref:System.Web.Profile.SqlProfileProvider&gt;, and &lt;xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider&gt; objects for data storage.","pos":[0,413],"source":"User data stored in the database for the <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, or <xref:System.Web.UI.WebControls.WebParts.WebPart> personalization is also deleted when you are using the <xref:System.Web.Security.SqlRoleProvider>, <xref:System.Web.Profile.SqlProfileProvider>, and <xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> objects for data storage."}]},{"pos":[30698,30729],"content":"The name of the user to delete.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the user to delete.","pos":[0,31]}]},{"pos":[30788,30948],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the user was deleted; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user was deleted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[31112,31177],"content":"<ph id=\"ph1\">&lt;code&gt;username&lt;/code&gt;</ph> is an empty string or contains a comma (,).","needQuote":true,"needEscape":true,"source":"<code>username</code> is an empty string or contains a comma (,)."},{"pos":[31280,31367],"content":"<ph id=\"ph1\">&lt;code&gt;username&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null.\" name=\"null.\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>","needQuote":true,"needEscape":true,"source":"<code>username</code> is <xref uid=\"langword_csharp_null.\" name=\"null.\" href=\"\"></xref>"},{"pos":[31825,31858],"content":"Deletes a user from the database.","needQuote":true,"needEscape":true,"nodes":[{"content":"Deletes a user from the database.","pos":[0,33]}]},{"pos":[31871,32417],"content":"Users deleted from the database are only deleted from the configured `applicationName`.       If `deleteAllRelatedData` is `true`, user data stored in the database for the <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, or <xref:System.Web.UI.WebControls.WebParts.WebPart> personalization is also deleted when you are using the <xref:System.Web.Security.SqlRoleProvider>, <xref:System.Web.Profile.SqlProfileProvider>, and <xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> objects for data storage.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Users deleted from the database are only deleted from the configured <ph id=\"ph1\">`applicationName`</ph>.","pos":[0,87],"source":"Users deleted from the database are only deleted from the configured `applicationName`."},{"content":"If <ph id=\"ph1\">`deleteAllRelatedData`</ph> is <ph id=\"ph2\">`true`</ph>, user data stored in the database for the &lt;xref:System.Web.Security.Roles&gt;, &lt;xref:System.Web.HttpContext.Profile%2A&gt;, or &lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt; personalization is also deleted when you are using the &lt;xref:System.Web.Security.SqlRoleProvider&gt;, &lt;xref:System.Web.Profile.SqlProfileProvider&gt;, and &lt;xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider&gt; objects for data storage.","pos":[94,544],"source":"       If `deleteAllRelatedData` is `true`, user data stored in the database for the <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, or <xref:System.Web.UI.WebControls.WebParts.WebPart> personalization is also deleted when you are using the <xref:System.Web.Security.SqlRoleProvider>, <xref:System.Web.Profile.SqlProfileProvider>, and <xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> objects for data storage."}]},{"pos":[32950,32981],"content":"The name of the user to delete.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the user to delete.","pos":[0,31]}]},{"pos":[33059,33287],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to delete data related to the user from the database; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to leave data related to the user in the database.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to delete data related to the user from the database; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to leave data related to the user in the database."},{"pos":[33346,33506],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the user was deleted; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user was deleted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[33670,33735],"content":"<ph id=\"ph1\">&lt;code&gt;username&lt;/code&gt;</ph> is an empty string or contains a comma (,).","needQuote":true,"needEscape":true,"source":"<code>username</code> is an empty string or contains a comma (,)."},{"pos":[33838,33924],"content":"<ph id=\"ph1\">&lt;code&gt;username&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>username</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[34321,34439],"content":"Gets a value indicating whether the current membership provider is configured to allow users to reset their passwords.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the current membership provider is configured to allow users to reset their passwords.","pos":[0,118]}]},{"pos":[34451,34835],"content":"Password reset is the ability for ASP.NET membership to replace the current password for a user name with a new, randomly generated password when a user has forgotten their password or the current password is no longer valid. This is especially useful when password format is set to <xref:System.Web.Security.MembershipPasswordFormat>, as users cannot retrieve hashed password values.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Password reset is the ability for ASP.NET membership to replace the current password for a user name with a new, randomly generated password when a user has forgotten their password or the current password is no longer valid. This is especially useful when password format is set to <xref:System.Web.Security.MembershipPasswordFormat>, as users cannot retrieve hashed password values.","pos":[0,384],"nodes":[{"content":"Password reset is the ability for ASP.NET membership to replace the current password for a user name with a new, randomly generated password when a user has forgotten their password or the current password is no longer valid.","pos":[0,225]},{"content":"This is especially useful when password format is set to &lt;xref:System.Web.Security.MembershipPasswordFormat&gt;, as users cannot retrieve hashed password values.","pos":[226,384],"source":" This is especially useful when password format is set to <xref:System.Web.Security.MembershipPasswordFormat>, as users cannot retrieve hashed password values."}]}]},{"pos":[36152,36339],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the membership provider supports password reset; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the membership provider supports password reset; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[36837,36958],"content":"Gets a value indicating whether the current membership provider is configured to allow users to retrieve their passwords.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the current membership provider is configured to allow users to retrieve their passwords.","pos":[0,121]}]},{"pos":[36971,37754],"content":"If EnablePasswordRetrieval is `false`, the underlying membership provider may throw a <xref:System.Web.HttpException>.       The providers that are included with the .NET Framework support multiple password formats to enhance password security. If the password format is set to <xref:System.Web.Security.MembershipPasswordFormat>, then users will not be able to retrieve their existing password from the database. The <xref:System.Web.Security.MembershipPasswordFormat> password format provides one-way encoding of password values. Passwords are \"hashed\" and compared to values stored in the database for authentication. \"Hashed\" values cannot be un-encoded to retrieve the original password value. For more information, see <xref:System.Web.Security.MembershipPasswordFormat>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If EnablePasswordRetrieval is <ph id=\"ph1\">`false`</ph>, the underlying membership provider may throw a &lt;xref:System.Web.HttpException&gt;.","pos":[0,118],"source":"If EnablePasswordRetrieval is `false`, the underlying membership provider may throw a <xref:System.Web.HttpException>."},{"content":"The providers that are included with the .NET Framework support multiple password formats to enhance password security.","pos":[125,244]},{"content":"If the password format is set to &lt;xref:System.Web.Security.MembershipPasswordFormat&gt;, then users will not be able to retrieve their existing password from the database.","pos":[245,413],"source":" If the password format is set to <xref:System.Web.Security.MembershipPasswordFormat>, then users will not be able to retrieve their existing password from the database."},{"content":"The &lt;xref:System.Web.Security.MembershipPasswordFormat&gt; password format provides one-way encoding of password values.","pos":[414,531],"source":" The <xref:System.Web.Security.MembershipPasswordFormat> password format provides one-way encoding of password values."},{"content":"Passwords are \"hashed\" and compared to values stored in the database for authentication.","pos":[532,620]},{"content":"\"Hashed\" values cannot be un-encoded to retrieve the original password value.","pos":[621,698]},{"content":"For more information, see &lt;xref:System.Web.Security.MembershipPasswordFormat&gt;.","pos":[699,777],"source":" For more information, see <xref:System.Web.Security.MembershipPasswordFormat>."}]},{"pos":[39651,39842],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the membership provider supports password retrieval; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the membership provider supports password retrieval; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[40361,40471],"content":"Gets a collection of membership users where the e-mail address contains the specified e-mail address to match.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of membership users where the e-mail address contains the specified e-mail address to match.","pos":[0,110]}]},{"pos":[40484,40887],"content":"FindUsersByEmail returns a list of membership users where the e-mail address matches the supplied `emailToMatch` for the configured `applicationName`.       The <xref:System.Web.Security.SqlMembershipProvider> performs its search using a LIKE clause against the `emailToMatch` parameter. Any wildcards that are supported by SQL Server in LIKE clauses can be used in the `emailToMatch` parameter value.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"FindUsersByEmail returns a list of membership users where the e-mail address matches the supplied <ph id=\"ph1\">`emailToMatch`</ph> for the configured <ph id=\"ph2\">`applicationName`</ph>.","pos":[0,150],"source":"FindUsersByEmail returns a list of membership users where the e-mail address matches the supplied `emailToMatch` for the configured `applicationName`."},{"content":"The &lt;xref:System.Web.Security.SqlMembershipProvider&gt; performs its search using a LIKE clause against the <ph id=\"ph1\">`emailToMatch`</ph> parameter.","pos":[157,287],"source":"       The <xref:System.Web.Security.SqlMembershipProvider> performs its search using a LIKE clause against the `emailToMatch` parameter."},{"content":"Any wildcards that are supported by SQL Server in LIKE clauses can be used in the <ph id=\"ph1\">`emailToMatch`</ph> parameter value.","pos":[288,401],"source":" Any wildcards that are supported by SQL Server in LIKE clauses can be used in the `emailToMatch` parameter value."}]},{"pos":[41843,41876],"content":"The e-mail address to search for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The e-mail address to search for.","pos":[0,33]}]},{"pos":[41966,42195],"content":"A <xref:System.Web.Security.MembershipUserCollection> that contains all users that match the <code>emailToMatch</code> parameter.       Leading and trailing spaces are trimmed from the <code>emailToMatch</code> parameter value.","needQuote":false,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Web.Security.MembershipUserCollection&gt; that contains all users that match the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">emailToMatch</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","pos":[0,129],"source":"A <xref:System.Web.Security.MembershipUserCollection> that contains all users that match the <code>emailToMatch</code> parameter."},{"content":"Leading and trailing spaces are trimmed from the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">emailToMatch</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter value.","pos":[136,227],"source":"       Leading and trailing spaces are trimmed from the <code>emailToMatch</code> parameter value."}]},{"pos":[42842,42972],"content":"Gets a collection of membership users, in a page of data, where the e-mail address contains the specified e-mail address to match.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of membership users, in a page of data, where the e-mail address contains the specified e-mail address to match.","pos":[0,130]}]},{"pos":[42985,44330],"content":"FindUsersByEmail returns a list of membership users where the e-mail address matches the supplied `emailToMatch` for the configured `applicationName`.       The <xref:System.Web.Security.SqlMembershipProvider> performs its search using a LIKE clause against the `emailToMatch` parameter. Any wildcards that are supported by SQL Server in LIKE clauses can be used in the `emailToMatch` parameter value.       The results returned by FindUsersByEmail are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the maximum number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection>. The `pageIndex` parameter identifies which page of results to return, where 0 identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users that matched the `emailToMatch` value. For example, if 13 users were found where `emailToMatch` matched part of or the entire e-mail address, and the `pageIndex` value was 1 with a `pageSize` of 5, the <xref:System.Web.Security.MembershipUserCollection> returned would contain the sixth through the tenth users returned. `totalRecords` would be set to 13.       Leading and trailing spaces are trimmed from the `emailToMatch` parameter value.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"FindUsersByEmail returns a list of membership users where the e-mail address matches the supplied <ph id=\"ph1\">`emailToMatch`</ph> for the configured <ph id=\"ph2\">`applicationName`</ph>.","pos":[0,150],"source":"FindUsersByEmail returns a list of membership users where the e-mail address matches the supplied `emailToMatch` for the configured `applicationName`."},{"content":"The &lt;xref:System.Web.Security.SqlMembershipProvider&gt; performs its search using a LIKE clause against the <ph id=\"ph1\">`emailToMatch`</ph> parameter.","pos":[157,287],"source":"       The <xref:System.Web.Security.SqlMembershipProvider> performs its search using a LIKE clause against the `emailToMatch` parameter."},{"content":"Any wildcards that are supported by SQL Server in LIKE clauses can be used in the <ph id=\"ph1\">`emailToMatch`</ph> parameter value.","pos":[288,401],"source":" Any wildcards that are supported by SQL Server in LIKE clauses can be used in the `emailToMatch` parameter value."},{"content":"The results returned by FindUsersByEmail are constrained by the <ph id=\"ph1\">`pageIndex`</ph> and <ph id=\"ph2\">`pageSize`</ph> parameters.","pos":[408,510],"source":"       The results returned by FindUsersByEmail are constrained by the `pageIndex` and `pageSize` parameters."},{"content":"The <ph id=\"ph1\">`pageSize`</ph> parameter identifies the maximum number of &lt;xref:System.Web.Security.MembershipUser&gt; objects to return in the &lt;xref:System.Web.Security.MembershipUserCollection&gt;.","pos":[511,688],"source":" The `pageSize` parameter identifies the maximum number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection>."},{"content":"The <ph id=\"ph1\">`pageIndex`</ph> parameter identifies which page of results to return, where 0 identifies the first page.","pos":[689,793],"source":" The `pageIndex` parameter identifies which page of results to return, where 0 identifies the first page."},{"content":"The <ph id=\"ph1\">`totalRecords`</ph> parameter is an <ph id=\"ph2\">`out`</ph> parameter that is set to the total number of membership users that matched the <ph id=\"ph3\">`emailToMatch`</ph> value.","pos":[794,935],"source":" The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users that matched the `emailToMatch` value."},{"content":"For example, if 13 users were found where <ph id=\"ph1\">`emailToMatch`</ph> matched part of or the entire e-mail address, and the <ph id=\"ph2\">`pageIndex`</ph> value was 1 with a <ph id=\"ph3\">`pageSize`</ph> of 5, the &lt;xref:System.Web.Security.MembershipUserCollection&gt; returned would contain the sixth through the tenth users returned.","pos":[936,1217],"source":" For example, if 13 users were found where `emailToMatch` matched part of or the entire e-mail address, and the `pageIndex` value was 1 with a `pageSize` of 5, the <xref:System.Web.Security.MembershipUserCollection> returned would contain the sixth through the tenth users returned."},{"content":"<ph id=\"ph1\">`totalRecords`</ph> would be set to 13.","pos":[1218,1252],"source":"`totalRecords` would be set to 13."},{"content":"Leading and trailing spaces are trimmed from the <ph id=\"ph1\">`emailToMatch`</ph> parameter value.","pos":[1259,1339],"source":"       Leading and trailing spaces are trimmed from the `emailToMatch` parameter value."}]},{"pos":[45355,45388],"content":"The e-mail address to search for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The e-mail address to search for.","pos":[0,33]}]},{"pos":[45453,45523],"content":"The index of the page of results to return. `pageIndex` is zero-based.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the page of results to return.","pos":[0,43]},{"content":"<ph id=\"ph1\">`pageIndex`</ph> is zero-based.","pos":[44,70],"source":"`pageIndex` is zero-based."}]},{"pos":[45587,45629],"content":"The size of the page of results to return.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size of the page of results to return.","pos":[0,42]}]},{"pos":[45697,45731],"content":"The total number of matched users.","needQuote":true,"needEscape":true,"nodes":[{"content":"The total number of matched users.","pos":[0,34]}]},{"pos":[45820,46027],"content":"A &lt;xref:System.Web.Security.MembershipUserCollection&gt; that contains a page of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">pageSize</ph><ept id=\"p1\">&lt;/code&gt;</ept>&lt;xref:System.Web.Security.MembershipUser&gt; objects beginning at the page specified by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">pageIndex</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref:System.Web.Security.MembershipUserCollection> that contains a page of <code>pageSize</code><xref:System.Web.Security.MembershipUser> objects beginning at the page specified by <code>pageIndex</code>."},{"pos":[46198,46298],"content":"<code>pageIndex</code> is less than zero.       -or-       <code>pageSize</code> is less than 1.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;pageIndex&lt;/code&gt;</ph> is less than zero.","pos":[0,41],"source":"<code>pageIndex</code> is less than zero."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;pageSize&lt;/code&gt;</ph> is less than 1.","pos":[48,96],"source":"       -or-       <code>pageSize</code> is less than 1."}]},{"pos":[46728,46828],"content":"Gets a collection of membership users where the user name contains the specified user name to match.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of membership users where the user name contains the specified user name to match.","pos":[0,100]}]},{"pos":[46841,47374],"content":"<xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> returns a list of membership users where the user name matches the supplied `usernameToMatch` for the configured `applicationName`.       The <xref:System.Web.Security.SqlMembershipProvider> performs its search using a LIKE clause against the `usernameToMatch` parameter. Any wildcards that are supported by SQL Server in LIKE clauses can be used in the `usernameToMatch` parameter value.       Leading and trailing spaces are trimmed from all parameter values.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"&lt;xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A&gt; returns a list of membership users where the user name matches the supplied <ph id=\"ph1\">`usernameToMatch`</ph> for the configured <ph id=\"ph2\">`applicationName`</ph>.","pos":[0,199],"source":"<xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> returns a list of membership users where the user name matches the supplied `usernameToMatch` for the configured `applicationName`."},{"content":"The &lt;xref:System.Web.Security.SqlMembershipProvider&gt; performs its search using a LIKE clause against the <ph id=\"ph1\">`usernameToMatch`</ph> parameter.","pos":[206,339],"source":"       The <xref:System.Web.Security.SqlMembershipProvider> performs its search using a LIKE clause against the `usernameToMatch` parameter."},{"content":"Any wildcards that are supported by SQL Server in LIKE clauses can be used in the <ph id=\"ph1\">`usernameToMatch`</ph> parameter value.","pos":[340,456],"source":" Any wildcards that are supported by SQL Server in LIKE clauses can be used in the `usernameToMatch` parameter value."},{"content":"Leading and trailing spaces are trimmed from all parameter values.","pos":[463,529]}]},{"pos":[48334,48362],"content":"The user name to search for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user name to search for.","pos":[0,28]}]},{"pos":[48452,48687],"content":"A <xref:System.Web.Security.MembershipUserCollection> that contains all users that match the <code>usernameToMatch</code> parameter.       Leading and trailing spaces are trimmed from the <code>usernameToMatch</code> parameter value.","needQuote":false,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Web.Security.MembershipUserCollection&gt; that contains all users that match the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">usernameToMatch</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","pos":[0,132],"source":"A <xref:System.Web.Security.MembershipUserCollection> that contains all users that match the <code>usernameToMatch</code> parameter."},{"content":"Leading and trailing spaces are trimmed from the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">usernameToMatch</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter value.","pos":[139,233],"source":"       Leading and trailing spaces are trimmed from the <code>usernameToMatch</code> parameter value."}]},{"pos":[48857,48905],"content":"<ph id=\"ph1\">&lt;code&gt;usernameToMatch&lt;/code&gt;</ph> is an empty string.","needQuote":true,"needEscape":true,"source":"<code>usernameToMatch</code> is an empty string."},{"pos":[49008,49101],"content":"<ph id=\"ph1\">&lt;code&gt;usernameToMatch&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>usernameToMatch</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[49664,49784],"content":"Gets a collection of membership users, in a page of data, where the user name contains the specified user name to match.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of membership users, in a page of data, where the user name contains the specified user name to match.","pos":[0,120]}]},{"pos":[49797,51108],"content":"<xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> returns a list of membership users where the user name matches the supplied `usernameToMatch` for the configured `applicationName`.       The <xref:System.Web.Security.SqlMembershipProvider> performs its search using a LIKE clause against the `usernameToMatch` parameter. Any wildcards that are supported by SQL Server in LIKE clauses can be used in the `usernameToMatch` parameter value.       The results returned by FindUsersByName are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the maximum number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection>. The `pageIndex` parameter identifies which page of results to return, where 0 identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users that matched the `usernameToMatch` value. For example, if 13 users were found where `usernameToMatch` matched part of or the entire user name, and the `pageIndex` value was 1 with a `pageSize` of 5, the <xref:System.Web.Security.MembershipUserCollection> returned would contain the sixth through the tenth users returned. `totalRecords` would be set to 13.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"&lt;xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A&gt; returns a list of membership users where the user name matches the supplied <ph id=\"ph1\">`usernameToMatch`</ph> for the configured <ph id=\"ph2\">`applicationName`</ph>.","pos":[0,199],"source":"<xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> returns a list of membership users where the user name matches the supplied `usernameToMatch` for the configured `applicationName`."},{"content":"The &lt;xref:System.Web.Security.SqlMembershipProvider&gt; performs its search using a LIKE clause against the <ph id=\"ph1\">`usernameToMatch`</ph> parameter.","pos":[206,339],"source":"       The <xref:System.Web.Security.SqlMembershipProvider> performs its search using a LIKE clause against the `usernameToMatch` parameter."},{"content":"Any wildcards that are supported by SQL Server in LIKE clauses can be used in the <ph id=\"ph1\">`usernameToMatch`</ph> parameter value.","pos":[340,456],"source":" Any wildcards that are supported by SQL Server in LIKE clauses can be used in the `usernameToMatch` parameter value."},{"content":"The results returned by FindUsersByName are constrained by the <ph id=\"ph1\">`pageIndex`</ph> and <ph id=\"ph2\">`pageSize`</ph> parameters.","pos":[463,564],"source":"       The results returned by FindUsersByName are constrained by the `pageIndex` and `pageSize` parameters."},{"content":"The <ph id=\"ph1\">`pageSize`</ph> parameter identifies the maximum number of &lt;xref:System.Web.Security.MembershipUser&gt; objects to return in the &lt;xref:System.Web.Security.MembershipUserCollection&gt;.","pos":[565,742],"source":" The `pageSize` parameter identifies the maximum number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection>."},{"content":"The <ph id=\"ph1\">`pageIndex`</ph> parameter identifies which page of results to return, where 0 identifies the first page.","pos":[743,847],"source":" The `pageIndex` parameter identifies which page of results to return, where 0 identifies the first page."},{"content":"The <ph id=\"ph1\">`totalRecords`</ph> parameter is an <ph id=\"ph2\">`out`</ph> parameter that is set to the total number of membership users that matched the <ph id=\"ph3\">`usernameToMatch`</ph> value.","pos":[848,992],"source":" The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users that matched the `usernameToMatch` value."},{"content":"For example, if 13 users were found where <ph id=\"ph1\">`usernameToMatch`</ph> matched part of or the entire user name, and the <ph id=\"ph2\">`pageIndex`</ph> value was 1 with a <ph id=\"ph3\">`pageSize`</ph> of 5, the &lt;xref:System.Web.Security.MembershipUserCollection&gt; returned would contain the sixth through the tenth users returned.","pos":[993,1272],"source":" For example, if 13 users were found where `usernameToMatch` matched part of or the entire user name, and the `pageIndex` value was 1 with a `pageSize` of 5, the <xref:System.Web.Security.MembershipUserCollection> returned would contain the sixth through the tenth users returned."},{"content":"<ph id=\"ph1\">`totalRecords`</ph> would be set to 13.","pos":[1273,1307],"source":"`totalRecords` would be set to 13."}]},{"pos":[52137,52165],"content":"The user name to search for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user name to search for.","pos":[0,28]}]},{"pos":[52230,52300],"content":"The index of the page of results to return. `pageIndex` is zero-based.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the page of results to return.","pos":[0,43]},{"content":"<ph id=\"ph1\">`pageIndex`</ph> is zero-based.","pos":[44,70],"source":"`pageIndex` is zero-based."}]},{"pos":[52364,52406],"content":"The size of the page of results to return.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size of the page of results to return.","pos":[0,42]}]},{"pos":[52474,52508],"content":"The total number of matched users.","needQuote":true,"needEscape":true,"nodes":[{"content":"The total number of matched users.","pos":[0,34]}]},{"pos":[52598,52908],"content":"A <xref:System.Web.Security.MembershipUserCollection> that contains a page of <code>pageSize</code><xref:System.Web.Security.MembershipUser> objects beginning at the page specified by <code>pageIndex</code>.       Leading and trailing spaces are trimmed from the <code>usernameToMatch</code> parameter value.","needQuote":false,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Web.Security.MembershipUserCollection&gt; that contains a page of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">pageSize</ph><ept id=\"p1\">&lt;/code&gt;</ept>&lt;xref:System.Web.Security.MembershipUser&gt; objects beginning at the page specified by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">pageIndex</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","pos":[0,207],"source":"A <xref:System.Web.Security.MembershipUserCollection> that contains a page of <code>pageSize</code><xref:System.Web.Security.MembershipUser> objects beginning at the page specified by <code>pageIndex</code>."},{"content":"Leading and trailing spaces are trimmed from the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">usernameToMatch</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter value.","pos":[214,308],"source":"       Leading and trailing spaces are trimmed from the <code>usernameToMatch</code> parameter value."}]},{"pos":[53079,53249],"content":"<code>usernameToMatch</code> is an empty string.       -or-       <code>pageIndex</code> is less than zero.       -or-       <code>pageSize</code> is less than 1.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;usernameToMatch&lt;/code&gt;</ph> is an empty string.","pos":[0,48],"source":"<code>usernameToMatch</code> is an empty string."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;pageIndex&lt;/code&gt;</ph> is less than zero.","pos":[55,107],"source":"       -or-       <code>pageIndex</code> is less than zero."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;pageSize&lt;/code&gt;</ph> is less than 1.","pos":[114,162],"source":"       -or-       <code>pageSize</code> is less than 1."}]},{"pos":[53353,53446],"content":"<ph id=\"ph1\">&lt;code&gt;usernameToMatch&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>usernameToMatch</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[53919,53971],"content":"Generates a random password of the specified length.","needQuote":true,"needEscape":true,"nodes":[{"content":"Generates a random password of the specified length.","pos":[0,52]}]},{"pos":[53984,54897],"content":"The GeneratePassword method is used to generate a random password and is most commonly used by the <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> method implemented by a membership provider to reset the password for a user to a new, temporary password.       The generated password only contains alphanumeric characters and the following punctuation marks: `!@#$%^&*()_-+=[{]};:<>|./?`. No hidden or non-printable control characters are included in the generated password.      > [!NOTE] >  The random password created by the GeneratePassword method is not guaranteed to pass the regular expression in the <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> property. However, the random password will meet the criteria established by the <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> property and the `numberOfNonAlphanumericCharacters` parameter.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GeneratePassword method is used to generate a random password and is most commonly used by the &lt;xref:System.Web.Security.MembershipProvider.ResetPassword%2A&gt; method implemented by a membership provider to reset the password for a user to a new, temporary password.","pos":[0,268],"source":"The GeneratePassword method is used to generate a random password and is most commonly used by the <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> method implemented by a membership provider to reset the password for a user to a new, temporary password."},{"content":"The generated password only contains alphanumeric characters and the following punctuation marks: <ph id=\"ph1\">`!@#$%^&amp;*()_-+=[{]};:&lt;&gt;|./?`</ph>.","pos":[275,402],"source":"       The generated password only contains alphanumeric characters and the following punctuation marks: `!@#$%^&*()_-+=[{]};:<>|./?`."},{"content":"No hidden or non-printable control characters are included in the generated password.","pos":[403,488]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The random password created by the GeneratePassword method is not guaranteed to pass the regular expression in the &lt;xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A&gt; property.","pos":[494,706],"source":"      > [!NOTE] >  The random password created by the GeneratePassword method is not guaranteed to pass the regular expression in the <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> property."},{"content":"However, the random password will meet the criteria established by the &lt;xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A&gt; property and the <ph id=\"ph1\">`numberOfNonAlphanumericCharacters`</ph> parameter.","pos":[707,908],"source":" However, the random password will meet the criteria established by the <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> property and the `numberOfNonAlphanumericCharacters` parameter."}]},{"pos":[55833,55933],"content":"The number of characters in the generated password. The length must be between 1 and 128 characters.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of characters in the generated password. The length must be between 1 and 128 characters.","pos":[0,100],"nodes":[{"content":"The number of characters in the generated password.","pos":[0,51]},{"content":"The length must be between 1 and 128 characters.","pos":[52,100]}]}]},{"pos":[56023,56138],"content":"The minimum number of non-alphanumeric characters (such as @, #, !, %, &amp;, and so on) in the generated password.","needQuote":false,"needEscape":true,"nodes":[{"content":"The minimum number of non-alphanumeric characters (such as @, #, !, %, <ph id=\"ph1\">&amp;amp;</ph>, and so on) in the generated password.","pos":[0,115],"source":"The minimum number of non-alphanumeric characters (such as @, #, !, %, &amp;, and so on) in the generated password."}]},{"pos":[56197,56239],"content":"A random password of the specified length.","needQuote":true,"needEscape":true,"nodes":[{"content":"A random password of the specified length.","pos":[0,42]}]},{"pos":[56410,56576],"content":"<ph id=\"ph1\">&lt;code&gt;length&lt;/code&gt;</ph> is less than 1 or greater than 128 -or-       <ph id=\"ph2\">&lt;code&gt;numberOfNonAlphanumericCharacters&lt;/code&gt;</ph> is less than 0 or greater than <ph id=\"ph3\">&lt;code&gt;length&lt;/code&gt;</ph>.","needQuote":false,"needEscape":true,"source":"<code>length</code> is less than 1 or greater than 128 -or-       <code>numberOfNonAlphanumericCharacters</code> is less than 0 or greater than <code>length</code>."},{"pos":[56938,56989],"content":"Gets a collection of all the users in the database.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of all the users in the database.","pos":[0,51]}]},{"pos":[57001,57366],"content":"GetAllUsers returns the information for all membership users for an application as a collection of <xref:System.Web.Security.MembershipUser> objects. Be careful when using the GetAllUsers method with very large user databases, as the resulting <xref:System.Web.Security.MembershipUserCollection> in your ASP.NET page may degrade the performance of your application.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"GetAllUsers returns the information for all membership users for an application as a collection of <xref:System.Web.Security.MembershipUser> objects. Be careful when using the GetAllUsers method with very large user databases, as the resulting <xref:System.Web.Security.MembershipUserCollection> in your ASP.NET page may degrade the performance of your application.","pos":[0,365],"nodes":[{"content":"GetAllUsers returns the information for all membership users for an application as a collection of &lt;xref:System.Web.Security.MembershipUser&gt; objects.","pos":[0,149],"source":"GetAllUsers returns the information for all membership users for an application as a collection of <xref:System.Web.Security.MembershipUser> objects."},{"content":"Be careful when using the GetAllUsers method with very large user databases, as the resulting &lt;xref:System.Web.Security.MembershipUserCollection&gt; in your ASP.NET page may degrade the performance of your application.","pos":[150,365],"source":" Be careful when using the GetAllUsers method with very large user databases, as the resulting <xref:System.Web.Security.MembershipUserCollection> in your ASP.NET page may degrade the performance of your application."}]}]},{"pos":[57941,58094],"content":"A <xref:System.Web.Security.MembershipUserCollection> of <xref:System.Web.Security.MembershipUser> objects representing all of the users in the database.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Web.Security.MembershipUserCollection&gt; of &lt;xref:System.Web.Security.MembershipUser&gt; objects representing all of the users in the database.","pos":[0,153],"source":"A <xref:System.Web.Security.MembershipUserCollection> of <xref:System.Web.Security.MembershipUser> objects representing all of the users in the database."}]},{"pos":[58661,58729],"content":"Gets a collection of all the users in the database in pages of data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of all the users in the database in pages of data.","pos":[0,68]}]},{"pos":[58741,59549],"content":"The results returned by GetAllUsers are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the maximum number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection>. The `pageIndex` parameter identifies which page of results to return, where 0 identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users for the configured `applicationName`. For example, if there are 13 users for the configured `applicationName`, and the `pageIndex` value was 1 with a `pageSize` of 5, the <xref:System.Web.Security.MembershipUserCollection> returned would contain the sixth through the tenth users returned. `totalRecords` would be set to 13.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The results returned by GetAllUsers are constrained by the <ph id=\"ph1\">`pageIndex`</ph> and <ph id=\"ph2\">`pageSize`</ph> parameters.","pos":[0,97],"source":"The results returned by GetAllUsers are constrained by the `pageIndex` and `pageSize` parameters."},{"content":"The <ph id=\"ph1\">`pageSize`</ph> parameter identifies the maximum number of &lt;xref:System.Web.Security.MembershipUser&gt; objects to return in the &lt;xref:System.Web.Security.MembershipUserCollection&gt;.","pos":[98,275],"source":" The `pageSize` parameter identifies the maximum number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection>."},{"content":"The <ph id=\"ph1\">`pageIndex`</ph> parameter identifies which page of results to return, where 0 identifies the first page.","pos":[276,380],"source":" The `pageIndex` parameter identifies which page of results to return, where 0 identifies the first page."},{"content":"The <ph id=\"ph1\">`totalRecords`</ph> parameter is an <ph id=\"ph2\">`out`</ph> parameter that is set to the total number of membership users for the configured <ph id=\"ph3\">`applicationName`</ph>.","pos":[381,521],"source":" The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users for the configured `applicationName`."},{"content":"For example, if there are 13 users for the configured <ph id=\"ph1\">`applicationName`</ph>, and the <ph id=\"ph2\">`pageIndex`</ph> value was 1 with a <ph id=\"ph3\">`pageSize`</ph> of 5, the &lt;xref:System.Web.Security.MembershipUserCollection&gt; returned would contain the sixth through the tenth users returned.","pos":[522,773],"source":" For example, if there are 13 users for the configured `applicationName`, and the `pageIndex` value was 1 with a `pageSize` of 5, the <xref:System.Web.Security.MembershipUserCollection> returned would contain the sixth through the tenth users returned."},{"content":"<ph id=\"ph1\">`totalRecords`</ph> would be set to 13.","pos":[774,808],"source":"`totalRecords` would be set to 13."}]},{"pos":[60159,60236],"content":"The index of the page of results to return. Use 0 to indicate the first page.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the page of results to return. Use 0 to indicate the first page.","pos":[0,77],"nodes":[{"content":"The index of the page of results to return.","pos":[0,43]},{"content":"Use 0 to indicate the first page.","pos":[44,77]}]}]},{"pos":[60300,60369],"content":"The size of the page of results to return. `pageIndex` is zero-based.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size of the page of results to return.","pos":[0,42]},{"content":"<ph id=\"ph1\">`pageIndex`</ph> is zero-based.","pos":[43,69],"source":"`pageIndex` is zero-based."}]},{"pos":[60437,60463],"content":"The total number of users.","needQuote":true,"needEscape":true,"nodes":[{"content":"The total number of users.","pos":[0,26]}]},{"pos":[60552,60804],"content":"A &lt;xref:System.Web.Security.MembershipUserCollection&gt; of &lt;xref:System.Web.Security.MembershipUser&gt; objects representing all the users in the database for the configured <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_applicationName\" name=\"applicationName\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref:System.Web.Security.MembershipUserCollection> of <xref:System.Web.Security.MembershipUser> objects representing all the users in the database for the configured <xref uid=\"langword_csharp_applicationName\" name=\"applicationName\" href=\"\"></xref>."},{"pos":[60970,61070],"content":"<code>pageIndex</code> is less than zero.       -or-       <code>pageSize</code> is less than 1.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;pageIndex&lt;/code&gt;</ph> is less than zero.","pos":[0,41],"source":"<code>pageIndex</code> is less than zero."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;pageSize&lt;/code&gt;</ph> is less than 1.","pos":[48,96],"source":"       -or-       <code>pageSize</code> is less than 1."}]},{"pos":[61487,61547],"content":"Gets the number of users currently accessing an application.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of users currently accessing an application.","pos":[0,60]}]},{"pos":[61559,62314],"content":"<xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> returns the number of users for the current <xref:System.Web.Security.Membership.ApplicationName%2A> where the last-activity date is greater than the current time less the <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>. The last-activity date/time stamp is updated to the current date and time when user credentials are validated by way of the <xref:System.Web.Security.Membership.ValidateUser%2A> or <xref:System.Web.Security.Membership.UpdateUser%2A> method or when a call to a <xref:System.Web.Security.Membership.GetUser%2A> overload that takes no parameters or one that uses the `userIsOnline` parameter to specify that the date/time stamp should be updated.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"&lt;xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A&gt; returns the number of users for the current &lt;xref:System.Web.Security.Membership.ApplicationName%2A&gt; where the last-activity date is greater than the current time less the &lt;xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A&gt;.","pos":[0,311],"source":"<xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> returns the number of users for the current <xref:System.Web.Security.Membership.ApplicationName%2A> where the last-activity date is greater than the current time less the <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>."},{"content":"The last-activity date/time stamp is updated to the current date and time when user credentials are validated by way of the &lt;xref:System.Web.Security.Membership.ValidateUser%2A&gt; or &lt;xref:System.Web.Security.Membership.UpdateUser%2A&gt; method or when a call to a &lt;xref:System.Web.Security.Membership.GetUser%2A&gt; overload that takes no parameters or one that uses the <ph id=\"ph1\">`userIsOnline`</ph> parameter to specify that the date/time stamp should be updated.","pos":[312,755],"source":" The last-activity date/time stamp is updated to the current date and time when user credentials are validated by way of the <xref:System.Web.Security.Membership.ValidateUser%2A> or <xref:System.Web.Security.Membership.UpdateUser%2A> method or when a call to a <xref:System.Web.Security.Membership.GetUser%2A> overload that takes no parameters or one that uses the `userIsOnline` parameter to specify that the date/time stamp should be updated."}]},{"pos":[62827,62882],"content":"The number of users currently accessing an application.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of users currently accessing an application.","pos":[0,55]}]},{"pos":[63307,63437],"content":"Gets the information from the data source and updates the last-activity date/time stamp for the current logged-on membership user.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the information from the data source and updates the last-activity date/time stamp for the current logged-on membership user.","pos":[0,130]}]},{"pos":[63450,64347],"content":"GetUser retrieves the user information from the data source and creates a <xref:System.Web.Security.MembershipUser> object populated with the returned data. If you use one of the GetUser overloads that does not take a `username` parameter, GetUser returns the information for the current logged-on membership user. The current logged-on membership user is identified by the <xref:System.Security.Principal.IIdentity.Name%2A> of the user in the current <xref:System.Web.HttpContext>.       You can also specify whether you want GetUser to update the last-activity date/time stamp for the user being retrieved using the `userIsOnline` parameter. Of the <xref:System.Web.Security.Membership.GetUser%2A> overloads that do not take a `userIsOnline` parameter, `GetUser()` implicitly updates the last-activity date/time stamp for the user. `GetUser(System.String)` and `GetUser(System.Object)` do not.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"GetUser retrieves the user information from the data source and creates a &lt;xref:System.Web.Security.MembershipUser&gt; object populated with the returned data.","pos":[0,156],"source":"GetUser retrieves the user information from the data source and creates a <xref:System.Web.Security.MembershipUser> object populated with the returned data."},{"content":"If you use one of the GetUser overloads that does not take a <ph id=\"ph1\">`username`</ph> parameter, GetUser returns the information for the current logged-on membership user.","pos":[157,314],"source":" If you use one of the GetUser overloads that does not take a `username` parameter, GetUser returns the information for the current logged-on membership user."},{"content":"The current logged-on membership user is identified by the &lt;xref:System.Security.Principal.IIdentity.Name%2A&gt; of the user in the current &lt;xref:System.Web.HttpContext&gt;.","pos":[315,482],"source":" The current logged-on membership user is identified by the <xref:System.Security.Principal.IIdentity.Name%2A> of the user in the current <xref:System.Web.HttpContext>."},{"content":"You can also specify whether you want GetUser to update the last-activity date/time stamp for the user being retrieved using the <ph id=\"ph1\">`userIsOnline`</ph> parameter.","pos":[489,643],"source":"       You can also specify whether you want GetUser to update the last-activity date/time stamp for the user being retrieved using the `userIsOnline` parameter."},{"content":"Of the &lt;xref:System.Web.Security.Membership.GetUser%2A&gt; overloads that do not take a <ph id=\"ph1\">`userIsOnline`</ph> parameter, <ph id=\"ph2\">`GetUser()`</ph> implicitly updates the last-activity date/time stamp for the user.","pos":[644,833],"source":" Of the <xref:System.Web.Security.Membership.GetUser%2A> overloads that do not take a `userIsOnline` parameter, `GetUser()` implicitly updates the last-activity date/time stamp for the user."},{"content":"<ph id=\"ph1\">`GetUser(System.String)`</ph> and <ph id=\"ph2\">`GetUser(System.Object)`</ph> do not.","pos":[834,895],"source":"`GetUser(System.String)` and `GetUser(System.Object)` do not."}]},{"pos":[64933,65024],"content":"A <xref:System.Web.Security.MembershipUser> object representing the current logged-on user.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Web.Security.MembershipUser&gt; object representing the current logged-on user.","pos":[0,91],"source":"A <xref:System.Web.Security.MembershipUser> object representing the current logged-on user."}]},{"pos":[65185,65227],"content":"No membership user is currently logged in.","needQuote":true,"needEscape":true,"nodes":[{"content":"No membership user is currently logged in.","pos":[0,42]}]},{"pos":[65621,65804],"content":"Gets the information from the data source for the current logged-on membership user. Updates the last-activity date/time stamp for the current logged-on membership user, if specified.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the information from the data source for the current logged-on membership user. Updates the last-activity date/time stamp for the current logged-on membership user, if specified.","pos":[0,183],"nodes":[{"content":"Gets the information from the data source for the current logged-on membership user.","pos":[0,84]},{"content":"Updates the last-activity date/time stamp for the current logged-on membership user, if specified.","pos":[85,183]}]}]},{"pos":[65817,66848],"content":"The GetUser method retrieves the user information from the data source and creates a <xref:System.Web.Security.MembershipUser> object populated with the returned data. If you use one of the <xref:System.Web.Security.Membership.GetUser%2A> overloads that does not take a `username` parameter, <xref:System.Web.Security.Membership.GetUser%2A> returns the information for the current logged-on membership user. The current logged-on membership user is identified by the <xref:System.Security.Principal.IIdentity.Name%2A> of the user in the current <xref:System.Web.HttpContext>.       You can also specify whether you want <xref:System.Web.Security.Membership.GetUser%2A> to update the last-activity date/time stamp for the user being retrieved using the `userIsOnline` parameter. Of the <xref:System.Web.Security.Membership.GetUser%2A> overloads that do not take a `userIsOnline` parameter, `GetUser()` implicitly updates the last-activity date/time stamp for the user. `GetUser(System.String)` and `GetUser(System.Object)` do not.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetUser method retrieves the user information from the data source and creates a &lt;xref:System.Web.Security.MembershipUser&gt; object populated with the returned data.","pos":[0,167],"source":"The GetUser method retrieves the user information from the data source and creates a <xref:System.Web.Security.MembershipUser> object populated with the returned data."},{"content":"If you use one of the &lt;xref:System.Web.Security.Membership.GetUser%2A&gt; overloads that does not take a <ph id=\"ph1\">`username`</ph> parameter, &lt;xref:System.Web.Security.Membership.GetUser%2A&gt; returns the information for the current logged-on membership user.","pos":[168,407],"source":" If you use one of the <xref:System.Web.Security.Membership.GetUser%2A> overloads that does not take a `username` parameter, <xref:System.Web.Security.Membership.GetUser%2A> returns the information for the current logged-on membership user."},{"content":"The current logged-on membership user is identified by the &lt;xref:System.Security.Principal.IIdentity.Name%2A&gt; of the user in the current &lt;xref:System.Web.HttpContext&gt;.","pos":[408,575],"source":" The current logged-on membership user is identified by the <xref:System.Security.Principal.IIdentity.Name%2A> of the user in the current <xref:System.Web.HttpContext>."},{"content":"You can also specify whether you want &lt;xref:System.Web.Security.Membership.GetUser%2A&gt; to update the last-activity date/time stamp for the user being retrieved using the <ph id=\"ph1\">`userIsOnline`</ph> parameter.","pos":[582,777],"source":"       You can also specify whether you want <xref:System.Web.Security.Membership.GetUser%2A> to update the last-activity date/time stamp for the user being retrieved using the `userIsOnline` parameter."},{"content":"Of the &lt;xref:System.Web.Security.Membership.GetUser%2A&gt; overloads that do not take a <ph id=\"ph1\">`userIsOnline`</ph> parameter, <ph id=\"ph2\">`GetUser()`</ph> implicitly updates the last-activity date/time stamp for the user.","pos":[778,967],"source":" Of the <xref:System.Web.Security.Membership.GetUser%2A> overloads that do not take a `userIsOnline` parameter, `GetUser()` implicitly updates the last-activity date/time stamp for the user."},{"content":"<ph id=\"ph1\">`GetUser(System.String)`</ph> and <ph id=\"ph2\">`GetUser(System.Object)`</ph> do not.","pos":[968,1029],"source":"`GetUser(System.String)` and `GetUser(System.Object)` do not."}]},{"pos":[67455,67585],"content":"If <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, updates the last-activity date/time stamp for the specified user.","needQuote":true,"needEscape":true,"source":"If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, updates the last-activity date/time stamp for the specified user."},{"pos":[67664,67755],"content":"A <xref:System.Web.Security.MembershipUser> object representing the current logged-on user.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Web.Security.MembershipUser&gt; object representing the current logged-on user.","pos":[0,91],"source":"A <xref:System.Web.Security.MembershipUser> object representing the current logged-on user."}]},{"pos":[67916,67958],"content":"No membership user is currently logged in.","needQuote":true,"needEscape":true,"nodes":[{"content":"No membership user is currently logged in.","pos":[0,42]}]},{"pos":[68347,68461],"content":"Gets the information from the data source for the membership user associated with the specified unique identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the information from the data source for the membership user associated with the specified unique identifier.","pos":[0,114]}]},{"pos":[68474,69216],"content":"The GetUser method retrieves the user information from the data source and creates a <xref:System.Web.Security.MembershipUser> object populated with the returned data. The user is identified using the unique identifier from the data source specified using the `providerUserKey` parameter.       You can also specify whether you want <xref:System.Web.Security.Membership.GetUser%2A> to update the last-activity date/time stamp for the user being retrieved with the `userIsOnline` parameter. Of the <xref:System.Web.Security.Membership.GetUser%2A> overloads that do not take a `userIsOnline` parameter, `GetUser()` implicitly updates the last-activity date/time stamp for the user. `GetUser(System.String)` and `GetUser(System.Object)` do not","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetUser method retrieves the user information from the data source and creates a &lt;xref:System.Web.Security.MembershipUser&gt; object populated with the returned data.","pos":[0,167],"source":"The GetUser method retrieves the user information from the data source and creates a <xref:System.Web.Security.MembershipUser> object populated with the returned data."},{"content":"The user is identified using the unique identifier from the data source specified using the <ph id=\"ph1\">`providerUserKey`</ph> parameter.","pos":[168,288],"source":" The user is identified using the unique identifier from the data source specified using the `providerUserKey` parameter."},{"content":"You can also specify whether you want &lt;xref:System.Web.Security.Membership.GetUser%2A&gt; to update the last-activity date/time stamp for the user being retrieved with the <ph id=\"ph1\">`userIsOnline`</ph> parameter.","pos":[295,489],"source":"       You can also specify whether you want <xref:System.Web.Security.Membership.GetUser%2A> to update the last-activity date/time stamp for the user being retrieved with the `userIsOnline` parameter."},{"content":"Of the &lt;xref:System.Web.Security.Membership.GetUser%2A&gt; overloads that do not take a <ph id=\"ph1\">`userIsOnline`</ph> parameter, <ph id=\"ph2\">`GetUser()`</ph> implicitly updates the last-activity date/time stamp for the user.","pos":[490,679],"source":" Of the <xref:System.Web.Security.Membership.GetUser%2A> overloads that do not take a `userIsOnline` parameter, `GetUser()` implicitly updates the last-activity date/time stamp for the user."},{"content":"<ph id=\"ph1\">`GetUser(System.String)`</ph> and <ph id=\"ph2\">`GetUser(System.Object)`</ph> do not","pos":[680,740],"source":"`GetUser(System.String)` and `GetUser(System.Object)` do not"}]},{"pos":[69411,69483],"content":"The unique user identifier from the membership data source for the user.","needQuote":true,"needEscape":true,"nodes":[{"content":"The unique user identifier from the membership data source for the user.","pos":[0,72]}]},{"pos":[69562,69683],"content":"A <xref:System.Web.Security.MembershipUser> object representing the user associated with the specified unique identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Web.Security.MembershipUser&gt; object representing the user associated with the specified unique identifier.","pos":[0,121],"source":"A <xref:System.Web.Security.MembershipUser> object representing the user associated with the specified unique identifier."}]},{"pos":[69852,69945],"content":"<ph id=\"ph1\">&lt;code&gt;providerUserKey&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>providerUserKey</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[70334,70410],"content":"Gets the information from the data source for the specified membership user.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the information from the data source for the specified membership user.","pos":[0,76]}]},{"pos":[70423,71522],"content":"The GetUser method retrieves the user information from the data source and creates a <xref:System.Web.Security.MembershipUser> object populated with the returned data. If you use one of the <xref:System.Web.Security.Membership.GetUser%2A> overloads that does not take a `username` parameter, <xref:System.Web.Security.Membership.GetUser%2A> returns the information for the current logged-on membership user. The current logged-on membership user is identified by the <xref:System.Security.Principal.IIdentity.Name%2A> of the user in the current <xref:System.Web.HttpContext>.       You can also specify whether you want <xref:System.Web.Security.Membership.GetUser%2A> to update the last-activity date/time stamp for the user being retrieved with the `userIsOnline` parameter. Of the <xref:System.Web.Security.Membership.GetUser%2A> overloads that do not take a `userIsOnline` parameter, <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName> implicitly updates the last-activity date/time stamp for the user. GetUser and <xref:System.Web.Security.Membership.GetUser%2A> do not.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetUser method retrieves the user information from the data source and creates a &lt;xref:System.Web.Security.MembershipUser&gt; object populated with the returned data.","pos":[0,167],"source":"The GetUser method retrieves the user information from the data source and creates a <xref:System.Web.Security.MembershipUser> object populated with the returned data."},{"content":"If you use one of the &lt;xref:System.Web.Security.Membership.GetUser%2A&gt; overloads that does not take a <ph id=\"ph1\">`username`</ph> parameter, &lt;xref:System.Web.Security.Membership.GetUser%2A&gt; returns the information for the current logged-on membership user.","pos":[168,407],"source":" If you use one of the <xref:System.Web.Security.Membership.GetUser%2A> overloads that does not take a `username` parameter, <xref:System.Web.Security.Membership.GetUser%2A> returns the information for the current logged-on membership user."},{"content":"The current logged-on membership user is identified by the &lt;xref:System.Security.Principal.IIdentity.Name%2A&gt; of the user in the current &lt;xref:System.Web.HttpContext&gt;.","pos":[408,575],"source":" The current logged-on membership user is identified by the <xref:System.Security.Principal.IIdentity.Name%2A> of the user in the current <xref:System.Web.HttpContext>."},{"content":"You can also specify whether you want &lt;xref:System.Web.Security.Membership.GetUser%2A&gt; to update the last-activity date/time stamp for the user being retrieved with the <ph id=\"ph1\">`userIsOnline`</ph> parameter.","pos":[582,776],"source":"       You can also specify whether you want <xref:System.Web.Security.Membership.GetUser%2A> to update the last-activity date/time stamp for the user being retrieved with the `userIsOnline` parameter."},{"content":"Of the &lt;xref:System.Web.Security.Membership.GetUser%2A&gt; overloads that do not take a <ph id=\"ph1\">`userIsOnline`</ph> parameter, &lt;xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName&gt; implicitly updates the last-activity date/time stamp for the user.","pos":[777,1028],"source":" Of the <xref:System.Web.Security.Membership.GetUser%2A> overloads that do not take a `userIsOnline` parameter, <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName> implicitly updates the last-activity date/time stamp for the user."},{"content":"GetUser and &lt;xref:System.Web.Security.Membership.GetUser%2A&gt; do not.","pos":[1029,1097],"source":" GetUser and <xref:System.Web.Security.Membership.GetUser%2A> do not."}]},{"pos":[72157,72190],"content":"The name of the user to retrieve.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the user to retrieve.","pos":[0,33]}]},{"pos":[72269,72514],"content":"A <xref:System.Web.Security.MembershipUser> object representing the specified user. If the <code>username</code> parameter does not correspond to an existing user, this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Web.Security.MembershipUser&gt; object representing the specified user.","pos":[0,83],"source":"A <xref:System.Web.Security.MembershipUser> object representing the specified user."},{"content":"If the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">username</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter does not correspond to an existing user, this method returns <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[84,245],"source":" If the <code>username</code> parameter does not correspond to an existing user, this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[72675,72718],"content":"<ph id=\"ph1\">&lt;code&gt;username&lt;/code&gt;</ph> contains a comma (,).","needQuote":true,"needEscape":true,"source":"<code>username</code> contains a comma (,)."},{"pos":[72821,72907],"content":"<ph id=\"ph1\">&lt;code&gt;username&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>username</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[73350,73534],"content":"Gets the information from the data source for the membership user associated with the specified unique identifier. Updates the last-activity date/time stamp for the user, if specified.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the information from the data source for the membership user associated with the specified unique identifier. Updates the last-activity date/time stamp for the user, if specified.","pos":[0,184],"nodes":[{"content":"Gets the information from the data source for the membership user associated with the specified unique identifier.","pos":[0,114]},{"content":"Updates the last-activity date/time stamp for the user, if specified.","pos":[115,184]}]}]},{"pos":[73546,73830],"content":"The GetUser method retrieves the user information from the data source and creates a <xref:System.Web.Security.MembershipUser> object populated with the returned data. The user is identified with the unique identifier from the data source specified in the `providerUserKey` parameter.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetUser method retrieves the user information from the data source and creates a &lt;xref:System.Web.Security.MembershipUser&gt; object populated with the returned data.","pos":[0,167],"source":"The GetUser method retrieves the user information from the data source and creates a <xref:System.Web.Security.MembershipUser> object populated with the returned data."},{"content":"The user is identified with the unique identifier from the data source specified in the <ph id=\"ph1\">`providerUserKey`</ph> parameter.","pos":[168,284],"source":" The user is identified with the unique identifier from the data source specified in the `providerUserKey` parameter."}]},{"pos":[74043,74115],"content":"The unique user identifier from the membership data source for the user.","needQuote":true,"needEscape":true,"nodes":[{"content":"The unique user identifier from the membership data source for the user.","pos":[0,72]}]},{"pos":[74185,74315],"content":"If <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, updates the last-activity date/time stamp for the specified user.","needQuote":true,"needEscape":true,"source":"If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, updates the last-activity date/time stamp for the specified user."},{"pos":[74394,74515],"content":"A <xref:System.Web.Security.MembershipUser> object representing the user associated with the specified unique identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Web.Security.MembershipUser&gt; object representing the user associated with the specified unique identifier.","pos":[0,121],"source":"A <xref:System.Web.Security.MembershipUser> object representing the user associated with the specified unique identifier."}]},{"pos":[74684,74777],"content":"<ph id=\"ph1\">&lt;code&gt;providerUserKey&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>providerUserKey</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[75220,75366],"content":"Gets the information from the data source for the specified membership user. Updates the last-activity date/time stamp for the user, if specified.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the information from the data source for the specified membership user. Updates the last-activity date/time stamp for the user, if specified.","pos":[0,146],"nodes":[{"content":"Gets the information from the data source for the specified membership user.","pos":[0,76]},{"content":"Updates the last-activity date/time stamp for the user, if specified.","pos":[77,146]}]}]},{"pos":[75379,76552],"content":"The GetUser method retrieves the user information from the data source and creates a <xref:System.Web.Security.MembershipUser> object populated with the returned data.       If you use one of the <xref:System.Web.Security.Membership.GetUser%2A> overloads that does not take a `username` parameter, <xref:System.Web.Security.Membership.GetUser%2A> returns the information for the current logged-on membership user. The current logged-on membership user is identified by the <xref:System.Security.Principal.IIdentity.Name%2A> of the user in the current <xref:System.Web.HttpContext>.       You can also specify whether you want <xref:System.Web.Security.Membership.GetUser%2A> to update the last-activity date/time stamp for the user being retrieved with the `userIsOnline` parameter. Of the <xref:System.Web.Security.Membership.GetUser%2A> overloads that do not take a `userIsOnline` parameter, <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName> implicitly updates the last-activity date/time stamp for the user. <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName> and <xref:System.Web.Security.Membership.GetUser%2A> do not.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetUser method retrieves the user information from the data source and creates a &lt;xref:System.Web.Security.MembershipUser&gt; object populated with the returned data.","pos":[0,167],"source":"The GetUser method retrieves the user information from the data source and creates a <xref:System.Web.Security.MembershipUser> object populated with the returned data."},{"content":"If you use one of the &lt;xref:System.Web.Security.Membership.GetUser%2A&gt; overloads that does not take a <ph id=\"ph1\">`username`</ph> parameter, &lt;xref:System.Web.Security.Membership.GetUser%2A&gt; returns the information for the current logged-on membership user.","pos":[174,413],"source":"       If you use one of the <xref:System.Web.Security.Membership.GetUser%2A> overloads that does not take a `username` parameter, <xref:System.Web.Security.Membership.GetUser%2A> returns the information for the current logged-on membership user."},{"content":"The current logged-on membership user is identified by the &lt;xref:System.Security.Principal.IIdentity.Name%2A&gt; of the user in the current &lt;xref:System.Web.HttpContext&gt;.","pos":[414,581],"source":" The current logged-on membership user is identified by the <xref:System.Security.Principal.IIdentity.Name%2A> of the user in the current <xref:System.Web.HttpContext>."},{"content":"You can also specify whether you want &lt;xref:System.Web.Security.Membership.GetUser%2A&gt; to update the last-activity date/time stamp for the user being retrieved with the <ph id=\"ph1\">`userIsOnline`</ph> parameter.","pos":[588,782],"source":"       You can also specify whether you want <xref:System.Web.Security.Membership.GetUser%2A> to update the last-activity date/time stamp for the user being retrieved with the `userIsOnline` parameter."},{"content":"Of the &lt;xref:System.Web.Security.Membership.GetUser%2A&gt; overloads that do not take a <ph id=\"ph1\">`userIsOnline`</ph> parameter, &lt;xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName&gt; implicitly updates the last-activity date/time stamp for the user.","pos":[783,1034],"source":" Of the <xref:System.Web.Security.Membership.GetUser%2A> overloads that do not take a `userIsOnline` parameter, <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName> implicitly updates the last-activity date/time stamp for the user."},{"content":"&lt;xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName&gt; and &lt;xref:System.Web.Security.Membership.GetUser%2A&gt; do not.","pos":[1035,1169],"source":" <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName> and <xref:System.Web.Security.Membership.GetUser%2A> do not."}]},{"pos":[77292,77325],"content":"The name of the user to retrieve.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the user to retrieve.","pos":[0,33]}]},{"pos":[77395,77525],"content":"If <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, updates the last-activity date/time stamp for the specified user.","needQuote":true,"needEscape":true,"source":"If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, updates the last-activity date/time stamp for the specified user."},{"pos":[77604,77849],"content":"A <xref:System.Web.Security.MembershipUser> object representing the specified user. If the <code>username</code> parameter does not correspond to an existing user, this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Web.Security.MembershipUser&gt; object representing the specified user.","pos":[0,83],"source":"A <xref:System.Web.Security.MembershipUser> object representing the specified user."},{"content":"If the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">username</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter does not correspond to an existing user, this method returns <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[84,245],"source":" If the <code>username</code> parameter does not correspond to an existing user, this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[78010,78053],"content":"<ph id=\"ph1\">&lt;code&gt;username&lt;/code&gt;</ph> contains a comma (,).","needQuote":true,"needEscape":true,"source":"<code>username</code> contains a comma (,)."},{"pos":[78156,78242],"content":"<ph id=\"ph1\">&lt;code&gt;username&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>username</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[78686,78778],"content":"Gets a user name where the e-mail address for the user matches the specified e-mail address.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a user name where the e-mail address for the user matches the specified e-mail address.","pos":[0,92]}]},{"pos":[78791,79150],"content":"GetUserNameByEmail can be used to retrieve the user name for a membership user in the case where a user does not know their user name, but does know their e-mail address. If more than one user in the data store has the same e-mail address, the first user name encountered is returned.       Leading and trailing spaces are trimmed from all parameter values.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"GetUserNameByEmail can be used to retrieve the user name for a membership user in the case where a user does not know their user name, but does know their e-mail address. If more than one user in the data store has the same e-mail address, the first user name encountered is returned.       Leading and trailing spaces are trimmed from all parameter values.","pos":[0,357],"nodes":[{"content":"GetUserNameByEmail can be used to retrieve the user name for a membership user in the case where a user does not know their user name, but does know their e-mail address.","pos":[0,170]},{"content":"If more than one user in the data store has the same e-mail address, the first user name encountered is returned.","pos":[171,284]},{"content":"Leading and trailing spaces are trimmed from all parameter values.","pos":[291,357]}]}]},{"pos":[79981,80014],"content":"The e-mail address to search for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The e-mail address to search for.","pos":[0,33]}]},{"pos":[80072,80257],"content":"The user name where the e-mail address for the user matches the specified e-mail address. If no match is found, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user name where the e-mail address for the user matches the specified e-mail address.","pos":[0,89]},{"content":"If no match is found, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is returned.","pos":[90,185],"source":" If no match is found, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned."}]},{"pos":[80724,80779],"content":"The identifier of the algorithm used to hash passwords.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier of the algorithm used to hash passwords.","pos":[0,55]}]},{"pos":[80792,81521],"content":"The HashAlgorithmType property identifies the custom hash algorithm used by the <xref:System.Web.Security.Membership> class. You set the HashAlgorithmType property using the `hashAlgorithmType` attribute of the  element.       The .NET Framework enables you to configure custom cryptography classes using the  element configuration section. The HashAlgorithmType property must match the `name` attribute of the  element in a  element. For more information, see [Mapping Algorithm Names to Cryptography Classes](~/add/includes/ajax-current-ext-md.md).       If the HashAlgorithmType property is not set, the <xref:System.Web.Security.Membership> class uses the hash algorithm set in the `validation` attribute of the  element.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The HashAlgorithmType property identifies the custom hash algorithm used by the &lt;xref:System.Web.Security.Membership&gt; class.","pos":[0,124],"source":"The HashAlgorithmType property identifies the custom hash algorithm used by the <xref:System.Web.Security.Membership> class."},{"content":"You set the HashAlgorithmType property using the <ph id=\"ph1\">`hashAlgorithmType`</ph> attribute of the  element.","pos":[125,220],"source":" You set the HashAlgorithmType property using the `hashAlgorithmType` attribute of the  element."},{"content":"The .NET Framework enables you to configure custom cryptography classes using the  element configuration section.","pos":[227,340]},{"content":"The HashAlgorithmType property must match the <ph id=\"ph1\">`name`</ph> attribute of the  element in a  element.","pos":[341,434],"source":" The HashAlgorithmType property must match the `name` attribute of the  element in a  element."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Mapping Algorithm Names to Cryptography Classes<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[435,550],"source":" For more information, see [Mapping Algorithm Names to Cryptography Classes](~/add/includes/ajax-current-ext-md.md)."},{"content":"If the HashAlgorithmType property is not set, the &lt;xref:System.Web.Security.Membership&gt; class uses the hash algorithm set in the <ph id=\"ph1\">`validation`</ph> attribute of the  element.","pos":[557,725],"source":"       If the HashAlgorithmType property is not set, the <xref:System.Web.Security.Membership> class uses the hash algorithm set in the `validation` attribute of the  element."}]},{"pos":[81651,81750],"content":"The identifier of the algorithm used to hash passwords, or blank to use the default hash algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier of the algorithm used to hash passwords, or blank to use the default hash algorithm.","pos":[0,99]}]},{"pos":[82261,82374],"content":"Gets the number of invalid password or password-answer attempts allowed before the membership user is locked out.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of invalid password or password-answer attempts allowed before the membership user is locked out.","pos":[0,113]}]},{"pos":[82387,84009],"content":"The MaxInvalidPasswordAttempts property works in conjunction with the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> property to guard against an unwanted source using repeated attempts to guess the password or password answer of a membership user.       If the number of invalid passwords or password answers entered for a membership user is greater than or equal to the value of the MaxInvalidPasswordAttempts property within the number of minutes specified by the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> property, then the user is locked out of the Web site by setting the <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> property to `true` until the user is unlocked by a call to the <xref:System.Web.Security.MembershipUser.UnlockUser%2A> method.       If a valid password or password answer is supplied before the value of the MaxInvalidPasswordAttempts property is reached, the counter that tracks the number of invalid attempts is set to zero.       Invalid password and password answer attempts are tracked separately. For example, if the MaxInvalidPasswordAttempts property is set to 5, the user has up to five attempts to enter a correct password and up to five attempts to enter a correct password answer without being locked out.       The MaxInvalidPasswordAttempts property value is set in the application configuration using the `maxInvalidPasswordAttempts` attribute of the  configuration element.       If the <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> property is `false`, invalid password-answer attempts are not tracked.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The MaxInvalidPasswordAttempts property works in conjunction with the &lt;xref:System.Web.Security.Membership.PasswordAttemptWindow%2A&gt; property to guard against an unwanted source using repeated attempts to guess the password or password answer of a membership user.","pos":[0,264],"source":"The MaxInvalidPasswordAttempts property works in conjunction with the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> property to guard against an unwanted source using repeated attempts to guess the password or password answer of a membership user."},{"content":"If the number of invalid passwords or password answers entered for a membership user is greater than or equal to the value of the MaxInvalidPasswordAttempts property within the number of minutes specified by the &lt;xref:System.Web.Security.Membership.PasswordAttemptWindow%2A&gt; property, then the user is locked out of the Web site by setting the &lt;xref:System.Web.Security.MembershipUser.IsLockedOut%2A&gt; property to <ph id=\"ph1\">`true`</ph> until the user is unlocked by a call to the &lt;xref:System.Web.Security.MembershipUser.UnlockUser%2A&gt; method.","pos":[271,798],"source":"       If the number of invalid passwords or password answers entered for a membership user is greater than or equal to the value of the MaxInvalidPasswordAttempts property within the number of minutes specified by the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> property, then the user is locked out of the Web site by setting the <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> property to `true` until the user is unlocked by a call to the <xref:System.Web.Security.MembershipUser.UnlockUser%2A> method."},{"content":"If a valid password or password answer is supplied before the value of the MaxInvalidPasswordAttempts property is reached, the counter that tracks the number of invalid attempts is set to zero.","pos":[805,998]},{"content":"Invalid password and password answer attempts are tracked separately.","pos":[1005,1074]},{"content":"For example, if the MaxInvalidPasswordAttempts property is set to 5, the user has up to five attempts to enter a correct password and up to five attempts to enter a correct password answer without being locked out.","pos":[1075,1289]},{"content":"The MaxInvalidPasswordAttempts property value is set in the application configuration using the <ph id=\"ph1\">`maxInvalidPasswordAttempts`</ph> attribute of the  configuration element.","pos":[1296,1461],"source":"       The MaxInvalidPasswordAttempts property value is set in the application configuration using the `maxInvalidPasswordAttempts` attribute of the  configuration element."},{"content":"If the &lt;xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A&gt; property is <ph id=\"ph1\">`false`</ph>, invalid password-answer attempts are not tracked.","pos":[1468,1612],"source":"       If the <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> property is `false`, invalid password-answer attempts are not tracked."}]},{"pos":[85011,85119],"content":"The number of invalid password or password-answer attempts allowed before the membership user is locked out.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of invalid password or password-answer attempts allowed before the membership user is locked out.","pos":[0,108]}]},{"pos":[85689,85776],"content":"Gets the minimum number of special characters that must be present in a valid password.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the minimum number of special characters that must be present in a valid password.","pos":[0,87]}]},{"pos":[85789,86380],"content":"The MinRequiredNonAlphanumericCharacters property returns the minimum number of special, non-alphanumeric characters that must be entered to create a valid password for the membership provider specified in the <xref:System.Web.Security.Membership.Provider%2A> property.       The MinRequiredNonAlphanumericCharacters property value is set in the application configuration using the `minRequiredNonAlphanumericCharacters` attribute of the  configuration element.       A non-alphanumeric character is a character for which the <xref:System.Char.IsLetterOrDigit%2A> method returns `false`.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The MinRequiredNonAlphanumericCharacters property returns the minimum number of special, non-alphanumeric characters that must be entered to create a valid password for the membership provider specified in the &lt;xref:System.Web.Security.Membership.Provider%2A&gt; property.","pos":[0,269],"source":"The MinRequiredNonAlphanumericCharacters property returns the minimum number of special, non-alphanumeric characters that must be entered to create a valid password for the membership provider specified in the <xref:System.Web.Security.Membership.Provider%2A> property."},{"content":"The MinRequiredNonAlphanumericCharacters property value is set in the application configuration using the <ph id=\"ph1\">`minRequiredNonAlphanumericCharacters`</ph> attribute of the  configuration element.","pos":[276,461],"source":"       The MinRequiredNonAlphanumericCharacters property value is set in the application configuration using the `minRequiredNonAlphanumericCharacters` attribute of the  configuration element."},{"content":"A non-alphanumeric character is a character for which the &lt;xref:System.Char.IsLetterOrDigit%2A&gt; method returns <ph id=\"ph1\">`false`</ph>.","pos":[468,587],"source":"       A non-alphanumeric character is a character for which the <xref:System.Char.IsLetterOrDigit%2A> method returns `false`."}]},{"pos":[87299,87381],"content":"The minimum number of special characters that must be present in a valid password.","needQuote":true,"needEscape":true,"nodes":[{"content":"The minimum number of special characters that must be present in a valid password.","pos":[0,82]}]},{"pos":[87906,87954],"content":"Gets the minimum length required for a password.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the minimum length required for a password.","pos":[0,48]}]},{"pos":[87967,88368],"content":"The MinRequiredPasswordLength property gets the minimum number of characters that must be entered to create a valid password for the membership provider specified in the <xref:System.Web.Security.Membership.Provider%2A> property.       The MinRequiredPasswordLength property value is set in the application configuration using the `minRequiredPasswordLength` attribute of the  configuration element.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The MinRequiredPasswordLength property gets the minimum number of characters that must be entered to create a valid password for the membership provider specified in the &lt;xref:System.Web.Security.Membership.Provider%2A&gt; property.","pos":[0,229],"source":"The MinRequiredPasswordLength property gets the minimum number of characters that must be entered to create a valid password for the membership provider specified in the <xref:System.Web.Security.Membership.Provider%2A> property."},{"content":"The MinRequiredPasswordLength property value is set in the application configuration using the <ph id=\"ph1\">`minRequiredPasswordLength`</ph> attribute of the  configuration element.","pos":[236,399],"source":"       The MinRequiredPasswordLength property value is set in the application configuration using the `minRequiredPasswordLength` attribute of the  configuration element."}]},{"pos":[89259,89302],"content":"The minimum length required for a password.","needQuote":true,"needEscape":true,"nodes":[{"content":"The minimum length required for a password.","pos":[0,43]}]},{"pos":[89796,89918],"content":"Gets the time window between which consecutive failed attempts to provide a valid password or password answer are tracked.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the time window between which consecutive failed attempts to provide a valid password or password answer are tracked.","pos":[0,122]}]},{"pos":[89931,92503],"content":"The PasswordAttemptWindow property works in conjunction with the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property to help guard against an unwanted source guessing the password or password answer of a membership user through repeated attempts. When a user attempts to log in with, change, or reset his or her password, only a certain number of consecutive attempts are allowed within a specified time window. The length of this time window is specified in the PasswordAttemptWindow property, which identifies the number of minutes allowed between invalid attempts.       If the number of consecutive failed attempts that a user makes to reset his or her password equals the value stored in the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property, and the time elapsed since the last invalid attempt is less than the number of minutes specified in the PasswordAttemptWindow property, then the membership user is locked out. The user is locked out by setting the <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> property to `true` until the user is unlocked by a call to the <xref:System.Web.Security.MembershipUser.UnlockUser%2A> method.       If the interval between the current failed attempt and the last failed attempt is greater than the PasswordAttemptWindow property setting, the current invalid attempt is counted as the first. If a valid password answer is supplied before the maximum number of allowed invalid attempts is reached, the count of invalid password-answer attempts is set to 0 (zero). If a valid password is supplied before the maximum number of allowed invalid attempts is reached, the count of invalid password attempts and the count of invalid password-answer attempts are set to 0 (zero).       Invalid password and password-answer attempts accumulate independently of one another. For example, if the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> is set to 5, and three invalid password attempts are made followed by two invalid password-answer attempts, two more invalid password attempts (or three more invalid password-answer attempts) must be made within PasswordAttemptWindow for the membership user to be locked out.       The PasswordAttemptWindow property value is set in the application configuration by using the `passwordAttemptWindow` attribute of the  configuration-element section.       If the <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> property is set to `false`, invalid password-answer attempts are not tracked.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The PasswordAttemptWindow property works in conjunction with the &lt;xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A&gt; property to help guard against an unwanted source guessing the password or password answer of a membership user through repeated attempts.","pos":[0,271],"source":"The PasswordAttemptWindow property works in conjunction with the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property to help guard against an unwanted source guessing the password or password answer of a membership user through repeated attempts."},{"content":"When a user attempts to log in with, change, or reset his or her password, only a certain number of consecutive attempts are allowed within a specified time window.","pos":[272,436]},{"content":"The length of this time window is specified in the PasswordAttemptWindow property, which identifies the number of minutes allowed between invalid attempts.","pos":[437,592]},{"content":"If the number of consecutive failed attempts that a user makes to reset his or her password equals the value stored in the &lt;xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A&gt; property, and the time elapsed since the last invalid attempt is less than the number of minutes specified in the PasswordAttemptWindow property, then the membership user is locked out.","pos":[599,975],"source":"       If the number of consecutive failed attempts that a user makes to reset his or her password equals the value stored in the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property, and the time elapsed since the last invalid attempt is less than the number of minutes specified in the PasswordAttemptWindow property, then the membership user is locked out."},{"content":"The user is locked out by setting the &lt;xref:System.Web.Security.MembershipUser.IsLockedOut%2A&gt; property to <ph id=\"ph1\">`true`</ph> until the user is unlocked by a call to the &lt;xref:System.Web.Security.MembershipUser.UnlockUser%2A&gt; method.","pos":[976,1197],"source":" The user is locked out by setting the <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> property to `true` until the user is unlocked by a call to the <xref:System.Web.Security.MembershipUser.UnlockUser%2A> method."},{"content":"If the interval between the current failed attempt and the last failed attempt is greater than the PasswordAttemptWindow property setting, the current invalid attempt is counted as the first.","pos":[1204,1395]},{"content":"If a valid password answer is supplied before the maximum number of allowed invalid attempts is reached, the count of invalid password-answer attempts is set to 0 (zero).","pos":[1396,1566]},{"content":"If a valid password is supplied before the maximum number of allowed invalid attempts is reached, the count of invalid password attempts and the count of invalid password-answer attempts are set to 0 (zero).","pos":[1567,1774]},{"content":"Invalid password and password-answer attempts accumulate independently of one another.","pos":[1781,1867]},{"content":"For example, if the &lt;xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A&gt; is set to 5, and three invalid password attempts are made followed by two invalid password-answer attempts, two more invalid password attempts (or three more invalid password-answer attempts) must be made within PasswordAttemptWindow for the membership user to be locked out.","pos":[1868,2231],"source":" For example, if the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> is set to 5, and three invalid password attempts are made followed by two invalid password-answer attempts, two more invalid password attempts (or three more invalid password-answer attempts) must be made within PasswordAttemptWindow for the membership user to be locked out."},{"content":"The PasswordAttemptWindow property value is set in the application configuration by using the <ph id=\"ph1\">`passwordAttemptWindow`</ph> attribute of the  configuration-element section.","pos":[2238,2404],"source":"       The PasswordAttemptWindow property value is set in the application configuration by using the `passwordAttemptWindow` attribute of the  configuration-element section."},{"content":"If the &lt;xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A&gt; property is set to <ph id=\"ph1\">`false`</ph>, invalid password-answer attempts are not tracked.","pos":[2411,2562],"source":"       If the <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> property is set to `false`, invalid password-answer attempts are not tracked."}]},{"pos":[93468,93834],"content":"The time window, in minutes, during which consecutive failed attempts to provide a valid password or password answer are tracked. The default is 10 minutes. If the interval between the current failed attempt and the last failed attempt is greater than the PasswordAttemptWindow property setting, each failed attempt is treated as if it were the first failed attempt.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time window, in minutes, during which consecutive failed attempts to provide a valid password or password answer are tracked. The default is 10 minutes. If the interval between the current failed attempt and the last failed attempt is greater than the PasswordAttemptWindow property setting, each failed attempt is treated as if it were the first failed attempt.","pos":[0,366],"nodes":[{"content":"The time window, in minutes, during which consecutive failed attempts to provide a valid password or password answer are tracked.","pos":[0,129]},{"content":"The default is 10 minutes.","pos":[130,156]},{"content":"If the interval between the current failed attempt and the last failed attempt is greater than the PasswordAttemptWindow property setting, each failed attempt is treated as if it were the first failed attempt.","pos":[157,366]}]}]},{"pos":[94384,94440],"content":"Gets the regular expression used to evaluate a password.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the regular expression used to evaluate a password.","pos":[0,56]}]},{"pos":[94453,94978],"content":"The PasswordStrengthRegularExpression property gets the regular expression used to evaluate password complexity from the provider specified in the <xref:System.Web.Security.Membership.Provider%2A> property.       The PasswordStrengthRegularExpression property is set in the application configuration using the `passwordStrengthRegularExpression` attribute of the  configuration element.       For more information about regular expressions, see [.NET Framework Regular Expressions](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The PasswordStrengthRegularExpression property gets the regular expression used to evaluate password complexity from the provider specified in the &lt;xref:System.Web.Security.Membership.Provider%2A&gt; property.","pos":[0,206],"source":"The PasswordStrengthRegularExpression property gets the regular expression used to evaluate password complexity from the provider specified in the <xref:System.Web.Security.Membership.Provider%2A> property."},{"content":"The PasswordStrengthRegularExpression property is set in the application configuration using the <ph id=\"ph1\">`passwordStrengthRegularExpression`</ph> attribute of the  configuration element.","pos":[213,386],"source":"       The PasswordStrengthRegularExpression property is set in the application configuration using the `passwordStrengthRegularExpression` attribute of the  configuration element."},{"content":"For more information about regular expressions, see <bpt id=\"p1\">[</bpt>.NET Framework Regular Expressions<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[393,521],"source":"       For more information about regular expressions, see [.NET Framework Regular Expressions](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[96270,96319],"content":"A regular expression used to evaluate a password.","needQuote":true,"needEscape":true,"nodes":[{"content":"A regular expression used to evaluate a password.","pos":[0,49]}]},{"pos":[96756,96828],"content":"Gets a reference to the default membership provider for the application.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a reference to the default membership provider for the application.","pos":[0,72]}]},{"pos":[96840,97113],"content":"The Provider property enables you to reference the default membership provider for an application directly. This is commonly used to access custom members of the membership provider that are not part of the <xref:System.Web.Security.MembershipProvider> abstract base class.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Provider property enables you to reference the default membership provider for an application directly. This is commonly used to access custom members of the membership provider that are not part of the <xref:System.Web.Security.MembershipProvider> abstract base class.","pos":[0,273],"nodes":[{"content":"The Provider property enables you to reference the default membership provider for an application directly.","pos":[0,107]},{"content":"This is commonly used to access custom members of the membership provider that are not part of the &lt;xref:System.Web.Security.MembershipProvider&gt; abstract base class.","pos":[108,273],"source":" This is commonly used to access custom members of the membership provider that are not part of the <xref:System.Web.Security.MembershipProvider> abstract base class."}]}]},{"pos":[97813,97949],"content":"The default membership provider for the application exposed using the <xref:System.Web.Security.MembershipProvider> abstract base class.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default membership provider for the application exposed using the &lt;xref:System.Web.Security.MembershipProvider&gt; abstract base class.","pos":[0,136],"source":"The default membership provider for the application exposed using the <xref:System.Web.Security.MembershipProvider> abstract base class."}]},{"pos":[98366,98440],"content":"Gets a collection of the membership providers for the ASP.NET application.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of the membership providers for the ASP.NET application.","pos":[0,74]}]},{"pos":[98453,100795],"content":"The Providers property references all of the membership providers enabled for an application, including providers added in the Web.config file for the application and the Machine.config file for all applications. You can control which membership providers are available for an application using the `providers` element of the  section in the configuration for your application. For example, the following sample shows the  section in the Web.config file for an application that removes the <xref:System.Web.Security.SqlMembershipProvider> instance (`AspNetSqlProvider`) specified in the machine configuration file and adds a <xref:System.Web.Security.SqlMembershipProvider> instance named `SqlProvider` as the default membership provider for the application.      ```   <configuration>     <connectionStrings>       <add name=\"SqlServices\" connectionString=\"Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;\" />     </connectionStrings>     <system.web>       <membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">         <providers>           <remove name=\"AspNetSqlProvider\" />             <add name=\"SqlProvider\"               type=\"System.Web.Security.SqlMembershipProvider\"               connectionStringName=\"SqlServices\"               enablePasswordRetrieval=\"false\"               enablePasswordReset=\"true\"               requiresQuestionAndAnswer=\"true\"               passwordFormat=\"Hashed\"               applicationName=\"/\" />         </providers>       </membership>     </system.web>   </configuration>   ```       When specifying the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) section, you must specify the `defaultProvider` attribute. If you do not specify a [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) section in your Web.config, the values from the machine configuration are used and the <xref:System.Web.Security.SqlMembershipProvider> instance named `AspNetSqlProvider` is established as the `defaultProvider`.       You can obtain a strongly typed reference to a provider from the Providers collection by indexing the membership provider by name and casting it as the desired type.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Providers property references all of the membership providers enabled for an application, including providers added in the Web.config file for the application and the Machine.config file for all applications.","pos":[0,212]},{"content":"You can control which membership providers are available for an application using the <ph id=\"ph1\">`providers`</ph> element of the  section in the configuration for your application.","pos":[213,377],"source":" You can control which membership providers are available for an application using the `providers` element of the  section in the configuration for your application."},{"content":"For example, the following sample shows the  section in the Web.config file for an application that removes the &lt;xref:System.Web.Security.SqlMembershipProvider&gt; instance (<ph id=\"ph1\">`AspNetSqlProvider`</ph>) specified in the machine configuration file and adds a &lt;xref:System.Web.Security.SqlMembershipProvider&gt; instance named <ph id=\"ph2\">`SqlProvider`</ph> as the default membership provider for the application.","pos":[378,758],"source":" For example, the following sample shows the  section in the Web.config file for an application that removes the <xref:System.Web.Security.SqlMembershipProvider> instance (`AspNetSqlProvider`) specified in the machine configuration file and adds a <xref:System.Web.Security.SqlMembershipProvider> instance named `SqlProvider` as the default membership provider for the application."},{"content":"<ph id=\"ph1\">```   &lt;configuration&gt;     &lt;connectionStrings&gt;       &lt;add name=\"SqlServices\" connectionString=\"Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;\" /&gt;     &lt;/connectionStrings&gt;     &lt;system.web&gt;       &lt;membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\"&gt;         &lt;providers&gt;           &lt;remove name=\"AspNetSqlProvider\" /&gt;             &lt;add name=\"SqlProvider\"               type=\"System.Web.Security.SqlMembershipProvider\"               connectionStringName=\"SqlServices\"               enablePasswordRetrieval=\"false\"               enablePasswordReset=\"true\"               requiresQuestionAndAnswer=\"true\"               passwordFormat=\"Hashed\"               applicationName=\"/\" /&gt;         &lt;/providers&gt;       &lt;/membership&gt;     &lt;/system.web&gt;   &lt;/configuration&gt;   ```</ph>       When specifying the <bpt id=\"p1\">[</bpt>membership Element (ASP.NET Settings Schema)<ept id=\"p1\">](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049)</ept> section, you must specify the <ph id=\"ph2\">`defaultProvider`</ph> attribute.","pos":[764,1764],"source":"```   <configuration>     <connectionStrings>       <add name=\"SqlServices\" connectionString=\"Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;\" />     </connectionStrings>     <system.web>       <membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">         <providers>           <remove name=\"AspNetSqlProvider\" />             <add name=\"SqlProvider\"               type=\"System.Web.Security.SqlMembershipProvider\"               connectionStringName=\"SqlServices\"               enablePasswordRetrieval=\"false\"               enablePasswordReset=\"true\"               requiresQuestionAndAnswer=\"true\"               passwordFormat=\"Hashed\"               applicationName=\"/\" />         </providers>       </membership>     </system.web>   </configuration>   ```       When specifying the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) section, you must specify the `defaultProvider` attribute."},{"content":"If you do not specify a <bpt id=\"p1\">[</bpt>membership Element (ASP.NET Settings Schema)<ept id=\"p1\">](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049)</ept> section in your Web.config, the values from the machine configuration are used and the &lt;xref:System.Web.Security.SqlMembershipProvider&gt; instance named <ph id=\"ph1\">`AspNetSqlProvider`</ph> is established as the <ph id=\"ph2\">`defaultProvider`</ph>.","pos":[1765,2117],"source":" If you do not specify a [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) section in your Web.config, the values from the machine configuration are used and the <xref:System.Web.Security.SqlMembershipProvider> instance named `AspNetSqlProvider` is established as the `defaultProvider`."},{"content":"You can obtain a strongly typed reference to a provider from the Providers collection by indexing the membership provider by name and casting it as the desired type.","pos":[2124,2289]}]},{"pos":[101338,101463],"content":"A <xref:System.Web.Security.MembershipProviderCollection> of the membership providers configured for the ASP.NET application.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Web.Security.MembershipProviderCollection&gt; of the membership providers configured for the ASP.NET application.","pos":[0,125],"source":"A <xref:System.Web.Security.MembershipProviderCollection> of the membership providers configured for the ASP.NET application."}]},{"pos":[101961,102106],"content":"Gets a value indicating whether the default membership provider requires the user to answer a password question for password reset and retrieval.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the default membership provider requires the user to answer a password question for password reset and retrieval.","pos":[0,145]}]},{"pos":[102119,103330],"content":"Requiring a password question and answer provides an additional layer of security when retrieving or resetting a user's password. Users can supply a question and answer when their user name is created that they can later use to retrieve or reset a forgotten password.       RequiresQuestionAndAnswer is checked when <xref:System.Web.Security.MembershipUser.ResetPassword%2A> or <xref:System.Web.Security.MembershipUser.GetPassword%2A> is called. The provider provided with the .NET Framework throws a <xref:System.NotSupportedException> if RequiresQuestionAndAnswer is `true` and the supplied password answer is `null`.       If <xref:System.Web.Security.Membership.EnablePasswordReset%2A> and <xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> are both `false`, RequiresQuestionAndAnswer can still be used to enforce the creation of questions and answers when new users are created; however, the question and answer will not be used. You will be able to retrieve the question by using the <xref:System.Web.Security.MembershipUser> class.       For more information, see <xref:System.Web.Security.MembershipUser.ResetPassword%2A> and <xref:System.Web.Security.MembershipUser.GetPassword%2A>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Requiring a password question and answer provides an additional layer of security when retrieving or resetting a user's password.","pos":[0,129]},{"content":"Users can supply a question and answer when their user name is created that they can later use to retrieve or reset a forgotten password.","pos":[130,267]},{"content":"RequiresQuestionAndAnswer is checked when &lt;xref:System.Web.Security.MembershipUser.ResetPassword%2A&gt; or &lt;xref:System.Web.Security.MembershipUser.GetPassword%2A&gt; is called.","pos":[274,445],"source":"       RequiresQuestionAndAnswer is checked when <xref:System.Web.Security.MembershipUser.ResetPassword%2A> or <xref:System.Web.Security.MembershipUser.GetPassword%2A> is called."},{"content":"The provider provided with the .NET Framework throws a &lt;xref:System.NotSupportedException&gt; if RequiresQuestionAndAnswer is <ph id=\"ph1\">`true`</ph> and the supplied password answer is <ph id=\"ph2\">`null`</ph>.","pos":[446,619],"source":" The provider provided with the .NET Framework throws a <xref:System.NotSupportedException> if RequiresQuestionAndAnswer is `true` and the supplied password answer is `null`."},{"content":"If &lt;xref:System.Web.Security.Membership.EnablePasswordReset%2A&gt; and &lt;xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A&gt; are both <ph id=\"ph1\">`false`</ph>, RequiresQuestionAndAnswer can still be used to enforce the creation of questions and answers when new users are created; however, the question and answer will not be used.","pos":[626,948],"source":"       If <xref:System.Web.Security.Membership.EnablePasswordReset%2A> and <xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> are both `false`, RequiresQuestionAndAnswer can still be used to enforce the creation of questions and answers when new users are created; however, the question and answer will not be used."},{"content":"You will be able to retrieve the question by using the &lt;xref:System.Web.Security.MembershipUser&gt; class.","pos":[949,1052],"source":" You will be able to retrieve the question by using the <xref:System.Web.Security.MembershipUser> class."},{"content":"For more information, see &lt;xref:System.Web.Security.MembershipUser.ResetPassword%2A&gt; and &lt;xref:System.Web.Security.MembershipUser.GetPassword%2A&gt;.","pos":[1059,1205],"source":"       For more information, see <xref:System.Web.Security.MembershipUser.ResetPassword%2A> and <xref:System.Web.Security.MembershipUser.GetPassword%2A>."}]},{"pos":[105032,105234],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a password answer is required for password reset and retrieval; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a password answer is required for password reset and retrieval; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[105791,105856],"content":"Updates the database with the information for the specified user.","needQuote":true,"needEscape":true,"nodes":[{"content":"Updates the database with the information for the specified user.","pos":[0,65]}]},{"pos":[105868,106536],"content":"UpdateUser takes, as input, a <xref:System.Web.Security.MembershipUser> object populated with current information for the membership user and updates the data source with the property values of the <xref:System.Web.Security.MembershipUser> object. You can construct a new <xref:System.Web.Security.MembershipUser>, or retrieve a <xref:System.Web.Security.MembershipUser> object populated with current values at the data source using the <xref:System.Web.Security.Membership.GetUser%2A>, <xref:System.Web.Security.Membership.GetAllUsers%2A>, <xref:System.Web.Security.Membership.FindUsersByName%2A>, or <xref:System.Web.Security.Membership.FindUsersByEmail%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"UpdateUser takes, as input, a <xref:System.Web.Security.MembershipUser> object populated with current information for the membership user and updates the data source with the property values of the <xref:System.Web.Security.MembershipUser> object. You can construct a new <xref:System.Web.Security.MembershipUser>, or retrieve a <xref:System.Web.Security.MembershipUser> object populated with current values at the data source using the <xref:System.Web.Security.Membership.GetUser%2A>, <xref:System.Web.Security.Membership.GetAllUsers%2A>, <xref:System.Web.Security.Membership.FindUsersByName%2A>, or <xref:System.Web.Security.Membership.FindUsersByEmail%2A> methods.","pos":[0,668],"nodes":[{"content":"UpdateUser takes, as input, a &lt;xref:System.Web.Security.MembershipUser&gt; object populated with current information for the membership user and updates the data source with the property values of the &lt;xref:System.Web.Security.MembershipUser&gt; object.","pos":[0,247],"source":"UpdateUser takes, as input, a <xref:System.Web.Security.MembershipUser> object populated with current information for the membership user and updates the data source with the property values of the <xref:System.Web.Security.MembershipUser> object."},{"content":"You can construct a new &lt;xref:System.Web.Security.MembershipUser&gt;, or retrieve a &lt;xref:System.Web.Security.MembershipUser&gt; object populated with current values at the data source using the &lt;xref:System.Web.Security.Membership.GetUser%2A&gt;, &lt;xref:System.Web.Security.Membership.GetAllUsers%2A&gt;, &lt;xref:System.Web.Security.Membership.FindUsersByName%2A&gt;, or &lt;xref:System.Web.Security.Membership.FindUsersByEmail%2A&gt; methods.","pos":[248,668],"source":" You can construct a new <xref:System.Web.Security.MembershipUser>, or retrieve a <xref:System.Web.Security.MembershipUser> object populated with current values at the data source using the <xref:System.Web.Security.Membership.GetUser%2A>, <xref:System.Web.Security.Membership.GetAllUsers%2A>, <xref:System.Web.Security.Membership.FindUsersByName%2A>, or <xref:System.Web.Security.Membership.FindUsersByEmail%2A> methods."}]}]},{"pos":[107394,107525],"content":"A <xref:System.Web.Security.MembershipUser> object that represents the user to be updated and the updated information for the user.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Web.Security.MembershipUser&gt; object that represents the user to be updated and the updated information for the user.","pos":[0,131],"source":"A <xref:System.Web.Security.MembershipUser> object that represents the user to be updated and the updated information for the user."}]},{"pos":[107697,107779],"content":"<ph id=\"ph1\">&lt;code&gt;user&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>user</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[108191,108317],"content":"Specifies the number of minutes after the last-activity date/time stamp for a user during which the user is considered online.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the number of minutes after the last-activity date/time stamp for a user during which the user is considered online.","pos":[0,126]}]},{"pos":[108330,109506],"content":"The UserIsOnlineTimeWindow property value is checked during the call to <xref:System.Web.Security.Membership.GetNumberOfUsersOnline%2A>. If the <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> for a user is greater than the current date and time minus the UserIsOnlineTimeWindow value in minutes, then the user is considered online. You can determine whether a membership user is considered online with the <xref:System.Web.Security.MembershipUser.IsOnline%2A> property of the <xref:System.Web.Security.MembershipUser> class.       The <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> for a user is updated when a user's credentials are successfully validated by the <xref:System.Web.Security.Membership.ValidateUser%2A> method. You can also update the <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> for a membership user when you call one of the <xref:System.Web.Security.Membership.GetUser%2A> overloads. If you call a <xref:System.Web.Security.Membership.GetUser%2A> overload that takes a `userIsOnline` parameter, specify a value of `true` to update the <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> for the user.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The UserIsOnlineTimeWindow property value is checked during the call to &lt;xref:System.Web.Security.Membership.GetNumberOfUsersOnline%2A&gt;.","pos":[0,136],"source":"The UserIsOnlineTimeWindow property value is checked during the call to <xref:System.Web.Security.Membership.GetNumberOfUsersOnline%2A>."},{"content":"If the &lt;xref:System.Web.Security.MembershipUser.LastActivityDate%2A&gt; for a user is greater than the current date and time minus the UserIsOnlineTimeWindow value in minutes, then the user is considered online.","pos":[137,345],"source":" If the <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> for a user is greater than the current date and time minus the UserIsOnlineTimeWindow value in minutes, then the user is considered online."},{"content":"You can determine whether a membership user is considered online with the &lt;xref:System.Web.Security.MembershipUser.IsOnline%2A&gt; property of the &lt;xref:System.Web.Security.MembershipUser&gt; class.","pos":[346,538],"source":" You can determine whether a membership user is considered online with the <xref:System.Web.Security.MembershipUser.IsOnline%2A> property of the <xref:System.Web.Security.MembershipUser> class."},{"content":"The &lt;xref:System.Web.Security.MembershipUser.LastActivityDate%2A&gt; for a user is updated when a user's credentials are successfully validated by the &lt;xref:System.Web.Security.Membership.ValidateUser%2A&gt; method.","pos":[545,754],"source":"       The <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> for a user is updated when a user's credentials are successfully validated by the <xref:System.Web.Security.Membership.ValidateUser%2A> method."},{"content":"You can also update the &lt;xref:System.Web.Security.MembershipUser.LastActivityDate%2A&gt; for a membership user when you call one of the &lt;xref:System.Web.Security.Membership.GetUser%2A&gt; overloads.","pos":[755,947],"source":" You can also update the <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> for a membership user when you call one of the <xref:System.Web.Security.Membership.GetUser%2A> overloads."},{"content":"If you call a &lt;xref:System.Web.Security.Membership.GetUser%2A&gt; overload that takes a <ph id=\"ph1\">`userIsOnline`</ph> parameter, specify a value of <ph id=\"ph2\">`true`</ph> to update the &lt;xref:System.Web.Security.MembershipUser.LastActivityDate%2A&gt; for the user.","pos":[948,1174],"source":" If you call a <xref:System.Web.Security.Membership.GetUser%2A> overload that takes a `userIsOnline` parameter, specify a value of `true` to update the <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> for the user."}]},{"pos":[110449,110565],"content":"The number of minutes after the last-activity date/time stamp for a user during which the user is considered online.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of minutes after the last-activity date/time stamp for a user during which the user is considered online.","pos":[0,116]}]},{"pos":[111112,111172],"content":"Verifies that the supplied user name and password are valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"Verifies that the supplied user name and password are valid.","pos":[0,60]}]},{"pos":[111184,111379],"content":"ValidateUser provides an easy way to verify a user name and password from the data source. Note that, if the `username` parameter is empty or `null`, an <xref:System.Web.HttpException> is thrown.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"ValidateUser provides an easy way to verify a user name and password from the data source.","pos":[0,90]},{"content":"Note that, if the <ph id=\"ph1\">`username`</ph> parameter is empty or <ph id=\"ph2\">`null`</ph>, an &lt;xref:System.Web.HttpException&gt; is thrown.","pos":[91,195],"source":" Note that, if the `username` parameter is empty or `null`, an <xref:System.Web.HttpException> is thrown."}]},{"pos":[112529,112566],"content":"The name of the user to be validated.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the user to be validated.","pos":[0,37]}]},{"pos":[112631,112667],"content":"The password for the specified user.","needQuote":true,"needEscape":true,"nodes":[{"content":"The password for the specified user.","pos":[0,36]}]},{"pos":[112726,112911],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the supplied user name and password are valid; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the supplied user name and password are valid; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[113374,113451],"content":"Occurs when a user is created, a password is changed, or a password is reset.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when a user is created, a password is changed, or a password is reset.","pos":[0,77]}]},{"pos":[113464,115162],"content":"The <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event is raised when the <xref:System.Web.Security.MembershipProvider.CreateUser%2A> method, the <xref:System.Web.Security.MembershipProvider.ChangePassword%2A> method, or the <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> method of a membership provider is called.       You can use the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event to validate password formats and values for membership users.       You can cancel the current <xref:System.Web.Security.MembershipProvider.CreateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, or <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> action by setting the <xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> property of the supplied <xref:System.Web.Security.ValidatePasswordEventArgs> to `true` during the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event.       If you cancel the current action by setting the <xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> property to `true`, you can set the <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> property of the supplied <xref:System.Web.Security.ValidatePasswordEventArgs> to an exception that describes the reason for the password-validation failure. The calling method will throw the exception that the <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> property is set to. If the <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> property is `null`, the caller will throw a generic password-validation-failure exception.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.Security.MembershipProvider.ValidatingPassword&gt; event is raised when the &lt;xref:System.Web.Security.MembershipProvider.CreateUser%2A&gt; method, the &lt;xref:System.Web.Security.MembershipProvider.ChangePassword%2A&gt; method, or the &lt;xref:System.Web.Security.MembershipProvider.ResetPassword%2A&gt; method of a membership provider is called.","pos":[0,350],"source":"The <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event is raised when the <xref:System.Web.Security.MembershipProvider.CreateUser%2A> method, the <xref:System.Web.Security.MembershipProvider.ChangePassword%2A> method, or the <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> method of a membership provider is called."},{"content":"You can use the &lt;xref:System.Web.Security.MembershipProvider.ValidatingPassword&gt; event to validate password formats and values for membership users.","pos":[357,505],"source":"       You can use the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event to validate password formats and values for membership users."},{"content":"You can cancel the current &lt;xref:System.Web.Security.MembershipProvider.CreateUser%2A&gt;, &lt;xref:System.Web.Security.MembershipProvider.ChangePassword%2A&gt;, or &lt;xref:System.Web.Security.MembershipProvider.ResetPassword%2A&gt; action by setting the &lt;xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A&gt; property of the supplied &lt;xref:System.Web.Security.ValidatePasswordEventArgs&gt; to <ph id=\"ph1\">`true`</ph> during the &lt;xref:System.Web.Security.MembershipProvider.ValidatingPassword&gt; event.","pos":[512,986],"source":"       You can cancel the current <xref:System.Web.Security.MembershipProvider.CreateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, or <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> action by setting the <xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> property of the supplied <xref:System.Web.Security.ValidatePasswordEventArgs> to `true` during the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event."},{"content":"If you cancel the current action by setting the &lt;xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A&gt; property to <ph id=\"ph1\">`true`</ph>, you can set the &lt;xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A&gt; property of the supplied &lt;xref:System.Web.Security.ValidatePasswordEventArgs&gt; to an exception that describes the reason for the password-validation failure.","pos":[993,1371],"source":"       If you cancel the current action by setting the <xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> property to `true`, you can set the <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> property of the supplied <xref:System.Web.Security.ValidatePasswordEventArgs> to an exception that describes the reason for the password-validation failure."},{"content":"The calling method will throw the exception that the &lt;xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A&gt; property is set to.","pos":[1372,1519],"source":" The calling method will throw the exception that the <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> property is set to."},{"content":"If the &lt;xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A&gt; property is <ph id=\"ph1\">`null`</ph>, the caller will throw a generic password-validation-failure exception.","pos":[1520,1692],"source":" If the <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> property is `null`, the caller will throw a generic password-validation-failure exception."}]},{"pos":[115862,115874],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Security.Membership\n  id: Membership\n  children:\n  - System.Web.Security.Membership.ApplicationName\n  - System.Web.Security.Membership.CreateUser(System.String,System.String)\n  - System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)\n  - System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)\n  - System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)\n  - System.Web.Security.Membership.DeleteUser(System.String)\n  - System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)\n  - System.Web.Security.Membership.EnablePasswordReset\n  - System.Web.Security.Membership.EnablePasswordRetrieval\n  - System.Web.Security.Membership.FindUsersByEmail(System.String)\n  - System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)\n  - System.Web.Security.Membership.FindUsersByName(System.String)\n  - System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)\n  - System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)\n  - System.Web.Security.Membership.GetAllUsers\n  - System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)\n  - System.Web.Security.Membership.GetNumberOfUsersOnline\n  - System.Web.Security.Membership.GetUser\n  - System.Web.Security.Membership.GetUser(System.Boolean)\n  - System.Web.Security.Membership.GetUser(System.Object)\n  - System.Web.Security.Membership.GetUser(System.String)\n  - System.Web.Security.Membership.GetUser(System.Object,System.Boolean)\n  - System.Web.Security.Membership.GetUser(System.String,System.Boolean)\n  - System.Web.Security.Membership.GetUserNameByEmail(System.String)\n  - System.Web.Security.Membership.HashAlgorithmType\n  - System.Web.Security.Membership.MaxInvalidPasswordAttempts\n  - System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters\n  - System.Web.Security.Membership.MinRequiredPasswordLength\n  - System.Web.Security.Membership.PasswordAttemptWindow\n  - System.Web.Security.Membership.PasswordStrengthRegularExpression\n  - System.Web.Security.Membership.Provider\n  - System.Web.Security.Membership.Providers\n  - System.Web.Security.Membership.RequiresQuestionAndAnswer\n  - System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)\n  - System.Web.Security.Membership.UserIsOnlineTimeWindow\n  - System.Web.Security.Membership.ValidateUser(System.String,System.String)\n  - System.Web.Security.Membership.ValidatingPassword\n  langs:\n  - csharp\n  name: Membership\n  nameWithType: Membership\n  fullName: System.Web.Security.Membership\n  type: Class\n  summary: Validates user credentials and manages user settings. This class cannot be inherited.\n  remarks: \"The Membership class is used in ASP.NET applications to validate user credentials and manage user settings such as passwords and e-mail addresses. The Membership class can be used on its own, or in conjunction with the <xref:System.Web.Security.FormsAuthentication> to create a complete system for authenticating users of a Web application or site. The <xref:System.Web.UI.WebControls.Login> control encapsulates the Membership class to provide a convenient mechanism for validating users.  \\n  \\n> [!NOTE]\\n>  If you are not familiar with the membership features of ASP.NET, see [Introduction to Membership](~/add/includes/ajax-current-ext-md.md) before continuing. For a list of other topics related to membership, see [Managing Users by Using Membership](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The Membership class provides facilities for:  \\n  \\n-   Creating new users.  \\n  \\n-   Storing membership information (user names, passwords, e-mail addresses, and supporting data) in Microsoft SQL Server or in an alternative data store.  \\n  \\n-   Authenticating users who visit your site. You can authenticate users programmatically, or you can use the <xref:System.Web.UI.WebControls.Login> control to create a complete authentication system that requires little or no code.  \\n  \\n-   Managing passwords, which includes creating, changing, retrieving, and resetting them, and so on. You can optionally configure ASP.NET membership to require a password question and answer to authenticate password reset or retrieval requests for users that have forgotten their password.  \\n  \\n Although ASP.NET membership is a self-standing feature in ASP.NET For authentication, it can be integrated with ASP.NET role management to provide authorization services for your site. Membership can also be integrated with the ASP.NET user <xref:System.Web.Profile> to provide application-specific customization that can be tailored to individual users. For details, see [Understanding Role Management](~/add/includes/ajax-current-ext-md.md) and [ASP.NET Profile Properties Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The Membership class relies on membership providers to communicate with a data source. The .NET Framework includes a <xref:System.Web.Security.SqlMembershipProvider>, which stores user information in a Microsoft SQL Server database, and an <xref:System.Web.Security.ActiveDirectoryMembershipProvider>, which enables you to store user information on an Active Directory or Active Directory Application Mode (ADAM) server. You can also implement a custom membership provider to communicate with an alternative data source that can be used by the Membership class. Custom membership providers inherit the <xref:System.Web.Security.MembershipProvider> abstract class. For more information, see [Implementing a Membership Provider](~/add/includes/ajax-current-ext-md.md).  \\n  \\n By default, ASP.NET membership is enabled for all ASP.NET applications. The default membership provider is the <xref:System.Web.Security.SqlMembershipProvider> and is specified in the machine configuration with the name `AspNetSqlProvider`. The default instance of the <xref:System.Web.Security.SqlMembershipProvider> is configured to connect to a local instance of Microsoft SQL Server.  \\n  \\n You can modify the default settings to specify a <xref:System.Web.Security.SqlMembershipProvider> other than the `AspNetSqlProvider` instance as the default provider, or specify an instance of a custom provider as the default provider for your ASP.NET application using the Web.config file. You can specify the ASP.NET membership configuration for your Web application using the  configuration section in the Web.config file. You can use the `providers` subsection of the  section to specify a membership provider other than one of the default providers. For example, the following  section removes the default membership providers from the current application configuration and adds a new provider with a name of `SqlProvider` that connects to a SQL Server instance named `AspSqlServer`.  \\n  \\n```  \\n<configuration>  \\n  <connectionStrings>  \\n    <add name=\\\"SqlServices\\\" connectionString=\\\"Data Source=AspSqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;\\\" />  \\n  </connectionStrings>  \\n  <system.web>  \\n    <membership defaultProvider=\\\"SqlProvider\\\" userIsOnlineTimeWindow=\\\"20\\\">  \\n      <providers>  \\n        <remove name=\\\"AspNetSqlProvider\\\" />  \\n        <add name=\\\"SqlProvider\\\"  \\n          type=\\\"System.Web.Security.SqlMembershipProvider\\\"  \\n          connectionStringName=\\\"SqlServices\\\"  \\n          enablePasswordRetrieval=\\\"false\\\"  \\n          enablePasswordReset=\\\"true\\\"  \\n          requiresQuestionAndAnswer=\\\"true\\\"  \\n          passwordFormat=\\\"Hashed\\\"  \\n          applicationName=\\\"/\\\" />  \\n      </providers>  \\n    </membership>  \\n  </system.web>  \\n</configuration>  \\n```\"\n  example:\n  - \"The following code example shows the login page for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the supplied user credentials are invalid, a message is displayed to the user. Otherwise, the user is redirected to the originally requested URL using the <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> method.  \\n  \\n> [!NOTE]\\n>  The ASP.NET login controls (<xref:System.Web.UI.WebControls.Login>, <xref:System.Web.UI.WebControls.LoginView>, <xref:System.Web.UI.WebControls.LoginStatus>, <xref:System.Web.UI.WebControls.LoginName>, and <xref:System.Web.UI.WebControls.PasswordRecovery>) encapsulate virtually all of the logic required to prompt users for credentials and validate the credentials in the membership system and can be used in place of programmatic checking using the Membership class.  \\n  \\n> [!IMPORTANT]\\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/t-system.web.security.me_1.aspx)]\\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/t-system.web.security.me_1.aspx)]\"\n  syntax:\n    content: public static class Membership\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.Security.Membership.ApplicationName\n  id: ApplicationName\n  parent: System.Web.Security.Membership\n  langs:\n  - csharp\n  name: ApplicationName\n  nameWithType: Membership.ApplicationName\n  fullName: System.Web.Security.Membership.ApplicationName\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets or sets the name of the application.\n  remarks: \"The ApplicationName is used to identify users specific to an application. That is, the same user name can exist in the database for multiple ASP.NET applications that specify a different ApplicationName. This enables multiple applications to use the same database to store user information without running into duplicate user name conflicts. Alternatively, multiple ASP.NET applications can use the same user database by specifying the same ApplicationName. The ApplicationName can be set programmatically or declaratively in the configuration for the Web application.  \\n  \\n> [!CAUTION]\\n>  Because a single default membership provider instance is used for all of the requests served by an <xref:System.Web.HttpApplication> object, you can have multiple requests executing concurrently and attempting to set the ApplicationName property value. The ApplicationName property is not thread safe for multiple writes, and changing the ApplicationName property value can result in unexpected behavior for multiple users of an application. We recommend that you avoid writing code that allows users to set the ApplicationName property, unless you must. An example of an application where setting the ApplicationName property may be required is an administrative application that manages membership data for multiple applications. Such an application should be a single-user application and not a Web application.\"\n  example:\n  - \"The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use a <xref:System.Web.Security.SqlMembershipProvider> instance and sets the ApplicationName to `MyApplication`.  \\n  \\n```  \\n<membership defaultProvider=\\\"SqlProvider\\\" userIsOnlineTimeWindow=\\\"20\\\">  \\n  <providers>  \\n    <add name=\\\"SqlProvider\\\"  \\n      type=\\\"System.Web.Security.SqlMembershipProvider\\\"  \\n      connectionStringName=\\\"SqlServices\\\"  \\n      enablePasswordRetrieval=\\\"true\\\"  \\n      enablePasswordReset=\\\"false\\\"  \\n      requiresQuestionAndAnswer=\\\"true\\\"  \\n      passwordFormat=\\\"Encrypted\\\"  \\n      applicationName=\\\"MyApplication\\\" />  \\n  </providers>  \\n</membership>  \\n```\"\n  syntax:\n    content: public static string ApplicationName { get; set; }\n    return:\n      type: System.String\n      description: The name of the application.\n  overload: System.Web.Security.Membership.ApplicationName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.Membership.CreateUser(System.String,System.String)\n  id: CreateUser(System.String,System.String)\n  parent: System.Web.Security.Membership\n  langs:\n  - csharp\n  name: CreateUser(String,String)\n  nameWithType: Membership.CreateUser(String,String)\n  fullName: System.Web.Security.Membership.CreateUser(String,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Adds a new user to the data store.\n  remarks: \"CreateUser adds a new user to the data store and returns a <xref:System.Web.Security.MembershipUser> object for the newly created user. If the user creation fails, a <xref:System.Web.Security.MembershipCreateUserException> is thrown. You can retrieve a <xref:System.Web.Security.MembershipCreateStatus> value from the <xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> property of the <xref:System.Web.Security.MembershipCreateUserException> that indicates why user creation failed.  \\n  \\n Once a membership user has been created and you have a reference to a <xref:System.Web.Security.MembershipUser> object for that user, you can modify the settings for that user with the <xref:System.Web.Security.MembershipUser> public methods, such as <xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> for applications where <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> is `true`, or by setting the property values of the <xref:System.Web.Security.MembershipUser> object and passing them to the <xref:System.Web.Security.Membership.UpdateUser%2A> method.  \\n  \\n If a user already exists in the data source for the application, you can obtain a <xref:System.Web.Security.MembershipUser> object for the existing user with the <xref:System.Web.Security.Membership.GetUser%2A> method.  \\n  \\n The <xref:System.Web.Security.SqlMembershipProvider> provides an option to require a unique e-mail address for each user. If the <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> property is `true`, you will need to use one of the CreateUser overloads that allows you to specify an e-mail address for the user being created. Otherwise, a <xref:System.Web.Security.MembershipCreateUserException> will be thrown.  \\n  \\n Leading and trailing spaces are trimmed from all parameter values.\"\n  example:\n  - \"The following code example creates a new user for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the login page for the application.  \\n  \\n> [!IMPORTANT]\\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[System.Web.Security.Membership#2](~/add/codesnippet/csharp/m-system.web.security.me_0_1.aspx)]\\n [!code-vb[System.Web.Security.Membership#2](~/add/codesnippet/visualbasic/m-system.web.security.me_0_1.aspx)]\"\n  syntax:\n    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password);\n    parameters:\n    - id: username\n      type: System.String\n      description: The user name for the new user.\n    - id: password\n      type: System.String\n      description: The password for the new user.\n    return:\n      type: System.Web.Security.MembershipUser\n      description: A <xref:System.Web.Security.MembershipUser> object for the newly created user.\n  overload: System.Web.Security.Membership.CreateUser*\n  exceptions:\n  - type: System.Web.Security.MembershipCreateUserException\n    commentId: T:System.Web.Security.MembershipCreateUserException\n    description: The user was not created. Check the <xref:System.Web.Security.MembershipCreateUserException.StatusCode*> property for a <xref:System.Web.Security.MembershipCreateStatus> value.\n  platform:\n  - net462\n- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)\n  id: CreateUser(System.String,System.String,System.String)\n  parent: System.Web.Security.Membership\n  langs:\n  - csharp\n  name: CreateUser(String,String,String)\n  nameWithType: Membership.CreateUser(String,String,String)\n  fullName: System.Web.Security.Membership.CreateUser(String,String,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Adds a new user with a specified e-mail address to the data store.\n  remarks: \"<xref:System.Web.Security.Membership.CreateUser%2A> adds a new user to the data store and returns a <xref:System.Web.Security.MembershipUser> object for the newly created user. If the user creation fails, a <xref:System.Web.Security.MembershipCreateUserException> is thrown. You can retrieve a <xref:System.Web.Security.MembershipCreateStatus> value from the <xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> property of the <xref:System.Web.Security.MembershipCreateUserException> that indicates why user creation failed.  \\n  \\n Once a membership user has been created and you have a reference to a <xref:System.Web.Security.MembershipUser> object for that user, you can modify the settings for that user with the <xref:System.Web.Security.MembershipUser> public methods, such as <xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> for applications where <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> is `true`, or by setting the property values of the <xref:System.Web.Security.MembershipUser> object and passing them to the <xref:System.Web.Security.Membership.UpdateUser%2A> method.  \\n  \\n If a user already exists in the data source for the application, you can obtain a <xref:System.Web.Security.MembershipUser> object for the existing user with the <xref:System.Web.Security.Membership.GetUser%2A> method.  \\n  \\n Leading and trailing spaces are trimmed from all parameter values.\"\n  example:\n  - \"The following code example creates a new user for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the login page for the application.  \\n  \\n> [!IMPORTANT]\\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-vb[System.Web.Security.Membership#1](~/add/codesnippet/visualbasic/8cf35595-ec0c-4c08-b671-_1.aspx)]\\n [!code-cs[System.Web.Security.Membership#1](~/add/codesnippet/csharp/8cf35595-ec0c-4c08-b671-_1.aspx)]\"\n  syntax:\n    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email);\n    parameters:\n    - id: username\n      type: System.String\n      description: The user name for the new user.\n    - id: password\n      type: System.String\n      description: The password for the new user.\n    - id: email\n      type: System.String\n      description: The e-mail address for the new user.\n    return:\n      type: System.Web.Security.MembershipUser\n      description: A <xref:System.Web.Security.MembershipUser> object for the newly created user.\n  overload: System.Web.Security.Membership.CreateUser*\n  exceptions:\n  - type: System.Web.Security.MembershipCreateUserException\n    commentId: T:System.Web.Security.MembershipCreateUserException\n    description: The user was not created. Check the <xref:System.Web.Security.MembershipCreateUserException.StatusCode*> property for a <xref:System.Web.Security.MembershipCreateStatus> value.\n  platform:\n  - net462\n- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)\n  id: CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)\n  parent: System.Web.Security.Membership\n  langs:\n  - csharp\n  name: CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)\n  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)\n  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Adds a new user with specified property values to the data store and returns a status parameter indicating that the user was successfully created or the reason the user creation failed.\n  remarks: \"CreateUser adds a new user to the data store and returns a <xref:System.Web.Security.MembershipUser> object for the newly created user. If the user creation fails, you can retrieve a <xref:System.Web.Security.MembershipCreateStatus> value from the `status` output parameter that indicates why user creation failed.  \\n  \\n The CreateUser method will return `null` if `password` is an empty string or `null`, `username` is an empty string or `null` or contains a comma (,), `passwordQuestion` is not `null` and is an empty string, or `passwordAnswer` is not `null` and contains an empty string.  \\n  \\n Once a membership user has been created and you have a reference to a <xref:System.Web.Security.MembershipUser> object for that user, you can modify the settings for that user with the <xref:System.Web.Security.MembershipUser> public methods and by setting the property values of the <xref:System.Web.Security.MembershipUser> object and then passing the <xref:System.Web.Security.MembershipUser> object to the <xref:System.Web.Security.Membership.UpdateUser%2A> method.  \\n  \\n If a user already exists in the data source for the application, you can obtain a <xref:System.Web.Security.MembershipUser> object for the existing user with the <xref:System.Web.Security.Membership.GetUser%2A> method.  \\n  \\n Leading and trailing spaces are trimmed from all string parameter values.\"\n  example:\n  - \"The following code example creates a new user for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the login page for the application.  \\n  \\n> [!IMPORTANT]\\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/csharp/baa4c01c-297e-4ec6-a9d9-_1.aspx)]\\n [!code-vb[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/visualbasic/baa4c01c-297e-4ec6-a9d9-_1.aspx)]\"\n  syntax:\n    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, out System.Web.Security.MembershipCreateStatus status);\n    parameters:\n    - id: username\n      type: System.String\n      description: The user name for the new user.\n    - id: password\n      type: System.String\n      description: The password for the new user.\n    - id: email\n      type: System.String\n      description: The e-mail address for the new user.\n    - id: passwordQuestion\n      type: System.String\n      description: The password-question value for the membership user.\n    - id: passwordAnswer\n      type: System.String\n      description: The password-answer value for the membership user.\n    - id: isApproved\n      type: System.Boolean\n      description: A Boolean that indicates whether the new user is approved to log on.\n    - id: status\n      type: System.Web.Security.MembershipCreateStatus\n      description: A <xref:System.Web.Security.MembershipCreateStatus> indicating that the user was created successfully or the reason that creation failed.\n    return:\n      type: System.Web.Security.MembershipUser\n      description: A <xref:System.Web.Security.MembershipUser> object for the newly created user. If no user was created, this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Web.Security.Membership.CreateUser*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)\n  id: CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)\n  parent: System.Web.Security.Membership\n  langs:\n  - csharp\n  name: CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)\n  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)\n  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Adds a new user with specified property values and a unique identifier to the data store and returns a status parameter indicating that the user was successfully created or the reason the user creation failed.\n  remarks: \"CreateUser adds a new user to the data store and returns a <xref:System.Web.Security.MembershipUser> object for the newly created user. If the user creation fails, you can retrieve a <xref:System.Web.Security.MembershipCreateStatus> value from the `status` output parameter that indicates why user creation failed. You can specify a unique identifier for the user, such as a primary key value for a database, by using the `providerUserKey` parameter.  \\n  \\n The CreateUser method will return `null` if `password` is an empty string or `null`, `username` is an empty string or `null` or contains a comma (,), `passwordQuestion` is not `null` and contains an empty string, or `passwordAnswer` is not `null` and contains an empty string.  \\n  \\n Once a membership user has been created and you have a reference to a <xref:System.Web.Security.MembershipUser> object for that user, you can modify the settings for that user with the <xref:System.Web.Security.MembershipUser> public methods and by setting the property values of the <xref:System.Web.Security.MembershipUser> object and then passing the <xref:System.Web.Security.MembershipUser> object to the <xref:System.Web.Security.Membership.UpdateUser%2A> method.  \\n  \\n If a user already exists in the data source for the application, you can obtain a <xref:System.Web.Security.MembershipUser> object for the existing user with the <xref:System.Web.Security.Membership.GetUser%2A> method.  \\n  \\n Leading and trailing spaces are trimmed from all string parameter values.\"\n  syntax:\n    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);\n    parameters:\n    - id: username\n      type: System.String\n      description: The user name for the new user.\n    - id: password\n      type: System.String\n      description: The password for the new user.\n    - id: email\n      type: System.String\n      description: The e-mail address for the new user.\n    - id: passwordQuestion\n      type: System.String\n      description: The password-question value for the membership user.\n    - id: passwordAnswer\n      type: System.String\n      description: The password-answer value for the membership user.\n    - id: isApproved\n      type: System.Boolean\n      description: A Boolean that indicates whether the new user is approved to log on.\n    - id: providerUserKey\n      type: System.Object\n      description: The user identifier for the user that should be stored in the membership data store.\n    - id: status\n      type: System.Web.Security.MembershipCreateStatus\n      description: A <xref:System.Web.Security.MembershipCreateStatus> indicating that the user was created successfully or the reason creation failed.\n    return:\n      type: System.Web.Security.MembershipUser\n      description: A <xref:System.Web.Security.MembershipUser> object for the newly created user. If no user was created, this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Web.Security.Membership.CreateUser*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.Membership.DeleteUser(System.String)\n  id: DeleteUser(System.String)\n  parent: System.Web.Security.Membership\n  langs:\n  - csharp\n  name: DeleteUser(String)\n  nameWithType: Membership.DeleteUser(String)\n  fullName: System.Web.Security.Membership.DeleteUser(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Deletes a user and any related user data from the database.\n  remarks: User data stored in the database for the <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, or <xref:System.Web.UI.WebControls.WebParts.WebPart> personalization is also deleted when you are using the <xref:System.Web.Security.SqlRoleProvider>, <xref:System.Web.Profile.SqlProfileProvider>, and <xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> objects for data storage.\n  example:\n  - \"The following code example deletes the currently logged-on user and all related data.  \\n  \\n [!code-vb[System.Web.Security.Membership#8](~/add/codesnippet/visualbasic/m-system.web.security.me_11_1.aspx)]\\n [!code-cs[System.Web.Security.Membership#8](~/add/codesnippet/csharp/m-system.web.security.me_11_1.aspx)]\"\n  syntax:\n    content: public static bool DeleteUser (string username);\n    parameters:\n    - id: username\n      type: System.String\n      description: The name of the user to delete.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user was deleted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.Security.Membership.DeleteUser*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>username</code> is an empty string or contains a comma (,).\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>username</code> is <xref uid=\"langword_csharp_null.\" name=\"null.\" href=\"\"></xref>\n  platform:\n  - net462\n- uid: System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)\n  id: DeleteUser(System.String,System.Boolean)\n  parent: System.Web.Security.Membership\n  langs:\n  - csharp\n  name: DeleteUser(String,Boolean)\n  nameWithType: Membership.DeleteUser(String,Boolean)\n  fullName: System.Web.Security.Membership.DeleteUser(String,Boolean)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Deletes a user from the database.\n  remarks: \"Users deleted from the database are only deleted from the configured `applicationName`.  \\n  \\n If `deleteAllRelatedData` is `true`, user data stored in the database for the <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, or <xref:System.Web.UI.WebControls.WebParts.WebPart> personalization is also deleted when you are using the <xref:System.Web.Security.SqlRoleProvider>, <xref:System.Web.Profile.SqlProfileProvider>, and <xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> objects for data storage.\"\n  example:\n  - \"The following code example deletes the currently logged-on user and all related data.  \\n  \\n [!code-cs[System.Web.Security.SqlMembershipProvider#6](~/add/codesnippet/csharp/m-system.web.security.me_12_1.aspx)]\\n [!code-vb[System.Web.Security.SqlMembershipProvider#6](~/add/codesnippet/visualbasic/m-system.web.security.me_12_1.aspx)]\"\n  syntax:\n    content: public static bool DeleteUser (string username, bool deleteAllRelatedData);\n    parameters:\n    - id: username\n      type: System.String\n      description: The name of the user to delete.\n    - id: deleteAllRelatedData\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to delete data related to the user from the database; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to leave data related to the user in the database.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user was deleted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.Security.Membership.DeleteUser*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>username</code> is an empty string or contains a comma (,).\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>username</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.Security.Membership.EnablePasswordReset\n  id: EnablePasswordReset\n  parent: System.Web.Security.Membership\n  langs:\n  - csharp\n  name: EnablePasswordReset\n  nameWithType: Membership.EnablePasswordReset\n  fullName: System.Web.Security.Membership.EnablePasswordReset\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets a value indicating whether the current membership provider is configured to allow users to reset their passwords.\n  remarks: Password reset is the ability for ASP.NET membership to replace the current password for a user name with a new, randomly generated password when a user has forgotten their password or the current password is no longer valid. This is especially useful when password format is set to <xref:System.Web.Security.MembershipPasswordFormat>, as users cannot retrieve hashed password values.\n  example:\n  - \"The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and enables password reset.  \\n  \\n```  \\n<membership defaultProvider=\\\"SqlProvider\\\" userIsOnlineTimeWindow=\\\"20\\\">  \\n  <providers>  \\n    <add name=\\\"SqlProvider\\\"  \\n      type=\\\"System.Web.Security.SqlMembershipProvider\\\"  \\n      connectionStringName=\\\"SqlServices\\\"  \\n      enablePasswordRetrieval=\\\"false\\\"  \\n      enablePasswordReset=\\\"true\\\"  \\n      requiresQuestionAndAnswer=\\\"true\\\"  \\n      passwordFormat=\\\"Hashed\\\"  \\n      applicationName=\\\"MyApplication\\\" />  \\n  </providers>  \\n</membership>  \\n```  \\n  \\n The following code example first verifies that EnablePasswordReset is `true`, then resets a user's password and returns the new, automatically generated password.  \\n  \\n [!code-cs[System.Web.Security.SqlMembershipProvider#8](~/add/codesnippet/csharp/p-system.web.security.me_2_1.aspx)]\\n [!code-vb[System.Web.Security.SqlMembershipProvider#8](~/add/codesnippet/visualbasic/p-system.web.security.me_2_1.aspx)]\"\n  syntax:\n    content: public static bool EnablePasswordReset { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the membership provider supports password reset; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.Security.Membership.EnablePasswordReset*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.Membership.EnablePasswordRetrieval\n  id: EnablePasswordRetrieval\n  parent: System.Web.Security.Membership\n  langs:\n  - csharp\n  name: EnablePasswordRetrieval\n  nameWithType: Membership.EnablePasswordRetrieval\n  fullName: System.Web.Security.Membership.EnablePasswordRetrieval\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets a value indicating whether the current membership provider is configured to allow users to retrieve their passwords.\n  remarks: \"If EnablePasswordRetrieval is `false`, the underlying membership provider may throw a <xref:System.Web.HttpException>.  \\n  \\n The providers that are included with the .NET Framework support multiple password formats to enhance password security. If the password format is set to <xref:System.Web.Security.MembershipPasswordFormat>, then users will not be able to retrieve their existing password from the database. The <xref:System.Web.Security.MembershipPasswordFormat> password format provides one-way encoding of password values. Passwords are \\\"hashed\\\" and compared to values stored in the database for authentication. \\\"Hashed\\\" values cannot be un-encoded to retrieve the original password value. For more information, see <xref:System.Web.Security.MembershipPasswordFormat>.\"\n  example:\n  - \"The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and enables password retrieval.  \\n  \\n```  \\n<membership defaultProvider=\\\"SqlProvider\\\" userIsOnlineTimeWindow=\\\"20\\\">  \\n  <providers>  \\n    <add name=\\\"SqlProvider\\\"  \\n      type=\\\"System.Web.Security.SqlMembershipProvider\\\"  \\n      connectionStringName=\\\"SqlServices\\\"  \\n      enablePasswordRetrieval=\\\"true\\\"  \\n      enablePasswordReset=\\\"false\\\"  \\n      requiresQuestionAndAnswer=\\\"false\\\"  \\n      passwordFormat=\\\"Encrypted\\\"  \\n      applicationName=\\\"MyApplication\\\" />  \\n  </providers>  \\n</membership>  \\n```  \\n  \\n The following code example first verifies that EnablePasswordRetrieval is `true`, then retrieves the password for a specified user name and sends it to the e-mail address for the specified user.  \\n  \\n> [!IMPORTANT]\\n>  Returning a password in clear text using e-mail is not recommended for sites that require a high level of security. For high-security sites, we recommend that you return passwords using encryption, such as SSL.  \\n>   \\n>  This example includes a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-vb[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/visualbasic/p-system.web.security.me_4_1.aspx)]\\n [!code-cs[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/csharp/p-system.web.security.me_4_1.aspx)]\"\n  syntax:\n    content: public static bool EnablePasswordRetrieval { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the membership provider supports password retrieval; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.Security.Membership.EnablePasswordRetrieval*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.Membership.FindUsersByEmail(System.String)\n  id: FindUsersByEmail(System.String)\n  parent: System.Web.Security.Membership\n  langs:\n  - csharp\n  name: FindUsersByEmail(String)\n  nameWithType: Membership.FindUsersByEmail(String)\n  fullName: System.Web.Security.Membership.FindUsersByEmail(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets a collection of membership users where the e-mail address contains the specified e-mail address to match.\n  remarks: \"FindUsersByEmail returns a list of membership users where the e-mail address matches the supplied `emailToMatch` for the configured `applicationName`.  \\n  \\n The <xref:System.Web.Security.SqlMembershipProvider> performs its search using a LIKE clause against the `emailToMatch` parameter. Any wildcards that are supported by SQL Server in LIKE clauses can be used in the `emailToMatch` parameter value.\"\n  example:\n  - \"The following code example uses the FindUsersByEmail method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \\n  \\n> [!IMPORTANT]\\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-vb[System.Web.Security.Membership#9](~/add/codesnippet/visualbasic/m-system.web.security.me_10_1.aspx)]\\n [!code-cs[System.Web.Security.Membership#9](~/add/codesnippet/csharp/m-system.web.security.me_10_1.aspx)]\"\n  syntax:\n    content: public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch);\n    parameters:\n    - id: emailToMatch\n      type: System.String\n      description: The e-mail address to search for.\n    return:\n      type: System.Web.Security.MembershipUserCollection\n      description: \"A <xref:System.Web.Security.MembershipUserCollection> that contains all users that match the <code>emailToMatch</code> parameter.  \\n  \\n Leading and trailing spaces are trimmed from the <code>emailToMatch</code> parameter value.\"\n  overload: System.Web.Security.Membership.FindUsersByEmail*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)\n  id: FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)\n  parent: System.Web.Security.Membership\n  langs:\n  - csharp\n  name: FindUsersByEmail(String,Int32,Int32,Int32)\n  nameWithType: Membership.FindUsersByEmail(String,Int32,Int32,Int32)\n  fullName: System.Web.Security.Membership.FindUsersByEmail(String,Int32,Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets a collection of membership users, in a page of data, where the e-mail address contains the specified e-mail address to match.\n  remarks: \"FindUsersByEmail returns a list of membership users where the e-mail address matches the supplied `emailToMatch` for the configured `applicationName`.  \\n  \\n The <xref:System.Web.Security.SqlMembershipProvider> performs its search using a LIKE clause against the `emailToMatch` parameter. Any wildcards that are supported by SQL Server in LIKE clauses can be used in the `emailToMatch` parameter value.  \\n  \\n The results returned by FindUsersByEmail are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the maximum number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection>. The `pageIndex` parameter identifies which page of results to return, where 0 identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users that matched the `emailToMatch` value. For example, if 13 users were found where `emailToMatch` matched part of or the entire e-mail address, and the `pageIndex` value was 1 with a `pageSize` of 5, the <xref:System.Web.Security.MembershipUserCollection> returned would contain the sixth through the tenth users returned. `totalRecords` would be set to 13.  \\n  \\n Leading and trailing spaces are trimmed from the `emailToMatch` parameter value.\"\n  example:\n  - \"The following code example uses the FindUsersByEmail method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \\n  \\n> [!IMPORTANT]\\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[System.Web.Security.SqlMembershipProvider#13](~/add/codesnippet/csharp/1954016c-87a4-4acf-9d54-_1.aspx)]\\n [!code-vb[System.Web.Security.SqlMembershipProvider#13](~/add/codesnippet/visualbasic/1954016c-87a4-4acf-9d54-_1.aspx)]\"\n  syntax:\n    content: public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);\n    parameters:\n    - id: emailToMatch\n      type: System.String\n      description: The e-mail address to search for.\n    - id: pageIndex\n      type: System.Int32\n      description: The index of the page of results to return. `pageIndex` is zero-based.\n    - id: pageSize\n      type: System.Int32\n      description: The size of the page of results to return.\n    - id: totalRecords\n      type: System.Int32\n      description: The total number of matched users.\n    return:\n      type: System.Web.Security.MembershipUserCollection\n      description: A <xref:System.Web.Security.MembershipUserCollection> that contains a page of <code>pageSize</code><xref:System.Web.Security.MembershipUser> objects beginning at the page specified by <code>pageIndex</code>.\n  overload: System.Web.Security.Membership.FindUsersByEmail*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>pageIndex</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>pageSize</code> is less than 1.\"\n  platform:\n  - net462\n- uid: System.Web.Security.Membership.FindUsersByName(System.String)\n  id: FindUsersByName(System.String)\n  parent: System.Web.Security.Membership\n  langs:\n  - csharp\n  name: FindUsersByName(String)\n  nameWithType: Membership.FindUsersByName(String)\n  fullName: System.Web.Security.Membership.FindUsersByName(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets a collection of membership users where the user name contains the specified user name to match.\n  remarks: \"<xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> returns a list of membership users where the user name matches the supplied `usernameToMatch` for the configured `applicationName`.  \\n  \\n The <xref:System.Web.Security.SqlMembershipProvider> performs its search using a LIKE clause against the `usernameToMatch` parameter. Any wildcards that are supported by SQL Server in LIKE clauses can be used in the `usernameToMatch` parameter value.  \\n  \\n Leading and trailing spaces are trimmed from all parameter values.\"\n  example:\n  - \"The following code example uses the FindUsersByName method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \\n  \\n> [!IMPORTANT]\\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-vb[System.Web.Security.Membership#10](~/add/codesnippet/visualbasic/m-system.web.security.me_6_1.aspx)]\\n [!code-cs[System.Web.Security.Membership#10](~/add/codesnippet/csharp/m-system.web.security.me_6_1.aspx)]\"\n  syntax:\n    content: public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch);\n    parameters:\n    - id: usernameToMatch\n      type: System.String\n      description: The user name to search for.\n    return:\n      type: System.Web.Security.MembershipUserCollection\n      description: \"A <xref:System.Web.Security.MembershipUserCollection> that contains all users that match the <code>usernameToMatch</code> parameter.  \\n  \\n Leading and trailing spaces are trimmed from the <code>usernameToMatch</code> parameter value.\"\n  overload: System.Web.Security.Membership.FindUsersByName*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>usernameToMatch</code> is an empty string.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>usernameToMatch</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)\n  id: FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)\n  parent: System.Web.Security.Membership\n  langs:\n  - csharp\n  name: FindUsersByName(String,Int32,Int32,Int32)\n  nameWithType: Membership.FindUsersByName(String,Int32,Int32,Int32)\n  fullName: System.Web.Security.Membership.FindUsersByName(String,Int32,Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets a collection of membership users, in a page of data, where the user name contains the specified user name to match.\n  remarks: \"<xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> returns a list of membership users where the user name matches the supplied `usernameToMatch` for the configured `applicationName`.  \\n  \\n The <xref:System.Web.Security.SqlMembershipProvider> performs its search using a LIKE clause against the `usernameToMatch` parameter. Any wildcards that are supported by SQL Server in LIKE clauses can be used in the `usernameToMatch` parameter value.  \\n  \\n The results returned by FindUsersByName are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the maximum number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection>. The `pageIndex` parameter identifies which page of results to return, where 0 identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users that matched the `usernameToMatch` value. For example, if 13 users were found where `usernameToMatch` matched part of or the entire user name, and the `pageIndex` value was 1 with a `pageSize` of 5, the <xref:System.Web.Security.MembershipUserCollection> returned would contain the sixth through the tenth users returned. `totalRecords` would be set to 13.\"\n  example:\n  - \"The following code example uses the FindUsersByName method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \\n  \\n> [!IMPORTANT]\\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[System.Web.Security.SqlMembershipProvider#12](~/add/codesnippet/csharp/4f01d951-55a8-446c-be57-_1.aspx)]\\n [!code-vb[System.Web.Security.SqlMembershipProvider#12](~/add/codesnippet/visualbasic/4f01d951-55a8-446c-be57-_1.aspx)]\"\n  syntax:\n    content: public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);\n    parameters:\n    - id: usernameToMatch\n      type: System.String\n      description: The user name to search for.\n    - id: pageIndex\n      type: System.Int32\n      description: The index of the page of results to return. `pageIndex` is zero-based.\n    - id: pageSize\n      type: System.Int32\n      description: The size of the page of results to return.\n    - id: totalRecords\n      type: System.Int32\n      description: The total number of matched users.\n    return:\n      type: System.Web.Security.MembershipUserCollection\n      description: \"A <xref:System.Web.Security.MembershipUserCollection> that contains a page of <code>pageSize</code><xref:System.Web.Security.MembershipUser> objects beginning at the page specified by <code>pageIndex</code>.  \\n  \\n Leading and trailing spaces are trimmed from the <code>usernameToMatch</code> parameter value.\"\n  overload: System.Web.Security.Membership.FindUsersByName*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>usernameToMatch</code> is an empty string.  \\n  \\n -or-  \\n  \\n <code>pageIndex</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>pageSize</code> is less than 1.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>usernameToMatch</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)\n  id: GeneratePassword(System.Int32,System.Int32)\n  parent: System.Web.Security.Membership\n  langs:\n  - csharp\n  name: GeneratePassword(Int32,Int32)\n  nameWithType: Membership.GeneratePassword(Int32,Int32)\n  fullName: System.Web.Security.Membership.GeneratePassword(Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Generates a random password of the specified length.\n  remarks: \"The GeneratePassword method is used to generate a random password and is most commonly used by the <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> method implemented by a membership provider to reset the password for a user to a new, temporary password.  \\n  \\n The generated password only contains alphanumeric characters and the following punctuation marks: `!@#$%^&*()_-+=[{]};:<>|./?`. No hidden or non-printable control characters are included in the generated password.  \\n  \\n> [!NOTE]\\n>  The random password created by the GeneratePassword method is not guaranteed to pass the regular expression in the <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> property. However, the random password will meet the criteria established by the <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> property and the `numberOfNonAlphanumericCharacters` parameter.\"\n  example:\n  - \"The following code example creates a new membership user and uses the GeneratePassword method to initialize the password for the new user to a random value, which is displayed to the user.  \\n  \\n> [!IMPORTANT]\\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-vb[System.Web.Security.Membership#5](~/add/codesnippet/visualbasic/m-system.web.security.me_1_1.aspx)]\\n [!code-cs[System.Web.Security.Membership#5](~/add/codesnippet/csharp/m-system.web.security.me_1_1.aspx)]\"\n  syntax:\n    content: public static string GeneratePassword (int length, int numberOfNonAlphanumericCharacters);\n    parameters:\n    - id: length\n      type: System.Int32\n      description: The number of characters in the generated password. The length must be between 1 and 128 characters.\n    - id: numberOfNonAlphanumericCharacters\n      type: System.Int32\n      description: 'The minimum number of non-alphanumeric characters (such as @, #, !, %, &amp;, and so on) in the generated password.'\n    return:\n      type: System.String\n      description: A random password of the specified length.\n  overload: System.Web.Security.Membership.GeneratePassword*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>length</code> is less than 1 or greater than 128 -or-  \\n  \\n <code>numberOfNonAlphanumericCharacters</code> is less than 0 or greater than <code>length</code>.\"\n  platform:\n  - net462\n- uid: System.Web.Security.Membership.GetAllUsers\n  id: GetAllUsers\n  parent: System.Web.Security.Membership\n  langs:\n  - csharp\n  name: GetAllUsers()\n  nameWithType: Membership.GetAllUsers()\n  fullName: System.Web.Security.Membership.GetAllUsers()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets a collection of all the users in the database.\n  remarks: GetAllUsers returns the information for all membership users for an application as a collection of <xref:System.Web.Security.MembershipUser> objects. Be careful when using the GetAllUsers method with very large user databases, as the resulting <xref:System.Web.Security.MembershipUserCollection> in your ASP.NET page may degrade the performance of your application.\n  example:\n  - \"The following code example returns a list of users with a count of the number of users currently online.  \\n  \\n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/m-system.web.security.me_4_1.aspx)]\\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/m-system.web.security.me_4_1.aspx)]\"\n  syntax:\n    content: public static System.Web.Security.MembershipUserCollection GetAllUsers ();\n    parameters: []\n    return:\n      type: System.Web.Security.MembershipUserCollection\n      description: A <xref:System.Web.Security.MembershipUserCollection> of <xref:System.Web.Security.MembershipUser> objects representing all of the users in the database.\n  overload: System.Web.Security.Membership.GetAllUsers*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)\n  id: GetAllUsers(System.Int32,System.Int32,System.Int32@)\n  parent: System.Web.Security.Membership\n  langs:\n  - csharp\n  name: GetAllUsers(Int32,Int32,Int32)\n  nameWithType: Membership.GetAllUsers(Int32,Int32,Int32)\n  fullName: System.Web.Security.Membership.GetAllUsers(Int32,Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets a collection of all the users in the database in pages of data.\n  remarks: The results returned by GetAllUsers are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the maximum number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection>. The `pageIndex` parameter identifies which page of results to return, where 0 identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users for the configured `applicationName`. For example, if there are 13 users for the configured `applicationName`, and the `pageIndex` value was 1 with a `pageSize` of 5, the <xref:System.Web.Security.MembershipUserCollection> returned would contain the sixth through the tenth users returned. `totalRecords` would be set to 13.\n  example:\n  - \"The following code example returns a list of users in pages of data with a count of the number of users currently online.  \\n  \\n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/e84b0b6e-963c-4328-843a-_1.aspx)]\\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/e84b0b6e-963c-4328-843a-_1.aspx)]\"\n  syntax:\n    content: public static System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);\n    parameters:\n    - id: pageIndex\n      type: System.Int32\n      description: The index of the page of results to return. Use 0 to indicate the first page.\n    - id: pageSize\n      type: System.Int32\n      description: The size of the page of results to return. `pageIndex` is zero-based.\n    - id: totalRecords\n      type: System.Int32\n      description: The total number of users.\n    return:\n      type: System.Web.Security.MembershipUserCollection\n      description: A <xref:System.Web.Security.MembershipUserCollection> of <xref:System.Web.Security.MembershipUser> objects representing all the users in the database for the configured <xref uid=\"langword_csharp_applicationName\" name=\"applicationName\" href=\"\"></xref>.\n  overload: System.Web.Security.Membership.GetAllUsers*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>pageIndex</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>pageSize</code> is less than 1.\"\n  platform:\n  - net462\n- uid: System.Web.Security.Membership.GetNumberOfUsersOnline\n  id: GetNumberOfUsersOnline\n  parent: System.Web.Security.Membership\n  langs:\n  - csharp\n  name: GetNumberOfUsersOnline()\n  nameWithType: Membership.GetNumberOfUsersOnline()\n  fullName: System.Web.Security.Membership.GetNumberOfUsersOnline()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets the number of users currently accessing an application.\n  remarks: <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> returns the number of users for the current <xref:System.Web.Security.Membership.ApplicationName%2A> where the last-activity date is greater than the current time less the <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>. The last-activity date/time stamp is updated to the current date and time when user credentials are validated by way of the <xref:System.Web.Security.Membership.ValidateUser%2A> or <xref:System.Web.Security.Membership.UpdateUser%2A> method or when a call to a <xref:System.Web.Security.Membership.GetUser%2A> overload that takes no parameters or one that uses the `userIsOnline` parameter to specify that the date/time stamp should be updated.\n  example:\n  - \"The following code example returns a list of users with a count of the number of users currently online.  \\n  \\n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/m-system.web.security.me_2_1.aspx)]\\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/m-system.web.security.me_2_1.aspx)]\"\n  syntax:\n    content: public static int GetNumberOfUsersOnline ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The number of users currently accessing an application.\n  overload: System.Web.Security.Membership.GetNumberOfUsersOnline*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.Membership.GetUser\n  id: GetUser\n  parent: System.Web.Security.Membership\n  langs:\n  - csharp\n  name: GetUser()\n  nameWithType: Membership.GetUser()\n  fullName: System.Web.Security.Membership.GetUser()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets the information from the data source and updates the last-activity date/time stamp for the current logged-on membership user.\n  remarks: \"GetUser retrieves the user information from the data source and creates a <xref:System.Web.Security.MembershipUser> object populated with the returned data. If you use one of the GetUser overloads that does not take a `username` parameter, GetUser returns the information for the current logged-on membership user. The current logged-on membership user is identified by the <xref:System.Security.Principal.IIdentity.Name%2A> of the user in the current <xref:System.Web.HttpContext>.  \\n  \\n You can also specify whether you want GetUser to update the last-activity date/time stamp for the user being retrieved using the `userIsOnline` parameter. Of the <xref:System.Web.Security.Membership.GetUser%2A> overloads that do not take a `userIsOnline` parameter, `GetUser()` implicitly updates the last-activity date/time stamp for the user. `GetUser(System.String)` and `GetUser(System.Object)` do not.\"\n  example:\n  - \"The following code example updates the last-activity date/time stamp for the current logged-on membership user and displays the user name in the ASP.NET page.  \\n  \\n [!code-cs[System.Web.Security.Membership#3](~/add/codesnippet/csharp/m-system.web.security.me_14_1.aspx)]\\n [!code-vb[System.Web.Security.Membership#3](~/add/codesnippet/visualbasic/m-system.web.security.me_14_1.aspx)]\"\n  syntax:\n    content: public static System.Web.Security.MembershipUser GetUser ();\n    parameters: []\n    return:\n      type: System.Web.Security.MembershipUser\n      description: A <xref:System.Web.Security.MembershipUser> object representing the current logged-on user.\n  overload: System.Web.Security.Membership.GetUser*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: No membership user is currently logged in.\n  platform:\n  - net462\n- uid: System.Web.Security.Membership.GetUser(System.Boolean)\n  id: GetUser(System.Boolean)\n  parent: System.Web.Security.Membership\n  langs:\n  - csharp\n  name: GetUser(Boolean)\n  nameWithType: Membership.GetUser(Boolean)\n  fullName: System.Web.Security.Membership.GetUser(Boolean)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets the information from the data source for the current logged-on membership user. Updates the last-activity date/time stamp for the current logged-on membership user, if specified.\n  remarks: \"The GetUser method retrieves the user information from the data source and creates a <xref:System.Web.Security.MembershipUser> object populated with the returned data. If you use one of the <xref:System.Web.Security.Membership.GetUser%2A> overloads that does not take a `username` parameter, <xref:System.Web.Security.Membership.GetUser%2A> returns the information for the current logged-on membership user. The current logged-on membership user is identified by the <xref:System.Security.Principal.IIdentity.Name%2A> of the user in the current <xref:System.Web.HttpContext>.  \\n  \\n You can also specify whether you want <xref:System.Web.Security.Membership.GetUser%2A> to update the last-activity date/time stamp for the user being retrieved using the `userIsOnline` parameter. Of the <xref:System.Web.Security.Membership.GetUser%2A> overloads that do not take a `userIsOnline` parameter, `GetUser()` implicitly updates the last-activity date/time stamp for the user. `GetUser(System.String)` and `GetUser(System.Object)` do not.\"\n  example:\n  - \"The following code example displays the user name for the current logged-on membership user in the ASP.NET page without updating the last-activity date/time stamp for the user.  \\n  \\n [!code-cs[System.Web.Security.Membership#4](~/add/codesnippet/csharp/m-system.web.security.me_9_1.aspx)]\\n [!code-vb[System.Web.Security.Membership#4](~/add/codesnippet/visualbasic/m-system.web.security.me_9_1.aspx)]\"\n  syntax:\n    content: public static System.Web.Security.MembershipUser GetUser (bool userIsOnline);\n    parameters:\n    - id: userIsOnline\n      type: System.Boolean\n      description: If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, updates the last-activity date/time stamp for the specified user.\n    return:\n      type: System.Web.Security.MembershipUser\n      description: A <xref:System.Web.Security.MembershipUser> object representing the current logged-on user.\n  overload: System.Web.Security.Membership.GetUser*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: No membership user is currently logged in.\n  platform:\n  - net462\n- uid: System.Web.Security.Membership.GetUser(System.Object)\n  id: GetUser(System.Object)\n  parent: System.Web.Security.Membership\n  langs:\n  - csharp\n  name: GetUser(Object)\n  nameWithType: Membership.GetUser(Object)\n  fullName: System.Web.Security.Membership.GetUser(Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets the information from the data source for the membership user associated with the specified unique identifier.\n  remarks: \"The GetUser method retrieves the user information from the data source and creates a <xref:System.Web.Security.MembershipUser> object populated with the returned data. The user is identified using the unique identifier from the data source specified using the `providerUserKey` parameter.  \\n  \\n You can also specify whether you want <xref:System.Web.Security.Membership.GetUser%2A> to update the last-activity date/time stamp for the user being retrieved with the `userIsOnline` parameter. Of the <xref:System.Web.Security.Membership.GetUser%2A> overloads that do not take a `userIsOnline` parameter, `GetUser()` implicitly updates the last-activity date/time stamp for the user. `GetUser(System.String)` and `GetUser(System.Object)` do not\"\n  syntax:\n    content: public static System.Web.Security.MembershipUser GetUser (object providerUserKey);\n    parameters:\n    - id: providerUserKey\n      type: System.Object\n      description: The unique user identifier from the membership data source for the user.\n    return:\n      type: System.Web.Security.MembershipUser\n      description: A <xref:System.Web.Security.MembershipUser> object representing the user associated with the specified unique identifier.\n  overload: System.Web.Security.Membership.GetUser*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>providerUserKey</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.Security.Membership.GetUser(System.String)\n  id: GetUser(System.String)\n  parent: System.Web.Security.Membership\n  langs:\n  - csharp\n  name: GetUser(String)\n  nameWithType: Membership.GetUser(String)\n  fullName: System.Web.Security.Membership.GetUser(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets the information from the data source for the specified membership user.\n  remarks: \"The GetUser method retrieves the user information from the data source and creates a <xref:System.Web.Security.MembershipUser> object populated with the returned data. If you use one of the <xref:System.Web.Security.Membership.GetUser%2A> overloads that does not take a `username` parameter, <xref:System.Web.Security.Membership.GetUser%2A> returns the information for the current logged-on membership user. The current logged-on membership user is identified by the <xref:System.Security.Principal.IIdentity.Name%2A> of the user in the current <xref:System.Web.HttpContext>.  \\n  \\n You can also specify whether you want <xref:System.Web.Security.Membership.GetUser%2A> to update the last-activity date/time stamp for the user being retrieved with the `userIsOnline` parameter. Of the <xref:System.Web.Security.Membership.GetUser%2A> overloads that do not take a `userIsOnline` parameter, <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName> implicitly updates the last-activity date/time stamp for the user. GetUser and <xref:System.Web.Security.Membership.GetUser%2A> do not.\"\n  example:\n  - \"The following code example uses the GetUser method to return a <xref:System.Web.Security.MembershipUser> object for the current logged-on user and updates the e-mail address for the user.  \\n  \\n [!code-cs[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/csharp/m-system.web.security.me_3_1.aspx)]\\n [!code-vb[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/visualbasic/m-system.web.security.me_3_1.aspx)]\"\n  syntax:\n    content: public static System.Web.Security.MembershipUser GetUser (string username);\n    parameters:\n    - id: username\n      type: System.String\n      description: The name of the user to retrieve.\n    return:\n      type: System.Web.Security.MembershipUser\n      description: A <xref:System.Web.Security.MembershipUser> object representing the specified user. If the <code>username</code> parameter does not correspond to an existing user, this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Web.Security.Membership.GetUser*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>username</code> contains a comma (,).\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>username</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.Security.Membership.GetUser(System.Object,System.Boolean)\n  id: GetUser(System.Object,System.Boolean)\n  parent: System.Web.Security.Membership\n  langs:\n  - csharp\n  name: GetUser(Object,Boolean)\n  nameWithType: Membership.GetUser(Object,Boolean)\n  fullName: System.Web.Security.Membership.GetUser(Object,Boolean)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets the information from the data source for the membership user associated with the specified unique identifier. Updates the last-activity date/time stamp for the user, if specified.\n  remarks: The GetUser method retrieves the user information from the data source and creates a <xref:System.Web.Security.MembershipUser> object populated with the returned data. The user is identified with the unique identifier from the data source specified in the `providerUserKey` parameter.\n  syntax:\n    content: public static System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);\n    parameters:\n    - id: providerUserKey\n      type: System.Object\n      description: The unique user identifier from the membership data source for the user.\n    - id: userIsOnline\n      type: System.Boolean\n      description: If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, updates the last-activity date/time stamp for the specified user.\n    return:\n      type: System.Web.Security.MembershipUser\n      description: A <xref:System.Web.Security.MembershipUser> object representing the user associated with the specified unique identifier.\n  overload: System.Web.Security.Membership.GetUser*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>providerUserKey</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.Security.Membership.GetUser(System.String,System.Boolean)\n  id: GetUser(System.String,System.Boolean)\n  parent: System.Web.Security.Membership\n  langs:\n  - csharp\n  name: GetUser(String,Boolean)\n  nameWithType: Membership.GetUser(String,Boolean)\n  fullName: System.Web.Security.Membership.GetUser(String,Boolean)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets the information from the data source for the specified membership user. Updates the last-activity date/time stamp for the user, if specified.\n  remarks: \"The GetUser method retrieves the user information from the data source and creates a <xref:System.Web.Security.MembershipUser> object populated with the returned data.  \\n  \\n If you use one of the <xref:System.Web.Security.Membership.GetUser%2A> overloads that does not take a `username` parameter, <xref:System.Web.Security.Membership.GetUser%2A> returns the information for the current logged-on membership user. The current logged-on membership user is identified by the <xref:System.Security.Principal.IIdentity.Name%2A> of the user in the current <xref:System.Web.HttpContext>.  \\n  \\n You can also specify whether you want <xref:System.Web.Security.Membership.GetUser%2A> to update the last-activity date/time stamp for the user being retrieved with the `userIsOnline` parameter. Of the <xref:System.Web.Security.Membership.GetUser%2A> overloads that do not take a `userIsOnline` parameter, <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName> implicitly updates the last-activity date/time stamp for the user. <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName> and <xref:System.Web.Security.Membership.GetUser%2A> do not.\"\n  example:\n  - \"The following code example retrieves the password for a specified user name and sends it to the e-mail address for the specified user. The call to <xref:System.Web.Security.Membership.GetUser%2A> specifies that the last-activity date/time stamp for the user not be updated.  \\n  \\n [!code-vb[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/visualbasic/m-system.web.security.me_13_1.aspx)]\\n [!code-cs[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/csharp/m-system.web.security.me_13_1.aspx)]\"\n  syntax:\n    content: public static System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);\n    parameters:\n    - id: username\n      type: System.String\n      description: The name of the user to retrieve.\n    - id: userIsOnline\n      type: System.Boolean\n      description: If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, updates the last-activity date/time stamp for the specified user.\n    return:\n      type: System.Web.Security.MembershipUser\n      description: A <xref:System.Web.Security.MembershipUser> object representing the specified user. If the <code>username</code> parameter does not correspond to an existing user, this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Web.Security.Membership.GetUser*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>username</code> contains a comma (,).\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>username</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.Security.Membership.GetUserNameByEmail(System.String)\n  id: GetUserNameByEmail(System.String)\n  parent: System.Web.Security.Membership\n  langs:\n  - csharp\n  name: GetUserNameByEmail(String)\n  nameWithType: Membership.GetUserNameByEmail(String)\n  fullName: System.Web.Security.Membership.GetUserNameByEmail(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets a user name where the e-mail address for the user matches the specified e-mail address.\n  remarks: \"GetUserNameByEmail can be used to retrieve the user name for a membership user in the case where a user does not know their user name, but does know their e-mail address. If more than one user in the data store has the same e-mail address, the first user name encountered is returned.  \\n  \\n Leading and trailing spaces are trimmed from all parameter values.\"\n  example:\n  - \"The following code example retrieves the user name for a specified e-mail address.  \\n  \\n> [!IMPORTANT]\\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[System.Web.Security.SqlMembershipProvider#7](~/add/codesnippet/csharp/m-system.web.security.me_5_1.aspx)]\\n [!code-vb[System.Web.Security.SqlMembershipProvider#7](~/add/codesnippet/visualbasic/m-system.web.security.me_5_1.aspx)]\"\n  syntax:\n    content: public static string GetUserNameByEmail (string emailToMatch);\n    parameters:\n    - id: emailToMatch\n      type: System.String\n      description: The e-mail address to search for.\n    return:\n      type: System.String\n      description: The user name where the e-mail address for the user matches the specified e-mail address. If no match is found, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned.\n  overload: System.Web.Security.Membership.GetUserNameByEmail*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.Membership.HashAlgorithmType\n  id: HashAlgorithmType\n  parent: System.Web.Security.Membership\n  langs:\n  - csharp\n  name: HashAlgorithmType\n  nameWithType: Membership.HashAlgorithmType\n  fullName: System.Web.Security.Membership.HashAlgorithmType\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: The identifier of the algorithm used to hash passwords.\n  remarks: \"The HashAlgorithmType property identifies the custom hash algorithm used by the <xref:System.Web.Security.Membership> class. You set the HashAlgorithmType property using the `hashAlgorithmType` attribute of the  element.  \\n  \\n The .NET Framework enables you to configure custom cryptography classes using the  element configuration section. The HashAlgorithmType property must match the `name` attribute of the  element in a  element. For more information, see [Mapping Algorithm Names to Cryptography Classes](~/add/includes/ajax-current-ext-md.md).  \\n  \\n If the HashAlgorithmType property is not set, the <xref:System.Web.Security.Membership> class uses the hash algorithm set in the `validation` attribute of the  element.\"\n  syntax:\n    content: public static string HashAlgorithmType { get; }\n    return:\n      type: System.String\n      description: The identifier of the algorithm used to hash passwords, or blank to use the default hash algorithm.\n  overload: System.Web.Security.Membership.HashAlgorithmType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.Membership.MaxInvalidPasswordAttempts\n  id: MaxInvalidPasswordAttempts\n  parent: System.Web.Security.Membership\n  langs:\n  - csharp\n  name: MaxInvalidPasswordAttempts\n  nameWithType: Membership.MaxInvalidPasswordAttempts\n  fullName: System.Web.Security.Membership.MaxInvalidPasswordAttempts\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets the number of invalid password or password-answer attempts allowed before the membership user is locked out.\n  remarks: \"The MaxInvalidPasswordAttempts property works in conjunction with the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> property to guard against an unwanted source using repeated attempts to guess the password or password answer of a membership user.  \\n  \\n If the number of invalid passwords or password answers entered for a membership user is greater than or equal to the value of the MaxInvalidPasswordAttempts property within the number of minutes specified by the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> property, then the user is locked out of the Web site by setting the <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> property to `true` until the user is unlocked by a call to the <xref:System.Web.Security.MembershipUser.UnlockUser%2A> method.  \\n  \\n If a valid password or password answer is supplied before the value of the MaxInvalidPasswordAttempts property is reached, the counter that tracks the number of invalid attempts is set to zero.  \\n  \\n Invalid password and password answer attempts are tracked separately. For example, if the MaxInvalidPasswordAttempts property is set to 5, the user has up to five attempts to enter a correct password and up to five attempts to enter a correct password answer without being locked out.  \\n  \\n The MaxInvalidPasswordAttempts property value is set in the application configuration using the `maxInvalidPasswordAttempts` attribute of the  configuration element.  \\n  \\n If the <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> property is `false`, invalid password-answer attempts are not tracked.\"\n  example:\n  - \"The following code example shows the  element in the `system.web` section of an application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `maxInvalidPasswordAttempts` attribute to five invalid attempts and the `passwordAttemptWindow` to 30 minutes.  \\n  \\n```  \\n<membership defaultProvider=\\\"SqlProvider\\\"  \\n  userIsOnlineTimeWindow = \\\"20>  \\n  <providers>  \\n    <add  \\n      name=\\\"SqlProvider\\\"  \\n      type=\\\"System.Web.Security.SqlMembershipProvider\\\"  \\n      connectionStringName=\\\"SqlServices\\\"  \\n      requiresQuestionAndAnswer=\\\"true\\\"  \\n      maxInvalidPasswordAttempts=\\\"5\\\"  \\n      passwordAttemptWindow=\\\"30\\\"  \\n      applicationName=\\\"MyApplication\\\" />  \\n  </providers>  \\n</membership>  \\n```\"\n  syntax:\n    content: public static int MaxInvalidPasswordAttempts { get; }\n    return:\n      type: System.Int32\n      description: The number of invalid password or password-answer attempts allowed before the membership user is locked out.\n  overload: System.Web.Security.Membership.MaxInvalidPasswordAttempts*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters\n  id: MinRequiredNonAlphanumericCharacters\n  parent: System.Web.Security.Membership\n  langs:\n  - csharp\n  name: MinRequiredNonAlphanumericCharacters\n  nameWithType: Membership.MinRequiredNonAlphanumericCharacters\n  fullName: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets the minimum number of special characters that must be present in a valid password.\n  remarks: \"The MinRequiredNonAlphanumericCharacters property returns the minimum number of special, non-alphanumeric characters that must be entered to create a valid password for the membership provider specified in the <xref:System.Web.Security.Membership.Provider%2A> property.  \\n  \\n The MinRequiredNonAlphanumericCharacters property value is set in the application configuration using the `minRequiredNonAlphanumericCharacters` attribute of the  configuration element.  \\n  \\n A non-alphanumeric character is a character for which the <xref:System.Char.IsLetterOrDigit%2A> method returns `false`.\"\n  example:\n  - \"The following code example shows the  configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `minRequiredNonAlphanumericCharacters` attribute to 1 character.  \\n  \\n```  \\n<membership defaultProvider=\\\"SqlProvider\\\"  \\n  userIsOnlineTimeWindow = \\\"20>  \\n  <providers>  \\n    <add  \\n      name=\\\"SqlProvider\\\"  \\n      type=\\\"System.Web.Security.SqlMembershipProvider\\\"  \\n      connectionStringName=\\\"SqlServices\\\"  \\n      requiresQuestionAndAnswer=\\\"true\\\"  \\n      minRequiredNonAlphanumericCharacters=\\\"1\\\"  \\n      />  \\n  </providers>  \\n</membership>  \\n```\"\n  syntax:\n    content: public static int MinRequiredNonAlphanumericCharacters { get; }\n    return:\n      type: System.Int32\n      description: The minimum number of special characters that must be present in a valid password.\n  overload: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.Membership.MinRequiredPasswordLength\n  id: MinRequiredPasswordLength\n  parent: System.Web.Security.Membership\n  langs:\n  - csharp\n  name: MinRequiredPasswordLength\n  nameWithType: Membership.MinRequiredPasswordLength\n  fullName: System.Web.Security.Membership.MinRequiredPasswordLength\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets the minimum length required for a password.\n  remarks: \"The MinRequiredPasswordLength property gets the minimum number of characters that must be entered to create a valid password for the membership provider specified in the <xref:System.Web.Security.Membership.Provider%2A> property.  \\n  \\n The MinRequiredPasswordLength property value is set in the application configuration using the `minRequiredPasswordLength` attribute of the  configuration element.\"\n  example:\n  - \"The following code example shows the  configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `minRequiredPasswordLength` attribute to seven characters.  \\n  \\n```  \\n<membership defaultProvider=\\\"SqlProvider\\\"  \\n  userIsOnlineTimeWindow = \\\"20>  \\n  <providers>  \\n    <add  \\n      name=\\\"SqlProvider\\\"  \\n      type=\\\"System.Web.Security.SqlMembershipProvider\\\"  \\n      connectionStringName=\\\"SqlServices\\\"  \\n      requiresQuestionAndAnswer=\\\"true\\\"  \\n      minRequiredPasswordLength=\\\"7\\\"  \\n      />  \\n  </providers>  \\n</membership>  \\n```\"\n  syntax:\n    content: public static int MinRequiredPasswordLength { get; }\n    return:\n      type: System.Int32\n      description: The minimum length required for a password.\n  overload: System.Web.Security.Membership.MinRequiredPasswordLength*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.Membership.PasswordAttemptWindow\n  id: PasswordAttemptWindow\n  parent: System.Web.Security.Membership\n  langs:\n  - csharp\n  name: PasswordAttemptWindow\n  nameWithType: Membership.PasswordAttemptWindow\n  fullName: System.Web.Security.Membership.PasswordAttemptWindow\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets the time window between which consecutive failed attempts to provide a valid password or password answer are tracked.\n  remarks: \"The PasswordAttemptWindow property works in conjunction with the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property to help guard against an unwanted source guessing the password or password answer of a membership user through repeated attempts. When a user attempts to log in with, change, or reset his or her password, only a certain number of consecutive attempts are allowed within a specified time window. The length of this time window is specified in the PasswordAttemptWindow property, which identifies the number of minutes allowed between invalid attempts.  \\n  \\n If the number of consecutive failed attempts that a user makes to reset his or her password equals the value stored in the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property, and the time elapsed since the last invalid attempt is less than the number of minutes specified in the PasswordAttemptWindow property, then the membership user is locked out. The user is locked out by setting the <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> property to `true` until the user is unlocked by a call to the <xref:System.Web.Security.MembershipUser.UnlockUser%2A> method.  \\n  \\n If the interval between the current failed attempt and the last failed attempt is greater than the PasswordAttemptWindow property setting, the current invalid attempt is counted as the first. If a valid password answer is supplied before the maximum number of allowed invalid attempts is reached, the count of invalid password-answer attempts is set to 0 (zero). If a valid password is supplied before the maximum number of allowed invalid attempts is reached, the count of invalid password attempts and the count of invalid password-answer attempts are set to 0 (zero).  \\n  \\n Invalid password and password-answer attempts accumulate independently of one another. For example, if the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> is set to 5, and three invalid password attempts are made followed by two invalid password-answer attempts, two more invalid password attempts (or three more invalid password-answer attempts) must be made within PasswordAttemptWindow for the membership user to be locked out.  \\n  \\n The PasswordAttemptWindow property value is set in the application configuration by using the `passwordAttemptWindow` attribute of the  configuration-element section.  \\n  \\n If the <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> property is set to `false`, invalid password-answer attempts are not tracked.\"\n  example:\n  - \"The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and sets the `maxInvalidPasswordAttempts` attribute to five invalid attempts and the `passwordAttemptWindow` to 30 minutes.  \\n  \\n```  \\n<membership defaultProvider=\\\"SqlProvider\\\"   \\n  userIsOnlineTimeWindow=\\\"20\\\">  \\n  <providers>  \\n    <add name=\\\"SqlProvider\\\"  \\n      type=\\\"System.Web.Security.SqlMembershipProvider\\\"  \\n      connectionStringName=\\\"SqlServices\\\"  \\n      requiresQuestionAndAnswer=\\\"true\\\"  \\n      maxInvalidPasswordAttempts=\\\"5\\\"  \\n      passwordAttemptWindow=\\\"30\\\"  \\n      applicationName=\\\"MyApplication\\\" />  \\n  </providers>  \\n</membership>  \\n```\"\n  syntax:\n    content: public static int PasswordAttemptWindow { get; }\n    return:\n      type: System.Int32\n      description: The time window, in minutes, during which consecutive failed attempts to provide a valid password or password answer are tracked. The default is 10 minutes. If the interval between the current failed attempt and the last failed attempt is greater than the PasswordAttemptWindow property setting, each failed attempt is treated as if it were the first failed attempt.\n  overload: System.Web.Security.Membership.PasswordAttemptWindow*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.Membership.PasswordStrengthRegularExpression\n  id: PasswordStrengthRegularExpression\n  parent: System.Web.Security.Membership\n  langs:\n  - csharp\n  name: PasswordStrengthRegularExpression\n  nameWithType: Membership.PasswordStrengthRegularExpression\n  fullName: System.Web.Security.Membership.PasswordStrengthRegularExpression\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets the regular expression used to evaluate a password.\n  remarks: \"The PasswordStrengthRegularExpression property gets the regular expression used to evaluate password complexity from the provider specified in the <xref:System.Web.Security.Membership.Provider%2A> property.  \\n  \\n The PasswordStrengthRegularExpression property is set in the application configuration using the `passwordStrengthRegularExpression` attribute of the  configuration element.  \\n  \\n For more information about regular expressions, see [.NET Framework Regular Expressions](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following code example shows the  configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `passwordStrengthRegularExpression` attribute to a regular expression that validates the password meets the following criteria:  \\n  \\n-   Is greater than seven characters.  \\n  \\n-   Contains at least one digit.  \\n  \\n-   Contains at least one special (non-alphanumeric) character.  \\n  \\n If the password does not meet these criteria, the password is not accepted by the membership provider.  \\n  \\n```  \\n<membership defaultProvider=\\\"SqlProvider\\\"  \\n  userIsOnlineTimeWindow = \\\"20>  \\n  <providers>  \\n    <add  \\n      name=\\\"SqlProvider\\\"  \\n      type=\\\"System.Web.Security.SqlMembershipProvider\\\"  \\n      connectionStringName=\\\"SqlServices\\\"  \\n      requiresQuestionAndAnswer=\\\"true\\\"  \\n      passwordStrengthRegularExpression=\\\" @\\\\\\\"(?=.{6,})(?=(.*\\\\d){1,})(?=(.*\\\\W){1,})\\\"  \\n      />  \\n   </providers>  \\n</membership>  \\n```\"\n  syntax:\n    content: public static string PasswordStrengthRegularExpression { get; }\n    return:\n      type: System.String\n      description: A regular expression used to evaluate a password.\n  overload: System.Web.Security.Membership.PasswordStrengthRegularExpression*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.Membership.Provider\n  id: Provider\n  parent: System.Web.Security.Membership\n  langs:\n  - csharp\n  name: Provider\n  nameWithType: Membership.Provider\n  fullName: System.Web.Security.Membership.Provider\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets a reference to the default membership provider for the application.\n  remarks: The Provider property enables you to reference the default membership provider for an application directly. This is commonly used to access custom members of the membership provider that are not part of the <xref:System.Web.Security.MembershipProvider> abstract base class.\n  example:\n  - \"The following code example accesses the default <xref:System.Web.Security.SqlMembershipProvider> enabled for the application using the Provider property in order to determine the value of the custom <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> property.  \\n  \\n [!code-vb[System.Web.Security.Membership#6](~/add/codesnippet/visualbasic/p-system.web.security.me_0_1.aspx)]\\n [!code-cs[System.Web.Security.Membership#6](~/add/codesnippet/csharp/p-system.web.security.me_0_1.aspx)]\"\n  syntax:\n    content: public static System.Web.Security.MembershipProvider Provider { get; }\n    return:\n      type: System.Web.Security.MembershipProvider\n      description: The default membership provider for the application exposed using the <xref:System.Web.Security.MembershipProvider> abstract base class.\n  overload: System.Web.Security.Membership.Provider*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.Membership.Providers\n  id: Providers\n  parent: System.Web.Security.Membership\n  langs:\n  - csharp\n  name: Providers\n  nameWithType: Membership.Providers\n  fullName: System.Web.Security.Membership.Providers\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets a collection of the membership providers for the ASP.NET application.\n  remarks: \"The Providers property references all of the membership providers enabled for an application, including providers added in the Web.config file for the application and the Machine.config file for all applications. You can control which membership providers are available for an application using the `providers` element of the  section in the configuration for your application. For example, the following sample shows the  section in the Web.config file for an application that removes the <xref:System.Web.Security.SqlMembershipProvider> instance (`AspNetSqlProvider`) specified in the machine configuration file and adds a <xref:System.Web.Security.SqlMembershipProvider> instance named `SqlProvider` as the default membership provider for the application.  \\n  \\n```  \\n<configuration>  \\n  <connectionStrings>  \\n    <add name=\\\"SqlServices\\\" connectionString=\\\"Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;\\\" />  \\n  </connectionStrings>  \\n  <system.web>  \\n    <membership defaultProvider=\\\"SqlProvider\\\" userIsOnlineTimeWindow=\\\"20\\\">  \\n      <providers>  \\n        <remove name=\\\"AspNetSqlProvider\\\" />  \\n          <add name=\\\"SqlProvider\\\"  \\n            type=\\\"System.Web.Security.SqlMembershipProvider\\\"  \\n            connectionStringName=\\\"SqlServices\\\"  \\n            enablePasswordRetrieval=\\\"false\\\"  \\n            enablePasswordReset=\\\"true\\\"  \\n            requiresQuestionAndAnswer=\\\"true\\\"  \\n            passwordFormat=\\\"Hashed\\\"  \\n            applicationName=\\\"/\\\" />  \\n      </providers>  \\n    </membership>  \\n  </system.web>  \\n</configuration>  \\n```  \\n  \\n When specifying the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) section, you must specify the `defaultProvider` attribute. If you do not specify a [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) section in your Web.config, the values from the machine configuration are used and the <xref:System.Web.Security.SqlMembershipProvider> instance named `AspNetSqlProvider` is established as the `defaultProvider`.  \\n  \\n You can obtain a strongly typed reference to a provider from the Providers collection by indexing the membership provider by name and casting it as the desired type.\"\n  example:\n  - \"The following code example lists the providers enabled for an application and their respective types.  \\n  \\n [!code-cs[System.Web.Security.Membership#7](~/add/codesnippet/csharp/p-system.web.security.me_1_1.aspx)]\\n [!code-vb[System.Web.Security.Membership#7](~/add/codesnippet/visualbasic/p-system.web.security.me_1_1.aspx)]\"\n  syntax:\n    content: public static System.Web.Security.MembershipProviderCollection Providers { get; }\n    return:\n      type: System.Web.Security.MembershipProviderCollection\n      description: A <xref:System.Web.Security.MembershipProviderCollection> of the membership providers configured for the ASP.NET application.\n  overload: System.Web.Security.Membership.Providers*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.Membership.RequiresQuestionAndAnswer\n  id: RequiresQuestionAndAnswer\n  parent: System.Web.Security.Membership\n  langs:\n  - csharp\n  name: RequiresQuestionAndAnswer\n  nameWithType: Membership.RequiresQuestionAndAnswer\n  fullName: System.Web.Security.Membership.RequiresQuestionAndAnswer\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Gets a value indicating whether the default membership provider requires the user to answer a password question for password reset and retrieval.\n  remarks: \"Requiring a password question and answer provides an additional layer of security when retrieving or resetting a user's password. Users can supply a question and answer when their user name is created that they can later use to retrieve or reset a forgotten password.  \\n  \\n RequiresQuestionAndAnswer is checked when <xref:System.Web.Security.MembershipUser.ResetPassword%2A> or <xref:System.Web.Security.MembershipUser.GetPassword%2A> is called. The provider provided with the .NET Framework throws a <xref:System.NotSupportedException> if RequiresQuestionAndAnswer is `true` and the supplied password answer is `null`.  \\n  \\n If <xref:System.Web.Security.Membership.EnablePasswordReset%2A> and <xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> are both `false`, RequiresQuestionAndAnswer can still be used to enforce the creation of questions and answers when new users are created; however, the question and answer will not be used. You will be able to retrieve the question by using the <xref:System.Web.Security.MembershipUser> class.  \\n  \\n For more information, see <xref:System.Web.Security.MembershipUser.ResetPassword%2A> and <xref:System.Web.Security.MembershipUser.GetPassword%2A>.\"\n  example:\n  - \"The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider>, enables password reset, and requires a password answer when performing a reset.  \\n  \\n```  \\n<membership defaultProvider=\\\"SqlProvider\\\" userIsOnlineTimeWindow=\\\"20\\\">  \\n  <providers>  \\n    <add name=\\\"SqlProvider\\\"  \\n      type=\\\"System.Web.Security.SqlMembershipProvider\\\"  \\n      connectionStringName=\\\"SqlServices\\\"  \\n      enablePasswordRetrieval=\\\"false\\\"  \\n      enablePasswordReset=\\\"true\\\"  \\n      requiresQuestionAndAnswer=\\\"true\\\"  \\n      passwordFormat=\\\"Hashed\\\"  \\n      applicationName=\\\"MyApplication\\\" />  \\n  </providers>  \\n</membership>  \\n```  \\n  \\n The following code sample checks the value of RequiresQuestionAndAnswer and adds the necessary controls for a password question and answer to be supplied when creating a user.  \\n  \\n> [!IMPORTANT]\\n>  This example includes a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/csharp/p-system.web.security.me_3_1.aspx)]\\n [!code-vb[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/visualbasic/p-system.web.security.me_3_1.aspx)]\"\n  syntax:\n    content: public static bool RequiresQuestionAndAnswer { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a password answer is required for password reset and retrieval; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.Security.Membership.RequiresQuestionAndAnswer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)\n  id: UpdateUser(System.Web.Security.MembershipUser)\n  parent: System.Web.Security.Membership\n  langs:\n  - csharp\n  name: UpdateUser(MembershipUser)\n  nameWithType: Membership.UpdateUser(MembershipUser)\n  fullName: System.Web.Security.Membership.UpdateUser(MembershipUser)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Updates the database with the information for the specified user.\n  remarks: UpdateUser takes, as input, a <xref:System.Web.Security.MembershipUser> object populated with current information for the membership user and updates the data source with the property values of the <xref:System.Web.Security.MembershipUser> object. You can construct a new <xref:System.Web.Security.MembershipUser>, or retrieve a <xref:System.Web.Security.MembershipUser> object populated with current values at the data source using the <xref:System.Web.Security.Membership.GetUser%2A>, <xref:System.Web.Security.Membership.GetAllUsers%2A>, <xref:System.Web.Security.Membership.FindUsersByName%2A>, or <xref:System.Web.Security.Membership.FindUsersByEmail%2A> methods.\n  example:\n  - \"The following code example updates the e-mail address for the current logged-on user.  \\n  \\n> [!IMPORTANT]\\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/csharp/m-system.web.security.me_8_1.aspx)]\\n [!code-vb[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/visualbasic/m-system.web.security.me_8_1.aspx)]\"\n  syntax:\n    content: public static void UpdateUser (System.Web.Security.MembershipUser user);\n    parameters:\n    - id: user\n      type: System.Web.Security.MembershipUser\n      description: A <xref:System.Web.Security.MembershipUser> object that represents the user to be updated and the updated information for the user.\n  overload: System.Web.Security.Membership.UpdateUser*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>user</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.Security.Membership.UserIsOnlineTimeWindow\n  id: UserIsOnlineTimeWindow\n  parent: System.Web.Security.Membership\n  langs:\n  - csharp\n  name: UserIsOnlineTimeWindow\n  nameWithType: Membership.UserIsOnlineTimeWindow\n  fullName: System.Web.Security.Membership.UserIsOnlineTimeWindow\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Specifies the number of minutes after the last-activity date/time stamp for a user during which the user is considered online.\n  remarks: \"The UserIsOnlineTimeWindow property value is checked during the call to <xref:System.Web.Security.Membership.GetNumberOfUsersOnline%2A>. If the <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> for a user is greater than the current date and time minus the UserIsOnlineTimeWindow value in minutes, then the user is considered online. You can determine whether a membership user is considered online with the <xref:System.Web.Security.MembershipUser.IsOnline%2A> property of the <xref:System.Web.Security.MembershipUser> class.  \\n  \\n The <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> for a user is updated when a user's credentials are successfully validated by the <xref:System.Web.Security.Membership.ValidateUser%2A> method. You can also update the <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> for a membership user when you call one of the <xref:System.Web.Security.Membership.GetUser%2A> overloads. If you call a <xref:System.Web.Security.Membership.GetUser%2A> overload that takes a `userIsOnline` parameter, specify a value of `true` to update the <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> for the user.\"\n  example:\n  - \"The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and sets the `userIsOnlineTimeWindow` attribute to 20 minutes.  \\n  \\n```  \\n<membership defaultProvider=\\\"SqlProvider\\\"  \\n  userIsOnlineTimeWindow=\\\"20\\\">  \\n  <providers>  \\n    <add name=\\\"SqlProvider\\\"  \\n      type=\\\"System.Web.Security.SqlMembershipProvider\\\"  \\n      connectionStringName=\\\"SqlServices\\\"  \\n      enablePasswordRetrieval=\\\"true\\\"  \\n      enablePasswordReset=\\\"false\\\"  \\n      requiresQuestionAndAnswer=\\\"true\\\"  \\n      passwordFormat=\\\"Encrypted\\\"  \\n      applicationName=\\\"MyApplication\\\" />  \\n  </providers>  \\n</membership>  \\n```\"\n  syntax:\n    content: public static int UserIsOnlineTimeWindow { get; }\n    return:\n      type: System.Int32\n      description: The number of minutes after the last-activity date/time stamp for a user during which the user is considered online.\n  overload: System.Web.Security.Membership.UserIsOnlineTimeWindow*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.Membership.ValidateUser(System.String,System.String)\n  id: ValidateUser(System.String,System.String)\n  parent: System.Web.Security.Membership\n  langs:\n  - csharp\n  name: ValidateUser(String,String)\n  nameWithType: Membership.ValidateUser(String,String)\n  fullName: System.Web.Security.Membership.ValidateUser(String,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Verifies that the supplied user name and password are valid.\n  remarks: ValidateUser provides an easy way to verify a user name and password from the data source. Note that, if the `username` parameter is empty or `null`, an <xref:System.Web.HttpException> is thrown.\n  example:\n  - \"The following code example shows the login page for an ASP.NET application configured to use forms authentication and the <xref:System.Web.Security.Membership> class. If the supplied user credentials are invalid, a message is displayed to the user. Otherwise, the user is redirected to the originally requested URL by the <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> method.  \\n  \\n> [!IMPORTANT]\\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/m-system.web.security.me_7_1.aspx)]\\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/m-system.web.security.me_7_1.aspx)]\"\n  syntax:\n    content: public static bool ValidateUser (string username, string password);\n    parameters:\n    - id: username\n      type: System.String\n      description: The name of the user to be validated.\n    - id: password\n      type: System.String\n      description: The password for the specified user.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the supplied user name and password are valid; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.Security.Membership.ValidateUser*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.Membership.ValidatingPassword\n  id: ValidatingPassword\n  parent: System.Web.Security.Membership\n  langs:\n  - csharp\n  name: ValidatingPassword\n  nameWithType: Membership.ValidatingPassword\n  fullName: System.Web.Security.Membership.ValidatingPassword\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Occurs when a user is created, a password is changed, or a password is reset.\n  remarks: \"The <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event is raised when the <xref:System.Web.Security.MembershipProvider.CreateUser%2A> method, the <xref:System.Web.Security.MembershipProvider.ChangePassword%2A> method, or the <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> method of a membership provider is called.  \\n  \\n You can use the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event to validate password formats and values for membership users.  \\n  \\n You can cancel the current <xref:System.Web.Security.MembershipProvider.CreateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, or <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> action by setting the <xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> property of the supplied <xref:System.Web.Security.ValidatePasswordEventArgs> to `true` during the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event.  \\n  \\n If you cancel the current action by setting the <xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> property to `true`, you can set the <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> property of the supplied <xref:System.Web.Security.ValidatePasswordEventArgs> to an exception that describes the reason for the password-validation failure. The calling method will throw the exception that the <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> property is set to. If the <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> property is `null`, the caller will throw a generic password-validation-failure exception.\"\n  example:\n  - \"The following code example shows a <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event that validates the format of the password for a user and cancels the action if the password does not match the required format.  \\n  \\n [!code-cs[System.Web.Security.Membership#11](~/add/codesnippet/csharp/e-system.web.security.me_1.aspx)]\\n [!code-vb[System.Web.Security.Membership#11](~/add/codesnippet/visualbasic/e-system.web.security.me_1.aspx)]\"\n  syntax:\n    content: public static event System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword;\n    return:\n      type: System.Web.Security.MembershipValidatePasswordEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Web.Security.MembershipCreateUserException\n  isExternal: true\n  name: System.Web.Security.MembershipCreateUserException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Web.Security.Membership.ApplicationName\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: ApplicationName\n  nameWithType: Membership.ApplicationName\n  fullName: System.Web.Security.Membership.ApplicationName\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.Security.Membership.CreateUser(System.String,System.String)\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: CreateUser(String,String)\n  nameWithType: Membership.CreateUser(String,String)\n  fullName: System.Web.Security.Membership.CreateUser(String,String)\n- uid: System.Web.Security.MembershipUser\n  parent: System.Web.Security\n  isExternal: true\n  name: MembershipUser\n  nameWithType: MembershipUser\n  fullName: System.Web.Security.MembershipUser\n- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: CreateUser(String,String,String)\n  nameWithType: Membership.CreateUser(String,String,String)\n  fullName: System.Web.Security.Membership.CreateUser(String,String,String)\n- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)\n  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)\n  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.Security.MembershipCreateStatus\n  parent: System.Web.Security\n  isExternal: true\n  name: MembershipCreateStatus\n  nameWithType: MembershipCreateStatus\n  fullName: System.Web.Security.MembershipCreateStatus\n- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)\n  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)\n  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)\n- uid: System.Web.Security.Membership.DeleteUser(System.String)\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: DeleteUser(String)\n  nameWithType: Membership.DeleteUser(String)\n  fullName: System.Web.Security.Membership.DeleteUser(String)\n- uid: System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: DeleteUser(String,Boolean)\n  nameWithType: Membership.DeleteUser(String,Boolean)\n  fullName: System.Web.Security.Membership.DeleteUser(String,Boolean)\n- uid: System.Web.Security.Membership.EnablePasswordReset\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: EnablePasswordReset\n  nameWithType: Membership.EnablePasswordReset\n  fullName: System.Web.Security.Membership.EnablePasswordReset\n- uid: System.Web.Security.Membership.EnablePasswordRetrieval\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: EnablePasswordRetrieval\n  nameWithType: Membership.EnablePasswordRetrieval\n  fullName: System.Web.Security.Membership.EnablePasswordRetrieval\n- uid: System.Web.Security.Membership.FindUsersByEmail(System.String)\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: FindUsersByEmail(String)\n  nameWithType: Membership.FindUsersByEmail(String)\n  fullName: System.Web.Security.Membership.FindUsersByEmail(String)\n- uid: System.Web.Security.MembershipUserCollection\n  parent: System.Web.Security\n  isExternal: true\n  name: MembershipUserCollection\n  nameWithType: MembershipUserCollection\n  fullName: System.Web.Security.MembershipUserCollection\n- uid: System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: FindUsersByEmail(String,Int32,Int32,Int32)\n  nameWithType: Membership.FindUsersByEmail(String,Int32,Int32,Int32)\n  fullName: System.Web.Security.Membership.FindUsersByEmail(String,Int32,Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.Security.Membership.FindUsersByName(System.String)\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: FindUsersByName(String)\n  nameWithType: Membership.FindUsersByName(String)\n  fullName: System.Web.Security.Membership.FindUsersByName(String)\n- uid: System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: FindUsersByName(String,Int32,Int32,Int32)\n  nameWithType: Membership.FindUsersByName(String,Int32,Int32,Int32)\n  fullName: System.Web.Security.Membership.FindUsersByName(String,Int32,Int32,Int32)\n- uid: System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: GeneratePassword(Int32,Int32)\n  nameWithType: Membership.GeneratePassword(Int32,Int32)\n  fullName: System.Web.Security.Membership.GeneratePassword(Int32,Int32)\n- uid: System.Web.Security.Membership.GetAllUsers\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: GetAllUsers()\n  nameWithType: Membership.GetAllUsers()\n  fullName: System.Web.Security.Membership.GetAllUsers()\n- uid: System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: GetAllUsers(Int32,Int32,Int32)\n  nameWithType: Membership.GetAllUsers(Int32,Int32,Int32)\n  fullName: System.Web.Security.Membership.GetAllUsers(Int32,Int32,Int32)\n- uid: System.Web.Security.Membership.GetNumberOfUsersOnline\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: GetNumberOfUsersOnline()\n  nameWithType: Membership.GetNumberOfUsersOnline()\n  fullName: System.Web.Security.Membership.GetNumberOfUsersOnline()\n- uid: System.Web.Security.Membership.GetUser\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: GetUser()\n  nameWithType: Membership.GetUser()\n  fullName: System.Web.Security.Membership.GetUser()\n- uid: System.Web.Security.Membership.GetUser(System.Boolean)\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: GetUser(Boolean)\n  nameWithType: Membership.GetUser(Boolean)\n  fullName: System.Web.Security.Membership.GetUser(Boolean)\n- uid: System.Web.Security.Membership.GetUser(System.Object)\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: GetUser(Object)\n  nameWithType: Membership.GetUser(Object)\n  fullName: System.Web.Security.Membership.GetUser(Object)\n- uid: System.Web.Security.Membership.GetUser(System.String)\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: GetUser(String)\n  nameWithType: Membership.GetUser(String)\n  fullName: System.Web.Security.Membership.GetUser(String)\n- uid: System.Web.Security.Membership.GetUser(System.Object,System.Boolean)\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: GetUser(Object,Boolean)\n  nameWithType: Membership.GetUser(Object,Boolean)\n  fullName: System.Web.Security.Membership.GetUser(Object,Boolean)\n- uid: System.Web.Security.Membership.GetUser(System.String,System.Boolean)\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: GetUser(String,Boolean)\n  nameWithType: Membership.GetUser(String,Boolean)\n  fullName: System.Web.Security.Membership.GetUser(String,Boolean)\n- uid: System.Web.Security.Membership.GetUserNameByEmail(System.String)\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: GetUserNameByEmail(String)\n  nameWithType: Membership.GetUserNameByEmail(String)\n  fullName: System.Web.Security.Membership.GetUserNameByEmail(String)\n- uid: System.Web.Security.Membership.HashAlgorithmType\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: HashAlgorithmType\n  nameWithType: Membership.HashAlgorithmType\n  fullName: System.Web.Security.Membership.HashAlgorithmType\n- uid: System.Web.Security.Membership.MaxInvalidPasswordAttempts\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: MaxInvalidPasswordAttempts\n  nameWithType: Membership.MaxInvalidPasswordAttempts\n  fullName: System.Web.Security.Membership.MaxInvalidPasswordAttempts\n- uid: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: MinRequiredNonAlphanumericCharacters\n  nameWithType: Membership.MinRequiredNonAlphanumericCharacters\n  fullName: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters\n- uid: System.Web.Security.Membership.MinRequiredPasswordLength\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: MinRequiredPasswordLength\n  nameWithType: Membership.MinRequiredPasswordLength\n  fullName: System.Web.Security.Membership.MinRequiredPasswordLength\n- uid: System.Web.Security.Membership.PasswordAttemptWindow\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: PasswordAttemptWindow\n  nameWithType: Membership.PasswordAttemptWindow\n  fullName: System.Web.Security.Membership.PasswordAttemptWindow\n- uid: System.Web.Security.Membership.PasswordStrengthRegularExpression\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: PasswordStrengthRegularExpression\n  nameWithType: Membership.PasswordStrengthRegularExpression\n  fullName: System.Web.Security.Membership.PasswordStrengthRegularExpression\n- uid: System.Web.Security.Membership.Provider\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: Provider\n  nameWithType: Membership.Provider\n  fullName: System.Web.Security.Membership.Provider\n- uid: System.Web.Security.MembershipProvider\n  parent: System.Web.Security\n  isExternal: true\n  name: MembershipProvider\n  nameWithType: MembershipProvider\n  fullName: System.Web.Security.MembershipProvider\n- uid: System.Web.Security.Membership.Providers\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: Providers\n  nameWithType: Membership.Providers\n  fullName: System.Web.Security.Membership.Providers\n- uid: System.Web.Security.MembershipProviderCollection\n  parent: System.Web.Security\n  isExternal: true\n  name: MembershipProviderCollection\n  nameWithType: MembershipProviderCollection\n  fullName: System.Web.Security.MembershipProviderCollection\n- uid: System.Web.Security.Membership.RequiresQuestionAndAnswer\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: RequiresQuestionAndAnswer\n  nameWithType: Membership.RequiresQuestionAndAnswer\n  fullName: System.Web.Security.Membership.RequiresQuestionAndAnswer\n- uid: System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: UpdateUser(MembershipUser)\n  nameWithType: Membership.UpdateUser(MembershipUser)\n  fullName: System.Web.Security.Membership.UpdateUser(MembershipUser)\n- uid: System.Web.Security.Membership.UserIsOnlineTimeWindow\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: UserIsOnlineTimeWindow\n  nameWithType: Membership.UserIsOnlineTimeWindow\n  fullName: System.Web.Security.Membership.UserIsOnlineTimeWindow\n- uid: System.Web.Security.Membership.ValidateUser(System.String,System.String)\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: ValidateUser(String,String)\n  nameWithType: Membership.ValidateUser(String,String)\n  fullName: System.Web.Security.Membership.ValidateUser(String,String)\n- uid: System.Web.Security.Membership.ValidatingPassword\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: ValidatingPassword\n  nameWithType: Membership.ValidatingPassword\n  fullName: System.Web.Security.Membership.ValidatingPassword\n- uid: System.Web.Security.MembershipValidatePasswordEventHandler\n  parent: System.Web.Security\n  isExternal: true\n  name: MembershipValidatePasswordEventHandler\n  nameWithType: MembershipValidatePasswordEventHandler\n  fullName: System.Web.Security.MembershipValidatePasswordEventHandler\n- uid: System.Web.Security.Membership.ApplicationName*\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: ApplicationName\n  nameWithType: Membership.ApplicationName\n- uid: System.Web.Security.Membership.CreateUser*\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: CreateUser\n  nameWithType: Membership.CreateUser\n- uid: System.Web.Security.Membership.DeleteUser*\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: DeleteUser\n  nameWithType: Membership.DeleteUser\n- uid: System.Web.Security.Membership.EnablePasswordReset*\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: EnablePasswordReset\n  nameWithType: Membership.EnablePasswordReset\n- uid: System.Web.Security.Membership.EnablePasswordRetrieval*\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: EnablePasswordRetrieval\n  nameWithType: Membership.EnablePasswordRetrieval\n- uid: System.Web.Security.Membership.FindUsersByEmail*\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: FindUsersByEmail\n  nameWithType: Membership.FindUsersByEmail\n- uid: System.Web.Security.Membership.FindUsersByName*\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: FindUsersByName\n  nameWithType: Membership.FindUsersByName\n- uid: System.Web.Security.Membership.GeneratePassword*\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: GeneratePassword\n  nameWithType: Membership.GeneratePassword\n- uid: System.Web.Security.Membership.GetAllUsers*\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: GetAllUsers\n  nameWithType: Membership.GetAllUsers\n- uid: System.Web.Security.Membership.GetNumberOfUsersOnline*\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: GetNumberOfUsersOnline\n  nameWithType: Membership.GetNumberOfUsersOnline\n- uid: System.Web.Security.Membership.GetUser*\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: GetUser\n  nameWithType: Membership.GetUser\n- uid: System.Web.Security.Membership.GetUserNameByEmail*\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: GetUserNameByEmail\n  nameWithType: Membership.GetUserNameByEmail\n- uid: System.Web.Security.Membership.HashAlgorithmType*\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: HashAlgorithmType\n  nameWithType: Membership.HashAlgorithmType\n- uid: System.Web.Security.Membership.MaxInvalidPasswordAttempts*\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: MaxInvalidPasswordAttempts\n  nameWithType: Membership.MaxInvalidPasswordAttempts\n- uid: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters*\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: MinRequiredNonAlphanumericCharacters\n  nameWithType: Membership.MinRequiredNonAlphanumericCharacters\n- uid: System.Web.Security.Membership.MinRequiredPasswordLength*\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: MinRequiredPasswordLength\n  nameWithType: Membership.MinRequiredPasswordLength\n- uid: System.Web.Security.Membership.PasswordAttemptWindow*\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: PasswordAttemptWindow\n  nameWithType: Membership.PasswordAttemptWindow\n- uid: System.Web.Security.Membership.PasswordStrengthRegularExpression*\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: PasswordStrengthRegularExpression\n  nameWithType: Membership.PasswordStrengthRegularExpression\n- uid: System.Web.Security.Membership.Provider*\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: Provider\n  nameWithType: Membership.Provider\n- uid: System.Web.Security.Membership.Providers*\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: Providers\n  nameWithType: Membership.Providers\n- uid: System.Web.Security.Membership.RequiresQuestionAndAnswer*\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: RequiresQuestionAndAnswer\n  nameWithType: Membership.RequiresQuestionAndAnswer\n- uid: System.Web.Security.Membership.UpdateUser*\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: UpdateUser\n  nameWithType: Membership.UpdateUser\n- uid: System.Web.Security.Membership.UserIsOnlineTimeWindow*\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: UserIsOnlineTimeWindow\n  nameWithType: Membership.UserIsOnlineTimeWindow\n- uid: System.Web.Security.Membership.ValidateUser*\n  parent: System.Web.Security.Membership\n  isExternal: false\n  name: ValidateUser\n  nameWithType: Membership.ValidateUser\n"}