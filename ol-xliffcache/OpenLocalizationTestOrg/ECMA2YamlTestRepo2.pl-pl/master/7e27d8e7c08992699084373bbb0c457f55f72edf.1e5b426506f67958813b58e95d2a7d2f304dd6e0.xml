{"nodes":[{"pos":[916,999],"content":"Defines the contract that a custom session-state identifier manager must implement.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines the contract that a custom session-state identifier manager must implement.","pos":[0,83]}]},{"pos":[1012,2758],"content":"The ISessionIDManager interface identifies the methods that you must implement to create a custom manager for session-identifier values. An ISessionIDManager interface implementation creates and validates session-identifier values, and manages the storage of a session identifier in the HTTP response as well as the retrieval of a session-identifier value from the HTTP request. You enable the custom session-ID manager using the `sessionIDManagerType` attribute of the [sessionState Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) configuration element.       If your ISessionIDManager interface implementation will support cookieless session identifiers, you will need to implement a solution for sending and retrieving session identifiers in the URL, such as an ISAPI filter.       If you only want to supply custom session-identifier values to be used by ASP.NET session state, you can create a class that inherits the <xref:System.Web.SessionState.SessionIDManager> class and override only the <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> and <xref:System.Web.SessionState.SessionIDManager.Validate%2A> methods with your own custom implementation. This enables you to supply your own session-identifier values, while relying on the base <xref:System.Web.SessionState.SessionIDManager> class to store values to the HTTP response and retrieve values from the HTTP request. For an example of overriding the <xref:System.Web.SessionState.SessionIDManager> class and implementing these methods, see the example provided for the <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> method of the <xref:System.Web.SessionState.SessionIDManager> class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ISessionIDManager interface identifies the methods that you must implement to create a custom manager for session-identifier values.","pos":[0,136]},{"content":"An ISessionIDManager interface implementation creates and validates session-identifier values, and manages the storage of a session identifier in the HTTP response as well as the retrieval of a session-identifier value from the HTTP request.","pos":[137,378]},{"content":"You enable the custom session-ID manager using the <ph id=\"ph1\">`sessionIDManagerType`</ph> attribute of the <bpt id=\"p1\">[</bpt>sessionState Element (ASP.NET Settings Schema)<ept id=\"p1\">](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d)</ept> configuration element.","pos":[379,611],"source":" You enable the custom session-ID manager using the `sessionIDManagerType` attribute of the [sessionState Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) configuration element."},{"content":"If your ISessionIDManager interface implementation will support cookieless session identifiers, you will need to implement a solution for sending and retrieving session identifiers in the URL, such as an ISAPI filter.","pos":[618,835]},{"content":"If you only want to supply custom session-identifier values to be used by ASP.NET session state, you can create a class that inherits the &lt;xref:System.Web.SessionState.SessionIDManager&gt; class and override only the &lt;xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A&gt; and &lt;xref:System.Web.SessionState.SessionIDManager.Validate%2A&gt; methods with your own custom implementation.","pos":[842,1231],"source":"       If you only want to supply custom session-identifier values to be used by ASP.NET session state, you can create a class that inherits the <xref:System.Web.SessionState.SessionIDManager> class and override only the <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> and <xref:System.Web.SessionState.SessionIDManager.Validate%2A> methods with your own custom implementation."},{"content":"This enables you to supply your own session-identifier values, while relying on the base &lt;xref:System.Web.SessionState.SessionIDManager&gt; class to store values to the HTTP response and retrieve values from the HTTP request.","pos":[1232,1454],"source":" This enables you to supply your own session-identifier values, while relying on the base <xref:System.Web.SessionState.SessionIDManager> class to store values to the HTTP response and retrieve values from the HTTP request."},{"content":"For an example of overriding the &lt;xref:System.Web.SessionState.SessionIDManager&gt; class and implementing these methods, see the example provided for the &lt;xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A&gt; method of the &lt;xref:System.Web.SessionState.SessionIDManager&gt; class.","pos":[1455,1742],"source":" For an example of overriding the <xref:System.Web.SessionState.SessionIDManager> class and implementing these methods, see the example provided for the <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> method of the <xref:System.Web.SessionState.SessionIDManager> class."}]},{"pos":[3690,3726],"content":"Creates a unique session identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a unique session identifier.","pos":[0,36]}]},{"pos":[3738,4602],"content":"The CreateSessionID method is used to generate a unique session identifier that the <xref:System.Web.SessionState.SessionStateModule> object will use to identify a new session. The value returned by CreateSessionID must be unique and must contain valid characters that can be stored in an HTTP response and request. If it is possible that the value returned by your CreateSessionID implementation contains characters that are not valid in an HTTP response or request, you should use the <xref:System.Web.HttpUtility.UrlEncode%2A> method to encode the session-identifier value in your <xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A> method implementation and the <xref:System.Web.HttpUtility.UrlDecode%2A> method to decode the session-identifier value in your <xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> method implementation.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The CreateSessionID method is used to generate a unique session identifier that the <xref:System.Web.SessionState.SessionStateModule> object will use to identify a new session. The value returned by CreateSessionID must be unique and must contain valid characters that can be stored in an HTTP response and request. If it is possible that the value returned by your CreateSessionID implementation contains characters that are not valid in an HTTP response or request, you should use the <xref:System.Web.HttpUtility.UrlEncode%2A> method to encode the session-identifier value in your <xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A> method implementation and the <xref:System.Web.HttpUtility.UrlDecode%2A> method to decode the session-identifier value in your <xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> method implementation.","pos":[0,864],"nodes":[{"content":"The CreateSessionID method is used to generate a unique session identifier that the &lt;xref:System.Web.SessionState.SessionStateModule&gt; object will use to identify a new session.","pos":[0,176],"source":"The CreateSessionID method is used to generate a unique session identifier that the <xref:System.Web.SessionState.SessionStateModule> object will use to identify a new session."},{"content":"The value returned by CreateSessionID must be unique and must contain valid characters that can be stored in an HTTP response and request.","pos":[177,315]},{"content":"If it is possible that the value returned by your CreateSessionID implementation contains characters that are not valid in an HTTP response or request, you should use the &lt;xref:System.Web.HttpUtility.UrlEncode%2A&gt; method to encode the session-identifier value in your &lt;xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A&gt; method implementation and the &lt;xref:System.Web.HttpUtility.UrlDecode%2A&gt; method to decode the session-identifier value in your &lt;xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A&gt; method implementation.","pos":[316,864],"source":" If it is possible that the value returned by your CreateSessionID implementation contains characters that are not valid in an HTTP response or request, you should use the <xref:System.Web.HttpUtility.UrlEncode%2A> method to encode the session-identifier value in your <xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A> method implementation and the <xref:System.Web.HttpUtility.UrlDecode%2A> method to decode the session-identifier value in your <xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> method implementation."}]}]},{"pos":[5178,5415],"content":"The current <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that references server objects used to process HTTP requests (for example, the &lt;xref:System.Web.HttpContext.Request<bpt id=\"p2\">*</bpt>&gt; and &lt;xref:System.Web.HttpContext.Response<ept id=\"p2\">*</ept>&gt; properties).","needQuote":true,"needEscape":true,"source":"The current <xref href=\"System.Web.HttpContext\"></xref> object that references server objects used to process HTTP requests (for example, the <xref:System.Web.HttpContext.Request*> and <xref:System.Web.HttpContext.Response*> properties)."},{"pos":[5473,5501],"content":"A unique session identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"A unique session identifier.","pos":[0,28]}]},{"pos":[6080,6153],"content":"Gets the session identifier from the context of the current HTTP request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the session identifier from the context of the current HTTP request.","pos":[0,73]}]},{"pos":[6166,7319],"content":"The GetSessionID method is called by the <xref:System.Web.SessionState.SessionStateModule> during the <xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName> and <xref:System.Web.HttpApplication.EndRequest?displayProperty=fullName> events. If you cannot retrieve a valid session identifier from the HTTP request, return `null`. If the <xref:System.Web.SessionState.SessionStateModule> receives `null` from the GetSessionID method, it will call the <xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A> method to get a new session identifier for a new session.       If it is possible that the value returned by your <xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A> implementation contains characters that are not valid in an HTTP response or request, you should use the <xref:System.Web.HttpUtility.UrlEncode%2A> method to encode the session-identifier value in your <xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A> method implementation and the <xref:System.Web.HttpUtility.UrlDecode%2A> method to decode the session-identifier value in your GetSessionID method implementation.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetSessionID method is called by the &lt;xref:System.Web.SessionState.SessionStateModule&gt; during the &lt;xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName&gt; and &lt;xref:System.Web.HttpApplication.EndRequest?displayProperty=fullName&gt; events.","pos":[0,262],"source":"The GetSessionID method is called by the <xref:System.Web.SessionState.SessionStateModule> during the <xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName> and <xref:System.Web.HttpApplication.EndRequest?displayProperty=fullName> events."},{"content":"If you cannot retrieve a valid session identifier from the HTTP request, return <ph id=\"ph1\">`null`</ph>.","pos":[263,350],"source":" If you cannot retrieve a valid session identifier from the HTTP request, return `null`."},{"content":"If the &lt;xref:System.Web.SessionState.SessionStateModule&gt; receives <ph id=\"ph1\">`null`</ph> from the GetSessionID method, it will call the &lt;xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A&gt; method to get a new session identifier for a new session.","pos":[351,596],"source":" If the <xref:System.Web.SessionState.SessionStateModule> receives `null` from the GetSessionID method, it will call the <xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A> method to get a new session identifier for a new session."},{"content":"If it is possible that the value returned by your &lt;xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A&gt; implementation contains characters that are not valid in an HTTP response or request, you should use the &lt;xref:System.Web.HttpUtility.UrlEncode%2A&gt; method to encode the session-identifier value in your &lt;xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A&gt; method implementation and the &lt;xref:System.Web.HttpUtility.UrlDecode%2A&gt; method to decode the session-identifier value in your GetSessionID method implementation.","pos":[603,1151],"source":"       If it is possible that the value returned by your <xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A> implementation contains characters that are not valid in an HTTP response or request, you should use the <xref:System.Web.HttpUtility.UrlEncode%2A> method to encode the session-identifier value in your <xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A> method implementation and the <xref:System.Web.HttpUtility.UrlDecode%2A> method to decode the session-identifier value in your GetSessionID method implementation."}]},{"pos":[8028,8265],"content":"The current <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that references server objects used to process HTTP requests (for example, the &lt;xref:System.Web.HttpContext.Request<bpt id=\"p2\">*</bpt>&gt; and &lt;xref:System.Web.HttpContext.Response<ept id=\"p2\">*</ept>&gt; properties).","needQuote":true,"needEscape":true,"source":"The current <xref href=\"System.Web.HttpContext\"></xref> object that references server objects used to process HTTP requests (for example, the <xref:System.Web.HttpContext.Request*> and <xref:System.Web.HttpContext.Response*> properties)."},{"pos":[8323,8381],"content":"The current session identifier sent with the HTTP request.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current session identifier sent with the HTTP request.","pos":[0,58]}]},{"pos":[8866,8951],"content":"Initializes the <bpt id=\"p1\">&lt;xref href=\"System.Web.SessionState.SessionIDManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Initializes the <xref href=\"System.Web.SessionState.SessionIDManager\"></xref> object."},{"pos":[8963,9063],"content":"Use the Initialize method to initialize the <xref:System.Web.SessionState.ISessionIDManager> object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the Initialize method to initialize the &lt;xref:System.Web.SessionState.ISessionIDManager&gt; object.","pos":[0,100],"source":"Use the Initialize method to initialize the <xref:System.Web.SessionState.ISessionIDManager> object."}]},{"pos":[9841,9953],"content":"Performs per-request initialization of the <bpt id=\"p1\">&lt;xref href=\"System.Web.SessionState.SessionIDManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Performs per-request initialization of the <xref href=\"System.Web.SessionState.SessionIDManager\"></xref> object."},{"pos":[9966,10679],"content":"The InitializeRequest method is called for each request handled by the <xref:System.Web.SessionState.ISessionIDManager> object. Use the InitializeRequest method to initialize per-request data for the <xref:System.Web.SessionState.SessionIDManager> object.       When the `suppressAutoDetectRedirect` parameter is `true`, the <xref:System.Web.SessionState.ISessionIDManager> object should not use redirection to determine whether the browser supports cookies.       The `supportSessionIDReissue` parameter should be returned `false` if cookies are used for session identification; otherwise, return `true` if your <xref:System.Web.SessionState.ISessionIDManager> implementation supports re-issuing session IDs.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The InitializeRequest method is called for each request handled by the &lt;xref:System.Web.SessionState.ISessionIDManager&gt; object.","pos":[0,127],"source":"The InitializeRequest method is called for each request handled by the <xref:System.Web.SessionState.ISessionIDManager> object."},{"content":"Use the InitializeRequest method to initialize per-request data for the &lt;xref:System.Web.SessionState.SessionIDManager&gt; object.","pos":[128,255],"source":" Use the InitializeRequest method to initialize per-request data for the <xref:System.Web.SessionState.SessionIDManager> object."},{"content":"When the <ph id=\"ph1\">`suppressAutoDetectRedirect`</ph> parameter is <ph id=\"ph2\">`true`</ph>, the &lt;xref:System.Web.SessionState.ISessionIDManager&gt; object should not use redirection to determine whether the browser supports cookies.","pos":[262,458],"source":"       When the `suppressAutoDetectRedirect` parameter is `true`, the <xref:System.Web.SessionState.ISessionIDManager> object should not use redirection to determine whether the browser supports cookies."},{"content":"The <ph id=\"ph1\">`supportSessionIDReissue`</ph> parameter should be returned <ph id=\"ph2\">`false`</ph> if cookies are used for session identification; otherwise, return <ph id=\"ph3\">`true`</ph> if your &lt;xref:System.Web.SessionState.ISessionIDManager&gt; implementation supports re-issuing session IDs.","pos":[465,709],"source":"       The `supportSessionIDReissue` parameter should be returned `false` if cookies are used for session identification; otherwise, return `true` if your <xref:System.Web.SessionState.ISessionIDManager> implementation supports re-issuing session IDs."}]},{"pos":[10923,11030],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains information about the current request.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.HttpContext\"></xref> object that contains information about the current request."},{"pos":[11114,11382],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the session-ID manager should redirect to determine cookie support; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to suppress automatic redirection to determine cookie support.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the session-ID manager should redirect to determine cookie support; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to suppress automatic redirection to determine cookie support."},{"pos":[11464,11990],"content":"When this method returns, contains a Boolean that indicates whether the <xref href=\"System.Web.SessionState.ISessionIDManager\"></xref> object supports issuing new session IDs when the original ID is out of date. This parameter is passed uninitialized.       Session ID reuse is appropriate when the session-state ID is encoded on a URL and the potential exists for the URL to be shared or emailed.       If a custom session-state implementation partitions cookies by virtual path, session state should also be supported.","needQuote":false,"needEscape":true,"nodes":[{"content":"When this method returns, contains a Boolean that indicates whether the <bpt id=\"p1\">&lt;xref href=\"System.Web.SessionState.ISessionIDManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object supports issuing new session IDs when the original ID is out of date.","pos":[0,211],"source":"When this method returns, contains a Boolean that indicates whether the <xref href=\"System.Web.SessionState.ISessionIDManager\"></xref> object supports issuing new session IDs when the original ID is out of date."},{"content":"This parameter is passed uninitialized.","pos":[212,251]},{"content":"Session ID reuse is appropriate when the session-state ID is encoded on a URL and the potential exists for the URL to be shared or emailed.","pos":[258,397]},{"content":"If a custom session-state implementation partitions cookies by virtual path, session state should also be supported.","pos":[404,520]}]},{"pos":[12050,12243],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to indicate that the initialization performed a redirect; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate that the initialization performed a redirect; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12839,12902],"content":"Deletes the session identifier from the cookie or from the URL.","needQuote":true,"needEscape":true,"nodes":[{"content":"Deletes the session identifier from the cookie or from the URL.","pos":[0,63]}]},{"pos":[12914,13314],"content":"The <xref:System.Web.SessionState.SessionStateModule> calls the <xref:System.Web.SessionState.SessionIDManager.RemoveSessionID%2A> method during the <xref:System.Web.HttpApplication.ReleaseRequestState?displayProperty=fullName> event to remove the session identifier from the <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=fullName> collection if a new session was created but was not used.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.SessionState.SessionStateModule&gt; calls the &lt;xref:System.Web.SessionState.SessionIDManager.RemoveSessionID%2A&gt; method during the &lt;xref:System.Web.HttpApplication.ReleaseRequestState?displayProperty=fullName&gt; event to remove the session identifier from the &lt;xref:System.Web.HttpResponse.Cookies%2A?displayProperty=fullName&gt; collection if a new session was created but was not used.","pos":[0,400],"source":"The <xref:System.Web.SessionState.SessionStateModule> calls the <xref:System.Web.SessionState.SessionIDManager.RemoveSessionID%2A> method during the <xref:System.Web.HttpApplication.ReleaseRequestState?displayProperty=fullName> event to remove the session identifier from the <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=fullName> collection if a new session was created but was not used."}]},{"pos":[13808,14045],"content":"The current <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that references server objects used to process HTTP requests (for example, the &lt;xref:System.Web.HttpContext.Request<bpt id=\"p2\">*</bpt>&gt; and &lt;xref:System.Web.HttpContext.Response<ept id=\"p2\">*</ept>&gt; properties).","needQuote":true,"needEscape":true,"source":"The current <xref href=\"System.Web.HttpContext\"></xref> object that references server objects used to process HTTP requests (for example, the <xref:System.Web.HttpContext.Request*> and <xref:System.Web.HttpContext.Response*> properties)."},{"pos":[14790,14852],"content":"Saves a newly created session identifier to the HTTP response.","needQuote":true,"needEscape":true,"nodes":[{"content":"Saves a newly created session identifier to the HTTP response.","pos":[0,62]}]},{"pos":[14865,15769],"content":"The SaveSessionID method is called by the <xref:System.Web.SessionState.SessionStateModule> object during the <xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName> event. The SaveSessionID method stores the session identifier either in the URL (when cookieless session state is used) or in a non-expiring session cookie.       If it is possible that the value returned from your <xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A> implementation contains characters that are not valid in an HTTP response or request, you should use the <xref:System.Web.HttpUtility.UrlEncode%2A> method to encode the session-identifier value in your SaveSessionID method implementation and the <xref:System.Web.HttpUtility.UrlDecode%2A> method to decode the session-identifier value in your <xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> method implementation.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The SaveSessionID method is called by the <xref:System.Web.SessionState.SessionStateModule> object during the <xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName> event. The SaveSessionID method stores the session identifier either in the URL (when cookieless session state is used) or in a non-expiring session cookie.       If it is possible that the value returned from your <xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A> implementation contains characters that are not valid in an HTTP response or request, you should use the <xref:System.Web.HttpUtility.UrlEncode%2A> method to encode the session-identifier value in your SaveSessionID method implementation and the <xref:System.Web.HttpUtility.UrlDecode%2A> method to decode the session-identifier value in your <xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> method implementation.","pos":[0,902],"nodes":[{"content":"The SaveSessionID method is called by the &lt;xref:System.Web.SessionState.SessionStateModule&gt; object during the &lt;xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName&gt; event.","pos":[0,195],"source":"The SaveSessionID method is called by the <xref:System.Web.SessionState.SessionStateModule> object during the <xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName> event."},{"content":"The SaveSessionID method stores the session identifier either in the URL (when cookieless session state is used) or in a non-expiring session cookie.","pos":[196,345]},{"content":"If it is possible that the value returned from your &lt;xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A&gt; implementation contains characters that are not valid in an HTTP response or request, you should use the &lt;xref:System.Web.HttpUtility.UrlEncode%2A&gt; method to encode the session-identifier value in your SaveSessionID method implementation and the &lt;xref:System.Web.HttpUtility.UrlDecode%2A&gt; method to decode the session-identifier value in your &lt;xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A&gt; method implementation.","pos":[352,902],"source":"       If it is possible that the value returned from your <xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A> implementation contains characters that are not valid in an HTTP response or request, you should use the <xref:System.Web.HttpUtility.UrlEncode%2A> method to encode the session-identifier value in your SaveSessionID method implementation and the <xref:System.Web.HttpUtility.UrlDecode%2A> method to decode the session-identifier value in your <xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> method implementation."}]}]},{"pos":[16577,16814],"content":"The current <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that references server objects used to process HTTP requests (for example, the &lt;xref:System.Web.HttpContext.Request<bpt id=\"p2\">*</bpt>&gt; and &lt;xref:System.Web.HttpContext.Response<ept id=\"p2\">*</ept>&gt; properties).","needQuote":true,"needEscape":true,"source":"The current <xref href=\"System.Web.HttpContext\"></xref> object that references server objects used to process HTTP requests (for example, the <xref:System.Web.HttpContext.Request*> and <xref:System.Web.HttpContext.Response*> properties)."},{"pos":[16873,16896],"content":"The session identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The session identifier.","pos":[0,23]}]},{"pos":[16964,17253],"content":"When this method returns, contains a Boolean value that is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the response is redirected to the current URL with the session identifier added to the URL; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"When this method returns, contains a Boolean value that is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the response is redirected to the current URL with the session identifier added to the URL; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[17322,17565],"content":"When this method returns, contains a Boolean value that is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a cookie has been added to the HTTP response; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"When this method returns, contains a Boolean value that is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a cookie has been added to the HTTP response; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[18089,18144],"content":"Confirms that the supplied session identifier is valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"Confirms that the supplied session identifier is valid.","pos":[0,55]}]},{"pos":[18157,18557],"content":"The Validate method verifies that the supplied `id` is a valid session identifier.       Your <xref:System.Web.SessionState.ISessionIDManager> implementation should call the Validate method from the <xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> method when retrieving a session identifier from an HTTP request to ensure that the supplied session identifier is properly formatted.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Validate method verifies that the supplied <ph id=\"ph1\">`id`</ph> is a valid session identifier.","pos":[0,82],"source":"The Validate method verifies that the supplied `id` is a valid session identifier."},{"content":"Your &lt;xref:System.Web.SessionState.ISessionIDManager&gt; implementation should call the Validate method from the &lt;xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A&gt; method when retrieving a session identifier from an HTTP request to ensure that the supplied session identifier is properly formatted.","pos":[89,398],"source":"       Your <xref:System.Web.SessionState.ISessionIDManager> implementation should call the Validate method from the <xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> method when retrieving a session identifier from an HTTP request to ensure that the supplied session identifier is properly formatted."}]},{"pos":[19078,19113],"content":"The session identifier to validate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The session identifier to validate.","pos":[0,35]}]},{"pos":[19172,19343],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the session identifier is valid; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the session identifier is valid; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.SessionState.ISessionIDManager\n  id: ISessionIDManager\n  children:\n  - System.Web.SessionState.ISessionIDManager.CreateSessionID(System.Web.HttpContext)\n  - System.Web.SessionState.ISessionIDManager.GetSessionID(System.Web.HttpContext)\n  - System.Web.SessionState.ISessionIDManager.Initialize\n  - System.Web.SessionState.ISessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)\n  - System.Web.SessionState.ISessionIDManager.RemoveSessionID(System.Web.HttpContext)\n  - System.Web.SessionState.ISessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)\n  - System.Web.SessionState.ISessionIDManager.Validate(System.String)\n  langs:\n  - csharp\n  name: ISessionIDManager\n  nameWithType: ISessionIDManager\n  fullName: System.Web.SessionState.ISessionIDManager\n  type: Interface\n  summary: Defines the contract that a custom session-state identifier manager must implement.\n  remarks: \"The ISessionIDManager interface identifies the methods that you must implement to create a custom manager for session-identifier values. An ISessionIDManager interface implementation creates and validates session-identifier values, and manages the storage of a session identifier in the HTTP response as well as the retrieval of a session-identifier value from the HTTP request. You enable the custom session-ID manager using the `sessionIDManagerType` attribute of the [sessionState Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) configuration element.  \\n  \\n If your ISessionIDManager interface implementation will support cookieless session identifiers, you will need to implement a solution for sending and retrieving session identifiers in the URL, such as an ISAPI filter.  \\n  \\n If you only want to supply custom session-identifier values to be used by ASP.NET session state, you can create a class that inherits the <xref:System.Web.SessionState.SessionIDManager> class and override only the <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> and <xref:System.Web.SessionState.SessionIDManager.Validate%2A> methods with your own custom implementation. This enables you to supply your own session-identifier values, while relying on the base <xref:System.Web.SessionState.SessionIDManager> class to store values to the HTTP response and retrieve values from the HTTP request. For an example of overriding the <xref:System.Web.SessionState.SessionIDManager> class and implementing these methods, see the example provided for the <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> method of the <xref:System.Web.SessionState.SessionIDManager> class.\"\n  example:\n  - \"The following code example shows a class that implements a cookie-based session-ID manager.  \\n  \\n [!code-vb[System.Web.SessionState.ISessionIDModule#1](~/add/codesnippet/visualbasic/t-system.web.sessionstat_1_1.vb)]\\n [!code-cs[System.Web.SessionState.ISessionIDModule#1](~/add/codesnippet/csharp/t-system.web.sessionstat_1_1.cs)]\"\n  syntax:\n    content: public interface ISessionIDManager\n  implements: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.ISessionIDManager.CreateSessionID(System.Web.HttpContext)\n  id: CreateSessionID(System.Web.HttpContext)\n  parent: System.Web.SessionState.ISessionIDManager\n  langs:\n  - csharp\n  name: CreateSessionID(HttpContext)\n  nameWithType: ISessionIDManager.CreateSessionID(HttpContext)\n  fullName: System.Web.SessionState.ISessionIDManager.CreateSessionID(HttpContext)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Creates a unique session identifier.\n  remarks: The CreateSessionID method is used to generate a unique session identifier that the <xref:System.Web.SessionState.SessionStateModule> object will use to identify a new session. The value returned by CreateSessionID must be unique and must contain valid characters that can be stored in an HTTP response and request. If it is possible that the value returned by your CreateSessionID implementation contains characters that are not valid in an HTTP response or request, you should use the <xref:System.Web.HttpUtility.UrlEncode%2A> method to encode the session-identifier value in your <xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A> method implementation and the <xref:System.Web.HttpUtility.UrlDecode%2A> method to decode the session-identifier value in your <xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> method implementation.\n  example:\n  - \"The following code example implements the CreateSessionID method. The method creates a new <xref:System.Guid> to be used as a session identifier.  \\n  \\n [!code-vb[System.Web.SessionState.ISessionIDModule#3](~/add/codesnippet/visualbasic/873b6fcc-0b1f-453f-806c-_1.vb)]\\n [!code-cs[System.Web.SessionState.ISessionIDModule#3](~/add/codesnippet/csharp/873b6fcc-0b1f-453f-806c-_1.cs)]\"\n  syntax:\n    content: public string CreateSessionID (System.Web.HttpContext context);\n    parameters:\n    - id: context\n      type: System.Web.HttpContext\n      description: The current <xref href=\"System.Web.HttpContext\"></xref> object that references server objects used to process HTTP requests (for example, the <xref:System.Web.HttpContext.Request*> and <xref:System.Web.HttpContext.Response*> properties).\n    return:\n      type: System.String\n      description: A unique session identifier.\n  overload: System.Web.SessionState.ISessionIDManager.CreateSessionID*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.ISessionIDManager.GetSessionID(System.Web.HttpContext)\n  id: GetSessionID(System.Web.HttpContext)\n  parent: System.Web.SessionState.ISessionIDManager\n  langs:\n  - csharp\n  name: GetSessionID(HttpContext)\n  nameWithType: ISessionIDManager.GetSessionID(HttpContext)\n  fullName: System.Web.SessionState.ISessionIDManager.GetSessionID(HttpContext)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Gets the session identifier from the context of the current HTTP request.\n  remarks: \"The GetSessionID method is called by the <xref:System.Web.SessionState.SessionStateModule> during the <xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName> and <xref:System.Web.HttpApplication.EndRequest?displayProperty=fullName> events. If you cannot retrieve a valid session identifier from the HTTP request, return `null`. If the <xref:System.Web.SessionState.SessionStateModule> receives `null` from the GetSessionID method, it will call the <xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A> method to get a new session identifier for a new session.  \\n  \\n If it is possible that the value returned by your <xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A> implementation contains characters that are not valid in an HTTP response or request, you should use the <xref:System.Web.HttpUtility.UrlEncode%2A> method to encode the session-identifier value in your <xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A> method implementation and the <xref:System.Web.HttpUtility.UrlDecode%2A> method to decode the session-identifier value in your GetSessionID method implementation.\"\n  example:\n  - \"The following code example shows a partially implemented GetSessionID method. If your custom session-ID manager supports cookieless session identifiers, you will need to implement a solution for sending and retrieving session identifiers in the URL, such as an ISAPI filter.  \\n  \\n [!code-vb[System.Web.SessionState.ISessionIDModule#2](~/add/codesnippet/visualbasic/m-system.web.sessionstat_10_1.vb)]\\n [!code-cs[System.Web.SessionState.ISessionIDModule#2](~/add/codesnippet/csharp/m-system.web.sessionstat_10_1.cs)]\"\n  syntax:\n    content: public string GetSessionID (System.Web.HttpContext context);\n    parameters:\n    - id: context\n      type: System.Web.HttpContext\n      description: The current <xref href=\"System.Web.HttpContext\"></xref> object that references server objects used to process HTTP requests (for example, the <xref:System.Web.HttpContext.Request*> and <xref:System.Web.HttpContext.Response*> properties).\n    return:\n      type: System.String\n      description: The current session identifier sent with the HTTP request.\n  overload: System.Web.SessionState.ISessionIDManager.GetSessionID*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.ISessionIDManager.Initialize\n  id: Initialize\n  parent: System.Web.SessionState.ISessionIDManager\n  langs:\n  - csharp\n  name: Initialize()\n  nameWithType: ISessionIDManager.Initialize()\n  fullName: System.Web.SessionState.ISessionIDManager.Initialize()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Initializes the <xref href=\"System.Web.SessionState.SessionIDManager\"></xref> object.\n  remarks: Use the Initialize method to initialize the <xref:System.Web.SessionState.ISessionIDManager> object.\n  syntax:\n    content: public void Initialize ();\n    parameters: []\n  overload: System.Web.SessionState.ISessionIDManager.Initialize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.ISessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)\n  id: InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)\n  parent: System.Web.SessionState.ISessionIDManager\n  langs:\n  - csharp\n  name: InitializeRequest(HttpContext,Boolean,Boolean)\n  nameWithType: ISessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)\n  fullName: System.Web.SessionState.ISessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Performs per-request initialization of the <xref href=\"System.Web.SessionState.SessionIDManager\"></xref> object.\n  remarks: \"The InitializeRequest method is called for each request handled by the <xref:System.Web.SessionState.ISessionIDManager> object. Use the InitializeRequest method to initialize per-request data for the <xref:System.Web.SessionState.SessionIDManager> object.  \\n  \\n When the `suppressAutoDetectRedirect` parameter is `true`, the <xref:System.Web.SessionState.ISessionIDManager> object should not use redirection to determine whether the browser supports cookies.  \\n  \\n The `supportSessionIDReissue` parameter should be returned `false` if cookies are used for session identification; otherwise, return `true` if your <xref:System.Web.SessionState.ISessionIDManager> implementation supports re-issuing session IDs.\"\n  syntax:\n    content: public bool InitializeRequest (System.Web.HttpContext context, bool suppressAutoDetectRedirect, out bool supportSessionIDReissue);\n    parameters:\n    - id: context\n      type: System.Web.HttpContext\n      description: The <xref href=\"System.Web.HttpContext\"></xref> object that contains information about the current request.\n    - id: suppressAutoDetectRedirect\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the session-ID manager should redirect to determine cookie support; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to suppress automatic redirection to determine cookie support.\n    - id: supportSessionIDReissue\n      type: System.Boolean\n      description: \"When this method returns, contains a Boolean that indicates whether the <xref href=\\\"System.Web.SessionState.ISessionIDManager\\\"></xref> object supports issuing new session IDs when the original ID is out of date. This parameter is passed uninitialized.  \\n  \\n Session ID reuse is appropriate when the session-state ID is encoded on a URL and the potential exists for the URL to be shared or emailed.  \\n  \\n If a custom session-state implementation partitions cookies by virtual path, session state should also be supported.\"\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate that the initialization performed a redirect; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.SessionState.ISessionIDManager.InitializeRequest*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.ISessionIDManager.RemoveSessionID(System.Web.HttpContext)\n  id: RemoveSessionID(System.Web.HttpContext)\n  parent: System.Web.SessionState.ISessionIDManager\n  langs:\n  - csharp\n  name: RemoveSessionID(HttpContext)\n  nameWithType: ISessionIDManager.RemoveSessionID(HttpContext)\n  fullName: System.Web.SessionState.ISessionIDManager.RemoveSessionID(HttpContext)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Deletes the session identifier from the cookie or from the URL.\n  remarks: The <xref:System.Web.SessionState.SessionStateModule> calls the <xref:System.Web.SessionState.SessionIDManager.RemoveSessionID%2A> method during the <xref:System.Web.HttpApplication.ReleaseRequestState?displayProperty=fullName> event to remove the session identifier from the <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=fullName> collection if a new session was created but was not used.\n  example:\n  - \"The following code example implements the RemoveSessionID method.  \\n  \\n [!code-vb[System.Web.SessionState.ISessionIDModule#4](~/add/codesnippet/visualbasic/ee24c797-ce26-45a5-8119-_1.vb)]\\n [!code-cs[System.Web.SessionState.ISessionIDModule#4](~/add/codesnippet/csharp/ee24c797-ce26-45a5-8119-_1.cs)]\"\n  syntax:\n    content: public void RemoveSessionID (System.Web.HttpContext context);\n    parameters:\n    - id: context\n      type: System.Web.HttpContext\n      description: The current <xref href=\"System.Web.HttpContext\"></xref> object that references server objects used to process HTTP requests (for example, the <xref:System.Web.HttpContext.Request*> and <xref:System.Web.HttpContext.Response*> properties).\n  overload: System.Web.SessionState.ISessionIDManager.RemoveSessionID*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.ISessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)\n  id: SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)\n  parent: System.Web.SessionState.ISessionIDManager\n  langs:\n  - csharp\n  name: SaveSessionID(HttpContext,String,Boolean,Boolean)\n  nameWithType: ISessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)\n  fullName: System.Web.SessionState.ISessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Saves a newly created session identifier to the HTTP response.\n  remarks: \"The SaveSessionID method is called by the <xref:System.Web.SessionState.SessionStateModule> object during the <xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName> event. The SaveSessionID method stores the session identifier either in the URL (when cookieless session state is used) or in a non-expiring session cookie.  \\n  \\n If it is possible that the value returned from your <xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A> implementation contains characters that are not valid in an HTTP response or request, you should use the <xref:System.Web.HttpUtility.UrlEncode%2A> method to encode the session-identifier value in your SaveSessionID method implementation and the <xref:System.Web.HttpUtility.UrlDecode%2A> method to decode the session-identifier value in your <xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> method implementation.\"\n  example:\n  - \"The following code example shows a partially implemented <xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> method. If your custom session-ID manager supports cookieless session identifiers, you will need to implement a solution for sending and retrieving session identifiers in the URL, such as an ISAPI filter.  \\n  \\n [!code-vb[System.Web.SessionState.ISessionIDModule#5](~/add/codesnippet/visualbasic/c9e7b38d-d963-4c81-9ebb-_1.vb)]\\n [!code-cs[System.Web.SessionState.ISessionIDModule#5](~/add/codesnippet/csharp/c9e7b38d-d963-4c81-9ebb-_1.cs)]\"\n  syntax:\n    content: public void SaveSessionID (System.Web.HttpContext context, string id, out bool redirected, out bool cookieAdded);\n    parameters:\n    - id: context\n      type: System.Web.HttpContext\n      description: The current <xref href=\"System.Web.HttpContext\"></xref> object that references server objects used to process HTTP requests (for example, the <xref:System.Web.HttpContext.Request*> and <xref:System.Web.HttpContext.Response*> properties).\n    - id: id\n      type: System.String\n      description: The session identifier.\n    - id: redirected\n      type: System.Boolean\n      description: When this method returns, contains a Boolean value that is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the response is redirected to the current URL with the session identifier added to the URL; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: cookieAdded\n      type: System.Boolean\n      description: When this method returns, contains a Boolean value that is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a cookie has been added to the HTTP response; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.SessionState.ISessionIDManager.SaveSessionID*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.ISessionIDManager.Validate(System.String)\n  id: Validate(System.String)\n  parent: System.Web.SessionState.ISessionIDManager\n  langs:\n  - csharp\n  name: Validate(String)\n  nameWithType: ISessionIDManager.Validate(String)\n  fullName: System.Web.SessionState.ISessionIDManager.Validate(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Confirms that the supplied session identifier is valid.\n  remarks: \"The Validate method verifies that the supplied `id` is a valid session identifier.  \\n  \\n Your <xref:System.Web.SessionState.ISessionIDManager> implementation should call the Validate method from the <xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> method when retrieving a session identifier from an HTTP request to ensure that the supplied session identifier is properly formatted.\"\n  example:\n  - \"The following code example implements the Validate method and ensures the session-identifier value is a valid <xref:System.Guid>.  \\n  \\n [!code-vb[System.Web.SessionState.ISessionIDModule#6](~/add/codesnippet/visualbasic/m-system.web.sessionstat_0_1.vb)]\\n [!code-cs[System.Web.SessionState.ISessionIDModule#6](~/add/codesnippet/csharp/m-system.web.sessionstat_0_1.cs)]\"\n  syntax:\n    content: public bool Validate (string id);\n    parameters:\n    - id: id\n      type: System.String\n      description: The session identifier to validate.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the session identifier is valid; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.SessionState.ISessionIDManager.Validate*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.SessionState.ISessionIDManager.CreateSessionID(System.Web.HttpContext)\n  parent: System.Web.SessionState.ISessionIDManager\n  isExternal: false\n  name: CreateSessionID(HttpContext)\n  nameWithType: ISessionIDManager.CreateSessionID(HttpContext)\n  fullName: System.Web.SessionState.ISessionIDManager.CreateSessionID(HttpContext)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.HttpContext\n  parent: System.Web\n  isExternal: false\n  name: HttpContext\n  nameWithType: HttpContext\n  fullName: System.Web.HttpContext\n- uid: System.Web.SessionState.ISessionIDManager.GetSessionID(System.Web.HttpContext)\n  parent: System.Web.SessionState.ISessionIDManager\n  isExternal: false\n  name: GetSessionID(HttpContext)\n  nameWithType: ISessionIDManager.GetSessionID(HttpContext)\n  fullName: System.Web.SessionState.ISessionIDManager.GetSessionID(HttpContext)\n- uid: System.Web.SessionState.ISessionIDManager.Initialize\n  parent: System.Web.SessionState.ISessionIDManager\n  isExternal: false\n  name: Initialize()\n  nameWithType: ISessionIDManager.Initialize()\n  fullName: System.Web.SessionState.ISessionIDManager.Initialize()\n- uid: System.Web.SessionState.ISessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)\n  parent: System.Web.SessionState.ISessionIDManager\n  isExternal: false\n  name: InitializeRequest(HttpContext,Boolean,Boolean)\n  nameWithType: ISessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)\n  fullName: System.Web.SessionState.ISessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.SessionState.ISessionIDManager.RemoveSessionID(System.Web.HttpContext)\n  parent: System.Web.SessionState.ISessionIDManager\n  isExternal: false\n  name: RemoveSessionID(HttpContext)\n  nameWithType: ISessionIDManager.RemoveSessionID(HttpContext)\n  fullName: System.Web.SessionState.ISessionIDManager.RemoveSessionID(HttpContext)\n- uid: System.Web.SessionState.ISessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)\n  parent: System.Web.SessionState.ISessionIDManager\n  isExternal: false\n  name: SaveSessionID(HttpContext,String,Boolean,Boolean)\n  nameWithType: ISessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)\n  fullName: System.Web.SessionState.ISessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)\n- uid: System.Web.SessionState.ISessionIDManager.Validate(System.String)\n  parent: System.Web.SessionState.ISessionIDManager\n  isExternal: false\n  name: Validate(String)\n  nameWithType: ISessionIDManager.Validate(String)\n  fullName: System.Web.SessionState.ISessionIDManager.Validate(String)\n- uid: System.Web.SessionState.ISessionIDManager.CreateSessionID*\n  parent: System.Web.SessionState.ISessionIDManager\n  isExternal: false\n  name: CreateSessionID\n  nameWithType: ISessionIDManager.CreateSessionID\n- uid: System.Web.SessionState.ISessionIDManager.GetSessionID*\n  parent: System.Web.SessionState.ISessionIDManager\n  isExternal: false\n  name: GetSessionID\n  nameWithType: ISessionIDManager.GetSessionID\n- uid: System.Web.SessionState.ISessionIDManager.Initialize*\n  parent: System.Web.SessionState.ISessionIDManager\n  isExternal: false\n  name: Initialize\n  nameWithType: ISessionIDManager.Initialize\n- uid: System.Web.SessionState.ISessionIDManager.InitializeRequest*\n  parent: System.Web.SessionState.ISessionIDManager\n  isExternal: false\n  name: InitializeRequest\n  nameWithType: ISessionIDManager.InitializeRequest\n- uid: System.Web.SessionState.ISessionIDManager.RemoveSessionID*\n  parent: System.Web.SessionState.ISessionIDManager\n  isExternal: false\n  name: RemoveSessionID\n  nameWithType: ISessionIDManager.RemoveSessionID\n- uid: System.Web.SessionState.ISessionIDManager.SaveSessionID*\n  parent: System.Web.SessionState.ISessionIDManager\n  isExternal: false\n  name: SaveSessionID\n  nameWithType: ISessionIDManager.SaveSessionID\n- uid: System.Web.SessionState.ISessionIDManager.Validate*\n  parent: System.Web.SessionState.ISessionIDManager\n  isExternal: false\n  name: Validate\n  nameWithType: ISessionIDManager.Validate\n"}