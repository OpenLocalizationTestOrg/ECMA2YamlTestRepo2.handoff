{"nodes":[{"pos":[3729,3741],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4598,4610],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6049,6061],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6120,6132],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6954,6966],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7027,7039],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7757,7769],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8619,8631],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9394,9406],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9463,9475],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10293,10305],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10355,10367],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11124,11136],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11892,11904],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12683,12695],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13498,13510],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13556,13568],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14317,14329],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14388,14400],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15208,15220],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15962,15974],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17003,17015],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17076,17088],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18030,18042],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19040,19052],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20024,20036],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21072,21084],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22046,22058],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22115,22127],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23946,23958],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24017,24029],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25004,25016],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25073,25085],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26108,26120],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26182,26194],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27133,27145],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28083,28095],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29081,29093],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29151,29163],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30129,30141],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[31112,31124],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  id: PrincipalValueCollection`1\n  children:\n  - System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Add(`0)\n  - System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Clear\n  - System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Contains(`0)\n  - System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.CopyTo(`0[],System.Int32)\n  - System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Count\n  - System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.GetEnumerator\n  - System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.IndexOf(`0)\n  - System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Insert(System.Int32,`0)\n  - System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.IsFixedSize\n  - System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.IsReadOnly\n  - System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.IsSynchronized\n  - System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Item(System.Int32)\n  - System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Remove(`0)\n  - System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.RemoveAt(System.Int32)\n  - System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.SyncRoot\n  - System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#ICollection#Count\n  - System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#ICollection#IsSynchronized\n  - System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#ICollection#SyncRoot\n  - System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IEnumerable#GetEnumerator\n  - System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#Add(System.Object)\n  - System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#Clear\n  - System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#Contains(System.Object)\n  - System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#IndexOf(System.Object)\n  - System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#IsFixedSize\n  - System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#IsReadOnly\n  - System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#Item(System.Int32)\n  - System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#Remove(System.Object)\n  - System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#RemoveAt(System.Int32)\n  langs:\n  - csharp\n  name: PrincipalValueCollection<T>\n  nameWithType: PrincipalValueCollection<T>\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>\n  type: Class\n  syntax:\n    content: 'public class PrincipalValueCollection<T> : System.Collections.Generic.ICollection<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IList<T>, System.Collections.IList'\n    typeParameters:\n    - id: T\n      description: To be added.\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.ICollection<T>\n  - System.Collections.Generic.IEnumerable<T>\n  - System.Collections.Generic.IList<T>\n  - System.Collections.IList\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Add(`0)\n  id: Add(`0)\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  langs:\n  - csharp\n  name: Add(T)\n  nameWithType: PrincipalValueCollection<T>.Add(T)\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.Add(T)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public void Add (T value);\n    parameters:\n    - id: value\n      type: T\n      description: To be added.\n  overload: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Clear\n  id: Clear\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: PrincipalValueCollection<T>.Clear()\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.Clear()\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Contains(`0)\n  id: Contains(`0)\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  langs:\n  - csharp\n  name: Contains(T)\n  nameWithType: PrincipalValueCollection<T>.Contains(T)\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.Contains(T)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public bool Contains (T value);\n    parameters:\n    - id: value\n      type: T\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.CopyTo(`0[],System.Int32)\n  id: CopyTo(`0[],System.Int32)\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  langs:\n  - csharp\n  name: CopyTo(T[],Int32)\n  nameWithType: PrincipalValueCollection<T>.CopyTo(T[],Int32)\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.CopyTo(T[],Int32)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public void CopyTo (T[] array, int index);\n    parameters:\n    - id: array\n      type: T[]\n      description: To be added.\n    - id: index\n      type: System.Int32\n      description: To be added.\n  overload: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Count\n  id: Count\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  langs:\n  - csharp\n  name: Count\n  nameWithType: PrincipalValueCollection<T>.Count\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.Count\n  type: Property\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.GetEnumerator\n  id: GetEnumerator\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: PrincipalValueCollection<T>.GetEnumerator()\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public System.Collections.Generic.IEnumerator<T> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{T}\n      description: To be added.\n  overload: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.IndexOf(`0)\n  id: IndexOf(`0)\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  langs:\n  - csharp\n  name: IndexOf(T)\n  nameWithType: PrincipalValueCollection<T>.IndexOf(T)\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.IndexOf(T)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public int IndexOf (T value);\n    parameters:\n    - id: value\n      type: T\n      description: To be added.\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.IndexOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Insert(System.Int32,`0)\n  id: Insert(System.Int32,`0)\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  langs:\n  - csharp\n  name: Insert(Int32,T)\n  nameWithType: PrincipalValueCollection<T>.Insert(Int32,T)\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.Insert(Int32,T)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public void Insert (int index, T value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: To be added.\n    - id: value\n      type: T\n      description: To be added.\n  overload: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Insert*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.IsFixedSize\n  id: IsFixedSize\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  langs:\n  - csharp\n  name: IsFixedSize\n  nameWithType: PrincipalValueCollection<T>.IsFixedSize\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.IsFixedSize\n  type: Property\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public bool IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.IsFixedSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.IsReadOnly\n  id: IsReadOnly\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: PrincipalValueCollection<T>.IsReadOnly\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.IsReadOnly\n  type: Property\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.IsSynchronized\n  id: IsSynchronized\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  langs:\n  - csharp\n  name: IsSynchronized\n  nameWithType: PrincipalValueCollection<T>.IsSynchronized\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.IsSynchronized\n  type: Property\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public bool IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.IsSynchronized*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: PrincipalValueCollection<T>.Item(Int32)\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.Item(Int32)\n  type: Property\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public T this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: To be added.\n    return:\n      type: T\n      description: To be added.\n  overload: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Remove(`0)\n  id: Remove(`0)\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  langs:\n  - csharp\n  name: Remove(T)\n  nameWithType: PrincipalValueCollection<T>.Remove(T)\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.Remove(T)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public bool Remove (T value);\n    parameters:\n    - id: value\n      type: T\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Remove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: PrincipalValueCollection<T>.RemoveAt(Int32)\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: To be added.\n  overload: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.RemoveAt*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.SyncRoot\n  id: SyncRoot\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  langs:\n  - csharp\n  name: SyncRoot\n  nameWithType: PrincipalValueCollection<T>.SyncRoot\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.SyncRoot\n  type: Property\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public object SyncRoot { get; }\n    return:\n      type: System.Object\n      description: To be added.\n  overload: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.SyncRoot*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: PrincipalValueCollection<T>.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: To be added.\n    - id: index\n      type: System.Int32\n      description: To be added.\n  overload: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#ICollection#CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#ICollection#Count\n  id: System#Collections#ICollection#Count\n  isEii: true\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  langs:\n  - csharp\n  name: System.Collections.ICollection.Count\n  nameWithType: PrincipalValueCollection<T>.System.Collections.ICollection.Count\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.System.Collections.ICollection.Count\n  type: Property\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: int System.Collections.ICollection.Count { get; }\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#ICollection#Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: PrincipalValueCollection<T>.System.Collections.ICollection.IsSynchronized\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#ICollection#IsSynchronized*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: PrincipalValueCollection<T>.System.Collections.ICollection.SyncRoot\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: To be added.\n  overload: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#ICollection#SyncRoot*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: PrincipalValueCollection<T>.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: To be added.\n  overload: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#Add(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Add(Object)\n  nameWithType: PrincipalValueCollection<T>.System.Collections.IList.Add(Object)\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.System.Collections.IList.Add(Object)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: int IList.Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#Clear\n  id: System#Collections#IList#Clear\n  isEii: true\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Clear()\n  nameWithType: PrincipalValueCollection<T>.System.Collections.IList.Clear()\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.System.Collections.IList.Clear()\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: void IList.Clear ();\n    parameters: []\n  overload: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#Contains(System.Object)\n  id: System#Collections#IList#Contains(System.Object)\n  isEii: true\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: PrincipalValueCollection<T>.System.Collections.IList.Contains(Object)\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.System.Collections.IList.Contains(Object)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: bool IList.Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#IndexOf(System.Object)\n  id: System#Collections#IList#IndexOf(System.Object)\n  isEii: true\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: PrincipalValueCollection<T>.System.Collections.IList.IndexOf(Object)\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.System.Collections.IList.IndexOf(Object)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: int IList.IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#IndexOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: PrincipalValueCollection<T>.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.System.Collections.IList.Insert(Int32,Object)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: void IList.Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: To be added.\n    - id: value\n      type: System.Object\n      description: To be added.\n  overload: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#Insert*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#IsFixedSize\n  id: System#Collections#IList#IsFixedSize\n  isEii: true\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: PrincipalValueCollection<T>.System.Collections.IList.IsFixedSize\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.System.Collections.IList.IsFixedSize\n  type: Property\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: bool System.Collections.IList.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#IsFixedSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#IsReadOnly\n  id: System#Collections#IList#IsReadOnly\n  isEii: true\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: PrincipalValueCollection<T>.System.Collections.IList.IsReadOnly\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.System.Collections.IList.IsReadOnly\n  type: Property\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: bool System.Collections.IList.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#Item(System.Int32)\n  id: System#Collections#IList#Item(System.Int32)\n  isEii: true\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: PrincipalValueCollection<T>.System.Collections.IList.Item(Int32)\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.System.Collections.IList.Item(Int32)\n  type: Property\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: object System.Collections.IList.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: To be added.\n    return:\n      type: System.Object\n      description: To be added.\n  overload: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#Remove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: PrincipalValueCollection<T>.System.Collections.IList.Remove(Object)\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.System.Collections.IList.Remove(Object)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: void IList.Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: To be added.\n  overload: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#Remove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#RemoveAt(System.Int32)\n  id: System#Collections#IList#RemoveAt(System.Int32)\n  isEii: true\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.RemoveAt(Int32)\n  nameWithType: PrincipalValueCollection<T>.System.Collections.IList.RemoveAt(Int32)\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.System.Collections.IList.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: void IList.RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: To be added.\n  overload: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#RemoveAt*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Add(`0)\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: Add(T)\n  nameWithType: PrincipalValueCollection<T>.Add(T)\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.Add(T)\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Clear\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: Clear()\n  nameWithType: PrincipalValueCollection<T>.Clear()\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.Clear()\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Contains(`0)\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: Contains(T)\n  nameWithType: PrincipalValueCollection<T>.Contains(T)\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.Contains(T)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.CopyTo(`0[],System.Int32)\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: CopyTo(T[],Int32)\n  nameWithType: PrincipalValueCollection<T>.CopyTo(T[],Int32)\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.CopyTo(T[],Int32)\n- uid: T[]\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n  spec.csharp:\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Count\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: Count\n  nameWithType: PrincipalValueCollection<T>.Count\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.Count\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.GetEnumerator\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: PrincipalValueCollection<T>.GetEnumerator()\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator{T}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerator<T>\n  nameWithType: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    nameWithType: IEnumerator\n    fullName: IEnumerator<T>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.IndexOf(`0)\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: IndexOf(T)\n  nameWithType: PrincipalValueCollection<T>.IndexOf(T)\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.IndexOf(T)\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Insert(System.Int32,`0)\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: Insert(Int32,T)\n  nameWithType: PrincipalValueCollection<T>.Insert(Int32,T)\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.Insert(Int32,T)\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.IsFixedSize\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: IsFixedSize\n  nameWithType: PrincipalValueCollection<T>.IsFixedSize\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.IsFixedSize\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.IsReadOnly\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: PrincipalValueCollection<T>.IsReadOnly\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.IsReadOnly\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.IsSynchronized\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: PrincipalValueCollection<T>.IsSynchronized\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.IsSynchronized\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Item(System.Int32)\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: PrincipalValueCollection<T>.Item(Int32)\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.Item(Int32)\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Remove(`0)\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: Remove(T)\n  nameWithType: PrincipalValueCollection<T>.Remove(T)\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.Remove(T)\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.RemoveAt(System.Int32)\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: PrincipalValueCollection<T>.RemoveAt(Int32)\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.RemoveAt(Int32)\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.SyncRoot\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: SyncRoot\n  nameWithType: PrincipalValueCollection<T>.SyncRoot\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.SyncRoot\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: PrincipalValueCollection<T>.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: true\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#ICollection#Count\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: System.Collections.ICollection.Count\n  nameWithType: PrincipalValueCollection<T>.System.Collections.ICollection.Count\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.System.Collections.ICollection.Count\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#ICollection#IsSynchronized\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: PrincipalValueCollection<T>.System.Collections.ICollection.IsSynchronized\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.System.Collections.ICollection.IsSynchronized\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#ICollection#SyncRoot\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: PrincipalValueCollection<T>.System.Collections.ICollection.SyncRoot\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.System.Collections.ICollection.SyncRoot\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IEnumerable#GetEnumerator\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: PrincipalValueCollection<T>.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#Add(System.Object)\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: System.Collections.IList.Add(Object)\n  nameWithType: PrincipalValueCollection<T>.System.Collections.IList.Add(Object)\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.System.Collections.IList.Add(Object)\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#Clear\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: System.Collections.IList.Clear()\n  nameWithType: PrincipalValueCollection<T>.System.Collections.IList.Clear()\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.System.Collections.IList.Clear()\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#Contains(System.Object)\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: PrincipalValueCollection<T>.System.Collections.IList.Contains(Object)\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.System.Collections.IList.Contains(Object)\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#IndexOf(System.Object)\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: PrincipalValueCollection<T>.System.Collections.IList.IndexOf(Object)\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.System.Collections.IList.IndexOf(Object)\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: PrincipalValueCollection<T>.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.System.Collections.IList.Insert(Int32,Object)\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#IsFixedSize\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: PrincipalValueCollection<T>.System.Collections.IList.IsFixedSize\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.System.Collections.IList.IsFixedSize\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#IsReadOnly\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: PrincipalValueCollection<T>.System.Collections.IList.IsReadOnly\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.System.Collections.IList.IsReadOnly\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#Item(System.Int32)\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: PrincipalValueCollection<T>.System.Collections.IList.Item(Int32)\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.System.Collections.IList.Item(Int32)\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#Remove(System.Object)\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: PrincipalValueCollection<T>.System.Collections.IList.Remove(Object)\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.System.Collections.IList.Remove(Object)\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#RemoveAt(System.Int32)\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: System.Collections.IList.RemoveAt(Int32)\n  nameWithType: PrincipalValueCollection<T>.System.Collections.IList.RemoveAt(Int32)\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<T>.System.Collections.IList.RemoveAt(Int32)\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Add*\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: Add\n  nameWithType: PrincipalValueCollection<T>.Add\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Clear*\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: Clear\n  nameWithType: PrincipalValueCollection<T>.Clear\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Contains*\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: Contains\n  nameWithType: PrincipalValueCollection<T>.Contains\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.CopyTo*\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: CopyTo\n  nameWithType: PrincipalValueCollection<T>.CopyTo\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Count*\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: Count\n  nameWithType: PrincipalValueCollection<T>.Count\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.GetEnumerator*\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: PrincipalValueCollection<T>.GetEnumerator\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.IndexOf*\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: IndexOf\n  nameWithType: PrincipalValueCollection<T>.IndexOf\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Insert*\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: Insert\n  nameWithType: PrincipalValueCollection<T>.Insert\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.IsFixedSize*\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: IsFixedSize\n  nameWithType: PrincipalValueCollection<T>.IsFixedSize\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.IsReadOnly*\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: PrincipalValueCollection<T>.IsReadOnly\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.IsSynchronized*\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: PrincipalValueCollection<T>.IsSynchronized\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Item*\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: Item\n  nameWithType: PrincipalValueCollection<T>.Item\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Remove*\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: Remove\n  nameWithType: PrincipalValueCollection<T>.Remove\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.RemoveAt*\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: RemoveAt\n  nameWithType: PrincipalValueCollection<T>.RemoveAt\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.SyncRoot*\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: SyncRoot\n  nameWithType: PrincipalValueCollection<T>.SyncRoot\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#ICollection#CopyTo*\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo\n  nameWithType: PrincipalValueCollection<T>.System.Collections.ICollection.CopyTo\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#ICollection#Count*\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: System.Collections.ICollection.Count\n  nameWithType: PrincipalValueCollection<T>.System.Collections.ICollection.Count\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#ICollection#IsSynchronized*\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: PrincipalValueCollection<T>.System.Collections.ICollection.IsSynchronized\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#ICollection#SyncRoot*\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: PrincipalValueCollection<T>.System.Collections.ICollection.SyncRoot\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: PrincipalValueCollection<T>.System.Collections.IEnumerable.GetEnumerator\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#Add*\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: System.Collections.IList.Add\n  nameWithType: PrincipalValueCollection<T>.System.Collections.IList.Add\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#Clear*\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: System.Collections.IList.Clear\n  nameWithType: PrincipalValueCollection<T>.System.Collections.IList.Clear\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#Contains*\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: System.Collections.IList.Contains\n  nameWithType: PrincipalValueCollection<T>.System.Collections.IList.Contains\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#IndexOf*\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: System.Collections.IList.IndexOf\n  nameWithType: PrincipalValueCollection<T>.System.Collections.IList.IndexOf\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#Insert*\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: System.Collections.IList.Insert\n  nameWithType: PrincipalValueCollection<T>.System.Collections.IList.Insert\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#IsFixedSize*\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: PrincipalValueCollection<T>.System.Collections.IList.IsFixedSize\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#IsReadOnly*\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: PrincipalValueCollection<T>.System.Collections.IList.IsReadOnly\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#Item*\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: System.Collections.IList.Item\n  nameWithType: PrincipalValueCollection<T>.System.Collections.IList.Item\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#Remove*\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: System.Collections.IList.Remove\n  nameWithType: PrincipalValueCollection<T>.System.Collections.IList.Remove\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#RemoveAt*\n  parent: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1\n  isExternal: false\n  name: System.Collections.IList.RemoveAt\n  nameWithType: PrincipalValueCollection<T>.System.Collections.IList.RemoveAt\n"}