{"nodes":[{"pos":[979,1084],"content":"Represents an interoperable binding that supports distributed transactions and secure, reliable sessions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents an interoperable binding that supports distributed transactions and secure, reliable sessions.","pos":[0,105]}]},{"pos":[1097,1414],"content":"The wsHttpBinding is a secure, reliable, interoperable binding suitable for non-duplex service contracts. The binding implements the following specifications: WS-ReliableMessaging for reliability and WS-Security for message security and authentication. The transport is HTTP and message encoding is Text/XML encoding.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The wsHttpBinding is a secure, reliable, interoperable binding suitable for non-duplex service contracts. The binding implements the following specifications: WS-ReliableMessaging for reliability and WS-Security for message security and authentication. The transport is HTTP and message encoding is Text/XML encoding.","pos":[0,317],"nodes":[{"content":"The wsHttpBinding is a secure, reliable, interoperable binding suitable for non-duplex service contracts.","pos":[0,105]},{"content":"The binding implements the following specifications: WS-ReliableMessaging for reliability and WS-Security for message security and authentication.","pos":[106,252]},{"content":"The transport is HTTP and message encoding is Text/XML encoding.","pos":[253,317]}]}]},{"pos":[6534,6650],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Configuration.WSHttpBindingElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.WSHttpBindingElement\"></xref> class."},{"pos":[7351,7467],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Configuration.WSHttpBindingElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.WSHttpBindingElement\"></xref> class."},{"pos":[7610,7730],"content":"The configuration name of the binding. This value should be unique because it is used as identification for the binding.","needQuote":true,"needEscape":true,"nodes":[{"content":"The configuration name of the binding. This value should be unique because it is used as identification for the binding.","pos":[0,120],"nodes":[{"content":"The configuration name of the binding.","pos":[0,38]},{"content":"This value should be unique because it is used as identification for the binding.","pos":[39,120]}]}]},{"pos":[8288,8424],"content":"Gets or sets a value that indicates whether the WCF client will automatically store and resend any cookies sent by a single web service.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the WCF client will automatically store and resend any cookies sent by a single web service.","pos":[0,136]}]},{"pos":[8437,10093],"content":"Setting AllowCookies to `true` is useful when a client is interacting with one web service that uses cookies.  If you are accessing multiple services with the same cookie, set AllowCookies to `false` and you will have to manually add the cookie header to each outgoing message. The following code shows how to do this:      ```c#   MyWebServiceClient client = new MyWebServiceClient();              using (new OperationContextScope(client.InnerChannel))           {               client.DoSomething();                  // Extract the cookie embedded in the received web service response               // and stores it locally               HttpResponseMessageProperty response = (HttpResponseMessageProperty)               OperationContext.Current.IncomingMessageProperties[                   HttpResponseMessageProperty.Name];               sharedCookie = response.Headers[\"Set-Cookie\"];           }              MyOtherWebServiceClient otherClient = new MyOtherWebServiceClient();              using (new OperationContextScope(otherClient.InnerChannel))           {               // Embeds the extracted cookie in the next web service request               // Note that we manually have to create the request object since               // since it doesn't exist yet at this stage                HttpRequestMessageProperty request = new HttpRequestMessageProperty();               request.Headers[\"Cookie\"] = sharedCookie;               OperationContext.Current.OutgoingMessageProperties[                   HttpRequestMessageProperty.Name] = request;                  otherClient.DoSomethingElse();           }      ```","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Setting AllowCookies to <ph id=\"ph1\">`true`</ph> is useful when a client is interacting with one web service that uses cookies.","pos":[0,109],"source":"Setting AllowCookies to `true` is useful when a client is interacting with one web service that uses cookies."},{"content":"If you are accessing multiple services with the same cookie, set AllowCookies to <ph id=\"ph1\">`false`</ph> and you will have to manually add the cookie header to each outgoing message.","pos":[111,277],"source":"  If you are accessing multiple services with the same cookie, set AllowCookies to `false` and you will have to manually add the cookie header to each outgoing message."},{"content":"The following code shows how to do this:      <ph id=\"ph1\">```c#   MyWebServiceClient client = new MyWebServiceClient();              using (new OperationContextScope(client.InnerChannel))           {               client.DoSomething();                  // Extract the cookie embedded in the received web service response               // and stores it locally               HttpResponseMessageProperty response = (HttpResponseMessageProperty)               OperationContext.Current.IncomingMessageProperties[                   HttpResponseMessageProperty.Name];               sharedCookie = response.Headers[\"Set-Cookie\"];           }              MyOtherWebServiceClient otherClient = new MyOtherWebServiceClient();              using (new OperationContextScope(otherClient.InnerChannel))           {               // Embeds the extracted cookie in the next web service request               // Note that we manually have to create the request object since               // since it doesn't exist yet at this stage                HttpRequestMessageProperty request = new HttpRequestMessageProperty();               request.Headers[\"Cookie\"] = sharedCookie;               OperationContext.Current.OutgoingMessageProperties[                   HttpRequestMessageProperty.Name] = request;                  otherClient.DoSomethingElse();           }      ```</ph>","pos":[278,1620],"source":" The following code shows how to do this:      ```c#   MyWebServiceClient client = new MyWebServiceClient();              using (new OperationContextScope(client.InnerChannel))           {               client.DoSomething();                  // Extract the cookie embedded in the received web service response               // and stores it locally               HttpResponseMessageProperty response = (HttpResponseMessageProperty)               OperationContext.Current.IncomingMessageProperties[                   HttpResponseMessageProperty.Name];               sharedCookie = response.Headers[\"Set-Cookie\"];           }              MyOtherWebServiceClient otherClient = new MyOtherWebServiceClient();              using (new OperationContextScope(otherClient.InnerChannel))           {               // Embeds the extracted cookie in the next web service request               // Note that we manually have to create the request object since               // since it doesn't exist yet at this stage                HttpRequestMessageProperty request = new HttpRequestMessageProperty();               request.Headers[\"Cookie\"] = sharedCookie;               OperationContext.Current.OutgoingMessageProperties[                   HttpRequestMessageProperty.Name] = request;                  otherClient.DoSomethingElse();           }      ```"}]},{"pos":[10215,10395],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if automatic cookies processing is required; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if automatic cookies processing is required; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10990,11028],"content":"Gets the type of this binding element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the type of this binding element.","pos":[0,38]}]},{"pos":[11159,11206],"content":"The <xref:System.Type> of this binding element.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of this binding element.","pos":[0,47],"source":"The <xref:System.Type> of this binding element."}]},{"pos":[11888,11985],"content":"Initializes this binding configuration element with the content of the specified binding element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes this binding configuration element with the content of the specified binding element.","pos":[0,97]}]},{"pos":[12198,12216],"content":"A binding element.","needQuote":true,"needEscape":true,"nodes":[{"content":"A binding element.","pos":[0,18]}]},{"pos":[12924,13031],"content":"Called when the content of a specified binding collection is applied to this binding configuration element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Called when the content of a specified binding collection is applied to this binding configuration element.","pos":[0,107]}]},{"pos":[13250,13283],"content":"A collection of binding elements.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of binding elements.","pos":[0,33]}]},{"pos":[13846,14165],"content":"Gets a <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationPropertyCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance that contains a collection of <bpt id=\"p2\">&lt;xref href=\"System.Configuration.ConfigurationProperty\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects that can be attributes or <bpt id=\"p3\">&lt;xref href=\"System.Configuration.ConfigurationElement\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> objects of this configuration element.","needQuote":true,"needEscape":true,"source":"Gets a <xref href=\"System.Configuration.ConfigurationPropertyCollection\"></xref> instance that contains a collection of <xref href=\"System.Configuration.ConfigurationProperty\"></xref> objects that can be attributes or <xref href=\"System.Configuration.ConfigurationElement\"></xref> objects of this configuration element."},{"pos":[14377,14691],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationPropertyCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance that contains a collection of <bpt id=\"p2\">&lt;xref href=\"System.Configuration.ConfigurationProperty\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects that can be attributes or <bpt id=\"p3\">&lt;xref href=\"System.Configuration.ConfigurationElement\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> objects of this configuration element.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Configuration.ConfigurationPropertyCollection\"></xref> instance that contains a collection of <xref href=\"System.Configuration.ConfigurationProperty\"></xref> objects that can be attributes or <xref href=\"System.Configuration.ConfigurationElement\"></xref> objects of this configuration element."},{"pos":[15234,15289],"content":"Gets the type of security to be used with this binding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the type of security to be used with this binding.","pos":[0,55]}]},{"pos":[15493,15605],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Configuration.WSHttpSecurityElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is used with this binding.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ServiceModel.Configuration.WSHttpSecurityElement\"></xref> that is used with this binding."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Configuration.WSHttpBindingElement\n  id: WSHttpBindingElement\n  children:\n  - System.ServiceModel.Configuration.WSHttpBindingElement.#ctor\n  - System.ServiceModel.Configuration.WSHttpBindingElement.#ctor(System.String)\n  - System.ServiceModel.Configuration.WSHttpBindingElement.AllowCookies\n  - System.ServiceModel.Configuration.WSHttpBindingElement.BindingElementType\n  - System.ServiceModel.Configuration.WSHttpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)\n  - System.ServiceModel.Configuration.WSHttpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)\n  - System.ServiceModel.Configuration.WSHttpBindingElement.Properties\n  - System.ServiceModel.Configuration.WSHttpBindingElement.Security\n  langs:\n  - csharp\n  name: WSHttpBindingElement\n  nameWithType: WSHttpBindingElement\n  fullName: System.ServiceModel.Configuration.WSHttpBindingElement\n  type: Class\n  summary: Represents an interoperable binding that supports distributed transactions and secure, reliable sessions.\n  remarks: 'The wsHttpBinding is a secure, reliable, interoperable binding suitable for non-duplex service contracts. The binding implements the following specifications: WS-ReliableMessaging for reliability and WS-Security for message security and authentication. The transport is HTTP and message encoding is Text/XML encoding.'\n  syntax:\n    content: 'public class WSHttpBindingElement : System.ServiceModel.Configuration.WSHttpBindingBaseElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElement\n  - System.ServiceModel.Configuration.StandardBindingElement\n  - System.ServiceModel.Configuration.WSHttpBindingBaseElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)\n  - System.ServiceModel.Configuration.StandardBindingElement.ApplyConfiguration(System.ServiceModel.Channels.Binding)\n  - System.ServiceModel.Configuration.StandardBindingElement.CloseTimeout\n  - System.ServiceModel.Configuration.StandardBindingElement.Name\n  - System.ServiceModel.Configuration.StandardBindingElement.OpenTimeout\n  - System.ServiceModel.Configuration.StandardBindingElement.ReceiveTimeout\n  - System.ServiceModel.Configuration.StandardBindingElement.Reset(System.Configuration.ConfigurationElement)\n  - System.ServiceModel.Configuration.StandardBindingElement.SendTimeout\n  - System.ServiceModel.Configuration.WSHttpBindingBaseElement.BypassProxyOnLocal\n  - System.ServiceModel.Configuration.WSHttpBindingBaseElement.HostNameComparisonMode\n  - System.ServiceModel.Configuration.WSHttpBindingBaseElement.MaxBufferPoolSize\n  - System.ServiceModel.Configuration.WSHttpBindingBaseElement.MaxReceivedMessageSize\n  - System.ServiceModel.Configuration.WSHttpBindingBaseElement.MessageEncoding\n  - System.ServiceModel.Configuration.WSHttpBindingBaseElement.ProxyAddress\n  - System.ServiceModel.Configuration.WSHttpBindingBaseElement.ReaderQuotas\n  - System.ServiceModel.Configuration.WSHttpBindingBaseElement.ReliableSession\n  - System.ServiceModel.Configuration.WSHttpBindingBaseElement.TextEncoding\n  - System.ServiceModel.Configuration.WSHttpBindingBaseElement.TransactionFlow\n  - System.ServiceModel.Configuration.WSHttpBindingBaseElement.UseDefaultWebProxy\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.WSHttpBindingElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Configuration.WSHttpBindingElement\n  langs:\n  - csharp\n  name: WSHttpBindingElement()\n  nameWithType: WSHttpBindingElement.WSHttpBindingElement()\n  fullName: System.ServiceModel.Configuration.WSHttpBindingElement.WSHttpBindingElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.WSHttpBindingElement\"></xref> class.\n  syntax:\n    content: public WSHttpBindingElement ();\n    parameters: []\n  overload: System.ServiceModel.Configuration.WSHttpBindingElement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.WSHttpBindingElement.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.ServiceModel.Configuration.WSHttpBindingElement\n  langs:\n  - csharp\n  name: WSHttpBindingElement(String)\n  nameWithType: WSHttpBindingElement.WSHttpBindingElement(String)\n  fullName: System.ServiceModel.Configuration.WSHttpBindingElement.WSHttpBindingElement(String)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.WSHttpBindingElement\"></xref> class.\n  syntax:\n    content: public WSHttpBindingElement (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The configuration name of the binding. This value should be unique because it is used as identification for the binding.\n  overload: System.ServiceModel.Configuration.WSHttpBindingElement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.WSHttpBindingElement.AllowCookies\n  id: AllowCookies\n  parent: System.ServiceModel.Configuration.WSHttpBindingElement\n  langs:\n  - csharp\n  name: AllowCookies\n  nameWithType: WSHttpBindingElement.AllowCookies\n  fullName: System.ServiceModel.Configuration.WSHttpBindingElement.AllowCookies\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that indicates whether the WCF client will automatically store and resend any cookies sent by a single web service.\n  remarks: \"Setting AllowCookies to `true` is useful when a client is interacting with one web service that uses cookies.  If you are accessing multiple services with the same cookie, set AllowCookies to `false` and you will have to manually add the cookie header to each outgoing message. The following code shows how to do this:  \\n  \\n```c#  \\nMyWebServiceClient client = new MyWebServiceClient();  \\n  \\n        using (new OperationContextScope(client.InnerChannel))  \\n        {  \\n            client.DoSomething();  \\n  \\n            // Extract the cookie embedded in the received web service response  \\n            // and stores it locally  \\n            HttpResponseMessageProperty response = (HttpResponseMessageProperty)  \\n            OperationContext.Current.IncomingMessageProperties[  \\n                HttpResponseMessageProperty.Name];  \\n            sharedCookie = response.Headers[\\\"Set-Cookie\\\"];  \\n        }  \\n  \\n        MyOtherWebServiceClient otherClient = new MyOtherWebServiceClient();  \\n  \\n        using (new OperationContextScope(otherClient.InnerChannel))  \\n        {  \\n            // Embeds the extracted cookie in the next web service request  \\n            // Note that we manually have to create the request object since  \\n            // since it doesn't exist yet at this stage   \\n            HttpRequestMessageProperty request = new HttpRequestMessageProperty();  \\n            request.Headers[\\\"Cookie\\\"] = sharedCookie;  \\n            OperationContext.Current.OutgoingMessageProperties[  \\n                HttpRequestMessageProperty.Name] = request;  \\n  \\n            otherClient.DoSomethingElse();  \\n        }  \\n  \\n```\"\n  syntax:\n    content: public bool AllowCookies { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if automatic cookies processing is required; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Configuration.WSHttpBindingElement.AllowCookies*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.WSHttpBindingElement.BindingElementType\n  id: BindingElementType\n  parent: System.ServiceModel.Configuration.WSHttpBindingElement\n  langs:\n  - csharp\n  name: BindingElementType\n  nameWithType: WSHttpBindingElement.BindingElementType\n  fullName: System.ServiceModel.Configuration.WSHttpBindingElement.BindingElementType\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets the type of this binding element.\n  syntax:\n    content: protected override Type BindingElementType { get; }\n    return:\n      type: System.Type\n      description: The <xref:System.Type> of this binding element.\n  overload: System.ServiceModel.Configuration.WSHttpBindingElement.BindingElementType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.WSHttpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)\n  id: InitializeFrom(System.ServiceModel.Channels.Binding)\n  parent: System.ServiceModel.Configuration.WSHttpBindingElement\n  langs:\n  - csharp\n  name: InitializeFrom(Binding)\n  nameWithType: WSHttpBindingElement.InitializeFrom(Binding)\n  fullName: System.ServiceModel.Configuration.WSHttpBindingElement.InitializeFrom(Binding)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes this binding configuration element with the content of the specified binding element.\n  syntax:\n    content: protected override void InitializeFrom (System.ServiceModel.Channels.Binding binding);\n    parameters:\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: A binding element.\n  overload: System.ServiceModel.Configuration.WSHttpBindingElement.InitializeFrom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.WSHttpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)\n  id: OnApplyConfiguration(System.ServiceModel.Channels.Binding)\n  parent: System.ServiceModel.Configuration.WSHttpBindingElement\n  langs:\n  - csharp\n  name: OnApplyConfiguration(Binding)\n  nameWithType: WSHttpBindingElement.OnApplyConfiguration(Binding)\n  fullName: System.ServiceModel.Configuration.WSHttpBindingElement.OnApplyConfiguration(Binding)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Called when the content of a specified binding collection is applied to this binding configuration element.\n  syntax:\n    content: protected override void OnApplyConfiguration (System.ServiceModel.Channels.Binding binding);\n    parameters:\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: A collection of binding elements.\n  overload: System.ServiceModel.Configuration.WSHttpBindingElement.OnApplyConfiguration*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.WSHttpBindingElement.Properties\n  id: Properties\n  parent: System.ServiceModel.Configuration.WSHttpBindingElement\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: WSHttpBindingElement.Properties\n  fullName: System.ServiceModel.Configuration.WSHttpBindingElement.Properties\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets a <xref href=\"System.Configuration.ConfigurationPropertyCollection\"></xref> instance that contains a collection of <xref href=\"System.Configuration.ConfigurationProperty\"></xref> objects that can be attributes or <xref href=\"System.Configuration.ConfigurationElement\"></xref> objects of this configuration element.\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: A <xref href=\"System.Configuration.ConfigurationPropertyCollection\"></xref> instance that contains a collection of <xref href=\"System.Configuration.ConfigurationProperty\"></xref> objects that can be attributes or <xref href=\"System.Configuration.ConfigurationElement\"></xref> objects of this configuration element.\n  overload: System.ServiceModel.Configuration.WSHttpBindingElement.Properties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.WSHttpBindingElement.Security\n  id: Security\n  parent: System.ServiceModel.Configuration.WSHttpBindingElement\n  langs:\n  - csharp\n  name: Security\n  nameWithType: WSHttpBindingElement.Security\n  fullName: System.ServiceModel.Configuration.WSHttpBindingElement.Security\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets the type of security to be used with this binding.\n  syntax:\n    content: public System.ServiceModel.Configuration.WSHttpSecurityElement Security { get; }\n    return:\n      type: System.ServiceModel.Configuration.WSHttpSecurityElement\n      description: The <xref href=\"System.ServiceModel.Configuration.WSHttpSecurityElement\"></xref> that is used with this binding.\n  overload: System.ServiceModel.Configuration.WSHttpBindingElement.Security*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ServiceModel.Configuration.WSHttpBindingBaseElement\n  isExternal: false\n  name: System.ServiceModel.Configuration.WSHttpBindingBaseElement\n- uid: System.ServiceModel.Configuration.WSHttpBindingElement.#ctor\n  parent: System.ServiceModel.Configuration.WSHttpBindingElement\n  isExternal: false\n  name: WSHttpBindingElement()\n  nameWithType: WSHttpBindingElement.WSHttpBindingElement()\n  fullName: System.ServiceModel.Configuration.WSHttpBindingElement.WSHttpBindingElement()\n- uid: System.ServiceModel.Configuration.WSHttpBindingElement.#ctor(System.String)\n  parent: System.ServiceModel.Configuration.WSHttpBindingElement\n  isExternal: false\n  name: WSHttpBindingElement(String)\n  nameWithType: WSHttpBindingElement.WSHttpBindingElement(String)\n  fullName: System.ServiceModel.Configuration.WSHttpBindingElement.WSHttpBindingElement(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Configuration.WSHttpBindingElement.AllowCookies\n  parent: System.ServiceModel.Configuration.WSHttpBindingElement\n  isExternal: false\n  name: AllowCookies\n  nameWithType: WSHttpBindingElement.AllowCookies\n  fullName: System.ServiceModel.Configuration.WSHttpBindingElement.AllowCookies\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Configuration.WSHttpBindingElement.BindingElementType\n  parent: System.ServiceModel.Configuration.WSHttpBindingElement\n  isExternal: false\n  name: BindingElementType\n  nameWithType: WSHttpBindingElement.BindingElementType\n  fullName: System.ServiceModel.Configuration.WSHttpBindingElement.BindingElementType\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ServiceModel.Configuration.WSHttpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)\n  parent: System.ServiceModel.Configuration.WSHttpBindingElement\n  isExternal: false\n  name: InitializeFrom(Binding)\n  nameWithType: WSHttpBindingElement.InitializeFrom(Binding)\n  fullName: System.ServiceModel.Configuration.WSHttpBindingElement.InitializeFrom(Binding)\n- uid: System.ServiceModel.Channels.Binding\n  parent: System.ServiceModel.Channels\n  isExternal: true\n  name: Binding\n  nameWithType: Binding\n  fullName: System.ServiceModel.Channels.Binding\n- uid: System.ServiceModel.Configuration.WSHttpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)\n  parent: System.ServiceModel.Configuration.WSHttpBindingElement\n  isExternal: false\n  name: OnApplyConfiguration(Binding)\n  nameWithType: WSHttpBindingElement.OnApplyConfiguration(Binding)\n  fullName: System.ServiceModel.Configuration.WSHttpBindingElement.OnApplyConfiguration(Binding)\n- uid: System.ServiceModel.Configuration.WSHttpBindingElement.Properties\n  parent: System.ServiceModel.Configuration.WSHttpBindingElement\n  isExternal: false\n  name: Properties\n  nameWithType: WSHttpBindingElement.Properties\n  fullName: System.ServiceModel.Configuration.WSHttpBindingElement.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.ServiceModel.Configuration.WSHttpBindingElement.Security\n  parent: System.ServiceModel.Configuration.WSHttpBindingElement\n  isExternal: false\n  name: Security\n  nameWithType: WSHttpBindingElement.Security\n  fullName: System.ServiceModel.Configuration.WSHttpBindingElement.Security\n- uid: System.ServiceModel.Configuration.WSHttpSecurityElement\n  parent: System.ServiceModel.Configuration\n  isExternal: false\n  name: WSHttpSecurityElement\n  nameWithType: WSHttpSecurityElement\n  fullName: System.ServiceModel.Configuration.WSHttpSecurityElement\n- uid: System.ServiceModel.Configuration.WSHttpBindingElement.#ctor*\n  parent: System.ServiceModel.Configuration.WSHttpBindingElement\n  isExternal: false\n  name: WSHttpBindingElement\n  nameWithType: WSHttpBindingElement.WSHttpBindingElement\n- uid: System.ServiceModel.Configuration.WSHttpBindingElement.AllowCookies*\n  parent: System.ServiceModel.Configuration.WSHttpBindingElement\n  isExternal: false\n  name: AllowCookies\n  nameWithType: WSHttpBindingElement.AllowCookies\n- uid: System.ServiceModel.Configuration.WSHttpBindingElement.BindingElementType*\n  parent: System.ServiceModel.Configuration.WSHttpBindingElement\n  isExternal: false\n  name: BindingElementType\n  nameWithType: WSHttpBindingElement.BindingElementType\n- uid: System.ServiceModel.Configuration.WSHttpBindingElement.InitializeFrom*\n  parent: System.ServiceModel.Configuration.WSHttpBindingElement\n  isExternal: false\n  name: InitializeFrom\n  nameWithType: WSHttpBindingElement.InitializeFrom\n- uid: System.ServiceModel.Configuration.WSHttpBindingElement.OnApplyConfiguration*\n  parent: System.ServiceModel.Configuration.WSHttpBindingElement\n  isExternal: false\n  name: OnApplyConfiguration\n  nameWithType: WSHttpBindingElement.OnApplyConfiguration\n- uid: System.ServiceModel.Configuration.WSHttpBindingElement.Properties*\n  parent: System.ServiceModel.Configuration.WSHttpBindingElement\n  isExternal: false\n  name: Properties\n  nameWithType: WSHttpBindingElement.Properties\n- uid: System.ServiceModel.Configuration.WSHttpBindingElement.Security*\n  parent: System.ServiceModel.Configuration.WSHttpBindingElement\n  isExternal: false\n  name: Security\n  nameWithType: WSHttpBindingElement.Security\n"}