{"nodes":[{"pos":[902,1018],"content":"Presents UDP receive result information from a call to the <xref:System.Net.Sockets.UdpClient.ReceiveAsync*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Presents UDP receive result information from a call to the &lt;xref:System.Net.Sockets.UdpClient.ReceiveAsync*&gt; method.","pos":[0,116],"source":"Presents UDP receive result information from a call to the <xref:System.Net.Sockets.UdpClient.ReceiveAsync*> method."}]},{"pos":[1745,1842],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Net.Sockets.UdpReceiveResult\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Net.Sockets.UdpReceiveResult\"></xref> class."},{"pos":[2023,2070],"content":"A buffer for data to receive in the UDP packet.","needQuote":true,"needEscape":true,"nodes":[{"content":"A buffer for data to receive in the UDP packet.","pos":[0,47]}]},{"pos":[2149,2187],"content":"The remote endpoint of the UDP packet.","needQuote":true,"needEscape":true,"nodes":[{"content":"The remote endpoint of the UDP packet.","pos":[0,38]}]},{"pos":[2607,2662],"content":"Gets a buffer with the data received in the UDP packet.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a buffer with the data received in the UDP packet.","pos":[0,55]}]},{"pos":[2774,2878],"content":"Returns <xref:System.Byte>.       A <xref:System.Byte> array with the data received in the UDP packet.","needQuote":false,"needEscape":true,"nodes":[{"content":"Returns <xref:System.Byte>.       A <xref:System.Byte> array with the data received in the UDP packet.","pos":[0,102],"nodes":[{"content":"Returns &lt;xref:System.Byte&gt;.","pos":[0,27],"source":"Returns <xref:System.Byte>."},{"content":"A &lt;xref:System.Byte&gt; array with the data received in the UDP packet.","pos":[34,102],"source":"       A <xref:System.Byte> array with the data received in the UDP packet."}]}]},{"pos":[3426,3510],"content":"Returns a value that indicates whether this instance is equal to a specified object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether this instance is equal to a specified object.","pos":[0,84]}]},{"pos":[3697,3738],"content":"The object to compare with this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to compare with this instance.","pos":[0,41]}]},{"pos":[3798,4121],"content":"Returns <xref:System.Boolean>.       <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>other</code> is an instance of <xref href=\"System.Net.Sockets.UdpReceiveResult\"></xref> and equals the value of the instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"Returns &lt;xref:System.Boolean&gt;.","pos":[0,30],"source":"Returns <xref:System.Boolean>."},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p2\">&lt;/code&gt;</ept> is an instance of <bpt id=\"p3\">&lt;xref href=\"System.Net.Sockets.UdpReceiveResult\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> and equals the value of the instance; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","pos":[37,307],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>other</code> is an instance of <xref href=\"System.Net.Sockets.UdpReceiveResult\"></xref> and equals the value of the instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[4595,4679],"content":"Returns a value that indicates whether this instance is equal to a specified object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether this instance is equal to a specified object.","pos":[0,84]}]},{"pos":[4820,4861],"content":"The object to compare with this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to compare with this instance.","pos":[0,41]}]},{"pos":[4921,5242],"content":"Returns <xref:System.Boolean>.       <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>obj</code> is an instance of <xref href=\"System.Net.Sockets.UdpReceiveResult\"></xref> and equals the value of the instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"Returns &lt;xref:System.Boolean&gt;.","pos":[0,30],"source":"Returns <xref:System.Boolean>."},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p2\">&lt;/code&gt;</ept> is an instance of <bpt id=\"p3\">&lt;xref href=\"System.Net.Sockets.UdpReceiveResult\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> and equals the value of the instance; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","pos":[37,305],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>obj</code> is an instance of <xref href=\"System.Net.Sockets.UdpReceiveResult\"></xref> and equals the value of the instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[5693,5733],"content":"Returns the hash code for this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]},{"pos":[5869,5920],"content":"Returns <xref:System.Int32>.       The hash code.","needQuote":false,"needEscape":true,"nodes":[{"content":"Returns <xref:System.Int32>.       The hash code.","pos":[0,49],"nodes":[{"content":"Returns &lt;xref:System.Int32&gt;.","pos":[0,28],"source":"Returns <xref:System.Int32>."},{"content":"The hash code.","pos":[35,49]}]}]},{"pos":[6623,6733],"content":"Tests whether two specified <bpt id=\"p1\">&lt;xref href=\"System.Net.Sockets.UdpReceiveResult\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances are equivalent.","needQuote":true,"needEscape":true,"source":"Tests whether two specified <xref href=\"System.Net.Sockets.UdpReceiveResult\"></xref> instances are equivalent."},{"pos":[6973,7088],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Net.Sockets.UdpReceiveResult\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance that is to the left of the equality operator.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Net.Sockets.UdpReceiveResult\"></xref> instance that is to the left of the equality operator."},{"pos":[7172,7288],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Net.Sockets.UdpReceiveResult\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance that is to the right of the equality operator.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Net.Sockets.UdpReceiveResult\"></xref> instance that is to the right of the equality operator."},{"pos":[7348,7589],"content":"Returns <xref:System.Boolean>.       <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>left</code> and <code>right</code> are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"Returns &lt;xref:System.Boolean&gt;.","pos":[0,30],"source":"Returns <xref:System.Boolean>."},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">right</ph><ept id=\"p3\">&lt;/code&gt;</ept> are equal; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","pos":[37,227],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>left</code> and <code>right</code> are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[8302,8411],"content":"Tests whether two specified <bpt id=\"p1\">&lt;xref href=\"System.Net.Sockets.UdpReceiveResult\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances are not equal.","needQuote":true,"needEscape":true,"source":"Tests whether two specified <xref href=\"System.Net.Sockets.UdpReceiveResult\"></xref> instances are not equal."},{"pos":[8653,8769],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Net.Sockets.UdpReceiveResult\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance that is to the left of the not equal operator.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Net.Sockets.UdpReceiveResult\"></xref> instance that is to the left of the not equal operator."},{"pos":[8853,8970],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Net.Sockets.UdpReceiveResult\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance that is to the right of the not equal operator.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Net.Sockets.UdpReceiveResult\"></xref> instance that is to the right of the not equal operator."},{"pos":[9030,9273],"content":"Returns <xref:System.Boolean>.       <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>left</code> and <code>right</code> are unequal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"Returns &lt;xref:System.Boolean&gt;.","pos":[0,30],"source":"Returns <xref:System.Boolean>."},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">right</ph><ept id=\"p3\">&lt;/code&gt;</ept> are unequal; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","pos":[37,229],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>left</code> and <code>right</code> are unequal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[9742,9806],"content":"Gets the remote endpoint from which the UDP packet was received.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the remote endpoint from which the UDP packet was received.","pos":[0,64]}]},{"pos":[9949,10054],"content":"Returns <xref:System.Net.IPEndPoint>.       The remote endpoint from which the UDP packet was received.","needQuote":false,"needEscape":true,"nodes":[{"content":"Returns <xref:System.Net.IPEndPoint>.       The remote endpoint from which the UDP packet was received.","pos":[0,103],"nodes":[{"content":"Returns &lt;xref:System.Net.IPEndPoint&gt;.","pos":[0,37],"source":"Returns <xref:System.Net.IPEndPoint>."},{"content":"The remote endpoint from which the UDP packet was received.","pos":[44,103]}]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.Sockets.UdpReceiveResult\n  id: UdpReceiveResult\n  children:\n  - System.Net.Sockets.UdpReceiveResult.#ctor(System.Byte[],System.Net.IPEndPoint)\n  - System.Net.Sockets.UdpReceiveResult.Buffer\n  - System.Net.Sockets.UdpReceiveResult.Equals(System.Net.Sockets.UdpReceiveResult)\n  - System.Net.Sockets.UdpReceiveResult.Equals(System.Object)\n  - System.Net.Sockets.UdpReceiveResult.GetHashCode\n  - System.Net.Sockets.UdpReceiveResult.op_Equality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)\n  - System.Net.Sockets.UdpReceiveResult.op_Inequality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)\n  - System.Net.Sockets.UdpReceiveResult.RemoteEndPoint\n  langs:\n  - csharp\n  name: UdpReceiveResult\n  nameWithType: UdpReceiveResult\n  fullName: System.Net.Sockets.UdpReceiveResult\n  type: Struct\n  summary: Presents UDP receive result information from a call to the <xref:System.Net.Sockets.UdpClient.ReceiveAsync*> method.\n  syntax:\n    content: 'public struct UdpReceiveResult : IEquatable<System.Net.Sockets.UdpReceiveResult>'\n  inheritance:\n  - System.ValueType\n  implements:\n  - System.IEquatable<System.Net.Sockets.UdpReceiveResult>\n  platform:\n  - net462\n- uid: System.Net.Sockets.UdpReceiveResult.#ctor(System.Byte[],System.Net.IPEndPoint)\n  id: '#ctor(System.Byte[],System.Net.IPEndPoint)'\n  parent: System.Net.Sockets.UdpReceiveResult\n  langs:\n  - csharp\n  name: UdpReceiveResult(Byte[],IPEndPoint)\n  nameWithType: UdpReceiveResult.UdpReceiveResult(Byte[],IPEndPoint)\n  fullName: System.Net.Sockets.UdpReceiveResult.UdpReceiveResult(Byte[],IPEndPoint)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Net.Sockets\n  summary: Initializes a new instance of the <xref href=\"System.Net.Sockets.UdpReceiveResult\"></xref> class.\n  syntax:\n    content: public UdpReceiveResult (byte[] buffer, System.Net.IPEndPoint remoteEndPoint);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: A buffer for data to receive in the UDP packet.\n    - id: remoteEndPoint\n      type: System.Net.IPEndPoint\n      description: The remote endpoint of the UDP packet.\n  overload: System.Net.Sockets.UdpReceiveResult.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Sockets.UdpReceiveResult.Buffer\n  id: Buffer\n  parent: System.Net.Sockets.UdpReceiveResult\n  langs:\n  - csharp\n  name: Buffer\n  nameWithType: UdpReceiveResult.Buffer\n  fullName: System.Net.Sockets.UdpReceiveResult.Buffer\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Sockets\n  summary: Gets a buffer with the data received in the UDP packet.\n  syntax:\n    content: public byte[] Buffer { get; }\n    return:\n      type: System.Byte[]\n      description: \"Returns <xref:System.Byte>.  \\n  \\n A <xref:System.Byte> array with the data received in the UDP packet.\"\n  overload: System.Net.Sockets.UdpReceiveResult.Buffer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Sockets.UdpReceiveResult.Equals(System.Net.Sockets.UdpReceiveResult)\n  id: Equals(System.Net.Sockets.UdpReceiveResult)\n  parent: System.Net.Sockets.UdpReceiveResult\n  langs:\n  - csharp\n  name: Equals(UdpReceiveResult)\n  nameWithType: UdpReceiveResult.Equals(UdpReceiveResult)\n  fullName: System.Net.Sockets.UdpReceiveResult.Equals(UdpReceiveResult)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net.Sockets\n  summary: Returns a value that indicates whether this instance is equal to a specified object.\n  syntax:\n    content: public bool Equals (System.Net.Sockets.UdpReceiveResult other);\n    parameters:\n    - id: other\n      type: System.Net.Sockets.UdpReceiveResult\n      description: The object to compare with this instance.\n    return:\n      type: System.Boolean\n      description: \"Returns <xref:System.Boolean>.  \\n  \\n <xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref> if <code>other</code> is an instance of <xref href=\\\"System.Net.Sockets.UdpReceiveResult\\\"></xref> and equals the value of the instance; otherwise, <xref uid=\\\"langword_csharp_false\\\" name=\\\"false\\\" href=\\\"\\\"></xref>.\"\n  overload: System.Net.Sockets.UdpReceiveResult.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Sockets.UdpReceiveResult.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Net.Sockets.UdpReceiveResult\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: UdpReceiveResult.Equals(Object)\n  fullName: System.Net.Sockets.UdpReceiveResult.Equals(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net.Sockets\n  summary: Returns a value that indicates whether this instance is equal to a specified object.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare with this instance.\n    return:\n      type: System.Boolean\n      description: \"Returns <xref:System.Boolean>.  \\n  \\n <xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref> if <code>obj</code> is an instance of <xref href=\\\"System.Net.Sockets.UdpReceiveResult\\\"></xref> and equals the value of the instance; otherwise, <xref uid=\\\"langword_csharp_false\\\" name=\\\"false\\\" href=\\\"\\\"></xref>.\"\n  overload: System.Net.Sockets.UdpReceiveResult.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Sockets.UdpReceiveResult.GetHashCode\n  id: GetHashCode\n  parent: System.Net.Sockets.UdpReceiveResult\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: UdpReceiveResult.GetHashCode()\n  fullName: System.Net.Sockets.UdpReceiveResult.GetHashCode()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net.Sockets\n  summary: Returns the hash code for this instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"Returns <xref:System.Int32>.  \\n  \\n The hash code.\"\n  overload: System.Net.Sockets.UdpReceiveResult.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Sockets.UdpReceiveResult.op_Equality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)\n  id: op_Equality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)\n  parent: System.Net.Sockets.UdpReceiveResult\n  langs:\n  - csharp\n  name: op_Equality(UdpReceiveResult,UdpReceiveResult)\n  nameWithType: UdpReceiveResult.op_Equality(UdpReceiveResult,UdpReceiveResult)\n  fullName: System.Net.Sockets.UdpReceiveResult.op_Equality(UdpReceiveResult,UdpReceiveResult)\n  type: Operator\n  assemblies:\n  - System\n  namespace: System.Net.Sockets\n  summary: Tests whether two specified <xref href=\"System.Net.Sockets.UdpReceiveResult\"></xref> instances are equivalent.\n  syntax:\n    content: public static bool op_Equality (System.Net.Sockets.UdpReceiveResult left, System.Net.Sockets.UdpReceiveResult right);\n    parameters:\n    - id: left\n      type: System.Net.Sockets.UdpReceiveResult\n      description: The <xref href=\"System.Net.Sockets.UdpReceiveResult\"></xref> instance that is to the left of the equality operator.\n    - id: right\n      type: System.Net.Sockets.UdpReceiveResult\n      description: The <xref href=\"System.Net.Sockets.UdpReceiveResult\"></xref> instance that is to the right of the equality operator.\n    return:\n      type: System.Boolean\n      description: \"Returns <xref:System.Boolean>.  \\n  \\n <xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref> if <code>left</code> and <code>right</code> are equal; otherwise, <xref uid=\\\"langword_csharp_false\\\" name=\\\"false\\\" href=\\\"\\\"></xref>.\"\n  overload: System.Net.Sockets.UdpReceiveResult.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Sockets.UdpReceiveResult.op_Inequality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)\n  id: op_Inequality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)\n  parent: System.Net.Sockets.UdpReceiveResult\n  langs:\n  - csharp\n  name: op_Inequality(UdpReceiveResult,UdpReceiveResult)\n  nameWithType: UdpReceiveResult.op_Inequality(UdpReceiveResult,UdpReceiveResult)\n  fullName: System.Net.Sockets.UdpReceiveResult.op_Inequality(UdpReceiveResult,UdpReceiveResult)\n  type: Operator\n  assemblies:\n  - System\n  namespace: System.Net.Sockets\n  summary: Tests whether two specified <xref href=\"System.Net.Sockets.UdpReceiveResult\"></xref> instances are not equal.\n  syntax:\n    content: public static bool op_Inequality (System.Net.Sockets.UdpReceiveResult left, System.Net.Sockets.UdpReceiveResult right);\n    parameters:\n    - id: left\n      type: System.Net.Sockets.UdpReceiveResult\n      description: The <xref href=\"System.Net.Sockets.UdpReceiveResult\"></xref> instance that is to the left of the not equal operator.\n    - id: right\n      type: System.Net.Sockets.UdpReceiveResult\n      description: The <xref href=\"System.Net.Sockets.UdpReceiveResult\"></xref> instance that is to the right of the not equal operator.\n    return:\n      type: System.Boolean\n      description: \"Returns <xref:System.Boolean>.  \\n  \\n <xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref> if <code>left</code> and <code>right</code> are unequal; otherwise, <xref uid=\\\"langword_csharp_false\\\" name=\\\"false\\\" href=\\\"\\\"></xref>.\"\n  overload: System.Net.Sockets.UdpReceiveResult.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Sockets.UdpReceiveResult.RemoteEndPoint\n  id: RemoteEndPoint\n  parent: System.Net.Sockets.UdpReceiveResult\n  langs:\n  - csharp\n  name: RemoteEndPoint\n  nameWithType: UdpReceiveResult.RemoteEndPoint\n  fullName: System.Net.Sockets.UdpReceiveResult.RemoteEndPoint\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Sockets\n  summary: Gets the remote endpoint from which the UDP packet was received.\n  syntax:\n    content: public System.Net.IPEndPoint RemoteEndPoint { get; }\n    return:\n      type: System.Net.IPEndPoint\n      description: \"Returns <xref:System.Net.IPEndPoint>.  \\n  \\n The remote endpoint from which the UDP packet was received.\"\n  overload: System.Net.Sockets.UdpReceiveResult.RemoteEndPoint*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Net.Sockets.UdpReceiveResult.#ctor(System.Byte[],System.Net.IPEndPoint)\n  parent: System.Net.Sockets.UdpReceiveResult\n  isExternal: false\n  name: UdpReceiveResult(Byte[],IPEndPoint)\n  nameWithType: UdpReceiveResult.UdpReceiveResult(Byte[],IPEndPoint)\n  fullName: System.Net.Sockets.UdpReceiveResult.UdpReceiveResult(Byte[],IPEndPoint)\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Net.IPEndPoint\n  parent: System.Net\n  isExternal: true\n  name: IPEndPoint\n  nameWithType: IPEndPoint\n  fullName: System.Net.IPEndPoint\n- uid: System.Net.Sockets.UdpReceiveResult.Buffer\n  parent: System.Net.Sockets.UdpReceiveResult\n  isExternal: false\n  name: Buffer\n  nameWithType: UdpReceiveResult.Buffer\n  fullName: System.Net.Sockets.UdpReceiveResult.Buffer\n- uid: System.Net.Sockets.UdpReceiveResult.Equals(System.Net.Sockets.UdpReceiveResult)\n  parent: System.Net.Sockets.UdpReceiveResult\n  isExternal: false\n  name: Equals(UdpReceiveResult)\n  nameWithType: UdpReceiveResult.Equals(UdpReceiveResult)\n  fullName: System.Net.Sockets.UdpReceiveResult.Equals(UdpReceiveResult)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.Sockets.UdpReceiveResult\n  parent: System.Net.Sockets\n  isExternal: false\n  name: UdpReceiveResult\n  nameWithType: UdpReceiveResult\n  fullName: System.Net.Sockets.UdpReceiveResult\n- uid: System.Net.Sockets.UdpReceiveResult.Equals(System.Object)\n  parent: System.Net.Sockets.UdpReceiveResult\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: UdpReceiveResult.Equals(Object)\n  fullName: System.Net.Sockets.UdpReceiveResult.Equals(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Net.Sockets.UdpReceiveResult.GetHashCode\n  parent: System.Net.Sockets.UdpReceiveResult\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: UdpReceiveResult.GetHashCode()\n  fullName: System.Net.Sockets.UdpReceiveResult.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Net.Sockets.UdpReceiveResult.op_Equality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)\n  parent: System.Net.Sockets.UdpReceiveResult\n  isExternal: false\n  name: op_Equality(UdpReceiveResult,UdpReceiveResult)\n  nameWithType: UdpReceiveResult.op_Equality(UdpReceiveResult,UdpReceiveResult)\n  fullName: System.Net.Sockets.UdpReceiveResult.op_Equality(UdpReceiveResult,UdpReceiveResult)\n- uid: System.Net.Sockets.UdpReceiveResult.op_Inequality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)\n  parent: System.Net.Sockets.UdpReceiveResult\n  isExternal: false\n  name: op_Inequality(UdpReceiveResult,UdpReceiveResult)\n  nameWithType: UdpReceiveResult.op_Inequality(UdpReceiveResult,UdpReceiveResult)\n  fullName: System.Net.Sockets.UdpReceiveResult.op_Inequality(UdpReceiveResult,UdpReceiveResult)\n- uid: System.Net.Sockets.UdpReceiveResult.RemoteEndPoint\n  parent: System.Net.Sockets.UdpReceiveResult\n  isExternal: false\n  name: RemoteEndPoint\n  nameWithType: UdpReceiveResult.RemoteEndPoint\n  fullName: System.Net.Sockets.UdpReceiveResult.RemoteEndPoint\n- uid: System.Net.Sockets.UdpReceiveResult.#ctor*\n  parent: System.Net.Sockets.UdpReceiveResult\n  isExternal: false\n  name: UdpReceiveResult\n  nameWithType: UdpReceiveResult.UdpReceiveResult\n- uid: System.Net.Sockets.UdpReceiveResult.Buffer*\n  parent: System.Net.Sockets.UdpReceiveResult\n  isExternal: false\n  name: Buffer\n  nameWithType: UdpReceiveResult.Buffer\n- uid: System.Net.Sockets.UdpReceiveResult.Equals*\n  parent: System.Net.Sockets.UdpReceiveResult\n  isExternal: false\n  name: Equals\n  nameWithType: UdpReceiveResult.Equals\n- uid: System.Net.Sockets.UdpReceiveResult.GetHashCode*\n  parent: System.Net.Sockets.UdpReceiveResult\n  isExternal: false\n  name: GetHashCode\n  nameWithType: UdpReceiveResult.GetHashCode\n- uid: System.Net.Sockets.UdpReceiveResult.op_Equality*\n  parent: System.Net.Sockets.UdpReceiveResult\n  isExternal: false\n  name: op_Equality\n  nameWithType: UdpReceiveResult.op_Equality\n- uid: System.Net.Sockets.UdpReceiveResult.op_Inequality*\n  parent: System.Net.Sockets.UdpReceiveResult\n  isExternal: false\n  name: op_Inequality\n  nameWithType: UdpReceiveResult.op_Inequality\n- uid: System.Net.Sockets.UdpReceiveResult.RemoteEndPoint*\n  parent: System.Net.Sockets.UdpReceiveResult\n  isExternal: false\n  name: RemoteEndPoint\n  nameWithType: UdpReceiveResult.RemoteEndPoint\n"}