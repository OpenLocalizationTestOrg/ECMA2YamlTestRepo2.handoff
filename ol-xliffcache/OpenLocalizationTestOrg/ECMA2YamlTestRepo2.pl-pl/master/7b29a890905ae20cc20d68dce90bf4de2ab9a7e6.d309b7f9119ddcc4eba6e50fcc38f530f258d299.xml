{"nodes":[{"pos":[1251,1510],"content":"Provides data for various property changed events. Typically these events report effective value changes in the value of a read-only dependency property. Another usage is as part of a <xref href=\"System.Windows.PropertyChangedCallback\"></xref> implementation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides data for various property changed events.","pos":[0,50]},{"content":"Typically these events report effective value changes in the value of a read-only dependency property.","pos":[51,153]},{"content":"Another usage is as part of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.PropertyChangedCallback\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation.","pos":[154,259],"source":" Another usage is as part of a <xref href=\"System.Windows.PropertyChangedCallback\"></xref> implementation."}]},{"pos":[1523,2613],"content":"The events that use the DependencyPropertyChangedEventArgs class for event data, and the <xref:System.Windows.DependencyPropertyChangedEventHandler> method implementations for handlers, generally follow the naming pattern `Is*Changed`, and are generally implemented as [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] events without <xref:System.Windows.RoutedEvent> backing (they are not routed events). Some class handling methods that \"handle\" otherwise unexposed events that report a state change through a property change, such as <xref:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged%2A?displayProperty=fullName>, also use the DependencyPropertyChangedEventArgs class for event data.       The scenario for <xref:System.Windows.PropertyChangedCallback> is to use the arguments to report old and new values that come from the property system evaluation of the property. A callback that processes old and new values might choose special handling depending on these values, such as choosing to not respond to value changes that are deemed insignificant.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The events that use the DependencyPropertyChangedEventArgs class for event data, and the &lt;xref:System.Windows.DependencyPropertyChangedEventHandler&gt; method implementations for handlers, generally follow the naming pattern <ph id=\"ph1\">`Is*Changed`</ph>, and are generally implemented as <ph id=\"ph2\">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> events without &lt;xref:System.Windows.RoutedEvent&gt; backing (they are not routed events).","pos":[0,417],"source":"The events that use the DependencyPropertyChangedEventArgs class for event data, and the <xref:System.Windows.DependencyPropertyChangedEventHandler> method implementations for handlers, generally follow the naming pattern `Is*Changed`, and are generally implemented as [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] events without <xref:System.Windows.RoutedEvent> backing (they are not routed events)."},{"content":"Some class handling methods that \"handle\" otherwise unexposed events that report a state change through a property change, such as &lt;xref:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged%2A?displayProperty=fullName&gt;, also use the DependencyPropertyChangedEventArgs class for event data.","pos":[418,719],"source":" Some class handling methods that \"handle\" otherwise unexposed events that report a state change through a property change, such as <xref:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged%2A?displayProperty=fullName>, also use the DependencyPropertyChangedEventArgs class for event data."},{"content":"The scenario for &lt;xref:System.Windows.PropertyChangedCallback&gt; is to use the arguments to report old and new values that come from the property system evaluation of the property.","pos":[726,904],"source":"       The scenario for <xref:System.Windows.PropertyChangedCallback> is to use the arguments to report old and new values that come from the property system evaluation of the property."},{"content":"A callback that processes old and new values might choose special handling depending on these values, such as choosing to not respond to value changes that are deemed insignificant.","pos":[905,1086]}]},{"pos":[4443,4554],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> class."},{"pos":[4566,4752],"content":"Implementers of custom events that report dependency property changes should use this constructor for populating the event data with the specifics of the change when the event is raised.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Implementers of custom events that report dependency property changes should use this constructor for populating the event data with the specifics of the change when the event is raised.","pos":[0,186]}]},{"pos":[4998,5054],"content":"The identifier for the dependency property that changed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier for the dependency property that changed.","pos":[0,56]}]},{"pos":[5119,5210],"content":"The value of the property before the change reported by the relevant event or state change.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the property before the change reported by the relevant event or state change.","pos":[0,91]}]},{"pos":[5275,5365],"content":"The value of the property after the change reported by the relevant event or state change.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the property after the change reported by the relevant event or state change.","pos":[0,90]}]},{"pos":[5912,6051],"content":"Determines whether the provided object is equivalent to the current <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Determines whether the provided object is equivalent to the current <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref>."},{"pos":[6063,6160],"content":"This implementation relies on value equivalence of all properties, including internal properties.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This implementation relies on value equivalence of all properties, including internal properties.","pos":[0,97]}]},{"pos":[6301,6409],"content":"The object to compare to the current <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The object to compare to the current <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref>."},{"pos":[6468,6727],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the provided object is equivalent to the current <bpt id=\"p2\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the provided object is equivalent to the current <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7431,7634],"content":"Determines whether the provided <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is equivalent to the current <bpt id=\"p2\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Determines whether the provided <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> is equivalent to the current <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref>."},{"pos":[7646,7743],"content":"This implementation relies on value equivalence of all properties, including internal properties.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This implementation relies on value equivalence of all properties, including internal properties.","pos":[0,97]}]},{"pos":[7956,8127],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare to the current <bpt id=\"p2\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> to compare to the current <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref>"},{"pos":[8186,8509],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the provided <bpt id=\"p2\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is equivalent to the current <bpt id=\"p3\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the provided <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> is equivalent to the current <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9034,9132],"content":"Gets a hash code  for this <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets a hash code  for this <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref>."},{"pos":[9267,9301],"content":"A signed 32-bit integer hash code.","needQuote":true,"needEscape":true,"nodes":[{"content":"A signed 32-bit integer hash code.","pos":[0,34]}]},{"pos":[9812,9860],"content":"Gets the value of the property after the change.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the property after the change.","pos":[0,48]}]},{"pos":[9872,9983],"content":"The type of the value provided should always be castable to the type of the dependency property being reported.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The type of the value provided should always be castable to the type of the dependency property being reported.","pos":[0,111]}]},{"pos":[11120,11156],"content":"The property value after the change.","needQuote":true,"needEscape":true,"nodes":[{"content":"The property value after the change.","pos":[0,36]}]},{"pos":[11664,11713],"content":"Gets the value of the property before the change.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the property before the change.","pos":[0,49]}]},{"pos":[11725,11836],"content":"The type of the value provided should always be castable to the type of the dependency property being reported.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The type of the value provided should always be castable to the type of the dependency property being reported.","pos":[0,111]}]},{"pos":[12973,13010],"content":"The property value before the change.","needQuote":true,"needEscape":true,"nodes":[{"content":"The property value before the change.","pos":[0,37]}]},{"pos":[13948,14080],"content":"Determines whether two specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects have the same value.","needQuote":true,"needEscape":true,"source":"Determines whether two specified <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> objects have the same value."},{"pos":[14092,14201],"content":"The implementation uses the same logic as <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The implementation uses the same logic as &lt;xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A&gt;.","pos":[0,109],"source":"The implementation uses the same logic as <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>."}]},{"pos":[14483,14575],"content":"The first <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare.","needQuote":true,"needEscape":true,"source":"The first <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> to compare."},{"pos":[14673,14766],"content":"The second <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare.","needQuote":true,"needEscape":true,"source":"The second <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> to compare."},{"pos":[14825,15068],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two <bpt id=\"p2\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instances are equivalent; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> instances are equivalent; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[16019,16145],"content":"Determines whether two specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects are different.","needQuote":true,"needEscape":true,"source":"Determines whether two specified <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> objects are different."},{"pos":[16157,16285],"content":"The implementation returns the negation of the same logic as <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The implementation returns the negation of the same logic as &lt;xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A&gt;.","pos":[0,128],"source":"The implementation returns the negation of the same logic as <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>."}]},{"pos":[16569,16661],"content":"The first <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare.","needQuote":true,"needEscape":true,"source":"The first <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> to compare."},{"pos":[16759,16852],"content":"The second <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare.","needQuote":true,"needEscape":true,"source":"The second <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> to compare."},{"pos":[16911,17153],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two <bpt id=\"p2\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instances are different; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> instances are different; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[17666,17746],"content":"Gets the identifier for the dependency property where the value change occurred.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the identifier for the dependency property where the value change occurred.","pos":[0,80]}]},{"pos":[17758,18218],"content":"This property is relevant if used within a common <xref:System.Windows.PropertyChangedCallback> that is registered for several properties, and it is necessary to disambiguate which property change invoked the callback. Property is not typically relevant for raising events, because there is usually a 1:1 correspondence between properties and events that report the property change. The event that was raised is itself the indication of which property changed.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property is relevant if used within a common <xref:System.Windows.PropertyChangedCallback> that is registered for several properties, and it is necessary to disambiguate which property change invoked the callback. Property is not typically relevant for raising events, because there is usually a 1:1 correspondence between properties and events that report the property change. The event that was raised is itself the indication of which property changed.","pos":[0,460],"nodes":[{"content":"This property is relevant if used within a common &lt;xref:System.Windows.PropertyChangedCallback&gt; that is registered for several properties, and it is necessary to disambiguate which property change invoked the callback.","pos":[0,218],"source":"This property is relevant if used within a common <xref:System.Windows.PropertyChangedCallback> that is registered for several properties, and it is necessary to disambiguate which property change invoked the callback."},{"content":"Property is not typically relevant for raising events, because there is usually a 1:1 correspondence between properties and events that report the property change.","pos":[219,382]},{"content":"The event that was raised is itself the indication of which property changed.","pos":[383,460]}]}]},{"pos":[18378,18458],"content":"The identifier field of the dependency property where the value change occurred.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier field of the dependency property where the value change occurred.","pos":[0,80]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.DependencyPropertyChangedEventArgs\n  id: DependencyPropertyChangedEventArgs\n  children:\n  - System.Windows.DependencyPropertyChangedEventArgs.#ctor(System.Windows.DependencyProperty,System.Object,System.Object)\n  - System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Object)\n  - System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.DependencyPropertyChangedEventArgs.GetHashCode\n  - System.Windows.DependencyPropertyChangedEventArgs.NewValue\n  - System.Windows.DependencyPropertyChangedEventArgs.OldValue\n  - System.Windows.DependencyPropertyChangedEventArgs.op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.DependencyPropertyChangedEventArgs.Property\n  langs:\n  - csharp\n  name: DependencyPropertyChangedEventArgs\n  nameWithType: DependencyPropertyChangedEventArgs\n  fullName: System.Windows.DependencyPropertyChangedEventArgs\n  type: Struct\n  summary: Provides data for various property changed events. Typically these events report effective value changes in the value of a read-only dependency property. Another usage is as part of a <xref href=\"System.Windows.PropertyChangedCallback\"></xref> implementation.\n  remarks: \"The events that use the DependencyPropertyChangedEventArgs class for event data, and the <xref:System.Windows.DependencyPropertyChangedEventHandler> method implementations for handlers, generally follow the naming pattern `Is*Changed`, and are generally implemented as [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] events without <xref:System.Windows.RoutedEvent> backing (they are not routed events). Some class handling methods that \\\"handle\\\" otherwise unexposed events that report a state change through a property change, such as <xref:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged%2A?displayProperty=fullName>, also use the DependencyPropertyChangedEventArgs class for event data.  \\n  \\n The scenario for <xref:System.Windows.PropertyChangedCallback> is to use the arguments to report old and new values that come from the property system evaluation of the property. A callback that processes old and new values might choose special handling depending on these values, such as choosing to not respond to value changes that are deemed insignificant.\"\n  example:\n  - \"The following example uses the DependencyPropertyChangedEventArgs class in the context of a <xref:System.Windows.PropertyChangedCallback> for a particular property of a custom class that also defines events. The callback takes the results of old and new values from the property system as communicated by DependencyPropertyChangedEventArgs, and repackages these into a different events arguments class <xref:System.Windows.RoutedPropertyChangedEventArgs%601>. The new arguments are then used as the data for a \\\"ValueChanged\\\" event defined by and raised by the custom class.  \\n  \\n [!code-cs[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/add/codesnippet/csharp/NumericUpDownOneProject/NumericUpDown.cs#dependencypropertychangedeventargs)]\\n [!code-vb[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/add/codesnippet/visualbasic/numericupdownoneproject/numericupdown.vb#dependencypropertychangedeventargs)]\"\n  syntax:\n    content: public struct DependencyPropertyChangedEventArgs\n  inheritance:\n  - System.ValueType\n  implements: []\n  platform:\n  - net462\n- uid: System.Windows.DependencyPropertyChangedEventArgs.#ctor(System.Windows.DependencyProperty,System.Object,System.Object)\n  id: '#ctor(System.Windows.DependencyProperty,System.Object,System.Object)'\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  langs:\n  - csharp\n  name: DependencyPropertyChangedEventArgs(DependencyProperty,Object,Object)\n  nameWithType: DependencyPropertyChangedEventArgs.DependencyPropertyChangedEventArgs(DependencyProperty,Object,Object)\n  fullName: System.Windows.DependencyPropertyChangedEventArgs.DependencyPropertyChangedEventArgs(DependencyProperty,Object,Object)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Initializes a new instance of the <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> class.\n  remarks: Implementers of custom events that report dependency property changes should use this constructor for populating the event data with the specifics of the change when the event is raised.\n  syntax:\n    content: public DependencyPropertyChangedEventArgs (System.Windows.DependencyProperty property, object oldValue, object newValue);\n    parameters:\n    - id: property\n      type: System.Windows.DependencyProperty\n      description: The identifier for the dependency property that changed.\n    - id: oldValue\n      type: System.Object\n      description: The value of the property before the change reported by the relevant event or state change.\n    - id: newValue\n      type: System.Object\n      description: The value of the property after the change reported by the relevant event or state change.\n  overload: System.Windows.DependencyPropertyChangedEventArgs.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: DependencyPropertyChangedEventArgs.Equals(Object)\n  fullName: System.Windows.DependencyPropertyChangedEventArgs.Equals(Object)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Determines whether the provided object is equivalent to the current <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref>.\n  remarks: This implementation relies on value equivalence of all properties, including internal properties.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare to the current <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the provided object is equivalent to the current <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.DependencyPropertyChangedEventArgs.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Windows.DependencyPropertyChangedEventArgs)\n  id: Equals(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  langs:\n  - csharp\n  name: Equals(DependencyPropertyChangedEventArgs)\n  nameWithType: DependencyPropertyChangedEventArgs.Equals(DependencyPropertyChangedEventArgs)\n  fullName: System.Windows.DependencyPropertyChangedEventArgs.Equals(DependencyPropertyChangedEventArgs)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Determines whether the provided <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> is equivalent to the current <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref>.\n  remarks: This implementation relies on value equivalence of all properties, including internal properties.\n  syntax:\n    content: public bool Equals (System.Windows.DependencyPropertyChangedEventArgs args);\n    parameters:\n    - id: args\n      type: System.Windows.DependencyPropertyChangedEventArgs\n      description: The <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> to compare to the current <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref>\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the provided <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> is equivalent to the current <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.DependencyPropertyChangedEventArgs.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.DependencyPropertyChangedEventArgs.GetHashCode\n  id: GetHashCode\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: DependencyPropertyChangedEventArgs.GetHashCode()\n  fullName: System.Windows.DependencyPropertyChangedEventArgs.GetHashCode()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Gets a hash code  for this <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref>.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A signed 32-bit integer hash code.\n  overload: System.Windows.DependencyPropertyChangedEventArgs.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.DependencyPropertyChangedEventArgs.NewValue\n  id: NewValue\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  langs:\n  - csharp\n  name: NewValue\n  nameWithType: DependencyPropertyChangedEventArgs.NewValue\n  fullName: System.Windows.DependencyPropertyChangedEventArgs.NewValue\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Gets the value of the property after the change.\n  remarks: The type of the value provided should always be castable to the type of the dependency property being reported.\n  example:\n  - \"The following example uses the <xref:System.Windows.DependencyPropertyChangedEventArgs> class in the context of a <xref:System.Windows.PropertyChangedCallback> for a particular property of a custom class that also defines events. The callback takes the results of old and new values from the property system as communicated by <xref:System.Windows.DependencyPropertyChangedEventArgs>, and repackages these into a different events arguments class <xref:System.Windows.RoutedPropertyChangedEventArgs%601>. The new arguments are then used as the data for a \\\"ValueChanged\\\" event defined by and raised by the custom class.  \\n  \\n [!code-cs[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/add/codesnippet/csharp/NumericUpDownOneProject/NumericUpDown.cs#dependencypropertychangedeventargs)]\\n [!code-vb[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/add/codesnippet/visualbasic/numericupdownoneproject/numericupdown.vb#dependencypropertychangedeventargs)]\"\n  syntax:\n    content: public object NewValue { get; }\n    return:\n      type: System.Object\n      description: The property value after the change.\n  overload: System.Windows.DependencyPropertyChangedEventArgs.NewValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.DependencyPropertyChangedEventArgs.OldValue\n  id: OldValue\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  langs:\n  - csharp\n  name: OldValue\n  nameWithType: DependencyPropertyChangedEventArgs.OldValue\n  fullName: System.Windows.DependencyPropertyChangedEventArgs.OldValue\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Gets the value of the property before the change.\n  remarks: The type of the value provided should always be castable to the type of the dependency property being reported.\n  example:\n  - \"The following example uses the <xref:System.Windows.DependencyPropertyChangedEventArgs> class in the context of a <xref:System.Windows.PropertyChangedCallback> for a particular property of a custom class that also defines events. The callback takes the results of old and new values from the property system as communicated by <xref:System.Windows.DependencyPropertyChangedEventArgs>, and repackages these into a different events arguments class <xref:System.Windows.RoutedPropertyChangedEventArgs%601>. The new arguments are then used as the data for a \\\"ValueChanged\\\" event defined by and raised by the custom class.  \\n  \\n [!code-cs[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/add/codesnippet/csharp/NumericUpDownOneProject/NumericUpDown.cs#dependencypropertychangedeventargs)]\\n [!code-vb[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/add/codesnippet/visualbasic/numericupdownoneproject/numericupdown.vb#dependencypropertychangedeventargs)]\"\n  syntax:\n    content: public object OldValue { get; }\n    return:\n      type: System.Object\n      description: The property value before the change.\n  overload: System.Windows.DependencyPropertyChangedEventArgs.OldValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.DependencyPropertyChangedEventArgs.op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)\n  id: op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  langs:\n  - csharp\n  name: op_Equality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)\n  nameWithType: DependencyPropertyChangedEventArgs.op_Equality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)\n  fullName: System.Windows.DependencyPropertyChangedEventArgs.op_Equality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)\n  type: Operator\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Determines whether two specified <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> objects have the same value.\n  remarks: The implementation uses the same logic as <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>.\n  syntax:\n    content: public static bool op_Equality (System.Windows.DependencyPropertyChangedEventArgs left, System.Windows.DependencyPropertyChangedEventArgs right);\n    parameters:\n    - id: left\n      type: System.Windows.DependencyPropertyChangedEventArgs\n      description: The first <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> to compare.\n    - id: right\n      type: System.Windows.DependencyPropertyChangedEventArgs\n      description: The second <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> instances are equivalent; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.DependencyPropertyChangedEventArgs.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)\n  id: op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  langs:\n  - csharp\n  name: op_Inequality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)\n  nameWithType: DependencyPropertyChangedEventArgs.op_Inequality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)\n  fullName: System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)\n  type: Operator\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Determines whether two specified <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> objects are different.\n  remarks: The implementation returns the negation of the same logic as <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>.\n  syntax:\n    content: public static bool op_Inequality (System.Windows.DependencyPropertyChangedEventArgs left, System.Windows.DependencyPropertyChangedEventArgs right);\n    parameters:\n    - id: left\n      type: System.Windows.DependencyPropertyChangedEventArgs\n      description: The first <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> to compare.\n    - id: right\n      type: System.Windows.DependencyPropertyChangedEventArgs\n      description: The second <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> instances are different; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.DependencyPropertyChangedEventArgs.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.DependencyPropertyChangedEventArgs.Property\n  id: Property\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  langs:\n  - csharp\n  name: Property\n  nameWithType: DependencyPropertyChangedEventArgs.Property\n  fullName: System.Windows.DependencyPropertyChangedEventArgs.Property\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Gets the identifier for the dependency property where the value change occurred.\n  remarks: This property is relevant if used within a common <xref:System.Windows.PropertyChangedCallback> that is registered for several properties, and it is necessary to disambiguate which property change invoked the callback. Property is not typically relevant for raising events, because there is usually a 1:1 correspondence between properties and events that report the property change. The event that was raised is itself the indication of which property changed.\n  syntax:\n    content: public System.Windows.DependencyProperty Property { get; }\n    return:\n      type: System.Windows.DependencyProperty\n      description: The identifier field of the dependency property where the value change occurred.\n  overload: System.Windows.DependencyPropertyChangedEventArgs.Property*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Windows.DependencyPropertyChangedEventArgs.#ctor(System.Windows.DependencyProperty,System.Object,System.Object)\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  isExternal: false\n  name: DependencyPropertyChangedEventArgs(DependencyProperty,Object,Object)\n  nameWithType: DependencyPropertyChangedEventArgs.DependencyPropertyChangedEventArgs(DependencyProperty,Object,Object)\n  fullName: System.Windows.DependencyPropertyChangedEventArgs.DependencyPropertyChangedEventArgs(DependencyProperty,Object,Object)\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Object)\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: DependencyPropertyChangedEventArgs.Equals(Object)\n  fullName: System.Windows.DependencyPropertyChangedEventArgs.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  isExternal: false\n  name: Equals(DependencyPropertyChangedEventArgs)\n  nameWithType: DependencyPropertyChangedEventArgs.Equals(DependencyPropertyChangedEventArgs)\n  fullName: System.Windows.DependencyPropertyChangedEventArgs.Equals(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.DependencyPropertyChangedEventArgs\n  parent: System.Windows\n  isExternal: false\n  name: DependencyPropertyChangedEventArgs\n  nameWithType: DependencyPropertyChangedEventArgs\n  fullName: System.Windows.DependencyPropertyChangedEventArgs\n- uid: System.Windows.DependencyPropertyChangedEventArgs.GetHashCode\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: DependencyPropertyChangedEventArgs.GetHashCode()\n  fullName: System.Windows.DependencyPropertyChangedEventArgs.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.DependencyPropertyChangedEventArgs.NewValue\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  isExternal: false\n  name: NewValue\n  nameWithType: DependencyPropertyChangedEventArgs.NewValue\n  fullName: System.Windows.DependencyPropertyChangedEventArgs.NewValue\n- uid: System.Windows.DependencyPropertyChangedEventArgs.OldValue\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  isExternal: false\n  name: OldValue\n  nameWithType: DependencyPropertyChangedEventArgs.OldValue\n  fullName: System.Windows.DependencyPropertyChangedEventArgs.OldValue\n- uid: System.Windows.DependencyPropertyChangedEventArgs.op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  isExternal: false\n  name: op_Equality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)\n  nameWithType: DependencyPropertyChangedEventArgs.op_Equality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)\n  fullName: System.Windows.DependencyPropertyChangedEventArgs.op_Equality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)\n- uid: System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  isExternal: false\n  name: op_Inequality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)\n  nameWithType: DependencyPropertyChangedEventArgs.op_Inequality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)\n  fullName: System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)\n- uid: System.Windows.DependencyPropertyChangedEventArgs.Property\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  isExternal: false\n  name: Property\n  nameWithType: DependencyPropertyChangedEventArgs.Property\n  fullName: System.Windows.DependencyPropertyChangedEventArgs.Property\n- uid: System.Windows.DependencyPropertyChangedEventArgs.#ctor*\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  isExternal: false\n  name: DependencyPropertyChangedEventArgs\n  nameWithType: DependencyPropertyChangedEventArgs.DependencyPropertyChangedEventArgs\n- uid: System.Windows.DependencyPropertyChangedEventArgs.Equals*\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  isExternal: false\n  name: Equals\n  nameWithType: DependencyPropertyChangedEventArgs.Equals\n- uid: System.Windows.DependencyPropertyChangedEventArgs.GetHashCode*\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  isExternal: false\n  name: GetHashCode\n  nameWithType: DependencyPropertyChangedEventArgs.GetHashCode\n- uid: System.Windows.DependencyPropertyChangedEventArgs.NewValue*\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  isExternal: false\n  name: NewValue\n  nameWithType: DependencyPropertyChangedEventArgs.NewValue\n- uid: System.Windows.DependencyPropertyChangedEventArgs.OldValue*\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  isExternal: false\n  name: OldValue\n  nameWithType: DependencyPropertyChangedEventArgs.OldValue\n- uid: System.Windows.DependencyPropertyChangedEventArgs.op_Equality*\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  isExternal: false\n  name: op_Equality\n  nameWithType: DependencyPropertyChangedEventArgs.op_Equality\n- uid: System.Windows.DependencyPropertyChangedEventArgs.op_Inequality*\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  isExternal: false\n  name: op_Inequality\n  nameWithType: DependencyPropertyChangedEventArgs.op_Inequality\n- uid: System.Windows.DependencyPropertyChangedEventArgs.Property*\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  isExternal: false\n  name: Property\n  nameWithType: DependencyPropertyChangedEventArgs.Property\n"}