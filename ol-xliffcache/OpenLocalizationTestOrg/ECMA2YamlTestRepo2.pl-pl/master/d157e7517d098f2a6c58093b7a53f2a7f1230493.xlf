<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d157e7517d098f2a6c58093b7a53f2a7f1230493</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xml.Serialization.Configuration.RootedPathValidator.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a262e388a2c29bcb34a48f79c3e575a37897a3a2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e5986ebfa8a5b073b637ca9943c9a065b3bb11ff</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Validates the rules governing the use of the <ph id="ph1">`tempFilesLocation`</ph> configuration switch.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>When adding a <ph id="ph1">`WebReference`</ph> object to a Web service in the <ph id="ph2">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>, files are created by the Web service discovery process.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Web service clients learn where to find the Web service description (WSDL) document by adding a <ph id="ph1">`WebReference`</ph> object.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Web service clients then save the discovered documents to the disk by using the <ph id="ph1">`WriteAll`</ph> method.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the discovered documents may be .xsd schema files or service descriptions.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>At the end of the process, the client deletes the files.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can change the default location of the files in the temporary folder by using the <ph id="ph1">`tempFilesLocation`</ph> switch in the <ph id="ph2">`&lt;xmlSerializer&gt;`</ph> element, specified in the Machine.config configuration file, as in the following example.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   &lt;configuration&gt;     &lt;system.web&gt;     &lt;system.xml.serialization&gt;       &lt;xmlSerializer tempFilesLocation=".."/&gt;     &lt;/system.xml.serialization&gt;   &lt;/configuration&gt;   ```</ph>       The value of <ph id="ph2">`tempFilesLocation`</ph> must be an absolute path.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the path specified is not absolute, the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> generates a &lt;xref:System.Configuration.ConfigurationErrorsException&gt; exception when the configuration section is referenced.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the property is truncated to remove leading and trailing white spaces.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>If value of the <ph id="ph1">`tempFilesLocation`</ph> property is composed of white space, the default %TMP% location is used for the compilation.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The same default behavior occurs when no <ph id="ph1">`tempFilesLocation`</ph> switch is specified.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Xml.Serialization.XmlSerializer&gt; does not check to see whether the path exists.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it does not, a &lt;xref:System.IO.DirectoryNotFoundException&gt; is generated.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is identical to the default behavior of the <ph id="ph1">`XmlSerializer`</ph> if the %TMP% path does not exist.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xml.Serialization.Configuration.RootedPathValidator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Determines whether the type of the object can be validated.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The type of the object.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p2">&lt;/code&gt;</ept> parameter matches a valid <bpt id="p3">&lt;xref uid="langword_csharp_XMLSerializer" name="XMLSerializer" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> object; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Determines whether the value of an object is valid.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`XmlSerializer`</ph> object to validate is passed as a parameter of the <ph id="ph2">`Validate`</ph> method.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The value of an object.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>