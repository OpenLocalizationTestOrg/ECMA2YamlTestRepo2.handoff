<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ad729d2b8c8e87ba733e8abf3326b961459f60ff</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.TypeDescriptionProvider.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ad829cf903708e1555fe0fc9871e04afb0cb2fb6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">877794c9c1aeef5fd43ffb60c71641aea047031c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides supplemental metadata to the <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The TypeDescriptionProvider class dynamically extends the type information associated with a type or object by adding, modifying, or hiding characteristics such as attributes, properties, and events.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>There can be multiple type description provider classes that offer metadata to a single &lt;xref:System.ComponentModel.TypeDescriptor&gt;.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are two ways to associate a TypeDescriptionProvider with a &lt;xref:System.ComponentModel.TypeDescriptor&gt;:      -   At design time, when the target class can be assigned the appropriate &lt;xref:System.ComponentModel.TypeDescriptionProviderAttribute&gt; tag.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   At run time, when one of the &lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt; methods of the &lt;xref:System.ComponentModel.TypeDescriptor&gt; class can be called.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>These overloaded methods require either the target object or its class type.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The TypeDescriptionProvider class relies on a parent object of the same type, supplied during construction.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows classes that derive from &lt;xref:System.ComponentModel.CustomTypeDescriptor&gt; to selectively override methods.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instances of TypeDescriptionProvider are only built upon demand, minimizing the impact of custom type information on performance.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is equivalent to calling the other &lt;xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29&gt; constructor with a parameter value that is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using a parent type description provider.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`parent`</ph> parameter is <ph id="ph2">`null`</ph>, all &lt;xref:System.ComponentModel.TypeDescriptionProvider&gt; methods will return default values.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, all &lt;xref:System.ComponentModel.TypeDescriptionProvider&gt; methods will delegate to the methods of <ph id="ph1">`parent`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the default return values for &lt;xref:System.ComponentModel.TypeDescriptionProvider&gt; methods.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Method|Default return value|   |------------|--------------------------|   |&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A&gt;|<ph id="ph1">`null`</ph>|   |&lt;xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A&gt;|A newly created object through a call to the &lt;xref:System.Activator.CreateInstance%2A&gt; method.|   |&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A&gt;|A default instance of a &lt;xref:System.ComponentModel.CustomTypeDescriptor&gt; class.|   |&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;|A default instance of a &lt;xref:System.ComponentModel.CustomTypeDescriptor&gt; class.|   |&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;|The <ph id="ph2">`objectType`</ph> first parameter.|</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The parent type description provider.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Creates an object that can substitute for another data type.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IServiceProvider&gt; specified by the <ph id="ph1">`provider`</ph> parameter is passed in by the &lt;xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=fullName&gt; method of the &lt;xref:System.ComponentModel.TypeDescriptor&gt; class.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`provider`</ph> is not <ph id="ph2">`null`</ph>, the service provider can be used by the type description provider to obtain additional context about the creation call.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The CreateInstance method is <ph id="ph1">`virtual`</ph> and, by default, returns the result of the &lt;xref:System.Activator.CreateInstance%2A?displayProperty=fullName&gt; method if <ph id="ph2">`provider`</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, this method will invoke the CreateInstance method of the parent provider.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An optional service provider.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The type of object to create.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This parameter is never <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>An optional array of types that represent the parameter types to be passed to the object's constructor.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This array can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or of zero length.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An optional array of parameter values to pass to the object's constructor.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The substitute &lt;xref:System.Object&gt;.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets a per-object cache, accessed as an &lt;xref:System.Collections.IDictionary&gt; of key/value pairs.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.ComponentModel.TypeDescriptor&gt; may need to perform complex operations on collections of metadata.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because types are not unloaded for the life of a domain, the &lt;xref:System.ComponentModel.TypeDescriptor&gt; class will automatically cache the results of these operations based on type.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, some operations use live object instances.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>These operations cannot be cached within the &lt;xref:System.ComponentModel.TypeDescriptor&gt; class because caching them would prevent the object from being garbage collected.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, the &lt;xref:System.ComponentModel.TypeDescriptor&gt; class allows for a per-object cache, accessed as an &lt;xref:System.Collections.IDictionary&gt; of key/value pairs, to exist on an object.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetCache method returns an instance of this cache.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetCache method will return <ph id="ph1">`null`</ph> if there is no supported cache for an object.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default &lt;xref:System.ComponentModel.TypeDescriptionProvider&gt; used by &lt;xref:System.ComponentModel.TypeDescriptor&gt; examines the object to see if it is a sited component that implements the &lt;xref:System.ComponentModel.Design.IDictionaryService&gt; interface.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the object is, it uses the dictionary service to store the object's cache.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the object it returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other type description providers may provide their own implementation here.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, dependency objects can just attach a property of type &lt;xref:System.Collections.IDictionary&gt;.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The object for which to get the cache.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IDictionary&gt; if the provided object supports caching; otherwise, <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Gets an extended custom type descriptor for the given object.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>An extended type descriptor is a custom type descriptor that offers properties that other objects have added to this object, but that are not actually defined on the object.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> component model, objects that implement the &lt;xref:System.ComponentModel.IExtenderProvider&gt; interface can attach properties to other objects that reside in the same logical container.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The overloaded &lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt; methods do not return a type descriptor that provides these extra extended properties.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetExtendedTypeDescriptor method returns the set of these extended properties.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ComponentModel.TypeDescriptor&gt; will automatically merge the results of these two property collections.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>While the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> component model supports only extended properties, GetExtendedTypeDescriptor can be used for extended attributes as well as events, if the type description provider supports it.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>GetExtendedTypeDescriptor is <ph id="ph1">`virtual`</ph> and, by default, returns a custom type descriptor that returns empty results if no parent provider was passed.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a parent provider was passed, this method will invoke the parent provider's GetExtendedTypeDescriptor method.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The object for which to get the extended type descriptor.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.ICustomTypeDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that can provide extended metadata for the object.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets the extender providers for the specified object.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The object to get extender providers for.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>An array of extender providers for <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">instance</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;instance&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Gets the name of the specified component, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the component has no name.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The specified component.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The name of the specified component.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Performs normal reflection against the given object.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt; method is a lower-level version of the &lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no custom type descriptor can be located for an object, &lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt; is called to perform normal reflection against the object.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method overload if you have called a type descriptor member that uses an instance instead of a type.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>An instance of the type (should not be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>).</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The type of reflection for this <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">instance</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;instance&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Performs normal reflection against a type.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt; method is a lower-level version of the &lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no custom type descriptor can be located for an object, &lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt; is called to perform normal reflection against the object.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method overload if you have called a type descriptor member that uses a type instead of an instance.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The type of object for which to retrieve the <bpt id="p1">&lt;xref href="System.Reflection.IReflect"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The type of reflection for this <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">objectType</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;objectType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Performs normal reflection against the given object with the given type.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt; method is a lower-level version of the &lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no custom type descriptor can be located for an object, &lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt; is called to perform normal reflection against the object.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The type of object for which to retrieve the <bpt id="p1">&lt;xref href="System.Reflection.IReflect"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>An instance of the type.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The type of reflection for this <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">objectType</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Converts a reflection type into a runtime type.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetRuntimeType method reverses the&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt; method to convert a reflection type back into a runtime type.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using the GetRuntimeType method is preferred over using the &lt;xref:System.Type.UnderlyingSystemType%2A&gt; property, which was used in earlier versions to return the runtime type.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The type to convert to its runtime equivalent.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; that represents the runtime equivalent of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">reflectionType</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;reflectionType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Gets a custom type descriptor for the given object.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>An instance of the type.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no instance was passed to the <bpt id="p2">&lt;xref href="System.ComponentModel.TypeDescriptor"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.ICustomTypeDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that can provide metadata for the type.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;instance&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Gets a custom type descriptor for the given type.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The type of object for which to retrieve the type descriptor.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.ICustomTypeDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that can provide metadata for the type.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Gets a custom type descriptor for the given type and object.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is prototyped as <ph id="ph1">`virtual`</ph> and, by default, returns an empty descriptor if no parent provider was passed.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a parent provider was passed, this method will invoke the parent provider's GetTypeDescriptor method.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The type of object for which to retrieve the type descriptor.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>An instance of the type.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no instance was passed to the <bpt id="p2">&lt;xref href="System.ComponentModel.TypeDescriptor"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.ICustomTypeDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that can provide metadata for the type.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the specified type is compatible with the type description and its chain of type description providers.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The type to test for compatibility.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p2">&lt;/code&gt;</ept> is compatible with the type description and its chain of type description providers; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>