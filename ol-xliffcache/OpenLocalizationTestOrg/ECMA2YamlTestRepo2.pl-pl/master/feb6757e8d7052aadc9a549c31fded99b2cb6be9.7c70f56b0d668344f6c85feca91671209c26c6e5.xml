{"nodes":[{"pos":[1742,1848],"content":"Defines an environment for the objects that are resident inside it and for which a policy can be enforced.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines an environment for the objects that are resident inside it and for which a policy can be enforced.","pos":[0,106]}]},{"pos":[4032,4134],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.Contexts.Context\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Contexts.Context\"></xref> class."},{"pos":[4696,4727],"content":"Allocates an unnamed data slot.","needQuote":true,"needEscape":true,"nodes":[{"content":"Allocates an unnamed data slot.","pos":[0,31]}]},{"pos":[4739,4781],"content":"The slot is allocated on all the contexts.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The slot is allocated on all the contexts.","pos":[0,42]}]},{"pos":[4947,4965],"content":"A local data slot.","needQuote":true,"needEscape":true,"nodes":[{"content":"A local data slot.","pos":[0,18]}]},{"pos":[5550,5578],"content":"Allocates a named data slot.","needQuote":true,"needEscape":true,"nodes":[{"content":"Allocates a named data slot.","pos":[0,28]}]},{"pos":[5590,5694],"content":"The slot is allocated on all the contexts. Named data slots are public and can be manipulated by anyone.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The slot is allocated on all the contexts. Named data slots are public and can be manipulated by anyone.","pos":[0,104],"nodes":[{"content":"The slot is allocated on all the contexts.","pos":[0,42]},{"content":"Named data slots are public and can be manipulated by anyone.","pos":[43,104]}]}]},{"pos":[5864,5900],"content":"The required name for the data slot.","needQuote":true,"needEscape":true,"nodes":[{"content":"The required name for the data slot.","pos":[0,36]}]},{"pos":[5970,5995],"content":"A local data slot object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A local data slot object.","pos":[0,25]}]},{"pos":[6473,6517],"content":"Gets the context ID for the current context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the context ID for the current context.","pos":[0,44]}]},{"pos":[6635,6674],"content":"The context ID for the current context.","needQuote":true,"needEscape":true,"nodes":[{"content":"The context ID for the current context.","pos":[0,39]}]},{"pos":[7180,7229],"content":"Gets the array of the current context properties.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the array of the current context properties.","pos":[0,49]}]},{"pos":[7442,7613],"content":"The current context properties array; otherwise, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the context does not have any properties attributed to it.","needQuote":true,"needEscape":true,"source":"The current context properties array; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the context does not have any properties attributed to it."},{"pos":[8112,8172],"content":"Gets the default context for the current application domain.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the default context for the current application domain.","pos":[0,60]}]},{"pos":[8184,8315],"content":"Every thread in an application domain for which a context is not explicitly set is considered to be running in the default context.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Every thread in an application domain for which a context is not explicitly set is considered to be running in the default context.","pos":[0,131]}]},{"pos":[8502,8578],"content":"The default context for the <bpt id=\"p1\">&lt;xref href=\"System.AppDomain\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> namespace.","needQuote":true,"needEscape":true,"source":"The default context for the <xref href=\"System.AppDomain\"></xref> namespace."},{"pos":[9228,9261],"content":"Executes code in another context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Executes code in another context.","pos":[0,33]}]},{"pos":[9273,9500],"content":"A callback can be done by calling the DoCallBack method on it by passing in a delegate. The delegate is used to request a callback. The delegate must be a <xref:System.Runtime.Remoting.Contexts.CrossContextDelegate> class type.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A callback can be done by calling the DoCallBack method on it by passing in a delegate. The delegate is used to request a callback. The delegate must be a <xref:System.Runtime.Remoting.Contexts.CrossContextDelegate> class type.","pos":[0,227],"nodes":[{"content":"A callback can be done by calling the DoCallBack method on it by passing in a delegate.","pos":[0,87]},{"content":"The delegate is used to request a callback.","pos":[88,131]},{"content":"The delegate must be a &lt;xref:System.Runtime.Remoting.Contexts.CrossContextDelegate&gt; class type.","pos":[132,227],"source":" The delegate must be a <xref:System.Runtime.Remoting.Contexts.CrossContextDelegate> class type."}]}]},{"pos":[9727,9769],"content":"The delegate used to request the callback.","needQuote":true,"needEscape":true,"nodes":[{"content":"The delegate used to request the callback.","pos":[0,42]}]},{"pos":[10235,10293],"content":"Cleans up the backing objects for the nondefault contexts.","needQuote":true,"needEscape":true,"nodes":[{"content":"Cleans up the backing objects for the nondefault contexts.","pos":[0,58]}]},{"pos":[10305,10412],"content":"For default contexts, backing objects are cleaned up during shut down of the <xref:System.AppDomain> class.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"For default contexts, backing objects are cleaned up during shut down of the &lt;xref:System.AppDomain&gt; class.","pos":[0,107],"source":"For default contexts, backing objects are cleaned up during shut down of the <xref:System.AppDomain> class."}]},{"pos":[11024,11068],"content":"Frees a named data slot on all the contexts.","needQuote":true,"needEscape":true,"nodes":[{"content":"Frees a named data slot on all the contexts.","pos":[0,44]}]},{"pos":[11080,11141],"content":"Named data slots are public and can be manipulated by anyone.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Named data slots are public and can be manipulated by anyone.","pos":[0,61]}]},{"pos":[11293,11327],"content":"The name of the data slot to free.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the data slot to free.","pos":[0,34]}]},{"pos":[11790,11893],"content":"Freezes the context, making it impossible to add or remove context properties from the current context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezes the context, making it impossible to add or remove context properties from the current context.","pos":[0,103]}]},{"pos":[11905,11974],"content":"Context properties cannot be added after the context has been frozen.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Context properties cannot be added after the context has been frozen.","pos":[0,69]}]},{"pos":[12233,12263],"content":"The context is already frozen.","needQuote":true,"needEscape":true,"nodes":[{"content":"The context is already frozen.","pos":[0,30]}]},{"pos":[12750,12817],"content":"Retrieves the value from the specified slot on the current context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the value from the specified slot on the current context.","pos":[0,67]}]},{"pos":[12985,13022],"content":"The data slot that contains the data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data slot that contains the data.","pos":[0,37]}]},{"pos":[13080,13131],"content":"Returns the data associated with <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">slot</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the data associated with <code>slot</code>."},{"pos":[13682,13709],"content":"Looks up a named data slot.","needQuote":true,"needEscape":true,"nodes":[{"content":"Looks up a named data slot.","pos":[0,27]}]},{"pos":[13721,13838],"content":"If the name has not been used, a new slot is allocated. Named data slots are public and can be manipulated by anyone.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the name has not been used, a new slot is allocated. Named data slots are public and can be manipulated by anyone.","pos":[0,117],"nodes":[{"content":"If the name has not been used, a new slot is allocated.","pos":[0,55]},{"content":"Named data slots are public and can be manipulated by anyone.","pos":[56,117]}]}]},{"pos":[14003,14022],"content":"The data slot name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data slot name.","pos":[0,19]}]},{"pos":[14092,14118],"content":"Returns a local data slot.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a local data slot.","pos":[0,26]}]},{"pos":[14653,14708],"content":"Returns a specific context property, specified by name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a specific context property, specified by name.","pos":[0,55]}]},{"pos":[14900,14925],"content":"The name of the property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the property.","pos":[0,25]}]},{"pos":[15019,15050],"content":"The specified context property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified context property.","pos":[0,31]}]},{"pos":[15957,16110],"content":"Registers a dynamic property implementing the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.Contexts.IDynamicProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> interface with the remoting service.","needQuote":true,"needEscape":true,"source":"Registers a dynamic property implementing the <xref href=\"System.Runtime.Remoting.Contexts.IDynamicProperty\"></xref> interface with the remoting service."},{"pos":[16123,16808],"content":"Based on `obj` and `ctx`, `prop` is asked to contribute a sink that is placed at some location in the path of remoting calls. If multiple properties are registered, their sinks will be called in an arbitrary order that can change between calls.       If `obj` is not `null`, and then if it is a proxy, all calls made on the proxy are intercepted. Otherwise, if `obj` is a real object, all calls on the object are intercepted. The `ctx` parameter must be `null`.       If `ctx` is not `null`, `obj` must be `null` and all calls entering and leaving the context are intercepted.       If both `ctx` and `obj` are `null`, all calls entering and leaving all contexts are intercepted.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Based on <ph id=\"ph1\">`obj`</ph> and <ph id=\"ph2\">`ctx`</ph>, <ph id=\"ph3\">`prop`</ph> is asked to contribute a sink that is placed at some location in the path of remoting calls.","pos":[0,125],"source":"Based on `obj` and `ctx`, `prop` is asked to contribute a sink that is placed at some location in the path of remoting calls."},{"content":"If multiple properties are registered, their sinks will be called in an arbitrary order that can change between calls.","pos":[126,244]},{"content":"If <ph id=\"ph1\">`obj`</ph> is not <ph id=\"ph2\">`null`</ph>, and then if it is a proxy, all calls made on the proxy are intercepted.","pos":[251,346],"source":"       If `obj` is not `null`, and then if it is a proxy, all calls made on the proxy are intercepted."},{"content":"Otherwise, if <ph id=\"ph1\">`obj`</ph> is a real object, all calls on the object are intercepted.","pos":[347,425],"source":" Otherwise, if `obj` is a real object, all calls on the object are intercepted."},{"content":"The <ph id=\"ph1\">`ctx`</ph> parameter must be <ph id=\"ph2\">`null`</ph>.","pos":[426,461],"source":" The `ctx` parameter must be `null`."},{"content":"If <ph id=\"ph1\">`ctx`</ph> is not <ph id=\"ph2\">`null`</ph>, <ph id=\"ph3\">`obj`</ph> must be <ph id=\"ph4\">`null`</ph> and all calls entering and leaving the context are intercepted.","pos":[468,576],"source":"       If `ctx` is not `null`, `obj` must be `null` and all calls entering and leaving the context are intercepted."},{"content":"If both <ph id=\"ph1\">`ctx`</ph> and <ph id=\"ph2\">`obj`</ph> are <ph id=\"ph3\">`null`</ph>, all calls entering and leaving all contexts are intercepted.","pos":[583,679],"source":"       If both `ctx` and `obj` are `null`, all calls entering and leaving all contexts are intercepted."}]},{"pos":[17116,17149],"content":"The dynamic property to register.","needQuote":true,"needEscape":true,"nodes":[{"content":"The dynamic property to register.","pos":[0,33]}]},{"pos":[17221,17277],"content":"The object/proxy for which the <ph id=\"ph1\">`property`</ph> is registered.","needQuote":true,"needEscape":true,"source":"The object/proxy for which the `property` is registered."},{"pos":[17364,17415],"content":"The context for which the <ph id=\"ph1\">`property`</ph> is registered.","needQuote":true,"needEscape":true,"source":"The context for which the `property` is registered."},{"pos":[17474,17654],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the property was successfully registered; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the property was successfully registered; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[17849,18067],"content":"Either <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">prop</ph><ept id=\"p1\">&lt;/code&gt;</ept> or its name is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, or it is not dynamic (it does not implement <bpt id=\"p3\">&lt;xref href=\"System.Runtime.Remoting.Contexts.IDynamicProperty\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>).","needQuote":true,"needEscape":true,"source":"Either <code>prop</code> or its name is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, or it is not dynamic (it does not implement <xref href=\"System.Runtime.Remoting.Contexts.IDynamicProperty\"></xref>)."},{"pos":[18162,18326],"content":"Both an object as well as a context are specified (both <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">ctx</ph><ept id=\"p2\">&lt;/code&gt;</ept> are not <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>).","needQuote":true,"needEscape":true,"source":"Both an object as well as a context are specified (both <code>obj</code> and <code>ctx</code> are not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>)."},{"pos":[18862,18921],"content":"Sets the data in the specified slot on the current context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the data in the specified slot on the current context.","pos":[0,59]}]},{"pos":[19100,19144],"content":"The data slot where the data is to be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data slot where the data is to be added.","pos":[0,44]}]},{"pos":[19205,19234],"content":"The data that is to be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data that is to be added.","pos":[0,29]}]},{"pos":[19862,19903],"content":"Sets a specific context property by name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets a specific context property by name.","pos":[0,41]}]},{"pos":[19915,19971],"content":"Adding properties to the default context is not allowed.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Adding properties to the default context is not allowed.","pos":[0,56]}]},{"pos":[20197,20225],"content":"The actual context property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The actual context property.","pos":[0,28]}]},{"pos":[20416,20438],"content":"The context is frozen.","needQuote":true,"needEscape":true,"nodes":[{"content":"The context is frozen.","pos":[0,22]}]},{"pos":[20541,20639],"content":"The property or the property name is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The property or the property name is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[21023,21098],"content":"Returns a <xref:System.String> class representation of the current context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a &lt;xref:System.String&gt; class representation of the current context.","pos":[0,75],"source":"Returns a <xref:System.String> class representation of the current context."}]},{"pos":[21234,21301],"content":"A <xref:System.String> class representation of the current context.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; class representation of the current context.","pos":[0,67],"source":"A <xref:System.String> class representation of the current context."}]},{"pos":[22113,22242],"content":"Unregisters a dynamic property implementing the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.Contexts.IDynamicProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> interface.","needQuote":true,"needEscape":true,"source":"Unregisters a dynamic property implementing the <xref href=\"System.Runtime.Remoting.Contexts.IDynamicProperty\"></xref> interface."},{"pos":[22472,22519],"content":"The name of the dynamic property to unregister.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the dynamic property to unregister.","pos":[0,47]}]},{"pos":[22591,22647],"content":"The object/proxy for which the <ph id=\"ph1\">`property`</ph> is registered.","needQuote":true,"needEscape":true,"source":"The object/proxy for which the `property` is registered."},{"pos":[22734,22785],"content":"The context for which the <ph id=\"ph1\">`property`</ph> is registered.","needQuote":true,"needEscape":true,"source":"The context for which the `property` is registered."},{"pos":[22844,23024],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the object was successfully unregistered; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the object was successfully unregistered; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[23221,23317],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>name</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[23412,23576],"content":"Both an object as well as a context are specified (both <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">ctx</ph><ept id=\"p2\">&lt;/code&gt;</ept> are not <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>).","needQuote":true,"needEscape":true,"source":"Both an object as well as a context are specified (both <code>obj</code> and <code>ctx</code> are not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>)."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.Contexts.Context\n  id: Context\n  children:\n  - System.Runtime.Remoting.Contexts.Context.#ctor\n  - System.Runtime.Remoting.Contexts.Context.AllocateDataSlot\n  - System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot(System.String)\n  - System.Runtime.Remoting.Contexts.Context.ContextID\n  - System.Runtime.Remoting.Contexts.Context.ContextProperties\n  - System.Runtime.Remoting.Contexts.Context.DefaultContext\n  - System.Runtime.Remoting.Contexts.Context.DoCallBack(System.Runtime.Remoting.Contexts.CrossContextDelegate)\n  - System.Runtime.Remoting.Contexts.Context.Finalize\n  - System.Runtime.Remoting.Contexts.Context.FreeNamedDataSlot(System.String)\n  - System.Runtime.Remoting.Contexts.Context.Freeze\n  - System.Runtime.Remoting.Contexts.Context.GetData(System.LocalDataStoreSlot)\n  - System.Runtime.Remoting.Contexts.Context.GetNamedDataSlot(System.String)\n  - System.Runtime.Remoting.Contexts.Context.GetProperty(System.String)\n  - System.Runtime.Remoting.Contexts.Context.RegisterDynamicProperty(System.Runtime.Remoting.Contexts.IDynamicProperty,System.ContextBoundObject,System.Runtime.Remoting.Contexts.Context)\n  - System.Runtime.Remoting.Contexts.Context.SetData(System.LocalDataStoreSlot,System.Object)\n  - System.Runtime.Remoting.Contexts.Context.SetProperty(System.Runtime.Remoting.Contexts.IContextProperty)\n  - System.Runtime.Remoting.Contexts.Context.ToString\n  - System.Runtime.Remoting.Contexts.Context.UnregisterDynamicProperty(System.String,System.ContextBoundObject,System.Runtime.Remoting.Contexts.Context)\n  langs:\n  - csharp\n  name: Context\n  nameWithType: Context\n  fullName: System.Runtime.Remoting.Contexts.Context\n  type: Class\n  summary: Defines an environment for the objects that are resident inside it and for which a policy can be enforced.\n  remarks: \"A context is an ordered sequence of properties that define an environment for the objects resident inside it. Contexts get created during the activation process for objects that are configured to require certain automatic services, such as synchronization, transactions, just-in-time activation, security, and so on. Multiple objects can live inside a context.  \\n  \\n Classes are marked with an instance of the <xref:System.Runtime.Remoting.Contexts.ContextAttribute> class, which provides the usage rules. Whenever a new object is instantiated, the .NET Framework finds a compatible or creates a new instance of the Context class for the object. Once an object is placed in a context, it stays in it for life. Classes that can be bound to a context are called context-bound classes. When accessed from another context, such classes are referenced directly by using a proxy. Any call from an object in one context to an object in another context will go through a context proxy and be affected by the policy that the combined context properties enforce.  \\n  \\n A new object's context is generally chosen based on meta-data attributes on the class. This mechanism is extensible through custom attributes. These are known as static-context properties, which are compiled into the class meta-data. Dynamic-context properties (also known as configuration properties) can be applied and configured by administrators.  \\n  \\n For more information on contexts, see [&#91;\\\\<topic://cpconboundariesprocessesapplicationdomainscontexts>&#93;](http://msdn.microsoft.com/en-us/7574180d-70df-44b8-8b78-55a119f2c96d).\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class Context\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Contexts.Context.#ctor\n  id: '#ctor'\n  parent: System.Runtime.Remoting.Contexts.Context\n  langs:\n  - csharp\n  name: Context()\n  nameWithType: Context.Context()\n  fullName: System.Runtime.Remoting.Contexts.Context.Context()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Contexts\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Contexts.Context\"></xref> class.\n  syntax:\n    content: public Context ();\n    parameters: []\n  overload: System.Runtime.Remoting.Contexts.Context.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Contexts.Context.AllocateDataSlot\n  id: AllocateDataSlot\n  parent: System.Runtime.Remoting.Contexts.Context\n  langs:\n  - csharp\n  name: AllocateDataSlot()\n  nameWithType: Context.AllocateDataSlot()\n  fullName: System.Runtime.Remoting.Contexts.Context.AllocateDataSlot()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Contexts\n  summary: Allocates an unnamed data slot.\n  remarks: The slot is allocated on all the contexts.\n  syntax:\n    content: public static LocalDataStoreSlot AllocateDataSlot ();\n    parameters: []\n    return:\n      type: System.LocalDataStoreSlot\n      description: A local data slot.\n  overload: System.Runtime.Remoting.Contexts.Context.AllocateDataSlot*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot(System.String)\n  id: AllocateNamedDataSlot(System.String)\n  parent: System.Runtime.Remoting.Contexts.Context\n  langs:\n  - csharp\n  name: AllocateNamedDataSlot(String)\n  nameWithType: Context.AllocateNamedDataSlot(String)\n  fullName: System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Contexts\n  summary: Allocates a named data slot.\n  remarks: The slot is allocated on all the contexts. Named data slots are public and can be manipulated by anyone.\n  syntax:\n    content: public static LocalDataStoreSlot AllocateNamedDataSlot (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The required name for the data slot.\n    return:\n      type: System.LocalDataStoreSlot\n      description: A local data slot object.\n  overload: System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Contexts.Context.ContextID\n  id: ContextID\n  parent: System.Runtime.Remoting.Contexts.Context\n  langs:\n  - csharp\n  name: ContextID\n  nameWithType: Context.ContextID\n  fullName: System.Runtime.Remoting.Contexts.Context.ContextID\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Contexts\n  summary: Gets the context ID for the current context.\n  syntax:\n    content: public virtual int ContextID { get; }\n    return:\n      type: System.Int32\n      description: The context ID for the current context.\n  overload: System.Runtime.Remoting.Contexts.Context.ContextID*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Contexts.Context.ContextProperties\n  id: ContextProperties\n  parent: System.Runtime.Remoting.Contexts.Context\n  langs:\n  - csharp\n  name: ContextProperties\n  nameWithType: Context.ContextProperties\n  fullName: System.Runtime.Remoting.Contexts.Context.ContextProperties\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Contexts\n  summary: Gets the array of the current context properties.\n  syntax:\n    content: public virtual System.Runtime.Remoting.Contexts.IContextProperty[] ContextProperties { get; }\n    return:\n      type: System.Runtime.Remoting.Contexts.IContextProperty[]\n      description: The current context properties array; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the context does not have any properties attributed to it.\n  overload: System.Runtime.Remoting.Contexts.Context.ContextProperties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Contexts.Context.DefaultContext\n  id: DefaultContext\n  parent: System.Runtime.Remoting.Contexts.Context\n  langs:\n  - csharp\n  name: DefaultContext\n  nameWithType: Context.DefaultContext\n  fullName: System.Runtime.Remoting.Contexts.Context.DefaultContext\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Contexts\n  summary: Gets the default context for the current application domain.\n  remarks: Every thread in an application domain for which a context is not explicitly set is considered to be running in the default context.\n  syntax:\n    content: public static System.Runtime.Remoting.Contexts.Context DefaultContext { get; }\n    return:\n      type: System.Runtime.Remoting.Contexts.Context\n      description: The default context for the <xref href=\"System.AppDomain\"></xref> namespace.\n  overload: System.Runtime.Remoting.Contexts.Context.DefaultContext*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Contexts.Context.DoCallBack(System.Runtime.Remoting.Contexts.CrossContextDelegate)\n  id: DoCallBack(System.Runtime.Remoting.Contexts.CrossContextDelegate)\n  parent: System.Runtime.Remoting.Contexts.Context\n  langs:\n  - csharp\n  name: DoCallBack(CrossContextDelegate)\n  nameWithType: Context.DoCallBack(CrossContextDelegate)\n  fullName: System.Runtime.Remoting.Contexts.Context.DoCallBack(CrossContextDelegate)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Contexts\n  summary: Executes code in another context.\n  remarks: A callback can be done by calling the DoCallBack method on it by passing in a delegate. The delegate is used to request a callback. The delegate must be a <xref:System.Runtime.Remoting.Contexts.CrossContextDelegate> class type.\n  syntax:\n    content: public void DoCallBack (System.Runtime.Remoting.Contexts.CrossContextDelegate deleg);\n    parameters:\n    - id: deleg\n      type: System.Runtime.Remoting.Contexts.CrossContextDelegate\n      description: The delegate used to request the callback.\n  overload: System.Runtime.Remoting.Contexts.Context.DoCallBack*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Contexts.Context.Finalize\n  id: Finalize\n  parent: System.Runtime.Remoting.Contexts.Context\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: Context.Finalize()\n  fullName: System.Runtime.Remoting.Contexts.Context.Finalize()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Contexts\n  summary: Cleans up the backing objects for the nondefault contexts.\n  remarks: For default contexts, backing objects are cleaned up during shut down of the <xref:System.AppDomain> class.\n  syntax:\n    content: ~Context ();\n    parameters: []\n  overload: System.Runtime.Remoting.Contexts.Context.Finalize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Contexts.Context.FreeNamedDataSlot(System.String)\n  id: FreeNamedDataSlot(System.String)\n  parent: System.Runtime.Remoting.Contexts.Context\n  langs:\n  - csharp\n  name: FreeNamedDataSlot(String)\n  nameWithType: Context.FreeNamedDataSlot(String)\n  fullName: System.Runtime.Remoting.Contexts.Context.FreeNamedDataSlot(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Contexts\n  summary: Frees a named data slot on all the contexts.\n  remarks: Named data slots are public and can be manipulated by anyone.\n  syntax:\n    content: public static void FreeNamedDataSlot (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the data slot to free.\n  overload: System.Runtime.Remoting.Contexts.Context.FreeNamedDataSlot*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Contexts.Context.Freeze\n  id: Freeze\n  parent: System.Runtime.Remoting.Contexts.Context\n  langs:\n  - csharp\n  name: Freeze()\n  nameWithType: Context.Freeze()\n  fullName: System.Runtime.Remoting.Contexts.Context.Freeze()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Contexts\n  summary: Freezes the context, making it impossible to add or remove context properties from the current context.\n  remarks: Context properties cannot be added after the context has been frozen.\n  syntax:\n    content: public virtual void Freeze ();\n    parameters: []\n  overload: System.Runtime.Remoting.Contexts.Context.Freeze*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The context is already frozen.\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Contexts.Context.GetData(System.LocalDataStoreSlot)\n  id: GetData(System.LocalDataStoreSlot)\n  parent: System.Runtime.Remoting.Contexts.Context\n  langs:\n  - csharp\n  name: GetData(LocalDataStoreSlot)\n  nameWithType: Context.GetData(LocalDataStoreSlot)\n  fullName: System.Runtime.Remoting.Contexts.Context.GetData(LocalDataStoreSlot)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Contexts\n  summary: Retrieves the value from the specified slot on the current context.\n  syntax:\n    content: public static object GetData (LocalDataStoreSlot slot);\n    parameters:\n    - id: slot\n      type: System.LocalDataStoreSlot\n      description: The data slot that contains the data.\n    return:\n      type: System.Object\n      description: Returns the data associated with <code>slot</code>.\n  overload: System.Runtime.Remoting.Contexts.Context.GetData*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Contexts.Context.GetNamedDataSlot(System.String)\n  id: GetNamedDataSlot(System.String)\n  parent: System.Runtime.Remoting.Contexts.Context\n  langs:\n  - csharp\n  name: GetNamedDataSlot(String)\n  nameWithType: Context.GetNamedDataSlot(String)\n  fullName: System.Runtime.Remoting.Contexts.Context.GetNamedDataSlot(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Contexts\n  summary: Looks up a named data slot.\n  remarks: If the name has not been used, a new slot is allocated. Named data slots are public and can be manipulated by anyone.\n  syntax:\n    content: public static LocalDataStoreSlot GetNamedDataSlot (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The data slot name.\n    return:\n      type: System.LocalDataStoreSlot\n      description: Returns a local data slot.\n  overload: System.Runtime.Remoting.Contexts.Context.GetNamedDataSlot*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Contexts.Context.GetProperty(System.String)\n  id: GetProperty(System.String)\n  parent: System.Runtime.Remoting.Contexts.Context\n  langs:\n  - csharp\n  name: GetProperty(String)\n  nameWithType: Context.GetProperty(String)\n  fullName: System.Runtime.Remoting.Contexts.Context.GetProperty(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Contexts\n  summary: Returns a specific context property, specified by name.\n  syntax:\n    content: public virtual System.Runtime.Remoting.Contexts.IContextProperty GetProperty (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the property.\n    return:\n      type: System.Runtime.Remoting.Contexts.IContextProperty\n      description: The specified context property.\n  overload: System.Runtime.Remoting.Contexts.Context.GetProperty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Contexts.Context.RegisterDynamicProperty(System.Runtime.Remoting.Contexts.IDynamicProperty,System.ContextBoundObject,System.Runtime.Remoting.Contexts.Context)\n  id: RegisterDynamicProperty(System.Runtime.Remoting.Contexts.IDynamicProperty,System.ContextBoundObject,System.Runtime.Remoting.Contexts.Context)\n  parent: System.Runtime.Remoting.Contexts.Context\n  langs:\n  - csharp\n  name: RegisterDynamicProperty(IDynamicProperty,ContextBoundObject,Context)\n  nameWithType: Context.RegisterDynamicProperty(IDynamicProperty,ContextBoundObject,Context)\n  fullName: System.Runtime.Remoting.Contexts.Context.RegisterDynamicProperty(IDynamicProperty,ContextBoundObject,Context)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Contexts\n  summary: Registers a dynamic property implementing the <xref href=\"System.Runtime.Remoting.Contexts.IDynamicProperty\"></xref> interface with the remoting service.\n  remarks: \"Based on `obj` and `ctx`, `prop` is asked to contribute a sink that is placed at some location in the path of remoting calls. If multiple properties are registered, their sinks will be called in an arbitrary order that can change between calls.  \\n  \\n If `obj` is not `null`, and then if it is a proxy, all calls made on the proxy are intercepted. Otherwise, if `obj` is a real object, all calls on the object are intercepted. The `ctx` parameter must be `null`.  \\n  \\n If `ctx` is not `null`, `obj` must be `null` and all calls entering and leaving the context are intercepted.  \\n  \\n If both `ctx` and `obj` are `null`, all calls entering and leaving all contexts are intercepted.\"\n  syntax:\n    content: public static bool RegisterDynamicProperty (System.Runtime.Remoting.Contexts.IDynamicProperty prop, ContextBoundObject obj, System.Runtime.Remoting.Contexts.Context ctx);\n    parameters:\n    - id: prop\n      type: System.Runtime.Remoting.Contexts.IDynamicProperty\n      description: The dynamic property to register.\n    - id: obj\n      type: System.ContextBoundObject\n      description: The object/proxy for which the `property` is registered.\n    - id: ctx\n      type: System.Runtime.Remoting.Contexts.Context\n      description: The context for which the `property` is registered.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the property was successfully registered; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.Remoting.Contexts.Context.RegisterDynamicProperty*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: Either <code>prop</code> or its name is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, or it is not dynamic (it does not implement <xref href=\"System.Runtime.Remoting.Contexts.IDynamicProperty\"></xref>).\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Both an object as well as a context are specified (both <code>obj</code> and <code>ctx</code> are not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>).\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Contexts.Context.SetData(System.LocalDataStoreSlot,System.Object)\n  id: SetData(System.LocalDataStoreSlot,System.Object)\n  parent: System.Runtime.Remoting.Contexts.Context\n  langs:\n  - csharp\n  name: SetData(LocalDataStoreSlot,Object)\n  nameWithType: Context.SetData(LocalDataStoreSlot,Object)\n  fullName: System.Runtime.Remoting.Contexts.Context.SetData(LocalDataStoreSlot,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Contexts\n  summary: Sets the data in the specified slot on the current context.\n  syntax:\n    content: public static void SetData (LocalDataStoreSlot slot, object data);\n    parameters:\n    - id: slot\n      type: System.LocalDataStoreSlot\n      description: The data slot where the data is to be added.\n    - id: data\n      type: System.Object\n      description: The data that is to be added.\n  overload: System.Runtime.Remoting.Contexts.Context.SetData*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Contexts.Context.SetProperty(System.Runtime.Remoting.Contexts.IContextProperty)\n  id: SetProperty(System.Runtime.Remoting.Contexts.IContextProperty)\n  parent: System.Runtime.Remoting.Contexts.Context\n  langs:\n  - csharp\n  name: SetProperty(IContextProperty)\n  nameWithType: Context.SetProperty(IContextProperty)\n  fullName: System.Runtime.Remoting.Contexts.Context.SetProperty(IContextProperty)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Contexts\n  summary: Sets a specific context property by name.\n  remarks: Adding properties to the default context is not allowed.\n  syntax:\n    content: public virtual void SetProperty (System.Runtime.Remoting.Contexts.IContextProperty prop);\n    parameters:\n    - id: prop\n      type: System.Runtime.Remoting.Contexts.IContextProperty\n      description: The actual context property.\n  overload: System.Runtime.Remoting.Contexts.Context.SetProperty*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The context is frozen.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The property or the property name is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Contexts.Context.ToString\n  id: ToString\n  parent: System.Runtime.Remoting.Contexts.Context\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Context.ToString()\n  fullName: System.Runtime.Remoting.Contexts.Context.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Contexts\n  summary: Returns a <xref:System.String> class representation of the current context.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A <xref:System.String> class representation of the current context.\n  overload: System.Runtime.Remoting.Contexts.Context.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Contexts.Context.UnregisterDynamicProperty(System.String,System.ContextBoundObject,System.Runtime.Remoting.Contexts.Context)\n  id: UnregisterDynamicProperty(System.String,System.ContextBoundObject,System.Runtime.Remoting.Contexts.Context)\n  parent: System.Runtime.Remoting.Contexts.Context\n  langs:\n  - csharp\n  name: UnregisterDynamicProperty(String,ContextBoundObject,Context)\n  nameWithType: Context.UnregisterDynamicProperty(String,ContextBoundObject,Context)\n  fullName: System.Runtime.Remoting.Contexts.Context.UnregisterDynamicProperty(String,ContextBoundObject,Context)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Contexts\n  summary: Unregisters a dynamic property implementing the <xref href=\"System.Runtime.Remoting.Contexts.IDynamicProperty\"></xref> interface.\n  syntax:\n    content: public static bool UnregisterDynamicProperty (string name, ContextBoundObject obj, System.Runtime.Remoting.Contexts.Context ctx);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the dynamic property to unregister.\n    - id: obj\n      type: System.ContextBoundObject\n      description: The object/proxy for which the `property` is registered.\n    - id: ctx\n      type: System.Runtime.Remoting.Contexts.Context\n      description: The context for which the `property` is registered.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the object was successfully unregistered; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.Remoting.Contexts.Context.UnregisterDynamicProperty*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>name</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Both an object as well as a context are specified (both <code>obj</code> and <code>ctx</code> are not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>).\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Runtime.Remoting.Contexts.Context.#ctor\n  parent: System.Runtime.Remoting.Contexts.Context\n  isExternal: false\n  name: Context()\n  nameWithType: Context.Context()\n  fullName: System.Runtime.Remoting.Contexts.Context.Context()\n- uid: System.Runtime.Remoting.Contexts.Context.AllocateDataSlot\n  parent: System.Runtime.Remoting.Contexts.Context\n  isExternal: false\n  name: AllocateDataSlot()\n  nameWithType: Context.AllocateDataSlot()\n  fullName: System.Runtime.Remoting.Contexts.Context.AllocateDataSlot()\n- uid: System.LocalDataStoreSlot\n  parent: System\n  isExternal: false\n  name: LocalDataStoreSlot\n  nameWithType: LocalDataStoreSlot\n  fullName: System.LocalDataStoreSlot\n- uid: System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot(System.String)\n  parent: System.Runtime.Remoting.Contexts.Context\n  isExternal: false\n  name: AllocateNamedDataSlot(String)\n  nameWithType: Context.AllocateNamedDataSlot(String)\n  fullName: System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.Remoting.Contexts.Context.ContextID\n  parent: System.Runtime.Remoting.Contexts.Context\n  isExternal: false\n  name: ContextID\n  nameWithType: Context.ContextID\n  fullName: System.Runtime.Remoting.Contexts.Context.ContextID\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.Remoting.Contexts.Context.ContextProperties\n  parent: System.Runtime.Remoting.Contexts.Context\n  isExternal: false\n  name: ContextProperties\n  nameWithType: Context.ContextProperties\n  fullName: System.Runtime.Remoting.Contexts.Context.ContextProperties\n- uid: System.Runtime.Remoting.Contexts.IContextProperty[]\n  parent: System.Runtime.Remoting.Contexts\n  isExternal: false\n  name: IContextProperty\n  nameWithType: IContextProperty\n  fullName: System.Runtime.Remoting.Contexts.IContextProperty[]\n  spec.csharp:\n  - uid: System.Runtime.Remoting.Contexts.IContextProperty\n    name: IContextProperty\n    nameWithType: IContextProperty\n    fullName: IContextProperty[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.Remoting.Contexts.Context.DefaultContext\n  parent: System.Runtime.Remoting.Contexts.Context\n  isExternal: false\n  name: DefaultContext\n  nameWithType: Context.DefaultContext\n  fullName: System.Runtime.Remoting.Contexts.Context.DefaultContext\n- uid: System.Runtime.Remoting.Contexts.Context\n  parent: System.Runtime.Remoting.Contexts\n  isExternal: false\n  name: Context\n  nameWithType: Context\n  fullName: System.Runtime.Remoting.Contexts.Context\n- uid: System.Runtime.Remoting.Contexts.Context.DoCallBack(System.Runtime.Remoting.Contexts.CrossContextDelegate)\n  parent: System.Runtime.Remoting.Contexts.Context\n  isExternal: false\n  name: DoCallBack(CrossContextDelegate)\n  nameWithType: Context.DoCallBack(CrossContextDelegate)\n  fullName: System.Runtime.Remoting.Contexts.Context.DoCallBack(CrossContextDelegate)\n- uid: System.Runtime.Remoting.Contexts.CrossContextDelegate\n  parent: System.Runtime.Remoting.Contexts\n  isExternal: false\n  name: CrossContextDelegate\n  nameWithType: CrossContextDelegate\n  fullName: System.Runtime.Remoting.Contexts.CrossContextDelegate\n- uid: System.Runtime.Remoting.Contexts.Context.Finalize\n  parent: System.Runtime.Remoting.Contexts.Context\n  isExternal: false\n  name: Finalize()\n  nameWithType: Context.Finalize()\n  fullName: System.Runtime.Remoting.Contexts.Context.Finalize()\n- uid: System.Runtime.Remoting.Contexts.Context.FreeNamedDataSlot(System.String)\n  parent: System.Runtime.Remoting.Contexts.Context\n  isExternal: false\n  name: FreeNamedDataSlot(String)\n  nameWithType: Context.FreeNamedDataSlot(String)\n  fullName: System.Runtime.Remoting.Contexts.Context.FreeNamedDataSlot(String)\n- uid: System.Runtime.Remoting.Contexts.Context.Freeze\n  parent: System.Runtime.Remoting.Contexts.Context\n  isExternal: false\n  name: Freeze()\n  nameWithType: Context.Freeze()\n  fullName: System.Runtime.Remoting.Contexts.Context.Freeze()\n- uid: System.Runtime.Remoting.Contexts.Context.GetData(System.LocalDataStoreSlot)\n  parent: System.Runtime.Remoting.Contexts.Context\n  isExternal: false\n  name: GetData(LocalDataStoreSlot)\n  nameWithType: Context.GetData(LocalDataStoreSlot)\n  fullName: System.Runtime.Remoting.Contexts.Context.GetData(LocalDataStoreSlot)\n- uid: System.Runtime.Remoting.Contexts.Context.GetNamedDataSlot(System.String)\n  parent: System.Runtime.Remoting.Contexts.Context\n  isExternal: false\n  name: GetNamedDataSlot(String)\n  nameWithType: Context.GetNamedDataSlot(String)\n  fullName: System.Runtime.Remoting.Contexts.Context.GetNamedDataSlot(String)\n- uid: System.Runtime.Remoting.Contexts.Context.GetProperty(System.String)\n  parent: System.Runtime.Remoting.Contexts.Context\n  isExternal: false\n  name: GetProperty(String)\n  nameWithType: Context.GetProperty(String)\n  fullName: System.Runtime.Remoting.Contexts.Context.GetProperty(String)\n- uid: System.Runtime.Remoting.Contexts.IContextProperty\n  parent: System.Runtime.Remoting.Contexts\n  isExternal: false\n  name: IContextProperty\n  nameWithType: IContextProperty\n  fullName: System.Runtime.Remoting.Contexts.IContextProperty\n- uid: System.Runtime.Remoting.Contexts.Context.RegisterDynamicProperty(System.Runtime.Remoting.Contexts.IDynamicProperty,System.ContextBoundObject,System.Runtime.Remoting.Contexts.Context)\n  parent: System.Runtime.Remoting.Contexts.Context\n  isExternal: false\n  name: RegisterDynamicProperty(IDynamicProperty,ContextBoundObject,Context)\n  nameWithType: Context.RegisterDynamicProperty(IDynamicProperty,ContextBoundObject,Context)\n  fullName: System.Runtime.Remoting.Contexts.Context.RegisterDynamicProperty(IDynamicProperty,ContextBoundObject,Context)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.Remoting.Contexts.IDynamicProperty\n  parent: System.Runtime.Remoting.Contexts\n  isExternal: false\n  name: IDynamicProperty\n  nameWithType: IDynamicProperty\n  fullName: System.Runtime.Remoting.Contexts.IDynamicProperty\n- uid: System.ContextBoundObject\n  parent: System\n  isExternal: false\n  name: ContextBoundObject\n  nameWithType: ContextBoundObject\n  fullName: System.ContextBoundObject\n- uid: System.Runtime.Remoting.Contexts.Context.SetData(System.LocalDataStoreSlot,System.Object)\n  parent: System.Runtime.Remoting.Contexts.Context\n  isExternal: false\n  name: SetData(LocalDataStoreSlot,Object)\n  nameWithType: Context.SetData(LocalDataStoreSlot,Object)\n  fullName: System.Runtime.Remoting.Contexts.Context.SetData(LocalDataStoreSlot,Object)\n- uid: System.Runtime.Remoting.Contexts.Context.SetProperty(System.Runtime.Remoting.Contexts.IContextProperty)\n  parent: System.Runtime.Remoting.Contexts.Context\n  isExternal: false\n  name: SetProperty(IContextProperty)\n  nameWithType: Context.SetProperty(IContextProperty)\n  fullName: System.Runtime.Remoting.Contexts.Context.SetProperty(IContextProperty)\n- uid: System.Runtime.Remoting.Contexts.Context.ToString\n  parent: System.Runtime.Remoting.Contexts.Context\n  isExternal: false\n  name: ToString()\n  nameWithType: Context.ToString()\n  fullName: System.Runtime.Remoting.Contexts.Context.ToString()\n- uid: System.Runtime.Remoting.Contexts.Context.UnregisterDynamicProperty(System.String,System.ContextBoundObject,System.Runtime.Remoting.Contexts.Context)\n  parent: System.Runtime.Remoting.Contexts.Context\n  isExternal: false\n  name: UnregisterDynamicProperty(String,ContextBoundObject,Context)\n  nameWithType: Context.UnregisterDynamicProperty(String,ContextBoundObject,Context)\n  fullName: System.Runtime.Remoting.Contexts.Context.UnregisterDynamicProperty(String,ContextBoundObject,Context)\n- uid: System.Runtime.Remoting.Contexts.Context.#ctor*\n  parent: System.Runtime.Remoting.Contexts.Context\n  isExternal: false\n  name: Context\n  nameWithType: Context.Context\n- uid: System.Runtime.Remoting.Contexts.Context.AllocateDataSlot*\n  parent: System.Runtime.Remoting.Contexts.Context\n  isExternal: false\n  name: AllocateDataSlot\n  nameWithType: Context.AllocateDataSlot\n- uid: System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot*\n  parent: System.Runtime.Remoting.Contexts.Context\n  isExternal: false\n  name: AllocateNamedDataSlot\n  nameWithType: Context.AllocateNamedDataSlot\n- uid: System.Runtime.Remoting.Contexts.Context.ContextID*\n  parent: System.Runtime.Remoting.Contexts.Context\n  isExternal: false\n  name: ContextID\n  nameWithType: Context.ContextID\n- uid: System.Runtime.Remoting.Contexts.Context.ContextProperties*\n  parent: System.Runtime.Remoting.Contexts.Context\n  isExternal: false\n  name: ContextProperties\n  nameWithType: Context.ContextProperties\n- uid: System.Runtime.Remoting.Contexts.Context.DefaultContext*\n  parent: System.Runtime.Remoting.Contexts.Context\n  isExternal: false\n  name: DefaultContext\n  nameWithType: Context.DefaultContext\n- uid: System.Runtime.Remoting.Contexts.Context.DoCallBack*\n  parent: System.Runtime.Remoting.Contexts.Context\n  isExternal: false\n  name: DoCallBack\n  nameWithType: Context.DoCallBack\n- uid: System.Runtime.Remoting.Contexts.Context.Finalize*\n  parent: System.Runtime.Remoting.Contexts.Context\n  isExternal: false\n  name: Finalize\n  nameWithType: Context.Finalize\n- uid: System.Runtime.Remoting.Contexts.Context.FreeNamedDataSlot*\n  parent: System.Runtime.Remoting.Contexts.Context\n  isExternal: false\n  name: FreeNamedDataSlot\n  nameWithType: Context.FreeNamedDataSlot\n- uid: System.Runtime.Remoting.Contexts.Context.Freeze*\n  parent: System.Runtime.Remoting.Contexts.Context\n  isExternal: false\n  name: Freeze\n  nameWithType: Context.Freeze\n- uid: System.Runtime.Remoting.Contexts.Context.GetData*\n  parent: System.Runtime.Remoting.Contexts.Context\n  isExternal: false\n  name: GetData\n  nameWithType: Context.GetData\n- uid: System.Runtime.Remoting.Contexts.Context.GetNamedDataSlot*\n  parent: System.Runtime.Remoting.Contexts.Context\n  isExternal: false\n  name: GetNamedDataSlot\n  nameWithType: Context.GetNamedDataSlot\n- uid: System.Runtime.Remoting.Contexts.Context.GetProperty*\n  parent: System.Runtime.Remoting.Contexts.Context\n  isExternal: false\n  name: GetProperty\n  nameWithType: Context.GetProperty\n- uid: System.Runtime.Remoting.Contexts.Context.RegisterDynamicProperty*\n  parent: System.Runtime.Remoting.Contexts.Context\n  isExternal: false\n  name: RegisterDynamicProperty\n  nameWithType: Context.RegisterDynamicProperty\n- uid: System.Runtime.Remoting.Contexts.Context.SetData*\n  parent: System.Runtime.Remoting.Contexts.Context\n  isExternal: false\n  name: SetData\n  nameWithType: Context.SetData\n- uid: System.Runtime.Remoting.Contexts.Context.SetProperty*\n  parent: System.Runtime.Remoting.Contexts.Context\n  isExternal: false\n  name: SetProperty\n  nameWithType: Context.SetProperty\n- uid: System.Runtime.Remoting.Contexts.Context.ToString*\n  parent: System.Runtime.Remoting.Contexts.Context\n  isExternal: false\n  name: ToString\n  nameWithType: Context.ToString\n- uid: System.Runtime.Remoting.Contexts.Context.UnregisterDynamicProperty*\n  parent: System.Runtime.Remoting.Contexts.Context\n  isExternal: false\n  name: UnregisterDynamicProperty\n  nameWithType: Context.UnregisterDynamicProperty\n"}