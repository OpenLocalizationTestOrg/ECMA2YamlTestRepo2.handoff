{"nodes":[{"pos":[1751,1865],"content":"Contains a strongly typed collection of <bpt id=\"p1\">&lt;xref href=\"System.Messaging.MessageQueuePermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"Contains a strongly typed collection of <xref href=\"System.Messaging.MessageQueuePermissionEntry\"></xref> objects."},{"pos":[4684,4786],"content":"Adds a specified <bpt id=\"p1\">&lt;xref href=\"System.Messaging.MessageQueuePermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to this collection.","needQuote":true,"needEscape":true,"source":"Adds a specified <xref href=\"System.Messaging.MessageQueuePermissionEntry\"></xref> to this collection."},{"pos":[5299,5376],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Messaging.MessageQueuePermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to add.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Messaging.MessageQueuePermissionEntry\"></xref> to add."},{"pos":[5433,5533],"content":"The zero-based index of the added <bpt id=\"p1\">&lt;xref href=\"System.Messaging.MessageQueuePermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The zero-based index of the added <xref href=\"System.Messaging.MessageQueuePermissionEntry\"></xref>."},{"pos":[6253,6318],"content":"Appends a set of specified permission entries to this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Appends a set of specified permission entries to this collection.","pos":[0,65]}]},{"pos":[6846,6981],"content":"An array of type <bpt id=\"p1\">&lt;xref href=\"System.Messaging.MessageQueuePermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects that contains the permission entries to add.","needQuote":true,"needEscape":true,"source":"An array of type <xref href=\"System.Messaging.MessageQueuePermissionEntry\"></xref> objects that contains the permission entries to add."},{"pos":[7746,7811],"content":"Appends a set of specified permission entries to this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Appends a set of specified permission entries to this collection.","pos":[0,65]}]},{"pos":[8355,8477],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Messaging.MessageQueuePermissionEntryCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the permission entries to add.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Messaging.MessageQueuePermissionEntryCollection\"></xref> that contains the permission entries to add."},{"pos":[9192,9314],"content":"Determines whether this collection contains a specified <bpt id=\"p1\">&lt;xref href=\"System.Messaging.MessageQueuePermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Determines whether this collection contains a specified <xref href=\"System.Messaging.MessageQueuePermissionEntry\"></xref>."},{"pos":[9838,9916],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Messaging.MessageQueuePermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to find.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Messaging.MessageQueuePermissionEntry\"></xref> to find."},{"pos":[9975,10221],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified <bpt id=\"p2\">&lt;xref href=\"System.Messaging.MessageQueuePermissionEntry\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> belongs to this collection; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref href=\"System.Messaging.MessageQueuePermissionEntry\"></xref> belongs to this collection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10980,11088],"content":"Copies the permission entries from this collection to an array, starting at a particular index of the array.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies the permission entries from this collection to an array, starting at a particular index of the array.","pos":[0,108]}]},{"pos":[11623,11757],"content":"An array of type <bpt id=\"p1\">&lt;xref href=\"System.Messaging.MessageQueuePermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that receives this collection's permission entries.","needQuote":true,"needEscape":true,"source":"An array of type <xref href=\"System.Messaging.MessageQueuePermissionEntry\"></xref> that receives this collection's permission entries."},{"pos":[11818,11888],"content":"The zero-based index at which to begin copying the permission entries.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index at which to begin copying the permission entries.","pos":[0,70]}]},{"pos":[12596,12668],"content":"Determines the index of a specified permission entry in this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines the index of a specified permission entry in this collection.","pos":[0,72]}]},{"pos":[13189,13224],"content":"The permission entry to search for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The permission entry to search for.","pos":[0,35]}]},{"pos":[13281,13399],"content":"The zero-based index of the specified permission entry, or -1 if the permission entry was not found in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the specified permission entry, or -1 if the permission entry was not found in the collection.","pos":[0,118]}]},{"pos":[14147,14216],"content":"Inserts a permission entry into this collection at a specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Inserts a permission entry into this collection at a specified index.","pos":[0,69]}]},{"pos":[14715,14796],"content":"The zero-based index into the collection at which to insert the permission entry.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index into the collection at which to insert the permission entry.","pos":[0,81]}]},{"pos":[14889,14941],"content":"The permission entry to insert into this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The permission entry to insert into this collection.","pos":[0,52]}]},{"pos":[15506,15551],"content":"Gets or sets the object at a specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the object at a specified index.","pos":[0,45]}]},{"pos":[16050,16091],"content":"The zero-based index into the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index into the collection.","pos":[0,41]}]},{"pos":[16180,16285],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Messaging.MessageQueuePermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that exists at the specified index.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Messaging.MessageQueuePermissionEntry\"></xref> that exists at the specified index."},{"pos":[16818,16901],"content":"Performs additional custom processes after clearing the contents of the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs additional custom processes after clearing the contents of the collection.","pos":[0,83]}]},{"pos":[17612,17711],"content":"Performs additional custom processes before a new permission entry is inserted into the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs additional custom processes before a new permission entry is inserted into the collection.","pos":[0,99]}]},{"pos":[17871,17919],"content":"The zero-based index at which to insert <ph id=\"ph1\">`value`</ph>.","needQuote":true,"needEscape":true,"source":"The zero-based index at which to insert `value`."},{"pos":[17981,18030],"content":"The new value of the permission entry at <ph id=\"ph1\">`index`</ph>.","needQuote":true,"needEscape":true,"source":"The new value of the permission entry at `index`."},{"pos":[18664,18758],"content":"Performs additional custom processes when removing a new permission entry from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs additional custom processes when removing a new permission entry from the collection.","pos":[0,94]}]},{"pos":[18918,18969],"content":"The zero-based index at which <ph id=\"ph1\">`value`</ph> can be found.","needQuote":true,"needEscape":true,"source":"The zero-based index at which `value` can be found."},{"pos":[19031,19075],"content":"The permission entry to remove from <ph id=\"ph1\">`index`</ph>.","needQuote":true,"needEscape":true,"source":"The permission entry to remove from `index`."},{"pos":[19743,19821],"content":"Performs additional custom processes before setting a value in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs additional custom processes before setting a value in the collection.","pos":[0,78]}]},{"pos":[19998,20052],"content":"The zero-based index at which <ph id=\"ph1\">`oldValue`</ph> can be found.","needQuote":true,"needEscape":true,"source":"The zero-based index at which `oldValue` can be found."},{"pos":[20117,20154],"content":"The value to replace with <ph id=\"ph1\">`newValue`</ph>.","needQuote":true,"needEscape":true,"source":"The value to replace with `newValue`."},{"pos":[20219,20268],"content":"The new value of the permission entry at <ph id=\"ph1\">`index`</ph>.","needQuote":true,"needEscape":true,"source":"The new value of the permission entry at `index`."},{"pos":[20970,21028],"content":"Removes a specified permission entry from this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes a specified permission entry from this collection.","pos":[0,58]}]},{"pos":[21548,21579],"content":"The permission entry to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The permission entry to remove.","pos":[0,31]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Messaging.MessageQueuePermissionEntryCollection\n  id: MessageQueuePermissionEntryCollection\n  children:\n  - System.Messaging.MessageQueuePermissionEntryCollection.Add(System.Messaging.MessageQueuePermissionEntry)\n  - System.Messaging.MessageQueuePermissionEntryCollection.AddRange(System.Messaging.MessageQueuePermissionEntry[])\n  - System.Messaging.MessageQueuePermissionEntryCollection.AddRange(System.Messaging.MessageQueuePermissionEntryCollection)\n  - System.Messaging.MessageQueuePermissionEntryCollection.Contains(System.Messaging.MessageQueuePermissionEntry)\n  - System.Messaging.MessageQueuePermissionEntryCollection.CopyTo(System.Messaging.MessageQueuePermissionEntry[],System.Int32)\n  - System.Messaging.MessageQueuePermissionEntryCollection.IndexOf(System.Messaging.MessageQueuePermissionEntry)\n  - System.Messaging.MessageQueuePermissionEntryCollection.Insert(System.Int32,System.Messaging.MessageQueuePermissionEntry)\n  - System.Messaging.MessageQueuePermissionEntryCollection.Item(System.Int32)\n  - System.Messaging.MessageQueuePermissionEntryCollection.OnClear\n  - System.Messaging.MessageQueuePermissionEntryCollection.OnInsert(System.Int32,System.Object)\n  - System.Messaging.MessageQueuePermissionEntryCollection.OnRemove(System.Int32,System.Object)\n  - System.Messaging.MessageQueuePermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)\n  - System.Messaging.MessageQueuePermissionEntryCollection.Remove(System.Messaging.MessageQueuePermissionEntry)\n  langs:\n  - csharp\n  name: MessageQueuePermissionEntryCollection\n  nameWithType: MessageQueuePermissionEntryCollection\n  fullName: System.Messaging.MessageQueuePermissionEntryCollection\n  type: Class\n  summary: Contains a strongly typed collection of <xref href=\"System.Messaging.MessageQueuePermissionEntry\"></xref> objects.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the use of MessageQueuePermissionEntryCollection.  \\n  \\n [!code-cpp[MessageQueuePermissionEntryCollection#0](~/add/codesnippet/cpp/t-system.messaging.messa_10_1.cpp)]\\n [!code-cs[MessageQueuePermissionEntryCollection#0](~/add/codesnippet/csharp/t-system.messaging.messa_10_1.cs)]\"\n  syntax:\n    content: 'public class MessageQueuePermissionEntryCollection : System.Collections.CollectionBase'\n  inheritance:\n  - System.Object\n  - System.Collections.CollectionBase\n  implements: []\n  inheritedMembers:\n  - System.Collections.CollectionBase.Capacity\n  - System.Collections.CollectionBase.Clear\n  - System.Collections.CollectionBase.Count\n  - System.Collections.CollectionBase.GetEnumerator\n  - System.Collections.CollectionBase.InnerList\n  - System.Collections.CollectionBase.List\n  - System.Collections.CollectionBase.OnClearComplete\n  - System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)\n  - System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)\n  - System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)\n  - System.Collections.CollectionBase.OnValidate(System.Object)\n  - System.Collections.CollectionBase.RemoveAt(System.Int32)\n  - System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized\n  - System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot\n  - System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)\n  - System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)\n  - System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)\n  - System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Collections.CollectionBase.System#Collections#IList#IsFixedSize\n  - System.Collections.CollectionBase.System#Collections#IList#IsReadOnly\n  - System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)\n  - System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueuePermissionEntryCollection.Add(System.Messaging.MessageQueuePermissionEntry)\n  id: Add(System.Messaging.MessageQueuePermissionEntry)\n  parent: System.Messaging.MessageQueuePermissionEntryCollection\n  langs:\n  - csharp\n  name: Add(MessageQueuePermissionEntry)\n  nameWithType: MessageQueuePermissionEntryCollection.Add(MessageQueuePermissionEntry)\n  fullName: System.Messaging.MessageQueuePermissionEntryCollection.Add(MessageQueuePermissionEntry)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Adds a specified <xref href=\"System.Messaging.MessageQueuePermissionEntry\"></xref> to this collection.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the use of Add.  \\n  \\n [!code-cpp[MessageQueuePermissionEntryCollection#1](~/add/codesnippet/cpp/962e1c32-9597-4b6a-9095-_1.cpp)]\\n [!code-cs[MessageQueuePermissionEntryCollection#1](~/add/codesnippet/csharp/962e1c32-9597-4b6a-9095-_1.cs)]\"\n  syntax:\n    content: public int Add (System.Messaging.MessageQueuePermissionEntry value);\n    parameters:\n    - id: value\n      type: System.Messaging.MessageQueuePermissionEntry\n      description: The <xref href=\"System.Messaging.MessageQueuePermissionEntry\"></xref> to add.\n    return:\n      type: System.Int32\n      description: The zero-based index of the added <xref href=\"System.Messaging.MessageQueuePermissionEntry\"></xref>.\n  overload: System.Messaging.MessageQueuePermissionEntryCollection.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueuePermissionEntryCollection.AddRange(System.Messaging.MessageQueuePermissionEntry[])\n  id: AddRange(System.Messaging.MessageQueuePermissionEntry[])\n  parent: System.Messaging.MessageQueuePermissionEntryCollection\n  langs:\n  - csharp\n  name: AddRange(MessageQueuePermissionEntry[])\n  nameWithType: MessageQueuePermissionEntryCollection.AddRange(MessageQueuePermissionEntry[])\n  fullName: System.Messaging.MessageQueuePermissionEntryCollection.AddRange(MessageQueuePermissionEntry[])\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Appends a set of specified permission entries to this collection.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the use of AddRange.  \\n  \\n [!code-cpp[MessageQueuePermissionEntryCollection#2](~/add/codesnippet/cpp/fea2c4c7-d747-40e9-a5f6-_1.cpp)]\\n [!code-cs[MessageQueuePermissionEntryCollection#2](~/add/codesnippet/csharp/fea2c4c7-d747-40e9-a5f6-_1.cs)]\"\n  syntax:\n    content: public void AddRange (System.Messaging.MessageQueuePermissionEntry[] value);\n    parameters:\n    - id: value\n      type: System.Messaging.MessageQueuePermissionEntry[]\n      description: An array of type <xref href=\"System.Messaging.MessageQueuePermissionEntry\"></xref> objects that contains the permission entries to add.\n  overload: System.Messaging.MessageQueuePermissionEntryCollection.AddRange*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueuePermissionEntryCollection.AddRange(System.Messaging.MessageQueuePermissionEntryCollection)\n  id: AddRange(System.Messaging.MessageQueuePermissionEntryCollection)\n  parent: System.Messaging.MessageQueuePermissionEntryCollection\n  langs:\n  - csharp\n  name: AddRange(MessageQueuePermissionEntryCollection)\n  nameWithType: MessageQueuePermissionEntryCollection.AddRange(MessageQueuePermissionEntryCollection)\n  fullName: System.Messaging.MessageQueuePermissionEntryCollection.AddRange(MessageQueuePermissionEntryCollection)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Appends a set of specified permission entries to this collection.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the use of AddRange.  \\n  \\n [!code-cpp[MessageQueuePermissionEntryCollection#3](~/add/codesnippet/cpp/cbf56890-9115-4991-80a3-_1.cpp)]\\n [!code-cs[MessageQueuePermissionEntryCollection#3](~/add/codesnippet/csharp/cbf56890-9115-4991-80a3-_1.cs)]\"\n  syntax:\n    content: public void AddRange (System.Messaging.MessageQueuePermissionEntryCollection value);\n    parameters:\n    - id: value\n      type: System.Messaging.MessageQueuePermissionEntryCollection\n      description: A <xref href=\"System.Messaging.MessageQueuePermissionEntryCollection\"></xref> that contains the permission entries to add.\n  overload: System.Messaging.MessageQueuePermissionEntryCollection.AddRange*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueuePermissionEntryCollection.Contains(System.Messaging.MessageQueuePermissionEntry)\n  id: Contains(System.Messaging.MessageQueuePermissionEntry)\n  parent: System.Messaging.MessageQueuePermissionEntryCollection\n  langs:\n  - csharp\n  name: Contains(MessageQueuePermissionEntry)\n  nameWithType: MessageQueuePermissionEntryCollection.Contains(MessageQueuePermissionEntry)\n  fullName: System.Messaging.MessageQueuePermissionEntryCollection.Contains(MessageQueuePermissionEntry)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Determines whether this collection contains a specified <xref href=\"System.Messaging.MessageQueuePermissionEntry\"></xref>.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the use of Contains.  \\n  \\n [!code-cpp[MessageQueuePermissionEntryCollection#4](~/add/codesnippet/cpp/218a0d2e-d927-4fa8-b2a0-_1.cpp)]\\n [!code-cs[MessageQueuePermissionEntryCollection#4](~/add/codesnippet/csharp/218a0d2e-d927-4fa8-b2a0-_1.cs)]\"\n  syntax:\n    content: public bool Contains (System.Messaging.MessageQueuePermissionEntry value);\n    parameters:\n    - id: value\n      type: System.Messaging.MessageQueuePermissionEntry\n      description: The <xref href=\"System.Messaging.MessageQueuePermissionEntry\"></xref> to find.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref href=\"System.Messaging.MessageQueuePermissionEntry\"></xref> belongs to this collection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Messaging.MessageQueuePermissionEntryCollection.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueuePermissionEntryCollection.CopyTo(System.Messaging.MessageQueuePermissionEntry[],System.Int32)\n  id: CopyTo(System.Messaging.MessageQueuePermissionEntry[],System.Int32)\n  parent: System.Messaging.MessageQueuePermissionEntryCollection\n  langs:\n  - csharp\n  name: CopyTo(MessageQueuePermissionEntry[],Int32)\n  nameWithType: MessageQueuePermissionEntryCollection.CopyTo(MessageQueuePermissionEntry[],Int32)\n  fullName: System.Messaging.MessageQueuePermissionEntryCollection.CopyTo(MessageQueuePermissionEntry[],Int32)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Copies the permission entries from this collection to an array, starting at a particular index of the array.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the use of CopyTo.  \\n  \\n [!code-cpp[MessageQueuePermissionEntryCollection#5](~/add/codesnippet/cpp/81eb91f7-2e38-4b54-8ef5-_1.cpp)]\\n [!code-cs[MessageQueuePermissionEntryCollection#5](~/add/codesnippet/csharp/81eb91f7-2e38-4b54-8ef5-_1.cs)]\"\n  syntax:\n    content: public void CopyTo (System.Messaging.MessageQueuePermissionEntry[] array, int index);\n    parameters:\n    - id: array\n      type: System.Messaging.MessageQueuePermissionEntry[]\n      description: An array of type <xref href=\"System.Messaging.MessageQueuePermissionEntry\"></xref> that receives this collection's permission entries.\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which to begin copying the permission entries.\n  overload: System.Messaging.MessageQueuePermissionEntryCollection.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueuePermissionEntryCollection.IndexOf(System.Messaging.MessageQueuePermissionEntry)\n  id: IndexOf(System.Messaging.MessageQueuePermissionEntry)\n  parent: System.Messaging.MessageQueuePermissionEntryCollection\n  langs:\n  - csharp\n  name: IndexOf(MessageQueuePermissionEntry)\n  nameWithType: MessageQueuePermissionEntryCollection.IndexOf(MessageQueuePermissionEntry)\n  fullName: System.Messaging.MessageQueuePermissionEntryCollection.IndexOf(MessageQueuePermissionEntry)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Determines the index of a specified permission entry in this collection.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the use of IndexOf.  \\n  \\n [!code-cpp[MessageQueuePermissionEntryCollection#6](~/add/codesnippet/cpp/7a139ebc-6184-41be-b8f2-_1.cpp)]\\n [!code-cs[MessageQueuePermissionEntryCollection#6](~/add/codesnippet/csharp/7a139ebc-6184-41be-b8f2-_1.cs)]\"\n  syntax:\n    content: public int IndexOf (System.Messaging.MessageQueuePermissionEntry value);\n    parameters:\n    - id: value\n      type: System.Messaging.MessageQueuePermissionEntry\n      description: The permission entry to search for.\n    return:\n      type: System.Int32\n      description: The zero-based index of the specified permission entry, or -1 if the permission entry was not found in the collection.\n  overload: System.Messaging.MessageQueuePermissionEntryCollection.IndexOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueuePermissionEntryCollection.Insert(System.Int32,System.Messaging.MessageQueuePermissionEntry)\n  id: Insert(System.Int32,System.Messaging.MessageQueuePermissionEntry)\n  parent: System.Messaging.MessageQueuePermissionEntryCollection\n  langs:\n  - csharp\n  name: Insert(Int32,MessageQueuePermissionEntry)\n  nameWithType: MessageQueuePermissionEntryCollection.Insert(Int32,MessageQueuePermissionEntry)\n  fullName: System.Messaging.MessageQueuePermissionEntryCollection.Insert(Int32,MessageQueuePermissionEntry)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Inserts a permission entry into this collection at a specified index.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the use of Insert.  \\n  \\n [!code-cpp[MessageQueuePermissionEntryCollection#7](~/add/codesnippet/cpp/8b8f6c79-2699-4936-8f6d-_1.cpp)]\\n [!code-cs[MessageQueuePermissionEntryCollection#7](~/add/codesnippet/csharp/8b8f6c79-2699-4936-8f6d-_1.cs)]\"\n  syntax:\n    content: public void Insert (int index, System.Messaging.MessageQueuePermissionEntry value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index into the collection at which to insert the permission entry.\n    - id: value\n      type: System.Messaging.MessageQueuePermissionEntry\n      description: The permission entry to insert into this collection.\n  overload: System.Messaging.MessageQueuePermissionEntryCollection.Insert*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueuePermissionEntryCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Messaging.MessageQueuePermissionEntryCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: MessageQueuePermissionEntryCollection.Item(Int32)\n  fullName: System.Messaging.MessageQueuePermissionEntryCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets the object at a specified index.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the use of Item.  \\n  \\n [!code-cpp[MessageQueuePermissionEntryCollection#8](~/add/codesnippet/cpp/p-system.messaging.messa_4_1.cpp)]\\n [!code-cs[MessageQueuePermissionEntryCollection#8](~/add/codesnippet/csharp/p-system.messaging.messa_4_1.cs)]\"\n  syntax:\n    content: public System.Messaging.MessageQueuePermissionEntry this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index into the collection.\n    return:\n      type: System.Messaging.MessageQueuePermissionEntry\n      description: The <xref href=\"System.Messaging.MessageQueuePermissionEntry\"></xref> that exists at the specified index.\n  overload: System.Messaging.MessageQueuePermissionEntryCollection.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueuePermissionEntryCollection.OnClear\n  id: OnClear\n  parent: System.Messaging.MessageQueuePermissionEntryCollection\n  langs:\n  - csharp\n  name: OnClear()\n  nameWithType: MessageQueuePermissionEntryCollection.OnClear()\n  fullName: System.Messaging.MessageQueuePermissionEntryCollection.OnClear()\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Performs additional custom processes after clearing the contents of the collection.\n  syntax:\n    content: protected override void OnClear ();\n    parameters: []\n  overload: System.Messaging.MessageQueuePermissionEntryCollection.OnClear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueuePermissionEntryCollection.OnInsert(System.Int32,System.Object)\n  id: OnInsert(System.Int32,System.Object)\n  parent: System.Messaging.MessageQueuePermissionEntryCollection\n  langs:\n  - csharp\n  name: OnInsert(Int32,Object)\n  nameWithType: MessageQueuePermissionEntryCollection.OnInsert(Int32,Object)\n  fullName: System.Messaging.MessageQueuePermissionEntryCollection.OnInsert(Int32,Object)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Performs additional custom processes before a new permission entry is inserted into the collection.\n  syntax:\n    content: protected override void OnInsert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which to insert `value`.\n    - id: value\n      type: System.Object\n      description: The new value of the permission entry at `index`.\n  overload: System.Messaging.MessageQueuePermissionEntryCollection.OnInsert*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueuePermissionEntryCollection.OnRemove(System.Int32,System.Object)\n  id: OnRemove(System.Int32,System.Object)\n  parent: System.Messaging.MessageQueuePermissionEntryCollection\n  langs:\n  - csharp\n  name: OnRemove(Int32,Object)\n  nameWithType: MessageQueuePermissionEntryCollection.OnRemove(Int32,Object)\n  fullName: System.Messaging.MessageQueuePermissionEntryCollection.OnRemove(Int32,Object)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Performs additional custom processes when removing a new permission entry from the collection.\n  syntax:\n    content: protected override void OnRemove (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which `value` can be found.\n    - id: value\n      type: System.Object\n      description: The permission entry to remove from `index`.\n  overload: System.Messaging.MessageQueuePermissionEntryCollection.OnRemove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueuePermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)\n  id: OnSet(System.Int32,System.Object,System.Object)\n  parent: System.Messaging.MessageQueuePermissionEntryCollection\n  langs:\n  - csharp\n  name: OnSet(Int32,Object,Object)\n  nameWithType: MessageQueuePermissionEntryCollection.OnSet(Int32,Object,Object)\n  fullName: System.Messaging.MessageQueuePermissionEntryCollection.OnSet(Int32,Object,Object)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Performs additional custom processes before setting a value in the collection.\n  syntax:\n    content: protected override void OnSet (int index, object oldValue, object newValue);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which `oldValue` can be found.\n    - id: oldValue\n      type: System.Object\n      description: The value to replace with `newValue`.\n    - id: newValue\n      type: System.Object\n      description: The new value of the permission entry at `index`.\n  overload: System.Messaging.MessageQueuePermissionEntryCollection.OnSet*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueuePermissionEntryCollection.Remove(System.Messaging.MessageQueuePermissionEntry)\n  id: Remove(System.Messaging.MessageQueuePermissionEntry)\n  parent: System.Messaging.MessageQueuePermissionEntryCollection\n  langs:\n  - csharp\n  name: Remove(MessageQueuePermissionEntry)\n  nameWithType: MessageQueuePermissionEntryCollection.Remove(MessageQueuePermissionEntry)\n  fullName: System.Messaging.MessageQueuePermissionEntryCollection.Remove(MessageQueuePermissionEntry)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Removes a specified permission entry from this collection.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the use of Remove.  \\n  \\n [!code-cpp[MessageQueuePermissionEntryCollection#9](~/add/codesnippet/cpp/4f8a439c-cc2f-4796-8858-_1.cpp)]\\n [!code-cs[MessageQueuePermissionEntryCollection#9](~/add/codesnippet/csharp/4f8a439c-cc2f-4796-8858-_1.cs)]\"\n  syntax:\n    content: public void Remove (System.Messaging.MessageQueuePermissionEntry value);\n    parameters:\n    - id: value\n      type: System.Messaging.MessageQueuePermissionEntry\n      description: The permission entry to remove.\n  overload: System.Messaging.MessageQueuePermissionEntryCollection.Remove*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Collections.CollectionBase\n  isExternal: false\n  name: System.Collections.CollectionBase\n- uid: System.Messaging.MessageQueuePermissionEntryCollection.Add(System.Messaging.MessageQueuePermissionEntry)\n  parent: System.Messaging.MessageQueuePermissionEntryCollection\n  isExternal: false\n  name: Add(MessageQueuePermissionEntry)\n  nameWithType: MessageQueuePermissionEntryCollection.Add(MessageQueuePermissionEntry)\n  fullName: System.Messaging.MessageQueuePermissionEntryCollection.Add(MessageQueuePermissionEntry)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Messaging.MessageQueuePermissionEntry\n  parent: System.Messaging\n  isExternal: false\n  name: MessageQueuePermissionEntry\n  nameWithType: MessageQueuePermissionEntry\n  fullName: System.Messaging.MessageQueuePermissionEntry\n- uid: System.Messaging.MessageQueuePermissionEntryCollection.AddRange(System.Messaging.MessageQueuePermissionEntry[])\n  parent: System.Messaging.MessageQueuePermissionEntryCollection\n  isExternal: false\n  name: AddRange(MessageQueuePermissionEntry[])\n  nameWithType: MessageQueuePermissionEntryCollection.AddRange(MessageQueuePermissionEntry[])\n  fullName: System.Messaging.MessageQueuePermissionEntryCollection.AddRange(MessageQueuePermissionEntry[])\n- uid: System.Messaging.MessageQueuePermissionEntry[]\n  parent: System.Messaging\n  isExternal: false\n  name: MessageQueuePermissionEntry\n  nameWithType: MessageQueuePermissionEntry\n  fullName: System.Messaging.MessageQueuePermissionEntry[]\n  spec.csharp:\n  - uid: System.Messaging.MessageQueuePermissionEntry\n    name: MessageQueuePermissionEntry\n    nameWithType: MessageQueuePermissionEntry\n    fullName: MessageQueuePermissionEntry[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Messaging.MessageQueuePermissionEntryCollection.AddRange(System.Messaging.MessageQueuePermissionEntryCollection)\n  parent: System.Messaging.MessageQueuePermissionEntryCollection\n  isExternal: false\n  name: AddRange(MessageQueuePermissionEntryCollection)\n  nameWithType: MessageQueuePermissionEntryCollection.AddRange(MessageQueuePermissionEntryCollection)\n  fullName: System.Messaging.MessageQueuePermissionEntryCollection.AddRange(MessageQueuePermissionEntryCollection)\n- uid: System.Messaging.MessageQueuePermissionEntryCollection\n  parent: System.Messaging\n  isExternal: false\n  name: MessageQueuePermissionEntryCollection\n  nameWithType: MessageQueuePermissionEntryCollection\n  fullName: System.Messaging.MessageQueuePermissionEntryCollection\n- uid: System.Messaging.MessageQueuePermissionEntryCollection.Contains(System.Messaging.MessageQueuePermissionEntry)\n  parent: System.Messaging.MessageQueuePermissionEntryCollection\n  isExternal: false\n  name: Contains(MessageQueuePermissionEntry)\n  nameWithType: MessageQueuePermissionEntryCollection.Contains(MessageQueuePermissionEntry)\n  fullName: System.Messaging.MessageQueuePermissionEntryCollection.Contains(MessageQueuePermissionEntry)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Messaging.MessageQueuePermissionEntryCollection.CopyTo(System.Messaging.MessageQueuePermissionEntry[],System.Int32)\n  parent: System.Messaging.MessageQueuePermissionEntryCollection\n  isExternal: false\n  name: CopyTo(MessageQueuePermissionEntry[],Int32)\n  nameWithType: MessageQueuePermissionEntryCollection.CopyTo(MessageQueuePermissionEntry[],Int32)\n  fullName: System.Messaging.MessageQueuePermissionEntryCollection.CopyTo(MessageQueuePermissionEntry[],Int32)\n- uid: System.Messaging.MessageQueuePermissionEntryCollection.IndexOf(System.Messaging.MessageQueuePermissionEntry)\n  parent: System.Messaging.MessageQueuePermissionEntryCollection\n  isExternal: false\n  name: IndexOf(MessageQueuePermissionEntry)\n  nameWithType: MessageQueuePermissionEntryCollection.IndexOf(MessageQueuePermissionEntry)\n  fullName: System.Messaging.MessageQueuePermissionEntryCollection.IndexOf(MessageQueuePermissionEntry)\n- uid: System.Messaging.MessageQueuePermissionEntryCollection.Insert(System.Int32,System.Messaging.MessageQueuePermissionEntry)\n  parent: System.Messaging.MessageQueuePermissionEntryCollection\n  isExternal: false\n  name: Insert(Int32,MessageQueuePermissionEntry)\n  nameWithType: MessageQueuePermissionEntryCollection.Insert(Int32,MessageQueuePermissionEntry)\n  fullName: System.Messaging.MessageQueuePermissionEntryCollection.Insert(Int32,MessageQueuePermissionEntry)\n- uid: System.Messaging.MessageQueuePermissionEntryCollection.Item(System.Int32)\n  parent: System.Messaging.MessageQueuePermissionEntryCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: MessageQueuePermissionEntryCollection.Item(Int32)\n  fullName: System.Messaging.MessageQueuePermissionEntryCollection.Item(Int32)\n- uid: System.Messaging.MessageQueuePermissionEntryCollection.OnClear\n  parent: System.Messaging.MessageQueuePermissionEntryCollection\n  isExternal: false\n  name: OnClear()\n  nameWithType: MessageQueuePermissionEntryCollection.OnClear()\n  fullName: System.Messaging.MessageQueuePermissionEntryCollection.OnClear()\n- uid: System.Messaging.MessageQueuePermissionEntryCollection.OnInsert(System.Int32,System.Object)\n  parent: System.Messaging.MessageQueuePermissionEntryCollection\n  isExternal: false\n  name: OnInsert(Int32,Object)\n  nameWithType: MessageQueuePermissionEntryCollection.OnInsert(Int32,Object)\n  fullName: System.Messaging.MessageQueuePermissionEntryCollection.OnInsert(Int32,Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Messaging.MessageQueuePermissionEntryCollection.OnRemove(System.Int32,System.Object)\n  parent: System.Messaging.MessageQueuePermissionEntryCollection\n  isExternal: false\n  name: OnRemove(Int32,Object)\n  nameWithType: MessageQueuePermissionEntryCollection.OnRemove(Int32,Object)\n  fullName: System.Messaging.MessageQueuePermissionEntryCollection.OnRemove(Int32,Object)\n- uid: System.Messaging.MessageQueuePermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)\n  parent: System.Messaging.MessageQueuePermissionEntryCollection\n  isExternal: false\n  name: OnSet(Int32,Object,Object)\n  nameWithType: MessageQueuePermissionEntryCollection.OnSet(Int32,Object,Object)\n  fullName: System.Messaging.MessageQueuePermissionEntryCollection.OnSet(Int32,Object,Object)\n- uid: System.Messaging.MessageQueuePermissionEntryCollection.Remove(System.Messaging.MessageQueuePermissionEntry)\n  parent: System.Messaging.MessageQueuePermissionEntryCollection\n  isExternal: false\n  name: Remove(MessageQueuePermissionEntry)\n  nameWithType: MessageQueuePermissionEntryCollection.Remove(MessageQueuePermissionEntry)\n  fullName: System.Messaging.MessageQueuePermissionEntryCollection.Remove(MessageQueuePermissionEntry)\n- uid: System.Messaging.MessageQueuePermissionEntryCollection.Add*\n  parent: System.Messaging.MessageQueuePermissionEntryCollection\n  isExternal: false\n  name: Add\n  nameWithType: MessageQueuePermissionEntryCollection.Add\n- uid: System.Messaging.MessageQueuePermissionEntryCollection.AddRange*\n  parent: System.Messaging.MessageQueuePermissionEntryCollection\n  isExternal: false\n  name: AddRange\n  nameWithType: MessageQueuePermissionEntryCollection.AddRange\n- uid: System.Messaging.MessageQueuePermissionEntryCollection.Contains*\n  parent: System.Messaging.MessageQueuePermissionEntryCollection\n  isExternal: false\n  name: Contains\n  nameWithType: MessageQueuePermissionEntryCollection.Contains\n- uid: System.Messaging.MessageQueuePermissionEntryCollection.CopyTo*\n  parent: System.Messaging.MessageQueuePermissionEntryCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: MessageQueuePermissionEntryCollection.CopyTo\n- uid: System.Messaging.MessageQueuePermissionEntryCollection.IndexOf*\n  parent: System.Messaging.MessageQueuePermissionEntryCollection\n  isExternal: false\n  name: IndexOf\n  nameWithType: MessageQueuePermissionEntryCollection.IndexOf\n- uid: System.Messaging.MessageQueuePermissionEntryCollection.Insert*\n  parent: System.Messaging.MessageQueuePermissionEntryCollection\n  isExternal: false\n  name: Insert\n  nameWithType: MessageQueuePermissionEntryCollection.Insert\n- uid: System.Messaging.MessageQueuePermissionEntryCollection.Item*\n  parent: System.Messaging.MessageQueuePermissionEntryCollection\n  isExternal: false\n  name: Item\n  nameWithType: MessageQueuePermissionEntryCollection.Item\n- uid: System.Messaging.MessageQueuePermissionEntryCollection.OnClear*\n  parent: System.Messaging.MessageQueuePermissionEntryCollection\n  isExternal: false\n  name: OnClear\n  nameWithType: MessageQueuePermissionEntryCollection.OnClear\n- uid: System.Messaging.MessageQueuePermissionEntryCollection.OnInsert*\n  parent: System.Messaging.MessageQueuePermissionEntryCollection\n  isExternal: false\n  name: OnInsert\n  nameWithType: MessageQueuePermissionEntryCollection.OnInsert\n- uid: System.Messaging.MessageQueuePermissionEntryCollection.OnRemove*\n  parent: System.Messaging.MessageQueuePermissionEntryCollection\n  isExternal: false\n  name: OnRemove\n  nameWithType: MessageQueuePermissionEntryCollection.OnRemove\n- uid: System.Messaging.MessageQueuePermissionEntryCollection.OnSet*\n  parent: System.Messaging.MessageQueuePermissionEntryCollection\n  isExternal: false\n  name: OnSet\n  nameWithType: MessageQueuePermissionEntryCollection.OnSet\n- uid: System.Messaging.MessageQueuePermissionEntryCollection.Remove*\n  parent: System.Messaging.MessageQueuePermissionEntryCollection\n  isExternal: false\n  name: Remove\n  nameWithType: MessageQueuePermissionEntryCollection.Remove\n"}