{"nodes":[{"pos":[1973,2156],"content":"Defines a workflow communication activity that is used to call a method on a local service. This activity is used to send data from the workflow to the host through the local service.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines a workflow communication activity that is used to call a method on a local service. This activity is used to send data from the workflow to the host through the local service.","pos":[0,183],"nodes":[{"content":"Defines a workflow communication activity that is used to call a method on a local service.","pos":[0,91]},{"content":"This activity is used to send data from the workflow to the host through the local service.","pos":[92,183]}]}]},{"pos":[2169,2812],"content":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       A local service is a class that implements a local service interface (an interface that is marked with <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>) and is added to the <xref:System.Workflow.Activities.ExternalDataExchangeService>.      > [!NOTE] >  When the external method is called all parameters of the method are cloned. If the parameter types implement <xref:System.ICloneable> the `Clone` method is called or they are serialized and deserialized with a <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">&gt; [!NOTE]</ph><ph id=\"ph2\"> &gt;  </ph><ph id=\"ph3\">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>       A local service is a class that implements a local service interface (an interface that is marked with &lt;xref:System.Workflow.Activities.ExternalDataExchangeAttribute&gt;) and is added to the &lt;xref:System.Workflow.Activities.ExternalDataExchangeService&gt;.","pos":[0,338],"source":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       A local service is a class that implements a local service interface (an interface that is marked with <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>) and is added to the <xref:System.Workflow.Activities.ExternalDataExchangeService>."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  When the external method is called all parameters of the method are cloned.","pos":[344,432],"source":"      > [!NOTE] >  When the external method is called all parameters of the method are cloned."},{"content":"If the parameter types implement &lt;xref:System.ICloneable&gt; the <ph id=\"ph1\">`Clone`</ph> method is called or they are serialized and deserialized with a &lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;.","pos":[433,637],"source":" If the parameter types implement <xref:System.ICloneable> the `Clone` method is called or they are serialized and deserialized with a <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>."}]},{"pos":[10813,10928],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.CallExternalMethodActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity\"></xref> class."},{"pos":[12569,12715],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.CallExternalMethodActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the name of the activity.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity\"></xref> class using the name of the activity."},{"pos":[12864,12949],"content":"The user-defined name of the activity, used to initialize the activity name property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user-defined name of the activity, used to initialize the activity name property.","pos":[0,85]}]},{"pos":[13529,13632],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Runtime.CorrelationToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the external method.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Workflow.Runtime.CorrelationToken\"></xref> for the external method."},{"pos":[13645,14177],"content":"This property defines which specific <xref:System.Workflow.Activities.CallExternalMethodActivity> activity a given external method call comes from. This value can then be used in the payload of a local communication service event to direct that event to the correct <xref:System.Workflow.Activities.HandleExternalEventActivity> activity.       [!INCLUDE[crexample](~/add/includes/ajax-current-ext-md.md)] correlation, see the [Correlated Local Service Sample](http://msdn.microsoft.com/en-us/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property defines which specific &lt;xref:System.Workflow.Activities.CallExternalMethodActivity&gt; activity a given external method call comes from.","pos":[0,147],"source":"This property defines which specific <xref:System.Workflow.Activities.CallExternalMethodActivity> activity a given external method call comes from."},{"content":"This value can then be used in the payload of a local communication service event to direct that event to the correct &lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt; activity.","pos":[148,337],"source":" This value can then be used in the payload of a local communication service event to direct that event to the correct <xref:System.Workflow.Activities.HandleExternalEventActivity> activity."},{"content":"<ph id=\"ph1\">[!INCLUDE[crexample](~/add/includes/ajax-current-ext-md.md)]</ph> correlation, see the <bpt id=\"p1\">[</bpt>Correlated Local Service Sample<ept id=\"p1\">](http://msdn.microsoft.com/en-us/5a3d0733-bbea-4dbf-88ee-a8316db55fbd)</ept>.","pos":[344,530],"source":"[!INCLUDE[crexample](~/add/includes/ajax-current-ext-md.md)] correlation, see the [Correlated Local Service Sample](http://msdn.microsoft.com/en-us/5a3d0733-bbea-4dbf-88ee-a8316db55fbd)."}]},{"pos":[14970,15016],"content":"The correlation token for the external method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The correlation token for the external method.","pos":[0,46]}]},{"pos":[15644,15835],"content":"Represents the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that targets the &lt;xref:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken*&gt; property.","needQuote":true,"needEscape":true,"source":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken*> property."},{"pos":[16148,16160],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16812,17000],"content":"Tries to run the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.CallExternalMethodActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the specified <bpt id=\"p2\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Tries to run the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity\"></xref> with the specified <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref>."},{"pos":[17319,17535],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the execution environment in which to run the <bpt id=\"p2\">&lt;xref href=\"System.Workflow.Activities.CallExternalMethodActivity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> that contains the execution environment in which to run the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity\"></xref>."},{"pos":[17634,17728],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"></xref> values."},{"pos":[17912,18131],"content":"This <ph id=\"ph1\">&amp;lt;</ph>xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"This &lt;xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A?displayProperty=fullName&gt; is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[18234,18369],"content":"<ph id=\"ph1\">&lt;code&gt;executionContext&lt;/code&gt;</ph> is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"<code>executionContext</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[18480,18642],"content":"The service object for the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">executionContext</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a null reference (<bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"The service object for the <code>executionContext</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[19156,19205],"content":"Performs initialization on dependency properties.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs initialization on dependency properties.","pos":[0,49]}]},{"pos":[19217,19790],"content":"This method initializes the <xref:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken%2A> property, verifies the <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> and <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> properties are set and verifies that the event referenced in the <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> property can be found in the interface referenced in the <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method initializes the &lt;xref:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken%2A&gt; property, verifies the &lt;xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A&gt; and &lt;xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A&gt; properties are set and verifies that the event referenced in the &lt;xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A&gt; property can be found in the interface referenced in the &lt;xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A&gt; property.","pos":[0,573],"source":"This method initializes the <xref:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken%2A> property, verifies the <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> and <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> properties are set and verifies that the event referenced in the <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> property can be found in the interface referenced in the <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> property."}]},{"pos":[20461,20606],"content":"Gets or sets an external method's declaring interface that has the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ExternalDataExchangeAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets an external method's declaring interface that has the <xref href=\"System.Workflow.Activities.ExternalDataExchangeAttribute\"></xref>."},{"pos":[21376,21509],"content":"The external method's declaring interface that has the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ExternalDataExchangeAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The external method's declaring interface that has the <xref href=\"System.Workflow.Activities.ExternalDataExchangeAttribute\"></xref>."},{"pos":[22119,22307],"content":"Represents the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that targets the &lt;xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType*&gt; property.","needQuote":true,"needEscape":true,"source":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType*> property."},{"pos":[22320,22633],"content":"The <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> property corresponds to the name of the interface that was marked with the <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A&gt; property corresponds to the name of the interface that was marked with the &lt;xref:System.Workflow.Activities.ExternalDataExchangeAttribute&gt;.","pos":[0,221],"source":"The <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> property corresponds to the name of the interface that was marked with the <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>."}]},{"pos":[22847,22859],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23353,23387],"content":"Occurs before invoking the method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs before invoking the method.","pos":[0,34]}]},{"pos":[24107,24119],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24638,24837],"content":"Represents the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that targets the <bpt id=\"p2\">&lt;xref href=\"System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking\"></xref> event."},{"pos":[24850,25140],"content":"The <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking> event defines an event delegate that is executed before the activity invokes the external method on the local service.       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking&gt; event defines an event delegate that is executed before the activity invokes the external method on the local service.","pos":[0,198],"source":"The <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking> event defines an event delegate that is executed before the activity invokes the external method on the local service."}]},{"pos":[25352,25364],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25841,26007],"content":"Gets or sets the name of the method to be called on the local service registered with the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ExternalDataExchangeService\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the name of the method to be called on the local service registered with the <xref href=\"System.Workflow.Activities.ExternalDataExchangeService\"></xref>."},{"pos":[26709,26818],"content":"The method name of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ExternalDataExchangeService\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> interface.","needQuote":true,"needEscape":true,"source":"The method name of the <xref href=\"System.Workflow.Activities.ExternalDataExchangeService\"></xref> interface."},{"pos":[27410,27595],"content":"Represents the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that targets the &lt;xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName*&gt; property.","needQuote":true,"needEscape":true,"source":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName*> property."},{"pos":[27608,27938],"content":"The <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> property corresponds to the name of a method contained on an interface that is marked with the <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A&gt; property corresponds to the name of a method contained on an interface that is marked with the &lt;xref:System.Workflow.Activities.ExternalDataExchangeAttribute&gt;.","pos":[0,238],"source":"The <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> property corresponds to the name of a method contained on an interface that is marked with the <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>."}]},{"pos":[28149,28161],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28730,28949],"content":"Provides a hook for derived classes to extract out and return values from the <xref:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings*>. This method is called just after the external method is run.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a hook for derived classes to extract out and return values from the <xref:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings*>. This method is called just after the external method is run.","pos":[0,219],"nodes":[{"content":"Provides a hook for derived classes to extract out and return values from the &lt;xref:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings*&gt;.","pos":[0,158],"source":"Provides a hook for derived classes to extract out and return values from the <xref:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings*>."},{"content":"This method is called just after the external method is run.","pos":[159,219]}]}]},{"pos":[29382,29536],"content":"An &lt;xref:System.EventArgs&gt; that contains the data for the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"An <xref:System.EventArgs> that contains the data for the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking\"></xref> event."},{"pos":[30193,30378],"content":"Provides a hook for derived classes to set <xref:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings*>. This method is called just before the external method is run.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a hook for derived classes to set <xref:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings*>. This method is called just before the external method is run.","pos":[0,185],"nodes":[{"content":"Provides a hook for derived classes to set &lt;xref:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings*&gt;.","pos":[0,123],"source":"Provides a hook for derived classes to set <xref:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings*>."},{"content":"This method is called just before the external method is run.","pos":[124,185]}]}]},{"pos":[31088,31242],"content":"An &lt;xref:System.EventArgs&gt; that contains the data for the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"An <xref:System.EventArgs> that contains the data for the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking\"></xref> event."},{"pos":[31838,31937],"content":"Gets the collection of bindable parameters as found in the external method's formal parameter list.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the collection of bindable parameters as found in the external method's formal parameter list.","pos":[0,99]}]},{"pos":[32653,32769],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.WorkflowParameterBindingCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of parameters to bind to.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.ComponentModel.WorkflowParameterBindingCollection\"></xref> of parameters to bind to."},{"pos":[33403,33595],"content":"Represents the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that targets the &lt;xref:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings*&gt; property.","needQuote":true,"needEscape":true,"source":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings*> property."},{"pos":[33909,33921],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[34878,34929],"content":"Returns the access type for the specified property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the access type for the specified property.","pos":[0,51]}]},{"pos":[34941,35123],"content":"Used at compile time to validate whether the properties are correctly bound to one another. Without this interface this information is inferred directly from property getter/setters.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Used at compile time to validate whether the properties are correctly bound to one another. Without this interface this information is inferred directly from property getter/setters.","pos":[0,182],"nodes":[{"content":"Used at compile time to validate whether the properties are correctly bound to one another.","pos":[0,91]},{"content":"Without this interface this information is inferred directly from property getter/setters.","pos":[92,182]}]}]},{"pos":[35396,35516],"content":"An object that implements <xref:System.IServiceProvider> to provide access to design time services if they are required.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that implements &lt;xref:System.IServiceProvider&gt; to provide access to design time services if they are required.","pos":[0,120],"source":"An object that implements <xref:System.IServiceProvider> to provide access to design time services if they are required."}]},{"pos":[35585,35610],"content":"The name of the property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the property.","pos":[0,25]}]},{"pos":[35706,35846],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Compiler.AccessTypes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration value that denotes the access level of the property.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Workflow.ComponentModel.Compiler.AccessTypes\"></xref> enumeration value that denotes the access level of the property."},{"pos":[36954,37011],"content":"Returns the <xref:System.Type> of the specified property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the &lt;xref:System.Type&gt; of the specified property.","pos":[0,57],"source":"Returns the <xref:System.Type> of the specified property."}]},{"pos":[37023,37112],"content":"Used at compile time to validate whether the properties are correctly bound to one other.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Used at compile time to validate whether the properties are correctly bound to one other.","pos":[0,89]}]},{"pos":[37340,37460],"content":"An object that implements <xref:System.IServiceProvider> to provide access to design time services if they are required.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that implements &lt;xref:System.IServiceProvider&gt; to provide access to design time services if they are required.","pos":[0,120],"source":"An object that implements <xref:System.IServiceProvider> to provide access to design time services if they are required."}]},{"pos":[37529,37554],"content":"The name of the property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the property.","pos":[0,25]}]},{"pos":[37610,37714],"content":"The &lt;xref:System.Type&gt; for the property whose name is passed as the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">propertyName</ph><ept id=\"p1\"> &lt;/code&gt;</ept>parameter.","needQuote":true,"needEscape":true,"source":"The <xref:System.Type> for the property whose name is passed as the <code>propertyName </code>parameter."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.Activities.CallExternalMethodActivity\n  id: CallExternalMethodActivity\n  children:\n  - System.Workflow.Activities.CallExternalMethodActivity.#ctor\n  - System.Workflow.Activities.CallExternalMethodActivity.#ctor(System.String)\n  - System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken\n  - System.Workflow.Activities.CallExternalMethodActivity.CorrelationTokenProperty\n  - System.Workflow.Activities.CallExternalMethodActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties\n  - System.Workflow.Activities.CallExternalMethodActivity.InterfaceType\n  - System.Workflow.Activities.CallExternalMethodActivity.InterfaceTypeProperty\n  - System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking\n  - System.Workflow.Activities.CallExternalMethodActivity.MethodInvokingEvent\n  - System.Workflow.Activities.CallExternalMethodActivity.MethodName\n  - System.Workflow.Activities.CallExternalMethodActivity.MethodNameProperty\n  - System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked(System.EventArgs)\n  - System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking(System.EventArgs)\n  - System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings\n  - System.Workflow.Activities.CallExternalMethodActivity.ParameterBindingsProperty\n  - System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)\n  - System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)\n  langs:\n  - csharp\n  name: CallExternalMethodActivity\n  nameWithType: CallExternalMethodActivity\n  fullName: System.Workflow.Activities.CallExternalMethodActivity\n  type: Class\n  summary: Defines a workflow communication activity that is used to call a method on a local service. This activity is used to send data from the workflow to the host through the local service.\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n A local service is a class that implements a local service interface (an interface that is marked with <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>) and is added to the <xref:System.Workflow.Activities.ExternalDataExchangeService>.  \\n  \\n> [!NOTE]\\n>  When the external method is called all parameters of the method are cloned. If the parameter types implement <xref:System.ICloneable> the `Clone` method is called or they are serialized and deserialized with a <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.\"\n  example:\n  - \"The following code example shows how to use the CallExternalMethodActivity in a custom activity to call an external method. This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Listen Sample](http://msdn.microsoft.com/en-us/1cec0e82-7544-429f-b717-0fc25eb42b7f).  \\n  \\n [!code-cs[wf_samples#213](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#213)]\\n [!code-vb[wf_samples#213](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#213)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.DefaultEvent(\"MethodInvoking\")]\n\n      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.CallExternalMethodActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))]\n\n      [System.Obsolete(\"The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*\")]\n\n      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.CallExternalMethodActivityValidator))]\n\n      public class CallExternalMethodActivity : System.Workflow.ComponentModel.Activity, System.Workflow.ComponentModel.IDynamicPropertyTypeProvider\n  inheritance:\n  - System.Object\n  - System.Workflow.ComponentModel.DependencyObject\n  - System.Workflow.ComponentModel.Activity\n  implements:\n  - System.Workflow.ComponentModel.IDynamicPropertyTypeProvider\n  inheritedMembers:\n  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty\n  - System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.ComponentModel.Activity.Canceling\n  - System.Workflow.ComponentModel.Activity.CancelingEvent\n  - System.Workflow.ComponentModel.Activity.Clone\n  - System.Workflow.ComponentModel.Activity.Closed\n  - System.Workflow.ComponentModel.Activity.ClosedEvent\n  - System.Workflow.ComponentModel.Activity.Compensating\n  - System.Workflow.ComponentModel.Activity.CompensatingEvent\n  - System.Workflow.ComponentModel.Activity.Description\n  - System.Workflow.ComponentModel.Activity.Enabled\n  - System.Workflow.ComponentModel.Activity.Executing\n  - System.Workflow.ComponentModel.Activity.ExecutingEvent\n  - System.Workflow.ComponentModel.Activity.ExecutionResult\n  - System.Workflow.ComponentModel.Activity.ExecutionStatus\n  - System.Workflow.ComponentModel.Activity.Faulting\n  - System.Workflow.ComponentModel.Activity.FaultingEvent\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)\n  - System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  - System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)\n  - System.Workflow.ComponentModel.Activity.IsDynamicActivity\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.Name\n  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Activity.Parent\n  - System.Workflow.ComponentModel.Activity.QualifiedName\n  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)\n  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)\n  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.StatusChanged\n  - System.Workflow.ComponentModel.Activity.StatusChangedEvent\n  - System.Workflow.ComponentModel.Activity.ToString\n  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)\n  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)\n  - System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId\n  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.DesignMode\n  - System.Workflow.ComponentModel.DependencyObject.Dispose\n  - System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)\n  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)\n  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)\n  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject\n  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)\n  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.Site\n  - System.Workflow.ComponentModel.DependencyObject.UserData\n  platform:\n  - net462\n- uid: System.Workflow.Activities.CallExternalMethodActivity.#ctor\n  id: '#ctor'\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  langs:\n  - csharp\n  name: CallExternalMethodActivity()\n  nameWithType: CallExternalMethodActivity.CallExternalMethodActivity()\n  fullName: System.Workflow.Activities.CallExternalMethodActivity.CallExternalMethodActivity()\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code example shows how initialize a new instance of the <xref:System.Workflow.Activities.CallExternalMethodActivity>. The code also initializes new instances of the <xref:System.Workflow.Activities.ListenActivity>, <xref:System.Workflow.Activities.EventDrivenActivity>, <xref:System.Workflow.Activities.HandleExternalEventActivity>, <xref:System.Workflow.Activities.DelayActivity> and <xref:System.Workflow.Activities.CodeActivity> classes. This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Listen Sample](http://msdn.microsoft.com/en-us/1cec0e82-7544-429f-b717-0fc25eb42b7f).  \\n  \\n [!code-cs[wf_samples#214](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#214)]\\n [!code-vb[wf_samples#214](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#214)]\"\n  syntax:\n    content: public CallExternalMethodActivity ();\n    parameters: []\n  overload: System.Workflow.Activities.CallExternalMethodActivity.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.CallExternalMethodActivity.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  langs:\n  - csharp\n  name: CallExternalMethodActivity(String)\n  nameWithType: CallExternalMethodActivity.CallExternalMethodActivity(String)\n  fullName: System.Workflow.Activities.CallExternalMethodActivity.CallExternalMethodActivity(String)\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity\"></xref> class using the name of the activity.\n  syntax:\n    content: public CallExternalMethodActivity (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The user-defined name of the activity, used to initialize the activity name property.\n  overload: System.Workflow.Activities.CallExternalMethodActivity.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken\n  id: CorrelationToken\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  langs:\n  - csharp\n  name: CorrelationToken\n  nameWithType: CallExternalMethodActivity.CorrelationToken\n  fullName: System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets or sets the <xref href=\"System.Workflow.Runtime.CorrelationToken\"></xref> for the external method.\n  remarks: \"This property defines which specific <xref:System.Workflow.Activities.CallExternalMethodActivity> activity a given external method call comes from. This value can then be used in the payload of a local communication service event to direct that event to the correct <xref:System.Workflow.Activities.HandleExternalEventActivity> activity.  \\n  \\n [!INCLUDE[crexample](~/add/includes/ajax-current-ext-md.md)] correlation, see the [Correlated Local Service Sample](http://msdn.microsoft.com/en-us/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).\"\n  example:\n  - \"The following sample shows how to access the `CorrelationToken` property of a `CallExternalMethodActivity` object. This sample is from the Correlated Local Service SDK sample, from the CorrelatedLocalServiceWorkflow.designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Correlated Local Service Sample](http://msdn.microsoft.com/en-us/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).  \\n  \\n [!code-cs[wf_samples#200](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#200)]\\n [!code-vb[wf_samples#200](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#200)]\"\n  syntax:\n    content: public virtual System.Workflow.Runtime.CorrelationToken CorrelationToken { get; set; }\n    return:\n      type: System.Workflow.Runtime.CorrelationToken\n      description: The correlation token for the external method.\n  overload: System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.CallExternalMethodActivity.CorrelationTokenProperty\n  id: CorrelationTokenProperty\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  langs:\n  - csharp\n  name: CorrelationTokenProperty\n  nameWithType: CallExternalMethodActivity.CorrelationTokenProperty\n  fullName: System.Workflow.Activities.CallExternalMethodActivity.CorrelationTokenProperty\n  type: Field\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken*> property.\n  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty CorrelationTokenProperty;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.CallExternalMethodActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  langs:\n  - csharp\n  name: Execute(ActivityExecutionContext)\n  nameWithType: CallExternalMethodActivity.Execute(ActivityExecutionContext)\n  fullName: System.Workflow.Activities.CallExternalMethodActivity.Execute(ActivityExecutionContext)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Tries to run the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity\"></xref> with the specified <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref>.\n  syntax:\n    content: protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> that contains the execution environment in which to run the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity\"></xref>.\n    return:\n      type: System.Workflow.ComponentModel.ActivityExecutionStatus\n      description: One of the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"></xref> values.\n  overload: System.Workflow.Activities.CallExternalMethodActivity.Execute*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: This &lt;xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A?displayProperty=fullName&gt; is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>executionContext</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The service object for the <code>executionContext</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  platform:\n  - net462\n- uid: System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties\n  id: InitializeProperties\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  langs:\n  - csharp\n  name: InitializeProperties()\n  nameWithType: CallExternalMethodActivity.InitializeProperties()\n  fullName: System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties()\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Performs initialization on dependency properties.\n  remarks: This method initializes the <xref:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken%2A> property, verifies the <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> and <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> properties are set and verifies that the event referenced in the <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> property can be found in the interface referenced in the <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> property.\n  syntax:\n    content: protected override void InitializeProperties ();\n    parameters: []\n  overload: System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.CallExternalMethodActivity.InterfaceType\n  id: InterfaceType\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  langs:\n  - csharp\n  name: InterfaceType\n  nameWithType: CallExternalMethodActivity.InterfaceType\n  fullName: System.Workflow.Activities.CallExternalMethodActivity.InterfaceType\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets or sets an external method's declaring interface that has the <xref href=\"System.Workflow.Activities.ExternalDataExchangeAttribute\"></xref>.\n  remarks: ''\n  example:\n  - \"The following code example shows how to set the InterfaceType property. The interface type must be attributed with the <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>. This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Listen Sample](http://msdn.microsoft.com/en-us/1cec0e82-7544-429f-b717-0fc25eb42b7f).  \\n  \\n [!code-cs[wf_samples#217](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#217)]\\n [!code-vb[wf_samples#217](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#217)]\"\n  syntax:\n    content: public virtual Type InterfaceType { get; set; }\n    return:\n      type: System.Type\n      description: The external method's declaring interface that has the <xref href=\"System.Workflow.Activities.ExternalDataExchangeAttribute\"></xref>.\n  overload: System.Workflow.Activities.CallExternalMethodActivity.InterfaceType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.CallExternalMethodActivity.InterfaceTypeProperty\n  id: InterfaceTypeProperty\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  langs:\n  - csharp\n  name: InterfaceTypeProperty\n  nameWithType: CallExternalMethodActivity.InterfaceTypeProperty\n  fullName: System.Workflow.Activities.CallExternalMethodActivity.InterfaceTypeProperty\n  type: Field\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType*> property.\n  remarks: \"The <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> property corresponds to the name of the interface that was marked with the <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.  \\n  \\n [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]\"\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty InterfaceTypeProperty;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking\n  id: MethodInvoking\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  langs:\n  - csharp\n  name: MethodInvoking\n  nameWithType: CallExternalMethodActivity.MethodInvoking\n  fullName: System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking\n  type: Event\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Occurs before invoking the method.\n  remarks: ''\n  example:\n  - \"The following code example shows how to use the MethodInvoking event to set the method to call before invoking the external method. This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Listen Sample](http://msdn.microsoft.com/en-us/1cec0e82-7544-429f-b717-0fc25eb42b7f).  \\n  \\n [!code-cs[wf_samples#217](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#217)]\\n [!code-vb[wf_samples#217](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#217)]\"\n  syntax:\n    content: public event EventHandler MethodInvoking;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.CallExternalMethodActivity.MethodInvokingEvent\n  id: MethodInvokingEvent\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  langs:\n  - csharp\n  name: MethodInvokingEvent\n  nameWithType: CallExternalMethodActivity.MethodInvokingEvent\n  fullName: System.Workflow.Activities.CallExternalMethodActivity.MethodInvokingEvent\n  type: Field\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking\"></xref> event.\n  remarks: \"The <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking> event defines an event delegate that is executed before the activity invokes the external method on the local service.  \\n  \\n [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]\"\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty MethodInvokingEvent;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.CallExternalMethodActivity.MethodName\n  id: MethodName\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  langs:\n  - csharp\n  name: MethodName\n  nameWithType: CallExternalMethodActivity.MethodName\n  fullName: System.Workflow.Activities.CallExternalMethodActivity.MethodName\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets or sets the name of the method to be called on the local service registered with the <xref href=\"System.Workflow.Activities.ExternalDataExchangeService\"></xref>.\n  remarks: ''\n  example:\n  - \"The following code example shows how to use the MethodName property to set the method name of the external method. This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Listen Sample](http://msdn.microsoft.com/en-us/1cec0e82-7544-429f-b717-0fc25eb42b7f).  \\n  \\n [!code-cs[wf_samples#217](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#217)]\\n [!code-vb[wf_samples#217](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#217)]\"\n  syntax:\n    content: public virtual string MethodName { get; set; }\n    return:\n      type: System.String\n      description: The method name of the <xref href=\"System.Workflow.Activities.ExternalDataExchangeService\"></xref> interface.\n  overload: System.Workflow.Activities.CallExternalMethodActivity.MethodName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.CallExternalMethodActivity.MethodNameProperty\n  id: MethodNameProperty\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  langs:\n  - csharp\n  name: MethodNameProperty\n  nameWithType: CallExternalMethodActivity.MethodNameProperty\n  fullName: System.Workflow.Activities.CallExternalMethodActivity.MethodNameProperty\n  type: Field\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName*> property.\n  remarks: \"The <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> property corresponds to the name of a method contained on an interface that is marked with the <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.  \\n  \\n [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]\"\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty MethodNameProperty;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked(System.EventArgs)\n  id: OnMethodInvoked(System.EventArgs)\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  langs:\n  - csharp\n  name: OnMethodInvoked(EventArgs)\n  nameWithType: CallExternalMethodActivity.OnMethodInvoked(EventArgs)\n  fullName: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked(EventArgs)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Provides a hook for derived classes to extract out and return values from the <xref:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings*>. This method is called just after the external method is run.\n  remarks: ''\n  example:\n  - \"The following example shows an implementation of the `OnMethodInvoked` method.  \\n  \\n [!code-cs[wf_samples#1](~/add/codesnippet/csharp/wf_snippets/snippets.cs#1)]\\n [!code-vb[wf_samples#1](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#1)]\"\n  syntax:\n    content: protected virtual void OnMethodInvoked (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the data for the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking\"></xref> event.\n  overload: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking(System.EventArgs)\n  id: OnMethodInvoking(System.EventArgs)\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  langs:\n  - csharp\n  name: OnMethodInvoking(EventArgs)\n  nameWithType: CallExternalMethodActivity.OnMethodInvoking(EventArgs)\n  fullName: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking(EventArgs)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Provides a hook for derived classes to set <xref:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings*>. This method is called just before the external method is run.\n  remarks: ''\n  example:\n  - \"The following example demonstrates an implementation of the `OnMethodInvoking` method. This example is from the Correlated Local Service SDK sample, from the CreateTask.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Correlated Local Service Sample](http://msdn.microsoft.com/en-us/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).  \\n  \\n [!code-cs[wf_samples#207](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#207)]\\n [!code-vb[wf_samples#207](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#207)]\"\n  syntax:\n    content: protected virtual void OnMethodInvoking (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the data for the <xref href=\"System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking\"></xref> event.\n  overload: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings\n  id: ParameterBindings\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  langs:\n  - csharp\n  name: ParameterBindings\n  nameWithType: CallExternalMethodActivity.ParameterBindings\n  fullName: System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets the collection of bindable parameters as found in the external method's formal parameter list.\n  remarks: ''\n  example:\n  - \"The following example shows how to add a parameter binding to the parameter bindings collection. This example is from the Host Communication SDK sample, from the VotingServiceWorkflow.designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Host Communication Sample](http://msdn.microsoft.com/en-us/ce4b0b8c-bfa3-4c24-b85a-5835a440ea8f).  \\n  \\n [!code-cs[WF_Samples#301](~/add/codesnippet/csharp/wf_snippets/snippets38.cs#301)]\"\n  syntax:\n    content: public System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings { get; }\n    return:\n      type: System.Workflow.ComponentModel.WorkflowParameterBindingCollection\n      description: The <xref href=\"System.Workflow.ComponentModel.WorkflowParameterBindingCollection\"></xref> of parameters to bind to.\n  overload: System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.CallExternalMethodActivity.ParameterBindingsProperty\n  id: ParameterBindingsProperty\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  langs:\n  - csharp\n  name: ParameterBindingsProperty\n  nameWithType: CallExternalMethodActivity.ParameterBindingsProperty\n  fullName: System.Workflow.Activities.CallExternalMethodActivity.ParameterBindingsProperty\n  type: Field\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings*> property.\n  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty ParameterBindingsProperty;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)\n  id: System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)\n  isEii: true\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  langs:\n  - csharp\n  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)\n  nameWithType: CallExternalMethodActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)\n  fullName: System.Workflow.Activities.CallExternalMethodActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Returns the access type for the specified property.\n  remarks: Used at compile time to validate whether the properties are correctly bound to one another. Without this interface this information is inferred directly from property getter/setters.\n  syntax:\n    content: System.Workflow.ComponentModel.Compiler.AccessTypes IDynamicPropertyTypeProvider.GetAccessType (IServiceProvider serviceProvider, string propertyName);\n    parameters:\n    - id: serviceProvider\n      type: System.IServiceProvider\n      description: An object that implements <xref:System.IServiceProvider> to provide access to design time services if they are required.\n    - id: propertyName\n      type: System.String\n      description: The name of the property.\n    return:\n      type: System.Workflow.ComponentModel.Compiler.AccessTypes\n      description: An <xref href=\"System.Workflow.ComponentModel.Compiler.AccessTypes\"></xref> enumeration value that denotes the access level of the property.\n  overload: System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)\n  id: System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)\n  isEii: true\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  langs:\n  - csharp\n  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)\n  nameWithType: CallExternalMethodActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)\n  fullName: System.Workflow.Activities.CallExternalMethodActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Returns the <xref:System.Type> of the specified property.\n  remarks: Used at compile time to validate whether the properties are correctly bound to one other.\n  syntax:\n    content: Type IDynamicPropertyTypeProvider.GetPropertyType (IServiceProvider serviceProvider, string propertyName);\n    parameters:\n    - id: serviceProvider\n      type: System.IServiceProvider\n      description: An object that implements <xref:System.IServiceProvider> to provide access to design time services if they are required.\n    - id: propertyName\n      type: System.String\n      description: The name of the property.\n    return:\n      type: System.Type\n      description: The <xref:System.Type> for the property whose name is passed as the <code>propertyName </code>parameter.\n  overload: System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: System.Workflow.ComponentModel.Activity\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Workflow.Activities.CallExternalMethodActivity.#ctor\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: CallExternalMethodActivity()\n  nameWithType: CallExternalMethodActivity.CallExternalMethodActivity()\n  fullName: System.Workflow.Activities.CallExternalMethodActivity.CallExternalMethodActivity()\n- uid: System.Workflow.Activities.CallExternalMethodActivity.#ctor(System.String)\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: CallExternalMethodActivity(String)\n  nameWithType: CallExternalMethodActivity.CallExternalMethodActivity(String)\n  fullName: System.Workflow.Activities.CallExternalMethodActivity.CallExternalMethodActivity(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: CorrelationToken\n  nameWithType: CallExternalMethodActivity.CorrelationToken\n  fullName: System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken\n- uid: System.Workflow.Runtime.CorrelationToken\n  parent: System.Workflow.Runtime\n  isExternal: false\n  name: CorrelationToken\n  nameWithType: CorrelationToken\n  fullName: System.Workflow.Runtime.CorrelationToken\n- uid: System.Workflow.Activities.CallExternalMethodActivity.CorrelationTokenProperty\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: CorrelationTokenProperty\n  nameWithType: CallExternalMethodActivity.CorrelationTokenProperty\n  fullName: System.Workflow.Activities.CallExternalMethodActivity.CorrelationTokenProperty\n- uid: System.Workflow.ComponentModel.DependencyProperty\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Workflow.ComponentModel.DependencyProperty\n- uid: System.Workflow.Activities.CallExternalMethodActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: Execute(ActivityExecutionContext)\n  nameWithType: CallExternalMethodActivity.Execute(ActivityExecutionContext)\n  fullName: System.Workflow.Activities.CallExternalMethodActivity.Execute(ActivityExecutionContext)\n- uid: System.Workflow.ComponentModel.ActivityExecutionStatus\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionStatus\n  nameWithType: ActivityExecutionStatus\n  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus\n- uid: System.Workflow.ComponentModel.ActivityExecutionContext\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionContext\n  nameWithType: ActivityExecutionContext\n  fullName: System.Workflow.ComponentModel.ActivityExecutionContext\n- uid: System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: InitializeProperties()\n  nameWithType: CallExternalMethodActivity.InitializeProperties()\n  fullName: System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties()\n- uid: System.Workflow.Activities.CallExternalMethodActivity.InterfaceType\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: InterfaceType\n  nameWithType: CallExternalMethodActivity.InterfaceType\n  fullName: System.Workflow.Activities.CallExternalMethodActivity.InterfaceType\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Workflow.Activities.CallExternalMethodActivity.InterfaceTypeProperty\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: InterfaceTypeProperty\n  nameWithType: CallExternalMethodActivity.InterfaceTypeProperty\n  fullName: System.Workflow.Activities.CallExternalMethodActivity.InterfaceTypeProperty\n- uid: System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: MethodInvoking\n  nameWithType: CallExternalMethodActivity.MethodInvoking\n  fullName: System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking\n- uid: System.EventHandler\n  parent: System\n  isExternal: true\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Workflow.Activities.CallExternalMethodActivity.MethodInvokingEvent\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: MethodInvokingEvent\n  nameWithType: CallExternalMethodActivity.MethodInvokingEvent\n  fullName: System.Workflow.Activities.CallExternalMethodActivity.MethodInvokingEvent\n- uid: System.Workflow.Activities.CallExternalMethodActivity.MethodName\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: MethodName\n  nameWithType: CallExternalMethodActivity.MethodName\n  fullName: System.Workflow.Activities.CallExternalMethodActivity.MethodName\n- uid: System.Workflow.Activities.CallExternalMethodActivity.MethodNameProperty\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: MethodNameProperty\n  nameWithType: CallExternalMethodActivity.MethodNameProperty\n  fullName: System.Workflow.Activities.CallExternalMethodActivity.MethodNameProperty\n- uid: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked(System.EventArgs)\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: OnMethodInvoked(EventArgs)\n  nameWithType: CallExternalMethodActivity.OnMethodInvoked(EventArgs)\n  fullName: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked(EventArgs)\n- uid: System.EventArgs\n  parent: System\n  isExternal: true\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking(System.EventArgs)\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: OnMethodInvoking(EventArgs)\n  nameWithType: CallExternalMethodActivity.OnMethodInvoking(EventArgs)\n  fullName: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking(EventArgs)\n- uid: System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: ParameterBindings\n  nameWithType: CallExternalMethodActivity.ParameterBindings\n  fullName: System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings\n- uid: System.Workflow.ComponentModel.WorkflowParameterBindingCollection\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: WorkflowParameterBindingCollection\n  nameWithType: WorkflowParameterBindingCollection\n  fullName: System.Workflow.ComponentModel.WorkflowParameterBindingCollection\n- uid: System.Workflow.Activities.CallExternalMethodActivity.ParameterBindingsProperty\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: ParameterBindingsProperty\n  nameWithType: CallExternalMethodActivity.ParameterBindingsProperty\n  fullName: System.Workflow.Activities.CallExternalMethodActivity.ParameterBindingsProperty\n- uid: System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)\n  nameWithType: CallExternalMethodActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)\n  fullName: System.Workflow.Activities.CallExternalMethodActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)\n- uid: System.Workflow.ComponentModel.Compiler.AccessTypes\n  parent: System.Workflow.ComponentModel.Compiler\n  isExternal: false\n  name: AccessTypes\n  nameWithType: AccessTypes\n  fullName: System.Workflow.ComponentModel.Compiler.AccessTypes\n- uid: System.IServiceProvider\n  parent: System\n  isExternal: true\n  name: IServiceProvider\n  nameWithType: IServiceProvider\n  fullName: System.IServiceProvider\n- uid: System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)\n  nameWithType: CallExternalMethodActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)\n  fullName: System.Workflow.Activities.CallExternalMethodActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)\n- uid: System.Workflow.Activities.CallExternalMethodActivity.#ctor*\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: CallExternalMethodActivity\n  nameWithType: CallExternalMethodActivity.CallExternalMethodActivity\n- uid: System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken*\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: CorrelationToken\n  nameWithType: CallExternalMethodActivity.CorrelationToken\n- uid: System.Workflow.Activities.CallExternalMethodActivity.Execute*\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: Execute\n  nameWithType: CallExternalMethodActivity.Execute\n- uid: System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties*\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: InitializeProperties\n  nameWithType: CallExternalMethodActivity.InitializeProperties\n- uid: System.Workflow.Activities.CallExternalMethodActivity.InterfaceType*\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: InterfaceType\n  nameWithType: CallExternalMethodActivity.InterfaceType\n- uid: System.Workflow.Activities.CallExternalMethodActivity.MethodName*\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: MethodName\n  nameWithType: CallExternalMethodActivity.MethodName\n- uid: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked*\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: OnMethodInvoked\n  nameWithType: CallExternalMethodActivity.OnMethodInvoked\n- uid: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking*\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: OnMethodInvoking\n  nameWithType: CallExternalMethodActivity.OnMethodInvoking\n- uid: System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings*\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: ParameterBindings\n  nameWithType: CallExternalMethodActivity.ParameterBindings\n- uid: System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType*\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType\n  nameWithType: CallExternalMethodActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType\n- uid: System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType*\n  parent: System.Workflow.Activities.CallExternalMethodActivity\n  isExternal: false\n  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType\n  nameWithType: CallExternalMethodActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType\n"}