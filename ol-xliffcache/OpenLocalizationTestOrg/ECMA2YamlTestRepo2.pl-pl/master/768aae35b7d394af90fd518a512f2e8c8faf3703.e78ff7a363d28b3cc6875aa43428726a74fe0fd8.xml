{"nodes":[{"pos":[519,573],"content":"Specifies that a data member is a SOAP message header.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that a data member is a SOAP message header.","pos":[0,54]}]},{"pos":[586,4611],"content":"The MessageHeaderAttribute attribute allows you to map fields and properties of a type marked with the <xref:System.ServiceModel.MessageContractAttribute> attribute to SOAP message headers. The field or property can be of a simple type or a composite type that can be serialized.       For information on controlling the serialization of the contents of a SOAP body without modifying the default SOAP envelope itself, see <xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=fullName>, [Specifying Data Transfer in Service Contracts](~/add/includes/ajax-current-ext-md.md), and [Using Data Contracts](~/add/includes/ajax-current-ext-md.md).       For more information about creating message contracts, see [Using Message Contracts](~/add/includes/ajax-current-ext-md.md).       The SOAP standard defines the following attributes that can exist on a header:      -   `Actor` or `Role` (`Actor` in SOAP 1.1, `Role` in SOAP 1.2)      -   `MustUnderstand`      -   `Relay`       The `Actor` or `Role` attribute specifies the URI of the node for which a given header is intended. The `MustUnderstand` attribute specifies whether the header understands the node processing. The `Relay` attribute specifies whether the header is to be relayed to downstream nodes. [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] does not perform any processing of these attributes on incoming messages, except for the `MustUnderstand` attribute.       You can, however, read and write these attributes, even though they are not sent by default. You can set the attribute values in two ways. First, you can change the <xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A>, <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A> and <xref:System.ServiceModel.MessageHeaderAttribute.Relay%2A> properties on the MessageHeaderAttribute. (There is no `Role` property – set the <xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A> property and `Role` is passed if SOAP 1.2 is used). For example:       [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]       The second way to control these attributes is by making the desired header type the type parameter of the <xref:System.ServiceModel.MessageHeader%601> class and using the resulting type together with the MessageHeaderAttribute. Then use the <xref:System.ServiceModel.MessageHeader%601> properties programmatically to set the SOAP attributes. For example:       [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]       [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]       If both the dynamic and the static control mechanisms are used, the static settings are the default but can be overridden using the dynamic mechanism. For example:       [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]       [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]       Creating repeated headers with dynamic attribute control is allowed. For example:      ```   [MessageHeaderArray] public MessageHeader<Person> documentApprovers[];   ```       On the receiving side, reading these SOAP attributes can only be done if the generic <xref:System.ServiceModel.MessageHeader%601> class is used. Examine the <xref:System.ServiceModel.MessageHeader%601.Actor%2A>, <xref:System.ServiceModel.MessageHeader%601.Relay%2A> or <xref:System.ServiceModel.MessageHeader%601.MustUnderstand%2A> properties of a header of the <xref:System.ServiceModel.MessageHeader%601> type to discover the attribute settings on the received message.       When a message is received and then sent back, the SOAP attribute settings only roundtrip for headers of the <xref:System.ServiceModel.MessageHeader%601> type.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The MessageHeaderAttribute attribute allows you to map fields and properties of a type marked with the &lt;xref:System.ServiceModel.MessageContractAttribute&gt; attribute to SOAP message headers.","pos":[0,189],"source":"The MessageHeaderAttribute attribute allows you to map fields and properties of a type marked with the <xref:System.ServiceModel.MessageContractAttribute> attribute to SOAP message headers."},{"content":"The field or property can be of a simple type or a composite type that can be serialized.","pos":[190,279]},{"content":"For information on controlling the serialization of the contents of a SOAP body without modifying the default SOAP envelope itself, see &lt;xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=fullName&gt;, <bpt id=\"p1\">[</bpt>Specifying Data Transfer in Service Contracts<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>, and <bpt id=\"p2\">[</bpt>Using Data Contracts<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[286,660],"source":"       For information on controlling the serialization of the contents of a SOAP body without modifying the default SOAP envelope itself, see <xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=fullName>, [Specifying Data Transfer in Service Contracts](~/add/includes/ajax-current-ext-md.md), and [Using Data Contracts](~/add/includes/ajax-current-ext-md.md)."},{"content":"For more information about creating message contracts, see <bpt id=\"p1\">[</bpt>Using Message Contracts<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[667,791],"source":"       For more information about creating message contracts, see [Using Message Contracts](~/add/includes/ajax-current-ext-md.md)."},{"content":"The SOAP standard defines the following attributes that can exist on a header:      -   <ph id=\"ph1\">`Actor`</ph> or <ph id=\"ph2\">`Role`</ph> (<ph id=\"ph3\">`Actor`</ph> in SOAP 1.1, <ph id=\"ph4\">`Role`</ph> in SOAP 1.2)      -   <ph id=\"ph5\">`MustUnderstand`</ph><ph id=\"ph6\">      -   </ph><ph id=\"ph7\">`Relay`</ph>       The <ph id=\"ph8\">`Actor`</ph> or <ph id=\"ph9\">`Role`</ph> attribute specifies the URI of the node for which a given header is intended.","pos":[798,1094],"source":"       The SOAP standard defines the following attributes that can exist on a header:      -   `Actor` or `Role` (`Actor` in SOAP 1.1, `Role` in SOAP 1.2)      -   `MustUnderstand`      -   `Relay`       The `Actor` or `Role` attribute specifies the URI of the node for which a given header is intended."},{"content":"The <ph id=\"ph1\">`MustUnderstand`</ph> attribute specifies whether the header understands the node processing.","pos":[1095,1187],"source":" The `MustUnderstand` attribute specifies whether the header understands the node processing."},{"content":"The <ph id=\"ph1\">`Relay`</ph> attribute specifies whether the header is to be relayed to downstream nodes.","pos":[1188,1276],"source":" The `Relay` attribute specifies whether the header is to be relayed to downstream nodes."},{"content":"<ph id=\"ph1\">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> does not perform any processing of these attributes on incoming messages, except for the <ph id=\"ph2\">`MustUnderstand`</ph> attribute.","pos":[1277,1452],"source":"[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] does not perform any processing of these attributes on incoming messages, except for the `MustUnderstand` attribute."},{"content":"You can, however, read and write these attributes, even though they are not sent by default.","pos":[1459,1551]},{"content":"You can set the attribute values in two ways.","pos":[1552,1597]},{"content":"First, you can change the &lt;xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A&gt;, &lt;xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A&gt; and &lt;xref:System.ServiceModel.MessageHeaderAttribute.Relay%2A&gt; properties on the MessageHeaderAttribute.","pos":[1598,1856],"source":" First, you can change the <xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A>, <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A> and <xref:System.ServiceModel.MessageHeaderAttribute.Relay%2A> properties on the MessageHeaderAttribute."},{"content":"(There is no <ph id=\"ph1\">`Role`</ph> property – set the &lt;xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A&gt; property and <ph id=\"ph2\">`Role`</ph> is passed if SOAP 1.2 is used).","pos":[1857,2006],"source":" (There is no `Role` property – set the <xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A> property and `Role` is passed if SOAP 1.2 is used)."},{"content":"For example:       <bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>XpsCreate#XpsCreateAddPkgContent<ept id=\"p2\">](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)</ept><ept id=\"p1\">]</ept>       The second way to control these attributes is by making the desired header type the type parameter of the &lt;xref:System.ServiceModel.MessageHeader%601&gt; class and using the resulting type together with the MessageHeaderAttribute.","pos":[2007,2376],"source":" For example:       [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]       The second way to control these attributes is by making the desired header type the type parameter of the <xref:System.ServiceModel.MessageHeader%601> class and using the resulting type together with the MessageHeaderAttribute."},{"content":"Then use the &lt;xref:System.ServiceModel.MessageHeader%601&gt; properties programmatically to set the SOAP attributes.","pos":[2377,2490],"source":" Then use the <xref:System.ServiceModel.MessageHeader%601> properties programmatically to set the SOAP attributes."},{"content":"For example:       <bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>XpsCreate#XpsCreateAddPkgContent<ept id=\"p2\">](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)</ept><ept id=\"p1\">]</ept>       <bpt id=\"p3\">[!code-cs</bpt><bpt id=\"p4\">[</bpt>XpsCreate#XpsCreateAddPkgContent<ept id=\"p4\">](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)</ept><ept id=\"p3\">]</ept>       If both the dynamic and the static control mechanisms are used, the static settings are the default but can be overridden using the dynamic mechanism.","pos":[2491,2906],"source":" For example:       [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]       [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]       If both the dynamic and the static control mechanisms are used, the static settings are the default but can be overridden using the dynamic mechanism."},{"content":"For example:       <bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>XpsCreate#XpsCreateAddPkgContent<ept id=\"p2\">](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)</ept><ept id=\"p1\">]</ept>       <bpt id=\"p3\">[!code-cs</bpt><bpt id=\"p4\">[</bpt>XpsCreate#XpsCreateAddPkgContent<ept id=\"p4\">](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)</ept><ept id=\"p3\">]</ept>       Creating repeated headers with dynamic attribute control is allowed.","pos":[2907,3240],"source":" For example:       [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]       [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]       Creating repeated headers with dynamic attribute control is allowed."},{"content":"For example:      <ph id=\"ph1\">```   [MessageHeaderArray] public MessageHeader&lt;Person&gt; documentApprovers[];   ```</ph>       On the receiving side, reading these SOAP attributes can only be done if the generic &lt;xref:System.ServiceModel.MessageHeader%601&gt; class is used.","pos":[3241,3492],"source":" For example:      ```   [MessageHeaderArray] public MessageHeader<Person> documentApprovers[];   ```       On the receiving side, reading these SOAP attributes can only be done if the generic <xref:System.ServiceModel.MessageHeader%601> class is used."},{"content":"Examine the &lt;xref:System.ServiceModel.MessageHeader%601.Actor%2A&gt;, &lt;xref:System.ServiceModel.MessageHeader%601.Relay%2A&gt; or &lt;xref:System.ServiceModel.MessageHeader%601.MustUnderstand%2A&gt; properties of a header of the &lt;xref:System.ServiceModel.MessageHeader%601&gt; type to discover the attribute settings on the received message.","pos":[3493,3819],"source":" Examine the <xref:System.ServiceModel.MessageHeader%601.Actor%2A>, <xref:System.ServiceModel.MessageHeader%601.Relay%2A> or <xref:System.ServiceModel.MessageHeader%601.MustUnderstand%2A> properties of a header of the <xref:System.ServiceModel.MessageHeader%601> type to discover the attribute settings on the received message."},{"content":"When a message is received and then sent back, the SOAP attribute settings only roundtrip for headers of the &lt;xref:System.ServiceModel.MessageHeader%601&gt; type.","pos":[3826,3985],"source":"       When a message is received and then sent back, the SOAP attribute settings only roundtrip for headers of the <xref:System.ServiceModel.MessageHeader%601> type."}]},{"pos":[6132,6236],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.MessageHeaderAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.MessageHeaderAttribute\"></xref> class."},{"pos":[6775,6961],"content":"Gets or sets a URI that indicates the node at which this header is targeted. Maps to the role header attribute when SOAP 1.2 is used and the actor header attribute when SOAP 1.1 is used.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a URI that indicates the node at which this header is targeted. Maps to the role header attribute when SOAP 1.2 is used and the actor header attribute when SOAP 1.1 is used.","pos":[0,186],"nodes":[{"content":"Gets or sets a URI that indicates the node at which this header is targeted.","pos":[0,76]},{"content":"Maps to the role header attribute when SOAP 1.2 is used and the actor header attribute when SOAP 1.1 is used.","pos":[77,186]}]}]},{"pos":[6973,7084],"content":"For more information, see the Remarks section of <xref:System.ServiceModel.MessageHeaderAttribute> for details.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"For more information, see the Remarks section of &lt;xref:System.ServiceModel.MessageHeaderAttribute&gt; for details.","pos":[0,111],"source":"For more information, see the Remarks section of <xref:System.ServiceModel.MessageHeaderAttribute> for details."}]},{"pos":[7199,7381],"content":"A URI that indicates the node at which this header is targeted. This URI maps to the role header attribute when SOAP 1.2 is used and the actor header attribute when SOAP 1.1 is used.","needQuote":true,"needEscape":true,"nodes":[{"content":"A URI that indicates the node at which this header is targeted. This URI maps to the role header attribute when SOAP 1.2 is used and the actor header attribute when SOAP 1.1 is used.","pos":[0,182],"nodes":[{"content":"A URI that indicates the node at which this header is targeted.","pos":[0,63]},{"content":"This URI maps to the role header attribute when SOAP 1.2 is used and the actor header attribute when SOAP 1.1 is used.","pos":[64,182]}]}]},{"pos":[7889,8146],"content":"Specifies whether the node acting in the <xref:System.ServiceModel.MessageHeaderAttribute.Actor*> role must understand this header. This is mapped to the <xref uid=\"langword_csharp_mustUnderstand\" name=\"mustUnderstand\" href=\"\"></xref> SOAP header attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies whether the node acting in the &lt;xref:System.ServiceModel.MessageHeaderAttribute.Actor*&gt; role must understand this header.","pos":[0,131],"source":"Specifies whether the node acting in the <xref:System.ServiceModel.MessageHeaderAttribute.Actor*> role must understand this header."},{"content":"This is mapped to the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_mustUnderstand\" name=\"mustUnderstand\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> SOAP header attribute.","pos":[132,257],"source":" This is mapped to the <xref uid=\"langword_csharp_mustUnderstand\" name=\"mustUnderstand\" href=\"\"></xref> SOAP header attribute."}]},{"pos":[8159,8885],"content":"For more information, see the Remarks section of <xref:System.ServiceModel.MessageHeaderAttribute> for details.      > [!IMPORTANT] >  It is important to remember that if the MustUnderstand property is `true` in a message being sent and the application on the receiving side does not understand the header a fault is generated. Conversely, if a header with the `mustUnderstand` SOAP header attribute set to `true` is received by [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)], it must be a part of the message contract (or must be processed by one of the [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] channels); otherwise, it is assumed that the header is not understood and an exception is thrown.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"For more information, see the Remarks section of &lt;xref:System.ServiceModel.MessageHeaderAttribute&gt; for details.","pos":[0,111],"source":"For more information, see the Remarks section of <xref:System.ServiceModel.MessageHeaderAttribute> for details."},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  It is important to remember that if the MustUnderstand property is <ph id=\"ph2\">`true`</ph> in a message being sent and the application on the receiving side does not understand the header a fault is generated.","pos":[117,327],"source":"      > [!IMPORTANT] >  It is important to remember that if the MustUnderstand property is `true` in a message being sent and the application on the receiving side does not understand the header a fault is generated."},{"content":"Conversely, if a header with the <ph id=\"ph1\">`mustUnderstand`</ph> SOAP header attribute set to <ph id=\"ph2\">`true`</ph> is received by <ph id=\"ph3\">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph>, it must be a part of the message contract (or must be processed by one of the <ph id=\"ph4\">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> channels); otherwise, it is assumed that the header is not understood and an exception is thrown.","pos":[328,723],"source":" Conversely, if a header with the `mustUnderstand` SOAP header attribute set to `true` is received by [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)], it must be a part of the message contract (or must be processed by one of the [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] channels); otherwise, it is assumed that the header is not understood and an exception is thrown."}]},{"pos":[9691,9943],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the node acting in the &lt;xref:System.ServiceModel.MessageHeaderAttribute.Actor*&gt; role must understand this header; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the node acting in the <xref:System.ServiceModel.MessageHeaderAttribute.Actor*> role must understand this header; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10415,10590],"content":"Specifies whether this header is to be relayed to downstream nodes. This is mapped to the <xref uid=\"langword_csharp_relay\" name=\"relay\" href=\"\"></xref> SOAP header attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies whether this header is to be relayed to downstream nodes.","pos":[0,67]},{"content":"This is mapped to the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_relay\" name=\"relay\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> SOAP header attribute.","pos":[68,175],"source":" This is mapped to the <xref uid=\"langword_csharp_relay\" name=\"relay\" href=\"\"></xref> SOAP header attribute."}]},{"pos":[10602,10761],"content":"This property is ignored when SOAP 1.1 is used. For more information, see the Remarks section of <xref:System.ServiceModel.MessageHeaderAttribute> for details.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property is ignored when SOAP 1.1 is used. For more information, see the Remarks section of <xref:System.ServiceModel.MessageHeaderAttribute> for details.","pos":[0,159],"nodes":[{"content":"This property is ignored when SOAP 1.1 is used.","pos":[0,47]},{"content":"For more information, see the Remarks section of &lt;xref:System.ServiceModel.MessageHeaderAttribute&gt; for details.","pos":[48,159],"source":" For more information, see the Remarks section of <xref:System.ServiceModel.MessageHeaderAttribute> for details."}]}]},{"pos":[10875,11063],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this header is to be relayed to downstream nodes; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this header is to be relayed to downstream nodes; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.MessageHeaderAttribute\n  id: MessageHeaderAttribute\n  children:\n  - System.ServiceModel.MessageHeaderAttribute.#ctor\n  - System.ServiceModel.MessageHeaderAttribute.Actor\n  - System.ServiceModel.MessageHeaderAttribute.MustUnderstand\n  - System.ServiceModel.MessageHeaderAttribute.Relay\n  langs:\n  - csharp\n  name: MessageHeaderAttribute\n  nameWithType: MessageHeaderAttribute\n  fullName: System.ServiceModel.MessageHeaderAttribute\n  type: Class\n  summary: Specifies that a data member is a SOAP message header.\n  remarks: \"The MessageHeaderAttribute attribute allows you to map fields and properties of a type marked with the <xref:System.ServiceModel.MessageContractAttribute> attribute to SOAP message headers. The field or property can be of a simple type or a composite type that can be serialized.  \\n  \\n For information on controlling the serialization of the contents of a SOAP body without modifying the default SOAP envelope itself, see <xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=fullName>, [Specifying Data Transfer in Service Contracts](~/add/includes/ajax-current-ext-md.md), and [Using Data Contracts](~/add/includes/ajax-current-ext-md.md).  \\n  \\n For more information about creating message contracts, see [Using Message Contracts](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The SOAP standard defines the following attributes that can exist on a header:  \\n  \\n-   `Actor` or `Role` (`Actor` in SOAP 1.1, `Role` in SOAP 1.2)  \\n  \\n-   `MustUnderstand`  \\n  \\n-   `Relay`  \\n  \\n The `Actor` or `Role` attribute specifies the URI of the node for which a given header is intended. The `MustUnderstand` attribute specifies whether the header understands the node processing. The `Relay` attribute specifies whether the header is to be relayed to downstream nodes. [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] does not perform any processing of these attributes on incoming messages, except for the `MustUnderstand` attribute.  \\n  \\n You can, however, read and write these attributes, even though they are not sent by default. You can set the attribute values in two ways. First, you can change the <xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A>, <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A> and <xref:System.ServiceModel.MessageHeaderAttribute.Relay%2A> properties on the MessageHeaderAttribute. (There is no `Role` property – set the <xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A> property and `Role` is passed if SOAP 1.2 is used). For example:  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \\n  \\n The second way to control these attributes is by making the desired header type the type parameter of the <xref:System.ServiceModel.MessageHeader%601> class and using the resulting type together with the MessageHeaderAttribute. Then use the <xref:System.ServiceModel.MessageHeader%601> properties programmatically to set the SOAP attributes. For example:  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \\n  \\n If both the dynamic and the static control mechanisms are used, the static settings are the default but can be overridden using the dynamic mechanism. For example:  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \\n  \\n Creating repeated headers with dynamic attribute control is allowed. For example:  \\n  \\n```  \\n[MessageHeaderArray] public MessageHeader<Person> documentApprovers[];  \\n```  \\n  \\n On the receiving side, reading these SOAP attributes can only be done if the generic <xref:System.ServiceModel.MessageHeader%601> class is used. Examine the <xref:System.ServiceModel.MessageHeader%601.Actor%2A>, <xref:System.ServiceModel.MessageHeader%601.Relay%2A> or <xref:System.ServiceModel.MessageHeader%601.MustUnderstand%2A> properties of a header of the <xref:System.ServiceModel.MessageHeader%601> type to discover the attribute settings on the received message.  \\n  \\n When a message is received and then sent back, the SOAP attribute settings only roundtrip for headers of the <xref:System.ServiceModel.MessageHeader%601> type.\"\n  example:\n  - \"The following code example shows the use of the MessageHeaderAttribute to create a SOAP header for the response message with the <xref:System.ServiceModel.MessageContractMemberAttribute.Name%2A>, <xref:System.ServiceModel.MessageContractMemberAttribute.Namespace%2A> and <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A> properties set to values appropriate for this header. The code example is followed by an example of the message when sent.  \\n  \\n [!code-vb[MessageHeaderAttribute#4](~/add/codesnippet/visualbasic/messageheaderattribute.client/services.vb#4)]\\n [!code-cs[MessageHeaderAttribute#4](~/add/codesnippet/csharp/messageheaderattribute.client/services.cs#4)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=false, Inherited=false)]\n\n      public class MessageHeaderAttribute : System.ServiceModel.MessageContractMemberAttribute\n  inheritance:\n  - System.ServiceModel.MessageContractMemberAttribute\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.MessageHeaderAttribute.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.MessageHeaderAttribute\n  langs:\n  - csharp\n  name: MessageHeaderAttribute()\n  nameWithType: MessageHeaderAttribute.MessageHeaderAttribute()\n  fullName: System.ServiceModel.MessageHeaderAttribute.MessageHeaderAttribute()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.MessageHeaderAttribute\"></xref> class.\n  syntax:\n    content: public MessageHeaderAttribute ();\n    parameters: []\n  overload: System.ServiceModel.MessageHeaderAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.MessageHeaderAttribute.Actor\n  id: Actor\n  parent: System.ServiceModel.MessageHeaderAttribute\n  langs:\n  - csharp\n  name: Actor\n  nameWithType: MessageHeaderAttribute.Actor\n  fullName: System.ServiceModel.MessageHeaderAttribute.Actor\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets a URI that indicates the node at which this header is targeted. Maps to the role header attribute when SOAP 1.2 is used and the actor header attribute when SOAP 1.1 is used.\n  remarks: For more information, see the Remarks section of <xref:System.ServiceModel.MessageHeaderAttribute> for details.\n  syntax:\n    content: public string Actor { get; set; }\n    return:\n      type: System.String\n      description: A URI that indicates the node at which this header is targeted. This URI maps to the role header attribute when SOAP 1.2 is used and the actor header attribute when SOAP 1.1 is used.\n  overload: System.ServiceModel.MessageHeaderAttribute.Actor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.MessageHeaderAttribute.MustUnderstand\n  id: MustUnderstand\n  parent: System.ServiceModel.MessageHeaderAttribute\n  langs:\n  - csharp\n  name: MustUnderstand\n  nameWithType: MessageHeaderAttribute.MustUnderstand\n  fullName: System.ServiceModel.MessageHeaderAttribute.MustUnderstand\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Specifies whether the node acting in the <xref:System.ServiceModel.MessageHeaderAttribute.Actor*> role must understand this header. This is mapped to the <xref uid=\"langword_csharp_mustUnderstand\" name=\"mustUnderstand\" href=\"\"></xref> SOAP header attribute.\n  remarks: \"For more information, see the Remarks section of <xref:System.ServiceModel.MessageHeaderAttribute> for details.  \\n  \\n> [!IMPORTANT]\\n>  It is important to remember that if the MustUnderstand property is `true` in a message being sent and the application on the receiving side does not understand the header a fault is generated. Conversely, if a header with the `mustUnderstand` SOAP header attribute set to `true` is received by [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)], it must be a part of the message contract (or must be processed by one of the [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] channels); otherwise, it is assumed that the header is not understood and an exception is thrown.\"\n  example:\n  - \"The following code example shows the use of the <xref:System.ServiceModel.MessageHeaderAttribute> to create a SOAP header for the response message with the <xref:System.ServiceModel.MessageContractMemberAttribute.Name%2A>, <xref:System.ServiceModel.MessageContractMemberAttribute.Namespace%2A> and MustUnderstand properties set to values appropriate for this header. The code example is followed by an example of the message when sent.  \\n  \\n [!code-vb[MessageHeaderAttribute#4](~/add/codesnippet/visualbasic/messageheaderattribute.client/services.vb#4)]\\n [!code-cs[MessageHeaderAttribute#4](~/add/codesnippet/csharp/messageheaderattribute.client/services.cs#4)]\"\n  syntax:\n    content: public bool MustUnderstand { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the node acting in the <xref:System.ServiceModel.MessageHeaderAttribute.Actor*> role must understand this header; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.MessageHeaderAttribute.MustUnderstand*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.MessageHeaderAttribute.Relay\n  id: Relay\n  parent: System.ServiceModel.MessageHeaderAttribute\n  langs:\n  - csharp\n  name: Relay\n  nameWithType: MessageHeaderAttribute.Relay\n  fullName: System.ServiceModel.MessageHeaderAttribute.Relay\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Specifies whether this header is to be relayed to downstream nodes. This is mapped to the <xref uid=\"langword_csharp_relay\" name=\"relay\" href=\"\"></xref> SOAP header attribute.\n  remarks: This property is ignored when SOAP 1.1 is used. For more information, see the Remarks section of <xref:System.ServiceModel.MessageHeaderAttribute> for details.\n  syntax:\n    content: public bool Relay { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this header is to be relayed to downstream nodes; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.MessageHeaderAttribute.Relay*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ServiceModel.MessageContractMemberAttribute\n  isExternal: false\n  name: System.ServiceModel.MessageContractMemberAttribute\n- uid: System.ServiceModel.MessageHeaderAttribute.#ctor\n  parent: System.ServiceModel.MessageHeaderAttribute\n  isExternal: false\n  name: MessageHeaderAttribute()\n  nameWithType: MessageHeaderAttribute.MessageHeaderAttribute()\n  fullName: System.ServiceModel.MessageHeaderAttribute.MessageHeaderAttribute()\n- uid: System.ServiceModel.MessageHeaderAttribute.Actor\n  parent: System.ServiceModel.MessageHeaderAttribute\n  isExternal: false\n  name: Actor\n  nameWithType: MessageHeaderAttribute.Actor\n  fullName: System.ServiceModel.MessageHeaderAttribute.Actor\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.MessageHeaderAttribute.MustUnderstand\n  parent: System.ServiceModel.MessageHeaderAttribute\n  isExternal: false\n  name: MustUnderstand\n  nameWithType: MessageHeaderAttribute.MustUnderstand\n  fullName: System.ServiceModel.MessageHeaderAttribute.MustUnderstand\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.MessageHeaderAttribute.Relay\n  parent: System.ServiceModel.MessageHeaderAttribute\n  isExternal: false\n  name: Relay\n  nameWithType: MessageHeaderAttribute.Relay\n  fullName: System.ServiceModel.MessageHeaderAttribute.Relay\n- uid: System.ServiceModel.MessageHeaderAttribute.#ctor*\n  parent: System.ServiceModel.MessageHeaderAttribute\n  isExternal: false\n  name: MessageHeaderAttribute\n  nameWithType: MessageHeaderAttribute.MessageHeaderAttribute\n- uid: System.ServiceModel.MessageHeaderAttribute.Actor*\n  parent: System.ServiceModel.MessageHeaderAttribute\n  isExternal: false\n  name: Actor\n  nameWithType: MessageHeaderAttribute.Actor\n- uid: System.ServiceModel.MessageHeaderAttribute.MustUnderstand*\n  parent: System.ServiceModel.MessageHeaderAttribute\n  isExternal: false\n  name: MustUnderstand\n  nameWithType: MessageHeaderAttribute.MustUnderstand\n- uid: System.ServiceModel.MessageHeaderAttribute.Relay*\n  parent: System.ServiceModel.MessageHeaderAttribute\n  isExternal: false\n  name: Relay\n  nameWithType: MessageHeaderAttribute.Relay\n"}