{"nodes":[{"pos":[497,844],"content":"Exposes a node of a hierarchical data structure, including the node object and some properties that describe characteristics of the node. Objects that implement the IHierarchyData interface can be contained in <xref href=\"System.Web.UI.IHierarchicalEnumerable\"></xref> collections, and are used by ASP.NET site navigation and data source controls.","needQuote":true,"needEscape":true,"nodes":[{"content":"Exposes a node of a hierarchical data structure, including the node object and some properties that describe characteristics of the node.","pos":[0,137]},{"content":"Objects that implement the IHierarchyData interface can be contained in <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.IHierarchicalEnumerable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collections, and are used by ASP.NET site navigation and data source controls.","pos":[138,347],"source":" Objects that implement the IHierarchyData interface can be contained in <xref href=\"System.Web.UI.IHierarchicalEnumerable\"></xref> collections, and are used by ASP.NET site navigation and data source controls."}]},{"pos":[856,1193],"content":"The IHierarchyData interface is implemented by classes that represent nodes of a hierarchical structure, and track the hierarchical relationships to their parent and child nodes. Classes that implement the IHierarchyData interface can be contained in collections that implement the <xref:System.Web.UI.IHierarchicalEnumerable> interface.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The IHierarchyData interface is implemented by classes that represent nodes of a hierarchical structure, and track the hierarchical relationships to their parent and child nodes. Classes that implement the IHierarchyData interface can be contained in collections that implement the <xref:System.Web.UI.IHierarchicalEnumerable> interface.","pos":[0,337],"nodes":[{"content":"The IHierarchyData interface is implemented by classes that represent nodes of a hierarchical structure, and track the hierarchical relationships to their parent and child nodes.","pos":[0,178]},{"content":"Classes that implement the IHierarchyData interface can be contained in collections that implement the &lt;xref:System.Web.UI.IHierarchicalEnumerable&gt; interface.","pos":[179,337],"source":" Classes that implement the IHierarchyData interface can be contained in collections that implement the <xref:System.Web.UI.IHierarchicalEnumerable> interface."}]}]},{"pos":[2883,2979],"content":"Gets an enumeration object that represents all the child nodes of the current hierarchical node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an enumeration object that represents all the child nodes of the current hierarchical node.","pos":[0,96]}]},{"pos":[2991,3149],"content":"You can use the <xref:System.Web.UI.IHierarchyData.HasChildren%2A> property to determine whether the <xref:System.Web.UI.IHierarchyData> node has child nodes.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can use the &lt;xref:System.Web.UI.IHierarchyData.HasChildren%2A&gt; property to determine whether the &lt;xref:System.Web.UI.IHierarchyData&gt; node has child nodes.","pos":[0,158],"source":"You can use the <xref:System.Web.UI.IHierarchyData.HasChildren%2A> property to determine whether the <xref:System.Web.UI.IHierarchyData> node has child nodes."}]},{"pos":[3920,4041],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.IHierarchicalEnumerable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection of child nodes of the current hierarchical node.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Web.UI.IHierarchicalEnumerable\"></xref> collection of child nodes of the current hierarchical node."},{"pos":[4455,4585],"content":"Gets an <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.IHierarchyData\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the parent node of the current hierarchical node.","needQuote":true,"needEscape":true,"source":"Gets an <xref href=\"System.Web.UI.IHierarchyData\"></xref> object that represents the parent node of the current hierarchical node."},{"pos":[4597,4923],"content":"The &lt;xref:System.Web.UI.IHierarchyData&gt; interface does not define a HasParent convenience property, so callers must check the return value of the GetParent method for <ph id=\"ph1\">`null`</ph> to determine whether the current &lt;xref:System.Web.UI.IHierarchyData&gt; node is the root node of the hierarchical data structure to which the node belongs.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The <xref:System.Web.UI.IHierarchyData> interface does not define a HasParent convenience property, so callers must check the return value of the GetParent method for `null` to determine whether the current <xref:System.Web.UI.IHierarchyData> node is the root node of the hierarchical data structure to which the node belongs."},{"pos":[5933,6058],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.IHierarchyData\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the parent node of the current hierarchical node.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Web.UI.IHierarchyData\"></xref> object that represents the parent node of the current hierarchical node."},{"pos":[6476,6618],"content":"Indicates whether the hierarchical data node that the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.IHierarchyData\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object represents has any child nodes.","needQuote":true,"needEscape":true,"source":"Indicates whether the hierarchical data node that the <xref href=\"System.Web.UI.IHierarchyData\"></xref> object represents has any child nodes."},{"pos":[6630,7011],"content":"The HasChildren property is a convenience property that enables callers to avoid checking the return value of the <xref:System.Web.UI.IHierarchyData.GetChildren%2A> method for `null`. If the HasChildren property returns `true`, call the <xref:System.Web.UI.IHierarchyData.GetChildren%2A> method to retrieve an <xref:System.Web.UI.IHierarchicalEnumerable> collection of child nodes.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The HasChildren property is a convenience property that enables callers to avoid checking the return value of the &lt;xref:System.Web.UI.IHierarchyData.GetChildren%2A&gt; method for <ph id=\"ph1\">`null`</ph>.","pos":[0,183],"source":"The HasChildren property is a convenience property that enables callers to avoid checking the return value of the <xref:System.Web.UI.IHierarchyData.GetChildren%2A> method for `null`."},{"content":"If the HasChildren property returns <ph id=\"ph1\">`true`</ph>, call the &lt;xref:System.Web.UI.IHierarchyData.GetChildren%2A&gt; method to retrieve an &lt;xref:System.Web.UI.IHierarchicalEnumerable&gt; collection of child nodes.","pos":[184,381],"source":" If the HasChildren property returns `true`, call the <xref:System.Web.UI.IHierarchyData.GetChildren%2A> method to retrieve an <xref:System.Web.UI.IHierarchicalEnumerable> collection of child nodes."}]},{"pos":[7987,8159],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current node has child nodes; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current node has child nodes; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8544,8653],"content":"Gets the hierarchical data node that the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.IHierarchyData\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object represents.","needQuote":true,"needEscape":true,"source":"Gets the hierarchical data node that the <xref href=\"System.Web.UI.IHierarchyData\"></xref> object represents."},{"pos":[8665,9120],"content":"While many classes that represent hierarchical data nodes, such as the <xref:System.Web.SiteMapNode> class, implement the <xref:System.Web.UI.IHierarchyData> interface directly, other classes only act as a wrapper for a class that does not implement the interface. The Item property is provided for these design situations, when business objects are functionally equivalent to an <xref:System.Web.UI.IHierarchyData> object but cannot be redesigned easily.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"While many classes that represent hierarchical data nodes, such as the <xref:System.Web.SiteMapNode> class, implement the <xref:System.Web.UI.IHierarchyData> interface directly, other classes only act as a wrapper for a class that does not implement the interface. The Item property is provided for these design situations, when business objects are functionally equivalent to an <xref:System.Web.UI.IHierarchyData> object but cannot be redesigned easily.","pos":[0,455],"nodes":[{"content":"While many classes that represent hierarchical data nodes, such as the &lt;xref:System.Web.SiteMapNode&gt; class, implement the &lt;xref:System.Web.UI.IHierarchyData&gt; interface directly, other classes only act as a wrapper for a class that does not implement the interface.","pos":[0,264],"source":"While many classes that represent hierarchical data nodes, such as the <xref:System.Web.SiteMapNode> class, implement the <xref:System.Web.UI.IHierarchyData> interface directly, other classes only act as a wrapper for a class that does not implement the interface."},{"content":"The Item property is provided for these design situations, when business objects are functionally equivalent to an &lt;xref:System.Web.UI.IHierarchyData&gt; object but cannot be redesigned easily.","pos":[265,455],"source":" The Item property is provided for these design situations, when business objects are functionally equivalent to an <xref:System.Web.UI.IHierarchyData> object but cannot be redesigned easily."}]}]},{"pos":[9869,9923],"content":"An <xref:System.Object> hierarchical data node object.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Object&gt; hierarchical data node object.","pos":[0,54],"source":"An <xref:System.Object> hierarchical data node object."}]},{"pos":[10301,10340],"content":"Gets the hierarchical path of the node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the hierarchical path of the node.","pos":[0,39]}]},{"pos":[10353,10775],"content":"The Path property can be passed to the <xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A> method to retrieve the <xref:System.Web.UI.HierarchicalDataSourceView> object that corresponds to the node identified by Path.      > [!CAUTION] >  The Path property should not contain any sensitive information about the host environment, because it might be rendered to the client in a data-bound control.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Path property can be passed to the &lt;xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A&gt; method to retrieve the &lt;xref:System.Web.UI.HierarchicalDataSourceView&gt; object that corresponds to the node identified by Path.","pos":[0,239],"source":"The Path property can be passed to the <xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A> method to retrieve the <xref:System.Web.UI.HierarchicalDataSourceView> object that corresponds to the node identified by Path."},{"content":"&gt; <ph id=\"ph1\">[!CAUTION]</ph> &gt;  The Path property should not contain any sensitive information about the host environment, because it might be rendered to the client in a data-bound control.","pos":[245,419],"source":"      > [!CAUTION] >  The Path property should not contain any sensitive information about the host environment, because it might be rendered to the client in a data-bound control."}]},{"pos":[11628,11718],"content":"A <xref:System.String> that identifies the hierarchical path relative to the current node.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; that identifies the hierarchical path relative to the current node.","pos":[0,90],"source":"A <xref:System.String> that identifies the hierarchical path relative to the current node."}]},{"pos":[12096,12214],"content":"Gets the name of the type of <xref:System.Object> contained in the <xref:System.Web.UI.IHierarchyData.Item*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the type of &lt;xref:System.Object&gt; contained in the &lt;xref:System.Web.UI.IHierarchyData.Item*&gt; property.","pos":[0,118],"source":"Gets the name of the type of <xref:System.Object> contained in the <xref:System.Web.UI.IHierarchyData.Item*> property."}]},{"pos":[12226,12516],"content":"The Type property does not return the <xref:System.Type?displayProperty=fullName> of the object represented in an <xref:System.Web.UI.IHierarchyData> object. It returns a name used by data-bound controls to differentiate between items in a hierarchy that have different bindable properties.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Type property does not return the <xref:System.Type?displayProperty=fullName> of the object represented in an <xref:System.Web.UI.IHierarchyData> object. It returns a name used by data-bound controls to differentiate between items in a hierarchy that have different bindable properties.","pos":[0,290],"nodes":[{"content":"The Type property does not return the &lt;xref:System.Type?displayProperty=fullName&gt; of the object represented in an &lt;xref:System.Web.UI.IHierarchyData&gt; object.","pos":[0,157],"source":"The Type property does not return the <xref:System.Type?displayProperty=fullName> of the object represented in an <xref:System.Web.UI.IHierarchyData> object."},{"content":"It returns a name used by data-bound controls to differentiate between items in a hierarchy that have different bindable properties.","pos":[158,290]}]}]},{"pos":[13283,13391],"content":"The name of the type of object that the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.IHierarchyData\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object represents.","needQuote":true,"needEscape":true,"source":"The name of the type of object that the <xref href=\"System.Web.UI.IHierarchyData\"></xref> object represents."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.IHierarchyData\n  id: IHierarchyData\n  children:\n  - System.Web.UI.IHierarchyData.GetChildren\n  - System.Web.UI.IHierarchyData.GetParent\n  - System.Web.UI.IHierarchyData.HasChildren\n  - System.Web.UI.IHierarchyData.Item\n  - System.Web.UI.IHierarchyData.Path\n  - System.Web.UI.IHierarchyData.Type\n  langs:\n  - csharp\n  name: IHierarchyData\n  nameWithType: IHierarchyData\n  fullName: System.Web.UI.IHierarchyData\n  type: Interface\n  summary: Exposes a node of a hierarchical data structure, including the node object and some properties that describe characteristics of the node. Objects that implement the IHierarchyData interface can be contained in <xref href=\"System.Web.UI.IHierarchicalEnumerable\"></xref> collections, and are used by ASP.NET site navigation and data source controls.\n  remarks: The IHierarchyData interface is implemented by classes that represent nodes of a hierarchical structure, and track the hierarchical relationships to their parent and child nodes. Classes that implement the IHierarchyData interface can be contained in collections that implement the <xref:System.Web.UI.IHierarchicalEnumerable> interface.\n  example:\n  - \"The following code example demonstrates how to implement the IHierarchyData interface with a class that wraps a <xref:System.IO.FileSystemInfo> object. The <xref:System.IO.FileSystemInfo> class is a good example of a hierarchical data node, which the IHierarchyData interface represents for ASP.NET hierarchical data source controls. This code example is part of a larger example provided for the <xref:System.Web.UI.HierarchicalDataSourceControl> class.  \\n  \\n [!code-cs[Urtue.Samples.Alexkr.FileSystemDataSource_1#5](~/add/codesnippet/csharp/t-system.web.ui.ihierarc_0_1.cs)]\\n [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#5](~/add/codesnippet/visualbasic/t-system.web.ui.ihierarc_0_1.vb)]  \\n  \\n The following code example demonstrates how to recursively iterate through an <xref:System.Web.UI.IHierarchicalEnumerable> collection, extract the IHierarchyData item from the enumerator using the <xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A> method, and perform basic work with the data item.  \\n  \\n [!code-cs[System.Web.UI.IHierarchyData_1#1](~/add/codesnippet/csharp/t-system.web.ui.ihierarc_0_2.aspx)]\\n [!code-vb[System.Web.UI.IHierarchyData_1#1](~/add/codesnippet/visualbasic/t-system.web.ui.ihierarc_0_2.aspx)]\"\n  syntax:\n    content: public interface IHierarchyData\n  implements: []\n  platform:\n  - net462\n- uid: System.Web.UI.IHierarchyData.GetChildren\n  id: GetChildren\n  parent: System.Web.UI.IHierarchyData\n  langs:\n  - csharp\n  name: GetChildren()\n  nameWithType: IHierarchyData.GetChildren()\n  fullName: System.Web.UI.IHierarchyData.GetChildren()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets an enumeration object that represents all the child nodes of the current hierarchical node.\n  remarks: You can use the <xref:System.Web.UI.IHierarchyData.HasChildren%2A> property to determine whether the <xref:System.Web.UI.IHierarchyData> node has child nodes.\n  example:\n  - \"The following code example demonstrates how to check the <xref:System.Web.UI.IHierarchyData.HasChildren%2A> property to determine whether the current hierarchical data node has child nodes, and retrieve them using the GetChildren method. This code example is part of a larger example provided for the <xref:System.Web.UI.IHierarchyData> interface.  \\n  \\n [!code-cs[System.Web.UI.IHierarchyData_1#2](~/add/codesnippet/csharp/m-system.web.ui.ihierarc_3_1.cs)]\\n [!code-vb[System.Web.UI.IHierarchyData_1#2](~/add/codesnippet/visualbasic/m-system.web.ui.ihierarc_3_1.vb)]\"\n  syntax:\n    content: public System.Web.UI.IHierarchicalEnumerable GetChildren ();\n    parameters: []\n    return:\n      type: System.Web.UI.IHierarchicalEnumerable\n      description: An <xref href=\"System.Web.UI.IHierarchicalEnumerable\"></xref> collection of child nodes of the current hierarchical node.\n  overload: System.Web.UI.IHierarchyData.GetChildren*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.IHierarchyData.GetParent\n  id: GetParent\n  parent: System.Web.UI.IHierarchyData\n  langs:\n  - csharp\n  name: GetParent()\n  nameWithType: IHierarchyData.GetParent()\n  fullName: System.Web.UI.IHierarchyData.GetParent()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets an <xref href=\"System.Web.UI.IHierarchyData\"></xref> object that represents the parent node of the current hierarchical node.\n  remarks: The <xref:System.Web.UI.IHierarchyData> interface does not define a HasParent convenience property, so callers must check the return value of the GetParent method for `null` to determine whether the current <xref:System.Web.UI.IHierarchyData> node is the root node of the hierarchical data structure to which the node belongs.\n  example:\n  - \"The following code example demonstrates how to implement the GetParent method in a class that implements the <xref:System.Web.UI.IHierarchyData> interface. The `FileSystemHierarchyData` class wraps a <xref:System.IO.FileSystemInfo> object, and the GetParent method implementation checks the type of the <xref:System.IO.FileSystemInfo> object, and returns the appropriate parent object based on the type. This code example is part of a larger example provided for the <xref:System.Web.UI.IHierarchyData> interface and the <xref:System.Web.UI.HierarchicalDataSourceControl> class.  \\n  \\n [!code-cs[Urtue.Samples.Alexkr.FileSystemDataSource_1#10](~/add/codesnippet/csharp/m-system.web.ui.ihierarc_1_1.cs)]\\n [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#10](~/add/codesnippet/visualbasic/m-system.web.ui.ihierarc_1_1.vb)]\"\n  syntax:\n    content: public System.Web.UI.IHierarchyData GetParent ();\n    parameters: []\n    return:\n      type: System.Web.UI.IHierarchyData\n      description: An <xref href=\"System.Web.UI.IHierarchyData\"></xref> object that represents the parent node of the current hierarchical node.\n  overload: System.Web.UI.IHierarchyData.GetParent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.IHierarchyData.HasChildren\n  id: HasChildren\n  parent: System.Web.UI.IHierarchyData\n  langs:\n  - csharp\n  name: HasChildren\n  nameWithType: IHierarchyData.HasChildren\n  fullName: System.Web.UI.IHierarchyData.HasChildren\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Indicates whether the hierarchical data node that the <xref href=\"System.Web.UI.IHierarchyData\"></xref> object represents has any child nodes.\n  remarks: The HasChildren property is a convenience property that enables callers to avoid checking the return value of the <xref:System.Web.UI.IHierarchyData.GetChildren%2A> method for `null`. If the HasChildren property returns `true`, call the <xref:System.Web.UI.IHierarchyData.GetChildren%2A> method to retrieve an <xref:System.Web.UI.IHierarchicalEnumerable> collection of child nodes.\n  example:\n  - \"The following code example demonstrates how an ASP.NET hierarchical data-bound control uses an <xref:System.Web.UI.IHierarchyData> object in a recursive data-binding method. The items in an <xref:System.Web.UI.IHierarchicalEnumerable> collection are enumerated, and for each an <xref:System.Web.UI.IHierarchyData> object is retrieved using the <xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A> method. Finally, the HasChildren property is checked to determine whether to recurse. This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> class.  \\n  \\n [!code-vb[Samples.AspNet.GeneologyTree#5](~/add/codesnippet/visualbasic/p-system.web.ui.ihierarc_3_1.vb)]\\n [!code-cs[Samples.AspNet.GeneologyTree#5](~/add/codesnippet/csharp/p-system.web.ui.ihierarc_3_1.cs)]\"\n  syntax:\n    content: public bool HasChildren { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current node has child nodes; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.IHierarchyData.HasChildren*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.IHierarchyData.Item\n  id: Item\n  parent: System.Web.UI.IHierarchyData\n  langs:\n  - csharp\n  name: Item\n  nameWithType: IHierarchyData.Item\n  fullName: System.Web.UI.IHierarchyData.Item\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the hierarchical data node that the <xref href=\"System.Web.UI.IHierarchyData\"></xref> object represents.\n  remarks: While many classes that represent hierarchical data nodes, such as the <xref:System.Web.SiteMapNode> class, implement the <xref:System.Web.UI.IHierarchyData> interface directly, other classes only act as a wrapper for a class that does not implement the interface. The Item property is provided for these design situations, when business objects are functionally equivalent to an <xref:System.Web.UI.IHierarchyData> object but cannot be redesigned easily.\n  example:\n  - \"The following code example demonstrates how to access <xref:System.Web.UI.IHierarchyData> properties, check the type of an <xref:System.Web.UI.IHierarchyData> object using the <xref:System.Web.UI.IHierarchyData.Type%2A> property, and cast the object to perform more type-specific operations. This code example is part of a larger example provided for the <xref:System.Web.UI.IHierarchyData> interface.  \\n  \\n [!code-cs[System.Web.UI.IHierarchyData_1#2](~/add/codesnippet/csharp/p-system.web.ui.ihierarc_1_1.cs)]\\n [!code-vb[System.Web.UI.IHierarchyData_1#2](~/add/codesnippet/visualbasic/p-system.web.ui.ihierarc_1_1.vb)]\"\n  syntax:\n    content: public object Item { get; }\n    return:\n      type: System.Object\n      description: An <xref:System.Object> hierarchical data node object.\n  overload: System.Web.UI.IHierarchyData.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.IHierarchyData.Path\n  id: Path\n  parent: System.Web.UI.IHierarchyData\n  langs:\n  - csharp\n  name: Path\n  nameWithType: IHierarchyData.Path\n  fullName: System.Web.UI.IHierarchyData.Path\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the hierarchical path of the node.\n  remarks: \"The Path property can be passed to the <xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A> method to retrieve the <xref:System.Web.UI.HierarchicalDataSourceView> object that corresponds to the node identified by Path.  \\n  \\n> [!CAUTION]\\n>  The Path property should not contain any sensitive information about the host environment, because it might be rendered to the client in a data-bound control.\"\n  example:\n  - \"The following code example demonstrates how to implement the Path property in a class that implements the <xref:System.Web.UI.IHierarchyData> interface. The `FileSystemHierarchyData` class wraps a <xref:System.IO.FileSystemInfo> object, and the Path property implementation returns its file system path. This code example is part of a larger example provided for the <xref:System.Web.UI.IHierarchyData> interface and the <xref:System.Web.UI.HierarchicalDataSourceControl> class.  \\n  \\n [!code-cs[Urtue.Samples.Alexkr.FileSystemDataSource_1#7](~/add/codesnippet/csharp/p-system.web.ui.ihierarc_0_1.cs)]\\n [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#7](~/add/codesnippet/visualbasic/p-system.web.ui.ihierarc_0_1.vb)]\"\n  syntax:\n    content: public string Path { get; }\n    return:\n      type: System.String\n      description: A <xref:System.String> that identifies the hierarchical path relative to the current node.\n  overload: System.Web.UI.IHierarchyData.Path*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.IHierarchyData.Type\n  id: Type\n  parent: System.Web.UI.IHierarchyData\n  langs:\n  - csharp\n  name: Type\n  nameWithType: IHierarchyData.Type\n  fullName: System.Web.UI.IHierarchyData.Type\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the name of the type of <xref:System.Object> contained in the <xref:System.Web.UI.IHierarchyData.Item*> property.\n  remarks: The Type property does not return the <xref:System.Type?displayProperty=fullName> of the object represented in an <xref:System.Web.UI.IHierarchyData> object. It returns a name used by data-bound controls to differentiate between items in a hierarchy that have different bindable properties.\n  example:\n  - \"The following code example demonstrates how to write the basic <xref:System.Web.UI.IHierarchyData> properties to an <xref:System.Web.HttpResponse> stream, then check the type of an <xref:System.Web.UI.IHierarchyData> object using the Type property and cast the object to perform more type-specific operations. This code example is part of a larger example provided for the <xref:System.Web.UI.IHierarchyData> interface.  \\n  \\n [!code-cs[System.Web.UI.IHierarchyData_1#2](~/add/codesnippet/csharp/p-system.web.ui.ihierarc_2_1.cs)]\\n [!code-vb[System.Web.UI.IHierarchyData_1#2](~/add/codesnippet/visualbasic/p-system.web.ui.ihierarc_2_1.vb)]\"\n  syntax:\n    content: public string Type { get; }\n    return:\n      type: System.String\n      description: The name of the type of object that the <xref href=\"System.Web.UI.IHierarchyData\"></xref> object represents.\n  overload: System.Web.UI.IHierarchyData.Type*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.UI.IHierarchyData.GetChildren\n  parent: System.Web.UI.IHierarchyData\n  isExternal: false\n  name: GetChildren()\n  nameWithType: IHierarchyData.GetChildren()\n  fullName: System.Web.UI.IHierarchyData.GetChildren()\n- uid: System.Web.UI.IHierarchicalEnumerable\n  parent: System.Web.UI\n  isExternal: false\n  name: IHierarchicalEnumerable\n  nameWithType: IHierarchicalEnumerable\n  fullName: System.Web.UI.IHierarchicalEnumerable\n- uid: System.Web.UI.IHierarchyData.GetParent\n  parent: System.Web.UI.IHierarchyData\n  isExternal: false\n  name: GetParent()\n  nameWithType: IHierarchyData.GetParent()\n  fullName: System.Web.UI.IHierarchyData.GetParent()\n- uid: System.Web.UI.IHierarchyData\n  parent: System.Web.UI\n  isExternal: false\n  name: IHierarchyData\n  nameWithType: IHierarchyData\n  fullName: System.Web.UI.IHierarchyData\n- uid: System.Web.UI.IHierarchyData.HasChildren\n  parent: System.Web.UI.IHierarchyData\n  isExternal: false\n  name: HasChildren\n  nameWithType: IHierarchyData.HasChildren\n  fullName: System.Web.UI.IHierarchyData.HasChildren\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.UI.IHierarchyData.Item\n  parent: System.Web.UI.IHierarchyData\n  isExternal: false\n  name: Item\n  nameWithType: IHierarchyData.Item\n  fullName: System.Web.UI.IHierarchyData.Item\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.UI.IHierarchyData.Path\n  parent: System.Web.UI.IHierarchyData\n  isExternal: false\n  name: Path\n  nameWithType: IHierarchyData.Path\n  fullName: System.Web.UI.IHierarchyData.Path\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.IHierarchyData.Type\n  parent: System.Web.UI.IHierarchyData\n  isExternal: false\n  name: Type\n  nameWithType: IHierarchyData.Type\n  fullName: System.Web.UI.IHierarchyData.Type\n- uid: System.Web.UI.IHierarchyData.GetChildren*\n  parent: System.Web.UI.IHierarchyData\n  isExternal: false\n  name: GetChildren\n  nameWithType: IHierarchyData.GetChildren\n- uid: System.Web.UI.IHierarchyData.GetParent*\n  parent: System.Web.UI.IHierarchyData\n  isExternal: false\n  name: GetParent\n  nameWithType: IHierarchyData.GetParent\n- uid: System.Web.UI.IHierarchyData.HasChildren*\n  parent: System.Web.UI.IHierarchyData\n  isExternal: false\n  name: HasChildren\n  nameWithType: IHierarchyData.HasChildren\n- uid: System.Web.UI.IHierarchyData.Item*\n  parent: System.Web.UI.IHierarchyData\n  isExternal: false\n  name: Item\n  nameWithType: IHierarchyData.Item\n- uid: System.Web.UI.IHierarchyData.Path*\n  parent: System.Web.UI.IHierarchyData\n  isExternal: false\n  name: Path\n  nameWithType: IHierarchyData.Path\n- uid: System.Web.UI.IHierarchyData.Type*\n  parent: System.Web.UI.IHierarchyData\n  isExternal: false\n  name: Type\n  nameWithType: IHierarchyData.Type\n"}