{"nodes":[{"pos":[1885,2091],"content":"Contains a cache of XML Schema definition language (XSD) and XML-Data Reduced (XDR) schemas. The XmlSchemaCollection class class is obsolete. Use <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> instead.","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains a cache of XML Schema definition language (XSD) and XML-Data Reduced (XDR) schemas.","pos":[0,92]},{"content":"The XmlSchemaCollection class class is obsolete.","pos":[93,141]},{"content":"Use <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instead.","pos":[142,206],"source":" Use <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> instead."}]},{"pos":[2104,3235],"content":"Schemas are loaded using the <xref:System.Xml.Schema.XmlSchemaCollection.Add%2A> method, at which time the schema is associated with a namespace Uniform Resource Identifier (URI). For XML Schemas, this will typically be the `targetNamespace` property of the schema.       Although this class stores both XML Schemas and XDR schemas, any method and property that takes or returns an <xref:System.Xml.Schema.XmlSchema> applies to XML Schemas only.       This version of the product supports the World Wide Web Consortium (W3C) XML Schema recommendation located at http://www.w3.org/TR/xmlschema-1 and http://www.w3.org/TR/xmlschema-2. An XML Schema must reference the W3C Schema namespace `http://www.w3.org/2001/XMLSchema` in its schema element. See the <xref:System.Xml.Schema.XmlSchemaCollection.Add%2A> method for an example.       `XmlSchemaCollection` can be used by <xref:System.Xml.XmlValidatingReader> for efficient data validation.      > [!IMPORTANT] >  The XmlSchemaCollection class is obsolete in the Microsoft .NET Framework version 2.0 and has been replaced by the <xref:System.Xml.Schema.XmlSchemaSet> class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Schemas are loaded using the &lt;xref:System.Xml.Schema.XmlSchemaCollection.Add%2A&gt; method, at which time the schema is associated with a namespace Uniform Resource Identifier (URI).","pos":[0,179],"source":"Schemas are loaded using the <xref:System.Xml.Schema.XmlSchemaCollection.Add%2A> method, at which time the schema is associated with a namespace Uniform Resource Identifier (URI)."},{"content":"For XML Schemas, this will typically be the <ph id=\"ph1\">`targetNamespace`</ph> property of the schema.","pos":[180,265],"source":" For XML Schemas, this will typically be the `targetNamespace` property of the schema."},{"content":"Although this class stores both XML Schemas and XDR schemas, any method and property that takes or returns an &lt;xref:System.Xml.Schema.XmlSchema&gt; applies to XML Schemas only.","pos":[272,445],"source":"       Although this class stores both XML Schemas and XDR schemas, any method and property that takes or returns an <xref:System.Xml.Schema.XmlSchema> applies to XML Schemas only."},{"content":"This version of the product supports the World Wide Web Consortium (W3C) XML Schema recommendation located at http://www.w3.org/TR/xmlschema-1 and http://www.w3.org/TR/xmlschema-2.","pos":[452,632]},{"content":"An XML Schema must reference the W3C Schema namespace <ph id=\"ph1\">`http://www.w3.org/2001/XMLSchema`</ph> in its schema element.","pos":[633,744],"source":" An XML Schema must reference the W3C Schema namespace `http://www.w3.org/2001/XMLSchema` in its schema element."},{"content":"See the &lt;xref:System.Xml.Schema.XmlSchemaCollection.Add%2A&gt; method for an example.","pos":[745,827],"source":" See the <xref:System.Xml.Schema.XmlSchemaCollection.Add%2A> method for an example."},{"content":"<ph id=\"ph1\">`XmlSchemaCollection`</ph> can be used by &lt;xref:System.Xml.XmlValidatingReader&gt; for efficient data validation.","pos":[834,939],"source":"`XmlSchemaCollection` can be used by <xref:System.Xml.XmlValidatingReader> for efficient data validation."},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  The XmlSchemaCollection class is obsolete in the Microsoft .NET Framework version 2.0 and has been replaced by the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; class.","pos":[945,1122],"source":"      > [!IMPORTANT] >  The XmlSchemaCollection class is obsolete in the Microsoft .NET Framework version 2.0 and has been replaced by the <xref:System.Xml.Schema.XmlSchemaSet> class."}]},{"pos":[4412,4543],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlSchemaCollection\" name=\"XmlSchemaCollection\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref uid=\"langword_csharp_XmlSchemaCollection\" name=\"XmlSchemaCollection\" href=\"\"></xref> class."},{"pos":[7918,8111],"content":"<ph id=\"ph1\">&gt; [!IMPORTANT]</ph> &gt;  The &lt;xref:System.Xml.Schema.XmlSchemaCollection&gt; class is obsolete in the .NET Framework version 2.0 and has been replaced by the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; class.","needQuote":true,"needEscape":true,"extradata":"MT","source":"> [!IMPORTANT] >  The <xref:System.Xml.Schema.XmlSchemaCollection> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <xref:System.Xml.Schema.XmlSchemaSet> class."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xml.Schema.XmlSchemaCollection\n  id: XmlSchemaCollection\n  children:\n  - System.Xml.Schema.XmlSchemaCollection.#ctor\n  - System.Xml.Schema.XmlSchemaCollection.#ctor(System.Xml.XmlNameTable)\n  - System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema)\n  - System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchemaCollection)\n  - System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)\n  - System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)\n  - System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema,System.Xml.XmlResolver)\n  - System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader,System.Xml.XmlResolver)\n  - System.Xml.Schema.XmlSchemaCollection.Contains(System.String)\n  - System.Xml.Schema.XmlSchemaCollection.Contains(System.Xml.Schema.XmlSchema)\n  - System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)\n  - System.Xml.Schema.XmlSchemaCollection.Count\n  - System.Xml.Schema.XmlSchemaCollection.GetEnumerator\n  - System.Xml.Schema.XmlSchemaCollection.Item(System.String)\n  - System.Xml.Schema.XmlSchemaCollection.NameTable\n  - System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#Count\n  - System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized\n  - System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot\n  - System.Xml.Schema.XmlSchemaCollection.System#Collections#IEnumerable#GetEnumerator\n  - System.Xml.Schema.XmlSchemaCollection.ValidationEventHandler\n  langs:\n  - csharp\n  name: XmlSchemaCollection\n  nameWithType: XmlSchemaCollection\n  fullName: System.Xml.Schema.XmlSchemaCollection\n  type: Class\n  summary: Contains a cache of XML Schema definition language (XSD) and XML-Data Reduced (XDR) schemas. The XmlSchemaCollection class class is obsolete. Use <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> instead.\n  remarks: \"Schemas are loaded using the <xref:System.Xml.Schema.XmlSchemaCollection.Add%2A> method, at which time the schema is associated with a namespace Uniform Resource Identifier (URI). For XML Schemas, this will typically be the `targetNamespace` property of the schema.  \\n  \\n Although this class stores both XML Schemas and XDR schemas, any method and property that takes or returns an <xref:System.Xml.Schema.XmlSchema> applies to XML Schemas only.  \\n  \\n This version of the product supports the World Wide Web Consortium (W3C) XML Schema recommendation located at http://www.w3.org/TR/xmlschema-1 and http://www.w3.org/TR/xmlschema-2. An XML Schema must reference the W3C Schema namespace `http://www.w3.org/2001/XMLSchema` in its schema element. See the <xref:System.Xml.Schema.XmlSchemaCollection.Add%2A> method for an example.  \\n  \\n `XmlSchemaCollection` can be used by <xref:System.Xml.XmlValidatingReader> for efficient data validation.  \\n  \\n> [!IMPORTANT]\\n>  The XmlSchemaCollection class is obsolete in the Microsoft .NET Framework version 2.0 and has been replaced by the <xref:System.Xml.Schema.XmlSchemaSet> class.\"\n  example:\n  - \"The following example validates an XML document using the `XmlSchemaCollection`.  \\n  \\n [!code-cs[XmlSchemaCollection.Basic#1](~/add/codesnippet/csharp/t-system.xml.schema.xmls_40_1.cs)]\\n [!code-cpp[XmlSchemaCollection.Basic#1](~/add/codesnippet/cpp/t-system.xml.schema.xmls_40_1.cpp)]\\n [!code-vb[XmlSchemaCollection.Basic#1](~/add/codesnippet/visualbasic/t-system.xml.schema.xmls_40_1.vb)]\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"Use System.Xml.Schema.XmlSchemaSet for schema compilation and validation. http://go.microsoft.com/fwlink/?linkid=14202\")]\n\n      public sealed class XmlSchemaCollection : System.Collections.ICollection\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.ICollection\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaCollection.#ctor\n  id: '#ctor'\n  parent: System.Xml.Schema.XmlSchemaCollection\n  langs:\n  - csharp\n  name: XmlSchemaCollection()\n  nameWithType: XmlSchemaCollection.XmlSchemaCollection()\n  fullName: System.Xml.Schema.XmlSchemaCollection.XmlSchemaCollection()\n  type: Constructor\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Initializes a new instance of the <xref uid=\"langword_csharp_XmlSchemaCollection\" name=\"XmlSchemaCollection\" href=\"\"></xref> class.\n  remarks: >-\n    > [!IMPORTANT]\n\n    >  The <xref:System.Xml.Schema.XmlSchemaCollection> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <xref:System.Xml.Schema.XmlSchemaSet> class.\n  syntax:\n    content: public XmlSchemaCollection ();\n    parameters: []\n  overload: System.Xml.Schema.XmlSchemaCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaCollection.#ctor(System.Xml.XmlNameTable)\n  id: '#ctor(System.Xml.XmlNameTable)'\n  parent: System.Xml.Schema.XmlSchemaCollection\n  langs:\n  - csharp\n  name: XmlSchemaCollection(XmlNameTable)\n  nameWithType: XmlSchemaCollection.XmlSchemaCollection(XmlNameTable)\n  fullName: System.Xml.Schema.XmlSchemaCollection.XmlSchemaCollection(XmlNameTable)\n  type: Constructor\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Initializes a new instance of the <xref uid=\"langword_csharp_XmlSchemaCollection\" name=\"XmlSchemaCollection\" href=\"\"></xref> class with the specified <xref:System.Xml.XmlNameTable>. The <xref uid=\"langword_csharp_XmlNameTable\" name=\"XmlNameTable\" href=\"\"></xref> is used when loading schemas.\n  syntax:\n    content: public XmlSchemaCollection (System.Xml.XmlNameTable nametable);\n    parameters:\n    - id: nametable\n      type: System.Xml.XmlNameTable\n      description: The <xref uid=\"langword_csharp_XmlNameTable\" name=\"XmlNameTable\" href=\"\"></xref> to use.\n  overload: System.Xml.Schema.XmlSchemaCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema)\n  id: Add(System.Xml.Schema.XmlSchema)\n  parent: System.Xml.Schema.XmlSchemaCollection\n  langs:\n  - csharp\n  name: Add(XmlSchema)\n  nameWithType: XmlSchemaCollection.Add(XmlSchema)\n  fullName: System.Xml.Schema.XmlSchemaCollection.Add(XmlSchema)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Adds the <xref:System.Xml.Schema.XmlSchema> to the collection.\n  remarks: \"The `targetNamespace` attribute is used to identify this schema.  \\n  \\n If the schema being added contains references to other namespaces (through `include` and `import` elements), the trust level of the application determines how these other namespaces are resolved. (In the .NET Framework version 1.0, a default <xref:System.Xml.XmlUrlResolver> was always used).  \\n  \\n `Fully trusted code:` A default `XmlUrlResolver` with no user credentials is used to resolve any external resources. The schemas for these other namespaces are loaded for validation purposes only. Unlike the original schema, these other schemas are not explicitly added to the schema collection. As a result, they are not accessible using any of the collection methods or properties. If these external resources are located on a network resource that requires authentication, use an overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an `XmlResolver` with the necessary credentials.  \\n  \\n `Semi-trusted code:` External references are not resolved.  \\n  \\n> [!NOTE]\\n>  If the `XmlSchemaCollection` is being accessed using the <xref:System.Xml.XmlValidatingReader.Schemas%2A?displayProperty=fullName> property, the `Add` method uses the `XmlResolver` specified by the <xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=fullName> property.  \\n  \\n> [!IMPORTANT]\\n>  The <xref:System.Xml.Schema.XmlSchemaCollection> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <xref:System.Xml.Schema.XmlSchemaSet> class.\"\n  syntax:\n    content: public System.Xml.Schema.XmlSchema Add (System.Xml.Schema.XmlSchema schema);\n    parameters:\n    - id: schema\n      type: System.Xml.Schema.XmlSchema\n      description: The <xref uid=\"langword_csharp_XmlSchema\" name=\"XmlSchema\" href=\"\"></xref> to add to the collection.\n    return:\n      type: System.Xml.Schema.XmlSchema\n      description: The <xref uid=\"langword_csharp_XmlSchema\" name=\"XmlSchema\" href=\"\"></xref> object.\n  overload: System.Xml.Schema.XmlSchemaCollection.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchemaCollection)\n  id: Add(System.Xml.Schema.XmlSchemaCollection)\n  parent: System.Xml.Schema.XmlSchemaCollection\n  langs:\n  - csharp\n  name: Add(XmlSchemaCollection)\n  nameWithType: XmlSchemaCollection.Add(XmlSchemaCollection)\n  fullName: System.Xml.Schema.XmlSchemaCollection.Add(XmlSchemaCollection)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Adds all the namespaces defined in the given collection (including their associated schemas) to this collection.\n  remarks: \"If the schema being added contains references to other namespaces (through `include` and `import` elements or the `x-schema` attribute), the trust level of the application determines how these other namespaces are resolved. (In the .NET Framework version 1.0, a default <xref:System.Xml.XmlUrlResolver> was always used).  \\n  \\n `Fully trusted code:` A default `XmlUrlResolver` with no user credentials is used to resolve any external resources. The schemas for these other namespaces are loaded for validation purposes only. Unlike the original schema, these other schemas are not explicitly added to the schema collection. As a result, they are not accessible using any of the collection methods or properties. If these external resources are located on a network resource that requires authentication, use an overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an `XmlResolver` with the necessary credentials.  \\n  \\n `Semi-trusted code:` External references are not resolved.  \\n  \\n> [!NOTE]\\n>  If the `XmlSchemaCollection` is being accessed using the <xref:System.Xml.XmlValidatingReader.Schemas%2A?displayProperty=fullName> property, the `Add` method uses the `XmlResolver` specified by the <xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=fullName> property.  \\n  \\n> [!IMPORTANT]\\n>  The <xref:System.Xml.Schema.XmlSchemaCollection> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <xref:System.Xml.Schema.XmlSchemaSet> class.\"\n  syntax:\n    content: public void Add (System.Xml.Schema.XmlSchemaCollection schema);\n    parameters:\n    - id: schema\n      type: System.Xml.Schema.XmlSchemaCollection\n      description: The <xref uid=\"langword_csharp_XmlSchemaCollection\" name=\"XmlSchemaCollection\" href=\"\"></xref> you want to add to this collection.\n  overload: System.Xml.Schema.XmlSchemaCollection.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)\n  id: Add(System.String,System.String)\n  parent: System.Xml.Schema.XmlSchemaCollection\n  langs:\n  - csharp\n  name: Add(String,String)\n  nameWithType: XmlSchemaCollection.Add(String,String)\n  fullName: System.Xml.Schema.XmlSchemaCollection.Add(String,String)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Adds the schema located by the given URL into the schema collection.\n  remarks: \"If `ns` has already been associated with another schema in the collection, the schema being added replaces the original schema in the collection. For example, in the following C# code, authors.xsd is removed from the collection and names.xsd is added.  \\n  \\n```  \\nschemaColl.Add(\\\"urn:author\\\", \\\"authors.xsd\\\");  \\nschemaColl.Add(\\\"urn:author\\\", \\\"names.xsd\\\");  \\n```  \\n  \\n If `ns` is `null` and the schema being added is an XML Schema, the `Add` method uses the `targetNamespace` defined in the XML Schema to identify the schema in the collection. If the schema being added contains references to other namespaces (through `include` and `import` elements or the `x-schema` attribute), the trust level of the application determines how these other namespaces are resolved. (In the .NET Framework version 1.0, a default <xref:System.Xml.XmlUrlResolver> was always used).  \\n  \\n `Fully trusted code:` A default `XmlUrlResolver` with no user credentials is used to resolve any external resources. The schemas for these other namespaces are loaded for validation purposes only. Unlike the original schema, these other schemas are not explicitly added to the schema collection. As a result, they are not accessible using any of the collection methods or properties. If these external resources are located on a network resource that requires authentication, use an overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an `XmlResolver` with the necessary credentials.  \\n  \\n `Semi-trusted code:` External references are not resolved.  \\n  \\n> [!NOTE]\\n>  If the `XmlSchemaCollection` is being accessed using the <xref:System.Xml.XmlValidatingReader.Schemas%2A?displayProperty=fullName> property, the `Add` method uses the `XmlResolver` specified by the <xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=fullName> property.  \\n  \\n> [!IMPORTANT]\\n>  The <xref:System.Xml.Schema.XmlSchemaCollection> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <xref:System.Xml.Schema.XmlSchemaSet> class.\"\n  example:\n  - \"The following example validates three XML files using schemas stored in the `XmlSchemaCollection`.  \\n  \\n [!code-cpp[Classic WebData XmlValidatingReader.Schemas Example#1](~/add/codesnippet/cpp/m-system.xml.schema.xmls_2_1.cpp)]\\n [!code-vb[Classic WebData XmlValidatingReader.Schemas Example#1](~/add/codesnippet/visualbasic/m-system.xml.schema.xmls_2_1.vb)]\\n [!code-cs[Classic WebData XmlValidatingReader.Schemas Example#1](~/add/codesnippet/csharp/m-system.xml.schema.xmls_2_1.cs)]  \\n  \\n The sample uses the following five input files:  \\n  \\n `booksSchema.xml`  \\n  \\n [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#2](~/add/codesnippet/xml/m-system.xml.schema.xmls_2_2.xml)]  \\n  \\n `booksSchemaFail.xml`  \\n  \\n [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#3](~/add/codesnippet/xml/m-system.xml.schema.xmls_2_3.xml)]  \\n  \\n `newbooks.xml`  \\n  \\n [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#4](~/add/codesnippet/xml/m-system.xml.schema.xmls_2_4.xml)]  \\n  \\n `books.xsd`  \\n  \\n [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#5](~/add/codesnippet/xml/m-system.xml.schema.xmls_2_5.xml)]  \\n  \\n `schema1.xdr`  \\n  \\n [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#6](~/add/codesnippet/xml/m-system.xml.schema.xmls_2_6.xml)]\"\n  syntax:\n    content: public System.Xml.Schema.XmlSchema Add (string ns, string uri);\n    parameters:\n    - id: ns\n      type: System.String\n      description: The namespace URI associated with the schema. For XML Schemas, this will typically be the <xref uid=\"langword_csharp_targetNamespace\" name=\"targetNamespace\" href=\"\"></xref>.\n    - id: uri\n      type: System.String\n      description: The URL that specifies the schema to load.\n    return:\n      type: System.Xml.Schema.XmlSchema\n      description: The <xref:System.Xml.Schema.XmlSchema> added to the schema collection; <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the schema being added is an XDR schema or if there are compilation errors in the schema.\n  overload: System.Xml.Schema.XmlSchemaCollection.Add*\n  exceptions:\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: The schema is not a valid schema.\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)\n  id: Add(System.String,System.Xml.XmlReader)\n  parent: System.Xml.Schema.XmlSchemaCollection\n  langs:\n  - csharp\n  name: Add(String,XmlReader)\n  nameWithType: XmlSchemaCollection.Add(String,XmlReader)\n  fullName: System.Xml.Schema.XmlSchemaCollection.Add(String,XmlReader)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Adds the schema contained in the <xref:System.Xml.XmlReader> to the schema collection.\n  remarks: \"If `ns` has already been associated with another schema in the collection, the schema being added replaces the original schema in the collection.  \\n  \\n If `ns` is `null` and the schema being added is an XML Schema, the `Add` method uses the `targetNamespace` defined in the XML Schema to identify the schema in the collection.  \\n  \\n If the schema being added contains references to other namespaces (through `include` and `import` elements or the `x-schema` attribute), the trust level of the application determines how these other namespaces are resolved. (In the .NET Framework version 1.0, a default <xref:System.Xml.XmlUrlResolver> was always used).  \\n  \\n `Fully trusted code:` A default `XmlUrlResolver` with no user credentials is used to resolve any external resources. The schemas for these other namespaces are loaded for validation purposes only. Unlike the original schema, these other schemas are not explicitly added to the schema collection. As a result, they are not accessible using any of the collection methods or properties. If these external resources are located on a network resource that requires authentication, use an overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an `XmlResolver` with the necessary credentials.  \\n  \\n `Semi-trusted code:` External references are not resolved.  \\n  \\n> [!NOTE]\\n>  If the `XmlSchemaCollection` is being accessed using the <xref:System.Xml.XmlValidatingReader.Schemas%2A?displayProperty=fullName> property, the `Add` method uses the `XmlResolver` specified by the <xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=fullName> property.  \\n  \\n> [!IMPORTANT]\\n>  The <xref:System.Xml.Schema.XmlSchemaCollection> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <xref:System.Xml.Schema.XmlSchemaSet> class.\"\n  syntax:\n    content: public System.Xml.Schema.XmlSchema Add (string ns, System.Xml.XmlReader reader);\n    parameters:\n    - id: ns\n      type: System.String\n      description: The namespace URI associated with the schema. For XML Schemas, this will typically be the <xref uid=\"langword_csharp_targetNamespace\" name=\"targetNamespace\" href=\"\"></xref>.\n    - id: reader\n      type: System.Xml.XmlReader\n      description: <xref:System.Xml.XmlReader> containing the schema to add.\n    return:\n      type: System.Xml.Schema.XmlSchema\n      description: The <xref:System.Xml.Schema.XmlSchema> added to the schema collection; <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the schema being added is an XDR schema or if there are compilation errors in the schema.\n  overload: System.Xml.Schema.XmlSchemaCollection.Add*\n  exceptions:\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: The schema is not a valid schema.\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema,System.Xml.XmlResolver)\n  id: Add(System.Xml.Schema.XmlSchema,System.Xml.XmlResolver)\n  parent: System.Xml.Schema.XmlSchemaCollection\n  langs:\n  - csharp\n  name: Add(XmlSchema,XmlResolver)\n  nameWithType: XmlSchemaCollection.Add(XmlSchema,XmlResolver)\n  fullName: System.Xml.Schema.XmlSchemaCollection.Add(XmlSchema,XmlResolver)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Adds the <xref:System.Xml.Schema.XmlSchema> to the collection. The specified <xref href=\"System.Xml.XmlResolver\"></xref> is used to resolve any external references.\n  remarks: \"The `targetNamespace` attribute is used to identify this schema.  \\n  \\n If the schema contains `include` and `import` elements that reference other namespaces, the schemas for these other namespaces are loaded for validation purposes only. Unlike the original schema, these other schemas are not explicitly added to the schema collection. As a result, they are not accessible using any of the collection methods or properties.  \\n  \\n> [!IMPORTANT]\\n>  The <xref:System.Xml.Schema.XmlSchemaCollection> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <xref:System.Xml.Schema.XmlSchemaSet> class.\"\n  example:\n  - \"The following example adds a schema to the collection. An <xref:System.Xml.XmlUrlResolver> is passed to the `Add` method which sets the necessary credentials required to access any external resources referenced in the schema.  \\n  \\n [!code-vb[XmlSchemaCollection.Add#1](~/add/codesnippet/visualbasic/e37f2dcd-545b-4372-9f34-_1.vb)]\\n [!code-cs[XmlSchemaCollection.Add#1](~/add/codesnippet/csharp/e37f2dcd-545b-4372-9f34-_1.cs)]\\n [!code-cpp[XmlSchemaCollection.Add#1](~/add/codesnippet/cpp/e37f2dcd-545b-4372-9f34-_1.cpp)]\"\n  syntax:\n    content: public System.Xml.Schema.XmlSchema Add (System.Xml.Schema.XmlSchema schema, System.Xml.XmlResolver resolver);\n    parameters:\n    - id: schema\n      type: System.Xml.Schema.XmlSchema\n      description: The <xref uid=\"langword_csharp_XmlSchema\" name=\"XmlSchema\" href=\"\"></xref> to add to the collection.\n    - id: resolver\n      type: System.Xml.XmlResolver\n      description: The <xref href=\"System.Xml.XmlResolver\"></xref> used to resolve namespaces referenced in <xref uid=\"langword_csharp_include\" name=\"include\" href=\"\"></xref> and <xref uid=\"langword_csharp_import\" name=\"import\" href=\"\"></xref> elements. If this is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, external references are not resolved.\n    return:\n      type: System.Xml.Schema.XmlSchema\n      description: The <xref uid=\"langword_csharp_XmlSchema\" name=\"XmlSchema\" href=\"\"></xref> added to the schema collection.\n  overload: System.Xml.Schema.XmlSchemaCollection.Add*\n  exceptions:\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: The schema is not a valid schema.\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader,System.Xml.XmlResolver)\n  id: Add(System.String,System.Xml.XmlReader,System.Xml.XmlResolver)\n  parent: System.Xml.Schema.XmlSchemaCollection\n  langs:\n  - csharp\n  name: Add(String,XmlReader,XmlResolver)\n  nameWithType: XmlSchemaCollection.Add(String,XmlReader,XmlResolver)\n  fullName: System.Xml.Schema.XmlSchemaCollection.Add(String,XmlReader,XmlResolver)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Adds the schema contained in the <xref:System.Xml.XmlReader> to the schema collection. The specified <xref href=\"System.Xml.XmlResolver\"></xref> is used to resolve any external resources.\n  remarks: \"If `ns` has already been associated with another schema in the collection, the schema being added replaces the original schema in the collection.  \\n  \\n If `ns` is `null` and the schema being added is an XML Schema, the `Add` method uses the `targetNamespace` attribute defined in the XML Schema to identify the schema in the collection.  \\n  \\n If the schema being added contains references to other namespaces (through `include` and `import` elements or the `x-schema` attribute), the schemas for these other namespaces are loaded for validation purposes only. Unlike the original schema, these other schemas are not explicitly added to the schema collection. As a result, they are not accessible using any of the collection methods or properties.  \\n  \\n> [!IMPORTANT]\\n>  The <xref:System.Xml.Schema.XmlSchemaCollection> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <xref:System.Xml.Schema.XmlSchemaSet> class.\"\n  syntax:\n    content: public System.Xml.Schema.XmlSchema Add (string ns, System.Xml.XmlReader reader, System.Xml.XmlResolver resolver);\n    parameters:\n    - id: ns\n      type: System.String\n      description: The namespace URI associated with the schema. For XML Schemas, this will typically be the <xref uid=\"langword_csharp_targetNamespace\" name=\"targetNamespace\" href=\"\"></xref>.\n    - id: reader\n      type: System.Xml.XmlReader\n      description: <xref:System.Xml.XmlReader> containing the schema to add.\n    - id: resolver\n      type: System.Xml.XmlResolver\n      description: The <xref href=\"System.Xml.XmlResolver\"></xref> used to resolve namespaces referenced in <xref uid=\"langword_csharp_include\" name=\"include\" href=\"\"></xref> and <xref uid=\"langword_csharp_import\" name=\"import\" href=\"\"></xref> elements or <xref uid=\"langword_csharp_x-schema\" name=\"x-schema\" href=\"\"></xref> attribute (XDR schemas). If this is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, external references are not resolved.\n    return:\n      type: System.Xml.Schema.XmlSchema\n      description: The <xref:System.Xml.Schema.XmlSchema> added to the schema collection; <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the schema being added is an XDR schema or if there are compilation errors in the schema.\n  overload: System.Xml.Schema.XmlSchemaCollection.Add*\n  exceptions:\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: The schema is not a valid schema.\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaCollection.Contains(System.String)\n  id: Contains(System.String)\n  parent: System.Xml.Schema.XmlSchemaCollection\n  langs:\n  - csharp\n  name: Contains(String)\n  nameWithType: XmlSchemaCollection.Contains(String)\n  fullName: System.Xml.Schema.XmlSchemaCollection.Contains(String)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Gets a value indicating whether a schema with the specified namespace is in the collection.\n  remarks: >-\n    > [!IMPORTANT]\n\n    >  The <xref:System.Xml.Schema.XmlSchemaCollection> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <xref:System.Xml.Schema.XmlSchemaSet> class.\n  example:\n  - \"The following example checks to see if a schema is in the collection. If it is, it displays the schema.  \\n  \\n [!code-cpp[Classic WebData XmlSchemaCollection.this Example#1](~/add/codesnippet/cpp/m-system.xml.schema.xmls_5_1.cpp)]\\n [!code-vb[Classic WebData XmlSchemaCollection.this Example#1](~/add/codesnippet/visualbasic/m-system.xml.schema.xmls_5_1.vb)]\\n [!code-cs[Classic WebData XmlSchemaCollection.this Example#1](~/add/codesnippet/csharp/m-system.xml.schema.xmls_5_1.cs)]\"\n  syntax:\n    content: public bool Contains (string ns);\n    parameters:\n    - id: ns\n      type: System.String\n      description: The namespace URI associated with the schema. For XML Schemas, this will typically be the target namespace.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a schema with the specified namespace is in the collection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xml.Schema.XmlSchemaCollection.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaCollection.Contains(System.Xml.Schema.XmlSchema)\n  id: Contains(System.Xml.Schema.XmlSchema)\n  parent: System.Xml.Schema.XmlSchemaCollection\n  langs:\n  - csharp\n  name: Contains(XmlSchema)\n  nameWithType: XmlSchemaCollection.Contains(XmlSchema)\n  fullName: System.Xml.Schema.XmlSchemaCollection.Contains(XmlSchema)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Gets a value indicating whether the <xref uid=\"langword_csharp_targetNamespace\" name=\"targetNamespace\" href=\"\"></xref> of the specified <xref:System.Xml.Schema.XmlSchema> is in the collection.\n  remarks: >-\n    > [!IMPORTANT]\n\n    >  The <xref:System.Xml.Schema.XmlSchemaCollection> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <xref:System.Xml.Schema.XmlSchemaSet> class.\n  syntax:\n    content: public bool Contains (System.Xml.Schema.XmlSchema schema);\n    parameters:\n    - id: schema\n      type: System.Xml.Schema.XmlSchema\n      description: The <xref uid=\"langword_csharp_XmlSchema\" name=\"XmlSchema\" href=\"\"></xref> object.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if there is a schema in the collection with the same <xref uid=\"langword_csharp_targetNamespace\" name=\"targetNamespace\" href=\"\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xml.Schema.XmlSchemaCollection.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)\n  id: CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)\n  parent: System.Xml.Schema.XmlSchemaCollection\n  langs:\n  - csharp\n  name: CopyTo(XmlSchema[],Int32)\n  nameWithType: XmlSchemaCollection.CopyTo(XmlSchema[],Int32)\n  fullName: System.Xml.Schema.XmlSchemaCollection.CopyTo(XmlSchema[],Int32)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Copies all the <xref uid=\"langword_csharp_XmlSchema\" name=\"XmlSchema\" href=\"\"></xref> objects from this collection into the given array starting at the given index.\n  remarks: >-\n    > [!IMPORTANT]\n\n    >  The <xref:System.Xml.Schema.XmlSchemaCollection> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <xref:System.Xml.Schema.XmlSchemaSet> class.\n  syntax:\n    content: public void CopyTo (System.Xml.Schema.XmlSchema[] array, int index);\n    parameters:\n    - id: array\n      type: System.Xml.Schema.XmlSchema[]\n      description: The array to copy the objects to.\n    - id: index\n      type: System.Int32\n      description: The index in `array` where copying will begin.\n  overload: System.Xml.Schema.XmlSchemaCollection.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaCollection.Count\n  id: Count\n  parent: System.Xml.Schema.XmlSchemaCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: XmlSchemaCollection.Count\n  fullName: System.Xml.Schema.XmlSchemaCollection.Count\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Gets the number of namespaces defined in this collection.\n  remarks: >-\n    > [!IMPORTANT]\n\n    >  The <xref:System.Xml.Schema.XmlSchemaCollection> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <xref:System.Xml.Schema.XmlSchemaSet> class.\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of namespaces defined in this collection.\n  overload: System.Xml.Schema.XmlSchemaCollection.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Xml.Schema.XmlSchemaCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: XmlSchemaCollection.GetEnumerator()\n  fullName: System.Xml.Schema.XmlSchemaCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Provides support for the \"for each\" style iteration over the collection of schemas.\n  remarks: >-\n    > [!IMPORTANT]\n\n    >  The <xref:System.Xml.Schema.XmlSchemaCollection> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <xref:System.Xml.Schema.XmlSchemaSet> class.\n  example:\n  - \"The following example displays each of the XML Schemas in the schema collection.  \\n  \\n [!code-vb[Classic WebData XmlSchemaCollection.GetEnumerator Example#1](~/add/codesnippet/visualbasic/m-system.xml.schema.xmls_0_1.vb)]\\n [!code-cs[Classic WebData XmlSchemaCollection.GetEnumerator Example#1](~/add/codesnippet/csharp/m-system.xml.schema.xmls_0_1.cs)]\\n [!code-cpp[Classic WebData XmlSchemaCollection.GetEnumerator Example#1](~/add/codesnippet/cpp/m-system.xml.schema.xmls_0_1.cpp)]\"\n  syntax:\n    content: public System.Xml.Schema.XmlSchemaCollectionEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Xml.Schema.XmlSchemaCollectionEnumerator\n      description: An enumerator for iterating over all schemas in the current collection.\n  overload: System.Xml.Schema.XmlSchemaCollection.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaCollection.Item(System.String)\n  id: Item(System.String)\n  parent: System.Xml.Schema.XmlSchemaCollection\n  langs:\n  - csharp\n  name: Item(String)\n  nameWithType: XmlSchemaCollection.Item(String)\n  fullName: System.Xml.Schema.XmlSchemaCollection.Item(String)\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Gets the <xref:System.Xml.Schema.XmlSchema> associated with the given namespace URI.\n  remarks: >-\n    > [!IMPORTANT]\n\n    >  The <xref:System.Xml.Schema.XmlSchemaCollection> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <xref:System.Xml.Schema.XmlSchemaSet> class.\n  example:\n  - \"The following example checks to see if a schema is in the collection. If it is, it displays the schema.  \\n  \\n [!code-cpp[Classic WebData XmlSchemaCollection.this Example#1](~/add/codesnippet/cpp/p-system.xml.schema.xmls_4_1.cpp)]\\n [!code-vb[Classic WebData XmlSchemaCollection.this Example#1](~/add/codesnippet/visualbasic/p-system.xml.schema.xmls_4_1.vb)]\\n [!code-cs[Classic WebData XmlSchemaCollection.this Example#1](~/add/codesnippet/csharp/p-system.xml.schema.xmls_4_1.cs)]\"\n  syntax:\n    content: public System.Xml.Schema.XmlSchema this[string ns] { get; }\n    parameters:\n    - id: ns\n      type: System.String\n      description: The namespace URI associated with the schema you want to return. This will typically be the <xref uid=\"langword_csharp_targetNamespace\" name=\"targetNamespace\" href=\"\"></xref> of the schema.\n    return:\n      type: System.Xml.Schema.XmlSchema\n      description: The <xref uid=\"langword_csharp_XmlSchema\" name=\"XmlSchema\" href=\"\"></xref> associated with the namespace URI; <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is no loaded schema associated with the given namespace or if the namespace is associated with an XDR schema.\n  overload: System.Xml.Schema.XmlSchemaCollection.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaCollection.NameTable\n  id: NameTable\n  parent: System.Xml.Schema.XmlSchemaCollection\n  langs:\n  - csharp\n  name: NameTable\n  nameWithType: XmlSchemaCollection.NameTable\n  fullName: System.Xml.Schema.XmlSchemaCollection.NameTable\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Gets the default <xref uid=\"langword_csharp_XmlNameTable\" name=\"XmlNameTable\" href=\"\"></xref> used by the <xref uid=\"langword_csharp_XmlSchemaCollection\" name=\"XmlSchemaCollection\" href=\"\"></xref> when loading new schemas.\n  remarks: >-\n    > [!IMPORTANT]\n\n    >  The <xref:System.Xml.Schema.XmlSchemaCollection> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <xref:System.Xml.Schema.XmlSchemaSet> class.\n  syntax:\n    content: public System.Xml.XmlNameTable NameTable { get; }\n    return:\n      type: System.Xml.XmlNameTable\n      description: An <xref uid=\"langword_csharp_XmlNameTable\" name=\"XmlNameTable\" href=\"\"></xref>.\n  overload: System.Xml.Schema.XmlSchemaCollection.NameTable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Xml.Schema.XmlSchemaCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: XmlSchemaCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Xml.Schema.XmlSchemaCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: For a description of this member, see &lt;xref:System.Xml.Schema.XmlSchemaCollection.CopyTo%2A?displayProperty=fullName&gt;.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Xml.Schema.XmlSchemaCollection> instance is cast to an <xref:System.Collections.ICollection> interface.\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: The array to copy the objects to.\n    - id: index\n      type: System.Int32\n      description: The index in `array` where copying will begin.\n  overload: System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#Count\n  id: System#Collections#ICollection#Count\n  isEii: true\n  parent: System.Xml.Schema.XmlSchemaCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.Count\n  nameWithType: XmlSchemaCollection.System.Collections.ICollection.Count\n  fullName: System.Xml.Schema.XmlSchemaCollection.System.Collections.ICollection.Count\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: For a description of this member, see &lt;xref:System.Xml.Schema.XmlSchemaCollection.Count%2A?displayProperty=fullName&gt;.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Xml.Schema.XmlSchemaCollection> instance is cast to an <xref:System.Collections.ICollection> interface.\n  syntax:\n    content: int System.Collections.ICollection.Count { get; }\n    return:\n      type: System.Int32\n      description: Returns the count of the items in the collection.\n  overload: System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Xml.Schema.XmlSchemaCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: XmlSchemaCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.Xml.Schema.XmlSchemaCollection.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: For a description of this member, see ICollection.IsSynchronized.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Xml.Schema.XmlSchemaCollection> instance is cast to an <xref:System.Collections.ICollection> interface.\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: Returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the collection is synchronized, otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Xml.Schema.XmlSchemaCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: XmlSchemaCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.Xml.Schema.XmlSchemaCollection.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: For a description of this member, see ICollection.SyncRoot.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Xml.Schema.XmlSchemaCollection> instance is cast to an <xref:System.Collections.ICollection> interface.\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: Returns a <xref:System.Collections.ICollection.SyncRoot*> object that can be used to synchronize access to the collection.\n  overload: System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaCollection.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Xml.Schema.XmlSchemaCollection\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: XmlSchemaCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Xml.Schema.XmlSchemaCollection.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: For a description of this member, see &lt;xref:System.Xml.Schema.XmlSchemaCollection.GetEnumerator%2A?displayProperty=fullName&gt;.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Xml.Schema.XmlSchemaCollection> instance is cast to an <xref:System.Collections.IEnumerable> interface.\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Returns the <xref:System.Collections.IEnumerator> for the collection.\n  overload: System.Xml.Schema.XmlSchemaCollection.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaCollection.ValidationEventHandler\n  id: ValidationEventHandler\n  parent: System.Xml.Schema.XmlSchemaCollection\n  langs:\n  - csharp\n  name: ValidationEventHandler\n  nameWithType: XmlSchemaCollection.ValidationEventHandler\n  fullName: System.Xml.Schema.XmlSchemaCollection.ValidationEventHandler\n  type: Event\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Sets an event handler for receiving information about the XDR and XML schema validation errors.\n  remarks: \"These events occur when the schemas are added to the collection. If an event handler is not provided, an <xref:System.Xml.Schema.XmlSchemaException> is thrown on any validation errors where the <xref:System.Xml.Schema.ValidationEventArgs.Severity%2A> is `XmlSeverityType.Error`. To specify an event handler, define a callback function and add it to the `ValidationEventHandler`.  \\n  \\n> [!IMPORTANT]\\n>  The <xref:System.Xml.Schema.XmlSchemaCollection> class is obsolete in the .NET Framework version 2.0 and has been replaced by the <xref:System.Xml.Schema.XmlSchemaSet> class.\"\n  example:\n  - \"The following example shows how to set an event handler to handle invalid XML Schemas.  \\n  \\n [!code-cs[XmlSchema.ValidationEventHandler#1](~/add/codesnippet/csharp/e-system.xml.schema.xmls_1_1.cs)]\\n [!code-cpp[XmlSchema.ValidationEventHandler#1](~/add/codesnippet/cpp/e-system.xml.schema.xmls_1_1.cpp)]\\n [!code-vb[XmlSchema.ValidationEventHandler#1](~/add/codesnippet/visualbasic/e-system.xml.schema.xmls_1_1.vb)]  \\n  \\n The preceding example uses the file `invalid.xsd` as input.  \\n  \\n [!code-xml[XmlSchema.ValidationEventHandler#2](~/add/codesnippet/xml/e-system.xml.schema.xmls_1_2.xsd)]\"\n  syntax:\n    content: public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;\n    return:\n      type: System.Xml.Schema.ValidationEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Xml.XmlException\n  isExternal: true\n  name: System.Xml.XmlException\n- uid: System.Xml.Schema.XmlSchemaCollection.#ctor\n  parent: System.Xml.Schema.XmlSchemaCollection\n  isExternal: false\n  name: XmlSchemaCollection()\n  nameWithType: XmlSchemaCollection.XmlSchemaCollection()\n  fullName: System.Xml.Schema.XmlSchemaCollection.XmlSchemaCollection()\n- uid: System.Xml.Schema.XmlSchemaCollection.#ctor(System.Xml.XmlNameTable)\n  parent: System.Xml.Schema.XmlSchemaCollection\n  isExternal: false\n  name: XmlSchemaCollection(XmlNameTable)\n  nameWithType: XmlSchemaCollection.XmlSchemaCollection(XmlNameTable)\n  fullName: System.Xml.Schema.XmlSchemaCollection.XmlSchemaCollection(XmlNameTable)\n- uid: System.Xml.XmlNameTable\n  parent: System.Xml\n  isExternal: true\n  name: XmlNameTable\n  nameWithType: XmlNameTable\n  fullName: System.Xml.XmlNameTable\n- uid: System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema)\n  parent: System.Xml.Schema.XmlSchemaCollection\n  isExternal: false\n  name: Add(XmlSchema)\n  nameWithType: XmlSchemaCollection.Add(XmlSchema)\n  fullName: System.Xml.Schema.XmlSchemaCollection.Add(XmlSchema)\n- uid: System.Xml.Schema.XmlSchema\n  parent: System.Xml.Schema\n  isExternal: true\n  name: XmlSchema\n  nameWithType: XmlSchema\n  fullName: System.Xml.Schema.XmlSchema\n- uid: System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchemaCollection)\n  parent: System.Xml.Schema.XmlSchemaCollection\n  isExternal: false\n  name: Add(XmlSchemaCollection)\n  nameWithType: XmlSchemaCollection.Add(XmlSchemaCollection)\n  fullName: System.Xml.Schema.XmlSchemaCollection.Add(XmlSchemaCollection)\n- uid: System.Xml.Schema.XmlSchemaCollection\n  parent: System.Xml.Schema\n  isExternal: false\n  name: XmlSchemaCollection\n  nameWithType: XmlSchemaCollection\n  fullName: System.Xml.Schema.XmlSchemaCollection\n- uid: System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)\n  parent: System.Xml.Schema.XmlSchemaCollection\n  isExternal: false\n  name: Add(String,String)\n  nameWithType: XmlSchemaCollection.Add(String,String)\n  fullName: System.Xml.Schema.XmlSchemaCollection.Add(String,String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)\n  parent: System.Xml.Schema.XmlSchemaCollection\n  isExternal: false\n  name: Add(String,XmlReader)\n  nameWithType: XmlSchemaCollection.Add(String,XmlReader)\n  fullName: System.Xml.Schema.XmlSchemaCollection.Add(String,XmlReader)\n- uid: System.Xml.XmlReader\n  parent: System.Xml\n  isExternal: true\n  name: XmlReader\n  nameWithType: XmlReader\n  fullName: System.Xml.XmlReader\n- uid: System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema,System.Xml.XmlResolver)\n  parent: System.Xml.Schema.XmlSchemaCollection\n  isExternal: false\n  name: Add(XmlSchema,XmlResolver)\n  nameWithType: XmlSchemaCollection.Add(XmlSchema,XmlResolver)\n  fullName: System.Xml.Schema.XmlSchemaCollection.Add(XmlSchema,XmlResolver)\n- uid: System.Xml.XmlResolver\n  parent: System.Xml\n  isExternal: false\n  name: XmlResolver\n  nameWithType: XmlResolver\n  fullName: System.Xml.XmlResolver\n- uid: System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader,System.Xml.XmlResolver)\n  parent: System.Xml.Schema.XmlSchemaCollection\n  isExternal: false\n  name: Add(String,XmlReader,XmlResolver)\n  nameWithType: XmlSchemaCollection.Add(String,XmlReader,XmlResolver)\n  fullName: System.Xml.Schema.XmlSchemaCollection.Add(String,XmlReader,XmlResolver)\n- uid: System.Xml.Schema.XmlSchemaCollection.Contains(System.String)\n  parent: System.Xml.Schema.XmlSchemaCollection\n  isExternal: false\n  name: Contains(String)\n  nameWithType: XmlSchemaCollection.Contains(String)\n  fullName: System.Xml.Schema.XmlSchemaCollection.Contains(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Xml.Schema.XmlSchemaCollection.Contains(System.Xml.Schema.XmlSchema)\n  parent: System.Xml.Schema.XmlSchemaCollection\n  isExternal: false\n  name: Contains(XmlSchema)\n  nameWithType: XmlSchemaCollection.Contains(XmlSchema)\n  fullName: System.Xml.Schema.XmlSchemaCollection.Contains(XmlSchema)\n- uid: System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)\n  parent: System.Xml.Schema.XmlSchemaCollection\n  isExternal: false\n  name: CopyTo(XmlSchema[],Int32)\n  nameWithType: XmlSchemaCollection.CopyTo(XmlSchema[],Int32)\n  fullName: System.Xml.Schema.XmlSchemaCollection.CopyTo(XmlSchema[],Int32)\n- uid: System.Xml.Schema.XmlSchema[]\n  parent: System.Xml.Schema\n  isExternal: true\n  name: XmlSchema\n  nameWithType: XmlSchema\n  fullName: System.Xml.Schema.XmlSchema[]\n  spec.csharp:\n  - uid: System.Xml.Schema.XmlSchema\n    name: XmlSchema\n    nameWithType: XmlSchema\n    fullName: XmlSchema[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Xml.Schema.XmlSchemaCollection.Count\n  parent: System.Xml.Schema.XmlSchemaCollection\n  isExternal: false\n  name: Count\n  nameWithType: XmlSchemaCollection.Count\n  fullName: System.Xml.Schema.XmlSchemaCollection.Count\n- uid: System.Xml.Schema.XmlSchemaCollection.GetEnumerator\n  parent: System.Xml.Schema.XmlSchemaCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: XmlSchemaCollection.GetEnumerator()\n  fullName: System.Xml.Schema.XmlSchemaCollection.GetEnumerator()\n- uid: System.Xml.Schema.XmlSchemaCollectionEnumerator\n  parent: System.Xml.Schema\n  isExternal: false\n  name: XmlSchemaCollectionEnumerator\n  nameWithType: XmlSchemaCollectionEnumerator\n  fullName: System.Xml.Schema.XmlSchemaCollectionEnumerator\n- uid: System.Xml.Schema.XmlSchemaCollection.Item(System.String)\n  parent: System.Xml.Schema.XmlSchemaCollection\n  isExternal: false\n  name: Item(String)\n  nameWithType: XmlSchemaCollection.Item(String)\n  fullName: System.Xml.Schema.XmlSchemaCollection.Item(String)\n- uid: System.Xml.Schema.XmlSchemaCollection.NameTable\n  parent: System.Xml.Schema.XmlSchemaCollection\n  isExternal: false\n  name: NameTable\n  nameWithType: XmlSchemaCollection.NameTable\n  fullName: System.Xml.Schema.XmlSchemaCollection.NameTable\n- uid: System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Xml.Schema.XmlSchemaCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: XmlSchemaCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Xml.Schema.XmlSchemaCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: true\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#Count\n  parent: System.Xml.Schema.XmlSchemaCollection\n  isExternal: false\n  name: System.Collections.ICollection.Count\n  nameWithType: XmlSchemaCollection.System.Collections.ICollection.Count\n  fullName: System.Xml.Schema.XmlSchemaCollection.System.Collections.ICollection.Count\n- uid: System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized\n  parent: System.Xml.Schema.XmlSchemaCollection\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: XmlSchemaCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.Xml.Schema.XmlSchemaCollection.System.Collections.ICollection.IsSynchronized\n- uid: System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot\n  parent: System.Xml.Schema.XmlSchemaCollection\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: XmlSchemaCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.Xml.Schema.XmlSchemaCollection.System.Collections.ICollection.SyncRoot\n- uid: System.Xml.Schema.XmlSchemaCollection.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Xml.Schema.XmlSchemaCollection\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: XmlSchemaCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Xml.Schema.XmlSchemaCollection.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Xml.Schema.XmlSchemaCollection.ValidationEventHandler\n  parent: System.Xml.Schema.XmlSchemaCollection\n  isExternal: false\n  name: ValidationEventHandler\n  nameWithType: XmlSchemaCollection.ValidationEventHandler\n  fullName: System.Xml.Schema.XmlSchemaCollection.ValidationEventHandler\n- uid: System.Xml.Schema.ValidationEventHandler\n  parent: System.Xml.Schema\n  isExternal: false\n  name: ValidationEventHandler\n  nameWithType: ValidationEventHandler\n  fullName: System.Xml.Schema.ValidationEventHandler\n- uid: System.Xml.Schema.XmlSchemaCollection.#ctor*\n  parent: System.Xml.Schema.XmlSchemaCollection\n  isExternal: false\n  name: XmlSchemaCollection\n  nameWithType: XmlSchemaCollection.XmlSchemaCollection\n- uid: System.Xml.Schema.XmlSchemaCollection.Add*\n  parent: System.Xml.Schema.XmlSchemaCollection\n  isExternal: false\n  name: Add\n  nameWithType: XmlSchemaCollection.Add\n- uid: System.Xml.Schema.XmlSchemaCollection.Contains*\n  parent: System.Xml.Schema.XmlSchemaCollection\n  isExternal: false\n  name: Contains\n  nameWithType: XmlSchemaCollection.Contains\n- uid: System.Xml.Schema.XmlSchemaCollection.CopyTo*\n  parent: System.Xml.Schema.XmlSchemaCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: XmlSchemaCollection.CopyTo\n- uid: System.Xml.Schema.XmlSchemaCollection.Count*\n  parent: System.Xml.Schema.XmlSchemaCollection\n  isExternal: false\n  name: Count\n  nameWithType: XmlSchemaCollection.Count\n- uid: System.Xml.Schema.XmlSchemaCollection.GetEnumerator*\n  parent: System.Xml.Schema.XmlSchemaCollection\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: XmlSchemaCollection.GetEnumerator\n- uid: System.Xml.Schema.XmlSchemaCollection.Item*\n  parent: System.Xml.Schema.XmlSchemaCollection\n  isExternal: false\n  name: Item\n  nameWithType: XmlSchemaCollection.Item\n- uid: System.Xml.Schema.XmlSchemaCollection.NameTable*\n  parent: System.Xml.Schema.XmlSchemaCollection\n  isExternal: false\n  name: NameTable\n  nameWithType: XmlSchemaCollection.NameTable\n- uid: System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#CopyTo*\n  parent: System.Xml.Schema.XmlSchemaCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo\n  nameWithType: XmlSchemaCollection.System.Collections.ICollection.CopyTo\n- uid: System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#Count*\n  parent: System.Xml.Schema.XmlSchemaCollection\n  isExternal: false\n  name: System.Collections.ICollection.Count\n  nameWithType: XmlSchemaCollection.System.Collections.ICollection.Count\n- uid: System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized*\n  parent: System.Xml.Schema.XmlSchemaCollection\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: XmlSchemaCollection.System.Collections.ICollection.IsSynchronized\n- uid: System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot*\n  parent: System.Xml.Schema.XmlSchemaCollection\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: XmlSchemaCollection.System.Collections.ICollection.SyncRoot\n- uid: System.Xml.Schema.XmlSchemaCollection.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.Xml.Schema.XmlSchemaCollection\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: XmlSchemaCollection.System.Collections.IEnumerable.GetEnumerator\n"}