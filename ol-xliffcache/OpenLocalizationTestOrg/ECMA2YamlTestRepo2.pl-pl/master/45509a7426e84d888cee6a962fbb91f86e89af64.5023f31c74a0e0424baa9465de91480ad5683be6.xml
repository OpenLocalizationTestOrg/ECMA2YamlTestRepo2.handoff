{"nodes":[{"pos":[2376,2610],"content":"Derivative of <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> that is the base class for all activities that contain other activities. A CompositeActivity is responsible for managing the execution of its child activities.","needQuote":true,"needEscape":true,"nodes":[{"content":"Derivative of <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is the base class for all activities that contain other activities.","pos":[0,147],"source":"Derivative of <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> that is the base class for all activities that contain other activities."},{"content":"A CompositeActivity is responsible for managing the execution of its child activities.","pos":[148,234]}]},{"pos":[2623,3910],"content":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       A CompositeActivity manages the execution of its child activities using <xref:System.Workflow.ComponentModel.ActivityExecutionContext> class methods and events defined on the <xref:System.Workflow.ComponentModel.Activity> class.  For example, a child activity is scheduled for execution using the <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A> of <xref:System.Workflow.ComponentModel.ActivityExecutionContext>. A CompositeActivity activity can be notified when a child activity completes its execution by subscribing to the <xref:System.Workflow.ComponentModel.Activity.Closed> event defined on <xref:System.Workflow.ComponentModel.Activity>.       The workflow runtime enforces certain constraints on CompositeActivity execution, the most fundamental of which is that a CompositeActivity activity cannot move to the <xref:System.Workflow.ComponentModel.Activity.Closed> state if any child activities are still in a <xref:System.Workflow.ComponentModel.Activity.Executing>, <xref:System.Workflow.ComponentModel.Activity.Canceling>, <xref:System.Workflow.ComponentModel.Activity.Compensating>, or <xref:System.Workflow.ComponentModel.Activity.Faulting>, state.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">&gt; [!NOTE]</ph><ph id=\"ph2\"> &gt;  </ph><ph id=\"ph3\">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>       A CompositeActivity manages the execution of its child activities using &lt;xref:System.Workflow.ComponentModel.ActivityExecutionContext&gt; class methods and events defined on the &lt;xref:System.Workflow.ComponentModel.Activity&gt; class.","pos":[0,316],"source":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       A CompositeActivity manages the execution of its child activities using <xref:System.Workflow.ComponentModel.ActivityExecutionContext> class methods and events defined on the <xref:System.Workflow.ComponentModel.Activity> class."},{"content":"For example, a child activity is scheduled for execution using the &lt;xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A&gt; of &lt;xref:System.Workflow.ComponentModel.ActivityExecutionContext&gt;.","pos":[318,533],"source":"  For example, a child activity is scheduled for execution using the <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A> of <xref:System.Workflow.ComponentModel.ActivityExecutionContext>."},{"content":"A CompositeActivity activity can be notified when a child activity completes its execution by subscribing to the &lt;xref:System.Workflow.ComponentModel.Activity.Closed&gt; event defined on &lt;xref:System.Workflow.ComponentModel.Activity&gt;.","pos":[534,765],"source":" A CompositeActivity activity can be notified when a child activity completes its execution by subscribing to the <xref:System.Workflow.ComponentModel.Activity.Closed> event defined on <xref:System.Workflow.ComponentModel.Activity>."},{"content":"The workflow runtime enforces certain constraints on CompositeActivity execution, the most fundamental of which is that a CompositeActivity activity cannot move to the &lt;xref:System.Workflow.ComponentModel.Activity.Closed&gt; state if any child activities are still in a &lt;xref:System.Workflow.ComponentModel.Activity.Executing&gt;, &lt;xref:System.Workflow.ComponentModel.Activity.Canceling&gt;, &lt;xref:System.Workflow.ComponentModel.Activity.Compensating&gt;, or &lt;xref:System.Workflow.ComponentModel.Activity.Faulting&gt;, state.","pos":[772,1282],"source":"       The workflow runtime enforces certain constraints on CompositeActivity execution, the most fundamental of which is that a CompositeActivity activity cannot move to the <xref:System.Workflow.ComponentModel.Activity.Closed> state if any child activities are still in a <xref:System.Workflow.ComponentModel.Activity.Executing>, <xref:System.Workflow.ComponentModel.Activity.Canceling>, <xref:System.Workflow.ComponentModel.Activity.Compensating>, or <xref:System.Workflow.ComponentModel.Activity.Faulting>, state."}]},{"pos":[12131,12241],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.CompositeActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.CompositeActivity\"></xref> class."},{"pos":[13088,13367],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.CompositeActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class from an &lt;xref:System.Object&gt; which implements the &lt;xref:System.Collections.IEnumerable&gt; interface with type <bpt id=\"p2\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.CompositeActivity\"></xref> class from an <xref:System.Object> which implements the <xref:System.Collections.IEnumerable> interface with type <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>."},{"pos":[13654,13815],"content":"The &lt;xref:System.Object&gt; implementing the &lt;xref:System.Collections.IEnumerable&gt; interface with type <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Object> implementing the <xref:System.Collections.IEnumerable> interface with type <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>."},{"pos":[14414,14563],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.CompositeActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, along with the name for that activity.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.CompositeActivity\"></xref> class, along with the name for that activity."},{"pos":[14703,14729],"content":"The name for the instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name for the instance.","pos":[0,26]}]},{"pos":[14914,15037],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"<code>name</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[15481,15622],"content":"Gets the object representing the collection, <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, of all child activities.","needQuote":true,"needEscape":true,"source":"Gets the object representing the collection, <xref href=\"System.Workflow.ComponentModel.ActivityCollection\"></xref>, of all child activities."},{"pos":[15634,15746],"content":"Represents the collection of child activities managed by the composite activity. This collection can be updated.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Represents the collection of child activities managed by the composite activity. This collection can be updated.","pos":[0,112],"nodes":[{"content":"Represents the collection of child activities managed by the composite activity.","pos":[0,80]},{"content":"This collection can be updated.","pos":[81,112]}]}]},{"pos":[16576,16671],"content":"<bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of all child activities.","needQuote":true,"needEscape":true,"source":"<xref href=\"System.Workflow.ComponentModel.ActivityCollection\"></xref> of all child activities."},{"pos":[17400,17523],"content":"Applies the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.WorkflowChanges\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> manifest in the parameter to this instance.","needQuote":true,"needEscape":true,"source":"Applies the <xref href=\"System.Workflow.ComponentModel.WorkflowChanges\"></xref> manifest in the parameter to this instance."},{"pos":[17769,17850],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.WorkflowChanges\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to apply.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.ComponentModel.WorkflowChanges\"></xref> to apply."},{"pos":[18050,18184],"content":"<ph id=\"ph1\">&lt;code&gt;workflowChanges&lt;/code&gt;</ph> is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"<code>workflowChanges</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[18673,18834],"content":"Gets or sets a value which controls whether the individual activities within <xref:System.Workflow.ComponentModel.CompositeActivity.Activities*> can be modified.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value which controls whether the individual activities within &lt;xref:System.Workflow.ComponentModel.CompositeActivity.Activities*&gt; can be modified.","pos":[0,161],"source":"Gets or sets a value which controls whether the individual activities within <xref:System.Workflow.ComponentModel.CompositeActivity.Activities*> can be modified."}]},{"pos":[19556,19811],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the individual activities within &lt;xref:System.Workflow.ComponentModel.CompositeActivity.Activities*&gt; can be modified; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the individual activities within <xref:System.Workflow.ComponentModel.CompositeActivity.Activities*> can be modified; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[20396,20610],"content":"Calls &lt;xref:System.Workflow.ComponentModel.DependencyObject.Dispose<bpt id=\"p1\">*</bpt>&gt; on this instance, and optionally calls &lt;xref:System.Workflow.ComponentModel.DependencyObject.Dispose<ept id=\"p1\">*</ept>&gt; on all child activities of this instance.","needQuote":true,"needEscape":true,"source":"Calls <xref:System.Workflow.ComponentModel.DependencyObject.Dispose*> on this instance, and optionally calls <xref:System.Workflow.ComponentModel.DependencyObject.Dispose*> on all child activities of this instance."},{"pos":[20622,21099],"content":"Throughout an activity's lifetime, several .NET objects may be created or disposed. Every time a workflow instance is unloaded from memory, the .NET objects corresponding to the activities in the workflow tree are disposed (the <xref:System.Workflow.ComponentModel.DependencyObject.Dispose%2A> method is called on each activity). When the workflow instance is loaded back into memory, a new .NET object is created for each activity with the state from the corresponding unload.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Throughout an activity's lifetime, several .NET objects may be created or disposed. Every time a workflow instance is unloaded from memory, the .NET objects corresponding to the activities in the workflow tree are disposed (the <xref:System.Workflow.ComponentModel.DependencyObject.Dispose%2A> method is called on each activity). When the workflow instance is loaded back into memory, a new .NET object is created for each activity with the state from the corresponding unload.","pos":[0,477],"nodes":[{"content":"Throughout an activity's lifetime, several .NET objects may be created or disposed.","pos":[0,83]},{"content":"Every time a workflow instance is unloaded from memory, the .NET objects corresponding to the activities in the workflow tree are disposed (the &lt;xref:System.Workflow.ComponentModel.DependencyObject.Dispose%2A&gt; method is called on each activity).","pos":[84,329],"source":" Every time a workflow instance is unloaded from memory, the .NET objects corresponding to the activities in the workflow tree are disposed (the <xref:System.Workflow.ComponentModel.DependencyObject.Dispose%2A> method is called on each activity)."},{"content":"When the workflow instance is loaded back into memory, a new .NET object is created for each activity with the state from the corresponding unload.","pos":[330,477]}]}]},{"pos":[21255,21549],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to release both managed and unmanaged resources used by this instance and all child activities of this instance; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to release only the unmanaged resources of this instance.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release both managed and unmanaged resources used by this instance and all child activities of this instance; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only the unmanaged resources of this instance."},{"pos":[22115,22260],"content":"Gets the read-only collection that represents the subset of <xref:System.Workflow.ComponentModel.CompositeActivity.Activities*> that are enabled.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the read-only collection that represents the subset of &lt;xref:System.Workflow.ComponentModel.CompositeActivity.Activities*&gt; that are enabled.","pos":[0,145],"source":"Gets the read-only collection that represents the subset of <xref:System.Workflow.ComponentModel.CompositeActivity.Activities*> that are enabled."}]},{"pos":[22543,22683],"content":"The read-only collection that represents the subset of <xref:System.Workflow.ComponentModel.CompositeActivity.Activities*> that are enabled.","needQuote":true,"needEscape":true,"nodes":[{"content":"The read-only collection that represents the subset of &lt;xref:System.Workflow.ComponentModel.CompositeActivity.Activities*&gt; that are enabled.","pos":[0,140],"source":"The read-only collection that represents the subset of <xref:System.Workflow.ComponentModel.CompositeActivity.Activities*> that are enabled."}]},{"pos":[23384,23482],"content":"Returns an array that contains all of the currently executing instances of the specified activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an array that contains all of the currently executing instances of the specified activity.","pos":[0,98]}]},{"pos":[23737,23812],"content":"The specified <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The specified <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>."},{"pos":[23898,23958],"content":"An array of activity instances that are currently executing.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of activity instances that are currently executing.","pos":[0,60]}]},{"pos":[24761,24849],"content":"Called when an exception is raised within the context of the execution of this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Called when an exception is raised within the context of the execution of this instance.","pos":[0,88]}]},{"pos":[25186,25285],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for this instance.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> for this instance."},{"pos":[25354,25405],"content":"The <xref:System.Exception> that caused this fault.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Exception&gt; that caused this fault.","pos":[0,51],"source":"The <xref:System.Exception> that caused this fault."}]},{"pos":[25504,25637],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that results from an attempt to cancel this instance.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"></xref> that results from an attempt to cancel this instance."},{"pos":[25828,25956],"content":"<ph id=\"ph1\">&lt;code&gt;exception&lt;/code&gt;</ph> is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"<code>exception</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[26502,26613],"content":"Initializes all appropriate child activities of this instance and the specified <xref:System.IServiceProvider>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes all appropriate child activities of this instance and the specified &lt;xref:System.IServiceProvider&gt;.","pos":[0,111],"source":"Initializes all appropriate child activities of this instance and the specified <xref:System.IServiceProvider>."}]},{"pos":[26791,26836],"content":"The specified <xref:System.IServiceProvider>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified &lt;xref:System.IServiceProvider&gt;.","pos":[0,45],"source":"The specified <xref:System.IServiceProvider>."}]},{"pos":[27026,27153],"content":"<ph id=\"ph1\">&lt;code&gt;provider&lt;/code&gt;</ph> is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"<code>provider</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[27939,27971],"content":"Calls when an activity is added.","needQuote":true,"needEscape":true,"nodes":[{"content":"Calls when an activity is added.","pos":[0,32]}]},{"pos":[28299,28390],"content":"The specified <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The specified <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref>."},{"pos":[28486,28561],"content":"The specified <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The specified <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>."},{"pos":[28760,28876],"content":"<ph id=\"ph1\">&lt;code&gt;addedActivity&lt;/code&gt;</ph> is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>).","needQuote":true,"needEscape":true,"source":"<code>addedActivity</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref>)."},{"pos":[29677,29712],"content":"Called when an activity is removed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Called when an activity is removed.","pos":[0,35]}]},{"pos":[29724,29773],"content":"Current implementation provides no functionality.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Current implementation provides no functionality.","pos":[0,49]}]},{"pos":[30106,30197],"content":"The specified <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The specified <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref>."},{"pos":[30295,30370],"content":"The specified <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The specified <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>."},{"pos":[31118,31276],"content":"Called by the workflow runtime engine every time the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for this activity is loaded.","needQuote":true,"needEscape":true,"source":"Called by the workflow runtime engine every time the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> for this activity is loaded."},{"pos":[31474,31584],"content":"An <xref:System.Object> that implements <xref:System.IServiceProvider> and provides services to this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Object&gt; that implements &lt;xref:System.IServiceProvider&gt; and provides services to this instance.","pos":[0,110],"source":"An <xref:System.Object> that implements <xref:System.IServiceProvider> and provides services to this instance."}]},{"pos":[32350,32510],"content":"Called by the workflow runtime engine every time the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for this activity is unloaded.","needQuote":true,"needEscape":true,"source":"Called by the workflow runtime engine every time the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> for this activity is unloaded."},{"pos":[32710,32820],"content":"An <xref:System.Object> that implements <xref:System.IServiceProvider> and provides services to this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Object&gt; that implements &lt;xref:System.IServiceProvider&gt; and provides services to this instance.","pos":[0,110],"source":"An <xref:System.Object> that implements <xref:System.IServiceProvider> and provides services to this instance."}]},{"pos":[33626,33751],"content":"Performs additional processing when the <xref:System.Workflow.ComponentModel.CompositeActivity.Activities*> property changes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs additional processing when the &lt;xref:System.Workflow.ComponentModel.CompositeActivity.Activities*&gt; property changes.","pos":[0,125],"source":"Performs additional processing when the <xref:System.Workflow.ComponentModel.CompositeActivity.Activities*> property changes."}]},{"pos":[34006,34119],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> broadcast by the event.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs\"></xref> broadcast by the event."},{"pos":[34911,35042],"content":"Event that occurs before a change being made to the underlying <xref:System.Workflow.ComponentModel.CompositeActivity.Activities*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Event that occurs before a change being made to the underlying &lt;xref:System.Workflow.ComponentModel.CompositeActivity.Activities*&gt;.","pos":[0,131],"source":"Event that occurs before a change being made to the underlying <xref:System.Workflow.ComponentModel.CompositeActivity.Activities*>."}]},{"pos":[35298,35344],"content":"<xref:System.EventArgs> relating to the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"&lt;xref:System.EventArgs&gt; relating to the event.","pos":[0,46],"source":"<xref:System.EventArgs> relating to the event."}]},{"pos":[36152,36291],"content":"Called after changes have been made to the collection <xref:System.Workflow.ComponentModel.CompositeActivity.Activities*> of this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Called after changes have been made to the collection &lt;xref:System.Workflow.ComponentModel.CompositeActivity.Activities*&gt; of this instance.","pos":[0,139],"source":"Called after changes have been made to the collection <xref:System.Workflow.ComponentModel.CompositeActivity.Activities*> of this instance."}]},{"pos":[36303,36374],"content":"When overridden in a derived class, provides processing for this event.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When overridden in a derived class, provides processing for this event.","pos":[0,71]}]},{"pos":[36644,36755],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> associated with this instance.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> associated with this instance."},{"pos":[37417,37666],"content":"Called by the workflow runtime engine when an activity transitions into the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> state from the <bpt id=\"p2\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> state.","needQuote":true,"needEscape":true,"source":"Called by the workflow runtime engine when an activity transitions into the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"></xref> state from the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"></xref> state."},{"pos":[37678,37779],"content":"This method is used for activity cleanup, such as clearing dependency properties and deleting queues.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is used for activity cleanup, such as clearing dependency properties and deleting queues.","pos":[0,101]}]},{"pos":[37959,38069],"content":"An <xref:System.Object> that implements <xref:System.IServiceProvider> and provides services to this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Object&gt; that implements &lt;xref:System.IServiceProvider&gt; and provides services to this instance.","pos":[0,110],"source":"An <xref:System.Object> that implements <xref:System.IServiceProvider> and provides services to this instance."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.ComponentModel.CompositeActivity\n  id: CompositeActivity\n  children:\n  - System.Workflow.ComponentModel.CompositeActivity.#ctor\n  - System.Workflow.ComponentModel.CompositeActivity.#ctor(System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Activity})\n  - System.Workflow.ComponentModel.CompositeActivity.#ctor(System.String)\n  - System.Workflow.ComponentModel.CompositeActivity.Activities\n  - System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)\n  - System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities\n  - System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)\n  - System.Workflow.ComponentModel.CompositeActivity.EnabledActivities\n  - System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  - System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  - System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  - System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)\n  langs:\n  - csharp\n  name: CompositeActivity\n  nameWithType: CompositeActivity\n  fullName: System.Workflow.ComponentModel.CompositeActivity\n  type: Class\n  summary: Derivative of <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> that is the base class for all activities that contain other activities. A CompositeActivity is responsible for managing the execution of its child activities.\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n A CompositeActivity manages the execution of its child activities using <xref:System.Workflow.ComponentModel.ActivityExecutionContext> class methods and events defined on the <xref:System.Workflow.ComponentModel.Activity> class.  For example, a child activity is scheduled for execution using the <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A> of <xref:System.Workflow.ComponentModel.ActivityExecutionContext>. A CompositeActivity activity can be notified when a child activity completes its execution by subscribing to the <xref:System.Workflow.ComponentModel.Activity.Closed> event defined on <xref:System.Workflow.ComponentModel.Activity>.  \\n  \\n The workflow runtime enforces certain constraints on CompositeActivity execution, the most fundamental of which is that a CompositeActivity activity cannot move to the <xref:System.Workflow.ComponentModel.Activity.Closed> state if any child activities are still in a <xref:System.Workflow.ComponentModel.Activity.Executing>, <xref:System.Workflow.ComponentModel.Activity.Canceling>, <xref:System.Workflow.ComponentModel.Activity.Compensating>, or <xref:System.Workflow.ComponentModel.Activity.Faulting>, state.\"\n  example:\n  - \"This example shows a basic `CompositeActivity` that executes its first child activity for execution. When the child activity moves to the Closed state, the composite activity is notified and then completes its execution.  \\n  \\n```c#  \\npublic class HasOneChildActivity : CompositeActivity  \\n{  \\n    protected override ActivityExecutionStatus Execute(ActivityExecutionContext executionContext)  \\n    {  \\n        Activity child = this.EnabledActivities[0];  \\n        child.Closed += this.ChildClosed;  \\n        executionContext.ExecuteActivity(child);  \\n  \\n        return ActivityExecutionStatus.Executing;  \\n    }  \\n  \\n    void ChildClosed(object sender, ActivityExecutionStatusChangedEventArgs e)  \\n    {  \\n        e.Activity.Closed -= this.ChildClosed;  \\n        ActivityExecutionContext executionContext = sender as ActivityExecutionContext;  \\n  \\n        executionContext.CloseActivity();  \\n    }  \\n}  \\n```\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.CompositeActivityMarkupSerializer), typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer))]\n\n      [System.ComponentModel.TypeDescriptionProvider(typeof(System.Workflow.ComponentModel.Serialization.CompositeActivityTypeDescriptorProvider))]\n\n      [System.Obsolete(\"The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*\")]\n\n      [System.Workflow.ComponentModel.Compiler.ActivityCodeGenerator(typeof(System.Workflow.ComponentModel.Compiler.CompositeActivityCodeGenerator))]\n\n      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.ComponentModel.Compiler.CompositeActivityValidator))]\n\n      [System.Workflow.ComponentModel.Serialization.ContentProperty(\"Activities\")]\n\n      public class CompositeActivity : System.Workflow.ComponentModel.Activity\n  inheritance:\n  - System.Object\n  - System.Workflow.ComponentModel.DependencyObject\n  - System.Workflow.ComponentModel.Activity\n  implements: []\n  inheritedMembers:\n  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty\n  - System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.ComponentModel.Activity.Canceling\n  - System.Workflow.ComponentModel.Activity.CancelingEvent\n  - System.Workflow.ComponentModel.Activity.Clone\n  - System.Workflow.ComponentModel.Activity.Closed\n  - System.Workflow.ComponentModel.Activity.ClosedEvent\n  - System.Workflow.ComponentModel.Activity.Compensating\n  - System.Workflow.ComponentModel.Activity.CompensatingEvent\n  - System.Workflow.ComponentModel.Activity.Description\n  - System.Workflow.ComponentModel.Activity.Enabled\n  - System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.ComponentModel.Activity.Executing\n  - System.Workflow.ComponentModel.Activity.ExecutingEvent\n  - System.Workflow.ComponentModel.Activity.ExecutionResult\n  - System.Workflow.ComponentModel.Activity.ExecutionStatus\n  - System.Workflow.ComponentModel.Activity.Faulting\n  - System.Workflow.ComponentModel.Activity.FaultingEvent\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)\n  - System.Workflow.ComponentModel.Activity.IsDynamicActivity\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.Name\n  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Activity.Parent\n  - System.Workflow.ComponentModel.Activity.QualifiedName\n  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)\n  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)\n  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.StatusChanged\n  - System.Workflow.ComponentModel.Activity.StatusChangedEvent\n  - System.Workflow.ComponentModel.Activity.ToString\n  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)\n  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)\n  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId\n  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.DesignMode\n  - System.Workflow.ComponentModel.DependencyObject.Dispose\n  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)\n  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties\n  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)\n  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject\n  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)\n  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.Site\n  - System.Workflow.ComponentModel.DependencyObject.UserData\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.CompositeActivity.#ctor\n  id: '#ctor'\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  langs:\n  - csharp\n  name: CompositeActivity()\n  nameWithType: CompositeActivity.CompositeActivity()\n  fullName: System.Workflow.ComponentModel.CompositeActivity.CompositeActivity()\n  type: Constructor\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.CompositeActivity\"></xref> class.\n  syntax:\n    content: public CompositeActivity ();\n    parameters: []\n  overload: System.Workflow.ComponentModel.CompositeActivity.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.CompositeActivity.#ctor(System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Activity})\n  id: '#ctor(System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Activity})'\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  langs:\n  - csharp\n  name: CompositeActivity(IEnumerable<Activity>)\n  nameWithType: CompositeActivity.CompositeActivity(IEnumerable<Activity>)\n  fullName: System.Workflow.ComponentModel.CompositeActivity.CompositeActivity(IEnumerable<Activity>)\n  type: Constructor\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.CompositeActivity\"></xref> class from an <xref:System.Object> which implements the <xref:System.Collections.IEnumerable> interface with type <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.\n  syntax:\n    content: public CompositeActivity (System.Collections.Generic.IEnumerable<System.Workflow.ComponentModel.Activity> children);\n    parameters:\n    - id: children\n      type: System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Activity}\n      description: The <xref:System.Object> implementing the <xref:System.Collections.IEnumerable> interface with type <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.\n  overload: System.Workflow.ComponentModel.CompositeActivity.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.CompositeActivity.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  langs:\n  - csharp\n  name: CompositeActivity(String)\n  nameWithType: CompositeActivity.CompositeActivity(String)\n  fullName: System.Workflow.ComponentModel.CompositeActivity.CompositeActivity(String)\n  type: Constructor\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.CompositeActivity\"></xref> class, along with the name for that activity.\n  syntax:\n    content: public CompositeActivity (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name for the instance.\n  overload: System.Workflow.ComponentModel.CompositeActivity.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.CompositeActivity.Activities\n  id: Activities\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  langs:\n  - csharp\n  name: Activities\n  nameWithType: CompositeActivity.Activities\n  fullName: System.Workflow.ComponentModel.CompositeActivity.Activities\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Gets the object representing the collection, <xref href=\"System.Workflow.ComponentModel.ActivityCollection\"></xref>, of all child activities.\n  remarks: Represents the collection of child activities managed by the composite activity. This collection can be updated.\n  example:\n  - \"The following code shows how to create activities and add them as children to a composite activity and includes setting the <xref:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities%2A> permissive for this type.  \\n  \\n This code example is part of the Throw SDK sample and is from the ThrowWorkFlow.cs file. For more information, see [Throw Sample](http://msdn.microsoft.com/en-us/aa5b9546-ec95-4e43-8337-20e26f8d71cc).  \\n  \\n [!code-cs[WF_Samples#179](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#179)]\\n [!code-vb[WF_Samples#179](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#179)]\"\n  syntax:\n    content: public System.Workflow.ComponentModel.ActivityCollection Activities { get; }\n    return:\n      type: System.Workflow.ComponentModel.ActivityCollection\n      description: <xref href=\"System.Workflow.ComponentModel.ActivityCollection\"></xref> of all child activities.\n  overload: System.Workflow.ComponentModel.CompositeActivity.Activities*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)\n  id: ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  langs:\n  - csharp\n  name: ApplyWorkflowChanges(WorkflowChanges)\n  nameWithType: CompositeActivity.ApplyWorkflowChanges(WorkflowChanges)\n  fullName: System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(WorkflowChanges)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Applies the <xref href=\"System.Workflow.ComponentModel.WorkflowChanges\"></xref> manifest in the parameter to this instance.\n  syntax:\n    content: protected void ApplyWorkflowChanges (System.Workflow.ComponentModel.WorkflowChanges workflowChanges);\n    parameters:\n    - id: workflowChanges\n      type: System.Workflow.ComponentModel.WorkflowChanges\n      description: The <xref href=\"System.Workflow.ComponentModel.WorkflowChanges\"></xref> to apply.\n  overload: System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>workflowChanges</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities\n  id: CanModifyActivities\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  langs:\n  - csharp\n  name: CanModifyActivities\n  nameWithType: CompositeActivity.CanModifyActivities\n  fullName: System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Gets or sets a value which controls whether the individual activities within <xref:System.Workflow.ComponentModel.CompositeActivity.Activities*> can be modified.\n  remarks: ''\n  example:\n  - \"The following code shows how to create activities and add them as children to a composite activity and includes setting the CanModifyActivities permissive for this type.  \\n  \\n This code example is part of the Throw SDK sample and is from the ThrowWorkFlow.cs file. For more information, see [Throw Sample](http://msdn.microsoft.com/en-us/aa5b9546-ec95-4e43-8337-20e26f8d71cc).  \\n  \\n [!code-cs[WF_Samples#179](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#179)]\\n [!code-vb[WF_Samples#179](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#179)]\"\n  syntax:\n    content: protected bool CanModifyActivities { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the individual activities within <xref:System.Workflow.ComponentModel.CompositeActivity.Activities*> can be modified; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: CompositeActivity.Dispose(Boolean)\n  fullName: System.Workflow.ComponentModel.CompositeActivity.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Calls <xref:System.Workflow.ComponentModel.DependencyObject.Dispose*> on this instance, and optionally calls <xref:System.Workflow.ComponentModel.DependencyObject.Dispose*> on all child activities of this instance.\n  remarks: Throughout an activity's lifetime, several .NET objects may be created or disposed. Every time a workflow instance is unloaded from memory, the .NET objects corresponding to the activities in the workflow tree are disposed (the <xref:System.Workflow.ComponentModel.DependencyObject.Dispose%2A> method is called on each activity). When the workflow instance is loaded back into memory, a new .NET object is created for each activity with the state from the corresponding unload.\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release both managed and unmanaged resources used by this instance and all child activities of this instance; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only the unmanaged resources of this instance.\n  overload: System.Workflow.ComponentModel.CompositeActivity.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.CompositeActivity.EnabledActivities\n  id: EnabledActivities\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  langs:\n  - csharp\n  name: EnabledActivities\n  nameWithType: CompositeActivity.EnabledActivities\n  fullName: System.Workflow.ComponentModel.CompositeActivity.EnabledActivities\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Gets the read-only collection that represents the subset of <xref:System.Workflow.ComponentModel.CompositeActivity.Activities*> that are enabled.\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Workflow.ComponentModel.Activity> EnabledActivities { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity}\n      description: The read-only collection that represents the subset of <xref:System.Workflow.ComponentModel.CompositeActivity.Activities*> that are enabled.\n  overload: System.Workflow.ComponentModel.CompositeActivity.EnabledActivities*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)\n  id: GetDynamicActivities(System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  langs:\n  - csharp\n  name: GetDynamicActivities(Activity)\n  nameWithType: CompositeActivity.GetDynamicActivities(Activity)\n  fullName: System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(Activity)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Returns an array that contains all of the currently executing instances of the specified activity.\n  syntax:\n    content: protected System.Workflow.ComponentModel.Activity[] GetDynamicActivities (System.Workflow.ComponentModel.Activity activity);\n    parameters:\n    - id: activity\n      type: System.Workflow.ComponentModel.Activity\n      description: The specified <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.\n    return:\n      type: System.Workflow.ComponentModel.Activity[]\n      description: An array of activity instances that are currently executing.\n  overload: System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  id: HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  langs:\n  - csharp\n  name: HandleFault(ActivityExecutionContext,Exception)\n  nameWithType: CompositeActivity.HandleFault(ActivityExecutionContext,Exception)\n  fullName: System.Workflow.ComponentModel.CompositeActivity.HandleFault(ActivityExecutionContext,Exception)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Called when an exception is raised within the context of the execution of this instance.\n  syntax:\n    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, Exception exception);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> for this instance.\n    - id: exception\n      type: System.Exception\n      description: The <xref:System.Exception> that caused this fault.\n    return:\n      type: System.Workflow.ComponentModel.ActivityExecutionStatus\n      description: The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"></xref> that results from an attempt to cancel this instance.\n  overload: System.Workflow.ComponentModel.CompositeActivity.HandleFault*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>exception</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)\n  id: Initialize(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  langs:\n  - csharp\n  name: Initialize(IServiceProvider)\n  nameWithType: CompositeActivity.Initialize(IServiceProvider)\n  fullName: System.Workflow.ComponentModel.CompositeActivity.Initialize(IServiceProvider)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Initializes all appropriate child activities of this instance and the specified <xref:System.IServiceProvider>.\n  syntax:\n    content: protected override void Initialize (IServiceProvider provider);\n    parameters:\n    - id: provider\n      type: System.IServiceProvider\n      description: The specified <xref:System.IServiceProvider>.\n  overload: System.Workflow.ComponentModel.CompositeActivity.Initialize*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>provider</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  id: OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  langs:\n  - csharp\n  name: OnActivityChangeAdd(ActivityExecutionContext,Activity)\n  nameWithType: CompositeActivity.OnActivityChangeAdd(ActivityExecutionContext,Activity)\n  fullName: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(ActivityExecutionContext,Activity)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Calls when an activity is added.\n  syntax:\n    content: protected virtual void OnActivityChangeAdd (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, System.Workflow.ComponentModel.Activity addedActivity);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: The specified <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref>.\n    - id: addedActivity\n      type: System.Workflow.ComponentModel.Activity\n      description: The specified <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.\n  overload: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>addedActivity</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref>).\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  id: OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  langs:\n  - csharp\n  name: OnActivityChangeRemove(ActivityExecutionContext,Activity)\n  nameWithType: CompositeActivity.OnActivityChangeRemove(ActivityExecutionContext,Activity)\n  fullName: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(ActivityExecutionContext,Activity)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Called when an activity is removed.\n  remarks: Current implementation provides no functionality.\n  syntax:\n    content: protected virtual void OnActivityChangeRemove (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, System.Workflow.ComponentModel.Activity removedActivity);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: The specified <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref>.\n    - id: removedActivity\n      type: System.Workflow.ComponentModel.Activity\n      description: The specified <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.\n  overload: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)\n  id: OnActivityExecutionContextLoad(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  langs:\n  - csharp\n  name: OnActivityExecutionContextLoad(IServiceProvider)\n  nameWithType: CompositeActivity.OnActivityExecutionContextLoad(IServiceProvider)\n  fullName: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(IServiceProvider)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Called by the workflow runtime engine every time the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> for this activity is loaded.\n  syntax:\n    content: protected override void OnActivityExecutionContextLoad (IServiceProvider provider);\n    parameters:\n    - id: provider\n      type: System.IServiceProvider\n      description: An <xref:System.Object> that implements <xref:System.IServiceProvider> and provides services to this instance.\n  overload: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)\n  id: OnActivityExecutionContextUnload(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  langs:\n  - csharp\n  name: OnActivityExecutionContextUnload(IServiceProvider)\n  nameWithType: CompositeActivity.OnActivityExecutionContextUnload(IServiceProvider)\n  fullName: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(IServiceProvider)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Called by the workflow runtime engine every time the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> for this activity is unloaded.\n  syntax:\n    content: protected override void OnActivityExecutionContextUnload (IServiceProvider provider);\n    parameters:\n    - id: provider\n      type: System.IServiceProvider\n      description: An <xref:System.Object> that implements <xref:System.IServiceProvider> and provides services to this instance.\n  overload: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  id: OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  langs:\n  - csharp\n  name: OnListChanged(ActivityCollectionChangeEventArgs)\n  nameWithType: CompositeActivity.OnListChanged(ActivityCollectionChangeEventArgs)\n  fullName: System.Workflow.ComponentModel.CompositeActivity.OnListChanged(ActivityCollectionChangeEventArgs)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Performs additional processing when the <xref:System.Workflow.ComponentModel.CompositeActivity.Activities*> property changes.\n  syntax:\n    content: protected virtual void OnListChanged (System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs e);\n    parameters:\n    - id: e\n      type: System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs\n      description: The <xref href=\"System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs\"></xref> broadcast by the event.\n  overload: System.Workflow.ComponentModel.CompositeActivity.OnListChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  id: OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  langs:\n  - csharp\n  name: OnListChanging(ActivityCollectionChangeEventArgs)\n  nameWithType: CompositeActivity.OnListChanging(ActivityCollectionChangeEventArgs)\n  fullName: System.Workflow.ComponentModel.CompositeActivity.OnListChanging(ActivityCollectionChangeEventArgs)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Event that occurs before a change being made to the underlying <xref:System.Workflow.ComponentModel.CompositeActivity.Activities*>.\n  syntax:\n    content: protected virtual void OnListChanging (System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs e);\n    parameters:\n    - id: e\n      type: System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs\n      description: <xref:System.EventArgs> relating to the event.\n  overload: System.Workflow.ComponentModel.CompositeActivity.OnListChanging*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  id: OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  langs:\n  - csharp\n  name: OnWorkflowChangesCompleted(ActivityExecutionContext)\n  nameWithType: CompositeActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)\n  fullName: System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Called after changes have been made to the collection <xref:System.Workflow.ComponentModel.CompositeActivity.Activities*> of this instance.\n  remarks: When overridden in a derived class, provides processing for this event.\n  syntax:\n    content: protected virtual void OnWorkflowChangesCompleted (System.Workflow.ComponentModel.ActivityExecutionContext rootContext);\n    parameters:\n    - id: rootContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> associated with this instance.\n  overload: System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)\n  id: Uninitialize(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  langs:\n  - csharp\n  name: Uninitialize(IServiceProvider)\n  nameWithType: CompositeActivity.Uninitialize(IServiceProvider)\n  fullName: System.Workflow.ComponentModel.CompositeActivity.Uninitialize(IServiceProvider)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Called by the workflow runtime engine when an activity transitions into the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"></xref> state from the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"></xref> state.\n  remarks: This method is used for activity cleanup, such as clearing dependency properties and deleting queues.\n  syntax:\n    content: protected override void Uninitialize (IServiceProvider provider);\n    parameters:\n    - id: provider\n      type: System.IServiceProvider\n      description: An <xref:System.Object> that implements <xref:System.IServiceProvider> and provides services to this instance.\n  overload: System.Workflow.ComponentModel.CompositeActivity.Uninitialize*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: System.Workflow.ComponentModel.Activity\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Workflow.ComponentModel.CompositeActivity.#ctor\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: CompositeActivity()\n  nameWithType: CompositeActivity.CompositeActivity()\n  fullName: System.Workflow.ComponentModel.CompositeActivity.CompositeActivity()\n- uid: System.Workflow.ComponentModel.CompositeActivity.#ctor(System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Activity})\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: CompositeActivity(IEnumerable<Activity>)\n  nameWithType: CompositeActivity.CompositeActivity(IEnumerable<Activity>)\n  fullName: System.Workflow.ComponentModel.CompositeActivity.CompositeActivity(IEnumerable<Activity>)\n- uid: System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Activity}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<Activity>\n  nameWithType: IEnumerable<Activity>\n  fullName: System.Collections.Generic.IEnumerable<System.Workflow.ComponentModel.Activity>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Workflow.ComponentModel.Activity>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Workflow.ComponentModel.Activity\n    name: Activity\n    nameWithType: Activity\n    fullName: Activity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Workflow.ComponentModel.CompositeActivity.#ctor(System.String)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: CompositeActivity(String)\n  nameWithType: CompositeActivity.CompositeActivity(String)\n  fullName: System.Workflow.ComponentModel.CompositeActivity.CompositeActivity(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Workflow.ComponentModel.CompositeActivity.Activities\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: Activities\n  nameWithType: CompositeActivity.Activities\n  fullName: System.Workflow.ComponentModel.CompositeActivity.Activities\n- uid: System.Workflow.ComponentModel.ActivityCollection\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityCollection\n  nameWithType: ActivityCollection\n  fullName: System.Workflow.ComponentModel.ActivityCollection\n- uid: System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: ApplyWorkflowChanges(WorkflowChanges)\n  nameWithType: CompositeActivity.ApplyWorkflowChanges(WorkflowChanges)\n  fullName: System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(WorkflowChanges)\n- uid: System.Workflow.ComponentModel.WorkflowChanges\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: WorkflowChanges\n  nameWithType: WorkflowChanges\n  fullName: System.Workflow.ComponentModel.WorkflowChanges\n- uid: System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: CanModifyActivities\n  nameWithType: CompositeActivity.CanModifyActivities\n  fullName: System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: CompositeActivity.Dispose(Boolean)\n  fullName: System.Workflow.ComponentModel.CompositeActivity.Dispose(Boolean)\n- uid: System.Workflow.ComponentModel.CompositeActivity.EnabledActivities\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: EnabledActivities\n  nameWithType: CompositeActivity.EnabledActivities\n  fullName: System.Workflow.ComponentModel.CompositeActivity.EnabledActivities\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<Activity>\n  nameWithType: ReadOnlyCollection<Activity>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Workflow.ComponentModel.Activity>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.Workflow.ComponentModel.Activity>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Workflow.ComponentModel.Activity\n    name: Activity\n    nameWithType: Activity\n    fullName: Activity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: GetDynamicActivities(Activity)\n  nameWithType: CompositeActivity.GetDynamicActivities(Activity)\n  fullName: System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(Activity)\n- uid: System.Workflow.ComponentModel.Activity[]\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Workflow.ComponentModel.Activity[]\n  spec.csharp:\n  - uid: System.Workflow.ComponentModel.Activity\n    name: Activity\n    nameWithType: Activity\n    fullName: Activity[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: HandleFault(ActivityExecutionContext,Exception)\n  nameWithType: CompositeActivity.HandleFault(ActivityExecutionContext,Exception)\n  fullName: System.Workflow.ComponentModel.CompositeActivity.HandleFault(ActivityExecutionContext,Exception)\n- uid: System.Workflow.ComponentModel.ActivityExecutionStatus\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionStatus\n  nameWithType: ActivityExecutionStatus\n  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus\n- uid: System.Workflow.ComponentModel.ActivityExecutionContext\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionContext\n  nameWithType: ActivityExecutionContext\n  fullName: System.Workflow.ComponentModel.ActivityExecutionContext\n- uid: System.Exception\n  parent: System\n  isExternal: true\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: Initialize(IServiceProvider)\n  nameWithType: CompositeActivity.Initialize(IServiceProvider)\n  fullName: System.Workflow.ComponentModel.CompositeActivity.Initialize(IServiceProvider)\n- uid: System.IServiceProvider\n  parent: System\n  isExternal: true\n  name: IServiceProvider\n  nameWithType: IServiceProvider\n  fullName: System.IServiceProvider\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnActivityChangeAdd(ActivityExecutionContext,Activity)\n  nameWithType: CompositeActivity.OnActivityChangeAdd(ActivityExecutionContext,Activity)\n  fullName: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(ActivityExecutionContext,Activity)\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnActivityChangeRemove(ActivityExecutionContext,Activity)\n  nameWithType: CompositeActivity.OnActivityChangeRemove(ActivityExecutionContext,Activity)\n  fullName: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(ActivityExecutionContext,Activity)\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnActivityExecutionContextLoad(IServiceProvider)\n  nameWithType: CompositeActivity.OnActivityExecutionContextLoad(IServiceProvider)\n  fullName: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(IServiceProvider)\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnActivityExecutionContextUnload(IServiceProvider)\n  nameWithType: CompositeActivity.OnActivityExecutionContextUnload(IServiceProvider)\n  fullName: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(IServiceProvider)\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnListChanged(ActivityCollectionChangeEventArgs)\n  nameWithType: CompositeActivity.OnListChanged(ActivityCollectionChangeEventArgs)\n  fullName: System.Workflow.ComponentModel.CompositeActivity.OnListChanged(ActivityCollectionChangeEventArgs)\n- uid: System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityCollectionChangeEventArgs\n  nameWithType: ActivityCollectionChangeEventArgs\n  fullName: System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnListChanging(ActivityCollectionChangeEventArgs)\n  nameWithType: CompositeActivity.OnListChanging(ActivityCollectionChangeEventArgs)\n  fullName: System.Workflow.ComponentModel.CompositeActivity.OnListChanging(ActivityCollectionChangeEventArgs)\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnWorkflowChangesCompleted(ActivityExecutionContext)\n  nameWithType: CompositeActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)\n  fullName: System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)\n- uid: System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: Uninitialize(IServiceProvider)\n  nameWithType: CompositeActivity.Uninitialize(IServiceProvider)\n  fullName: System.Workflow.ComponentModel.CompositeActivity.Uninitialize(IServiceProvider)\n- uid: System.Workflow.ComponentModel.CompositeActivity.#ctor*\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: CompositeActivity\n  nameWithType: CompositeActivity.CompositeActivity\n- uid: System.Workflow.ComponentModel.CompositeActivity.Activities*\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: Activities\n  nameWithType: CompositeActivity.Activities\n- uid: System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges*\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: ApplyWorkflowChanges\n  nameWithType: CompositeActivity.ApplyWorkflowChanges\n- uid: System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities*\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: CanModifyActivities\n  nameWithType: CompositeActivity.CanModifyActivities\n- uid: System.Workflow.ComponentModel.CompositeActivity.Dispose*\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: Dispose\n  nameWithType: CompositeActivity.Dispose\n- uid: System.Workflow.ComponentModel.CompositeActivity.EnabledActivities*\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: EnabledActivities\n  nameWithType: CompositeActivity.EnabledActivities\n- uid: System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities*\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: GetDynamicActivities\n  nameWithType: CompositeActivity.GetDynamicActivities\n- uid: System.Workflow.ComponentModel.CompositeActivity.HandleFault*\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: HandleFault\n  nameWithType: CompositeActivity.HandleFault\n- uid: System.Workflow.ComponentModel.CompositeActivity.Initialize*\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: Initialize\n  nameWithType: CompositeActivity.Initialize\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd*\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnActivityChangeAdd\n  nameWithType: CompositeActivity.OnActivityChangeAdd\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove*\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnActivityChangeRemove\n  nameWithType: CompositeActivity.OnActivityChangeRemove\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad*\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnActivityExecutionContextLoad\n  nameWithType: CompositeActivity.OnActivityExecutionContextLoad\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload*\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnActivityExecutionContextUnload\n  nameWithType: CompositeActivity.OnActivityExecutionContextUnload\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnListChanged*\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnListChanged\n  nameWithType: CompositeActivity.OnListChanged\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnListChanging*\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnListChanging\n  nameWithType: CompositeActivity.OnListChanging\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted*\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnWorkflowChangesCompleted\n  nameWithType: CompositeActivity.OnWorkflowChangesCompleted\n- uid: System.Workflow.ComponentModel.CompositeActivity.Uninitialize*\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: Uninitialize\n  nameWithType: CompositeActivity.Uninitialize\n"}