{"nodes":[{"pos":[3326,3357],"content":"Represents a single ink stroke.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a single ink stroke.","pos":[0,31]}]},{"pos":[3369,3976],"content":"A Stroke is the data object that is collected from a pointing device, such as a tablet pen or a mouse. The Stroke can be created and manipulated programmatically, and can be represented visually on an ink-enabled element, such as the <xref:System.Windows.Controls.InkCanvas>. A Stroke contains information about both its position and appearance. The <xref:System.Windows.Ink.Stroke.StylusPoints%2A> property is a collection of <xref:System.Windows.Input.StylusPoint> objects that specifies the position of the Stroke. The <xref:System.Windows.Ink.DrawingAttributes> property specifies a stroke's appearance.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A Stroke is the data object that is collected from a pointing device, such as a tablet pen or a mouse. The Stroke can be created and manipulated programmatically, and can be represented visually on an ink-enabled element, such as the <xref:System.Windows.Controls.InkCanvas>. A Stroke contains information about both its position and appearance. The <xref:System.Windows.Ink.Stroke.StylusPoints%2A> property is a collection of <xref:System.Windows.Input.StylusPoint> objects that specifies the position of the Stroke. The <xref:System.Windows.Ink.DrawingAttributes> property specifies a stroke's appearance.","pos":[0,607],"nodes":[{"content":"A Stroke is the data object that is collected from a pointing device, such as a tablet pen or a mouse.","pos":[0,102]},{"content":"The Stroke can be created and manipulated programmatically, and can be represented visually on an ink-enabled element, such as the &lt;xref:System.Windows.Controls.InkCanvas&gt;.","pos":[103,275],"source":" The Stroke can be created and manipulated programmatically, and can be represented visually on an ink-enabled element, such as the <xref:System.Windows.Controls.InkCanvas>."},{"content":"A Stroke contains information about both its position and appearance.","pos":[276,345]},{"content":"The &lt;xref:System.Windows.Ink.Stroke.StylusPoints%2A&gt; property is a collection of &lt;xref:System.Windows.Input.StylusPoint&gt; objects that specifies the position of the Stroke.","pos":[346,517],"source":" The <xref:System.Windows.Ink.Stroke.StylusPoints%2A> property is a collection of <xref:System.Windows.Input.StylusPoint> objects that specifies the position of the Stroke."},{"content":"The &lt;xref:System.Windows.Ink.DrawingAttributes&gt; property specifies a stroke's appearance.","pos":[518,607],"source":" The <xref:System.Windows.Ink.DrawingAttributes> property specifies a stroke's appearance."}]}]},{"pos":[4665,4752],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Ink.Stroke\"></xref> class."},{"pos":[5486,5619],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.StylusPointCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Input.StylusPointCollection\"></xref> that represents the <xref href=\"System.Windows.Ink.Stroke\"></xref>."},{"pos":[5781,5871],"content":"<ph id=\"ph1\">&lt;code&gt;stylusPoints&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>stylusPoints</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[5966,6002],"content":"<ph id=\"ph1\">&lt;code&gt;stylusPoints&lt;/code&gt;</ph> is empty..","needQuote":true,"needEscape":true,"source":"<code>stylusPoints</code> is empty.."},{"pos":[6608,6695],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Ink.Stroke\"></xref> class."},{"pos":[7486,7619],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.StylusPointCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Input.StylusPointCollection\"></xref> that represents the <xref href=\"System.Windows.Ink.Stroke\"></xref>."},{"pos":[7716,7867],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.DrawingAttributes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that specifies the appearance of the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object that specifies the appearance of the <xref href=\"System.Windows.Ink.Stroke\"></xref>."},{"pos":[8030,8249],"content":"<code>stylusPoints</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>drawingAtrributes</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;stylusPoints&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,90],"source":"<code>stylusPoints</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;drawingAtrributes&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[97,203],"source":"       -or-       <code>drawingAtrributes</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[8345,8380],"content":"<ph id=\"ph1\">&lt;code&gt;stylusPoints&lt;/code&gt;</ph> is empty.","needQuote":true,"needEscape":true,"source":"<code>stylusPoints</code> is empty."},{"pos":[8834,8918],"content":"Adds a custom property to the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Adds a custom property to the <xref href=\"System.Windows.Ink.Stroke\"></xref> object."},{"pos":[8930,9031],"content":"This method is useful if you need to store extra information in the <xref:System.Windows.Ink.Stroke>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is useful if you need to store extra information in the &lt;xref:System.Windows.Ink.Stroke&gt;.","pos":[0,101],"source":"This method is useful if you need to store extra information in the <xref:System.Windows.Ink.Stroke>."}]},{"pos":[9527,9566],"content":"The unique identifier for the property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The unique identifier for the property.","pos":[0,39]}]},{"pos":[9635,10086],"content":"The value of the custom property. `propertyData` must be of type <xref:System.Char>, <xref:System.Byte>,<xref:System.Int16>,,<xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>, <xref:System.Single>, <xref:System.Double>, <xref:System.DateTime>, <xref:System.Boolean>, <xref:System.String>, <xref:System.Decimal> or an array of these data types, except <xref:System.String>, which is not allowed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the custom property.","pos":[0,33]},{"content":"<ph id=\"ph1\">`propertyData`</ph> must be of type &lt;xref:System.Char&gt;, &lt;xref:System.Byte&gt;,&lt;xref:System.Int16&gt;,,&lt;xref:System.UInt16&gt;, &lt;xref:System.Int32&gt;, &lt;xref:System.UInt32&gt;, &lt;xref:System.Int64&gt;, &lt;xref:System.UInt64&gt;, &lt;xref:System.Single&gt;, &lt;xref:System.Double&gt;, &lt;xref:System.DateTime&gt;, &lt;xref:System.Boolean&gt;, &lt;xref:System.String&gt;, &lt;xref:System.Decimal&gt; or an array of these data types, except &lt;xref:System.String&gt;, which is not allowed.","pos":[34,451],"source":"`propertyData` must be of type <xref:System.Char>, <xref:System.Byte>,<xref:System.Int16>,,<xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>, <xref:System.Single>, <xref:System.Double>, <xref:System.DateTime>, <xref:System.Boolean>, <xref:System.String>, <xref:System.Decimal> or an array of these data types, except <xref:System.String>, which is not allowed."}]},{"pos":[10250,10421],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">propertyData</ph><ept id=\"p1\">&lt;/code&gt;</ept> argument is not one of the allowed data types listed in the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Parameters\" name=\"Parameters\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> section.","needQuote":true,"needEscape":true,"source":"The <code>propertyData</code> argument is not one of the allowed data types listed in the <xref uid=\"langword_csharp_Parameters\" name=\"Parameters\" href=\"\"></xref> section."},{"pos":[10738,10828],"content":"Returns a deep copy of the existing <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Returns a deep copy of the existing <xref href=\"System.Windows.Ink.Stroke\"></xref> object."},{"pos":[10840,10968],"content":"The properties of an object that is a deep copy of another object have the same values as the properties of the original object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The properties of an object that is a deep copy of another object have the same values as the properties of the original object.","pos":[0,128]}]},{"pos":[11446,11508],"content":"The new <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The new <xref href=\"System.Windows.Ink.Stroke\"></xref> object."},{"pos":[12000,12136],"content":"Returns a value that indicates whether the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object contains the specified custom property.","needQuote":true,"needEscape":true,"source":"Returns a value that indicates whether the <xref href=\"System.Windows.Ink.Stroke\"></xref> object contains the specified custom property."},{"pos":[12645,12684],"content":"The unique identifier for the property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The unique identifier for the property.","pos":[0,39]}]},{"pos":[12743,12925],"content":"Returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the custom property exists; otherwise, returns <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the custom property exists; otherwise, returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[13430,13578],"content":"Renders the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object based upon the specified <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.DrawingContext\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Renders the <xref href=\"System.Windows.Ink.Stroke\"></xref> object based upon the specified <xref href=\"System.Windows.Media.DrawingContext\"></xref>."},{"pos":[14134,14241],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.DrawingContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object onto which the stroke will be rendered.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.DrawingContext\"></xref> object onto which the stroke will be rendered."},{"pos":[14858,15068],"content":"Renders the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object based upon the specified <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.DrawingContext\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and <bpt id=\"p3\">&lt;xref href=\"System.Windows.Ink.DrawingAttributes\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Renders the <xref href=\"System.Windows.Ink.Stroke\"></xref> object based upon the specified <xref href=\"System.Windows.Media.DrawingContext\"></xref> and <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref>."},{"pos":[15742,15849],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.DrawingContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object onto which the stroke will be rendered.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.DrawingContext\"></xref> object onto which the stroke will be rendered."},{"pos":[15946,16067],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.DrawingAttributes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object defining the attributes of the stroke that is drawn.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object defining the attributes of the stroke that is drawn."},{"pos":[16704,16915],"content":"Renders the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> on the specified <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.DrawingContext\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> using the specified <bpt id=\"p3\">&lt;xref href=\"System.Windows.Ink.DrawingAttributes\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Renders the <xref href=\"System.Windows.Ink.Stroke\"></xref> on the specified <xref href=\"System.Windows.Media.DrawingContext\"></xref> using the specified <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref>."},{"pos":[16927,17047],"content":"Override the DrawCore method to perform custom drawing when you inherit from the <xref:System.Windows.Ink.Stroke> class.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Override the DrawCore method to perform custom drawing when you inherit from the &lt;xref:System.Windows.Ink.Stroke&gt; class.","pos":[0,120],"source":"Override the DrawCore method to perform custom drawing when you inherit from the <xref:System.Windows.Ink.Stroke> class."}]},{"pos":[17944,18051],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.DrawingContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object onto which the stroke will be rendered.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.DrawingContext\"></xref> object onto which the stroke will be rendered."},{"pos":[18148,18269],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.DrawingAttributes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object defining the attributes of the stroke that is drawn.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object defining the attributes of the stroke that is drawn."},{"pos":[18707,18844],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.DrawingAttributes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> for the <xref href=\"System.Windows.Ink.Stroke\"></xref> object."},{"pos":[18857,19093],"content":"These attributes, such as color and width, are applied to the <xref:System.Windows.Ink.Stroke> object as it is drawn.       Changing DrawingAttributes causes the <xref:System.Windows.Ink.Stroke.DrawingAttributesChanged> event to fire.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"These attributes, such as color and width, are applied to the <xref:System.Windows.Ink.Stroke> object as it is drawn.       Changing DrawingAttributes causes the <xref:System.Windows.Ink.Stroke.DrawingAttributesChanged> event to fire.","pos":[0,234],"nodes":[{"content":"These attributes, such as color and width, are applied to the &lt;xref:System.Windows.Ink.Stroke&gt; object as it is drawn.","pos":[0,117],"source":"These attributes, such as color and width, are applied to the <xref:System.Windows.Ink.Stroke> object as it is drawn."},{"content":"Changing DrawingAttributes causes the &lt;xref:System.Windows.Ink.Stroke.DrawingAttributesChanged&gt; event to fire.","pos":[124,234],"source":"       Changing DrawingAttributes causes the <xref:System.Windows.Ink.Stroke.DrawingAttributesChanged> event to fire."}]}]},{"pos":[19553,19565],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19739,19817],"content":"The set value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The set value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[20222,20371],"content":"Occurs when the &lt;xref:System.Windows.Ink.Stroke.DrawingAttributes*&gt; associated with the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object change.","needQuote":true,"needEscape":true,"source":"Occurs when the <xref:System.Windows.Ink.Stroke.DrawingAttributes*> associated with the <xref href=\"System.Windows.Ink.Stroke\"></xref> object change."},{"pos":[20383,20692],"content":"The <xref:System.Windows.Ink.PropertyDataChangedEventArgs> contains information about the property that changed. You can compare the <xref:System.Windows.Ink.PropertyDataChangedEventArgs.PropertyGuid%2A> property against the members of <xref:System.Windows.Ink.DrawingAttributeIds> to see which value changed.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.Windows.Ink.PropertyDataChangedEventArgs> contains information about the property that changed. You can compare the <xref:System.Windows.Ink.PropertyDataChangedEventArgs.PropertyGuid%2A> property against the members of <xref:System.Windows.Ink.DrawingAttributeIds> to see which value changed.","pos":[0,309],"nodes":[{"content":"The &lt;xref:System.Windows.Ink.PropertyDataChangedEventArgs&gt; contains information about the property that changed.","pos":[0,112],"source":"The <xref:System.Windows.Ink.PropertyDataChangedEventArgs> contains information about the property that changed."},{"content":"You can compare the &lt;xref:System.Windows.Ink.PropertyDataChangedEventArgs.PropertyGuid%2A&gt; property against the members of &lt;xref:System.Windows.Ink.DrawingAttributeIds&gt; to see which value changed.","pos":[113,309],"source":" You can compare the <xref:System.Windows.Ink.PropertyDataChangedEventArgs.PropertyGuid%2A> property against the members of <xref:System.Windows.Ink.DrawingAttributeIds> to see which value changed."}]}]},{"pos":[21178,21190],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21617,21724],"content":"Occurs when the drawing attributes of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object are replaced.","needQuote":true,"needEscape":true,"source":"Occurs when the drawing attributes of a <xref href=\"System.Windows.Ink.Stroke\"></xref> object are replaced."},{"pos":[22237,22249],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22663,22870],"content":"Returns the stylus points the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> uses when &lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve*&gt; is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the stylus points the <xref href=\"System.Windows.Ink.Stroke\"></xref> uses when <xref:System.Windows.Ink.DrawingAttributes.FitToCurve*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."},{"pos":[22882,23410],"content":"The GetBezierStylusPoints method returns a new <xref:System.Windows.Input.StylusPointCollection> that contains the stylus points that the <xref:System.Windows.Ink.Stroke> uses when the <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> property on the <xref:System.Windows.Ink.Stroke.DrawingAttributes%2A> property is set to `true`.  To get the stylus points that are used when <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> is set to `false`, use the <xref:System.Windows.Ink.Stroke.StylusPoints%2A> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetBezierStylusPoints method returns a new &lt;xref:System.Windows.Input.StylusPointCollection&gt; that contains the stylus points that the &lt;xref:System.Windows.Ink.Stroke&gt; uses when the &lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt; property on the &lt;xref:System.Windows.Ink.Stroke.DrawingAttributes%2A&gt; property is set to <ph id=\"ph1\">`true`</ph>.","pos":[0,339],"source":"The GetBezierStylusPoints method returns a new <xref:System.Windows.Input.StylusPointCollection> that contains the stylus points that the <xref:System.Windows.Ink.Stroke> uses when the <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> property on the <xref:System.Windows.Ink.Stroke.DrawingAttributes%2A> property is set to `true`."},{"content":"To get the stylus points that are used when &lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt; is set to <ph id=\"ph1\">`false`</ph>, use the &lt;xref:System.Windows.Ink.Stroke.StylusPoints%2A&gt; property.","pos":[341,528],"source":"  To get the stylus points that are used when <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> is set to `false`, use the <xref:System.Windows.Ink.Stroke.StylusPoints%2A> property."}]},{"pos":[24202,24492],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.StylusPointCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the stylus points along the spine of a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> when &lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve*&gt; is <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Input.StylusPointCollection\"></xref> that contains the stylus points along the spine of a <xref href=\"System.Windows.Ink.Stroke\"></xref> when <xref:System.Windows.Ink.DrawingAttributes.FitToCurve*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>"},{"pos":[24907,24996],"content":"Retrieves the bounding box for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Retrieves the bounding box for the <xref href=\"System.Windows.Ink.Stroke\"></xref> object."},{"pos":[25491,25632],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Rect\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure defining the bounding box for the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Rect\"></xref> structure defining the bounding box for the <xref href=\"System.Windows.Ink.Stroke\"></xref> object."},{"pos":[26233,26349],"content":"Returns segments of the current <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that are within the specified bounds.","needQuote":true,"needEscape":true,"source":"Returns segments of the current <xref href=\"System.Windows.Ink.Stroke\"></xref> that are within the specified bounds."},{"pos":[26362,26742],"content":"The GetClipResult method returns a <xref:System.Windows.Ink.StrokeCollection> that contains strokes that represent the segments of the <xref:System.Windows.Ink.Stroke> that is within `lassoPoints`. GetClipResult does not change the original <xref:System.Windows.Ink.Stroke>.       The GetClipResult method connects the first and last points in `lassoPoints` to create the lasso.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetClipResult method returns a &lt;xref:System.Windows.Ink.StrokeCollection&gt; that contains strokes that represent the segments of the &lt;xref:System.Windows.Ink.Stroke&gt; that is within <ph id=\"ph1\">`lassoPoints`</ph>.","pos":[0,197],"source":"The GetClipResult method returns a <xref:System.Windows.Ink.StrokeCollection> that contains strokes that represent the segments of the <xref:System.Windows.Ink.Stroke> that is within `lassoPoints`."},{"content":"GetClipResult does not change the original &lt;xref:System.Windows.Ink.Stroke&gt;.","pos":[198,274],"source":" GetClipResult does not change the original <xref:System.Windows.Ink.Stroke>."},{"content":"The GetClipResult method connects the first and last points in <ph id=\"ph1\">`lassoPoints`</ph> to create the lasso.","pos":[281,378],"source":"       The GetClipResult method connects the first and last points in `lassoPoints` to create the lasso."}]},{"pos":[27309,27370],"content":"The points that specify the line which defines where to clip.","needQuote":true,"needEscape":true,"nodes":[{"content":"The points that specify the line which defines where to clip.","pos":[0,61]}]},{"pos":[27450,27645],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains copies of the segments of the current <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> that are within the specified bounds.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> that contains copies of the segments of the current <xref href=\"System.Windows.Ink.Stroke\"></xref> that are within the specified bounds."},{"pos":[28126,28245],"content":"Returns segments of the current <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that are within the specified rectangle.","needQuote":true,"needEscape":true,"source":"Returns segments of the current <xref href=\"System.Windows.Ink.Stroke\"></xref> that are within the specified rectangle."},{"pos":[28257,28526],"content":"The GetClipResult method returns a <xref:System.Windows.Ink.StrokeCollection> that contains strokes that represent the segments of the <xref:System.Windows.Ink.Stroke> that is within `bounds`. GetClipResult does not change the original <xref:System.Windows.Ink.Stroke>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetClipResult method returns a &lt;xref:System.Windows.Ink.StrokeCollection&gt; that contains strokes that represent the segments of the &lt;xref:System.Windows.Ink.Stroke&gt; that is within <ph id=\"ph1\">`bounds`</ph>.","pos":[0,192],"source":"The GetClipResult method returns a <xref:System.Windows.Ink.StrokeCollection> that contains strokes that represent the segments of the <xref:System.Windows.Ink.Stroke> that is within `bounds`."},{"content":"GetClipResult does not change the original &lt;xref:System.Windows.Ink.Stroke&gt;.","pos":[193,269],"source":" GetClipResult does not change the original <xref:System.Windows.Ink.Stroke>."}]},{"pos":[29000,29075],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Rect\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the area to clip.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Rect\"></xref> that specifies the area to clip."},{"pos":[29155,29363],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains copies of the segments of the current <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> that are within the bounds of <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph1\">bounds</ph><ept id=\"p3\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> that contains copies of the segments of the current <xref href=\"System.Windows.Ink.Stroke\"></xref> that are within the bounds of <code>bounds</code>."},{"pos":[29973,30090],"content":"Returns segments of the current <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that are outside the specified bounds.","needQuote":true,"needEscape":true,"source":"Returns segments of the current <xref href=\"System.Windows.Ink.Stroke\"></xref> that are outside the specified bounds."},{"pos":[30103,30526],"content":"The GetEraseResult method returns a <xref:System.Windows.Ink.StrokeCollection> that contains strokes that represent the segments of the <xref:System.Windows.Ink.Stroke> that are outside of `lassoPoints`. GetEraseResult does not change the original <xref:System.Windows.Ink.Stroke>.       The <xref:System.Windows.Ink.Stroke.GetClipResult%2A> method connects the first and last points in `lassoPoints` to create the lasso.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetEraseResult method returns a &lt;xref:System.Windows.Ink.StrokeCollection&gt; that contains strokes that represent the segments of the &lt;xref:System.Windows.Ink.Stroke&gt; that are outside of <ph id=\"ph1\">`lassoPoints`</ph>.","pos":[0,203],"source":"The GetEraseResult method returns a <xref:System.Windows.Ink.StrokeCollection> that contains strokes that represent the segments of the <xref:System.Windows.Ink.Stroke> that are outside of `lassoPoints`."},{"content":"GetEraseResult does not change the original &lt;xref:System.Windows.Ink.Stroke&gt;.","pos":[204,281],"source":" GetEraseResult does not change the original <xref:System.Windows.Ink.Stroke>."},{"content":"The &lt;xref:System.Windows.Ink.Stroke.GetClipResult%2A&gt; method connects the first and last points in <ph id=\"ph1\">`lassoPoints`</ph> to create the lasso.","pos":[288,421],"source":"       The <xref:System.Windows.Ink.Stroke.GetClipResult%2A> method connects the first and last points in `lassoPoints` to create the lasso."}]},{"pos":[31090,31182],"content":"An array of type <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the area to erase.","needQuote":true,"needEscape":true,"source":"An array of type <xref href=\"System.Windows.Point\"></xref> that specifies the area to erase."},{"pos":[31262,31448],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the segments of the current <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> that are outside the specified bounds.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> that contains the segments of the current <xref href=\"System.Windows.Ink.Stroke\"></xref> that are outside the specified bounds."},{"pos":[31935,32055],"content":"Returns segments of the current <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that are outside the specified rectangle.","needQuote":true,"needEscape":true,"source":"Returns segments of the current <xref href=\"System.Windows.Ink.Stroke\"></xref> that are outside the specified rectangle."},{"pos":[32067,32343],"content":"The GetEraseResult method returns a <xref:System.Windows.Ink.StrokeCollection> that contains strokes that represent the segments of the <xref:System.Windows.Ink.Stroke> that are outside of `bounds`. GetEraseResult does not change the original <xref:System.Windows.Ink.Stroke>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetEraseResult method returns a &lt;xref:System.Windows.Ink.StrokeCollection&gt; that contains strokes that represent the segments of the &lt;xref:System.Windows.Ink.Stroke&gt; that are outside of <ph id=\"ph1\">`bounds`</ph>.","pos":[0,198],"source":"The GetEraseResult method returns a <xref:System.Windows.Ink.StrokeCollection> that contains strokes that represent the segments of the <xref:System.Windows.Ink.Stroke> that are outside of `bounds`."},{"content":"GetEraseResult does not change the original &lt;xref:System.Windows.Ink.Stroke&gt;.","pos":[199,276],"source":" GetEraseResult does not change the original <xref:System.Windows.Ink.Stroke>."}]},{"pos":[32814,32890],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Rect\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the area to erase.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Rect\"></xref> that specifies the area to erase."},{"pos":[32970,33204],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the segments of the current <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> that are outside the bounds of the specified <bpt id=\"p3\">&lt;xref href=\"System.Windows.Rect\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> that contains the segments of the current <xref href=\"System.Windows.Ink.Stroke\"></xref> that are outside the bounds of the specified <xref href=\"System.Windows.Rect\"></xref>."},{"pos":[33913,34113],"content":"Returns the segments of the current <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> after it is dissected by the designated path using the specified <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.StylusShape\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the segments of the current <xref href=\"System.Windows.Ink.Stroke\"></xref> after it is dissected by the designated path using the specified <xref href=\"System.Windows.Ink.StylusShape\"></xref>."},{"pos":[34125,34381],"content":"The GetEraseResult method uses `eraserShape` to hit test the stroke along `eraserPath` and returns a <xref:System.Windows.Ink.StrokeCollection> that represent dissected segments. GetEraseResult does not change the original <xref:System.Windows.Ink.Stroke>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetEraseResult method uses <ph id=\"ph1\">`eraserShape`</ph> to hit test the stroke along <ph id=\"ph2\">`eraserPath`</ph> and returns a &lt;xref:System.Windows.Ink.StrokeCollection&gt; that represent dissected segments.","pos":[0,178],"source":"The GetEraseResult method uses `eraserShape` to hit test the stroke along `eraserPath` and returns a <xref:System.Windows.Ink.StrokeCollection> that represent dissected segments."},{"content":"GetEraseResult does not change the original &lt;xref:System.Windows.Ink.Stroke&gt;.","pos":[179,256],"source":" GetEraseResult does not change the original <xref:System.Windows.Ink.Stroke>."}]},{"pos":[35001,35149],"content":"An array of type <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the path that dissects the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An array of type <xref href=\"System.Windows.Point\"></xref> that specifies the path that dissects the <xref href=\"System.Windows.Ink.Stroke\"></xref>."},{"pos":[35234,35327],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StylusShape\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the shape of the eraser.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Ink.StylusShape\"></xref> that specifies the shape of the eraser."},{"pos":[35407,35609],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains copies of the segments of the current <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> after it is dissected by the specified path.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> that contains copies of the segments of the current <xref href=\"System.Windows.Ink.Stroke\"></xref> after it is dissected by the specified path."},{"pos":[36027,36149],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Geometry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the current <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Windows.Media.Geometry\"></xref> of the current <xref href=\"System.Windows.Ink.Stroke\"></xref>."},{"pos":[36161,36434],"content":"Use the GetGeometry method to get a <xref:System.Windows.Media.PathGeometry> to customize the shape of the <xref:System.Windows.Ink.Stroke>. Consider caching the <xref:System.Windows.Media.Geometry> to avoid calling GetGeometry multiple times, which may impact performance.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the GetGeometry method to get a <xref:System.Windows.Media.PathGeometry> to customize the shape of the <xref:System.Windows.Ink.Stroke>. Consider caching the <xref:System.Windows.Media.Geometry> to avoid calling GetGeometry multiple times, which may impact performance.","pos":[0,273],"nodes":[{"content":"Use the GetGeometry method to get a &lt;xref:System.Windows.Media.PathGeometry&gt; to customize the shape of the &lt;xref:System.Windows.Ink.Stroke&gt;.","pos":[0,140],"source":"Use the GetGeometry method to get a <xref:System.Windows.Media.PathGeometry> to customize the shape of the <xref:System.Windows.Ink.Stroke>."},{"content":"Consider caching the &lt;xref:System.Windows.Media.Geometry&gt; to avoid calling GetGeometry multiple times, which may impact performance.","pos":[141,273],"source":" Consider caching the <xref:System.Windows.Media.Geometry> to avoid calling GetGeometry multiple times, which may impact performance."}]}]},{"pos":[36603,36723],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Geometry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Media.Geometry\"></xref> that represents the <xref href=\"System.Windows.Ink.Stroke\"></xref>."},{"pos":[37265,37465],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Geometry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the current <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> using the specified <bpt id=\"p3\">&lt;xref href=\"System.Windows.Ink.DrawingAttributes\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Windows.Media.Geometry\"></xref> of the current <xref href=\"System.Windows.Ink.Stroke\"></xref> using the specified <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref>."},{"pos":[37477,38025],"content":"The GetGeometry method uses the <xref:System.Windows.Ink.DrawingAttributes.Width%2A>, <xref:System.Windows.Ink.DrawingAttributes.Height%2A>, <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A>, <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A> and <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A> properties of `drawingAttributes` to determine the <xref:System.Windows.Media.Geometry>. Consider caching the <xref:System.Windows.Media.Geometry> to avoid calling GetGeometry multiple times, which may impact performance.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetGeometry method uses the &lt;xref:System.Windows.Ink.DrawingAttributes.Width%2A&gt;, &lt;xref:System.Windows.Ink.DrawingAttributes.Height%2A&gt;, &lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt;, &lt;xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A&gt; and &lt;xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A&gt; properties of <ph id=\"ph1\">`drawingAttributes`</ph> to determine the &lt;xref:System.Windows.Media.Geometry&gt;.","pos":[0,415],"source":"The GetGeometry method uses the <xref:System.Windows.Ink.DrawingAttributes.Width%2A>, <xref:System.Windows.Ink.DrawingAttributes.Height%2A>, <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A>, <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A> and <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A> properties of `drawingAttributes` to determine the <xref:System.Windows.Media.Geometry>."},{"content":"Consider caching the &lt;xref:System.Windows.Media.Geometry&gt; to avoid calling GetGeometry multiple times, which may impact performance.","pos":[416,548],"source":" Consider caching the <xref:System.Windows.Media.Geometry> to avoid calling GetGeometry multiple times, which may impact performance."}]},{"pos":[38891,39078],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.DrawingAttributes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that determines the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Geometry\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> of the <bpt id=\"p3\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> that determines the <xref href=\"System.Windows.Media.Geometry\"></xref> of the <xref href=\"System.Windows.Ink.Stroke\"></xref>."},{"pos":[39152,39272],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Geometry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Media.Geometry\"></xref> that represents the <xref href=\"System.Windows.Ink.Stroke\"></xref>."},{"pos":[39745,39796],"content":"Retrieves the property data for the specified GUID.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the property data for the specified GUID.","pos":[0,51]}]},{"pos":[40292,40331],"content":"The unique identifier for the property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The unique identifier for the property.","pos":[0,39]}]},{"pos":[40389,40486],"content":"An <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_object\" name=\"object\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing the property data.","needQuote":true,"needEscape":true,"source":"An <xref uid=\"langword_csharp_object\" name=\"object\" href=\"\"></xref> containing the property data."},{"pos":[40650,40773],"content":"<ph id=\"ph1\">&lt;code&gt;propertyDataId&lt;/code&gt;</ph> is not associated with a custom property of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>propertyDataId</code> is not associated with a custom property of the <xref href=\"System.Windows.Ink.Stroke\"></xref>."},{"pos":[41155,41274],"content":"Retrieves the GUIDs of any custom properties associated with the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Retrieves the GUIDs of any custom properties associated with the <xref href=\"System.Windows.Ink.Stroke\"></xref> object."},{"pos":[41723,41762],"content":"An array of <xref:System.Guid> objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of &lt;xref:System.Guid&gt; objects.","pos":[0,39],"source":"An array of <xref:System.Guid> objects."}]},{"pos":[42223,42348],"content":"Returns a value that indicates whether current <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> intersects the specified point.","needQuote":true,"needEscape":true,"source":"Returns a value that indicates whether current <xref href=\"System.Windows.Ink.Stroke\"></xref> intersects the specified point."},{"pos":[42360,42527],"content":"This method behaves the same way as the overloaded &lt;xref:System.Windows.Ink.Stroke.HitTest%28System.Windows.Point%2CSystem.Double%29&gt; method does when <ph id=\"ph1\">`diameter`</ph> is 1.","needQuote":true,"needEscape":true,"extradata":"MT","source":"This method behaves the same way as the overloaded <xref:System.Windows.Ink.Stroke.HitTest%28System.Windows.Point%2CSystem.Double%29> method does when `diameter` is 1."},{"pos":[42996,43054],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to hit test.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Point\"></xref> to hit test."},{"pos":[43113,43301],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">point</ph><ept id=\"p2\">&lt;/code&gt;</ept> intersects the current stroke; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>point</code> intersects the current stroke; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[43914,44043],"content":"Returns a value that indicates whether the current <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is within the specified bounds.","needQuote":true,"needEscape":true,"source":"Returns a value that indicates whether the current <xref href=\"System.Windows.Ink.Stroke\"></xref> is within the specified bounds."},{"pos":[44055,44146],"content":"The HitTest method connects the first and last points in <ph id=\"ph1\">`lassoPoints`</ph> to create the lasso.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The HitTest method connects the first and last points in `lassoPoints` to create the lasso."},{"pos":[44735,44845],"content":"An array of type <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the bounds of the area to hit test.","needQuote":true,"needEscape":true,"source":"An array of type <xref href=\"System.Windows.Point\"></xref> that represents the bounds of the area to hit test."},{"pos":[44922,45112],"content":"The percentage of the length of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, that must be in <ph id=\"ph1\">`lassoPoints`</ph> for the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to be considered hit.","needQuote":true,"needEscape":true,"source":"The percentage of the length of the <xref href=\"System.Windows.Ink.Stroke\"></xref>, that must be in `lassoPoints` for the <xref href=\"System.Windows.Ink.Stroke\"></xref> to be considered hit."},{"pos":[45171,45359],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current stroke is within the specified bounds; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current stroke is within the specified bounds; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[46026,46195],"content":"Returns whether the specified path intersects the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> using the specified <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.StylusShape\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns whether the specified path intersects the <xref href=\"System.Windows.Ink.Stroke\"></xref> using the specified <xref href=\"System.Windows.Ink.StylusShape\"></xref>."},{"pos":[46207,46287],"content":"The HitTest method uses <ph id=\"ph1\">`stylusShape`</ph> to hit test the stroke along <ph id=\"ph2\">`eraserPath`</ph>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The HitTest method uses `stylusShape` to hit test the stroke along `eraserPath`."},{"pos":[46859,46910],"content":"The path that <ph id=\"ph1\">`stylusShape`</ph> follows for hit testing","needQuote":true,"needEscape":true,"source":"The path that `stylusShape` follows for hit testing"},{"pos":[46995,47038],"content":"The shape of <ph id=\"ph1\">`path`</ph> with which to hit test.","needQuote":true,"needEscape":true,"source":"The shape of `path` with which to hit test."},{"pos":[47097,47291],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">stylusShape</ph><ept id=\"p2\">&lt;/code&gt;</ept> intersects the current stroke; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>stylusShape</code> intersects the current stroke; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[47790,47914],"content":"Returns a value that indicates whether current <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> intersects the specified area.","needQuote":true,"needEscape":true,"source":"Returns a value that indicates whether current <xref href=\"System.Windows.Ink.Stroke\"></xref> intersects the specified area."},{"pos":[48414,48508],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that defines the center of the area to hit test.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Point\"></xref> that defines the center of the area to hit test."},{"pos":[48573,48610],"content":"The diameter of the area to hit test.","needQuote":true,"needEscape":true,"nodes":[{"content":"The diameter of the area to hit test.","pos":[0,37]}]},{"pos":[48669,48857],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified area intersects the current stroke; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified area intersects the current stroke; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[49346,49484],"content":"Returns a value that indicates whether the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is within the bounds of the specified rectangle.","needQuote":true,"needEscape":true,"source":"Returns a value that indicates whether the <xref href=\"System.Windows.Ink.Stroke\"></xref> is within the bounds of the specified rectangle."},{"pos":[50002,50096],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Rect\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the bounds of the area to hit test.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Rect\"></xref> that represents the bounds of the area to hit test."},{"pos":[50174,50376],"content":"The percentage of the length of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, that must be in <ph id=\"ph1\">`percentageWithinBounds`</ph> for the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to be considered hit..","needQuote":true,"needEscape":true,"source":"The percentage of the length of the <xref href=\"System.Windows.Ink.Stroke\"></xref>, that must be in `percentageWithinBounds` for the <xref href=\"System.Windows.Ink.Stroke\"></xref> to be considered hit.."},{"pos":[50435,50637],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current stroke is within the bounds of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">bounds</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current stroke is within the bounds of <code>bounds</code>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[51041,51130],"content":"Occurs when the appearance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> changes.","needQuote":true,"needEscape":true,"source":"Occurs when the appearance of the <xref href=\"System.Windows.Ink.Stroke\"></xref> changes."},{"pos":[51142,51513],"content":"The <xref:System.Windows.Controls.InkPresenter> handles the Invalidated event and calls the <xref:System.Windows.Ink.Stroke.DrawCore%2A> method. If you inherit from the <xref:System.Windows.Ink.Stroke> class and your stroke's appearance is based on a custom state, you must call the <xref:System.Windows.Ink.Stroke.OnInvalidated%2A> method to raise the Invalidated event.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.Windows.Controls.InkPresenter> handles the Invalidated event and calls the <xref:System.Windows.Ink.Stroke.DrawCore%2A> method. If you inherit from the <xref:System.Windows.Ink.Stroke> class and your stroke's appearance is based on a custom state, you must call the <xref:System.Windows.Ink.Stroke.OnInvalidated%2A> method to raise the Invalidated event.","pos":[0,371],"nodes":[{"content":"The &lt;xref:System.Windows.Controls.InkPresenter&gt; handles the Invalidated event and calls the &lt;xref:System.Windows.Ink.Stroke.DrawCore%2A&gt; method.","pos":[0,144],"source":"The <xref:System.Windows.Controls.InkPresenter> handles the Invalidated event and calls the <xref:System.Windows.Ink.Stroke.DrawCore%2A> method."},{"content":"If you inherit from the &lt;xref:System.Windows.Ink.Stroke&gt; class and your stroke's appearance is based on a custom state, you must call the &lt;xref:System.Windows.Ink.Stroke.OnInvalidated%2A&gt; method to raise the Invalidated event.","pos":[145,371],"source":" If you inherit from the <xref:System.Windows.Ink.Stroke> class and your stroke's appearance is based on a custom state, you must call the <xref:System.Windows.Ink.Stroke.OnInvalidated%2A> method to raise the Invalidated event."}]}]},{"pos":[51639,51651],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[52272,52411],"content":"Allows derived classes to modify the default behavior of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke.DrawingAttributesChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Allows derived classes to modify the default behavior of the <xref href=\"System.Windows.Ink.Stroke.DrawingAttributesChanged\"></xref> event."},{"pos":[52423,52579],"content":"When overriding this method in a derived class, call the OnDrawingAttributesChanged method of the base class so that registered delegates receive the event.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When overriding this method in a derived class, call the OnDrawingAttributesChanged method of the base class so that registered delegates receive the event.","pos":[0,156]}]},{"pos":[52813,52922],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.PropertyDataChangedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Ink.PropertyDataChangedEventArgs\"></xref> object that contains the event data."},{"pos":[53644,53784],"content":"Allows derived classes to modify the default behavior of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke.DrawingAttributesReplaced\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Allows derived classes to modify the default behavior of the <xref href=\"System.Windows.Ink.Stroke.DrawingAttributesReplaced\"></xref> event."},{"pos":[53796,53953],"content":"When overriding this method in a derived class, call the OnDrawingAttributesReplaced method of the base class so that registered delegates receive the event.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When overriding this method in a derived class, call the OnDrawingAttributesReplaced method of the base class so that registered delegates receive the event.","pos":[0,157]}]},{"pos":[54200,54315],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.DrawingAttributesReplacedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Ink.DrawingAttributesReplacedEventArgs\"></xref> object that contains the event data."},{"pos":[54819,54895],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke.Invalidated\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Ink.Stroke.Invalidated\"></xref> event."},{"pos":[54907,55308],"content":"If you inherit from the <xref:System.Windows.Ink.Stroke> class and your stroke's appearance is based on a custom state, you must call the OnInvalidated method to raise the <xref:System.Windows.Ink.Stroke.Invalidated> event. The <xref:System.Windows.Controls.InkPresenter> handles the <xref:System.Windows.Ink.Stroke.Invalidated> event and calls the <xref:System.Windows.Ink.Stroke.DrawCore%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If you inherit from the <xref:System.Windows.Ink.Stroke> class and your stroke's appearance is based on a custom state, you must call the OnInvalidated method to raise the <xref:System.Windows.Ink.Stroke.Invalidated> event. The <xref:System.Windows.Controls.InkPresenter> handles the <xref:System.Windows.Ink.Stroke.Invalidated> event and calls the <xref:System.Windows.Ink.Stroke.DrawCore%2A> method.","pos":[0,401],"nodes":[{"content":"If you inherit from the &lt;xref:System.Windows.Ink.Stroke&gt; class and your stroke's appearance is based on a custom state, you must call the OnInvalidated method to raise the &lt;xref:System.Windows.Ink.Stroke.Invalidated&gt; event.","pos":[0,223],"source":"If you inherit from the <xref:System.Windows.Ink.Stroke> class and your stroke's appearance is based on a custom state, you must call the OnInvalidated method to raise the <xref:System.Windows.Ink.Stroke.Invalidated> event."},{"content":"The &lt;xref:System.Windows.Controls.InkPresenter&gt; handles the &lt;xref:System.Windows.Ink.Stroke.Invalidated&gt; event and calls the &lt;xref:System.Windows.Ink.Stroke.DrawCore%2A&gt; method.","pos":[224,401],"source":" The <xref:System.Windows.Controls.InkPresenter> handles the <xref:System.Windows.Ink.Stroke.Invalidated> event and calls the <xref:System.Windows.Ink.Stroke.DrawCore%2A> method."}]}]},{"pos":[56234,56290],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[56905,56985],"content":"Occurs when any <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> property changes.","needQuote":true,"needEscape":true,"source":"Occurs when any <xref href=\"System.Windows.Ink.Stroke\"></xref> property changes."},{"pos":[57208,57295],"content":"The event data that describes the property that changed, as well as old and new values.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event data that describes the property that changed, as well as old and new values.","pos":[0,87]}]},{"pos":[57948,58082],"content":"Allows derived classes to modify the default behavior of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke.PropertyDataChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Allows derived classes to modify the default behavior of the <xref href=\"System.Windows.Ink.Stroke.PropertyDataChanged\"></xref> event."},{"pos":[58094,58245],"content":"When overriding this method in a derived class, call the OnPropertyDataChanged method of the base class so that registered delegates receive the event.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When overriding this method in a derived class, call the OnPropertyDataChanged method of the base class so that registered delegates receive the event.","pos":[0,151]}]},{"pos":[58474,58583],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.PropertyDataChangedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Ink.PropertyDataChangedEventArgs\"></xref> object that contains the event data."},{"pos":[59121,59205],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke.StylusPointsChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Ink.Stroke.StylusPointsChanged\"></xref> event."},{"pos":[59365,59420],"content":"A <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,55],"source":"A <xref:System.EventArgs> that contains the event data."}]},{"pos":[60087,60172],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke.StylusPointsReplaced\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Ink.Stroke.StylusPointsReplaced\"></xref> event."},{"pos":[60404,60505],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StylusPointsReplacedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Ink.StylusPointsReplacedEventArgs\"></xref> that contains the event data."},{"pos":[60964,61065],"content":"Occurs when the custom properties on a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object changes.","needQuote":true,"needEscape":true,"source":"Occurs when the custom properties on a <xref href=\"System.Windows.Ink.Stroke\"></xref> object changes."},{"pos":[61564,61576],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[62013,62102],"content":"Deletes a custom property from the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Deletes a custom property from the <xref href=\"System.Windows.Ink.Stroke\"></xref> object."},{"pos":[62603,62642],"content":"The unique identifier for the property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The unique identifier for the property.","pos":[0,39]}]},{"pos":[63065,63145],"content":"Returns the stylus points of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the stylus points of the <xref href=\"System.Windows.Ink.Stroke\"></xref>."},{"pos":[63158,63821],"content":"To get the stylus points that are used when the <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> property on the <xref:System.Windows.Ink.Stroke.DrawingAttributes%2A> property is set to `true`, use the <xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A> method.      > [!NOTE] >  The <xref:System.Windows.Input.StylusPointCollection> assigned to the StylusPoints property must have at least one <xref:System.Windows.Input.StylusPoint> in it.  If you try to assign an empty <xref:System.Windows.Input.StylusPointCollection> to StylusPoints, or remove all the <xref:System.Windows.Input.StylusPoint> objects from StylusPoints, an exception occurs.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"To get the stylus points that are used when the &lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt; property on the &lt;xref:System.Windows.Ink.Stroke.DrawingAttributes%2A&gt; property is set to <ph id=\"ph1\">`true`</ph>, use the &lt;xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A&gt; method.","pos":[0,276],"source":"To get the stylus points that are used when the <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> property on the <xref:System.Windows.Ink.Stroke.DrawingAttributes%2A> property is set to `true`, use the <xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A> method."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The &lt;xref:System.Windows.Input.StylusPointCollection&gt; assigned to the StylusPoints property must have at least one &lt;xref:System.Windows.Input.StylusPoint&gt; in it.","pos":[282,456],"source":"      > [!NOTE] >  The <xref:System.Windows.Input.StylusPointCollection> assigned to the StylusPoints property must have at least one <xref:System.Windows.Input.StylusPoint> in it."},{"content":"If you try to assign an empty &lt;xref:System.Windows.Input.StylusPointCollection&gt; to StylusPoints, or remove all the &lt;xref:System.Windows.Input.StylusPoint&gt; objects from StylusPoints, an exception occurs.","pos":[458,660],"source":"  If you try to assign an empty <xref:System.Windows.Input.StylusPointCollection> to StylusPoints, or remove all the <xref:System.Windows.Input.StylusPoint> objects from StylusPoints, an exception occurs."}]},{"pos":[64602,64776],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.StylusPointCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the stylus points that represent the current <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.StylusPointCollection\"></xref> that contains the stylus points that represent the current <xref href=\"System.Windows.Ink.Stroke\"></xref>."},{"pos":[65225,65305],"content":"Occurs when the <xref:System.Windows.Ink.Stroke.StylusPoints*> property changes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the &lt;xref:System.Windows.Ink.Stroke.StylusPoints*&gt; property changes.","pos":[0,80],"source":"Occurs when the <xref:System.Windows.Ink.Stroke.StylusPoints*> property changes."}]},{"pos":[65743,65755],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[66157,66311],"content":"Occurs when the &lt;xref:System.Windows.Ink.Stroke.StylusPoints*&gt; property is assigned a new <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.StylusPointCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Occurs when the <xref:System.Windows.Ink.Stroke.StylusPoints*> property is assigned a new <xref href=\"System.Windows.Input.StylusPointCollection\"></xref>."},{"pos":[66822,66834],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[67318,67425],"content":"Performs a transformation based upon the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Matrix\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Performs a transformation based upon the specified <xref href=\"System.Windows.Media.Matrix\"></xref> object."},{"pos":[67437,67822],"content":"The <xref:System.Windows.Media.Matrix> object represents a 3x3 matrix used for transformations in two-dimensional space. Each point of the Stroke object is transformed by the supplied Matrix. For example if the original Point.X value is 100, the original Point.Y value is 55, and the transformation Matrix.Scale(0.5, 0.5), the new Point.X value is 50 and the new Point.Y value is 27.5.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.Windows.Media.Matrix> object represents a 3x3 matrix used for transformations in two-dimensional space. Each point of the Stroke object is transformed by the supplied Matrix. For example if the original Point.X value is 100, the original Point.Y value is 55, and the transformation Matrix.Scale(0.5, 0.5), the new Point.X value is 50 and the new Point.Y value is 27.5.","pos":[0,385],"nodes":[{"content":"The &lt;xref:System.Windows.Media.Matrix&gt; object represents a 3x3 matrix used for transformations in two-dimensional space.","pos":[0,120],"source":"The <xref:System.Windows.Media.Matrix> object represents a 3x3 matrix used for transformations in two-dimensional space."},{"content":"Each point of the Stroke object is transformed by the supplied Matrix.","pos":[121,191]},{"content":"For example if the original Point.X value is 100, the original Point.Y value is 55, and the transformation Matrix.Scale(0.5, 0.5), the new Point.X value is 50 and the new Point.Y value is 27.5.","pos":[192,385]}]}]},{"pos":[68351,68439],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Matrix\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object defining the transformation.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Matrix\"></xref> object defining the transformation."},{"pos":[68513,68702],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to apply the transformation to the tip of the stylus; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to apply the transformation to the tip of the stylus; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Ink.Stroke\n  id: Stroke\n  children:\n  - System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection)\n  - System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection,System.Windows.Ink.DrawingAttributes)\n  - System.Windows.Ink.Stroke.AddPropertyData(System.Guid,System.Object)\n  - System.Windows.Ink.Stroke.Clone\n  - System.Windows.Ink.Stroke.ContainsPropertyData(System.Guid)\n  - System.Windows.Ink.Stroke.Draw(System.Windows.Media.DrawingContext)\n  - System.Windows.Ink.Stroke.Draw(System.Windows.Media.DrawingContext,System.Windows.Ink.DrawingAttributes)\n  - System.Windows.Ink.Stroke.DrawCore(System.Windows.Media.DrawingContext,System.Windows.Ink.DrawingAttributes)\n  - System.Windows.Ink.Stroke.DrawingAttributes\n  - System.Windows.Ink.Stroke.DrawingAttributesChanged\n  - System.Windows.Ink.Stroke.DrawingAttributesReplaced\n  - System.Windows.Ink.Stroke.GetBezierStylusPoints\n  - System.Windows.Ink.Stroke.GetBounds\n  - System.Windows.Ink.Stroke.GetClipResult(System.Collections.Generic.IEnumerable{System.Windows.Point})\n  - System.Windows.Ink.Stroke.GetClipResult(System.Windows.Rect)\n  - System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point})\n  - System.Windows.Ink.Stroke.GetEraseResult(System.Windows.Rect)\n  - System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)\n  - System.Windows.Ink.Stroke.GetGeometry\n  - System.Windows.Ink.Stroke.GetGeometry(System.Windows.Ink.DrawingAttributes)\n  - System.Windows.Ink.Stroke.GetPropertyData(System.Guid)\n  - System.Windows.Ink.Stroke.GetPropertyDataIds\n  - System.Windows.Ink.Stroke.HitTest(System.Windows.Point)\n  - System.Windows.Ink.Stroke.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)\n  - System.Windows.Ink.Stroke.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)\n  - System.Windows.Ink.Stroke.HitTest(System.Windows.Point,System.Double)\n  - System.Windows.Ink.Stroke.HitTest(System.Windows.Rect,System.Int32)\n  - System.Windows.Ink.Stroke.Invalidated\n  - System.Windows.Ink.Stroke.OnDrawingAttributesChanged(System.Windows.Ink.PropertyDataChangedEventArgs)\n  - System.Windows.Ink.Stroke.OnDrawingAttributesReplaced(System.Windows.Ink.DrawingAttributesReplacedEventArgs)\n  - System.Windows.Ink.Stroke.OnInvalidated(System.EventArgs)\n  - System.Windows.Ink.Stroke.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)\n  - System.Windows.Ink.Stroke.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)\n  - System.Windows.Ink.Stroke.OnStylusPointsChanged(System.EventArgs)\n  - System.Windows.Ink.Stroke.OnStylusPointsReplaced(System.Windows.Ink.StylusPointsReplacedEventArgs)\n  - System.Windows.Ink.Stroke.PropertyDataChanged\n  - System.Windows.Ink.Stroke.RemovePropertyData(System.Guid)\n  - System.Windows.Ink.Stroke.StylusPoints\n  - System.Windows.Ink.Stroke.StylusPointsChanged\n  - System.Windows.Ink.Stroke.StylusPointsReplaced\n  - System.Windows.Ink.Stroke.Transform(System.Windows.Media.Matrix,System.Boolean)\n  langs:\n  - csharp\n  name: Stroke\n  nameWithType: Stroke\n  fullName: System.Windows.Ink.Stroke\n  type: Class\n  summary: Represents a single ink stroke.\n  remarks: A Stroke is the data object that is collected from a pointing device, such as a tablet pen or a mouse. The Stroke can be created and manipulated programmatically, and can be represented visually on an ink-enabled element, such as the <xref:System.Windows.Controls.InkCanvas>. A Stroke contains information about both its position and appearance. The <xref:System.Windows.Ink.Stroke.StylusPoints%2A> property is a collection of <xref:System.Windows.Input.StylusPoint> objects that specifies the position of the Stroke. The <xref:System.Windows.Ink.DrawingAttributes> property specifies a stroke's appearance.\n  syntax:\n    content: 'public class Stroke : System.ComponentModel.INotifyPropertyChanged'\n  inheritance:\n  - System.Object\n  implements:\n  - System.ComponentModel.INotifyPropertyChanged\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection)\n  id: '#ctor(System.Windows.Input.StylusPointCollection)'\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: Stroke(StylusPointCollection)\n  nameWithType: Stroke.Stroke(StylusPointCollection)\n  fullName: System.Windows.Ink.Stroke.Stroke(StylusPointCollection)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Ink.Stroke\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to create a <xref:System.Windows.Ink.Stroke> from a <xref:System.Windows.Input.StylusPointCollection> and <xref:System.Windows.Ink.DrawingAttributes> object. This example assumes that there is an <xref:System.Windows.Controls.InkPresenter> called `myInkPresenter`.  \\n  \\n [!code-cs[StrokeSnippets#2](~/add/codesnippet/csharp/StrokeSnippets_CS/MyBorder.cs#2)]\\n [!code-vb[StrokeSnippets#2](~/add/codesnippet/visualbasic/StrokeSnippets_VB/MyBorder.vb#2)]\"\n  syntax:\n    content: public Stroke (System.Windows.Input.StylusPointCollection stylusPoints);\n    parameters:\n    - id: stylusPoints\n      type: System.Windows.Input.StylusPointCollection\n      description: A <xref href=\"System.Windows.Input.StylusPointCollection\"></xref> that represents the <xref href=\"System.Windows.Ink.Stroke\"></xref>.\n  overload: System.Windows.Ink.Stroke.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>stylusPoints</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>stylusPoints</code> is empty..\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection,System.Windows.Ink.DrawingAttributes)\n  id: '#ctor(System.Windows.Input.StylusPointCollection,System.Windows.Ink.DrawingAttributes)'\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: Stroke(StylusPointCollection,DrawingAttributes)\n  nameWithType: Stroke.Stroke(StylusPointCollection,DrawingAttributes)\n  fullName: System.Windows.Ink.Stroke.Stroke(StylusPointCollection,DrawingAttributes)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Ink.Stroke\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to create a <xref:System.Windows.Ink.Stroke> from a <xref:System.Windows.Input.StylusPointCollection> and <xref:System.Windows.Ink.DrawingAttributes> object.  This example assumes that there is an <xref:System.Windows.Controls.InkPresenter> called `myInkPresenter`.  \\n  \\n [!code-cs[StrokeSnippets#2](~/add/codesnippet/csharp/StrokeSnippets_CS/MyBorder.cs#2)]\\n [!code-vb[StrokeSnippets#2](~/add/codesnippet/visualbasic/StrokeSnippets_VB/MyBorder.vb#2)]\"\n  syntax:\n    content: public Stroke (System.Windows.Input.StylusPointCollection stylusPoints, System.Windows.Ink.DrawingAttributes drawingAttributes);\n    parameters:\n    - id: stylusPoints\n      type: System.Windows.Input.StylusPointCollection\n      description: A <xref href=\"System.Windows.Input.StylusPointCollection\"></xref> that represents the <xref href=\"System.Windows.Ink.Stroke\"></xref>.\n    - id: drawingAttributes\n      type: System.Windows.Ink.DrawingAttributes\n      description: A <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object that specifies the appearance of the <xref href=\"System.Windows.Ink.Stroke\"></xref>.\n  overload: System.Windows.Ink.Stroke.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>stylusPoints</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>drawingAtrributes</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>stylusPoints</code> is empty.\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.AddPropertyData(System.Guid,System.Object)\n  id: AddPropertyData(System.Guid,System.Object)\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: AddPropertyData(Guid,Object)\n  nameWithType: Stroke.AddPropertyData(Guid,Object)\n  fullName: System.Windows.Ink.Stroke.AddPropertyData(Guid,Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Adds a custom property to the <xref href=\"System.Windows.Ink.Stroke\"></xref> object.\n  remarks: This method is useful if you need to store extra information in the <xref:System.Windows.Ink.Stroke>.\n  example:\n  - \"The following example demonstrates how to add a custom property to a <xref:System.Windows.Ink.Stroke> object.  \\n  \\n [!code-cs[StrokeSnippets#3](~/add/codesnippet/csharp/StrokeSnippets_CS/MyBorder.cs#3)]\\n [!code-vb[StrokeSnippets#3](~/add/codesnippet/visualbasic/StrokeSnippets_VB/MyBorder.vb#3)]\"\n  syntax:\n    content: public void AddPropertyData (Guid propertyDataId, object propertyData);\n    parameters:\n    - id: propertyDataId\n      type: System.Guid\n      description: The unique identifier for the property.\n    - id: propertyData\n      type: System.Object\n      description: The value of the custom property. `propertyData` must be of type <xref:System.Char>, <xref:System.Byte>,<xref:System.Int16>,,<xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>, <xref:System.Single>, <xref:System.Double>, <xref:System.DateTime>, <xref:System.Boolean>, <xref:System.String>, <xref:System.Decimal> or an array of these data types, except <xref:System.String>, which is not allowed.\n  overload: System.Windows.Ink.Stroke.AddPropertyData*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>propertyData</code> argument is not one of the allowed data types listed in the <xref uid=\"langword_csharp_Parameters\" name=\"Parameters\" href=\"\"></xref> section.\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.Clone\n  id: Clone\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: Stroke.Clone()\n  fullName: System.Windows.Ink.Stroke.Clone()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Returns a deep copy of the existing <xref href=\"System.Windows.Ink.Stroke\"></xref> object.\n  remarks: The properties of an object that is a deep copy of another object have the same values as the properties of the original object.\n  example:\n  - \"The following example demonstrates how to get a copy of the current <xref:System.Windows.Ink.Stroke> object.  \\n  \\n [!code-cs[StrokeSnippets#5](~/add/codesnippet/csharp/StrokeSnippets_CS/MyBorder.cs#5)]\\n [!code-vb[StrokeSnippets#5](~/add/codesnippet/visualbasic/StrokeSnippets_VB/MyBorder.vb#5)]\"\n  syntax:\n    content: public virtual System.Windows.Ink.Stroke Clone ();\n    parameters: []\n    return:\n      type: System.Windows.Ink.Stroke\n      description: The new <xref href=\"System.Windows.Ink.Stroke\"></xref> object.\n  overload: System.Windows.Ink.Stroke.Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.ContainsPropertyData(System.Guid)\n  id: ContainsPropertyData(System.Guid)\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: ContainsPropertyData(Guid)\n  nameWithType: Stroke.ContainsPropertyData(Guid)\n  fullName: System.Windows.Ink.Stroke.ContainsPropertyData(Guid)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Returns a value that indicates whether the <xref href=\"System.Windows.Ink.Stroke\"></xref> object contains the specified custom property.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to determine whether a <xref:System.Windows.Ink.Stroke> object has a custom property.  \\n  \\n [!code-cs[StrokeSnippets#3](~/add/codesnippet/csharp/StrokeSnippets_CS/MyBorder.cs#3)]\\n [!code-vb[StrokeSnippets#3](~/add/codesnippet/visualbasic/StrokeSnippets_VB/MyBorder.vb#3)]\"\n  syntax:\n    content: public bool ContainsPropertyData (Guid propertyDataId);\n    parameters:\n    - id: propertyDataId\n      type: System.Guid\n      description: The unique identifier for the property.\n    return:\n      type: System.Boolean\n      description: Returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the custom property exists; otherwise, returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Ink.Stroke.ContainsPropertyData*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.Draw(System.Windows.Media.DrawingContext)\n  id: Draw(System.Windows.Media.DrawingContext)\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: Draw(DrawingContext)\n  nameWithType: Stroke.Draw(DrawingContext)\n  fullName: System.Windows.Ink.Stroke.Draw(DrawingContext)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Renders the <xref href=\"System.Windows.Ink.Stroke\"></xref> object based upon the specified <xref href=\"System.Windows.Media.DrawingContext\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to draw a <xref:System.Windows.Ink.Stroke> object by using a <xref:System.Windows.Media.DrawingContext>.  \\n  \\n [!code-cs[DrawTransform#1](~/add/codesnippet/csharp/DrawTransformSample/Program.cs#1)]\\n [!code-vb[DrawTransform#1](~/add/codesnippet/visualbasic/DrawTransformSample_VB/Module1.vb#1)]\"\n  syntax:\n    content: public void Draw (System.Windows.Media.DrawingContext context);\n    parameters:\n    - id: context\n      type: System.Windows.Media.DrawingContext\n      description: The <xref href=\"System.Windows.Media.DrawingContext\"></xref> object onto which the stroke will be rendered.\n  overload: System.Windows.Ink.Stroke.Draw*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.Draw(System.Windows.Media.DrawingContext,System.Windows.Ink.DrawingAttributes)\n  id: Draw(System.Windows.Media.DrawingContext,System.Windows.Ink.DrawingAttributes)\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: Draw(DrawingContext,DrawingAttributes)\n  nameWithType: Stroke.Draw(DrawingContext,DrawingAttributes)\n  fullName: System.Windows.Ink.Stroke.Draw(DrawingContext,DrawingAttributes)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Renders the <xref href=\"System.Windows.Ink.Stroke\"></xref> object based upon the specified <xref href=\"System.Windows.Media.DrawingContext\"></xref> and <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to draw a <xref:System.Windows.Ink.Stroke> object by using a <xref:System.Windows.Media.DrawingContext> and <xref:System.Windows.Ink.DrawingAttributes>.  \\n  \\n [!code-cs[DrawTransform#2](~/add/codesnippet/csharp/DrawTransformSample/Program.cs#2)]\\n [!code-vb[DrawTransform#2](~/add/codesnippet/visualbasic/DrawTransformSample_VB/Module1.vb#2)]\"\n  syntax:\n    content: public void Draw (System.Windows.Media.DrawingContext drawingContext, System.Windows.Ink.DrawingAttributes drawingAttributes);\n    parameters:\n    - id: drawingContext\n      type: System.Windows.Media.DrawingContext\n      description: The <xref href=\"System.Windows.Media.DrawingContext\"></xref> object onto which the stroke will be rendered.\n    - id: drawingAttributes\n      type: System.Windows.Ink.DrawingAttributes\n      description: The <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object defining the attributes of the stroke that is drawn.\n  overload: System.Windows.Ink.Stroke.Draw*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.DrawCore(System.Windows.Media.DrawingContext,System.Windows.Ink.DrawingAttributes)\n  id: DrawCore(System.Windows.Media.DrawingContext,System.Windows.Ink.DrawingAttributes)\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: DrawCore(DrawingContext,DrawingAttributes)\n  nameWithType: Stroke.DrawCore(DrawingContext,DrawingAttributes)\n  fullName: System.Windows.Ink.Stroke.DrawCore(DrawingContext,DrawingAttributes)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Renders the <xref href=\"System.Windows.Ink.Stroke\"></xref> on the specified <xref href=\"System.Windows.Media.DrawingContext\"></xref> using the specified <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref>.\n  remarks: Override the DrawCore method to perform custom drawing when you inherit from the <xref:System.Windows.Ink.Stroke> class.\n  example:\n  - \"The following example demonstrates how to draw a circle at each <xref:System.Windows.Input.StylusPoint> of a <xref:System.Windows.Ink.Stroke>. If the <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> property is set to `true`, the <xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A> is used to get the stylus points. Otherwise, the <xref:System.Windows.Ink.Stroke.StylusPoints%2A> property is used.  \\n  \\n [!code-cs[StrokeSnippets#23](~/add/codesnippet/csharp/StrokeSnippets_CS/MyStroke.cs#23)]\\n [!code-vb[StrokeSnippets#23](~/add/codesnippet/visualbasic/StrokeSnippets_VB/MyStroke.vb#23)]\"\n  syntax:\n    content: protected virtual void DrawCore (System.Windows.Media.DrawingContext drawingContext, System.Windows.Ink.DrawingAttributes drawingAttributes);\n    parameters:\n    - id: drawingContext\n      type: System.Windows.Media.DrawingContext\n      description: The <xref href=\"System.Windows.Media.DrawingContext\"></xref> object onto which the stroke will be rendered.\n    - id: drawingAttributes\n      type: System.Windows.Ink.DrawingAttributes\n      description: The <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object defining the attributes of the stroke that is drawn.\n  overload: System.Windows.Ink.Stroke.DrawCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.DrawingAttributes\n  id: DrawingAttributes\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: DrawingAttributes\n  nameWithType: Stroke.DrawingAttributes\n  fullName: System.Windows.Ink.Stroke.DrawingAttributes\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Gets or sets the <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> for the <xref href=\"System.Windows.Ink.Stroke\"></xref> object.\n  remarks: \"These attributes, such as color and width, are applied to the <xref:System.Windows.Ink.Stroke> object as it is drawn.  \\n  \\n Changing DrawingAttributes causes the <xref:System.Windows.Ink.Stroke.DrawingAttributesChanged> event to fire.\"\n  example:\n  - \"The following example sets the DrawingAttributes to make a stroke green.  \\n  \\n [!code-cs[StrokeSnippets#7](~/add/codesnippet/csharp/StrokeSnippets_CS/MyBorder.cs#7)]\\n [!code-vb[StrokeSnippets#7](~/add/codesnippet/visualbasic/StrokeSnippets_VB/MyBorder.vb#7)]\"\n  syntax:\n    content: public System.Windows.Ink.DrawingAttributes DrawingAttributes { get; set; }\n    return:\n      type: System.Windows.Ink.DrawingAttributes\n      description: To be added.\n  overload: System.Windows.Ink.Stroke.DrawingAttributes*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The set value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.DrawingAttributesChanged\n  id: DrawingAttributesChanged\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: DrawingAttributesChanged\n  nameWithType: Stroke.DrawingAttributesChanged\n  fullName: System.Windows.Ink.Stroke.DrawingAttributesChanged\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Occurs when the <xref:System.Windows.Ink.Stroke.DrawingAttributes*> associated with the <xref href=\"System.Windows.Ink.Stroke\"></xref> object change.\n  remarks: The <xref:System.Windows.Ink.PropertyDataChangedEventArgs> contains information about the property that changed. You can compare the <xref:System.Windows.Ink.PropertyDataChangedEventArgs.PropertyGuid%2A> property against the members of <xref:System.Windows.Ink.DrawingAttributeIds> to see which value changed.\n  example:\n  - \"The following example demonstrates how to add a handler for this event.  \\n  \\n [!code-cs[StrokeSnippets#8](~/add/codesnippet/csharp/StrokeSnippets_CS/MyBorder.cs#8)]\\n [!code-vb[StrokeSnippets#8](~/add/codesnippet/visualbasic/StrokeSnippets_VB/MyBorder.vb#8)]\"\n  syntax:\n    content: public event System.Windows.Ink.PropertyDataChangedEventHandler DrawingAttributesChanged;\n    return:\n      type: System.Windows.Ink.PropertyDataChangedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.DrawingAttributesReplaced\n  id: DrawingAttributesReplaced\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: DrawingAttributesReplaced\n  nameWithType: Stroke.DrawingAttributesReplaced\n  fullName: System.Windows.Ink.Stroke.DrawingAttributesReplaced\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Occurs when the drawing attributes of a <xref href=\"System.Windows.Ink.Stroke\"></xref> object are replaced.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to add a handler for this event.  \\n  \\n [!code-cs[StrokeSnippets#9](~/add/codesnippet/csharp/StrokeSnippets_CS/MyBorder.cs#9)]\\n [!code-vb[StrokeSnippets#9](~/add/codesnippet/visualbasic/StrokeSnippets_VB/MyBorder.vb#9)]\"\n  syntax:\n    content: public event System.Windows.Ink.DrawingAttributesReplacedEventHandler DrawingAttributesReplaced;\n    return:\n      type: System.Windows.Ink.DrawingAttributesReplacedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.GetBezierStylusPoints\n  id: GetBezierStylusPoints\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: GetBezierStylusPoints()\n  nameWithType: Stroke.GetBezierStylusPoints()\n  fullName: System.Windows.Ink.Stroke.GetBezierStylusPoints()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Returns the stylus points the <xref href=\"System.Windows.Ink.Stroke\"></xref> uses when <xref:System.Windows.Ink.DrawingAttributes.FitToCurve*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  remarks: The GetBezierStylusPoints method returns a new <xref:System.Windows.Input.StylusPointCollection> that contains the stylus points that the <xref:System.Windows.Ink.Stroke> uses when the <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> property on the <xref:System.Windows.Ink.Stroke.DrawingAttributes%2A> property is set to `true`.  To get the stylus points that are used when <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> is set to `false`, use the <xref:System.Windows.Ink.Stroke.StylusPoints%2A> property.\n  example:\n  - \"The following example demonstrates how to draw a circle at each <xref:System.Windows.Input.StylusPoint> of a <xref:System.Windows.Ink.Stroke>. If the <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> property is set to `true`, the GetBezierStylusPoints is used to get the stylus points. Otherwise, the <xref:System.Windows.Ink.Stroke.StylusPoints%2A> property is used.  \\n  \\n [!code-cs[StrokeSnippets#23](~/add/codesnippet/csharp/StrokeSnippets_CS/MyStroke.cs#23)]\\n [!code-vb[StrokeSnippets#23](~/add/codesnippet/visualbasic/StrokeSnippets_VB/MyStroke.vb#23)]\"\n  syntax:\n    content: public System.Windows.Input.StylusPointCollection GetBezierStylusPoints ();\n    parameters: []\n    return:\n      type: System.Windows.Input.StylusPointCollection\n      description: A <xref href=\"System.Windows.Input.StylusPointCollection\"></xref> that contains the stylus points along the spine of a <xref href=\"System.Windows.Ink.Stroke\"></xref> when <xref:System.Windows.Ink.DrawingAttributes.FitToCurve*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>\n  overload: System.Windows.Ink.Stroke.GetBezierStylusPoints*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.GetBounds\n  id: GetBounds\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: GetBounds()\n  nameWithType: Stroke.GetBounds()\n  fullName: System.Windows.Ink.Stroke.GetBounds()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Retrieves the bounding box for the <xref href=\"System.Windows.Ink.Stroke\"></xref> object.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to get the boundary rectangle for a <xref:System.Windows.Ink.Stroke> object.  \\n  \\n [!code-cs[StrokeSnippets#11](~/add/codesnippet/csharp/StrokeSnippets_CS/MyBorder.cs#11)]\\n [!code-vb[StrokeSnippets#11](~/add/codesnippet/visualbasic/StrokeSnippets_VB/MyBorder.vb#11)]\"\n  syntax:\n    content: public virtual System.Windows.Rect GetBounds ();\n    parameters: []\n    return:\n      type: System.Windows.Rect\n      description: A <xref href=\"System.Windows.Rect\"></xref> structure defining the bounding box for the <xref href=\"System.Windows.Ink.Stroke\"></xref> object.\n  overload: System.Windows.Ink.Stroke.GetBounds*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.GetClipResult(System.Collections.Generic.IEnumerable{System.Windows.Point})\n  id: GetClipResult(System.Collections.Generic.IEnumerable{System.Windows.Point})\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: GetClipResult(IEnumerable<Point>)\n  nameWithType: Stroke.GetClipResult(IEnumerable<Point>)\n  fullName: System.Windows.Ink.Stroke.GetClipResult(IEnumerable<Point>)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Returns segments of the current <xref href=\"System.Windows.Ink.Stroke\"></xref> that are within the specified bounds.\n  remarks: \"The GetClipResult method returns a <xref:System.Windows.Ink.StrokeCollection> that contains strokes that represent the segments of the <xref:System.Windows.Ink.Stroke> that is within `lassoPoints`. GetClipResult does not change the original <xref:System.Windows.Ink.Stroke>.  \\n  \\n The GetClipResult method connects the first and last points in `lassoPoints` to create the lasso.\"\n  example:\n  - \"The following example removes the ink that is outside of the specified bounds.  \\n  \\n [!code-cs[HitTestSample#6](~/add/codesnippet/csharp/HitTestSample_CS/Program.cs#6)]\\n [!code-vb[HitTestSample#6](~/add/codesnippet/visualbasic/HitTestSample_VB/Module1.vb#6)]\"\n  syntax:\n    content: public System.Windows.Ink.StrokeCollection GetClipResult (System.Collections.Generic.IEnumerable<System.Windows.Point> lassoPoints);\n    parameters:\n    - id: lassoPoints\n      type: System.Collections.Generic.IEnumerable{System.Windows.Point}\n      description: The points that specify the line which defines where to clip.\n    return:\n      type: System.Windows.Ink.StrokeCollection\n      description: A <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> that contains copies of the segments of the current <xref href=\"System.Windows.Ink.Stroke\"></xref> that are within the specified bounds.\n  overload: System.Windows.Ink.Stroke.GetClipResult*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.GetClipResult(System.Windows.Rect)\n  id: GetClipResult(System.Windows.Rect)\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: GetClipResult(Rect)\n  nameWithType: Stroke.GetClipResult(Rect)\n  fullName: System.Windows.Ink.Stroke.GetClipResult(Rect)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Returns segments of the current <xref href=\"System.Windows.Ink.Stroke\"></xref> that are within the specified rectangle.\n  remarks: The GetClipResult method returns a <xref:System.Windows.Ink.StrokeCollection> that contains strokes that represent the segments of the <xref:System.Windows.Ink.Stroke> that is within `bounds`. GetClipResult does not change the original <xref:System.Windows.Ink.Stroke>.\n  example:\n  - \"The following example removes the ink that is outside of the specified bounds.  \\n  \\n [!code-cs[HitTestSample#5](~/add/codesnippet/csharp/HitTestSample_CS/Program.cs#5)]\\n [!code-vb[HitTestSample#5](~/add/codesnippet/visualbasic/HitTestSample_VB/Module1.vb#5)]\"\n  syntax:\n    content: public System.Windows.Ink.StrokeCollection GetClipResult (System.Windows.Rect bounds);\n    parameters:\n    - id: bounds\n      type: System.Windows.Rect\n      description: A <xref href=\"System.Windows.Rect\"></xref> that specifies the area to clip.\n    return:\n      type: System.Windows.Ink.StrokeCollection\n      description: A <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> that contains copies of the segments of the current <xref href=\"System.Windows.Ink.Stroke\"></xref> that are within the bounds of <code>bounds</code>.\n  overload: System.Windows.Ink.Stroke.GetClipResult*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point})\n  id: GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point})\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: GetEraseResult(IEnumerable<Point>)\n  nameWithType: Stroke.GetEraseResult(IEnumerable<Point>)\n  fullName: System.Windows.Ink.Stroke.GetEraseResult(IEnumerable<Point>)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Returns segments of the current <xref href=\"System.Windows.Ink.Stroke\"></xref> that are outside the specified bounds.\n  remarks: \"The GetEraseResult method returns a <xref:System.Windows.Ink.StrokeCollection> that contains strokes that represent the segments of the <xref:System.Windows.Ink.Stroke> that are outside of `lassoPoints`. GetEraseResult does not change the original <xref:System.Windows.Ink.Stroke>.  \\n  \\n The <xref:System.Windows.Ink.Stroke.GetClipResult%2A> method connects the first and last points in `lassoPoints` to create the lasso.\"\n  example:\n  - \"The following example removes the ink that is within the specified bounds.  \\n  \\n [!code-cs[HitTestSample#1](~/add/codesnippet/csharp/HitTestSample_CS/Program.cs#1)]\\n [!code-vb[HitTestSample#1](~/add/codesnippet/visualbasic/HitTestSample_VB/Module1.vb#1)]\"\n  syntax:\n    content: public System.Windows.Ink.StrokeCollection GetEraseResult (System.Collections.Generic.IEnumerable<System.Windows.Point> lassoPoints);\n    parameters:\n    - id: lassoPoints\n      type: System.Collections.Generic.IEnumerable{System.Windows.Point}\n      description: An array of type <xref href=\"System.Windows.Point\"></xref> that specifies the area to erase.\n    return:\n      type: System.Windows.Ink.StrokeCollection\n      description: A <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> that contains the segments of the current <xref href=\"System.Windows.Ink.Stroke\"></xref> that are outside the specified bounds.\n  overload: System.Windows.Ink.Stroke.GetEraseResult*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.GetEraseResult(System.Windows.Rect)\n  id: GetEraseResult(System.Windows.Rect)\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: GetEraseResult(Rect)\n  nameWithType: Stroke.GetEraseResult(Rect)\n  fullName: System.Windows.Ink.Stroke.GetEraseResult(Rect)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Returns segments of the current <xref href=\"System.Windows.Ink.Stroke\"></xref> that are outside the specified rectangle.\n  remarks: The GetEraseResult method returns a <xref:System.Windows.Ink.StrokeCollection> that contains strokes that represent the segments of the <xref:System.Windows.Ink.Stroke> that are outside of `bounds`. GetEraseResult does not change the original <xref:System.Windows.Ink.Stroke>.\n  example:\n  - \"The following example removes the ink that is within the specified bounds.  \\n  \\n [!code-cs[HitTestSample#4](~/add/codesnippet/csharp/HitTestSample_CS/Program.cs#4)]\\n [!code-vb[HitTestSample#4](~/add/codesnippet/visualbasic/HitTestSample_VB/Module1.vb#4)]\"\n  syntax:\n    content: public System.Windows.Ink.StrokeCollection GetEraseResult (System.Windows.Rect bounds);\n    parameters:\n    - id: bounds\n      type: System.Windows.Rect\n      description: A <xref href=\"System.Windows.Rect\"></xref> that specifies the area to erase.\n    return:\n      type: System.Windows.Ink.StrokeCollection\n      description: A <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> that contains the segments of the current <xref href=\"System.Windows.Ink.Stroke\"></xref> that are outside the bounds of the specified <xref href=\"System.Windows.Rect\"></xref>.\n  overload: System.Windows.Ink.Stroke.GetEraseResult*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)\n  id: GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: GetEraseResult(IEnumerable<Point>,StylusShape)\n  nameWithType: Stroke.GetEraseResult(IEnumerable<Point>,StylusShape)\n  fullName: System.Windows.Ink.Stroke.GetEraseResult(IEnumerable<Point>,StylusShape)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Returns the segments of the current <xref href=\"System.Windows.Ink.Stroke\"></xref> after it is dissected by the designated path using the specified <xref href=\"System.Windows.Ink.StylusShape\"></xref>.\n  remarks: The GetEraseResult method uses `eraserShape` to hit test the stroke along `eraserPath` and returns a <xref:System.Windows.Ink.StrokeCollection> that represent dissected segments. GetEraseResult does not change the original <xref:System.Windows.Ink.Stroke>.\n  example:\n  - \"The following example demonstrates how to erase the ink that intersects a specified path.  \\n  \\n [!code-cs[HitTestSample#2](~/add/codesnippet/csharp/HitTestSample_CS/Program.cs#2)]\\n [!code-vb[HitTestSample#2](~/add/codesnippet/visualbasic/HitTestSample_VB/Module1.vb#2)]\"\n  syntax:\n    content: public System.Windows.Ink.StrokeCollection GetEraseResult (System.Collections.Generic.IEnumerable<System.Windows.Point> eraserPath, System.Windows.Ink.StylusShape eraserShape);\n    parameters:\n    - id: eraserPath\n      type: System.Collections.Generic.IEnumerable{System.Windows.Point}\n      description: An array of type <xref href=\"System.Windows.Point\"></xref> that specifies the path that dissects the <xref href=\"System.Windows.Ink.Stroke\"></xref>.\n    - id: eraserShape\n      type: System.Windows.Ink.StylusShape\n      description: A <xref href=\"System.Windows.Ink.StylusShape\"></xref> that specifies the shape of the eraser.\n    return:\n      type: System.Windows.Ink.StrokeCollection\n      description: A <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> that contains copies of the segments of the current <xref href=\"System.Windows.Ink.Stroke\"></xref> after it is dissected by the specified path.\n  overload: System.Windows.Ink.Stroke.GetEraseResult*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.GetGeometry\n  id: GetGeometry\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: GetGeometry()\n  nameWithType: Stroke.GetGeometry()\n  fullName: System.Windows.Ink.Stroke.GetGeometry()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Gets the <xref href=\"System.Windows.Media.Geometry\"></xref> of the current <xref href=\"System.Windows.Ink.Stroke\"></xref>.\n  remarks: Use the GetGeometry method to get a <xref:System.Windows.Media.PathGeometry> to customize the shape of the <xref:System.Windows.Ink.Stroke>. Consider caching the <xref:System.Windows.Media.Geometry> to avoid calling GetGeometry multiple times, which may impact performance.\n  syntax:\n    content: public System.Windows.Media.Geometry GetGeometry ();\n    parameters: []\n    return:\n      type: System.Windows.Media.Geometry\n      description: A <xref href=\"System.Windows.Media.Geometry\"></xref> that represents the <xref href=\"System.Windows.Ink.Stroke\"></xref>.\n  overload: System.Windows.Ink.Stroke.GetGeometry*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.GetGeometry(System.Windows.Ink.DrawingAttributes)\n  id: GetGeometry(System.Windows.Ink.DrawingAttributes)\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: GetGeometry(DrawingAttributes)\n  nameWithType: Stroke.GetGeometry(DrawingAttributes)\n  fullName: System.Windows.Ink.Stroke.GetGeometry(DrawingAttributes)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Gets the <xref href=\"System.Windows.Media.Geometry\"></xref> of the current <xref href=\"System.Windows.Ink.Stroke\"></xref> using the specified <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref>.\n  remarks: The GetGeometry method uses the <xref:System.Windows.Ink.DrawingAttributes.Width%2A>, <xref:System.Windows.Ink.DrawingAttributes.Height%2A>, <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A>, <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A> and <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A> properties of `drawingAttributes` to determine the <xref:System.Windows.Media.Geometry>. Consider caching the <xref:System.Windows.Media.Geometry> to avoid calling GetGeometry multiple times, which may impact performance.\n  example:\n  - \"The following example demonstrates how to draw a circle at each <xref:System.Windows.Input.StylusPoint> of a <xref:System.Windows.Ink.Stroke>. If the <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> property is set to `true`, the <xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A> is used to get the stylus points. Otherwise, the <xref:System.Windows.Ink.Stroke.StylusPoints%2A> property is used.  \\n  \\n [!code-cs[StrokeSnippets#23](~/add/codesnippet/csharp/StrokeSnippets_CS/MyStroke.cs#23)]\\n [!code-vb[StrokeSnippets#23](~/add/codesnippet/visualbasic/StrokeSnippets_VB/MyStroke.vb#23)]\"\n  syntax:\n    content: public System.Windows.Media.Geometry GetGeometry (System.Windows.Ink.DrawingAttributes drawingAttributes);\n    parameters:\n    - id: drawingAttributes\n      type: System.Windows.Ink.DrawingAttributes\n      description: The <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> that determines the <xref href=\"System.Windows.Media.Geometry\"></xref> of the <xref href=\"System.Windows.Ink.Stroke\"></xref>.\n    return:\n      type: System.Windows.Media.Geometry\n      description: A <xref href=\"System.Windows.Media.Geometry\"></xref> that represents the <xref href=\"System.Windows.Ink.Stroke\"></xref>.\n  overload: System.Windows.Ink.Stroke.GetGeometry*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.GetPropertyData(System.Guid)\n  id: GetPropertyData(System.Guid)\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: GetPropertyData(Guid)\n  nameWithType: Stroke.GetPropertyData(Guid)\n  fullName: System.Windows.Ink.Stroke.GetPropertyData(Guid)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Retrieves the property data for the specified GUID.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to retrieve a custom property on a <xref:System.Windows.Ink.Stroke> object.  \\n  \\n [!code-cs[StrokeSnippets#3](~/add/codesnippet/csharp/StrokeSnippets_CS/MyBorder.cs#3)]\\n [!code-vb[StrokeSnippets#3](~/add/codesnippet/visualbasic/StrokeSnippets_VB/MyBorder.vb#3)]\"\n  syntax:\n    content: public object GetPropertyData (Guid propertyDataId);\n    parameters:\n    - id: propertyDataId\n      type: System.Guid\n      description: The unique identifier for the property.\n    return:\n      type: System.Object\n      description: An <xref uid=\"langword_csharp_object\" name=\"object\" href=\"\"></xref> containing the property data.\n  overload: System.Windows.Ink.Stroke.GetPropertyData*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>propertyDataId</code> is not associated with a custom property of the <xref href=\"System.Windows.Ink.Stroke\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.GetPropertyDataIds\n  id: GetPropertyDataIds\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: GetPropertyDataIds()\n  nameWithType: Stroke.GetPropertyDataIds()\n  fullName: System.Windows.Ink.Stroke.GetPropertyDataIds()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Retrieves the GUIDs of any custom properties associated with the <xref href=\"System.Windows.Ink.Stroke\"></xref> object.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to get the GUIDs of a stroke's custom properties.  \\n  \\n [!code-cs[DrawTransform#3](~/add/codesnippet/csharp/DrawTransformSample/Program.cs#3)]\\n [!code-vb[DrawTransform#3](~/add/codesnippet/visualbasic/DrawTransformSample_VB/Module1.vb#3)]\"\n  syntax:\n    content: public Guid[] GetPropertyDataIds ();\n    parameters: []\n    return:\n      type: System.Guid[]\n      description: An array of <xref:System.Guid> objects.\n  overload: System.Windows.Ink.Stroke.GetPropertyDataIds*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.HitTest(System.Windows.Point)\n  id: HitTest(System.Windows.Point)\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: HitTest(Point)\n  nameWithType: Stroke.HitTest(Point)\n  fullName: System.Windows.Ink.Stroke.HitTest(Point)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Returns a value that indicates whether current <xref href=\"System.Windows.Ink.Stroke\"></xref> intersects the specified point.\n  remarks: This method behaves the same way as the overloaded <xref:System.Windows.Ink.Stroke.HitTest%28System.Windows.Point%2CSystem.Double%29> method does when `diameter` is 1.\n  example:\n  - \"The following example changes the color of a <xref:System.Windows.Ink.Stroke> if it intersects a certain area.  \\n  \\n [!code-cs[HitTestSample#3](~/add/codesnippet/csharp/HitTestSample_CS/Program.cs#3)]\\n [!code-vb[HitTestSample#3](~/add/codesnippet/visualbasic/HitTestSample_VB/Module1.vb#3)]\"\n  syntax:\n    content: public bool HitTest (System.Windows.Point point);\n    parameters:\n    - id: point\n      type: System.Windows.Point\n      description: The <xref href=\"System.Windows.Point\"></xref> to hit test.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>point</code> intersects the current stroke; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Ink.Stroke.HitTest*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)\n  id: HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: HitTest(IEnumerable<Point>,Int32)\n  nameWithType: Stroke.HitTest(IEnumerable<Point>,Int32)\n  fullName: System.Windows.Ink.Stroke.HitTest(IEnumerable<Point>,Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Returns a value that indicates whether the current <xref href=\"System.Windows.Ink.Stroke\"></xref> is within the specified bounds.\n  remarks: The HitTest method connects the first and last points in `lassoPoints` to create the lasso.\n  example:\n  - \"The following example renders a stroke purple if at least 80% of the stroke is within the bounds of `myPoints`.  \\n  \\n [!code-cs[HitTestSample#7](~/add/codesnippet/csharp/HitTestSample_CS/Program.cs#7)]\\n [!code-vb[HitTestSample#7](~/add/codesnippet/visualbasic/HitTestSample_VB/Module1.vb#7)]\"\n  syntax:\n    content: public bool HitTest (System.Collections.Generic.IEnumerable<System.Windows.Point> lassoPoints, int percentageWithinLasso);\n    parameters:\n    - id: lassoPoints\n      type: System.Collections.Generic.IEnumerable{System.Windows.Point}\n      description: An array of type <xref href=\"System.Windows.Point\"></xref> that represents the bounds of the area to hit test.\n    - id: percentageWithinLasso\n      type: System.Int32\n      description: The percentage of the length of the <xref href=\"System.Windows.Ink.Stroke\"></xref>, that must be in `lassoPoints` for the <xref href=\"System.Windows.Ink.Stroke\"></xref> to be considered hit.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current stroke is within the specified bounds; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Ink.Stroke.HitTest*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)\n  id: HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: HitTest(IEnumerable<Point>,StylusShape)\n  nameWithType: Stroke.HitTest(IEnumerable<Point>,StylusShape)\n  fullName: System.Windows.Ink.Stroke.HitTest(IEnumerable<Point>,StylusShape)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Returns whether the specified path intersects the <xref href=\"System.Windows.Ink.Stroke\"></xref> using the specified <xref href=\"System.Windows.Ink.StylusShape\"></xref>.\n  remarks: The HitTest method uses `stylusShape` to hit test the stroke along `eraserPath`.\n  example:\n  - \"The following code renders a stroke purple if the stroke intersects the path of `myPoints`.  \\n  \\n [!code-cs[HitTestSample#9](~/add/codesnippet/csharp/HitTestSample_CS/Program.cs#9)]\\n [!code-vb[HitTestSample#9](~/add/codesnippet/visualbasic/HitTestSample_VB/Module1.vb#9)]\"\n  syntax:\n    content: public bool HitTest (System.Collections.Generic.IEnumerable<System.Windows.Point> path, System.Windows.Ink.StylusShape stylusShape);\n    parameters:\n    - id: path\n      type: System.Collections.Generic.IEnumerable{System.Windows.Point}\n      description: The path that `stylusShape` follows for hit testing\n    - id: stylusShape\n      type: System.Windows.Ink.StylusShape\n      description: The shape of `path` with which to hit test.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>stylusShape</code> intersects the current stroke; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Ink.Stroke.HitTest*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.HitTest(System.Windows.Point,System.Double)\n  id: HitTest(System.Windows.Point,System.Double)\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: HitTest(Point,Double)\n  nameWithType: Stroke.HitTest(Point,Double)\n  fullName: System.Windows.Ink.Stroke.HitTest(Point,Double)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Returns a value that indicates whether current <xref href=\"System.Windows.Ink.Stroke\"></xref> intersects the specified area.\n  remarks: ''\n  example:\n  - \"The following example changes the color of a <xref:System.Windows.Ink.Stroke> if it intersects a certain area.  \\n  \\n [!code-cs[HitTestSample#3](~/add/codesnippet/csharp/HitTestSample_CS/Program.cs#3)]\\n [!code-vb[HitTestSample#3](~/add/codesnippet/visualbasic/HitTestSample_VB/Module1.vb#3)]\"\n  syntax:\n    content: public bool HitTest (System.Windows.Point point, double diameter);\n    parameters:\n    - id: point\n      type: System.Windows.Point\n      description: The <xref href=\"System.Windows.Point\"></xref> that defines the center of the area to hit test.\n    - id: diameter\n      type: System.Double\n      description: The diameter of the area to hit test.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified area intersects the current stroke; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Ink.Stroke.HitTest*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.HitTest(System.Windows.Rect,System.Int32)\n  id: HitTest(System.Windows.Rect,System.Int32)\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: HitTest(Rect,Int32)\n  nameWithType: Stroke.HitTest(Rect,Int32)\n  fullName: System.Windows.Ink.Stroke.HitTest(Rect,Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Returns a value that indicates whether the <xref href=\"System.Windows.Ink.Stroke\"></xref> is within the bounds of the specified rectangle.\n  remarks: ''\n  example:\n  - \"The following example renders a stroke purple if at least 80% of the stroke is within the <xref:System.Windows.Rect>.  \\n  \\n [!code-cs[HitTestSample#8](~/add/codesnippet/csharp/HitTestSample_CS/Program.cs#8)]\\n [!code-vb[HitTestSample#8](~/add/codesnippet/visualbasic/HitTestSample_VB/Module1.vb#8)]\"\n  syntax:\n    content: public bool HitTest (System.Windows.Rect bounds, int percentageWithinBounds);\n    parameters:\n    - id: bounds\n      type: System.Windows.Rect\n      description: A <xref href=\"System.Windows.Rect\"></xref> that represents the bounds of the area to hit test.\n    - id: percentageWithinBounds\n      type: System.Int32\n      description: The percentage of the length of the <xref href=\"System.Windows.Ink.Stroke\"></xref>, that must be in `percentageWithinBounds` for the <xref href=\"System.Windows.Ink.Stroke\"></xref> to be considered hit..\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current stroke is within the bounds of <code>bounds</code>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Ink.Stroke.HitTest*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.Invalidated\n  id: Invalidated\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: Invalidated\n  nameWithType: Stroke.Invalidated\n  fullName: System.Windows.Ink.Stroke.Invalidated\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Occurs when the appearance of the <xref href=\"System.Windows.Ink.Stroke\"></xref> changes.\n  remarks: The <xref:System.Windows.Controls.InkPresenter> handles the Invalidated event and calls the <xref:System.Windows.Ink.Stroke.DrawCore%2A> method. If you inherit from the <xref:System.Windows.Ink.Stroke> class and your stroke's appearance is based on a custom state, you must call the <xref:System.Windows.Ink.Stroke.OnInvalidated%2A> method to raise the Invalidated event.\n  syntax:\n    content: public event EventHandler Invalidated;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.OnDrawingAttributesChanged(System.Windows.Ink.PropertyDataChangedEventArgs)\n  id: OnDrawingAttributesChanged(System.Windows.Ink.PropertyDataChangedEventArgs)\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: OnDrawingAttributesChanged(PropertyDataChangedEventArgs)\n  nameWithType: Stroke.OnDrawingAttributesChanged(PropertyDataChangedEventArgs)\n  fullName: System.Windows.Ink.Stroke.OnDrawingAttributesChanged(PropertyDataChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Allows derived classes to modify the default behavior of the <xref href=\"System.Windows.Ink.Stroke.DrawingAttributesChanged\"></xref> event.\n  remarks: When overriding this method in a derived class, call the OnDrawingAttributesChanged method of the base class so that registered delegates receive the event.\n  syntax:\n    content: protected virtual void OnDrawingAttributesChanged (System.Windows.Ink.PropertyDataChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Ink.PropertyDataChangedEventArgs\n      description: The <xref href=\"System.Windows.Ink.PropertyDataChangedEventArgs\"></xref> object that contains the event data.\n  overload: System.Windows.Ink.Stroke.OnDrawingAttributesChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.OnDrawingAttributesReplaced(System.Windows.Ink.DrawingAttributesReplacedEventArgs)\n  id: OnDrawingAttributesReplaced(System.Windows.Ink.DrawingAttributesReplacedEventArgs)\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: OnDrawingAttributesReplaced(DrawingAttributesReplacedEventArgs)\n  nameWithType: Stroke.OnDrawingAttributesReplaced(DrawingAttributesReplacedEventArgs)\n  fullName: System.Windows.Ink.Stroke.OnDrawingAttributesReplaced(DrawingAttributesReplacedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Allows derived classes to modify the default behavior of the <xref href=\"System.Windows.Ink.Stroke.DrawingAttributesReplaced\"></xref> event.\n  remarks: When overriding this method in a derived class, call the OnDrawingAttributesReplaced method of the base class so that registered delegates receive the event.\n  syntax:\n    content: protected virtual void OnDrawingAttributesReplaced (System.Windows.Ink.DrawingAttributesReplacedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Ink.DrawingAttributesReplacedEventArgs\n      description: The <xref href=\"System.Windows.Ink.DrawingAttributesReplacedEventArgs\"></xref> object that contains the event data.\n  overload: System.Windows.Ink.Stroke.OnDrawingAttributesReplaced*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.OnInvalidated(System.EventArgs)\n  id: OnInvalidated(System.EventArgs)\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: OnInvalidated(EventArgs)\n  nameWithType: Stroke.OnInvalidated(EventArgs)\n  fullName: System.Windows.Ink.Stroke.OnInvalidated(EventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Raises the <xref href=\"System.Windows.Ink.Stroke.Invalidated\"></xref> event.\n  remarks: If you inherit from the <xref:System.Windows.Ink.Stroke> class and your stroke's appearance is based on a custom state, you must call the OnInvalidated method to raise the <xref:System.Windows.Ink.Stroke.Invalidated> event. The <xref:System.Windows.Controls.InkPresenter> handles the <xref:System.Windows.Ink.Stroke.Invalidated> event and calls the <xref:System.Windows.Ink.Stroke.DrawCore%2A> method.\n  example:\n  - \"The following example draws a <xref:System.Windows.Ink.Stroke> either as a solid stroke or as a series of <xref:System.Windows.Input.StylusPoint> objects, depending on the `Mode` property. The example calls the OnInvalidated method, which in turn calls the <xref:System.Windows.Ink.Stroke.DrawCore%2A> where the stroke is drawn.  \\n  \\n [!code-cs[StrokeSnippets#24](~/add/codesnippet/csharp/StrokeSnippets_CS/CustomRenderedStroke.cs#24)]\\n [!code-vb[StrokeSnippets#24](~/add/codesnippet/visualbasic/StrokeSnippets_VB/CustomRenderedStroke.vb#24)]  \\n[!code-cs[StrokeSnippets#25](~/add/codesnippet/csharp/StrokeSnippets_CS/CustomRenderedStroke.cs#25)]\\n[!code-vb[StrokeSnippets#25](~/add/codesnippet/visualbasic/StrokeSnippets_VB/CustomRenderedStroke.vb#25)]\"\n  syntax:\n    content: protected virtual void OnInvalidated (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.Windows.Ink.Stroke.OnInvalidated*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)\n  id: OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: OnPropertyChanged(PropertyChangedEventArgs)\n  nameWithType: Stroke.OnPropertyChanged(PropertyChangedEventArgs)\n  fullName: System.Windows.Ink.Stroke.OnPropertyChanged(PropertyChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Occurs when any <xref href=\"System.Windows.Ink.Stroke\"></xref> property changes.\n  syntax:\n    content: protected virtual void OnPropertyChanged (System.ComponentModel.PropertyChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.ComponentModel.PropertyChangedEventArgs\n      description: The event data that describes the property that changed, as well as old and new values.\n  overload: System.Windows.Ink.Stroke.OnPropertyChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)\n  id: OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: OnPropertyDataChanged(PropertyDataChangedEventArgs)\n  nameWithType: Stroke.OnPropertyDataChanged(PropertyDataChangedEventArgs)\n  fullName: System.Windows.Ink.Stroke.OnPropertyDataChanged(PropertyDataChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Allows derived classes to modify the default behavior of the <xref href=\"System.Windows.Ink.Stroke.PropertyDataChanged\"></xref> event.\n  remarks: When overriding this method in a derived class, call the OnPropertyDataChanged method of the base class so that registered delegates receive the event.\n  syntax:\n    content: protected virtual void OnPropertyDataChanged (System.Windows.Ink.PropertyDataChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Ink.PropertyDataChangedEventArgs\n      description: The <xref href=\"System.Windows.Ink.PropertyDataChangedEventArgs\"></xref> object that contains the event data.\n  overload: System.Windows.Ink.Stroke.OnPropertyDataChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.OnStylusPointsChanged(System.EventArgs)\n  id: OnStylusPointsChanged(System.EventArgs)\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: OnStylusPointsChanged(EventArgs)\n  nameWithType: Stroke.OnStylusPointsChanged(EventArgs)\n  fullName: System.Windows.Ink.Stroke.OnStylusPointsChanged(EventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Raises the <xref href=\"System.Windows.Ink.Stroke.StylusPointsChanged\"></xref> event.\n  syntax:\n    content: protected virtual void OnStylusPointsChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: A <xref:System.EventArgs> that contains the event data.\n  overload: System.Windows.Ink.Stroke.OnStylusPointsChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.OnStylusPointsReplaced(System.Windows.Ink.StylusPointsReplacedEventArgs)\n  id: OnStylusPointsReplaced(System.Windows.Ink.StylusPointsReplacedEventArgs)\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: OnStylusPointsReplaced(StylusPointsReplacedEventArgs)\n  nameWithType: Stroke.OnStylusPointsReplaced(StylusPointsReplacedEventArgs)\n  fullName: System.Windows.Ink.Stroke.OnStylusPointsReplaced(StylusPointsReplacedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Raises the <xref href=\"System.Windows.Ink.Stroke.StylusPointsReplaced\"></xref> event.\n  syntax:\n    content: protected virtual void OnStylusPointsReplaced (System.Windows.Ink.StylusPointsReplacedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Ink.StylusPointsReplacedEventArgs\n      description: A <xref href=\"System.Windows.Ink.StylusPointsReplacedEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Ink.Stroke.OnStylusPointsReplaced*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.PropertyDataChanged\n  id: PropertyDataChanged\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: PropertyDataChanged\n  nameWithType: Stroke.PropertyDataChanged\n  fullName: System.Windows.Ink.Stroke.PropertyDataChanged\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Occurs when the custom properties on a <xref href=\"System.Windows.Ink.Stroke\"></xref> object changes.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to add a handler for this event.  \\n  \\n [!code-cs[StrokeSnippets#20](~/add/codesnippet/csharp/StrokeSnippets_CS/MyBorder.cs#20)]\\n [!code-vb[StrokeSnippets#20](~/add/codesnippet/visualbasic/StrokeSnippets_VB/MyBorder.vb#20)]\"\n  syntax:\n    content: public event System.Windows.Ink.PropertyDataChangedEventHandler PropertyDataChanged;\n    return:\n      type: System.Windows.Ink.PropertyDataChangedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.RemovePropertyData(System.Guid)\n  id: RemovePropertyData(System.Guid)\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: RemovePropertyData(Guid)\n  nameWithType: Stroke.RemovePropertyData(Guid)\n  fullName: System.Windows.Ink.Stroke.RemovePropertyData(Guid)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Deletes a custom property from the <xref href=\"System.Windows.Ink.Stroke\"></xref> object.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to delete a custom property from a <xref:System.Windows.Ink.Stroke> object.  \\n  \\n [!code-cs[StrokeSnippets#30](~/add/codesnippet/csharp/StrokeSnippets_CS/MyBorder.cs#30)]\\n [!code-vb[StrokeSnippets#30](~/add/codesnippet/visualbasic/StrokeSnippets_VB/MyBorder.vb#30)]\"\n  syntax:\n    content: public void RemovePropertyData (Guid propertyDataId);\n    parameters:\n    - id: propertyDataId\n      type: System.Guid\n      description: The unique identifier for the property.\n  overload: System.Windows.Ink.Stroke.RemovePropertyData*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.StylusPoints\n  id: StylusPoints\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: StylusPoints\n  nameWithType: Stroke.StylusPoints\n  fullName: System.Windows.Ink.Stroke.StylusPoints\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Returns the stylus points of the <xref href=\"System.Windows.Ink.Stroke\"></xref>.\n  remarks: \"To get the stylus points that are used when the <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> property on the <xref:System.Windows.Ink.Stroke.DrawingAttributes%2A> property is set to `true`, use the <xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A> method.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Windows.Input.StylusPointCollection> assigned to the StylusPoints property must have at least one <xref:System.Windows.Input.StylusPoint> in it.  If you try to assign an empty <xref:System.Windows.Input.StylusPointCollection> to StylusPoints, or remove all the <xref:System.Windows.Input.StylusPoint> objects from StylusPoints, an exception occurs.\"\n  example:\n  - \"The following example is part of an overridden <xref:System.Windows.Ink.Stroke> that draws a circle at each <xref:System.Windows.Input.StylusPoint>. If the <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> property is set to `true`, the <xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A> is used to get the stylus points. Otherwise, the StylusPoints property is used.  \\n  \\n [!code-cs[StrokeSnippets#23](~/add/codesnippet/csharp/StrokeSnippets_CS/MyStroke.cs#23)]\\n [!code-vb[StrokeSnippets#23](~/add/codesnippet/visualbasic/StrokeSnippets_VB/MyStroke.vb#23)]\"\n  syntax:\n    content: public System.Windows.Input.StylusPointCollection StylusPoints { get; set; }\n    return:\n      type: System.Windows.Input.StylusPointCollection\n      description: The <xref href=\"System.Windows.Input.StylusPointCollection\"></xref> that contains the stylus points that represent the current <xref href=\"System.Windows.Ink.Stroke\"></xref>.\n  overload: System.Windows.Ink.Stroke.StylusPoints*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.StylusPointsChanged\n  id: StylusPointsChanged\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: StylusPointsChanged\n  nameWithType: Stroke.StylusPointsChanged\n  fullName: System.Windows.Ink.Stroke.StylusPointsChanged\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Occurs when the <xref:System.Windows.Ink.Stroke.StylusPoints*> property changes.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to handle the StylusPointsChanged event.  \\n  \\n [!code-cs[StrokeSnippets#28](~/add/codesnippet/csharp/StrokeSnippets_CS/MyBorder.cs#28)]\\n [!code-vb[StrokeSnippets#28](~/add/codesnippet/visualbasic/StrokeSnippets_VB/MyBorder.vb#28)]\"\n  syntax:\n    content: public event EventHandler StylusPointsChanged;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.StylusPointsReplaced\n  id: StylusPointsReplaced\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: StylusPointsReplaced\n  nameWithType: Stroke.StylusPointsReplaced\n  fullName: System.Windows.Ink.Stroke.StylusPointsReplaced\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Occurs when the <xref:System.Windows.Ink.Stroke.StylusPoints*> property is assigned a new <xref href=\"System.Windows.Input.StylusPointCollection\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to handle the StylusPointsReplaced event.  \\n  \\n [!code-cs[StrokeSnippets#29](~/add/codesnippet/csharp/StrokeSnippets_CS/MyBorder.cs#29)]\\n [!code-vb[StrokeSnippets#29](~/add/codesnippet/visualbasic/StrokeSnippets_VB/MyBorder.vb#29)]\"\n  syntax:\n    content: public event System.Windows.Ink.StylusPointsReplacedEventHandler StylusPointsReplaced;\n    return:\n      type: System.Windows.Ink.StylusPointsReplacedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.Stroke.Transform(System.Windows.Media.Matrix,System.Boolean)\n  id: Transform(System.Windows.Media.Matrix,System.Boolean)\n  parent: System.Windows.Ink.Stroke\n  langs:\n  - csharp\n  name: Transform(Matrix,Boolean)\n  nameWithType: Stroke.Transform(Matrix,Boolean)\n  fullName: System.Windows.Ink.Stroke.Transform(Matrix,Boolean)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Performs a transformation based upon the specified <xref href=\"System.Windows.Media.Matrix\"></xref> object.\n  remarks: The <xref:System.Windows.Media.Matrix> object represents a 3x3 matrix used for transformations in two-dimensional space. Each point of the Stroke object is transformed by the supplied Matrix. For example if the original Point.X value is 100, the original Point.Y value is 55, and the transformation Matrix.Scale(0.5, 0.5), the new Point.X value is 50 and the new Point.Y value is 27.5.\n  example:\n  - \"The following example demonstrates how to transform a <xref:System.Windows.Ink.Stroke> object.  \\n  \\n [!code-cs[DrawTransform#1](~/add/codesnippet/csharp/DrawTransformSample/Program.cs#1)]\\n [!code-vb[DrawTransform#1](~/add/codesnippet/visualbasic/DrawTransformSample_VB/Module1.vb#1)]\"\n  syntax:\n    content: public virtual void Transform (System.Windows.Media.Matrix transformMatrix, bool applyToStylusTip);\n    parameters:\n    - id: transformMatrix\n      type: System.Windows.Media.Matrix\n      description: The <xref href=\"System.Windows.Media.Matrix\"></xref> object defining the transformation.\n    - id: applyToStylusTip\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to apply the transformation to the tip of the stylus; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Ink.Stroke.Transform*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection)\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: Stroke(StylusPointCollection)\n  nameWithType: Stroke.Stroke(StylusPointCollection)\n  fullName: System.Windows.Ink.Stroke.Stroke(StylusPointCollection)\n- uid: System.Windows.Input.StylusPointCollection\n  parent: System.Windows.Input\n  isExternal: false\n  name: StylusPointCollection\n  nameWithType: StylusPointCollection\n  fullName: System.Windows.Input.StylusPointCollection\n- uid: System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection,System.Windows.Ink.DrawingAttributes)\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: Stroke(StylusPointCollection,DrawingAttributes)\n  nameWithType: Stroke.Stroke(StylusPointCollection,DrawingAttributes)\n  fullName: System.Windows.Ink.Stroke.Stroke(StylusPointCollection,DrawingAttributes)\n- uid: System.Windows.Ink.DrawingAttributes\n  parent: System.Windows.Ink\n  isExternal: false\n  name: DrawingAttributes\n  nameWithType: DrawingAttributes\n  fullName: System.Windows.Ink.DrawingAttributes\n- uid: System.Windows.Ink.Stroke.AddPropertyData(System.Guid,System.Object)\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: AddPropertyData(Guid,Object)\n  nameWithType: Stroke.AddPropertyData(Guid,Object)\n  fullName: System.Windows.Ink.Stroke.AddPropertyData(Guid,Object)\n- uid: System.Guid\n  parent: System\n  isExternal: true\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Windows.Ink.Stroke.Clone\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: Clone()\n  nameWithType: Stroke.Clone()\n  fullName: System.Windows.Ink.Stroke.Clone()\n- uid: System.Windows.Ink.Stroke\n  parent: System.Windows.Ink\n  isExternal: false\n  name: Stroke\n  nameWithType: Stroke\n  fullName: System.Windows.Ink.Stroke\n- uid: System.Windows.Ink.Stroke.ContainsPropertyData(System.Guid)\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: ContainsPropertyData(Guid)\n  nameWithType: Stroke.ContainsPropertyData(Guid)\n  fullName: System.Windows.Ink.Stroke.ContainsPropertyData(Guid)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Ink.Stroke.Draw(System.Windows.Media.DrawingContext)\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: Draw(DrawingContext)\n  nameWithType: Stroke.Draw(DrawingContext)\n  fullName: System.Windows.Ink.Stroke.Draw(DrawingContext)\n- uid: System.Windows.Media.DrawingContext\n  parent: System.Windows.Media\n  isExternal: false\n  name: DrawingContext\n  nameWithType: DrawingContext\n  fullName: System.Windows.Media.DrawingContext\n- uid: System.Windows.Ink.Stroke.Draw(System.Windows.Media.DrawingContext,System.Windows.Ink.DrawingAttributes)\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: Draw(DrawingContext,DrawingAttributes)\n  nameWithType: Stroke.Draw(DrawingContext,DrawingAttributes)\n  fullName: System.Windows.Ink.Stroke.Draw(DrawingContext,DrawingAttributes)\n- uid: System.Windows.Ink.Stroke.DrawCore(System.Windows.Media.DrawingContext,System.Windows.Ink.DrawingAttributes)\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: DrawCore(DrawingContext,DrawingAttributes)\n  nameWithType: Stroke.DrawCore(DrawingContext,DrawingAttributes)\n  fullName: System.Windows.Ink.Stroke.DrawCore(DrawingContext,DrawingAttributes)\n- uid: System.Windows.Ink.Stroke.DrawingAttributes\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: DrawingAttributes\n  nameWithType: Stroke.DrawingAttributes\n  fullName: System.Windows.Ink.Stroke.DrawingAttributes\n- uid: System.Windows.Ink.Stroke.DrawingAttributesChanged\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: DrawingAttributesChanged\n  nameWithType: Stroke.DrawingAttributesChanged\n  fullName: System.Windows.Ink.Stroke.DrawingAttributesChanged\n- uid: System.Windows.Ink.PropertyDataChangedEventHandler\n  parent: System.Windows.Ink\n  isExternal: false\n  name: PropertyDataChangedEventHandler\n  nameWithType: PropertyDataChangedEventHandler\n  fullName: System.Windows.Ink.PropertyDataChangedEventHandler\n- uid: System.Windows.Ink.Stroke.DrawingAttributesReplaced\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: DrawingAttributesReplaced\n  nameWithType: Stroke.DrawingAttributesReplaced\n  fullName: System.Windows.Ink.Stroke.DrawingAttributesReplaced\n- uid: System.Windows.Ink.DrawingAttributesReplacedEventHandler\n  parent: System.Windows.Ink\n  isExternal: false\n  name: DrawingAttributesReplacedEventHandler\n  nameWithType: DrawingAttributesReplacedEventHandler\n  fullName: System.Windows.Ink.DrawingAttributesReplacedEventHandler\n- uid: System.Windows.Ink.Stroke.GetBezierStylusPoints\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: GetBezierStylusPoints()\n  nameWithType: Stroke.GetBezierStylusPoints()\n  fullName: System.Windows.Ink.Stroke.GetBezierStylusPoints()\n- uid: System.Windows.Ink.Stroke.GetBounds\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: GetBounds()\n  nameWithType: Stroke.GetBounds()\n  fullName: System.Windows.Ink.Stroke.GetBounds()\n- uid: System.Windows.Rect\n  parent: System.Windows\n  isExternal: false\n  name: Rect\n  nameWithType: Rect\n  fullName: System.Windows.Rect\n- uid: System.Windows.Ink.Stroke.GetClipResult(System.Collections.Generic.IEnumerable{System.Windows.Point})\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: GetClipResult(IEnumerable<Point>)\n  nameWithType: Stroke.GetClipResult(IEnumerable<Point>)\n  fullName: System.Windows.Ink.Stroke.GetClipResult(IEnumerable<Point>)\n- uid: System.Windows.Ink.StrokeCollection\n  parent: System.Windows.Ink\n  isExternal: false\n  name: StrokeCollection\n  nameWithType: StrokeCollection\n  fullName: System.Windows.Ink.StrokeCollection\n- uid: System.Collections.Generic.IEnumerable{System.Windows.Point}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<Point>\n  nameWithType: IEnumerable<Point>\n  fullName: System.Collections.Generic.IEnumerable<System.Windows.Point>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Windows.Point>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.Point\n    name: Point\n    nameWithType: Point\n    fullName: Point\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Ink.Stroke.GetClipResult(System.Windows.Rect)\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: GetClipResult(Rect)\n  nameWithType: Stroke.GetClipResult(Rect)\n  fullName: System.Windows.Ink.Stroke.GetClipResult(Rect)\n- uid: System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point})\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: GetEraseResult(IEnumerable<Point>)\n  nameWithType: Stroke.GetEraseResult(IEnumerable<Point>)\n  fullName: System.Windows.Ink.Stroke.GetEraseResult(IEnumerable<Point>)\n- uid: System.Windows.Ink.Stroke.GetEraseResult(System.Windows.Rect)\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: GetEraseResult(Rect)\n  nameWithType: Stroke.GetEraseResult(Rect)\n  fullName: System.Windows.Ink.Stroke.GetEraseResult(Rect)\n- uid: System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: GetEraseResult(IEnumerable<Point>,StylusShape)\n  nameWithType: Stroke.GetEraseResult(IEnumerable<Point>,StylusShape)\n  fullName: System.Windows.Ink.Stroke.GetEraseResult(IEnumerable<Point>,StylusShape)\n- uid: System.Windows.Ink.StylusShape\n  parent: System.Windows.Ink\n  isExternal: false\n  name: StylusShape\n  nameWithType: StylusShape\n  fullName: System.Windows.Ink.StylusShape\n- uid: System.Windows.Ink.Stroke.GetGeometry\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: GetGeometry()\n  nameWithType: Stroke.GetGeometry()\n  fullName: System.Windows.Ink.Stroke.GetGeometry()\n- uid: System.Windows.Media.Geometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: Geometry\n  nameWithType: Geometry\n  fullName: System.Windows.Media.Geometry\n- uid: System.Windows.Ink.Stroke.GetGeometry(System.Windows.Ink.DrawingAttributes)\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: GetGeometry(DrawingAttributes)\n  nameWithType: Stroke.GetGeometry(DrawingAttributes)\n  fullName: System.Windows.Ink.Stroke.GetGeometry(DrawingAttributes)\n- uid: System.Windows.Ink.Stroke.GetPropertyData(System.Guid)\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: GetPropertyData(Guid)\n  nameWithType: Stroke.GetPropertyData(Guid)\n  fullName: System.Windows.Ink.Stroke.GetPropertyData(Guid)\n- uid: System.Windows.Ink.Stroke.GetPropertyDataIds\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: GetPropertyDataIds()\n  nameWithType: Stroke.GetPropertyDataIds()\n  fullName: System.Windows.Ink.Stroke.GetPropertyDataIds()\n- uid: System.Guid[]\n  parent: System\n  isExternal: true\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid[]\n  spec.csharp:\n  - uid: System.Guid\n    name: Guid\n    nameWithType: Guid\n    fullName: Guid[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Windows.Ink.Stroke.HitTest(System.Windows.Point)\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: HitTest(Point)\n  nameWithType: Stroke.HitTest(Point)\n  fullName: System.Windows.Ink.Stroke.HitTest(Point)\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: false\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Windows.Ink.Stroke.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: HitTest(IEnumerable<Point>,Int32)\n  nameWithType: Stroke.HitTest(IEnumerable<Point>,Int32)\n  fullName: System.Windows.Ink.Stroke.HitTest(IEnumerable<Point>,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Ink.Stroke.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: HitTest(IEnumerable<Point>,StylusShape)\n  nameWithType: Stroke.HitTest(IEnumerable<Point>,StylusShape)\n  fullName: System.Windows.Ink.Stroke.HitTest(IEnumerable<Point>,StylusShape)\n- uid: System.Windows.Ink.Stroke.HitTest(System.Windows.Point,System.Double)\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: HitTest(Point,Double)\n  nameWithType: Stroke.HitTest(Point,Double)\n  fullName: System.Windows.Ink.Stroke.HitTest(Point,Double)\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Ink.Stroke.HitTest(System.Windows.Rect,System.Int32)\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: HitTest(Rect,Int32)\n  nameWithType: Stroke.HitTest(Rect,Int32)\n  fullName: System.Windows.Ink.Stroke.HitTest(Rect,Int32)\n- uid: System.Windows.Ink.Stroke.Invalidated\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: Invalidated\n  nameWithType: Stroke.Invalidated\n  fullName: System.Windows.Ink.Stroke.Invalidated\n- uid: System.EventHandler\n  parent: System\n  isExternal: true\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Windows.Ink.Stroke.OnDrawingAttributesChanged(System.Windows.Ink.PropertyDataChangedEventArgs)\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: OnDrawingAttributesChanged(PropertyDataChangedEventArgs)\n  nameWithType: Stroke.OnDrawingAttributesChanged(PropertyDataChangedEventArgs)\n  fullName: System.Windows.Ink.Stroke.OnDrawingAttributesChanged(PropertyDataChangedEventArgs)\n- uid: System.Windows.Ink.PropertyDataChangedEventArgs\n  parent: System.Windows.Ink\n  isExternal: false\n  name: PropertyDataChangedEventArgs\n  nameWithType: PropertyDataChangedEventArgs\n  fullName: System.Windows.Ink.PropertyDataChangedEventArgs\n- uid: System.Windows.Ink.Stroke.OnDrawingAttributesReplaced(System.Windows.Ink.DrawingAttributesReplacedEventArgs)\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: OnDrawingAttributesReplaced(DrawingAttributesReplacedEventArgs)\n  nameWithType: Stroke.OnDrawingAttributesReplaced(DrawingAttributesReplacedEventArgs)\n  fullName: System.Windows.Ink.Stroke.OnDrawingAttributesReplaced(DrawingAttributesReplacedEventArgs)\n- uid: System.Windows.Ink.DrawingAttributesReplacedEventArgs\n  parent: System.Windows.Ink\n  isExternal: false\n  name: DrawingAttributesReplacedEventArgs\n  nameWithType: DrawingAttributesReplacedEventArgs\n  fullName: System.Windows.Ink.DrawingAttributesReplacedEventArgs\n- uid: System.Windows.Ink.Stroke.OnInvalidated(System.EventArgs)\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: OnInvalidated(EventArgs)\n  nameWithType: Stroke.OnInvalidated(EventArgs)\n  fullName: System.Windows.Ink.Stroke.OnInvalidated(EventArgs)\n- uid: System.EventArgs\n  parent: System\n  isExternal: true\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Windows.Ink.Stroke.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: OnPropertyChanged(PropertyChangedEventArgs)\n  nameWithType: Stroke.OnPropertyChanged(PropertyChangedEventArgs)\n  fullName: System.Windows.Ink.Stroke.OnPropertyChanged(PropertyChangedEventArgs)\n- uid: System.ComponentModel.PropertyChangedEventArgs\n  parent: System.ComponentModel\n  isExternal: true\n  name: PropertyChangedEventArgs\n  nameWithType: PropertyChangedEventArgs\n  fullName: System.ComponentModel.PropertyChangedEventArgs\n- uid: System.Windows.Ink.Stroke.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: OnPropertyDataChanged(PropertyDataChangedEventArgs)\n  nameWithType: Stroke.OnPropertyDataChanged(PropertyDataChangedEventArgs)\n  fullName: System.Windows.Ink.Stroke.OnPropertyDataChanged(PropertyDataChangedEventArgs)\n- uid: System.Windows.Ink.Stroke.OnStylusPointsChanged(System.EventArgs)\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: OnStylusPointsChanged(EventArgs)\n  nameWithType: Stroke.OnStylusPointsChanged(EventArgs)\n  fullName: System.Windows.Ink.Stroke.OnStylusPointsChanged(EventArgs)\n- uid: System.Windows.Ink.Stroke.OnStylusPointsReplaced(System.Windows.Ink.StylusPointsReplacedEventArgs)\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: OnStylusPointsReplaced(StylusPointsReplacedEventArgs)\n  nameWithType: Stroke.OnStylusPointsReplaced(StylusPointsReplacedEventArgs)\n  fullName: System.Windows.Ink.Stroke.OnStylusPointsReplaced(StylusPointsReplacedEventArgs)\n- uid: System.Windows.Ink.StylusPointsReplacedEventArgs\n  parent: System.Windows.Ink\n  isExternal: false\n  name: StylusPointsReplacedEventArgs\n  nameWithType: StylusPointsReplacedEventArgs\n  fullName: System.Windows.Ink.StylusPointsReplacedEventArgs\n- uid: System.Windows.Ink.Stroke.PropertyDataChanged\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: PropertyDataChanged\n  nameWithType: Stroke.PropertyDataChanged\n  fullName: System.Windows.Ink.Stroke.PropertyDataChanged\n- uid: System.Windows.Ink.Stroke.RemovePropertyData(System.Guid)\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: RemovePropertyData(Guid)\n  nameWithType: Stroke.RemovePropertyData(Guid)\n  fullName: System.Windows.Ink.Stroke.RemovePropertyData(Guid)\n- uid: System.Windows.Ink.Stroke.StylusPoints\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: StylusPoints\n  nameWithType: Stroke.StylusPoints\n  fullName: System.Windows.Ink.Stroke.StylusPoints\n- uid: System.Windows.Ink.Stroke.StylusPointsChanged\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: StylusPointsChanged\n  nameWithType: Stroke.StylusPointsChanged\n  fullName: System.Windows.Ink.Stroke.StylusPointsChanged\n- uid: System.Windows.Ink.Stroke.StylusPointsReplaced\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: StylusPointsReplaced\n  nameWithType: Stroke.StylusPointsReplaced\n  fullName: System.Windows.Ink.Stroke.StylusPointsReplaced\n- uid: System.Windows.Ink.StylusPointsReplacedEventHandler\n  parent: System.Windows.Ink\n  isExternal: false\n  name: StylusPointsReplacedEventHandler\n  nameWithType: StylusPointsReplacedEventHandler\n  fullName: System.Windows.Ink.StylusPointsReplacedEventHandler\n- uid: System.Windows.Ink.Stroke.Transform(System.Windows.Media.Matrix,System.Boolean)\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: Transform(Matrix,Boolean)\n  nameWithType: Stroke.Transform(Matrix,Boolean)\n  fullName: System.Windows.Ink.Stroke.Transform(Matrix,Boolean)\n- uid: System.Windows.Media.Matrix\n  parent: System.Windows.Media\n  isExternal: false\n  name: Matrix\n  nameWithType: Matrix\n  fullName: System.Windows.Media.Matrix\n- uid: System.Windows.Ink.Stroke.#ctor*\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: Stroke\n  nameWithType: Stroke.Stroke\n- uid: System.Windows.Ink.Stroke.AddPropertyData*\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: AddPropertyData\n  nameWithType: Stroke.AddPropertyData\n- uid: System.Windows.Ink.Stroke.Clone*\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: Clone\n  nameWithType: Stroke.Clone\n- uid: System.Windows.Ink.Stroke.ContainsPropertyData*\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: ContainsPropertyData\n  nameWithType: Stroke.ContainsPropertyData\n- uid: System.Windows.Ink.Stroke.Draw*\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: Draw\n  nameWithType: Stroke.Draw\n- uid: System.Windows.Ink.Stroke.DrawCore*\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: DrawCore\n  nameWithType: Stroke.DrawCore\n- uid: System.Windows.Ink.Stroke.DrawingAttributes*\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: DrawingAttributes\n  nameWithType: Stroke.DrawingAttributes\n- uid: System.Windows.Ink.Stroke.GetBezierStylusPoints*\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: GetBezierStylusPoints\n  nameWithType: Stroke.GetBezierStylusPoints\n- uid: System.Windows.Ink.Stroke.GetBounds*\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: GetBounds\n  nameWithType: Stroke.GetBounds\n- uid: System.Windows.Ink.Stroke.GetClipResult*\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: GetClipResult\n  nameWithType: Stroke.GetClipResult\n- uid: System.Windows.Ink.Stroke.GetEraseResult*\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: GetEraseResult\n  nameWithType: Stroke.GetEraseResult\n- uid: System.Windows.Ink.Stroke.GetGeometry*\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: GetGeometry\n  nameWithType: Stroke.GetGeometry\n- uid: System.Windows.Ink.Stroke.GetPropertyData*\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: GetPropertyData\n  nameWithType: Stroke.GetPropertyData\n- uid: System.Windows.Ink.Stroke.GetPropertyDataIds*\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: GetPropertyDataIds\n  nameWithType: Stroke.GetPropertyDataIds\n- uid: System.Windows.Ink.Stroke.HitTest*\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: HitTest\n  nameWithType: Stroke.HitTest\n- uid: System.Windows.Ink.Stroke.OnDrawingAttributesChanged*\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: OnDrawingAttributesChanged\n  nameWithType: Stroke.OnDrawingAttributesChanged\n- uid: System.Windows.Ink.Stroke.OnDrawingAttributesReplaced*\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: OnDrawingAttributesReplaced\n  nameWithType: Stroke.OnDrawingAttributesReplaced\n- uid: System.Windows.Ink.Stroke.OnInvalidated*\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: OnInvalidated\n  nameWithType: Stroke.OnInvalidated\n- uid: System.Windows.Ink.Stroke.OnPropertyChanged*\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: OnPropertyChanged\n  nameWithType: Stroke.OnPropertyChanged\n- uid: System.Windows.Ink.Stroke.OnPropertyDataChanged*\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: OnPropertyDataChanged\n  nameWithType: Stroke.OnPropertyDataChanged\n- uid: System.Windows.Ink.Stroke.OnStylusPointsChanged*\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: OnStylusPointsChanged\n  nameWithType: Stroke.OnStylusPointsChanged\n- uid: System.Windows.Ink.Stroke.OnStylusPointsReplaced*\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: OnStylusPointsReplaced\n  nameWithType: Stroke.OnStylusPointsReplaced\n- uid: System.Windows.Ink.Stroke.RemovePropertyData*\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: RemovePropertyData\n  nameWithType: Stroke.RemovePropertyData\n- uid: System.Windows.Ink.Stroke.StylusPoints*\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: StylusPoints\n  nameWithType: Stroke.StylusPoints\n- uid: System.Windows.Ink.Stroke.Transform*\n  parent: System.Windows.Ink.Stroke\n  isExternal: false\n  name: Transform\n  nameWithType: Stroke.Transform\n"}