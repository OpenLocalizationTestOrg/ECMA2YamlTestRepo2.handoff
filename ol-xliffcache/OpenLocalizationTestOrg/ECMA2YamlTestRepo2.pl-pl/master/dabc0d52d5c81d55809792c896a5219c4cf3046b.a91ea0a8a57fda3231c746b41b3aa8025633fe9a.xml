{"nodes":[{"pos":[686,751],"content":"Represents a notation declaration, such as &lt;!NOTATION... &gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a notation declaration, such as <ph id=\"ph1\">&amp;lt;</ph>!NOTATION... <ph id=\"ph2\">&amp;gt;</ph>.","pos":[0,65],"source":"Represents a notation declaration, such as &lt;!NOTATION... &gt;."}]},{"pos":[3060,3224],"content":"Creates a duplicate of this node. Notation nodes cannot be cloned. Calling this method on an <xref href=\"System.Xml.XmlNotation\"></xref> object throws an exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a duplicate of this node.","pos":[0,33]},{"content":"Notation nodes cannot be cloned.","pos":[34,66]},{"content":"Calling this method on an <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlNotation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object throws an exception.","pos":[67,164],"source":" Calling this method on an <xref href=\"System.Xml.XmlNotation\"></xref> object throws an exception."}]},{"pos":[3383,3596],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to recursively clone the subtree under the specified node; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to clone only the node itself.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to recursively clone the subtree under the specified node; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to clone only the node itself."},{"pos":[3659,3758],"content":"Returns a <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> copy of the node from which the method is called.","needQuote":true,"needEscape":true,"source":"Returns a <xref href=\"System.Xml.XmlNode\"></xref> copy of the node from which the method is called."},{"pos":[3929,4059],"content":"Notation nodes cannot be cloned. Calling this method on an <xref href=\"System.Xml.XmlNotation\"></xref> object throws an exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"Notation nodes cannot be cloned.","pos":[0,32]},{"content":"Calling this method on an <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlNotation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object throws an exception.","pos":[33,130],"source":" Calling this method on an <xref href=\"System.Xml.XmlNotation\"></xref> object throws an exception."}]},{"pos":[4369,4424],"content":"Gets the markup representing the children of this node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the markup representing the children of this node.","pos":[0,55]}]},{"pos":[4437,4597],"content":"`XmlNotation` nodes are read-only. Setting this property throws an exception.       This property is a Microsoft extension to the Document Object Model (DOM).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">`XmlNotation`</ph> nodes are read-only.","pos":[0,34],"source":"`XmlNotation` nodes are read-only."},{"content":"Setting this property throws an exception.","pos":[35,77]},{"content":"This property is a Microsoft extension to the Document Object Model (DOM).","pos":[84,158]}]},{"pos":[4725,4836],"content":"For <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlNotation\" name=\"XmlNotation\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> nodes, String.Empty is returned.","needQuote":true,"needEscape":true,"source":"For <xref uid=\"langword_csharp_XmlNotation\" name=\"XmlNotation\" href=\"\"></xref> nodes, String.Empty is returned."},{"pos":[5006,5037],"content":"Attempting to set the property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Attempting to set the property.","pos":[0,31]}]},{"pos":[5357,5411],"content":"Gets a value indicating whether the node is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the node is read-only.","pos":[0,54]}]},{"pos":[5424,5667],"content":"A read-only node is one whose properties, attributes, or children cannot be changed. You can remove a read-only node from the tree and insert it somewhere else.       This property is a Microsoft extension to the Document Object Model (DOM).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A read-only node is one whose properties, attributes, or children cannot be changed. You can remove a read-only node from the tree and insert it somewhere else.       This property is a Microsoft extension to the Document Object Model (DOM).","pos":[0,241],"nodes":[{"content":"A read-only node is one whose properties, attributes, or children cannot be changed.","pos":[0,84]},{"content":"You can remove a read-only node from the tree and insert it somewhere else.","pos":[85,160]},{"content":"This property is a Microsoft extension to the Document Object Model (DOM).","pos":[167,241]}]}]},{"pos":[5792,6179],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the node is read-only; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.       Because <xref uid=\"langword_csharp_XmlNotation\" name=\"XmlNotation\" href=\"\"></xref> nodes are read-only, this property always returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the node is read-only; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,160],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the node is read-only; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"Because <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlNotation\" name=\"XmlNotation\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> nodes are read-only, this property always returns <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[167,361],"source":"       Because <xref uid=\"langword_csharp_XmlNotation\" name=\"XmlNotation\" href=\"\"></xref> nodes are read-only, this property always returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[6559,6622],"content":"Gets the name of the current node without the namespace prefix.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the current node without the namespace prefix.","pos":[0,63]}]},{"pos":[6745,6878],"content":"For <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlNotation\" name=\"XmlNotation\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> nodes, this property returns the name of the notation.","needQuote":true,"needEscape":true,"source":"For <xref uid=\"langword_csharp_XmlNotation\" name=\"XmlNotation\" href=\"\"></xref> nodes, this property returns the name of the notation."},{"pos":[7231,7265],"content":"Gets the name of the current node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the current node.","pos":[0,34]}]},{"pos":[7920,7945],"content":"The name of the notation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the notation.","pos":[0,25]}]},{"pos":[8313,8347],"content":"Gets the type of the current node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the type of the current node.","pos":[0,34]}]},{"pos":[9031,9166],"content":"The node type. For <xref uid=\"langword_csharp_XmlNotation\" name=\"XmlNotation\" href=\"\"></xref> nodes, the value is XmlNodeType.Notation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The node type.","pos":[0,14]},{"content":"For <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlNotation\" name=\"XmlNotation\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> nodes, the value is XmlNodeType.Notation.","pos":[15,135],"source":" For <xref uid=\"langword_csharp_XmlNotation\" name=\"XmlNotation\" href=\"\"></xref> nodes, the value is XmlNodeType.Notation."}]},{"pos":[9538,9598],"content":"Gets the markup representing this node and all its children.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the markup representing this node and all its children.","pos":[0,60]}]},{"pos":[9610,9684],"content":"This property is a Microsoft extension to the Document Object Model (DOM).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property is a Microsoft extension to the Document Object Model (DOM).","pos":[0,74]}]},{"pos":[9806,9917],"content":"For <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlNotation\" name=\"XmlNotation\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> nodes, String.Empty is returned.","needQuote":true,"needEscape":true,"source":"For <xref uid=\"langword_csharp_XmlNotation\" name=\"XmlNotation\" href=\"\"></xref> nodes, String.Empty is returned."},{"pos":[10289,10357],"content":"Gets the value of the public identifier on the notation declaration.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the public identifier on the notation declaration.","pos":[0,68]}]},{"pos":[11007,11153],"content":"The public identifier on the notation. If there is no public identifier, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"The public identifier on the notation.","pos":[0,38]},{"content":"If there is no public identifier, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is returned.","pos":[39,146],"source":" If there is no public identifier, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned."}]},{"pos":[11525,11593],"content":"Gets the value of the system identifier on the notation declaration.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the system identifier on the notation declaration.","pos":[0,68]}]},{"pos":[12243,12389],"content":"The system identifier on the notation. If there is no system identifier, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"The system identifier on the notation.","pos":[0,38]},{"content":"If there is no system identifier, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is returned.","pos":[39,146],"source":" If there is no system identifier, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned."}]},{"pos":[12866,13053],"content":"Saves the children of the node to the specified <xref:System.Xml.XmlWriter>. This method has no effect on <xref uid=\"langword_csharp_XmlNotation\" name=\"XmlNotation\" href=\"\"></xref> nodes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Saves the children of the node to the specified &lt;xref:System.Xml.XmlWriter&gt;.","pos":[0,76],"source":"Saves the children of the node to the specified <xref:System.Xml.XmlWriter>."},{"content":"This method has no effect on <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlNotation\" name=\"XmlNotation\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> nodes.","pos":[77,187],"source":" This method has no effect on <xref uid=\"langword_csharp_XmlNotation\" name=\"XmlNotation\" href=\"\"></xref> nodes."}]},{"pos":[13065,13137],"content":"This method is a Microsoft extension to the Document Object Model (DOM).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is a Microsoft extension to the Document Object Model (DOM).","pos":[0,72]}]},{"pos":[13303,13404],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlWriter\" name=\"XmlWriter\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to which you want to save.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_XmlWriter\" name=\"XmlWriter\" href=\"\"></xref> to which you want to save."},{"pos":[13852,14023],"content":"Saves the node to the specified <xref:System.Xml.XmlWriter>. This method has no effect on <xref uid=\"langword_csharp_XmlNotation\" name=\"XmlNotation\" href=\"\"></xref> nodes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Saves the node to the specified &lt;xref:System.Xml.XmlWriter&gt;.","pos":[0,60],"source":"Saves the node to the specified <xref:System.Xml.XmlWriter>."},{"content":"This method has no effect on <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlNotation\" name=\"XmlNotation\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> nodes.","pos":[61,171],"source":" This method has no effect on <xref uid=\"langword_csharp_XmlNotation\" name=\"XmlNotation\" href=\"\"></xref> nodes."}]},{"pos":[14035,14107],"content":"This method is a Microsoft extension to the Document Object Model (DOM).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is a Microsoft extension to the Document Object Model (DOM).","pos":[0,72]}]},{"pos":[14266,14367],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlWriter\" name=\"XmlWriter\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to which you want to save.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_XmlWriter\" name=\"XmlWriter\" href=\"\"></xref> to which you want to save."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xml.XmlNotation\n  id: XmlNotation\n  children:\n  - System.Xml.XmlNotation.CloneNode(System.Boolean)\n  - System.Xml.XmlNotation.InnerXml\n  - System.Xml.XmlNotation.IsReadOnly\n  - System.Xml.XmlNotation.LocalName\n  - System.Xml.XmlNotation.Name\n  - System.Xml.XmlNotation.NodeType\n  - System.Xml.XmlNotation.OuterXml\n  - System.Xml.XmlNotation.PublicId\n  - System.Xml.XmlNotation.SystemId\n  - System.Xml.XmlNotation.WriteContentTo(System.Xml.XmlWriter)\n  - System.Xml.XmlNotation.WriteTo(System.Xml.XmlWriter)\n  langs:\n  - csharp\n  name: XmlNotation\n  nameWithType: XmlNotation\n  fullName: System.Xml.XmlNotation\n  type: Class\n  summary: Represents a notation declaration, such as &lt;!NOTATION... &gt;.\n  syntax:\n    content: 'public class XmlNotation : System.Xml.XmlNode'\n  inheritance:\n  - System.Object\n  - System.Xml.XmlNode\n  implements: []\n  inheritedMembers:\n  - System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)\n  - System.Xml.XmlNode.Attributes\n  - System.Xml.XmlNode.BaseURI\n  - System.Xml.XmlNode.ChildNodes\n  - System.Xml.XmlNode.Clone\n  - System.Xml.XmlNode.CreateNavigator\n  - System.Xml.XmlNode.FirstChild\n  - System.Xml.XmlNode.GetEnumerator\n  - System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)\n  - System.Xml.XmlNode.GetPrefixOfNamespace(System.String)\n  - System.Xml.XmlNode.HasChildNodes\n  - System.Xml.XmlNode.InnerText\n  - System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)\n  - System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)\n  - System.Xml.XmlNode.Item(System.String)\n  - System.Xml.XmlNode.Item(System.String,System.String)\n  - System.Xml.XmlNode.LastChild\n  - System.Xml.XmlNode.NamespaceURI\n  - System.Xml.XmlNode.NextSibling\n  - System.Xml.XmlNode.Normalize\n  - System.Xml.XmlNode.OwnerDocument\n  - System.Xml.XmlNode.ParentNode\n  - System.Xml.XmlNode.Prefix\n  - System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)\n  - System.Xml.XmlNode.PreviousSibling\n  - System.Xml.XmlNode.PreviousText\n  - System.Xml.XmlNode.RemoveAll\n  - System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)\n  - System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)\n  - System.Xml.XmlNode.SchemaInfo\n  - System.Xml.XmlNode.SelectNodes(System.String)\n  - System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)\n  - System.Xml.XmlNode.SelectSingleNode(System.String)\n  - System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)\n  - System.Xml.XmlNode.Supports(System.String,System.String)\n  - System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator\n  - System.Xml.XmlNode.System#ICloneable#Clone\n  - System.Xml.XmlNode.Value\n  platform:\n  - net462\n- uid: System.Xml.XmlNotation.CloneNode(System.Boolean)\n  id: CloneNode(System.Boolean)\n  parent: System.Xml.XmlNotation\n  langs:\n  - csharp\n  name: CloneNode(Boolean)\n  nameWithType: XmlNotation.CloneNode(Boolean)\n  fullName: System.Xml.XmlNotation.CloneNode(Boolean)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Creates a duplicate of this node. Notation nodes cannot be cloned. Calling this method on an <xref href=\"System.Xml.XmlNotation\"></xref> object throws an exception.\n  syntax:\n    content: public override System.Xml.XmlNode CloneNode (bool deep);\n    parameters:\n    - id: deep\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to recursively clone the subtree under the specified node; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to clone only the node itself.\n    return:\n      type: System.Xml.XmlNode\n      description: Returns a <xref href=\"System.Xml.XmlNode\"></xref> copy of the node from which the method is called.\n  overload: System.Xml.XmlNotation.CloneNode*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Notation nodes cannot be cloned. Calling this method on an <xref href=\"System.Xml.XmlNotation\"></xref> object throws an exception.\n  platform:\n  - net462\n- uid: System.Xml.XmlNotation.InnerXml\n  id: InnerXml\n  parent: System.Xml.XmlNotation\n  langs:\n  - csharp\n  name: InnerXml\n  nameWithType: XmlNotation.InnerXml\n  fullName: System.Xml.XmlNotation.InnerXml\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets the markup representing the children of this node.\n  remarks: \"`XmlNotation` nodes are read-only. Setting this property throws an exception.  \\n  \\n This property is a Microsoft extension to the Document Object Model (DOM).\"\n  syntax:\n    content: public override string InnerXml { get; set; }\n    return:\n      type: System.String\n      description: For <xref uid=\"langword_csharp_XmlNotation\" name=\"XmlNotation\" href=\"\"></xref> nodes, String.Empty is returned.\n  overload: System.Xml.XmlNotation.InnerXml*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Attempting to set the property.\n  platform:\n  - net462\n- uid: System.Xml.XmlNotation.IsReadOnly\n  id: IsReadOnly\n  parent: System.Xml.XmlNotation\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: XmlNotation.IsReadOnly\n  fullName: System.Xml.XmlNotation.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets a value indicating whether the node is read-only.\n  remarks: \"A read-only node is one whose properties, attributes, or children cannot be changed. You can remove a read-only node from the tree and insert it somewhere else.  \\n  \\n This property is a Microsoft extension to the Document Object Model (DOM).\"\n  syntax:\n    content: public override bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: \"<xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref> if the node is read-only; otherwise <xref uid=\\\"langword_csharp_false\\\" name=\\\"false\\\" href=\\\"\\\"></xref>.  \\n  \\n Because <xref uid=\\\"langword_csharp_XmlNotation\\\" name=\\\"XmlNotation\\\" href=\\\"\\\"></xref> nodes are read-only, this property always returns <xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref>.\"\n  overload: System.Xml.XmlNotation.IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNotation.LocalName\n  id: LocalName\n  parent: System.Xml.XmlNotation\n  langs:\n  - csharp\n  name: LocalName\n  nameWithType: XmlNotation.LocalName\n  fullName: System.Xml.XmlNotation.LocalName\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets the name of the current node without the namespace prefix.\n  syntax:\n    content: public override string LocalName { get; }\n    return:\n      type: System.String\n      description: For <xref uid=\"langword_csharp_XmlNotation\" name=\"XmlNotation\" href=\"\"></xref> nodes, this property returns the name of the notation.\n  overload: System.Xml.XmlNotation.LocalName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNotation.Name\n  id: Name\n  parent: System.Xml.XmlNotation\n  langs:\n  - csharp\n  name: Name\n  nameWithType: XmlNotation.Name\n  fullName: System.Xml.XmlNotation.Name\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets the name of the current node.\n  remarks: ''\n  example:\n  - \"The following example displays information on the notations declared in the XML document.  \\n  \\n [!code-cs[XmlNotation#1](~/add/codesnippet/csharp/p-system.xml.xmlnotation_2_1.cs)]\\n [!code-cpp[XmlNotation#1](~/add/codesnippet/cpp/p-system.xml.xmlnotation_2_1.cpp)]\\n [!code-vb[XmlNotation#1](~/add/codesnippet/visualbasic/p-system.xml.xmlnotation_2_1.vb)]  \\n  \\n The example uses the file `doment.xml` as input.  \\n  \\n [!code-xml[XmlNotation#2](~/add/codesnippet/xml/p-system.xml.xmlnotation_2_2.xml)]\"\n  syntax:\n    content: public override string Name { get; }\n    return:\n      type: System.String\n      description: The name of the notation.\n  overload: System.Xml.XmlNotation.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNotation.NodeType\n  id: NodeType\n  parent: System.Xml.XmlNotation\n  langs:\n  - csharp\n  name: NodeType\n  nameWithType: XmlNotation.NodeType\n  fullName: System.Xml.XmlNotation.NodeType\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets the type of the current node.\n  remarks: ''\n  example:\n  - \"The following example displays information on the notations declared in the XML document.  \\n  \\n [!code-cs[XmlNotation#1](~/add/codesnippet/csharp/p-system.xml.xmlnotation_3_1.cs)]\\n [!code-cpp[XmlNotation#1](~/add/codesnippet/cpp/p-system.xml.xmlnotation_3_1.cpp)]\\n [!code-vb[XmlNotation#1](~/add/codesnippet/visualbasic/p-system.xml.xmlnotation_3_1.vb)]  \\n  \\n The example uses the file `doment.xml` as input.  \\n  \\n [!code-xml[XmlNotation#2](~/add/codesnippet/xml/p-system.xml.xmlnotation_3_2.xml)]\"\n  syntax:\n    content: public override System.Xml.XmlNodeType NodeType { get; }\n    return:\n      type: System.Xml.XmlNodeType\n      description: The node type. For <xref uid=\"langword_csharp_XmlNotation\" name=\"XmlNotation\" href=\"\"></xref> nodes, the value is XmlNodeType.Notation.\n  overload: System.Xml.XmlNotation.NodeType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNotation.OuterXml\n  id: OuterXml\n  parent: System.Xml.XmlNotation\n  langs:\n  - csharp\n  name: OuterXml\n  nameWithType: XmlNotation.OuterXml\n  fullName: System.Xml.XmlNotation.OuterXml\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets the markup representing this node and all its children.\n  remarks: This property is a Microsoft extension to the Document Object Model (DOM).\n  syntax:\n    content: public override string OuterXml { get; }\n    return:\n      type: System.String\n      description: For <xref uid=\"langword_csharp_XmlNotation\" name=\"XmlNotation\" href=\"\"></xref> nodes, String.Empty is returned.\n  overload: System.Xml.XmlNotation.OuterXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNotation.PublicId\n  id: PublicId\n  parent: System.Xml.XmlNotation\n  langs:\n  - csharp\n  name: PublicId\n  nameWithType: XmlNotation.PublicId\n  fullName: System.Xml.XmlNotation.PublicId\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets the value of the public identifier on the notation declaration.\n  remarks: ''\n  example:\n  - \"The following example displays information on the notations declared in the XML document.  \\n  \\n [!code-cs[XmlNotation#1](~/add/codesnippet/csharp/p-system.xml.xmlnotation_1_1.cs)]\\n [!code-cpp[XmlNotation#1](~/add/codesnippet/cpp/p-system.xml.xmlnotation_1_1.cpp)]\\n [!code-vb[XmlNotation#1](~/add/codesnippet/visualbasic/p-system.xml.xmlnotation_1_1.vb)]  \\n  \\n The example uses the file `doment.xml` as input.  \\n  \\n [!code-xml[XmlNotation#2](~/add/codesnippet/xml/p-system.xml.xmlnotation_1_2.xml)]\"\n  syntax:\n    content: public string PublicId { get; }\n    return:\n      type: System.String\n      description: The public identifier on the notation. If there is no public identifier, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned.\n  overload: System.Xml.XmlNotation.PublicId*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNotation.SystemId\n  id: SystemId\n  parent: System.Xml.XmlNotation\n  langs:\n  - csharp\n  name: SystemId\n  nameWithType: XmlNotation.SystemId\n  fullName: System.Xml.XmlNotation.SystemId\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets the value of the system identifier on the notation declaration.\n  remarks: ''\n  example:\n  - \"The following example displays information on the notations declared in the XML document.  \\n  \\n [!code-cs[XmlNotation#1](~/add/codesnippet/csharp/p-system.xml.xmlnotation_0_1.cs)]\\n [!code-cpp[XmlNotation#1](~/add/codesnippet/cpp/p-system.xml.xmlnotation_0_1.cpp)]\\n [!code-vb[XmlNotation#1](~/add/codesnippet/visualbasic/p-system.xml.xmlnotation_0_1.vb)]  \\n  \\n The example uses the file `doment.xml` as input.  \\n  \\n [!code-xml[XmlNotation#2](~/add/codesnippet/xml/p-system.xml.xmlnotation_0_2.xml)]\"\n  syntax:\n    content: public string SystemId { get; }\n    return:\n      type: System.String\n      description: The system identifier on the notation. If there is no system identifier, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned.\n  overload: System.Xml.XmlNotation.SystemId*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNotation.WriteContentTo(System.Xml.XmlWriter)\n  id: WriteContentTo(System.Xml.XmlWriter)\n  parent: System.Xml.XmlNotation\n  langs:\n  - csharp\n  name: WriteContentTo(XmlWriter)\n  nameWithType: XmlNotation.WriteContentTo(XmlWriter)\n  fullName: System.Xml.XmlNotation.WriteContentTo(XmlWriter)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Saves the children of the node to the specified <xref:System.Xml.XmlWriter>. This method has no effect on <xref uid=\"langword_csharp_XmlNotation\" name=\"XmlNotation\" href=\"\"></xref> nodes.\n  remarks: This method is a Microsoft extension to the Document Object Model (DOM).\n  syntax:\n    content: public override void WriteContentTo (System.Xml.XmlWriter w);\n    parameters:\n    - id: w\n      type: System.Xml.XmlWriter\n      description: The <xref uid=\"langword_csharp_XmlWriter\" name=\"XmlWriter\" href=\"\"></xref> to which you want to save.\n  overload: System.Xml.XmlNotation.WriteContentTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNotation.WriteTo(System.Xml.XmlWriter)\n  id: WriteTo(System.Xml.XmlWriter)\n  parent: System.Xml.XmlNotation\n  langs:\n  - csharp\n  name: WriteTo(XmlWriter)\n  nameWithType: XmlNotation.WriteTo(XmlWriter)\n  fullName: System.Xml.XmlNotation.WriteTo(XmlWriter)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Saves the node to the specified <xref:System.Xml.XmlWriter>. This method has no effect on <xref uid=\"langword_csharp_XmlNotation\" name=\"XmlNotation\" href=\"\"></xref> nodes.\n  remarks: This method is a Microsoft extension to the Document Object Model (DOM).\n  syntax:\n    content: public override void WriteTo (System.Xml.XmlWriter w);\n    parameters:\n    - id: w\n      type: System.Xml.XmlWriter\n      description: The <xref uid=\"langword_csharp_XmlWriter\" name=\"XmlWriter\" href=\"\"></xref> to which you want to save.\n  overload: System.Xml.XmlNotation.WriteTo*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Xml.XmlNode\n  isExternal: false\n  name: System.Xml.XmlNode\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Xml.XmlNotation.CloneNode(System.Boolean)\n  parent: System.Xml.XmlNotation\n  isExternal: false\n  name: CloneNode(Boolean)\n  nameWithType: XmlNotation.CloneNode(Boolean)\n  fullName: System.Xml.XmlNotation.CloneNode(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Xml.XmlNotation.InnerXml\n  parent: System.Xml.XmlNotation\n  isExternal: false\n  name: InnerXml\n  nameWithType: XmlNotation.InnerXml\n  fullName: System.Xml.XmlNotation.InnerXml\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Xml.XmlNotation.IsReadOnly\n  parent: System.Xml.XmlNotation\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: XmlNotation.IsReadOnly\n  fullName: System.Xml.XmlNotation.IsReadOnly\n- uid: System.Xml.XmlNotation.LocalName\n  parent: System.Xml.XmlNotation\n  isExternal: false\n  name: LocalName\n  nameWithType: XmlNotation.LocalName\n  fullName: System.Xml.XmlNotation.LocalName\n- uid: System.Xml.XmlNotation.Name\n  parent: System.Xml.XmlNotation\n  isExternal: false\n  name: Name\n  nameWithType: XmlNotation.Name\n  fullName: System.Xml.XmlNotation.Name\n- uid: System.Xml.XmlNotation.NodeType\n  parent: System.Xml.XmlNotation\n  isExternal: false\n  name: NodeType\n  nameWithType: XmlNotation.NodeType\n  fullName: System.Xml.XmlNotation.NodeType\n- uid: System.Xml.XmlNodeType\n  parent: System.Xml\n  isExternal: true\n  name: XmlNodeType\n  nameWithType: XmlNodeType\n  fullName: System.Xml.XmlNodeType\n- uid: System.Xml.XmlNotation.OuterXml\n  parent: System.Xml.XmlNotation\n  isExternal: false\n  name: OuterXml\n  nameWithType: XmlNotation.OuterXml\n  fullName: System.Xml.XmlNotation.OuterXml\n- uid: System.Xml.XmlNotation.PublicId\n  parent: System.Xml.XmlNotation\n  isExternal: false\n  name: PublicId\n  nameWithType: XmlNotation.PublicId\n  fullName: System.Xml.XmlNotation.PublicId\n- uid: System.Xml.XmlNotation.SystemId\n  parent: System.Xml.XmlNotation\n  isExternal: false\n  name: SystemId\n  nameWithType: XmlNotation.SystemId\n  fullName: System.Xml.XmlNotation.SystemId\n- uid: System.Xml.XmlNotation.WriteContentTo(System.Xml.XmlWriter)\n  parent: System.Xml.XmlNotation\n  isExternal: false\n  name: WriteContentTo(XmlWriter)\n  nameWithType: XmlNotation.WriteContentTo(XmlWriter)\n  fullName: System.Xml.XmlNotation.WriteContentTo(XmlWriter)\n- uid: System.Xml.XmlWriter\n  parent: System.Xml\n  isExternal: true\n  name: XmlWriter\n  nameWithType: XmlWriter\n  fullName: System.Xml.XmlWriter\n- uid: System.Xml.XmlNotation.WriteTo(System.Xml.XmlWriter)\n  parent: System.Xml.XmlNotation\n  isExternal: false\n  name: WriteTo(XmlWriter)\n  nameWithType: XmlNotation.WriteTo(XmlWriter)\n  fullName: System.Xml.XmlNotation.WriteTo(XmlWriter)\n- uid: System.Xml.XmlNotation.CloneNode*\n  parent: System.Xml.XmlNotation\n  isExternal: false\n  name: CloneNode\n  nameWithType: XmlNotation.CloneNode\n- uid: System.Xml.XmlNotation.InnerXml*\n  parent: System.Xml.XmlNotation\n  isExternal: false\n  name: InnerXml\n  nameWithType: XmlNotation.InnerXml\n- uid: System.Xml.XmlNotation.IsReadOnly*\n  parent: System.Xml.XmlNotation\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: XmlNotation.IsReadOnly\n- uid: System.Xml.XmlNotation.LocalName*\n  parent: System.Xml.XmlNotation\n  isExternal: false\n  name: LocalName\n  nameWithType: XmlNotation.LocalName\n- uid: System.Xml.XmlNotation.Name*\n  parent: System.Xml.XmlNotation\n  isExternal: false\n  name: Name\n  nameWithType: XmlNotation.Name\n- uid: System.Xml.XmlNotation.NodeType*\n  parent: System.Xml.XmlNotation\n  isExternal: false\n  name: NodeType\n  nameWithType: XmlNotation.NodeType\n- uid: System.Xml.XmlNotation.OuterXml*\n  parent: System.Xml.XmlNotation\n  isExternal: false\n  name: OuterXml\n  nameWithType: XmlNotation.OuterXml\n- uid: System.Xml.XmlNotation.PublicId*\n  parent: System.Xml.XmlNotation\n  isExternal: false\n  name: PublicId\n  nameWithType: XmlNotation.PublicId\n- uid: System.Xml.XmlNotation.SystemId*\n  parent: System.Xml.XmlNotation\n  isExternal: false\n  name: SystemId\n  nameWithType: XmlNotation.SystemId\n- uid: System.Xml.XmlNotation.WriteContentTo*\n  parent: System.Xml.XmlNotation\n  isExternal: false\n  name: WriteContentTo\n  nameWithType: XmlNotation.WriteContentTo\n- uid: System.Xml.XmlNotation.WriteTo*\n  parent: System.Xml.XmlNotation\n  isExternal: false\n  name: WriteTo\n  nameWithType: XmlNotation.WriteTo\n"}