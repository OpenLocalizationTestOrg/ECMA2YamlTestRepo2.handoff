{"nodes":[{"pos":[482,890],"content":"The ManagementName attribute is used to override names exposed through a WMI class.       Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries. The [MI APIs](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) should be used for all new development.","needQuote":false,"needEscape":true,"nodes":[{"content":"The ManagementName attribute is used to override names exposed through a WMI class.","pos":[0,83]},{"content":"Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries.","pos":[90,283]},{"content":"The <bpt id=\"p1\">[</bpt>MI APIs<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx)</ept> should be used for all new development.","pos":[284,406],"source":" The [MI APIs](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) should be used for all new development."}]},{"pos":[903,1123],"content":"It might be inconvenient to rename method parameters to present WMI clients with more user-friendly names. This attribute lets you assign user-friendly WMI names while retaining your existing internal naming conventions.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"It might be inconvenient to rename method parameters to present WMI clients with more user-friendly names. This attribute lets you assign user-friendly WMI names while retaining your existing internal naming conventions.","pos":[0,220],"nodes":[{"content":"It might be inconvenient to rename method parameters to present WMI clients with more user-friendly names.","pos":[0,106]},{"content":"This attribute lets you assign user-friendly WMI names while retaining your existing internal naming conventions.","pos":[107,220]}]}]},{"pos":[2249,2446],"content":"Initializes a new instance of the <xref:System.Management.ManagementNameAttribute> class that specifies a value for the <xref:System.Management.ManagementNameAttribute.Name*> property of the class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes a new instance of the &lt;xref:System.Management.ManagementNameAttribute&gt; class that specifies a value for the &lt;xref:System.Management.ManagementNameAttribute.Name*&gt; property of the class.","pos":[0,197],"source":"Initializes a new instance of the <xref:System.Management.ManagementNameAttribute> class that specifies a value for the <xref:System.Management.ManagementNameAttribute.Name*> property of the class."}]},{"pos":[2592,2630],"content":"The user-friendly name for the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user-friendly name for the object.","pos":[0,38]}]},{"pos":[3155,3343],"content":"Gets or sets the user-friendly name for an object. The object can be a method parameter or properties marked with the ManagementProbe, ManagementKey, or ManagementConfiguration attributes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the user-friendly name for an object. The object can be a method parameter or properties marked with the ManagementProbe, ManagementKey, or ManagementConfiguration attributes.","pos":[0,188],"nodes":[{"content":"Gets or sets the user-friendly name for an object.","pos":[0,50]},{"content":"The object can be a method parameter or properties marked with the ManagementProbe, ManagementKey, or ManagementConfiguration attributes.","pos":[51,188]}]}]},{"pos":[3452,3533],"content":"A <xref:System.String> value that indicates the user friendly name for an object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; value that indicates the user friendly name for an object.","pos":[0,81],"source":"A <xref:System.String> value that indicates the user friendly name for an object."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Management.Instrumentation.ManagementNameAttribute\n  id: ManagementNameAttribute\n  children:\n  - System.Management.Instrumentation.ManagementNameAttribute.#ctor(System.String)\n  - System.Management.Instrumentation.ManagementNameAttribute.Name\n  langs:\n  - csharp\n  name: ManagementNameAttribute\n  nameWithType: ManagementNameAttribute\n  fullName: System.Management.Instrumentation.ManagementNameAttribute\n  type: Class\n  summary: \"The ManagementName attribute is used to override names exposed through a WMI class.  \\n  \\n Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries. The [MI APIs](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) should be used for all new development.\"\n  remarks: It might be inconvenient to rename method parameters to present WMI clients with more user-friendly names. This attribute lets you assign user-friendly WMI names while retaining your existing internal naming conventions.\n  example:\n  - \"In the following example, the integer parameter remains i internally, but will be exposed as \\\"The Value\\\" to WMI clients.  \\n  \\n```  \\n[ManagementTask]  \\nstatic public int PrintValue([ManagementName(\\\"The Value\\\")]int i)  \\n{  \\n   Console.WriteLine(\\\"The Value is {0:x}\\\", i);  \\n   return i;  \\n}  \\n```\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Parameter, AllowMultiple=false)]\n\n      public sealed class ManagementNameAttribute : Attribute\n  inheritance:\n  - System.Attribute\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Management.Instrumentation.ManagementNameAttribute.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Management.Instrumentation.ManagementNameAttribute\n  langs:\n  - csharp\n  name: ManagementNameAttribute(String)\n  nameWithType: ManagementNameAttribute.ManagementNameAttribute(String)\n  fullName: System.Management.Instrumentation.ManagementNameAttribute.ManagementNameAttribute(String)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Management.Instrumentation\n  summary: Initializes a new instance of the <xref:System.Management.ManagementNameAttribute> class that specifies a value for the <xref:System.Management.ManagementNameAttribute.Name*> property of the class.\n  syntax:\n    content: public ManagementNameAttribute (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The user-friendly name for the object.\n  overload: System.Management.Instrumentation.ManagementNameAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Management.Instrumentation.ManagementNameAttribute.Name\n  id: Name\n  parent: System.Management.Instrumentation.ManagementNameAttribute\n  langs:\n  - csharp\n  name: Name\n  nameWithType: ManagementNameAttribute.Name\n  fullName: System.Management.Instrumentation.ManagementNameAttribute.Name\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Management.Instrumentation\n  summary: Gets or sets the user-friendly name for an object. The object can be a method parameter or properties marked with the ManagementProbe, ManagementKey, or ManagementConfiguration attributes.\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: A <xref:System.String> value that indicates the user friendly name for an object.\n  overload: System.Management.Instrumentation.ManagementNameAttribute.Name*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Attribute\n  isExternal: false\n  name: System.Attribute\n- uid: System.Management.Instrumentation.ManagementNameAttribute.#ctor(System.String)\n  parent: System.Management.Instrumentation.ManagementNameAttribute\n  isExternal: false\n  name: ManagementNameAttribute(String)\n  nameWithType: ManagementNameAttribute.ManagementNameAttribute(String)\n  fullName: System.Management.Instrumentation.ManagementNameAttribute.ManagementNameAttribute(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Management.Instrumentation.ManagementNameAttribute.Name\n  parent: System.Management.Instrumentation.ManagementNameAttribute\n  isExternal: false\n  name: Name\n  nameWithType: ManagementNameAttribute.Name\n  fullName: System.Management.Instrumentation.ManagementNameAttribute.Name\n- uid: System.Management.Instrumentation.ManagementNameAttribute.#ctor*\n  parent: System.Management.Instrumentation.ManagementNameAttribute\n  isExternal: false\n  name: ManagementNameAttribute\n  nameWithType: ManagementNameAttribute.ManagementNameAttribute\n- uid: System.Management.Instrumentation.ManagementNameAttribute.Name*\n  parent: System.Management.Instrumentation.ManagementNameAttribute\n  isExternal: false\n  name: Name\n  nameWithType: ManagementNameAttribute.Name\n"}