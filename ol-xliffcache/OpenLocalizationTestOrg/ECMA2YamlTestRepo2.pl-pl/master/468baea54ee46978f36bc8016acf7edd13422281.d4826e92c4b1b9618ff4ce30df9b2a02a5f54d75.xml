{"nodes":[{"pos":[479,688],"content":"A factory that provides instances of <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Web.WebServiceHost\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in managed hosting environments where the host instance is created dynamically in response to incoming messages.","needQuote":true,"needEscape":true,"source":"A factory that provides instances of <xref href=\"System.ServiceModel.Web.WebServiceHost\"></xref> in managed hosting environments where the host instance is created dynamically in response to incoming messages."},{"pos":[701,1041],"content":"The managed hosting environments that support dynamic activation are Internet Information Services (IIS) and Windows Process Activation Service (WAS).       If you have implemented a custom derivative of <xref:System.ServiceModel.Web.WebServiceHost>, consider also implementing a factory that derives from the WebServiceHostFactory class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The managed hosting environments that support dynamic activation are Internet Information Services (IIS) and Windows Process Activation Service (WAS).       If you have implemented a custom derivative of <xref:System.ServiceModel.Web.WebServiceHost>, consider also implementing a factory that derives from the WebServiceHostFactory class.","pos":[0,338],"nodes":[{"content":"The managed hosting environments that support dynamic activation are Internet Information Services (IIS) and Windows Process Activation Service (WAS).","pos":[0,150]},{"content":"If you have implemented a custom derivative of &lt;xref:System.ServiceModel.Web.WebServiceHost&gt;, consider also implementing a factory that derives from the WebServiceHostFactory class.","pos":[157,338],"source":"       If you have implemented a custom derivative of <xref:System.ServiceModel.Web.WebServiceHost>, consider also implementing a factory that derives from the WebServiceHostFactory class."}]}]},{"pos":[2265,2379],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Activation.WebServiceHostFactory\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Activation.WebServiceHostFactory\"></xref> class."},{"pos":[2391,2486],"content":"This method is not called directly. It is called when a service is being dynamically activated.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is not called directly. It is called when a service is being dynamically activated.","pos":[0,95],"nodes":[{"content":"This method is not called directly.","pos":[0,35]},{"content":"It is called when a service is being dynamically activated.","pos":[36,95]}]}]},{"pos":[3224,3369],"content":"Creates an instance of the specified <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Web.WebServiceHost\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> derived class with the specified base addresses.","needQuote":true,"needEscape":true,"source":"Creates an instance of the specified <xref href=\"System.ServiceModel.Web.WebServiceHost\"></xref> derived class with the specified base addresses."},{"pos":[3381,3477],"content":"Override this method to create the required service host type and perform any needed processing.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Override this method to create the required service host type and perform any needed processing.","pos":[0,96]}]},{"pos":[3901,3936],"content":"The type of service host to create.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of service host to create.","pos":[0,35]}]},{"pos":[4005,4048],"content":"An array of base addresses for the service.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of base addresses for the service.","pos":[0,43]}]},{"pos":[4124,4208],"content":"An instance of a <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.ServiceHost\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> derived class.","needQuote":true,"needEscape":true,"source":"An instance of a <xref href=\"System.ServiceModel.ServiceHost\"></xref> derived class."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Activation.WebServiceHostFactory\n  id: WebServiceHostFactory\n  children:\n  - System.ServiceModel.Activation.WebServiceHostFactory.#ctor\n  - System.ServiceModel.Activation.WebServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])\n  langs:\n  - csharp\n  name: WebServiceHostFactory\n  nameWithType: WebServiceHostFactory\n  fullName: System.ServiceModel.Activation.WebServiceHostFactory\n  type: Class\n  summary: A factory that provides instances of <xref href=\"System.ServiceModel.Web.WebServiceHost\"></xref> in managed hosting environments where the host instance is created dynamically in response to incoming messages.\n  remarks: \"The managed hosting environments that support dynamic activation are Internet Information Services (IIS) and Windows Process Activation Service (WAS).  \\n  \\n If you have implemented a custom derivative of <xref:System.ServiceModel.Web.WebServiceHost>, consider also implementing a factory that derives from the WebServiceHostFactory class.\"\n  example:\n  - \"The following example shows how to derive a class from WebServiceHostFactory.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \\n  \\n To have your derived Web service host factory used, specify it in a .SVC file. The following example shows the syntax used in a .svc file.  \\n  \\n```  \\n<%@ServiceHost language=c# Service=\\\"Microsoft.Samples.MyWCFService\\\" Factory=\\\"Microsoft.Samples.MyWebServiceHostFactory\\\" %>  \\n```\"\n  syntax:\n    content: 'public class WebServiceHostFactory : System.ServiceModel.Activation.ServiceHostFactory'\n  inheritance:\n  - System.ServiceModel.Activation.ServiceHostFactory\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Activation.WebServiceHostFactory.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Activation.WebServiceHostFactory\n  langs:\n  - csharp\n  name: WebServiceHostFactory()\n  nameWithType: WebServiceHostFactory.WebServiceHostFactory()\n  fullName: System.ServiceModel.Activation.WebServiceHostFactory.WebServiceHostFactory()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel.Web\n  namespace: System.ServiceModel.Activation\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Activation.WebServiceHostFactory\"></xref> class.\n  remarks: This method is not called directly. It is called when a service is being dynamically activated.\n  syntax:\n    content: public WebServiceHostFactory ();\n    parameters: []\n  overload: System.ServiceModel.Activation.WebServiceHostFactory.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Activation.WebServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])\n  id: CreateServiceHost(System.Type,System.Uri[])\n  parent: System.ServiceModel.Activation.WebServiceHostFactory\n  langs:\n  - csharp\n  name: CreateServiceHost(Type,Uri[])\n  nameWithType: WebServiceHostFactory.CreateServiceHost(Type,Uri[])\n  fullName: System.ServiceModel.Activation.WebServiceHostFactory.CreateServiceHost(Type,Uri[])\n  type: Method\n  assemblies:\n  - System.ServiceModel.Web\n  namespace: System.ServiceModel.Activation\n  summary: Creates an instance of the specified <xref href=\"System.ServiceModel.Web.WebServiceHost\"></xref> derived class with the specified base addresses.\n  remarks: Override this method to create the required service host type and perform any needed processing.\n  example:\n  - \"The following example shows a basic implementation of this method.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: protected override System.ServiceModel.ServiceHost CreateServiceHost (Type serviceType, Uri[] baseAddresses);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The type of service host to create.\n    - id: baseAddresses\n      type: System.Uri[]\n      description: An array of base addresses for the service.\n    return:\n      type: System.ServiceModel.ServiceHost\n      description: An instance of a <xref href=\"System.ServiceModel.ServiceHost\"></xref> derived class.\n  overload: System.ServiceModel.Activation.WebServiceHostFactory.CreateServiceHost*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ServiceModel.Activation.ServiceHostFactory\n  isExternal: false\n  name: System.ServiceModel.Activation.ServiceHostFactory\n- uid: System.ServiceModel.Activation.WebServiceHostFactory.#ctor\n  parent: System.ServiceModel.Activation.WebServiceHostFactory\n  isExternal: false\n  name: WebServiceHostFactory()\n  nameWithType: WebServiceHostFactory.WebServiceHostFactory()\n  fullName: System.ServiceModel.Activation.WebServiceHostFactory.WebServiceHostFactory()\n- uid: System.ServiceModel.Activation.WebServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])\n  parent: System.ServiceModel.Activation.WebServiceHostFactory\n  isExternal: false\n  name: CreateServiceHost(Type,Uri[])\n  nameWithType: WebServiceHostFactory.CreateServiceHost(Type,Uri[])\n  fullName: System.ServiceModel.Activation.WebServiceHostFactory.CreateServiceHost(Type,Uri[])\n- uid: System.ServiceModel.ServiceHost\n  parent: System.ServiceModel\n  isExternal: false\n  name: ServiceHost\n  nameWithType: ServiceHost\n  fullName: System.ServiceModel.ServiceHost\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Uri[]\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri[]\n  spec.csharp:\n  - uid: System.Uri\n    name: Uri\n    nameWithType: Uri\n    fullName: Uri[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ServiceModel.Activation.WebServiceHostFactory.#ctor*\n  parent: System.ServiceModel.Activation.WebServiceHostFactory\n  isExternal: false\n  name: WebServiceHostFactory\n  nameWithType: WebServiceHostFactory.WebServiceHostFactory\n- uid: System.ServiceModel.Activation.WebServiceHostFactory.CreateServiceHost*\n  parent: System.ServiceModel.Activation.WebServiceHostFactory\n  isExternal: false\n  name: CreateServiceHost\n  nameWithType: WebServiceHostFactory.CreateServiceHost\n"}