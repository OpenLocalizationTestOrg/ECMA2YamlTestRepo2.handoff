{"nodes":[{"pos":[457,594],"content":"Represents an easing function that creates an animation that accelerates and/or decelerates using the formula <bpt id=\"p1\">*</bpt>f<ept id=\"p1\">*</ept>(<bpt id=\"p2\">*</bpt>t<ept id=\"p2\">*</ept>) = <bpt id=\"p3\">*</bpt>t<ept id=\"p3\">*</ept><bpt id=\"p4\">&lt;sup&gt;</bpt>5<ept id=\"p4\">&lt;/sup&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Represents an easing function that creates an animation that accelerates and/or decelerates using the formula *f*(*t*) = *t*<sup>5</sup>."},{"pos":[607,2369],"content":"You can control whether the animation accelerates, decelerates or both by specifying the <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>. The following graph demonstrates the different values of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> where *f*(*t*) represents the animation progress and *t* represents time.       ![QuinticEase with graphs of different easingmodes.](~/add/media/quinticease-graph.png \"QuinticEase with graphs of different easingmodes.\")       The formula used for this function is the following.       *f*(*t*) = *t*<sup>5</sup>      > [!NOTE] >  You can use <xref:System.Windows.Media.Animation.PowerEase> to create the same behavior as <xref:System.Windows.Media.Animation.CubicEase>, <xref:System.Windows.Media.Animation.QuadraticEase>, <xref:System.Windows.Media.Animation.QuarticEase>, and QuinticEase by using the <xref:System.Windows.Media.Animation.PowerEase.Power%2A> property. For example, if you want to use <xref:System.Windows.Media.Animation.PowerEase> to substitute for <xref:System.Windows.Media.Animation.CubicEase>, specify a <xref:System.Windows.Media.Animation.PowerEase.Power%2A> value of 3.       There are several other easing functions besides QuinticEase which you can explore using the following Silverlight sample.       [Run this sample](http://go.microsoft.com/fwlink/?LinkId=139798&sref=easing_functions_gallery)       In addition to using the easing functions included in the run-time, you can create your own custom easing functions by inheriting from <xref:System.Windows.Media.Animation.EasingFunctionBase>.      <a name=\"xamlObjectElementUsage_QuinticEase\"></a>    ## XAML Object Element Usage      ```   <QuinticEase .../>   ```","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can control whether the animation accelerates, decelerates or both by specifying the &lt;xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A&gt;.","pos":[0,160],"source":"You can control whether the animation accelerates, decelerates or both by specifying the <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>."},{"content":"The following graph demonstrates the different values of &lt;xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A&gt; where <bpt id=\"p1\">*</bpt>f<ept id=\"p1\">*</ept>(<bpt id=\"p2\">*</bpt>t<ept id=\"p2\">*</ept>) represents the animation progress and <bpt id=\"p3\">*</bpt>t<ept id=\"p3\">*</ept> represents time.","pos":[161,362],"source":" The following graph demonstrates the different values of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> where *f*(*t*) represents the animation progress and *t* represents time."},{"content":"<bpt id=\"p1\">![</bpt>QuinticEase with graphs of different easingmodes.<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/quinticease-graph.png \"</bpt>QuinticEase with graphs of different easingmodes.<ept id=\"p2\">\")</ept>","pos":[369,508],"source":"![QuinticEase with graphs of different easingmodes.](~/add/media/quinticease-graph.png \"QuinticEase with graphs of different easingmodes.\")"},{"content":"The formula used for this function is the following.","pos":[515,567]},{"content":"<bpt id=\"p1\">*</bpt>f<ept id=\"p1\">*</ept>(<bpt id=\"p2\">*</bpt>t<ept id=\"p2\">*</ept>) = <bpt id=\"p3\">*</bpt>t<ept id=\"p3\">*</ept><bpt id=\"p4\">&lt;sup&gt;</bpt>5<ept id=\"p4\">&lt;/sup&gt;</ept><ph id=\"ph1\">      &gt; </ph><ph id=\"ph2\">[!NOTE]</ph> &gt;  You can use &lt;xref:System.Windows.Media.Animation.PowerEase&gt; to create the same behavior as &lt;xref:System.Windows.Media.Animation.CubicEase&gt;, &lt;xref:System.Windows.Media.Animation.QuadraticEase&gt;, &lt;xref:System.Windows.Media.Animation.QuarticEase&gt;, and QuinticEase by using the &lt;xref:System.Windows.Media.Animation.PowerEase.Power%2A&gt; property.","pos":[574,958],"source":"*f*(*t*) = *t*<sup>5</sup>      > [!NOTE] >  You can use <xref:System.Windows.Media.Animation.PowerEase> to create the same behavior as <xref:System.Windows.Media.Animation.CubicEase>, <xref:System.Windows.Media.Animation.QuadraticEase>, <xref:System.Windows.Media.Animation.QuarticEase>, and QuinticEase by using the <xref:System.Windows.Media.Animation.PowerEase.Power%2A> property."},{"content":"For example, if you want to use &lt;xref:System.Windows.Media.Animation.PowerEase&gt; to substitute for &lt;xref:System.Windows.Media.Animation.CubicEase&gt;, specify a &lt;xref:System.Windows.Media.Animation.PowerEase.Power%2A&gt; value of 3.","pos":[959,1184],"source":" For example, if you want to use <xref:System.Windows.Media.Animation.PowerEase> to substitute for <xref:System.Windows.Media.Animation.CubicEase>, specify a <xref:System.Windows.Media.Animation.PowerEase.Power%2A> value of 3."},{"content":"There are several other easing functions besides QuinticEase which you can explore using the following Silverlight sample.","pos":[1191,1313]},{"content":"<bpt id=\"p1\">[</bpt>Run this sample<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=139798&amp;sref=easing_functions_gallery)</ept>       In addition to using the easing functions included in the run-time, you can create your own custom easing functions by inheriting from &lt;xref:System.Windows.Media.Animation.EasingFunctionBase&gt;.","pos":[1320,1613],"source":"[Run this sample](http://go.microsoft.com/fwlink/?LinkId=139798&sref=easing_functions_gallery)       In addition to using the easing functions included in the run-time, you can create your own custom easing functions by inheriting from <xref:System.Windows.Media.Animation.EasingFunctionBase>."},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlObjectElementUsage_QuinticEase\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Object Element Usage      <ph id=\"ph1\">```   &lt;QuinticEase .../&gt;   ```</ph>","pos":[1619,1736],"source":"<a name=\"xamlObjectElementUsage_QuinticEase\"></a>    ## XAML Object Element Usage      ```   <QuinticEase .../>   ```"}]},{"pos":[6382,6486],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.QuinticEase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.QuinticEase\"></xref> class."},{"pos":[7080,7232],"content":"Creates a new instance of the <xref href=\"System.Windows.Freezable\"></xref> derived class. When creating a derived class, you must override this method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Freezable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> derived class.","pos":[0,90],"source":"Creates a new instance of the <xref href=\"System.Windows.Freezable\"></xref> derived class."},{"content":"When creating a derived class, you must override this method.","pos":[91,152]}]},{"pos":[7244,7476],"content":"Animation classes inherit indirectly from <xref:System.Windows.Freezable>. Because of this, you need to override the <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> method to construct a custom animation object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Animation classes inherit indirectly from <xref:System.Windows.Freezable>. Because of this, you need to override the <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> method to construct a custom animation object.","pos":[0,232],"nodes":[{"content":"Animation classes inherit indirectly from &lt;xref:System.Windows.Freezable&gt;.","pos":[0,74],"source":"Animation classes inherit indirectly from <xref:System.Windows.Freezable>."},{"content":"Because of this, you need to override the &lt;xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A&gt; method to construct a custom animation object.","pos":[75,232],"source":" Because of this, you need to override the <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> method to construct a custom animation object."}]}]},{"pos":[8120,8137],"content":"The new instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new instance.","pos":[0,17]}]},{"pos":[8687,8872],"content":"Provides the logic portion of the easing function that you can override to produce the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.EasingMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> mode of the custom easing function.","needQuote":true,"needEscape":true,"source":"Provides the logic portion of the easing function that you can override to produce the <xref href=\"System.Windows.Media.Animation.EasingMode\"></xref> mode of the custom easing function."},{"pos":[8885,9463],"content":"This method transforms normalized time to control the pace of an animation for the <xref:System.Windows.Media.Animation.EasingMode> case of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.       You only have to specify your easing function for the <xref:System.Windows.Media.Animation.EasingMode> case because the implementation of the <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> method transforms `normalizedTime` for the <xref:System.Windows.Media.Animation.EasingMode> and <xref:System.Windows.Media.Animation.EasingMode> cases.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method transforms normalized time to control the pace of an animation for the &lt;xref:System.Windows.Media.Animation.EasingMode&gt; case of &lt;xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A&gt;.","pos":[0,211],"source":"This method transforms normalized time to control the pace of an animation for the <xref:System.Windows.Media.Animation.EasingMode> case of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>."},{"content":"You only have to specify your easing function for the &lt;xref:System.Windows.Media.Animation.EasingMode&gt; case because the implementation of the &lt;xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A&gt; method transforms <ph id=\"ph1\">`normalizedTime`</ph> for the &lt;xref:System.Windows.Media.Animation.EasingMode&gt; and &lt;xref:System.Windows.Media.Animation.EasingMode&gt; cases.","pos":[218,576],"source":"       You only have to specify your easing function for the <xref:System.Windows.Media.Animation.EasingMode> case because the implementation of the <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> method transforms `normalizedTime` for the <xref:System.Windows.Media.Animation.EasingMode> and <xref:System.Windows.Media.Animation.EasingMode> cases."}]},{"pos":[9636,9680],"content":"Normalized time (progress) of the animation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Normalized time (progress) of the animation.","pos":[0,44]}]},{"pos":[9738,9788],"content":"A double that represents the transformed progress.","needQuote":true,"needEscape":true,"nodes":[{"content":"A double that represents the transformed progress.","pos":[0,50]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.Animation.QuinticEase\n  id: QuinticEase\n  children:\n  - System.Windows.Media.Animation.QuinticEase.#ctor\n  - System.Windows.Media.Animation.QuinticEase.CreateInstanceCore\n  - System.Windows.Media.Animation.QuinticEase.EaseInCore(System.Double)\n  langs:\n  - csharp\n  name: QuinticEase\n  nameWithType: QuinticEase\n  fullName: System.Windows.Media.Animation.QuinticEase\n  type: Class\n  summary: Represents an easing function that creates an animation that accelerates and/or decelerates using the formula *f*(*t*) = *t*<sup>5</sup>.\n  remarks: \"You can control whether the animation accelerates, decelerates or both by specifying the <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>. The following graph demonstrates the different values of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> where *f*(*t*) represents the animation progress and *t* represents time.  \\n  \\n ![QuinticEase with graphs of different easingmodes.](~/add/media/quinticease-graph.png \\\"QuinticEase with graphs of different easingmodes.\\\")  \\n  \\n The formula used for this function is the following.  \\n  \\n *f*(*t*) = *t*<sup>5</sup>  \\n  \\n> [!NOTE]\\n>  You can use <xref:System.Windows.Media.Animation.PowerEase> to create the same behavior as <xref:System.Windows.Media.Animation.CubicEase>, <xref:System.Windows.Media.Animation.QuadraticEase>, <xref:System.Windows.Media.Animation.QuarticEase>, and QuinticEase by using the <xref:System.Windows.Media.Animation.PowerEase.Power%2A> property. For example, if you want to use <xref:System.Windows.Media.Animation.PowerEase> to substitute for <xref:System.Windows.Media.Animation.CubicEase>, specify a <xref:System.Windows.Media.Animation.PowerEase.Power%2A> value of 3.  \\n  \\n There are several other easing functions besides QuinticEase which you can explore using the following Silverlight sample.  \\n  \\n [Run this sample](http://go.microsoft.com/fwlink/?LinkId=139798&sref=easing_functions_gallery)  \\n  \\n In addition to using the easing functions included in the run-time, you can create your own custom easing functions by inheriting from <xref:System.Windows.Media.Animation.EasingFunctionBase>.  \\n  \\n<a name=\\\"xamlObjectElementUsage_QuinticEase\\\"></a>   \\n## XAML Object Element Usage  \\n  \\n```  \\n<QuinticEase .../>  \\n```\"\n  example:\n  - \"The following example applies a QuinticEase easing function to a <xref:System.Windows.Media.Animation.DoubleAnimation> to create a decelerating animation.  \\n  \\n [!code-xml[QuinticEase#QuinticEase](~/add/codesnippet/xaml/quinticease/window1.xaml#quinticease)]\\n [!code-xml[QuinticEase#QuinticEase](~/add/codesnippet/xaml/t-system.windows.media.a_15_1.xaml)]\"\n  syntax:\n    content: 'public class QuinticEase : System.Windows.Media.Animation.EasingFunctionBase'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Freezable\n  - System.Windows.Media.Animation.EasingFunctionBase\n  implements: []\n  inheritedMembers:\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.Freezable.CanFreeze\n  - System.Windows.Freezable.Changed\n  - System.Windows.Freezable.Clone\n  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CloneCurrentValue\n  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CreateInstance\n  - System.Windows.Freezable.Freeze\n  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  - System.Windows.Freezable.FreezeCore(System.Boolean)\n  - System.Windows.Freezable.GetAsFrozen\n  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.GetCurrentValueAsFrozen\n  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.IsFrozen\n  - System.Windows.Freezable.OnChanged\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.Freezable.ReadPreamble\n  - System.Windows.Freezable.WritePostscript\n  - System.Windows.Freezable.WritePreamble\n  - System.Windows.Media.Animation.EasingFunctionBase.Ease(System.Double)\n  - System.Windows.Media.Animation.EasingFunctionBase.EasingMode\n  - System.Windows.Media.Animation.EasingFunctionBase.EasingModeProperty\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.QuinticEase.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.Animation.QuinticEase\n  langs:\n  - csharp\n  name: QuinticEase()\n  nameWithType: QuinticEase.QuinticEase()\n  fullName: System.Windows.Media.Animation.QuinticEase.QuinticEase()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.QuinticEase\"></xref> class.\n  syntax:\n    content: public QuinticEase ();\n    parameters: []\n  overload: System.Windows.Media.Animation.QuinticEase.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.QuinticEase.CreateInstanceCore\n  id: CreateInstanceCore\n  parent: System.Windows.Media.Animation.QuinticEase\n  langs:\n  - csharp\n  name: CreateInstanceCore()\n  nameWithType: QuinticEase.CreateInstanceCore()\n  fullName: System.Windows.Media.Animation.QuinticEase.CreateInstanceCore()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Creates a new instance of the <xref href=\"System.Windows.Freezable\"></xref> derived class. When creating a derived class, you must override this method.\n  remarks: Animation classes inherit indirectly from <xref:System.Windows.Freezable>. Because of this, you need to override the <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> method to construct a custom animation object.\n  example:\n  - \"The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.  \\n  \\n [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/add/codesnippet/visualbasic/freezablesample_visualbasic/freezablesample.vb#createinstancecoreexample)]\\n [!code-cs[freezablesample_procedural#CreateInstanceCoreExample](~/add/codesnippet/csharp/freezablesample_csharp/freezablesample.cs#createinstancecoreexample)]\"\n  syntax:\n    content: protected override System.Windows.Freezable CreateInstanceCore ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: The new instance.\n  overload: System.Windows.Media.Animation.QuinticEase.CreateInstanceCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.QuinticEase.EaseInCore(System.Double)\n  id: EaseInCore(System.Double)\n  parent: System.Windows.Media.Animation.QuinticEase\n  langs:\n  - csharp\n  name: EaseInCore(Double)\n  nameWithType: QuinticEase.EaseInCore(Double)\n  fullName: System.Windows.Media.Animation.QuinticEase.EaseInCore(Double)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Provides the logic portion of the easing function that you can override to produce the <xref href=\"System.Windows.Media.Animation.EasingMode\"></xref> mode of the custom easing function.\n  remarks: \"This method transforms normalized time to control the pace of an animation for the <xref:System.Windows.Media.Animation.EasingMode> case of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.  \\n  \\n You only have to specify your easing function for the <xref:System.Windows.Media.Animation.EasingMode> case because the implementation of the <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> method transforms `normalizedTime` for the <xref:System.Windows.Media.Animation.EasingMode> and <xref:System.Windows.Media.Animation.EasingMode> cases.\"\n  syntax:\n    content: protected override double EaseInCore (double normalizedTime);\n    parameters:\n    - id: normalizedTime\n      type: System.Double\n      description: Normalized time (progress) of the animation.\n    return:\n      type: System.Double\n      description: A double that represents the transformed progress.\n  overload: System.Windows.Media.Animation.QuinticEase.EaseInCore*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Media.Animation.EasingFunctionBase\n  isExternal: false\n  name: System.Windows.Media.Animation.EasingFunctionBase\n- uid: System.Windows.Media.Animation.QuinticEase.#ctor\n  parent: System.Windows.Media.Animation.QuinticEase\n  isExternal: false\n  name: QuinticEase()\n  nameWithType: QuinticEase.QuinticEase()\n  fullName: System.Windows.Media.Animation.QuinticEase.QuinticEase()\n- uid: System.Windows.Media.Animation.QuinticEase.CreateInstanceCore\n  parent: System.Windows.Media.Animation.QuinticEase\n  isExternal: false\n  name: CreateInstanceCore()\n  nameWithType: QuinticEase.CreateInstanceCore()\n  fullName: System.Windows.Media.Animation.QuinticEase.CreateInstanceCore()\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: false\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.Animation.QuinticEase.EaseInCore(System.Double)\n  parent: System.Windows.Media.Animation.QuinticEase\n  isExternal: false\n  name: EaseInCore(Double)\n  nameWithType: QuinticEase.EaseInCore(Double)\n  fullName: System.Windows.Media.Animation.QuinticEase.EaseInCore(Double)\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.Animation.QuinticEase.#ctor*\n  parent: System.Windows.Media.Animation.QuinticEase\n  isExternal: false\n  name: QuinticEase\n  nameWithType: QuinticEase.QuinticEase\n- uid: System.Windows.Media.Animation.QuinticEase.CreateInstanceCore*\n  parent: System.Windows.Media.Animation.QuinticEase\n  isExternal: false\n  name: CreateInstanceCore\n  nameWithType: QuinticEase.CreateInstanceCore\n- uid: System.Windows.Media.Animation.QuinticEase.EaseInCore*\n  parent: System.Windows.Media.Animation.QuinticEase\n  isExternal: false\n  name: EaseInCore\n  nameWithType: QuinticEase.EaseInCore\n"}