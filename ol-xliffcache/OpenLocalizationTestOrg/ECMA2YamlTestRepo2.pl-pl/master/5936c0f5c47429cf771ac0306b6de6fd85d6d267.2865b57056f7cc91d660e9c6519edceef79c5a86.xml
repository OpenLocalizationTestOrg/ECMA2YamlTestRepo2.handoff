{"nodes":[{"pos":[420,551],"content":"Specifies that an application settings property has a common value for all users of an application. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that an application settings property has a common value for all users of an application. This class cannot be inherited.","pos":[0,131],"nodes":[{"content":"Specifies that an application settings property has a common value for all users of an application.","pos":[0,99]},{"content":"This class cannot be inherited.","pos":[100,131]}]}]},{"pos":[564,1540],"content":"Application settings properties have a scope that is based either at the application or the user level. As the categories imply, application-scoped settings properties present uniform values to all users of the application, whereas user-scoped properties have dedicated values for each user of the application.       The ApplicationScopedSettingAttribute indicates that a property should be considered an application-level setting, and that appropriate storage decisions should be made accordingly by the settings provider.       A scope attribute is required for each settings property. If a property is not applied with either a ApplicationScopedSettingAttribute or <xref:System.Configuration.UserScopedSettingAttribute>, the property is not recognized by the settings provider—it is not serialized. It is invalid, however, to apply both attributes to the same property. Such an attempt will cause a <xref:System.Configuration.ConfigurationErrorsException> to be thrown.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Application settings properties have a scope that is based either at the application or the user level. As the categories imply, application-scoped settings properties present uniform values to all users of the application, whereas user-scoped properties have dedicated values for each user of the application.       The ApplicationScopedSettingAttribute indicates that a property should be considered an application-level setting, and that appropriate storage decisions should be made accordingly by the settings provider.       A scope attribute is required for each settings property. If a property is not applied with either a ApplicationScopedSettingAttribute or <xref:System.Configuration.UserScopedSettingAttribute>, the property is not recognized by the settings provider—it is not serialized. It is invalid, however, to apply both attributes to the same property. Such an attempt will cause a <xref:System.Configuration.ConfigurationErrorsException> to be thrown.","pos":[0,972],"nodes":[{"content":"Application settings properties have a scope that is based either at the application or the user level.","pos":[0,103]},{"content":"As the categories imply, application-scoped settings properties present uniform values to all users of the application, whereas user-scoped properties have dedicated values for each user of the application.","pos":[104,310]},{"content":"The ApplicationScopedSettingAttribute indicates that a property should be considered an application-level setting, and that appropriate storage decisions should be made accordingly by the settings provider.","pos":[317,523]},{"content":"A scope attribute is required for each settings property.","pos":[530,587]},{"content":"If a property is not applied with either a ApplicationScopedSettingAttribute or &lt;xref:System.Configuration.UserScopedSettingAttribute&gt;, the property is not recognized by the settings provider—it is not serialized.","pos":[588,801],"source":" If a property is not applied with either a ApplicationScopedSettingAttribute or <xref:System.Configuration.UserScopedSettingAttribute>, the property is not recognized by the settings provider—it is not serialized."},{"content":"It is invalid, however, to apply both attributes to the same property.","pos":[802,872]},{"content":"Such an attempt will cause a &lt;xref:System.Configuration.ConfigurationErrorsException&gt; to be thrown.","pos":[873,972],"source":" Such an attempt will cause a <xref:System.Configuration.ConfigurationErrorsException> to be thrown."}]}]},{"pos":[2364,2480],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ApplicationScopedSettingAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Configuration.ApplicationScopedSettingAttribute\"></xref> class."},{"pos":[2492,2646],"content":"Each application settings property must be applied with a single scope attribute in order for it to be recognized and serialized by the settings provider.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Each application settings property must be applied with a single scope attribute in order for it to be recognized and serialized by the settings provider.","pos":[0,154]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.ApplicationScopedSettingAttribute\n  id: ApplicationScopedSettingAttribute\n  children:\n  - System.Configuration.ApplicationScopedSettingAttribute.#ctor\n  langs:\n  - csharp\n  name: ApplicationScopedSettingAttribute\n  nameWithType: ApplicationScopedSettingAttribute\n  fullName: System.Configuration.ApplicationScopedSettingAttribute\n  type: Class\n  summary: Specifies that an application settings property has a common value for all users of an application. This class cannot be inherited.\n  remarks: \"Application settings properties have a scope that is based either at the application or the user level. As the categories imply, application-scoped settings properties present uniform values to all users of the application, whereas user-scoped properties have dedicated values for each user of the application.  \\n  \\n The ApplicationScopedSettingAttribute indicates that a property should be considered an application-level setting, and that appropriate storage decisions should be made accordingly by the settings provider.  \\n  \\n A scope attribute is required for each settings property. If a property is not applied with either a ApplicationScopedSettingAttribute or <xref:System.Configuration.UserScopedSettingAttribute>, the property is not recognized by the settings provider—it is not serialized. It is invalid, however, to apply both attributes to the same property. Such an attempt will cause a <xref:System.Configuration.ConfigurationErrorsException> to be thrown.\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Property)]\n\n      public sealed class ApplicationScopedSettingAttribute : System.Configuration.SettingAttribute\n  inheritance:\n  - System.Attribute\n  - System.Configuration.SettingAttribute\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Configuration.ApplicationScopedSettingAttribute.#ctor\n  id: '#ctor'\n  parent: System.Configuration.ApplicationScopedSettingAttribute\n  langs:\n  - csharp\n  name: ApplicationScopedSettingAttribute()\n  nameWithType: ApplicationScopedSettingAttribute.ApplicationScopedSettingAttribute()\n  fullName: System.Configuration.ApplicationScopedSettingAttribute.ApplicationScopedSettingAttribute()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.ApplicationScopedSettingAttribute\"></xref> class.\n  remarks: Each application settings property must be applied with a single scope attribute in order for it to be recognized and serialized by the settings provider.\n  syntax:\n    content: public ApplicationScopedSettingAttribute ();\n    parameters: []\n  overload: System.Configuration.ApplicationScopedSettingAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.SettingAttribute\n  isExternal: false\n  name: System.Configuration.SettingAttribute\n- uid: System.Configuration.ApplicationScopedSettingAttribute.#ctor\n  parent: System.Configuration.ApplicationScopedSettingAttribute\n  isExternal: false\n  name: ApplicationScopedSettingAttribute()\n  nameWithType: ApplicationScopedSettingAttribute.ApplicationScopedSettingAttribute()\n  fullName: System.Configuration.ApplicationScopedSettingAttribute.ApplicationScopedSettingAttribute()\n- uid: System.Configuration.ApplicationScopedSettingAttribute.#ctor*\n  parent: System.Configuration.ApplicationScopedSettingAttribute\n  isExternal: false\n  name: ApplicationScopedSettingAttribute\n  nameWithType: ApplicationScopedSettingAttribute.ApplicationScopedSettingAttribute\n"}