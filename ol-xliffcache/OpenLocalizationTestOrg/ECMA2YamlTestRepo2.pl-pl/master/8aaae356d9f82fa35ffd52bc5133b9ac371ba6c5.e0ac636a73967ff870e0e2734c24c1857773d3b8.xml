{"nodes":[{"pos":[846,905],"content":"Models workflows using the familiar state machine paradigm.","needQuote":true,"needEscape":true,"nodes":[{"content":"Models workflows using the familiar state machine paradigm.","pos":[0,59]}]},{"pos":[2543,2646],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.StateMachine\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Activities.Statements.StateMachine\"></xref> class."},{"pos":[3572,3584],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4407,4419],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4912,5011],"content":"Gets or sets the start state of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.StateMachine\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the start state of the <xref href=\"System.Activities.Statements.StateMachine\"></xref>."},{"pos":[5023,5059],"content":"There must only be one InitialState.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"There must only be one InitialState.","pos":[0,36]}]},{"pos":[5230,5294],"content":"Returns <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.State\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns <xref href=\"System.Activities.Statements.State\"></xref>."},{"pos":[6472,6484],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6570,6582],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7062,7177],"content":"Gets the collection of all root level states in the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.StateMachine\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the collection of all root level states in the <xref href=\"System.Activities.Statements.StateMachine\"></xref>."},{"pos":[7423,7490],"content":"Returns &lt;xref:System.Collections.ObjectModel.Collection%601&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.ObjectModel.Collection%601<ph id=\"ph2\">&amp;gt;</ph>.","pos":[0,67],"source":"Returns &lt;xref:System.Collections.ObjectModel.Collection%601&gt;."}]},{"pos":[7967,8098],"content":"Gets the collection of variables which can be used within the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.StateMachine\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> scope.","needQuote":true,"needEscape":true,"source":"Gets the collection of variables which can be used within the <xref href=\"System.Activities.Statements.StateMachine\"></xref> scope."},{"pos":[8331,8398],"content":"Returns &lt;xref:System.Collections.ObjectModel.Collection%601&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.ObjectModel.Collection%601<ph id=\"ph2\">&amp;gt;</ph>.","pos":[0,67],"source":"Returns &lt;xref:System.Collections.ObjectModel.Collection%601&gt;."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Statements.StateMachine\n  id: StateMachine\n  children:\n  - System.Activities.Statements.StateMachine.#ctor\n  - System.Activities.Statements.StateMachine.CacheMetadata(System.Activities.NativeActivityMetadata)\n  - System.Activities.Statements.StateMachine.Execute(System.Activities.NativeActivityContext)\n  - System.Activities.Statements.StateMachine.InitialState\n  - System.Activities.Statements.StateMachine.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.Statements.StateMachine.States\n  - System.Activities.Statements.StateMachine.Variables\n  langs:\n  - csharp\n  name: StateMachine\n  nameWithType: StateMachine\n  fullName: System.Activities.Statements.StateMachine\n  type: Class\n  summary: Models workflows using the familiar state machine paradigm.\n  syntax:\n    content: >-\n      [System.Windows.Markup.ContentProperty(\"States\")]\n\n      public sealed class StateMachine : System.Activities.NativeActivity\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.NativeActivity\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)\n  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)\n  - System.Activities.NativeActivity.CanInduceIdle\n  - System.Activities.NativeActivity.Implementation\n  - System.Activities.NativeActivity.ImplementationVersion\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  platform:\n  - net462\n- uid: System.Activities.Statements.StateMachine.#ctor\n  id: '#ctor'\n  parent: System.Activities.Statements.StateMachine\n  langs:\n  - csharp\n  name: StateMachine()\n  nameWithType: StateMachine.StateMachine()\n  fullName: System.Activities.Statements.StateMachine.StateMachine()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Initializes a new instance of the <xref href=\"System.Activities.Statements.StateMachine\"></xref> class.\n  syntax:\n    content: public StateMachine ();\n    parameters: []\n  overload: System.Activities.Statements.StateMachine.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.StateMachine.CacheMetadata(System.Activities.NativeActivityMetadata)\n  id: CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.StateMachine\n  langs:\n  - csharp\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: StateMachine.CacheMetadata(NativeActivityMetadata)\n  fullName: System.Activities.Statements.StateMachine.CacheMetadata(NativeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.NativeActivityMetadata\n      description: To be added.\n  overload: System.Activities.Statements.StateMachine.CacheMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.StateMachine.Execute(System.Activities.NativeActivityContext)\n  id: Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.StateMachine\n  langs:\n  - csharp\n  name: Execute(NativeActivityContext)\n  nameWithType: StateMachine.Execute(NativeActivityContext)\n  fullName: System.Activities.Statements.StateMachine.Execute(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Execute (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: To be added.\n  overload: System.Activities.Statements.StateMachine.Execute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.StateMachine.InitialState\n  id: InitialState\n  parent: System.Activities.Statements.StateMachine\n  langs:\n  - csharp\n  name: InitialState\n  nameWithType: StateMachine.InitialState\n  fullName: System.Activities.Statements.StateMachine.InitialState\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Gets or sets the start state of the <xref href=\"System.Activities.Statements.StateMachine\"></xref>.\n  remarks: There must only be one InitialState.\n  syntax:\n    content: public System.Activities.Statements.State InitialState { get; set; }\n    return:\n      type: System.Activities.Statements.State\n      description: Returns <xref href=\"System.Activities.Statements.State\"></xref>.\n  overload: System.Activities.Statements.StateMachine.InitialState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.StateMachine.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  id: OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.Statements.StateMachine\n  langs:\n  - csharp\n  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  nameWithType: StateMachine.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  fullName: System.Activities.Statements.StateMachine.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);\n    parameters:\n    - id: metadata\n      type: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n      description: To be added.\n    - id: originalActivity\n      type: System.Activities.Activity\n      description: To be added.\n  overload: System.Activities.Statements.StateMachine.OnCreateDynamicUpdateMap*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.StateMachine.States\n  id: States\n  parent: System.Activities.Statements.StateMachine\n  langs:\n  - csharp\n  name: States\n  nameWithType: StateMachine.States\n  fullName: System.Activities.Statements.StateMachine.States\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Gets the collection of all root level states in the <xref href=\"System.Activities.Statements.StateMachine\"></xref>.\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.Activities.Statements.State> States { get; }\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Activities.Statements.State}\n      description: Returns &lt;xref:System.Collections.ObjectModel.Collection%601&gt;.\n  overload: System.Activities.Statements.StateMachine.States*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.StateMachine.Variables\n  id: Variables\n  parent: System.Activities.Statements.StateMachine\n  langs:\n  - csharp\n  name: Variables\n  nameWithType: StateMachine.Variables\n  fullName: System.Activities.Statements.StateMachine.Variables\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Gets the collection of variables which can be used within the <xref href=\"System.Activities.Statements.StateMachine\"></xref> scope.\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.Activities.Variable> Variables { get; }\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Activities.Variable}\n      description: Returns &lt;xref:System.Collections.ObjectModel.Collection%601&gt;.\n  overload: System.Activities.Statements.StateMachine.Variables*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.NativeActivity\n  isExternal: false\n  name: System.Activities.NativeActivity\n- uid: System.Activities.Statements.StateMachine.#ctor\n  parent: System.Activities.Statements.StateMachine\n  isExternal: false\n  name: StateMachine()\n  nameWithType: StateMachine.StateMachine()\n  fullName: System.Activities.Statements.StateMachine.StateMachine()\n- uid: System.Activities.Statements.StateMachine.CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.StateMachine\n  isExternal: false\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: StateMachine.CacheMetadata(NativeActivityMetadata)\n  fullName: System.Activities.Statements.StateMachine.CacheMetadata(NativeActivityMetadata)\n- uid: System.Activities.NativeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityMetadata\n  nameWithType: NativeActivityMetadata\n  fullName: System.Activities.NativeActivityMetadata\n- uid: System.Activities.Statements.StateMachine.Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.StateMachine\n  isExternal: false\n  name: Execute(NativeActivityContext)\n  nameWithType: StateMachine.Execute(NativeActivityContext)\n  fullName: System.Activities.Statements.StateMachine.Execute(NativeActivityContext)\n- uid: System.Activities.NativeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityContext\n  nameWithType: NativeActivityContext\n  fullName: System.Activities.NativeActivityContext\n- uid: System.Activities.Statements.StateMachine.InitialState\n  parent: System.Activities.Statements.StateMachine\n  isExternal: false\n  name: InitialState\n  nameWithType: StateMachine.InitialState\n  fullName: System.Activities.Statements.StateMachine.InitialState\n- uid: System.Activities.Statements.State\n  parent: System.Activities.Statements\n  isExternal: false\n  name: State\n  nameWithType: State\n  fullName: System.Activities.Statements.State\n- uid: System.Activities.Statements.StateMachine.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.Statements.StateMachine\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  nameWithType: StateMachine.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  fullName: System.Activities.Statements.StateMachine.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n- uid: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n  parent: System.Activities.DynamicUpdate\n  isExternal: false\n  name: NativeActivityUpdateMapMetadata\n  nameWithType: NativeActivityUpdateMapMetadata\n  fullName: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n- uid: System.Activities.Activity\n  parent: System.Activities\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n- uid: System.Activities.Statements.StateMachine.States\n  parent: System.Activities.Statements.StateMachine\n  isExternal: false\n  name: States\n  nameWithType: StateMachine.States\n  fullName: System.Activities.Statements.StateMachine.States\n- uid: System.Collections.ObjectModel.Collection{System.Activities.Statements.State}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: Collection<State>\n  nameWithType: Collection<State>\n  fullName: System.Collections.ObjectModel.Collection<System.Activities.Statements.State>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: Collection<System.Activities.Statements.State>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Statements.State\n    name: State\n    nameWithType: State\n    fullName: State\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.StateMachine.Variables\n  parent: System.Activities.Statements.StateMachine\n  isExternal: false\n  name: Variables\n  nameWithType: StateMachine.Variables\n  fullName: System.Activities.Statements.StateMachine.Variables\n- uid: System.Collections.ObjectModel.Collection{System.Activities.Variable}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: Collection<Variable>\n  nameWithType: Collection<Variable>\n  fullName: System.Collections.ObjectModel.Collection<System.Activities.Variable>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: Collection<System.Activities.Variable>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Variable\n    name: Variable\n    nameWithType: Variable\n    fullName: Variable\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.StateMachine.#ctor*\n  parent: System.Activities.Statements.StateMachine\n  isExternal: false\n  name: StateMachine\n  nameWithType: StateMachine.StateMachine\n- uid: System.Activities.Statements.StateMachine.CacheMetadata*\n  parent: System.Activities.Statements.StateMachine\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: StateMachine.CacheMetadata\n- uid: System.Activities.Statements.StateMachine.Execute*\n  parent: System.Activities.Statements.StateMachine\n  isExternal: false\n  name: Execute\n  nameWithType: StateMachine.Execute\n- uid: System.Activities.Statements.StateMachine.InitialState*\n  parent: System.Activities.Statements.StateMachine\n  isExternal: false\n  name: InitialState\n  nameWithType: StateMachine.InitialState\n- uid: System.Activities.Statements.StateMachine.OnCreateDynamicUpdateMap*\n  parent: System.Activities.Statements.StateMachine\n  isExternal: false\n  name: OnCreateDynamicUpdateMap\n  nameWithType: StateMachine.OnCreateDynamicUpdateMap\n- uid: System.Activities.Statements.StateMachine.States*\n  parent: System.Activities.Statements.StateMachine\n  isExternal: false\n  name: States\n  nameWithType: StateMachine.States\n- uid: System.Activities.Statements.StateMachine.Variables*\n  parent: System.Activities.Statements.StateMachine\n  isExternal: false\n  name: Variables\n  nameWithType: StateMachine.Variables\n"}