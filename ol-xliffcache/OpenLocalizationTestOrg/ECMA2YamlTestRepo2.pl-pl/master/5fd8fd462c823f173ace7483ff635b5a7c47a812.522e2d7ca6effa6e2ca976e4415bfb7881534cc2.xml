{"nodes":[{"pos":[1784,1888],"content":"Contains a reference to a conceptual model and a data source connection. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains a reference to a conceptual model and a data source connection. This class cannot be inherited.","pos":[0,104],"nodes":[{"content":"Contains a reference to a conceptual model and a data source connection.","pos":[0,72]},{"content":"This class cannot be inherited.","pos":[73,104]}]}]},{"pos":[1901,3457],"content":"To avoid inadvertently putting objects such as <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, EntityConnection must lock its metadata. No changes to the connection string are allowed after the metadata is locked. The following are two scenarios in which metadata is locked:      -   The EntityConnection instance is constructed through the default constructor, or through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> constructor, which accepts a connection string. In either case the connection string might be changed multiple times before the connection is opened. Calling <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata.      -   The EntityConnection instance is constructed through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> constructor, which accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>. In this case, the metadata is locked at construction time. No changes to the connection string are ever allowed.       When metadata is loaded, the EntityConnection verifies that the conceptual model, the storage model, and the mapping file are all present.       For code examples, see [Working with EntityClient](http://msdn.microsoft.com/en-us/dec4728c-8dff-4e30-abe0-0f78fb5d5af5).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"To avoid inadvertently putting objects such as &lt;xref:System.Data.Common.CommandTrees&gt; and &lt;xref:System.Data.Objects.ObjectContext&gt; out of sync with their metadata, EntityConnection must lock its metadata.","pos":[0,204],"source":"To avoid inadvertently putting objects such as <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, EntityConnection must lock its metadata."},{"content":"No changes to the connection string are allowed after the metadata is locked.","pos":[205,282]},{"content":"The following are two scenarios in which metadata is locked:      -   The EntityConnection instance is constructed through the default constructor, or through the &lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29&gt; constructor, which accepts a connection string.","pos":[283,569],"source":" The following are two scenarios in which metadata is locked:      -   The EntityConnection instance is constructed through the default constructor, or through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> constructor, which accepts a connection string."},{"content":"In either case the connection string might be changed multiple times before the connection is opened.","pos":[570,671]},{"content":"Calling &lt;xref:System.Data.EntityClient.EntityConnection.Open%2A&gt; or &lt;xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt; locks the metadata.","pos":[672,832],"source":" Calling <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata."},{"content":"-   The EntityConnection instance is constructed through the &lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29&gt; constructor, which accepts a &lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt; and a &lt;xref:System.Data.Common.DbConnection&gt;.","pos":[838,1162],"source":"      -   The EntityConnection instance is constructed through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> constructor, which accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>."},{"content":"In this case, the metadata is locked at construction time.","pos":[1163,1221]},{"content":"No changes to the connection string are ever allowed.","pos":[1222,1275]},{"content":"When metadata is loaded, the EntityConnection verifies that the conceptual model, the storage model, and the mapping file are all present.","pos":[1282,1420]},{"content":"For code examples, see <bpt id=\"p1\">[</bpt>Working with EntityClient<ept id=\"p1\">](http://msdn.microsoft.com/en-us/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)</ept>.","pos":[1427,1548],"source":"       For code examples, see [Working with EntityClient](http://msdn.microsoft.com/en-us/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)."}]},{"pos":[5500,5603],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.EntityClient.EntityConnection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.EntityClient.EntityConnection\"></xref> class."},{"pos":[5616,7299],"content":"To avoid inadvertently putting objects such as <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, <xref:System.Data.EntityClient.EntityConnection> must lock its metadata. No changes to the connection string are allowed after the metadata is locked. The following are two scenarios in which metadata is locked:      -   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the default constructor, or through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> constructor, which accepts a connection string. In either case the connection string might be changed multiple times before the connection is opened. Calling <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata.      -   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> constructor, which accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>. In this case the metadata is locked at construction time. No changes to the connection string are ever allowed.       When metadata is loaded, the <xref:System.Data.EntityClient.EntityConnection> verifies that the conceptual model, the storage model, and the mapping file are all present.       For code examples, see [Working with EntityClient](http://msdn.microsoft.com/en-us/dec4728c-8dff-4e30-abe0-0f78fb5d5af5).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"To avoid inadvertently putting objects such as &lt;xref:System.Data.Common.CommandTrees&gt; and &lt;xref:System.Data.Objects.ObjectContext&gt; out of sync with their metadata, &lt;xref:System.Data.EntityClient.EntityConnection&gt; must lock its metadata.","pos":[0,236],"source":"To avoid inadvertently putting objects such as <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, <xref:System.Data.EntityClient.EntityConnection> must lock its metadata."},{"content":"No changes to the connection string are allowed after the metadata is locked.","pos":[237,314]},{"content":"The following are two scenarios in which metadata is locked:      -   The &lt;xref:System.Data.EntityClient.EntityConnection&gt; instance is constructed through the default constructor, or through the &lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29&gt; constructor, which accepts a connection string.","pos":[315,633],"source":" The following are two scenarios in which metadata is locked:      -   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the default constructor, or through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> constructor, which accepts a connection string."},{"content":"In either case the connection string might be changed multiple times before the connection is opened.","pos":[634,735]},{"content":"Calling &lt;xref:System.Data.EntityClient.EntityConnection.Open%2A&gt; or &lt;xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt; locks the metadata.","pos":[736,896],"source":" Calling <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata."},{"content":"-   The &lt;xref:System.Data.EntityClient.EntityConnection&gt; instance is constructed through the &lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29&gt; constructor, which accepts a &lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt; and a &lt;xref:System.Data.Common.DbConnection&gt;.","pos":[902,1258],"source":"      -   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> constructor, which accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>."},{"content":"In this case the metadata is locked at construction time.","pos":[1259,1316]},{"content":"No changes to the connection string are ever allowed.","pos":[1317,1370]},{"content":"When metadata is loaded, the &lt;xref:System.Data.EntityClient.EntityConnection&gt; verifies that the conceptual model, the storage model, and the mapping file are all present.","pos":[1377,1547],"source":"       When metadata is loaded, the <xref:System.Data.EntityClient.EntityConnection> verifies that the conceptual model, the storage model, and the mapping file are all present."},{"content":"For code examples, see <bpt id=\"p1\">[</bpt>Working with EntityClient<ept id=\"p1\">](http://msdn.microsoft.com/en-us/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)</ept>.","pos":[1554,1675],"source":"       For code examples, see [Working with EntityClient](http://msdn.microsoft.com/en-us/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)."}]},{"pos":[7919,8054],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.EntityClient.EntityConnection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, based on the connection string.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.EntityClient.EntityConnection\"></xref> class, based on the connection string."},{"pos":[8067,9961],"content":"The  generate a named connection string that is stored in the application's configuration file. This named connection string can be supplied in place of the `connectionString` parameter when you instantiate the <xref:System.Data.EntityClient.EntityConnection> class.       To avoid inadvertently putting objects <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, <xref:System.Data.EntityClient.EntityConnection> must lock its metadata. No changes to the connection string are allowed after the metadata is locked. The following are two scenarios in which metadata is locked:      -   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the default constructor, or through this constructor (EntityConnection), which accepts a connection string. In either case the connection string might be changed multiple times before the connection is opened. Calling <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata.      -   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> constructor, which accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>. In this case the metadata is locked at construction time. No changes to the connection string are ever allowed.       When metadata is loaded, the <xref:System.Data.EntityClient.EntityConnection> verifies that the conceptual model, the storage model, and the mapping file are all present.       For code examples, see [Working with EntityClient](http://msdn.microsoft.com/en-us/dec4728c-8dff-4e30-abe0-0f78fb5d5af5).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The  generate a named connection string that is stored in the application's configuration file.","pos":[0,95]},{"content":"This named connection string can be supplied in place of the <ph id=\"ph1\">`connectionString`</ph> parameter when you instantiate the &lt;xref:System.Data.EntityClient.EntityConnection&gt; class.","pos":[96,266],"source":" This named connection string can be supplied in place of the `connectionString` parameter when you instantiate the <xref:System.Data.EntityClient.EntityConnection> class."},{"content":"To avoid inadvertently putting objects &lt;xref:System.Data.Common.CommandTrees&gt; and &lt;xref:System.Data.Objects.ObjectContext&gt; out of sync with their metadata, &lt;xref:System.Data.EntityClient.EntityConnection&gt; must lock its metadata.","pos":[273,501],"source":"       To avoid inadvertently putting objects <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, <xref:System.Data.EntityClient.EntityConnection> must lock its metadata."},{"content":"No changes to the connection string are allowed after the metadata is locked.","pos":[502,579]},{"content":"The following are two scenarios in which metadata is locked:      -   The &lt;xref:System.Data.EntityClient.EntityConnection&gt; instance is constructed through the default constructor, or through this constructor (EntityConnection), which accepts a connection string.","pos":[580,842],"source":" The following are two scenarios in which metadata is locked:      -   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the default constructor, or through this constructor (EntityConnection), which accepts a connection string."},{"content":"In either case the connection string might be changed multiple times before the connection is opened.","pos":[843,944]},{"content":"Calling &lt;xref:System.Data.EntityClient.EntityConnection.Open%2A&gt; or &lt;xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt; locks the metadata.","pos":[945,1105],"source":" Calling <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata."},{"content":"-   The &lt;xref:System.Data.EntityClient.EntityConnection&gt; instance is constructed through the &lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29&gt; constructor, which accepts a &lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt; and a &lt;xref:System.Data.Common.DbConnection&gt;.","pos":[1111,1467],"source":"      -   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> constructor, which accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>."},{"content":"In this case the metadata is locked at construction time.","pos":[1468,1525]},{"content":"No changes to the connection string are ever allowed.","pos":[1526,1579]},{"content":"When metadata is loaded, the &lt;xref:System.Data.EntityClient.EntityConnection&gt; verifies that the conceptual model, the storage model, and the mapping file are all present.","pos":[1586,1756],"source":"       When metadata is loaded, the <xref:System.Data.EntityClient.EntityConnection> verifies that the conceptual model, the storage model, and the mapping file are all present."},{"content":"For code examples, see <bpt id=\"p1\">[</bpt>Working with EntityClient<ept id=\"p1\">](http://msdn.microsoft.com/en-us/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)</ept>.","pos":[1763,1884],"source":"       For code examples, see [Working with EntityClient](http://msdn.microsoft.com/en-us/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)."}]},{"pos":[10125,10165],"content":"The provider-specific connection string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The provider-specific connection string.","pos":[0,40]}]},{"pos":[10335,10453],"content":"An invalid connection string keyword has been provided, or a required connection string keyword has not been provided.","needQuote":true,"needEscape":true,"nodes":[{"content":"An invalid connection string keyword has been provided, or a required connection string keyword has not been provided.","pos":[0,118]}]},{"pos":[11118,11359],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.EntityClient.EntityConnection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with a specified <bpt id=\"p2\">&lt;xref href=\"System.Data.Metadata.Edm.MetadataWorkspace\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and <bpt id=\"p3\">&lt;xref href=\"System.Data.Common.DbConnection\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.EntityClient.EntityConnection\"></xref> class with a specified <xref href=\"System.Data.Metadata.Edm.MetadataWorkspace\"></xref> and <xref href=\"System.Data.Common.DbConnection\"></xref>."},{"pos":[11372,13002],"content":"This constructor enables you to create an <xref:System.Data.EntityClient.EntityConnection> from metadata that is not from a file on a disk or from an embedded resource in an assembly.       To avoid inadvertently putting objects such as <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, the <xref:System.Data.EntityClient.EntityConnection> must lock its metadata. No changes to the connection string are allowed after the metadata is locked. The following are two scenarios in which metadata is locked:      -   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the default constructor, or through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> constructor, which accepts a connection string. In either case the connection string might be changed multiple times before the connection is opened. Calling <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata.      -   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through this constructor (EntityConnection), which accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>. In this case the metadata is locked at construction time. No changes to the connection string are ever allowed.       When metadata is loaded, the <xref:System.Data.EntityClient.EntityConnection> verifies that the conceptual model, the storage model, and the mapping file are all present.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This constructor enables you to create an <xref:System.Data.EntityClient.EntityConnection> from metadata that is not from a file on a disk or from an embedded resource in an assembly.       To avoid inadvertently putting objects such as <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, the <xref:System.Data.EntityClient.EntityConnection> must lock its metadata. No changes to the connection string are allowed after the metadata is locked. The following are two scenarios in which metadata is locked:      -   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the default constructor, or through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> constructor, which accepts a connection string. In either case the connection string might be changed multiple times before the connection is opened. Calling <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata.      -   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through this constructor (EntityConnection), which accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>. In this case the metadata is locked at construction time. No changes to the connection string are ever allowed.       When metadata is loaded, the <xref:System.Data.EntityClient.EntityConnection> verifies that the conceptual model, the storage model, and the mapping file are all present.","pos":[0,1622],"nodes":[{"content":"This constructor enables you to create an &lt;xref:System.Data.EntityClient.EntityConnection&gt; from metadata that is not from a file on a disk or from an embedded resource in an assembly.","pos":[0,183],"source":"This constructor enables you to create an <xref:System.Data.EntityClient.EntityConnection> from metadata that is not from a file on a disk or from an embedded resource in an assembly."},{"content":"To avoid inadvertently putting objects such as &lt;xref:System.Data.Common.CommandTrees&gt; and &lt;xref:System.Data.Objects.ObjectContext&gt; out of sync with their metadata, the &lt;xref:System.Data.EntityClient.EntityConnection&gt; must lock its metadata.","pos":[190,430],"source":"       To avoid inadvertently putting objects such as <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, the <xref:System.Data.EntityClient.EntityConnection> must lock its metadata."},{"content":"No changes to the connection string are allowed after the metadata is locked.","pos":[431,508]},{"content":"The following are two scenarios in which metadata is locked:      -   The &lt;xref:System.Data.EntityClient.EntityConnection&gt; instance is constructed through the default constructor, or through the &lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29&gt; constructor, which accepts a connection string.","pos":[509,827],"source":" The following are two scenarios in which metadata is locked:      -   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the default constructor, or through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> constructor, which accepts a connection string."},{"content":"In either case the connection string might be changed multiple times before the connection is opened.","pos":[828,929]},{"content":"Calling &lt;xref:System.Data.EntityClient.EntityConnection.Open%2A&gt; or &lt;xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt; locks the metadata.","pos":[930,1090],"source":" Calling <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata."},{"content":"-   The &lt;xref:System.Data.EntityClient.EntityConnection&gt; instance is constructed through this constructor (EntityConnection), which accepts a &lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt; and a &lt;xref:System.Data.Common.DbConnection&gt;.","pos":[1096,1333],"source":"      -   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through this constructor (EntityConnection), which accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>."},{"content":"In this case the metadata is locked at construction time.","pos":[1334,1391]},{"content":"No changes to the connection string are ever allowed.","pos":[1392,1445]},{"content":"When metadata is loaded, the &lt;xref:System.Data.EntityClient.EntityConnection&gt; verifies that the conceptual model, the storage model, and the mapping file are all present.","pos":[1452,1622],"source":"       When metadata is loaded, the <xref:System.Data.EntityClient.EntityConnection> verifies that the conceptual model, the storage model, and the mapping file are all present."}]}]},{"pos":[13261,13417],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.Metadata.Edm.MetadataWorkspace\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to be associated with this <bpt id=\"p2\">&lt;xref href=\"System.Data.EntityClient.EntityConnection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.Metadata.Edm.MetadataWorkspace\"></xref> to be associated with this <xref href=\"System.Data.EntityClient.EntityConnection\"></xref>."},{"pos":[13502,13619],"content":"The underlying data source connection for this <bpt id=\"p1\">&lt;xref href=\"System.Data.EntityClient.EntityConnection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The underlying data source connection for this <xref href=\"System.Data.EntityClient.EntityConnection\"></xref> object."},{"pos":[13797,13925],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">workspace</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">connection</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>workspace</code> or <code>connection</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[14021,14286],"content":"The conceptual model is missing from the workspace.       -or-       The mapping file is missing from the workspace.       -or-       The storage model is missing from the workspace.       -or-       The <code>connection</code> is not in a closed state.","needQuote":false,"needEscape":true,"nodes":[{"content":"The conceptual model is missing from the workspace.","pos":[0,51]},{"content":"-or-       The mapping file is missing from the workspace.","pos":[58,116]},{"content":"-or-       The storage model is missing from the workspace.","pos":[123,182]},{"content":"-or-       The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">connection</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not in a closed state.","pos":[189,253],"source":"       -or-       The <code>connection</code> is not in a closed state."}]},{"pos":[14416,14504],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">connection</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not from an ADO.NET Entity Framework-compatible provider.","needQuote":true,"needEscape":true,"source":"The <code>connection</code> is not from an ADO.NET Entity Framework-compatible provider."},{"pos":[15277,15289],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15366,15378],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15907,15961],"content":"Begins a transaction by using the underlying provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"Begins a transaction by using the underlying provider.","pos":[0,54]}]},{"pos":[15974,16811],"content":"The BeginTransaction method uses the <xref:System.Data.IsolationLevel> transaction isolation level. To specify a different isolation level, call <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>. This value might be interpreted differently by different underlying providers. If you want your application to be portable across multiple providers, it should explicitly specify the transaction isolation level by calling <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>.       At any particular moment there can be no more than one active transaction that was created through BeginTransaction. An attempt to call any of the BeginTransaction overloads on an <xref:System.Data.EntityClient.EntityConnection> that already has a current transaction results in an <xref:System.InvalidOperationException>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The BeginTransaction method uses the <xref:System.Data.IsolationLevel> transaction isolation level. To specify a different isolation level, call <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>. This value might be interpreted differently by different underlying providers. If you want your application to be portable across multiple providers, it should explicitly specify the transaction isolation level by calling <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>.       At any particular moment there can be no more than one active transaction that was created through BeginTransaction. An attempt to call any of the BeginTransaction overloads on an <xref:System.Data.EntityClient.EntityConnection> that already has a current transaction results in an <xref:System.InvalidOperationException>.","pos":[0,835],"nodes":[{"content":"The BeginTransaction method uses the &lt;xref:System.Data.IsolationLevel&gt; transaction isolation level.","pos":[0,99],"source":"The BeginTransaction method uses the <xref:System.Data.IsolationLevel> transaction isolation level."},{"content":"To specify a different isolation level, call &lt;xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A&gt;.","pos":[100,214],"source":" To specify a different isolation level, call <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>."},{"content":"This value might be interpreted differently by different underlying providers.","pos":[215,293]},{"content":"If you want your application to be portable across multiple providers, it should explicitly specify the transaction isolation level by calling &lt;xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A&gt;.","pos":[294,506],"source":" If you want your application to be portable across multiple providers, it should explicitly specify the transaction isolation level by calling <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>."},{"content":"At any particular moment there can be no more than one active transaction that was created through BeginTransaction.","pos":[513,629]},{"content":"An attempt to call any of the BeginTransaction overloads on an &lt;xref:System.Data.EntityClient.EntityConnection&gt; that already has a current transaction results in an &lt;xref:System.InvalidOperationException&gt;.","pos":[630,835],"source":" An attempt to call any of the BeginTransaction overloads on an <xref:System.Data.EntityClient.EntityConnection> that already has a current transaction results in an <xref:System.InvalidOperationException>."}]}]},{"pos":[17012,17308],"content":"A new <xref href=\"System.Data.EntityClient.EntityTransaction\"></xref>. The returned <xref href=\"System.Data.EntityClient.EntityTransaction\"></xref> instance can later be associated with the <xref href=\"System.Data.EntityClient.EntityCommand\"></xref> to execute the command under that transaction.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.EntityClient.EntityTransaction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,70],"source":"A new <xref href=\"System.Data.EntityClient.EntityTransaction\"></xref>."},{"content":"The returned <bpt id=\"p1\">&lt;xref href=\"System.Data.EntityClient.EntityTransaction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance can later be associated with the <bpt id=\"p2\">&lt;xref href=\"System.Data.EntityClient.EntityCommand\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to execute the command under that transaction.","pos":[71,296],"source":" The returned <xref href=\"System.Data.EntityClient.EntityTransaction\"></xref> instance can later be associated with the <xref href=\"System.Data.EntityClient.EntityCommand\"></xref> to execute the command under that transaction."}]},{"pos":[17506,17875],"content":"The underlying provider is not known.       -or-       The call to BeginTransaction was made on an <xref href=\"System.Data.EntityClient.EntityConnection\"></xref> that already has a current transaction.       -or-       The state of the <xref href=\"System.Data.EntityClient.EntityConnection\"></xref> is not <xref href=\"System.Data.ConnectionState\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The underlying provider is not known.","pos":[0,37]},{"content":"-or-       The call to BeginTransaction was made on an <bpt id=\"p1\">&lt;xref href=\"System.Data.EntityClient.EntityConnection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that already has a current transaction.","pos":[44,201],"source":"       -or-       The call to BeginTransaction was made on an <xref href=\"System.Data.EntityClient.EntityConnection\"></xref> that already has a current transaction."},{"content":"-or-       The state of the <bpt id=\"p1\">&lt;xref href=\"System.Data.EntityClient.EntityConnection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is not <bpt id=\"p2\">&lt;xref href=\"System.Data.ConnectionState\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[208,355],"source":"       -or-       The state of the <xref href=\"System.Data.EntityClient.EntityConnection\"></xref> is not <xref href=\"System.Data.ConnectionState\"></xref>."}]},{"pos":[18412,18501],"content":"Begins a transaction with the specified isolation level by using the underlying provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"Begins a transaction with the specified isolation level by using the underlying provider.","pos":[0,89]}]},{"pos":[18513,18939],"content":"At any particular moment there can be no more than one active transaction that was created through <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>. An attempt to call any of the <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A> overloads on an <xref:System.Data.EntityClient.EntityConnection> that already has a current transaction results in an <xref:System.InvalidOperationException>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"At any particular moment there can be no more than one active transaction that was created through <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>. An attempt to call any of the <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A> overloads on an <xref:System.Data.EntityClient.EntityConnection> that already has a current transaction results in an <xref:System.InvalidOperationException>.","pos":[0,426],"nodes":[{"content":"At any particular moment there can be no more than one active transaction that was created through &lt;xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A&gt;.","pos":[0,168],"source":"At any particular moment there can be no more than one active transaction that was created through <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>."},{"content":"An attempt to call any of the &lt;xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A&gt; overloads on an &lt;xref:System.Data.EntityClient.EntityConnection&gt; that already has a current transaction results in an &lt;xref:System.InvalidOperationException&gt;.","pos":[169,426],"source":" An attempt to call any of the <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A> overloads on an <xref:System.Data.EntityClient.EntityConnection> that already has a current transaction results in an <xref:System.InvalidOperationException>."}]}]},{"pos":[19174,19213],"content":"The isolation level of the transaction.","needQuote":true,"needEscape":true,"nodes":[{"content":"The isolation level of the transaction.","pos":[0,39]}]},{"pos":[19300,19596],"content":"A new <xref href=\"System.Data.EntityClient.EntityTransaction\"></xref>. The returned <xref href=\"System.Data.EntityClient.EntityTransaction\"></xref> instance can later be associated with the <xref href=\"System.Data.EntityClient.EntityCommand\"></xref> to execute the command under that transaction.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.EntityClient.EntityTransaction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,70],"source":"A new <xref href=\"System.Data.EntityClient.EntityTransaction\"></xref>."},{"content":"The returned <bpt id=\"p1\">&lt;xref href=\"System.Data.EntityClient.EntityTransaction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance can later be associated with the <bpt id=\"p2\">&lt;xref href=\"System.Data.EntityClient.EntityCommand\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to execute the command under that transaction.","pos":[71,296],"source":" The returned <xref href=\"System.Data.EntityClient.EntityTransaction\"></xref> instance can later be associated with the <xref href=\"System.Data.EntityClient.EntityCommand\"></xref> to execute the command under that transaction."}]},{"pos":[19794,20213],"content":"The underlying provider is not known.       -or-       The call to <xref:System.Data.EntityClient.EntityConnection.BeginTransaction*> was made on an <xref href=\"System.Data.EntityClient.EntityConnection\"></xref> that already has a current transaction.       -or-       The state of the <xref href=\"System.Data.EntityClient.EntityConnection\"></xref> is not <xref href=\"System.Data.ConnectionState\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The underlying provider is not known.","pos":[0,37]},{"content":"-or-       The call to &lt;xref:System.Data.EntityClient.EntityConnection.BeginTransaction*&gt; was made on an <bpt id=\"p1\">&lt;xref href=\"System.Data.EntityClient.EntityConnection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that already has a current transaction.","pos":[44,251],"source":"       -or-       The call to <xref:System.Data.EntityClient.EntityConnection.BeginTransaction*> was made on an <xref href=\"System.Data.EntityClient.EntityConnection\"></xref> that already has a current transaction."},{"content":"-or-       The state of the <bpt id=\"p1\">&lt;xref href=\"System.Data.EntityClient.EntityConnection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is not <bpt id=\"p2\">&lt;xref href=\"System.Data.ConnectionState\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[258,405],"source":"       -or-       The state of the <xref href=\"System.Data.EntityClient.EntityConnection\"></xref> is not <xref href=\"System.Data.ConnectionState\"></xref>."}]},{"pos":[20690,20704],"content":"Not supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not supported.","pos":[0,14]}]},{"pos":[20716,20895],"content":"The ChangeDatabase method is required when deriving from <xref:System.Data.Common.DbConnection>. This method is not supported and will raise a <xref:System.NotSupportedException>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ChangeDatabase method is required when deriving from <xref:System.Data.Common.DbConnection>. This method is not supported and will raise a <xref:System.NotSupportedException>.","pos":[0,179],"nodes":[{"content":"The ChangeDatabase method is required when deriving from &lt;xref:System.Data.Common.DbConnection&gt;.","pos":[0,96],"source":"The ChangeDatabase method is required when deriving from <xref:System.Data.Common.DbConnection>."},{"content":"This method is not supported and will raise a &lt;xref:System.NotSupportedException&gt;.","pos":[97,179],"source":" This method is not supported and will raise a <xref:System.NotSupportedException>."}]}]},{"pos":[21062,21076],"content":"Not supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not supported.","pos":[0,14]}]},{"pos":[21263,21289],"content":"When the method is called.","needQuote":true,"needEscape":true,"nodes":[{"content":"When the method is called.","pos":[0,26]}]},{"pos":[21672,21710],"content":"Closes the connection to the database.","needQuote":true,"needEscape":true,"nodes":[{"content":"Closes the connection to the database.","pos":[0,38]}]},{"pos":[21722,21799],"content":"If the underlying data provider is not known, the call to Close does nothing.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the underlying data provider is not known, the call to Close does nothing.","pos":[0,77]}]},{"pos":[22058,22104],"content":"An error occurred when closing the connection.","needQuote":true,"needEscape":true,"nodes":[{"content":"An error occurred when closing the connection.","pos":[0,46]}]},{"pos":[22538,22636],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Data.EntityClient.EntityConnection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> connection string.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Data.EntityClient.EntityConnection\"></xref> connection string."},{"pos":[29098,29336],"content":"The connection string required to establish the initial connection to a data source. The default value is an empty string. On a closed connection, the currently set value is returned. If no value has been set, an empty string is returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"The connection string required to establish the initial connection to a data source. The default value is an empty string. On a closed connection, the currently set value is returned. If no value has been set, an empty string is returned.","pos":[0,238],"nodes":[{"content":"The connection string required to establish the initial connection to a data source.","pos":[0,84]},{"content":"The default value is an empty string.","pos":[85,122]},{"content":"On a closed connection, the currently set value is returned.","pos":[123,183]},{"content":"If no value has been set, an empty string is returned.","pos":[184,238]}]}]},{"pos":[29533,30105],"content":"An attempt was made to set the ConnectionString property after the [EntityConnection](~/add/includes/ajax-current-ext-md.md)’s <xref href=\"System.Data.Metadata.Edm.MetadataWorkspace\"></xref> was initialized. The [MetadataWorkspace](~/add/includes/ajax-current-ext-md.md) is initialized either when the <xref href=\"System.Data.Odbc.OdbcError\"></xref> instance is constructed through the overload that takes a <xref href=\"System.Data.Odbc.OdbcError\"></xref> as a parameter, or when the <xref href=\"System.Data.EntityClient.EntityConnection\"></xref> instance has been opened.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt was made to set the ConnectionString property after the <bpt id=\"p1\">[</bpt>EntityConnection<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>’s <bpt id=\"p2\">&lt;xref href=\"System.Data.Metadata.Edm.MetadataWorkspace\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> was initialized.","pos":[0,207],"source":"An attempt was made to set the ConnectionString property after the [EntityConnection](~/add/includes/ajax-current-ext-md.md)’s <xref href=\"System.Data.Metadata.Edm.MetadataWorkspace\"></xref> was initialized."},{"content":"The <bpt id=\"p1\">[</bpt>MetadataWorkspace<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> is initialized either when the <bpt id=\"p2\">&lt;xref href=\"System.Data.Odbc.OdbcError\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instance is constructed through the overload that takes a <bpt id=\"p3\">&lt;xref href=\"System.Data.Odbc.OdbcError\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> as a parameter, or when the <bpt id=\"p4\">&lt;xref href=\"System.Data.EntityClient.EntityConnection\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> instance has been opened.","pos":[208,572],"source":" The [MetadataWorkspace](~/add/includes/ajax-current-ext-md.md) is initialized either when the <xref href=\"System.Data.Odbc.OdbcError\"></xref> instance is constructed through the overload that takes a <xref href=\"System.Data.Odbc.OdbcError\"></xref> as a parameter, or when the <xref href=\"System.Data.EntityClient.EntityConnection\"></xref> instance has been opened."}]},{"pos":[30200,30317],"content":"An invalid connection string keyword has been provided or a required connection string keyword has not been provided.","needQuote":true,"needEscape":true,"nodes":[{"content":"An invalid connection string keyword has been provided or a required connection string keyword has not been provided.","pos":[0,117]}]},{"pos":[30756,30883],"content":"Gets the number of seconds to wait when attempting to establish a connection before ending the attempt and generating an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of seconds to wait when attempting to establish a connection before ending the attempt and generating an error.","pos":[0,127]}]},{"pos":[30895,30953],"content":"Returns zero if the underlying data provider is not known.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Returns zero if the underlying data provider is not known.","pos":[0,58]}]},{"pos":[31080,31205],"content":"The time (in seconds) to wait for a connection to open. The default value is the underlying data provider's default time-out.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time (in seconds) to wait for a connection to open. The default value is the underlying data provider's default time-out.","pos":[0,125],"nodes":[{"content":"The time (in seconds) to wait for a connection to open.","pos":[0,55]},{"content":"The default value is the underlying data provider's default time-out.","pos":[56,125]}]}]},{"pos":[31387,31416],"content":"The value set is less than 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value set is less than 0.","pos":[0,29]}]},{"pos":[31839,32071],"content":"Creates a new instance of an <bpt id=\"p1\">&lt;xref href=\"System.Data.EntityClient.EntityCommand\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, with the &lt;xref:System.Data.EntityClient.EntityCommand.Connection*&gt; set to this <bpt id=\"p2\">&lt;xref href=\"System.Data.EntityClient.EntityConnection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates a new instance of an <xref href=\"System.Data.EntityClient.EntityCommand\"></xref>, with the <xref:System.Data.EntityClient.EntityCommand.Connection*> set to this <xref href=\"System.Data.EntityClient.EntityConnection\"></xref>."},{"pos":[32260,32330],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Data.EntityClient.EntityCommand\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Data.EntityClient.EntityCommand\"></xref> object."},{"pos":[32524,32578],"content":"The name of the underlying data provider is not known.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the underlying data provider is not known.","pos":[0,54]}]},{"pos":[33182,33194],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33676,33778],"content":"Gets the name of the current database, or the database that will be used after a connection is opened.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the current database, or the database that will be used after a connection is opened.","pos":[0,102]}]},{"pos":[33790,34119],"content":"For the specific keyword value, such as `Database`, that maps to the Database property, see the documentation for the underlying data provider. For [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] equivalent keywords, see the documentation for the <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"For the specific keyword value, such as <ph id=\"ph1\">`Database`</ph>, that maps to the Database property, see the documentation for the underlying data provider.","pos":[0,143],"source":"For the specific keyword value, such as `Database`, that maps to the Database property, see the documentation for the underlying data provider."},{"content":"For <ph id=\"ph1\">[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]</ph> equivalent keywords, see the documentation for the &lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt; property.","pos":[144,329],"source":" For [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] equivalent keywords, see the documentation for the <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> property."}]},{"pos":[34241,34368],"content":"The value of the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Database\" name=\"Database\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> property of the underlying data provider.","needQuote":true,"needEscape":true,"source":"The value of the <xref uid=\"langword_csharp_Database\" name=\"Database\" href=\"\"></xref> property of the underlying data provider."},{"pos":[34557,34599],"content":"The underlying data provider is not known.","needQuote":true,"needEscape":true,"nodes":[{"content":"The underlying data provider is not known.","pos":[0,42]}]},{"pos":[35003,35069],"content":"Gets the name or network address of the data source to connect to.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name or network address of the data source to connect to.","pos":[0,66]}]},{"pos":[35081,35414],"content":"For the specific keyword value, such as `DataSource`, that maps to the DataSource property, see the documentation for the underlying data provider. For [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] equivalent keywords, see the documentation for the <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"For the specific keyword value, such as <ph id=\"ph1\">`DataSource`</ph>, that maps to the DataSource property, see the documentation for the underlying data provider.","pos":[0,147],"source":"For the specific keyword value, such as `DataSource`, that maps to the DataSource property, see the documentation for the underlying data provider."},{"content":"For <ph id=\"ph1\">[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]</ph> equivalent keywords, see the documentation for the &lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt; property.","pos":[148,333],"source":" For [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] equivalent keywords, see the documentation for the <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> property."}]},{"pos":[35538,35604],"content":"The name of the data source. The default value is an empty string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the data source. The default value is an empty string.","pos":[0,66],"nodes":[{"content":"The name of the data source.","pos":[0,28]},{"content":"The default value is an empty string.","pos":[29,66]}]}]},{"pos":[35795,35837],"content":"The underlying data provider is not known.","needQuote":true,"needEscape":true,"nodes":[{"content":"The underlying data provider is not known.","pos":[0,42]}]},{"pos":[36451,36463],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[37143,37155],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[37777,37882],"content":"Enlists this <bpt id=\"p1\">&lt;xref href=\"System.Data.EntityClient.EntityConnection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in the specified transaction.","needQuote":true,"needEscape":true,"source":"Enlists this <xref href=\"System.Data.EntityClient.EntityConnection\"></xref> in the specified transaction."},{"pos":[37894,38028],"content":"This method forwards the call to the data source connection to explicitly enlist in the passed <xref:System.Transactions.Transaction>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method forwards the call to the data source connection to explicitly enlist in the passed &lt;xref:System.Transactions.Transaction&gt;.","pos":[0,134],"source":"This method forwards the call to the data source connection to explicitly enlist in the passed <xref:System.Transactions.Transaction>."}]},{"pos":[38239,38277],"content":"The transaction object to enlist into.","needQuote":true,"needEscape":true,"nodes":[{"content":"The transaction object to enlist into.","pos":[0,38]}]},{"pos":[38475,38611],"content":"The state of the <bpt id=\"p1\">&lt;xref href=\"System.Data.EntityClient.EntityConnection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is not <bpt id=\"p2\">&lt;xref href=\"System.Data.ConnectionState\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The state of the <xref href=\"System.Data.EntityClient.EntityConnection\"></xref> is not <xref href=\"System.Data.ConnectionState\"></xref>."},{"pos":[39069,39229],"content":"Returns the <bpt id=\"p1\">&lt;xref href=\"System.Data.Metadata.Edm.MetadataWorkspace\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> associated with this <bpt id=\"p2\">&lt;xref href=\"System.Data.EntityClient.EntityConnection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the <xref href=\"System.Data.Metadata.Edm.MetadataWorkspace\"></xref> associated with this <xref href=\"System.Data.EntityClient.EntityConnection\"></xref>."},{"pos":[39242,41274],"content":"A <xref:System.Data.Metadata.Edm.MetadataWorkspace> is automatically created when the <xref:System.Data.EntityClient.EntityConnection> class is created. The creation process might throw metadata-specific exceptions. Metadata is loaded into memory and an Entity Data Model (EDM) application uses that metadata to access information about the underlying data source. For more information, see [ADO.NET Metadata](http://msdn.microsoft.com/en-us/196097a5-a791-4ac4-9e6a-805685d481d5).       To avoid inadvertently putting objects such as <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, <xref:System.Data.EntityClient.EntityConnection> must lock its metadata. No changes to the connection string are allowed after the metadata is locked. The following are two scenarios in which metadata is locked:      -   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the default constructor, or through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> constructor, which accepts a connection string. In either case the connection string may be changed multiple times before the connection is opened. <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata.      -   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> constructor, which accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>. In this case the metadata is locked at construction time. No changes to the connection string are ever allowed.       When metadata is loaded, the <xref:System.Data.EntityClient.EntityConnection> verifies that the conceptual model, the storage model, and the mapping file are all present.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A &lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt; is automatically created when the &lt;xref:System.Data.EntityClient.EntityConnection&gt; class is created.","pos":[0,152],"source":"A <xref:System.Data.Metadata.Edm.MetadataWorkspace> is automatically created when the <xref:System.Data.EntityClient.EntityConnection> class is created."},{"content":"The creation process might throw metadata-specific exceptions.","pos":[153,215]},{"content":"Metadata is loaded into memory and an Entity Data Model (EDM) application uses that metadata to access information about the underlying data source.","pos":[216,364]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>ADO.NET Metadata<ept id=\"p1\">](http://msdn.microsoft.com/en-us/196097a5-a791-4ac4-9e6a-805685d481d5)</ept>.","pos":[365,480],"source":" For more information, see [ADO.NET Metadata](http://msdn.microsoft.com/en-us/196097a5-a791-4ac4-9e6a-805685d481d5)."},{"content":"To avoid inadvertently putting objects such as &lt;xref:System.Data.Common.CommandTrees&gt; and &lt;xref:System.Data.Objects.ObjectContext&gt; out of sync with their metadata, &lt;xref:System.Data.EntityClient.EntityConnection&gt; must lock its metadata.","pos":[487,723],"source":"       To avoid inadvertently putting objects such as <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, <xref:System.Data.EntityClient.EntityConnection> must lock its metadata."},{"content":"No changes to the connection string are allowed after the metadata is locked.","pos":[724,801]},{"content":"The following are two scenarios in which metadata is locked:      -   The &lt;xref:System.Data.EntityClient.EntityConnection&gt; instance is constructed through the default constructor, or through the &lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29&gt; constructor, which accepts a connection string.","pos":[802,1120],"source":" The following are two scenarios in which metadata is locked:      -   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the default constructor, or through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> constructor, which accepts a connection string."},{"content":"In either case the connection string may be changed multiple times before the connection is opened.","pos":[1121,1220]},{"content":"&lt;xref:System.Data.EntityClient.EntityConnection.Open%2A&gt; or &lt;xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt; locks the metadata.","pos":[1221,1373],"source":" <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata."},{"content":"-   The &lt;xref:System.Data.EntityClient.EntityConnection&gt; instance is constructed through the &lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29&gt; constructor, which accepts a &lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt; and a &lt;xref:System.Data.Common.DbConnection&gt;.","pos":[1379,1735],"source":"      -   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> constructor, which accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>."},{"content":"In this case the metadata is locked at construction time.","pos":[1736,1793]},{"content":"No changes to the connection string are ever allowed.","pos":[1794,1847]},{"content":"When metadata is loaded, the &lt;xref:System.Data.EntityClient.EntityConnection&gt; verifies that the conceptual model, the storage model, and the mapping file are all present.","pos":[1854,2024],"source":"       When metadata is loaded, the <xref:System.Data.EntityClient.EntityConnection> verifies that the conceptual model, the storage model, and the mapping file are all present."}]},{"pos":[41479,41631],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Data.Metadata.Edm.MetadataWorkspace\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> associated with this <bpt id=\"p2\">&lt;xref href=\"System.Data.EntityClient.EntityConnection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Data.Metadata.Edm.MetadataWorkspace\"></xref> associated with this <xref href=\"System.Data.EntityClient.EntityConnection\"></xref>."},{"pos":[41826,41958],"content":"The inline connection string contains an invalid <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Metadata\" name=\"Metadata\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> keyword value.","needQuote":true,"needEscape":true,"source":"The inline connection string contains an invalid <xref uid=\"langword_csharp_Metadata\" name=\"Metadata\" href=\"\"></xref> keyword value."},{"pos":[42336,42491],"content":"Establishes a connection to the data source by calling the underlying data provider's<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_ Open\" name=\" Open\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> method.","needQuote":true,"needEscape":true,"source":"Establishes a connection to the data source by calling the underlying data provider's<xref uid=\"langword_csharp_ Open\" name=\" Open\" href=\"\"></xref> method."},{"pos":[42504,44062],"content":"To avoid inadvertently putting objects such as <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, <xref:System.Data.EntityClient.EntityConnection> must lock its metadata. No changes to the connection string are allowed after the metadata is locked. The following are two scenarios in which metadata is locked:      -   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the default constructor, or through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> constructor, which accepts a connection string. In either case the connection string might be changed multiple times before the connection is opened. Calling <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata.      -   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> constructor, which that accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>. In this case the metadata is locked at construction time. No changes to the connection string are ever allowed.       When metadata is loaded, the <xref:System.Data.EntityClient.EntityConnection> verifies that the conceptual model, the storage model, and the mapping file are all present.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"To avoid inadvertently putting objects such as <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, <xref:System.Data.EntityClient.EntityConnection> must lock its metadata. No changes to the connection string are allowed after the metadata is locked. The following are two scenarios in which metadata is locked:      -   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the default constructor, or through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> constructor, which accepts a connection string. In either case the connection string might be changed multiple times before the connection is opened. Calling <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata.      -   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> constructor, which that accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>. In this case the metadata is locked at construction time. No changes to the connection string are ever allowed.       When metadata is loaded, the <xref:System.Data.EntityClient.EntityConnection> verifies that the conceptual model, the storage model, and the mapping file are all present.","pos":[0,1552],"nodes":[{"content":"To avoid inadvertently putting objects such as &lt;xref:System.Data.Common.CommandTrees&gt; and &lt;xref:System.Data.Objects.ObjectContext&gt; out of sync with their metadata, &lt;xref:System.Data.EntityClient.EntityConnection&gt; must lock its metadata.","pos":[0,236],"source":"To avoid inadvertently putting objects such as <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, <xref:System.Data.EntityClient.EntityConnection> must lock its metadata."},{"content":"No changes to the connection string are allowed after the metadata is locked.","pos":[237,314]},{"content":"The following are two scenarios in which metadata is locked:      -   The &lt;xref:System.Data.EntityClient.EntityConnection&gt; instance is constructed through the default constructor, or through the &lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29&gt; constructor, which accepts a connection string.","pos":[315,633],"source":" The following are two scenarios in which metadata is locked:      -   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the default constructor, or through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> constructor, which accepts a connection string."},{"content":"In either case the connection string might be changed multiple times before the connection is opened.","pos":[634,735]},{"content":"Calling &lt;xref:System.Data.EntityClient.EntityConnection.Open%2A&gt; or &lt;xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt; locks the metadata.","pos":[736,896],"source":" Calling <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata."},{"content":"-   The &lt;xref:System.Data.EntityClient.EntityConnection&gt; instance is constructed through the &lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29&gt; constructor, which that accepts a &lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt; and a &lt;xref:System.Data.Common.DbConnection&gt;.","pos":[902,1263],"source":"      -   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> constructor, which that accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>."},{"content":"In this case the metadata is locked at construction time.","pos":[1264,1321]},{"content":"No changes to the connection string are ever allowed.","pos":[1322,1375]},{"content":"When metadata is loaded, the &lt;xref:System.Data.EntityClient.EntityConnection&gt; verifies that the conceptual model, the storage model, and the mapping file are all present.","pos":[1382,1552],"source":"       When metadata is loaded, the <xref:System.Data.EntityClient.EntityConnection> verifies that the conceptual model, the storage model, and the mapping file are all present."}]}]},{"pos":[44320,44423],"content":"An error occurs when you open the connection, or the name of the underlying data provider is not known.","needQuote":true,"needEscape":true,"nodes":[{"content":"An error occurs when you open the connection, or the name of the underlying data provider is not known.","pos":[0,103]}]},{"pos":[44528,44660],"content":"The inline connection string contains an invalid <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Metadata\" name=\"Metadata\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> keyword value.","needQuote":true,"needEscape":true,"source":"The inline connection string contains an invalid <xref uid=\"langword_csharp_Metadata\" name=\"Metadata\" href=\"\"></xref> keyword value."},{"pos":[45079,45171],"content":"Gets a string that contains the version of the data source to which the client is connected.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a string that contains the version of the data source to which the client is connected.","pos":[0,92]}]},{"pos":[45298,45381],"content":"The version of the data source that is contained in the provider connection string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The version of the data source that is contained in the provider connection string.","pos":[0,83]}]},{"pos":[45575,45600],"content":"The connection is closed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The connection is closed.","pos":[0,25]}]},{"pos":[45979,46220],"content":"Gets the <xref href=\"System.Data.ConnectionState\"></xref> property of the underlying provider if the <xref href=\"System.Data.EntityClient.EntityConnection\"></xref> is open. Otherwise, returns <xref href=\"System.Data.ConnectionState\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Data.ConnectionState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> property of the underlying provider if the <bpt id=\"p2\">&lt;xref href=\"System.Data.EntityClient.EntityConnection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is open.","pos":[0,172],"source":"Gets the <xref href=\"System.Data.ConnectionState\"></xref> property of the underlying provider if the <xref href=\"System.Data.EntityClient.EntityConnection\"></xref> is open."},{"content":"Otherwise, returns <bpt id=\"p1\">&lt;xref href=\"System.Data.ConnectionState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[173,241],"source":" Otherwise, returns <xref href=\"System.Data.ConnectionState\"></xref>."}]},{"pos":[46374,46925],"content":"<xref href=\"System.Data.ConnectionState\"></xref>, if and only if both the <xref href=\"System.Data.EntityClient.EntityConnection\"></xref>’s internal state and the underlying provider's <xref href=\"System.Data.ConnectionState\"></xref> are open. If the <xref href=\"System.Data.EntityClient.EntityConnection\"></xref>’s state is open but the provider's <xref href=\"System.Data.ConnectionState\"></xref> is closed, this property returns <xref href=\"System.Data.ConnectionState\"></xref>. Otherwise, it returns <xref href=\"System.Data.ConnectionState\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref href=\"System.Data.ConnectionState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, if and only if both the <bpt id=\"p2\">&lt;xref href=\"System.Data.EntityClient.EntityConnection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>’s internal state and the underlying provider's <bpt id=\"p3\">&lt;xref href=\"System.Data.ConnectionState\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> are open.","pos":[0,242],"source":"<xref href=\"System.Data.ConnectionState\"></xref>, if and only if both the <xref href=\"System.Data.EntityClient.EntityConnection\"></xref>’s internal state and the underlying provider's <xref href=\"System.Data.ConnectionState\"></xref> are open."},{"content":"If the <bpt id=\"p1\">&lt;xref href=\"System.Data.EntityClient.EntityConnection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>’s state is open but the provider's <bpt id=\"p2\">&lt;xref href=\"System.Data.ConnectionState\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is closed, this property returns <bpt id=\"p3\">&lt;xref href=\"System.Data.ConnectionState\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[243,479],"source":" If the <xref href=\"System.Data.EntityClient.EntityConnection\"></xref>’s state is open but the provider's <xref href=\"System.Data.ConnectionState\"></xref> is closed, this property returns <xref href=\"System.Data.ConnectionState\"></xref>."},{"content":"Otherwise, it returns <bpt id=\"p1\">&lt;xref href=\"System.Data.ConnectionState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[480,551],"source":" Otherwise, it returns <xref href=\"System.Data.ConnectionState\"></xref>."}]},{"pos":[47432,47579],"content":"Provides access to the underlying data source connection that is used by the <bpt id=\"p1\">&lt;xref href=\"System.Data.EntityClient.EntityConnection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Provides access to the underlying data source connection that is used by the <xref href=\"System.Data.EntityClient.EntityConnection\"></xref> object."},{"pos":[47592,48469],"content":"If the <xref:System.Data.EntityClient.EntityConnection> object is closed, the returned data source connection will be closed. If it is open, an open data source connection will be returned. If the data source connection information was set, the returned value is always non-null. If there is no data source connection information (for example, if the default constructor was used and no connection string was set afterwards), then a null reference is returned.       The same data source connection used by the Entity Framework can be shared with other parts of an application. The data source connection is returned as a <xref:System.Data.Common.DbConnection> object from the <xref:System.Data.Objects.ObjectContext.Connection%2A> property of <xref:System.Data.Objects.ObjectContext>, or from the StoreConnection property of <xref:System.Data.EntityClient.EntityConnection>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the <xref:System.Data.EntityClient.EntityConnection> object is closed, the returned data source connection will be closed. If it is open, an open data source connection will be returned. If the data source connection information was set, the returned value is always non-null. If there is no data source connection information (for example, if the default constructor was used and no connection string was set afterwards), then a null reference is returned.       The same data source connection used by the Entity Framework can be shared with other parts of an application. The data source connection is returned as a <xref:System.Data.Common.DbConnection> object from the <xref:System.Data.Objects.ObjectContext.Connection%2A> property of <xref:System.Data.Objects.ObjectContext>, or from the StoreConnection property of <xref:System.Data.EntityClient.EntityConnection>.","pos":[0,875],"nodes":[{"content":"If the &lt;xref:System.Data.EntityClient.EntityConnection&gt; object is closed, the returned data source connection will be closed.","pos":[0,125],"source":"If the <xref:System.Data.EntityClient.EntityConnection> object is closed, the returned data source connection will be closed."},{"content":"If it is open, an open data source connection will be returned.","pos":[126,189]},{"content":"If the data source connection information was set, the returned value is always non-null.","pos":[190,279]},{"content":"If there is no data source connection information (for example, if the default constructor was used and no connection string was set afterwards), then a null reference is returned.","pos":[280,460]},{"content":"The same data source connection used by the Entity Framework can be shared with other parts of an application.","pos":[467,577]},{"content":"The data source connection is returned as a &lt;xref:System.Data.Common.DbConnection&gt; object from the &lt;xref:System.Data.Objects.ObjectContext.Connection%2A&gt; property of &lt;xref:System.Data.Objects.ObjectContext&gt;, or from the StoreConnection property of &lt;xref:System.Data.EntityClient.EntityConnection&gt;.","pos":[578,875],"source":" The data source connection is returned as a <xref:System.Data.Common.DbConnection> object from the <xref:System.Data.Objects.ObjectContext.Connection%2A> property of <xref:System.Data.Objects.ObjectContext>, or from the StoreConnection property of <xref:System.Data.EntityClient.EntityConnection>."}]}]},{"pos":[48633,48721],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.DbConnection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the data source connection.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Data.Common.DbConnection\"></xref> for the data source connection."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.EntityClient.EntityConnection\n  id: EntityConnection\n  children:\n  - System.Data.EntityClient.EntityConnection.#ctor\n  - System.Data.EntityClient.EntityConnection.#ctor(System.String)\n  - System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)\n  - System.Data.EntityClient.EntityConnection.BeginDbTransaction(System.Data.IsolationLevel)\n  - System.Data.EntityClient.EntityConnection.BeginTransaction\n  - System.Data.EntityClient.EntityConnection.BeginTransaction(System.Data.IsolationLevel)\n  - System.Data.EntityClient.EntityConnection.ChangeDatabase(System.String)\n  - System.Data.EntityClient.EntityConnection.Close\n  - System.Data.EntityClient.EntityConnection.ConnectionString\n  - System.Data.EntityClient.EntityConnection.ConnectionTimeout\n  - System.Data.EntityClient.EntityConnection.CreateCommand\n  - System.Data.EntityClient.EntityConnection.CreateDbCommand\n  - System.Data.EntityClient.EntityConnection.Database\n  - System.Data.EntityClient.EntityConnection.DataSource\n  - System.Data.EntityClient.EntityConnection.DbProviderFactory\n  - System.Data.EntityClient.EntityConnection.Dispose(System.Boolean)\n  - System.Data.EntityClient.EntityConnection.EnlistTransaction(System.Transactions.Transaction)\n  - System.Data.EntityClient.EntityConnection.GetMetadataWorkspace\n  - System.Data.EntityClient.EntityConnection.Open\n  - System.Data.EntityClient.EntityConnection.ServerVersion\n  - System.Data.EntityClient.EntityConnection.State\n  - System.Data.EntityClient.EntityConnection.StoreConnection\n  langs:\n  - csharp\n  name: EntityConnection\n  nameWithType: EntityConnection\n  fullName: System.Data.EntityClient.EntityConnection\n  type: Class\n  summary: Contains a reference to a conceptual model and a data source connection. This class cannot be inherited.\n  remarks: \"To avoid inadvertently putting objects such as <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, EntityConnection must lock its metadata. No changes to the connection string are allowed after the metadata is locked. The following are two scenarios in which metadata is locked:  \\n  \\n-   The EntityConnection instance is constructed through the default constructor, or through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> constructor, which accepts a connection string. In either case the connection string might be changed multiple times before the connection is opened. Calling <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata.  \\n  \\n-   The EntityConnection instance is constructed through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> constructor, which accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>. In this case, the metadata is locked at construction time. No changes to the connection string are ever allowed.  \\n  \\n When metadata is loaded, the EntityConnection verifies that the conceptual model, the storage model, and the mapping file are all present.  \\n  \\n For code examples, see [Working with EntityClient](http://msdn.microsoft.com/en-us/dec4728c-8dff-4e30-abe0-0f78fb5d5af5).\"\n  syntax:\n    content: 'public sealed class EntityConnection : System.Data.Common.DbConnection'\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.ComponentModel.Component\n  - System.Data.Common.DbConnection\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.Component.CanRaiseEvents\n  - System.ComponentModel.Component.Container\n  - System.ComponentModel.Component.DesignMode\n  - System.ComponentModel.Component.Dispose\n  - System.ComponentModel.Component.Disposed\n  - System.ComponentModel.Component.Events\n  - System.ComponentModel.Component.GetService(System.Type)\n  - System.ComponentModel.Component.Site\n  - System.ComponentModel.Component.ToString\n  - System.Data.Common.DbConnection.GetSchema\n  - System.Data.Common.DbConnection.GetSchema(System.String)\n  - System.Data.Common.DbConnection.GetSchema(System.String,System.String[])\n  - System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)\n  - System.Data.Common.DbConnection.OpenAsync\n  - System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)\n  - System.Data.Common.DbConnection.StateChange\n  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction\n  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)\n  - System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  platform:\n  - net462\n- uid: System.Data.EntityClient.EntityConnection.#ctor\n  id: '#ctor'\n  parent: System.Data.EntityClient.EntityConnection\n  langs:\n  - csharp\n  name: EntityConnection()\n  nameWithType: EntityConnection.EntityConnection()\n  fullName: System.Data.EntityClient.EntityConnection.EntityConnection()\n  type: Constructor\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.EntityClient\n  summary: Initializes a new instance of the <xref href=\"System.Data.EntityClient.EntityConnection\"></xref> class.\n  remarks: \"To avoid inadvertently putting objects such as <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, <xref:System.Data.EntityClient.EntityConnection> must lock its metadata. No changes to the connection string are allowed after the metadata is locked. The following are two scenarios in which metadata is locked:  \\n  \\n-   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the default constructor, or through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> constructor, which accepts a connection string. In either case the connection string might be changed multiple times before the connection is opened. Calling <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata.  \\n  \\n-   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> constructor, which accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>. In this case the metadata is locked at construction time. No changes to the connection string are ever allowed.  \\n  \\n When metadata is loaded, the <xref:System.Data.EntityClient.EntityConnection> verifies that the conceptual model, the storage model, and the mapping file are all present.  \\n  \\n For code examples, see [Working with EntityClient](http://msdn.microsoft.com/en-us/dec4728c-8dff-4e30-abe0-0f78fb5d5af5).\"\n  syntax:\n    content: public EntityConnection ();\n    parameters: []\n  overload: System.Data.EntityClient.EntityConnection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.EntityClient.EntityConnection.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Data.EntityClient.EntityConnection\n  langs:\n  - csharp\n  name: EntityConnection(String)\n  nameWithType: EntityConnection.EntityConnection(String)\n  fullName: System.Data.EntityClient.EntityConnection.EntityConnection(String)\n  type: Constructor\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.EntityClient\n  summary: Initializes a new instance of the <xref href=\"System.Data.EntityClient.EntityConnection\"></xref> class, based on the connection string.\n  remarks: \"The  generate a named connection string that is stored in the application's configuration file. This named connection string can be supplied in place of the `connectionString` parameter when you instantiate the <xref:System.Data.EntityClient.EntityConnection> class.  \\n  \\n To avoid inadvertently putting objects <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, <xref:System.Data.EntityClient.EntityConnection> must lock its metadata. No changes to the connection string are allowed after the metadata is locked. The following are two scenarios in which metadata is locked:  \\n  \\n-   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the default constructor, or through this constructor (EntityConnection), which accepts a connection string. In either case the connection string might be changed multiple times before the connection is opened. Calling <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata.  \\n  \\n-   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> constructor, which accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>. In this case the metadata is locked at construction time. No changes to the connection string are ever allowed.  \\n  \\n When metadata is loaded, the <xref:System.Data.EntityClient.EntityConnection> verifies that the conceptual model, the storage model, and the mapping file are all present.  \\n  \\n For code examples, see [Working with EntityClient](http://msdn.microsoft.com/en-us/dec4728c-8dff-4e30-abe0-0f78fb5d5af5).\"\n  syntax:\n    content: public EntityConnection (string connectionString);\n    parameters:\n    - id: connectionString\n      type: System.String\n      description: The provider-specific connection string.\n  overload: System.Data.EntityClient.EntityConnection.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An invalid connection string keyword has been provided, or a required connection string keyword has not been provided.\n  platform:\n  - net462\n- uid: System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)\n  id: '#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)'\n  parent: System.Data.EntityClient.EntityConnection\n  langs:\n  - csharp\n  name: EntityConnection(MetadataWorkspace,DbConnection)\n  nameWithType: EntityConnection.EntityConnection(MetadataWorkspace,DbConnection)\n  fullName: System.Data.EntityClient.EntityConnection.EntityConnection(MetadataWorkspace,DbConnection)\n  type: Constructor\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.EntityClient\n  summary: Initializes a new instance of the <xref href=\"System.Data.EntityClient.EntityConnection\"></xref> class with a specified <xref href=\"System.Data.Metadata.Edm.MetadataWorkspace\"></xref> and <xref href=\"System.Data.Common.DbConnection\"></xref>.\n  remarks: \"This constructor enables you to create an <xref:System.Data.EntityClient.EntityConnection> from metadata that is not from a file on a disk or from an embedded resource in an assembly.  \\n  \\n To avoid inadvertently putting objects such as <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, the <xref:System.Data.EntityClient.EntityConnection> must lock its metadata. No changes to the connection string are allowed after the metadata is locked. The following are two scenarios in which metadata is locked:  \\n  \\n-   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the default constructor, or through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> constructor, which accepts a connection string. In either case the connection string might be changed multiple times before the connection is opened. Calling <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata.  \\n  \\n-   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through this constructor (EntityConnection), which accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>. In this case the metadata is locked at construction time. No changes to the connection string are ever allowed.  \\n  \\n When metadata is loaded, the <xref:System.Data.EntityClient.EntityConnection> verifies that the conceptual model, the storage model, and the mapping file are all present.\"\n  syntax:\n    content: public EntityConnection (System.Data.Metadata.Edm.MetadataWorkspace workspace, System.Data.Common.DbConnection connection);\n    parameters:\n    - id: workspace\n      type: System.Data.Metadata.Edm.MetadataWorkspace\n      description: A <xref href=\"System.Data.Metadata.Edm.MetadataWorkspace\"></xref> to be associated with this <xref href=\"System.Data.EntityClient.EntityConnection\"></xref>.\n    - id: connection\n      type: System.Data.Common.DbConnection\n      description: The underlying data source connection for this <xref href=\"System.Data.EntityClient.EntityConnection\"></xref> object.\n  overload: System.Data.EntityClient.EntityConnection.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>workspace</code> or <code>connection</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The conceptual model is missing from the workspace.  \\n  \\n -or-  \\n  \\n The mapping file is missing from the workspace.  \\n  \\n -or-  \\n  \\n The storage model is missing from the workspace.  \\n  \\n -or-  \\n  \\n The <code>connection</code> is not in a closed state.\"\n  - type: System.Data.ProviderIncompatibleException\n    commentId: T:System.Data.ProviderIncompatibleException\n    description: The <code>connection</code> is not from an ADO.NET Entity Framework-compatible provider.\n  platform:\n  - net462\n- uid: System.Data.EntityClient.EntityConnection.BeginDbTransaction(System.Data.IsolationLevel)\n  id: BeginDbTransaction(System.Data.IsolationLevel)\n  parent: System.Data.EntityClient.EntityConnection\n  langs:\n  - csharp\n  name: BeginDbTransaction(IsolationLevel)\n  nameWithType: EntityConnection.BeginDbTransaction(IsolationLevel)\n  fullName: System.Data.EntityClient.EntityConnection.BeginDbTransaction(IsolationLevel)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.EntityClient\n  syntax:\n    content: protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);\n    parameters:\n    - id: isolationLevel\n      type: System.Data.IsolationLevel\n      description: To be added.\n    return:\n      type: System.Data.Common.DbTransaction\n      description: To be added.\n  overload: System.Data.EntityClient.EntityConnection.BeginDbTransaction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.EntityClient.EntityConnection.BeginTransaction\n  id: BeginTransaction\n  parent: System.Data.EntityClient.EntityConnection\n  langs:\n  - csharp\n  name: BeginTransaction()\n  nameWithType: EntityConnection.BeginTransaction()\n  fullName: System.Data.EntityClient.EntityConnection.BeginTransaction()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.EntityClient\n  summary: Begins a transaction by using the underlying provider.\n  remarks: \"The BeginTransaction method uses the <xref:System.Data.IsolationLevel> transaction isolation level. To specify a different isolation level, call <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>. This value might be interpreted differently by different underlying providers. If you want your application to be portable across multiple providers, it should explicitly specify the transaction isolation level by calling <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>.  \\n  \\n At any particular moment there can be no more than one active transaction that was created through BeginTransaction. An attempt to call any of the BeginTransaction overloads on an <xref:System.Data.EntityClient.EntityConnection> that already has a current transaction results in an <xref:System.InvalidOperationException>.\"\n  syntax:\n    content: public System.Data.EntityClient.EntityTransaction BeginTransaction ();\n    parameters: []\n    return:\n      type: System.Data.EntityClient.EntityTransaction\n      description: A new <xref href=\"System.Data.EntityClient.EntityTransaction\"></xref>. The returned <xref href=\"System.Data.EntityClient.EntityTransaction\"></xref> instance can later be associated with the <xref href=\"System.Data.EntityClient.EntityCommand\"></xref> to execute the command under that transaction.\n  overload: System.Data.EntityClient.EntityConnection.BeginTransaction*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The underlying provider is not known.  \\n  \\n -or-  \\n  \\n The call to BeginTransaction was made on an <xref href=\\\"System.Data.EntityClient.EntityConnection\\\"></xref> that already has a current transaction.  \\n  \\n -or-  \\n  \\n The state of the <xref href=\\\"System.Data.EntityClient.EntityConnection\\\"></xref> is not <xref href=\\\"System.Data.ConnectionState\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.Data.EntityClient.EntityConnection.BeginTransaction(System.Data.IsolationLevel)\n  id: BeginTransaction(System.Data.IsolationLevel)\n  parent: System.Data.EntityClient.EntityConnection\n  langs:\n  - csharp\n  name: BeginTransaction(IsolationLevel)\n  nameWithType: EntityConnection.BeginTransaction(IsolationLevel)\n  fullName: System.Data.EntityClient.EntityConnection.BeginTransaction(IsolationLevel)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.EntityClient\n  summary: Begins a transaction with the specified isolation level by using the underlying provider.\n  remarks: At any particular moment there can be no more than one active transaction that was created through <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>. An attempt to call any of the <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A> overloads on an <xref:System.Data.EntityClient.EntityConnection> that already has a current transaction results in an <xref:System.InvalidOperationException>.\n  syntax:\n    content: public System.Data.EntityClient.EntityTransaction BeginTransaction (System.Data.IsolationLevel isolationLevel);\n    parameters:\n    - id: isolationLevel\n      type: System.Data.IsolationLevel\n      description: The isolation level of the transaction.\n    return:\n      type: System.Data.EntityClient.EntityTransaction\n      description: A new <xref href=\"System.Data.EntityClient.EntityTransaction\"></xref>. The returned <xref href=\"System.Data.EntityClient.EntityTransaction\"></xref> instance can later be associated with the <xref href=\"System.Data.EntityClient.EntityCommand\"></xref> to execute the command under that transaction.\n  overload: System.Data.EntityClient.EntityConnection.BeginTransaction*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The underlying provider is not known.  \\n  \\n -or-  \\n  \\n The call to <xref:System.Data.EntityClient.EntityConnection.BeginTransaction*> was made on an <xref href=\\\"System.Data.EntityClient.EntityConnection\\\"></xref> that already has a current transaction.  \\n  \\n -or-  \\n  \\n The state of the <xref href=\\\"System.Data.EntityClient.EntityConnection\\\"></xref> is not <xref href=\\\"System.Data.ConnectionState\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.Data.EntityClient.EntityConnection.ChangeDatabase(System.String)\n  id: ChangeDatabase(System.String)\n  parent: System.Data.EntityClient.EntityConnection\n  langs:\n  - csharp\n  name: ChangeDatabase(String)\n  nameWithType: EntityConnection.ChangeDatabase(String)\n  fullName: System.Data.EntityClient.EntityConnection.ChangeDatabase(String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.EntityClient\n  summary: Not supported.\n  remarks: The ChangeDatabase method is required when deriving from <xref:System.Data.Common.DbConnection>. This method is not supported and will raise a <xref:System.NotSupportedException>.\n  syntax:\n    content: public override void ChangeDatabase (string databaseName);\n    parameters:\n    - id: databaseName\n      type: System.String\n      description: Not supported.\n  overload: System.Data.EntityClient.EntityConnection.ChangeDatabase*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: When the method is called.\n  platform:\n  - net462\n- uid: System.Data.EntityClient.EntityConnection.Close\n  id: Close\n  parent: System.Data.EntityClient.EntityConnection\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: EntityConnection.Close()\n  fullName: System.Data.EntityClient.EntityConnection.Close()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.EntityClient\n  summary: Closes the connection to the database.\n  remarks: If the underlying data provider is not known, the call to Close does nothing.\n  syntax:\n    content: public override void Close ();\n    parameters: []\n  overload: System.Data.EntityClient.EntityConnection.Close*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An error occurred when closing the connection.\n  platform:\n  - net462\n- uid: System.Data.EntityClient.EntityConnection.ConnectionString\n  id: ConnectionString\n  parent: System.Data.EntityClient.EntityConnection\n  langs:\n  - csharp\n  name: ConnectionString\n  nameWithType: EntityConnection.ConnectionString\n  fullName: System.Data.EntityClient.EntityConnection.ConnectionString\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.EntityClient\n  summary: Gets or sets the <xref href=\"System.Data.EntityClient.EntityConnection\"></xref> connection string.\n  remarks: \"An `EntityClient` connection string consists of a sequence of keyword/value parameter pairs separated by semicolons. The equals sign (=) connects each keyword and its value. The following table lists the valid names for keyword values in the ConnectionString.  \\n  \\n|Keyword|Description|  \\n|-------------|-----------------|  \\n|`Provider`|Required if the `Name` keyword is not specified. The provider name, which is used to retrieve the <xref:System.Data.Common.DbProviderFactory> object for the underlying provider. This value is constant.<br /><br /> When the `Name` keyword is not included in the connection string, a non-empty value for the `Provider` keyword is required. This keyword is mutually exclusive with the `Name` keyword.|  \\n|`Provider Connection String`|Optional. Specifies the provider-specific connection string that is passed to the underlying data source. This connection string is expressed by using valid keyword/value pairs for the data provider. An invalid `Provider Connection String` will cause a run-time error when it is evaluated by the data source.<br /><br /> This keyword is mutually exclusive with the `Name` keyword.<br /><br /> The value of the `Provider Connection String` must be surrounded by quotes. The following is an example:<br /><br /> `Provider Connection String =\\\"Server=serverName; User ID = userID\\\";`<br /><br /> The following example is not going to work:<br /><br /> `Provider Connection String =Server=serverName; User ID = userID`|  \\n|`Metadata`|Required if the `Name` keyword is not specified. A pipe-delimited list of directories, files, and resource locations in which to look for model and mapping information. The following is an example:<br /><br /> `Metadata=`<br /><br /> `c:\\\\model &#124; c:\\\\model\\\\sql\\\\mapping.msl;`<br /><br /> Blank spaces on each side of the pipe separator are ignored.<br /><br /> This keyword is mutually exclusive with the `Name` keyword.|  \\n|`Name`|The application can optionally specify the connection name in an application configuration file that provides the required keyword/value connection string values. In this case, you cannot supply them directly in the connection string. The `Name` keyword is not allowed in a configuration file.<br /><br /> When the `Name` keyword is not included in the connection string, a non-empty values for Provider keyword is required.<br /><br /> This keyword is mutually exclusive with all the other connection string keywords.|  \\n  \\n The application can supply the keyword/values directly in the ConnectionString property, or it can specify a value for the `Name` keyword. If the `Name` keyword is specified, the connection string keyword/values are retrieved from an application configuration file, as follows:  \\n  \\n `Name=AdventureWorksEntities;`  \\n  \\n If the `Name` keyword is used in the ConnectionString property, other keywords are not allowed. The `Name` keyword refers to a named connection string that is stored in the `connectionStrings` section in an application configuration file, as shown in the following example. The `Provider`, `Metadata`, and `Provider Connection String` values are retrieved from the configuration file at run time.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \\n  \\n The keyword/value pairs can also be supplied directly in the ConnectionString property, as shown in the following example. In this case, the `Name` keyword is not used.  \\n  \\n```  \\n\\\"Provider=System.Data.SqlClient;  \\nMetadata=c:\\\\metadata|c:\\\\Metadata\\\\Sql;  \\nProvider Connection String= 'Data Source=localhost;  \\n    Initial Catalog=AdventureWorks;Integrated Security=True;Connection Timeout=60' \\\"  \\n```  \\n  \\n To avoid inadvertently putting objects such as <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, <xref:System.Data.EntityClient.EntityConnection> must lock its metadata. No changes to the connection string are allowed after the metadata is locked. The following are two scenarios in which metadata is locked:  \\n  \\n-   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the default constructor, or through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> constructor, which accepts a connection string. In either case the connection string might be changed multiple times before the connection is opened. Calling <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata.  \\n  \\n-   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> constructor, which accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>. In this case the metadata is locked at construction time. No changes to the connection string are ever allowed.  \\n  \\n When metadata is loaded, the <xref:System.Data.EntityClient.EntityConnection> verifies that the conceptual model, the storage model, and the mapping file are all present.\"\n  example:\n  - \"The following example demonstrates how to use the <xref:System.Data.EntityClient.EntityConnectionStringBuilder> in conjunction with a <xref:System.Data.SqlClient.SqlConnectionStringBuilder>. The code sets properties of a `SqlConnectionStringBuilder` to create a <xref:System.Data.SqlClient.SqlConnection> string that supplies part of the underlying provider connection string. Note that the `Provider` name cannot be set by using the `SqlConnectionStringBuilder`, because it does not use valid `SqlConnection` syntax. The code creates the <xref:System.Data.EntityClient.EntityConnection> string by setting `EntityConnectionStringBuilder` properties.  \\n  \\n [!code-vb[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/add/codesnippet/visualbasic/eSQLExamplesVB/Program.vb#buildingconnectionstringwithentitycommand)]\\n [!code-cs[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/add/codesnippet/csharp/eSQLExamplesCS/Program.cs#buildingconnectionstringwithentitycommand)]\"\n  syntax:\n    content: public override string ConnectionString { get; set; }\n    return:\n      type: System.String\n      description: The connection string required to establish the initial connection to a data source. The default value is an empty string. On a closed connection, the currently set value is returned. If no value has been set, an empty string is returned.\n  overload: System.Data.EntityClient.EntityConnection.ConnectionString*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to set the ConnectionString property after the [EntityConnection](~/add/includes/ajax-current-ext-md.md)’s <xref href=\"System.Data.Metadata.Edm.MetadataWorkspace\"></xref> was initialized. The [MetadataWorkspace](~/add/includes/ajax-current-ext-md.md) is initialized either when the <xref href=\"System.Data.Odbc.OdbcError\"></xref> instance is constructed through the overload that takes a <xref href=\"System.Data.Odbc.OdbcError\"></xref> as a parameter, or when the <xref href=\"System.Data.EntityClient.EntityConnection\"></xref> instance has been opened.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An invalid connection string keyword has been provided or a required connection string keyword has not been provided.\n  platform:\n  - net462\n- uid: System.Data.EntityClient.EntityConnection.ConnectionTimeout\n  id: ConnectionTimeout\n  parent: System.Data.EntityClient.EntityConnection\n  langs:\n  - csharp\n  name: ConnectionTimeout\n  nameWithType: EntityConnection.ConnectionTimeout\n  fullName: System.Data.EntityClient.EntityConnection.ConnectionTimeout\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.EntityClient\n  summary: Gets the number of seconds to wait when attempting to establish a connection before ending the attempt and generating an error.\n  remarks: Returns zero if the underlying data provider is not known.\n  syntax:\n    content: public override int ConnectionTimeout { get; }\n    return:\n      type: System.Int32\n      description: The time (in seconds) to wait for a connection to open. The default value is the underlying data provider's default time-out.\n  overload: System.Data.EntityClient.EntityConnection.ConnectionTimeout*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The value set is less than 0.\n  platform:\n  - net462\n- uid: System.Data.EntityClient.EntityConnection.CreateCommand\n  id: CreateCommand\n  parent: System.Data.EntityClient.EntityConnection\n  langs:\n  - csharp\n  name: CreateCommand()\n  nameWithType: EntityConnection.CreateCommand()\n  fullName: System.Data.EntityClient.EntityConnection.CreateCommand()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.EntityClient\n  summary: Creates a new instance of an <xref href=\"System.Data.EntityClient.EntityCommand\"></xref>, with the <xref:System.Data.EntityClient.EntityCommand.Connection*> set to this <xref href=\"System.Data.EntityClient.EntityConnection\"></xref>.\n  syntax:\n    content: public System.Data.EntityClient.EntityCommand CreateCommand ();\n    parameters: []\n    return:\n      type: System.Data.EntityClient.EntityCommand\n      description: An <xref href=\"System.Data.EntityClient.EntityCommand\"></xref> object.\n  overload: System.Data.EntityClient.EntityConnection.CreateCommand*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The name of the underlying data provider is not known.\n  platform:\n  - net462\n- uid: System.Data.EntityClient.EntityConnection.CreateDbCommand\n  id: CreateDbCommand\n  parent: System.Data.EntityClient.EntityConnection\n  langs:\n  - csharp\n  name: CreateDbCommand()\n  nameWithType: EntityConnection.CreateDbCommand()\n  fullName: System.Data.EntityClient.EntityConnection.CreateDbCommand()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.EntityClient\n  syntax:\n    content: protected override System.Data.Common.DbCommand CreateDbCommand ();\n    parameters: []\n    return:\n      type: System.Data.Common.DbCommand\n      description: To be added.\n  overload: System.Data.EntityClient.EntityConnection.CreateDbCommand*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.EntityClient.EntityConnection.Database\n  id: Database\n  parent: System.Data.EntityClient.EntityConnection\n  langs:\n  - csharp\n  name: Database\n  nameWithType: EntityConnection.Database\n  fullName: System.Data.EntityClient.EntityConnection.Database\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.EntityClient\n  summary: Gets the name of the current database, or the database that will be used after a connection is opened.\n  remarks: For the specific keyword value, such as `Database`, that maps to the Database property, see the documentation for the underlying data provider. For [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] equivalent keywords, see the documentation for the <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> property.\n  syntax:\n    content: public override string Database { get; }\n    return:\n      type: System.String\n      description: The value of the <xref uid=\"langword_csharp_Database\" name=\"Database\" href=\"\"></xref> property of the underlying data provider.\n  overload: System.Data.EntityClient.EntityConnection.Database*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The underlying data provider is not known.\n  platform:\n  - net462\n- uid: System.Data.EntityClient.EntityConnection.DataSource\n  id: DataSource\n  parent: System.Data.EntityClient.EntityConnection\n  langs:\n  - csharp\n  name: DataSource\n  nameWithType: EntityConnection.DataSource\n  fullName: System.Data.EntityClient.EntityConnection.DataSource\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.EntityClient\n  summary: Gets the name or network address of the data source to connect to.\n  remarks: For the specific keyword value, such as `DataSource`, that maps to the DataSource property, see the documentation for the underlying data provider. For [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] equivalent keywords, see the documentation for the <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> property.\n  syntax:\n    content: public override string DataSource { get; }\n    return:\n      type: System.String\n      description: The name of the data source. The default value is an empty string.\n  overload: System.Data.EntityClient.EntityConnection.DataSource*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The underlying data provider is not known.\n  platform:\n  - net462\n- uid: System.Data.EntityClient.EntityConnection.DbProviderFactory\n  id: DbProviderFactory\n  parent: System.Data.EntityClient.EntityConnection\n  langs:\n  - csharp\n  name: DbProviderFactory\n  nameWithType: EntityConnection.DbProviderFactory\n  fullName: System.Data.EntityClient.EntityConnection.DbProviderFactory\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.EntityClient\n  syntax:\n    content: protected override System.Data.Common.DbProviderFactory DbProviderFactory { get; }\n    return:\n      type: System.Data.Common.DbProviderFactory\n      description: To be added.\n  overload: System.Data.EntityClient.EntityConnection.DbProviderFactory*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.EntityClient.EntityConnection.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Data.EntityClient.EntityConnection\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: EntityConnection.Dispose(Boolean)\n  fullName: System.Data.EntityClient.EntityConnection.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.EntityClient\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: To be added.\n  overload: System.Data.EntityClient.EntityConnection.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.EntityClient.EntityConnection.EnlistTransaction(System.Transactions.Transaction)\n  id: EnlistTransaction(System.Transactions.Transaction)\n  parent: System.Data.EntityClient.EntityConnection\n  langs:\n  - csharp\n  name: EnlistTransaction(Transaction)\n  nameWithType: EntityConnection.EnlistTransaction(Transaction)\n  fullName: System.Data.EntityClient.EntityConnection.EnlistTransaction(Transaction)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.EntityClient\n  summary: Enlists this <xref href=\"System.Data.EntityClient.EntityConnection\"></xref> in the specified transaction.\n  remarks: This method forwards the call to the data source connection to explicitly enlist in the passed <xref:System.Transactions.Transaction>.\n  syntax:\n    content: public override void EnlistTransaction (System.Transactions.Transaction transaction);\n    parameters:\n    - id: transaction\n      type: System.Transactions.Transaction\n      description: The transaction object to enlist into.\n  overload: System.Data.EntityClient.EntityConnection.EnlistTransaction*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The state of the <xref href=\"System.Data.EntityClient.EntityConnection\"></xref> is not <xref href=\"System.Data.ConnectionState\"></xref>.\n  platform:\n  - net462\n- uid: System.Data.EntityClient.EntityConnection.GetMetadataWorkspace\n  id: GetMetadataWorkspace\n  parent: System.Data.EntityClient.EntityConnection\n  langs:\n  - csharp\n  name: GetMetadataWorkspace()\n  nameWithType: EntityConnection.GetMetadataWorkspace()\n  fullName: System.Data.EntityClient.EntityConnection.GetMetadataWorkspace()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.EntityClient\n  summary: Returns the <xref href=\"System.Data.Metadata.Edm.MetadataWorkspace\"></xref> associated with this <xref href=\"System.Data.EntityClient.EntityConnection\"></xref>.\n  remarks: \"A <xref:System.Data.Metadata.Edm.MetadataWorkspace> is automatically created when the <xref:System.Data.EntityClient.EntityConnection> class is created. The creation process might throw metadata-specific exceptions. Metadata is loaded into memory and an Entity Data Model (EDM) application uses that metadata to access information about the underlying data source. For more information, see [ADO.NET Metadata](http://msdn.microsoft.com/en-us/196097a5-a791-4ac4-9e6a-805685d481d5).  \\n  \\n To avoid inadvertently putting objects such as <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, <xref:System.Data.EntityClient.EntityConnection> must lock its metadata. No changes to the connection string are allowed after the metadata is locked. The following are two scenarios in which metadata is locked:  \\n  \\n-   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the default constructor, or through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> constructor, which accepts a connection string. In either case the connection string may be changed multiple times before the connection is opened. <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata.  \\n  \\n-   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> constructor, which accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>. In this case the metadata is locked at construction time. No changes to the connection string are ever allowed.  \\n  \\n When metadata is loaded, the <xref:System.Data.EntityClient.EntityConnection> verifies that the conceptual model, the storage model, and the mapping file are all present.\"\n  syntax:\n    content: public System.Data.Metadata.Edm.MetadataWorkspace GetMetadataWorkspace ();\n    parameters: []\n    return:\n      type: System.Data.Metadata.Edm.MetadataWorkspace\n      description: The <xref href=\"System.Data.Metadata.Edm.MetadataWorkspace\"></xref> associated with this <xref href=\"System.Data.EntityClient.EntityConnection\"></xref>.\n  overload: System.Data.EntityClient.EntityConnection.GetMetadataWorkspace*\n  exceptions:\n  - type: System.Data.MetadataException\n    commentId: T:System.Data.MetadataException\n    description: The inline connection string contains an invalid <xref uid=\"langword_csharp_Metadata\" name=\"Metadata\" href=\"\"></xref> keyword value.\n  platform:\n  - net462\n- uid: System.Data.EntityClient.EntityConnection.Open\n  id: Open\n  parent: System.Data.EntityClient.EntityConnection\n  langs:\n  - csharp\n  name: Open()\n  nameWithType: EntityConnection.Open()\n  fullName: System.Data.EntityClient.EntityConnection.Open()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.EntityClient\n  summary: Establishes a connection to the data source by calling the underlying data provider's<xref uid=\"langword_csharp_ Open\" name=\" Open\" href=\"\"></xref> method.\n  remarks: \"To avoid inadvertently putting objects such as <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, <xref:System.Data.EntityClient.EntityConnection> must lock its metadata. No changes to the connection string are allowed after the metadata is locked. The following are two scenarios in which metadata is locked:  \\n  \\n-   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the default constructor, or through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> constructor, which accepts a connection string. In either case the connection string might be changed multiple times before the connection is opened. Calling <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata.  \\n  \\n-   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> constructor, which that accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>. In this case the metadata is locked at construction time. No changes to the connection string are ever allowed.  \\n  \\n When metadata is loaded, the <xref:System.Data.EntityClient.EntityConnection> verifies that the conceptual model, the storage model, and the mapping file are all present.\"\n  syntax:\n    content: public override void Open ();\n    parameters: []\n  overload: System.Data.EntityClient.EntityConnection.Open*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An error occurs when you open the connection, or the name of the underlying data provider is not known.\n  - type: System.Data.MetadataException\n    commentId: T:System.Data.MetadataException\n    description: The inline connection string contains an invalid <xref uid=\"langword_csharp_Metadata\" name=\"Metadata\" href=\"\"></xref> keyword value.\n  platform:\n  - net462\n- uid: System.Data.EntityClient.EntityConnection.ServerVersion\n  id: ServerVersion\n  parent: System.Data.EntityClient.EntityConnection\n  langs:\n  - csharp\n  name: ServerVersion\n  nameWithType: EntityConnection.ServerVersion\n  fullName: System.Data.EntityClient.EntityConnection.ServerVersion\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.EntityClient\n  summary: Gets a string that contains the version of the data source to which the client is connected.\n  syntax:\n    content: public override string ServerVersion { get; }\n    return:\n      type: System.String\n      description: The version of the data source that is contained in the provider connection string.\n  overload: System.Data.EntityClient.EntityConnection.ServerVersion*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The connection is closed.\n  platform:\n  - net462\n- uid: System.Data.EntityClient.EntityConnection.State\n  id: State\n  parent: System.Data.EntityClient.EntityConnection\n  langs:\n  - csharp\n  name: State\n  nameWithType: EntityConnection.State\n  fullName: System.Data.EntityClient.EntityConnection.State\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.EntityClient\n  summary: Gets the <xref href=\"System.Data.ConnectionState\"></xref> property of the underlying provider if the <xref href=\"System.Data.EntityClient.EntityConnection\"></xref> is open. Otherwise, returns <xref href=\"System.Data.ConnectionState\"></xref>.\n  syntax:\n    content: public override System.Data.ConnectionState State { get; }\n    return:\n      type: System.Data.ConnectionState\n      description: <xref href=\"System.Data.ConnectionState\"></xref>, if and only if both the <xref href=\"System.Data.EntityClient.EntityConnection\"></xref>’s internal state and the underlying provider's <xref href=\"System.Data.ConnectionState\"></xref> are open. If the <xref href=\"System.Data.EntityClient.EntityConnection\"></xref>’s state is open but the provider's <xref href=\"System.Data.ConnectionState\"></xref> is closed, this property returns <xref href=\"System.Data.ConnectionState\"></xref>. Otherwise, it returns <xref href=\"System.Data.ConnectionState\"></xref>.\n  overload: System.Data.EntityClient.EntityConnection.State*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.EntityClient.EntityConnection.StoreConnection\n  id: StoreConnection\n  parent: System.Data.EntityClient.EntityConnection\n  langs:\n  - csharp\n  name: StoreConnection\n  nameWithType: EntityConnection.StoreConnection\n  fullName: System.Data.EntityClient.EntityConnection.StoreConnection\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.EntityClient\n  summary: Provides access to the underlying data source connection that is used by the <xref href=\"System.Data.EntityClient.EntityConnection\"></xref> object.\n  remarks: \"If the <xref:System.Data.EntityClient.EntityConnection> object is closed, the returned data source connection will be closed. If it is open, an open data source connection will be returned. If the data source connection information was set, the returned value is always non-null. If there is no data source connection information (for example, if the default constructor was used and no connection string was set afterwards), then a null reference is returned.  \\n  \\n The same data source connection used by the Entity Framework can be shared with other parts of an application. The data source connection is returned as a <xref:System.Data.Common.DbConnection> object from the <xref:System.Data.Objects.ObjectContext.Connection%2A> property of <xref:System.Data.Objects.ObjectContext>, or from the StoreConnection property of <xref:System.Data.EntityClient.EntityConnection>.\"\n  syntax:\n    content: public System.Data.Common.DbConnection StoreConnection { get; }\n    return:\n      type: System.Data.Common.DbConnection\n      description: The <xref href=\"System.Data.Common.DbConnection\"></xref> for the data source connection.\n  overload: System.Data.EntityClient.EntityConnection.StoreConnection*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Data.Common.DbConnection\n  isExternal: false\n  name: System.Data.Common.DbConnection\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Data.ProviderIncompatibleException\n  parent: System.Data\n  isExternal: false\n  name: ProviderIncompatibleException\n  nameWithType: ProviderIncompatibleException\n  fullName: System.Data.ProviderIncompatibleException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.Data.MetadataException\n  parent: System.Data\n  isExternal: false\n  name: MetadataException\n  nameWithType: MetadataException\n  fullName: System.Data.MetadataException\n- uid: System.Data.EntityClient.EntityConnection.#ctor\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: EntityConnection()\n  nameWithType: EntityConnection.EntityConnection()\n  fullName: System.Data.EntityClient.EntityConnection.EntityConnection()\n- uid: System.Data.EntityClient.EntityConnection.#ctor(System.String)\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: EntityConnection(String)\n  nameWithType: EntityConnection.EntityConnection(String)\n  fullName: System.Data.EntityClient.EntityConnection.EntityConnection(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: EntityConnection(MetadataWorkspace,DbConnection)\n  nameWithType: EntityConnection.EntityConnection(MetadataWorkspace,DbConnection)\n  fullName: System.Data.EntityClient.EntityConnection.EntityConnection(MetadataWorkspace,DbConnection)\n- uid: System.Data.Metadata.Edm.MetadataWorkspace\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: MetadataWorkspace\n  nameWithType: MetadataWorkspace\n  fullName: System.Data.Metadata.Edm.MetadataWorkspace\n- uid: System.Data.EntityClient.EntityConnection.BeginDbTransaction(System.Data.IsolationLevel)\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: BeginDbTransaction(IsolationLevel)\n  nameWithType: EntityConnection.BeginDbTransaction(IsolationLevel)\n  fullName: System.Data.EntityClient.EntityConnection.BeginDbTransaction(IsolationLevel)\n- uid: System.Data.Common.DbTransaction\n  parent: System.Data.Common\n  isExternal: false\n  name: DbTransaction\n  nameWithType: DbTransaction\n  fullName: System.Data.Common.DbTransaction\n- uid: System.Data.IsolationLevel\n  parent: System.Data\n  isExternal: false\n  name: IsolationLevel\n  nameWithType: IsolationLevel\n  fullName: System.Data.IsolationLevel\n- uid: System.Data.EntityClient.EntityConnection.BeginTransaction\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: BeginTransaction()\n  nameWithType: EntityConnection.BeginTransaction()\n  fullName: System.Data.EntityClient.EntityConnection.BeginTransaction()\n- uid: System.Data.EntityClient.EntityTransaction\n  parent: System.Data.EntityClient\n  isExternal: false\n  name: EntityTransaction\n  nameWithType: EntityTransaction\n  fullName: System.Data.EntityClient.EntityTransaction\n- uid: System.Data.EntityClient.EntityConnection.BeginTransaction(System.Data.IsolationLevel)\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: BeginTransaction(IsolationLevel)\n  nameWithType: EntityConnection.BeginTransaction(IsolationLevel)\n  fullName: System.Data.EntityClient.EntityConnection.BeginTransaction(IsolationLevel)\n- uid: System.Data.EntityClient.EntityConnection.ChangeDatabase(System.String)\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: ChangeDatabase(String)\n  nameWithType: EntityConnection.ChangeDatabase(String)\n  fullName: System.Data.EntityClient.EntityConnection.ChangeDatabase(String)\n- uid: System.Data.EntityClient.EntityConnection.Close\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: Close()\n  nameWithType: EntityConnection.Close()\n  fullName: System.Data.EntityClient.EntityConnection.Close()\n- uid: System.Data.EntityClient.EntityConnection.ConnectionString\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: ConnectionString\n  nameWithType: EntityConnection.ConnectionString\n  fullName: System.Data.EntityClient.EntityConnection.ConnectionString\n- uid: System.Data.EntityClient.EntityConnection.ConnectionTimeout\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: ConnectionTimeout\n  nameWithType: EntityConnection.ConnectionTimeout\n  fullName: System.Data.EntityClient.EntityConnection.ConnectionTimeout\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.EntityClient.EntityConnection.CreateCommand\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: CreateCommand()\n  nameWithType: EntityConnection.CreateCommand()\n  fullName: System.Data.EntityClient.EntityConnection.CreateCommand()\n- uid: System.Data.EntityClient.EntityCommand\n  parent: System.Data.EntityClient\n  isExternal: false\n  name: EntityCommand\n  nameWithType: EntityCommand\n  fullName: System.Data.EntityClient.EntityCommand\n- uid: System.Data.EntityClient.EntityConnection.CreateDbCommand\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: CreateDbCommand()\n  nameWithType: EntityConnection.CreateDbCommand()\n  fullName: System.Data.EntityClient.EntityConnection.CreateDbCommand()\n- uid: System.Data.Common.DbCommand\n  parent: System.Data.Common\n  isExternal: false\n  name: DbCommand\n  nameWithType: DbCommand\n  fullName: System.Data.Common.DbCommand\n- uid: System.Data.EntityClient.EntityConnection.Database\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: Database\n  nameWithType: EntityConnection.Database\n  fullName: System.Data.EntityClient.EntityConnection.Database\n- uid: System.Data.EntityClient.EntityConnection.DataSource\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: DataSource\n  nameWithType: EntityConnection.DataSource\n  fullName: System.Data.EntityClient.EntityConnection.DataSource\n- uid: System.Data.EntityClient.EntityConnection.DbProviderFactory\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: DbProviderFactory\n  nameWithType: EntityConnection.DbProviderFactory\n  fullName: System.Data.EntityClient.EntityConnection.DbProviderFactory\n- uid: System.Data.Common.DbProviderFactory\n  parent: System.Data.Common\n  isExternal: false\n  name: DbProviderFactory\n  nameWithType: DbProviderFactory\n  fullName: System.Data.Common.DbProviderFactory\n- uid: System.Data.EntityClient.EntityConnection.Dispose(System.Boolean)\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: EntityConnection.Dispose(Boolean)\n  fullName: System.Data.EntityClient.EntityConnection.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.EntityClient.EntityConnection.EnlistTransaction(System.Transactions.Transaction)\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: EnlistTransaction(Transaction)\n  nameWithType: EntityConnection.EnlistTransaction(Transaction)\n  fullName: System.Data.EntityClient.EntityConnection.EnlistTransaction(Transaction)\n- uid: System.Transactions.Transaction\n  parent: System.Transactions\n  isExternal: false\n  name: Transaction\n  nameWithType: Transaction\n  fullName: System.Transactions.Transaction\n- uid: System.Data.EntityClient.EntityConnection.GetMetadataWorkspace\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: GetMetadataWorkspace()\n  nameWithType: EntityConnection.GetMetadataWorkspace()\n  fullName: System.Data.EntityClient.EntityConnection.GetMetadataWorkspace()\n- uid: System.Data.EntityClient.EntityConnection.Open\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: Open()\n  nameWithType: EntityConnection.Open()\n  fullName: System.Data.EntityClient.EntityConnection.Open()\n- uid: System.Data.EntityClient.EntityConnection.ServerVersion\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: ServerVersion\n  nameWithType: EntityConnection.ServerVersion\n  fullName: System.Data.EntityClient.EntityConnection.ServerVersion\n- uid: System.Data.EntityClient.EntityConnection.State\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: State\n  nameWithType: EntityConnection.State\n  fullName: System.Data.EntityClient.EntityConnection.State\n- uid: System.Data.ConnectionState\n  parent: System.Data\n  isExternal: false\n  name: ConnectionState\n  nameWithType: ConnectionState\n  fullName: System.Data.ConnectionState\n- uid: System.Data.EntityClient.EntityConnection.StoreConnection\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: StoreConnection\n  nameWithType: EntityConnection.StoreConnection\n  fullName: System.Data.EntityClient.EntityConnection.StoreConnection\n- uid: System.Data.EntityClient.EntityConnection.#ctor*\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: EntityConnection\n  nameWithType: EntityConnection.EntityConnection\n- uid: System.Data.EntityClient.EntityConnection.BeginDbTransaction*\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: BeginDbTransaction\n  nameWithType: EntityConnection.BeginDbTransaction\n- uid: System.Data.EntityClient.EntityConnection.BeginTransaction*\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: BeginTransaction\n  nameWithType: EntityConnection.BeginTransaction\n- uid: System.Data.EntityClient.EntityConnection.ChangeDatabase*\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: ChangeDatabase\n  nameWithType: EntityConnection.ChangeDatabase\n- uid: System.Data.EntityClient.EntityConnection.Close*\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: Close\n  nameWithType: EntityConnection.Close\n- uid: System.Data.EntityClient.EntityConnection.ConnectionString*\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: ConnectionString\n  nameWithType: EntityConnection.ConnectionString\n- uid: System.Data.EntityClient.EntityConnection.ConnectionTimeout*\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: ConnectionTimeout\n  nameWithType: EntityConnection.ConnectionTimeout\n- uid: System.Data.EntityClient.EntityConnection.CreateCommand*\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: CreateCommand\n  nameWithType: EntityConnection.CreateCommand\n- uid: System.Data.EntityClient.EntityConnection.CreateDbCommand*\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: CreateDbCommand\n  nameWithType: EntityConnection.CreateDbCommand\n- uid: System.Data.EntityClient.EntityConnection.Database*\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: Database\n  nameWithType: EntityConnection.Database\n- uid: System.Data.EntityClient.EntityConnection.DataSource*\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: DataSource\n  nameWithType: EntityConnection.DataSource\n- uid: System.Data.EntityClient.EntityConnection.DbProviderFactory*\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: DbProviderFactory\n  nameWithType: EntityConnection.DbProviderFactory\n- uid: System.Data.EntityClient.EntityConnection.Dispose*\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: Dispose\n  nameWithType: EntityConnection.Dispose\n- uid: System.Data.EntityClient.EntityConnection.EnlistTransaction*\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: EnlistTransaction\n  nameWithType: EntityConnection.EnlistTransaction\n- uid: System.Data.EntityClient.EntityConnection.GetMetadataWorkspace*\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: GetMetadataWorkspace\n  nameWithType: EntityConnection.GetMetadataWorkspace\n- uid: System.Data.EntityClient.EntityConnection.Open*\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: Open\n  nameWithType: EntityConnection.Open\n- uid: System.Data.EntityClient.EntityConnection.ServerVersion*\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: ServerVersion\n  nameWithType: EntityConnection.ServerVersion\n- uid: System.Data.EntityClient.EntityConnection.State*\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: State\n  nameWithType: EntityConnection.State\n- uid: System.Data.EntityClient.EntityConnection.StoreConnection*\n  parent: System.Data.EntityClient.EntityConnection\n  isExternal: false\n  name: StoreConnection\n  nameWithType: EntityConnection.StoreConnection\n"}