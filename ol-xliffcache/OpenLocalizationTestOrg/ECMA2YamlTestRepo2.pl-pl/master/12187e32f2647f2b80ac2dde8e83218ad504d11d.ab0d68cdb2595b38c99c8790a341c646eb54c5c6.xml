{"nodes":[{"pos":[1676,1719],"content":"The basic 128-bit security algorithm suite.","needQuote":true,"needEscape":true,"nodes":[{"content":"The basic 128-bit security algorithm suite.","pos":[0,43]}]},{"pos":[4677,4797],"content":"Creates and initializes an instance of <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates and initializes an instance of <xref href=\"System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\"></xref>."},{"pos":[5569,5632],"content":"Gets the default asymmetric key wrap algorithm, RsaOaepKeyWrap.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the default asymmetric key wrap algorithm, RsaOaepKeyWrap.","pos":[0,63]}]},{"pos":[5779,5837],"content":"The default asymmetric key wrap algorithm, RsaOaepKeyWrap.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default asymmetric key wrap algorithm, RsaOaepKeyWrap.","pos":[0,58]}]},{"pos":[6563,6629],"content":"Gets the default asymmetric signature algorithm, RsaSha1Signature.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the default asymmetric signature algorithm, RsaSha1Signature.","pos":[0,66]}]},{"pos":[6778,6839],"content":"The default asymmetric signature algorithm, RsaSha1Signature.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default asymmetric signature algorithm, RsaSha1Signature.","pos":[0,61]}]},{"pos":[7552,7611],"content":"Gets the default canonicalization algorithm, ExclusiveC14n.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the default canonicalization algorithm, ExclusiveC14n.","pos":[0,59]}]},{"pos":[7757,7811],"content":"The default canonicalization algorithm, ExclusiveC14n.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default canonicalization algorithm, ExclusiveC14n.","pos":[0,54]}]},{"pos":[8471,8517],"content":"Gets the default digest algorithm, Sha1Digest.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the default digest algorithm, Sha1Digest.","pos":[0,46]}]},{"pos":[8653,8694],"content":"The default digest algorithm, Sha1Digest.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default digest algorithm, Sha1Digest.","pos":[0,41]}]},{"pos":[9364,9420],"content":"Gets the default encryption algorithm, Aes128Encryption.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the default encryption algorithm, Aes128Encryption.","pos":[0,56]}]},{"pos":[9560,9611],"content":"The default encryption algorithm, Aes128Encryption.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default encryption algorithm, Aes128Encryption.","pos":[0,51]}]},{"pos":[10335,10390],"content":"Gets the default encryption key derivation length, 128.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the default encryption key derivation length, 128.","pos":[0,55]}]},{"pos":[10536,10586],"content":"The default encryption key derivation length, 128.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default encryption key derivation length, 128.","pos":[0,50]}]},{"pos":[11315,11369],"content":"Gets the default signature key derivation length, 128.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the default signature key derivation length, 128.","pos":[0,54]}]},{"pos":[11514,11563],"content":"The default signature key derivation length, 128.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default signature key derivation length, 128.","pos":[0,49]}]},{"pos":[12241,12284],"content":"Gets the default symmetric key length, 128.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the default symmetric key length, 128.","pos":[0,43]}]},{"pos":[12419,12457],"content":"The default symmetric key length, 128.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default symmetric key length, 128.","pos":[0,38]}]},{"pos":[13160,13221],"content":"Gets the default symmetric key wrap algorithm, Aes128KeyWrap.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the default symmetric key wrap algorithm, Aes128KeyWrap.","pos":[0,61]}]},{"pos":[13367,13423],"content":"The default symmetric key wrap algorithm, Aes128KeyWrap.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default symmetric key wrap algorithm, Aes128KeyWrap.","pos":[0,56]}]},{"pos":[14143,14209],"content":"Gets the default symmetric signature algorithm, HmacSha1Signature.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the default symmetric signature algorithm, HmacSha1Signature.","pos":[0,66]}]},{"pos":[14357,14418],"content":"The default symmetric signature algorithm, HmacSha1Signature.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default symmetric signature algorithm, HmacSha1Signature.","pos":[0,61]}]},{"pos":[15167,15410],"content":"Returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified asymmetric key length is supported; otherwise, returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. Valid lengths range from 1024 to 4096.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified asymmetric key length is supported; otherwise, returns <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,204],"source":"Returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified asymmetric key length is supported; otherwise, returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"Valid lengths range from 1024 to 4096.","pos":[205,243]}]},{"pos":[15577,15603],"content":"The asymmetric key length.","needQuote":true,"needEscape":true,"nodes":[{"content":"The asymmetric key length.","pos":[0,26]}]},{"pos":[15662,15850],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified asymmetric key length is supported; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified asymmetric key length is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[16590,16830],"content":"Returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified symmetric key length is supported; otherwise, returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. Valid lengths range from 128 to 256.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified symmetric key length is supported; otherwise, returns <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,203],"source":"Returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified symmetric key length is supported; otherwise, returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"Valid lengths range from 128 to 256.","pos":[204,240]}]},{"pos":[16996,17021],"content":"The symmetric key length.","needQuote":true,"needEscape":true,"nodes":[{"content":"The symmetric key length.","pos":[0,25]}]},{"pos":[17080,17267],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified symmetric key length is supported; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified symmetric key length is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[17858,17980],"content":"Returns the string representation of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the string representation of the <xref href=\"System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\"></xref>."},{"pos":[18116,18230],"content":"The string representation of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The string representation of the <xref href=\"System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  id: Basic128SecurityAlgorithmSuite\n  children:\n  - System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.#ctor\n  - System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm\n  - System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm\n  - System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm\n  - System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultDigestAlgorithm\n  - System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultEncryptionAlgorithm\n  - System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength\n  - System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength\n  - System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyLength\n  - System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm\n  - System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm\n  - System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)\n  - System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)\n  - System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.ToString\n  langs:\n  - csharp\n  name: Basic128SecurityAlgorithmSuite\n  nameWithType: Basic128SecurityAlgorithmSuite\n  fullName: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  type: Class\n  summary: The basic 128-bit security algorithm suite.\n  syntax:\n    content: 'public class Basic128SecurityAlgorithmSuite : System.ServiceModel.Security.SecurityAlgorithmSuite'\n  inheritance:\n  - System.Object\n  - System.ServiceModel.Security.SecurityAlgorithmSuite\n  implements: []\n  inheritedMembers:\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Default\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: Basic128SecurityAlgorithmSuite()\n  nameWithType: Basic128SecurityAlgorithmSuite.Basic128SecurityAlgorithmSuite()\n  fullName: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.Basic128SecurityAlgorithmSuite()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Creates and initializes an instance of <xref href=\"System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\"></xref>.\n  syntax:\n    content: public Basic128SecurityAlgorithmSuite ();\n    parameters: []\n  overload: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm\n  id: DefaultAsymmetricKeyWrapAlgorithm\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: DefaultAsymmetricKeyWrapAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm\n  fullName: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the default asymmetric key wrap algorithm, RsaOaepKeyWrap.\n  syntax:\n    content: public override string DefaultAsymmetricKeyWrapAlgorithm { get; }\n    return:\n      type: System.String\n      description: The default asymmetric key wrap algorithm, RsaOaepKeyWrap.\n  overload: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm\n  id: DefaultAsymmetricSignatureAlgorithm\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: DefaultAsymmetricSignatureAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm\n  fullName: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the default asymmetric signature algorithm, RsaSha1Signature.\n  syntax:\n    content: public override string DefaultAsymmetricSignatureAlgorithm { get; }\n    return:\n      type: System.String\n      description: The default asymmetric signature algorithm, RsaSha1Signature.\n  overload: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm\n  id: DefaultCanonicalizationAlgorithm\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: DefaultCanonicalizationAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm\n  fullName: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the default canonicalization algorithm, ExclusiveC14n.\n  syntax:\n    content: public override string DefaultCanonicalizationAlgorithm { get; }\n    return:\n      type: System.String\n      description: The default canonicalization algorithm, ExclusiveC14n.\n  overload: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultDigestAlgorithm\n  id: DefaultDigestAlgorithm\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: DefaultDigestAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultDigestAlgorithm\n  fullName: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultDigestAlgorithm\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the default digest algorithm, Sha1Digest.\n  syntax:\n    content: public override string DefaultDigestAlgorithm { get; }\n    return:\n      type: System.String\n      description: The default digest algorithm, Sha1Digest.\n  overload: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultDigestAlgorithm*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultEncryptionAlgorithm\n  id: DefaultEncryptionAlgorithm\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: DefaultEncryptionAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultEncryptionAlgorithm\n  fullName: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultEncryptionAlgorithm\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the default encryption algorithm, Aes128Encryption.\n  syntax:\n    content: public override string DefaultEncryptionAlgorithm { get; }\n    return:\n      type: System.String\n      description: The default encryption algorithm, Aes128Encryption.\n  overload: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultEncryptionAlgorithm*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength\n  id: DefaultEncryptionKeyDerivationLength\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: DefaultEncryptionKeyDerivationLength\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength\n  fullName: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the default encryption key derivation length, 128.\n  syntax:\n    content: public override int DefaultEncryptionKeyDerivationLength { get; }\n    return:\n      type: System.Int32\n      description: The default encryption key derivation length, 128.\n  overload: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength\n  id: DefaultSignatureKeyDerivationLength\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: DefaultSignatureKeyDerivationLength\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength\n  fullName: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the default signature key derivation length, 128.\n  syntax:\n    content: public override int DefaultSignatureKeyDerivationLength { get; }\n    return:\n      type: System.Int32\n      description: The default signature key derivation length, 128.\n  overload: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyLength\n  id: DefaultSymmetricKeyLength\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: DefaultSymmetricKeyLength\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyLength\n  fullName: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyLength\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the default symmetric key length, 128.\n  syntax:\n    content: public override int DefaultSymmetricKeyLength { get; }\n    return:\n      type: System.Int32\n      description: The default symmetric key length, 128.\n  overload: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyLength*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm\n  id: DefaultSymmetricKeyWrapAlgorithm\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: DefaultSymmetricKeyWrapAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm\n  fullName: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the default symmetric key wrap algorithm, Aes128KeyWrap.\n  syntax:\n    content: public override string DefaultSymmetricKeyWrapAlgorithm { get; }\n    return:\n      type: System.String\n      description: The default symmetric key wrap algorithm, Aes128KeyWrap.\n  overload: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm\n  id: DefaultSymmetricSignatureAlgorithm\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: DefaultSymmetricSignatureAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm\n  fullName: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the default symmetric signature algorithm, HmacSha1Signature.\n  syntax:\n    content: public override string DefaultSymmetricSignatureAlgorithm { get; }\n    return:\n      type: System.String\n      description: The default symmetric signature algorithm, HmacSha1Signature.\n  overload: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)\n  id: IsAsymmetricKeyLengthSupported(System.Int32)\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: IsAsymmetricKeyLengthSupported(Int32)\n  nameWithType: Basic128SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(Int32)\n  fullName: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(Int32)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified asymmetric key length is supported; otherwise, returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. Valid lengths range from 1024 to 4096.\n  syntax:\n    content: public override bool IsAsymmetricKeyLengthSupported (int length);\n    parameters:\n    - id: length\n      type: System.Int32\n      description: The asymmetric key length.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified asymmetric key length is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)\n  id: IsSymmetricKeyLengthSupported(System.Int32)\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: IsSymmetricKeyLengthSupported(Int32)\n  nameWithType: Basic128SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(Int32)\n  fullName: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(Int32)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified symmetric key length is supported; otherwise, returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. Valid lengths range from 128 to 256.\n  syntax:\n    content: public override bool IsSymmetricKeyLengthSupported (int length);\n    parameters:\n    - id: length\n      type: System.Int32\n      description: The symmetric key length.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified symmetric key length is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.ToString\n  id: ToString\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Basic128SecurityAlgorithmSuite.ToString()\n  fullName: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.ToString()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Returns the string representation of the <xref href=\"System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\"></xref>.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The string representation of the <xref href=\"System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\"></xref>.\n  overload: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.ToString*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: System.ServiceModel.Security.SecurityAlgorithmSuite\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.#ctor\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic128SecurityAlgorithmSuite()\n  nameWithType: Basic128SecurityAlgorithmSuite.Basic128SecurityAlgorithmSuite()\n  fullName: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.Basic128SecurityAlgorithmSuite()\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultAsymmetricKeyWrapAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm\n  fullName: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultAsymmetricSignatureAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm\n  fullName: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultCanonicalizationAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm\n  fullName: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultDigestAlgorithm\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultDigestAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultDigestAlgorithm\n  fullName: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultDigestAlgorithm\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultEncryptionAlgorithm\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultEncryptionAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultEncryptionAlgorithm\n  fullName: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultEncryptionAlgorithm\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultEncryptionKeyDerivationLength\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength\n  fullName: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultSignatureKeyDerivationLength\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength\n  fullName: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyLength\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultSymmetricKeyLength\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyLength\n  fullName: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyLength\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultSymmetricKeyWrapAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm\n  fullName: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultSymmetricSignatureAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm\n  fullName: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: IsAsymmetricKeyLengthSupported(Int32)\n  nameWithType: Basic128SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(Int32)\n  fullName: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(Int32)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: IsSymmetricKeyLengthSupported(Int32)\n  nameWithType: Basic128SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(Int32)\n  fullName: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(Int32)\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.ToString\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: ToString()\n  nameWithType: Basic128SecurityAlgorithmSuite.ToString()\n  fullName: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.ToString()\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.#ctor*\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic128SecurityAlgorithmSuite\n  nameWithType: Basic128SecurityAlgorithmSuite.Basic128SecurityAlgorithmSuite\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm*\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultAsymmetricKeyWrapAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm*\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultAsymmetricSignatureAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm*\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultCanonicalizationAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultDigestAlgorithm*\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultDigestAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultDigestAlgorithm\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultEncryptionAlgorithm*\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultEncryptionAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultEncryptionAlgorithm\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength*\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultEncryptionKeyDerivationLength\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength*\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultSignatureKeyDerivationLength\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyLength*\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultSymmetricKeyLength\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyLength\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm*\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultSymmetricKeyWrapAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm*\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultSymmetricSignatureAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported*\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: IsAsymmetricKeyLengthSupported\n  nameWithType: Basic128SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported*\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: IsSymmetricKeyLengthSupported\n  nameWithType: Basic128SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.ToString*\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: ToString\n  nameWithType: Basic128SecurityAlgorithmSuite.ToString\n"}