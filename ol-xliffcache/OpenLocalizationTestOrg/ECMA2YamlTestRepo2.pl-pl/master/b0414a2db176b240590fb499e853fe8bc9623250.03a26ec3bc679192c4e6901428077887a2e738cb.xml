{"nodes":[{"pos":[765,777],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2387,2399],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3120,3132],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3178,3190],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3933,3945],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3995,4007],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4572,4584],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.DelegateInArgument`1\n  id: DelegateInArgument`1\n  children:\n  - System.Activities.DelegateInArgument`1.#ctor\n  - System.Activities.DelegateInArgument`1.#ctor(System.String)\n  - System.Activities.DelegateInArgument`1.Get(System.Activities.ActivityContext)\n  - System.Activities.DelegateInArgument`1.Set(System.Activities.ActivityContext,`0)\n  - System.Activities.DelegateInArgument`1.TypeCore\n  langs:\n  - csharp\n  name: DelegateInArgument<T>\n  nameWithType: DelegateInArgument<T>\n  fullName: System.Activities.DelegateInArgument<T>\n  type: Class\n  syntax:\n    content: 'public sealed class DelegateInArgument<T> : System.Activities.DelegateInArgument'\n    typeParameters:\n    - id: T\n      description: To be added.\n  inheritance:\n  - System.Object\n  - System.Activities.LocationReference\n  - System.Activities.DelegateArgument\n  - System.Activities.DelegateInArgument\n  implements: []\n  inheritedMembers:\n  - System.Activities.DelegateArgument.Direction\n  - System.Activities.DelegateArgument.GetLocation(System.Activities.ActivityContext)\n  - System.Activities.DelegateArgument.Name\n  - System.Activities.DelegateArgument.NameCore\n  - System.Activities.LocationReference.Type\n  platform:\n  - net462\n- uid: System.Activities.DelegateInArgument`1.#ctor\n  id: '#ctor'\n  parent: System.Activities.DelegateInArgument`1\n  langs:\n  - csharp\n  name: DelegateInArgument()\n  nameWithType: DelegateInArgument<T>.DelegateInArgument()\n  fullName: System.Activities.DelegateInArgument<T>.DelegateInArgument()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public DelegateInArgument ();\n    parameters: []\n  overload: System.Activities.DelegateInArgument`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.DelegateInArgument`1.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Activities.DelegateInArgument`1\n  langs:\n  - csharp\n  name: DelegateInArgument(String)\n  nameWithType: DelegateInArgument<T>.DelegateInArgument(String)\n  fullName: System.Activities.DelegateInArgument<T>.DelegateInArgument(String)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public DelegateInArgument (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: To be added.\n  overload: System.Activities.DelegateInArgument`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.DelegateInArgument`1.Get(System.Activities.ActivityContext)\n  id: Get(System.Activities.ActivityContext)\n  parent: System.Activities.DelegateInArgument`1\n  langs:\n  - csharp\n  name: Get(ActivityContext)\n  nameWithType: DelegateInArgument<T>.Get(ActivityContext)\n  fullName: System.Activities.DelegateInArgument<T>.Get(ActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public T Get (System.Activities.ActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.ActivityContext\n      description: To be added.\n    return:\n      type: T\n      description: To be added.\n  overload: System.Activities.DelegateInArgument`1.Get*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.DelegateInArgument`1.Set(System.Activities.ActivityContext,`0)\n  id: Set(System.Activities.ActivityContext,`0)\n  parent: System.Activities.DelegateInArgument`1\n  langs:\n  - csharp\n  name: Set(ActivityContext,T)\n  nameWithType: DelegateInArgument<T>.Set(ActivityContext,T)\n  fullName: System.Activities.DelegateInArgument<T>.Set(ActivityContext,T)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public void Set (System.Activities.ActivityContext context, T value);\n    parameters:\n    - id: context\n      type: System.Activities.ActivityContext\n      description: To be added.\n    - id: value\n      type: T\n      description: To be added.\n  overload: System.Activities.DelegateInArgument`1.Set*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.DelegateInArgument`1.TypeCore\n  id: TypeCore\n  parent: System.Activities.DelegateInArgument`1\n  langs:\n  - csharp\n  name: TypeCore\n  nameWithType: DelegateInArgument<T>.TypeCore\n  fullName: System.Activities.DelegateInArgument<T>.TypeCore\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: protected override Type TypeCore { get; }\n    return:\n      type: System.Type\n      description: To be added.\n  overload: System.Activities.DelegateInArgument`1.TypeCore*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.DelegateInArgument\n  isExternal: false\n  name: System.Activities.DelegateInArgument\n- uid: System.Activities.DelegateInArgument`1.#ctor\n  parent: System.Activities.DelegateInArgument`1\n  isExternal: false\n  name: DelegateInArgument()\n  nameWithType: DelegateInArgument<T>.DelegateInArgument()\n  fullName: System.Activities.DelegateInArgument<T>.DelegateInArgument()\n- uid: System.Activities.DelegateInArgument`1.#ctor(System.String)\n  parent: System.Activities.DelegateInArgument`1\n  isExternal: false\n  name: DelegateInArgument(String)\n  nameWithType: DelegateInArgument<T>.DelegateInArgument(String)\n  fullName: System.Activities.DelegateInArgument<T>.DelegateInArgument(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.DelegateInArgument`1.Get(System.Activities.ActivityContext)\n  parent: System.Activities.DelegateInArgument`1\n  isExternal: false\n  name: Get(ActivityContext)\n  nameWithType: DelegateInArgument<T>.Get(ActivityContext)\n  fullName: System.Activities.DelegateInArgument<T>.Get(ActivityContext)\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Activities.ActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: ActivityContext\n  nameWithType: ActivityContext\n  fullName: System.Activities.ActivityContext\n- uid: System.Activities.DelegateInArgument`1.Set(System.Activities.ActivityContext,`0)\n  parent: System.Activities.DelegateInArgument`1\n  isExternal: false\n  name: Set(ActivityContext,T)\n  nameWithType: DelegateInArgument<T>.Set(ActivityContext,T)\n  fullName: System.Activities.DelegateInArgument<T>.Set(ActivityContext,T)\n- uid: System.Activities.DelegateInArgument`1.TypeCore\n  parent: System.Activities.DelegateInArgument`1\n  isExternal: false\n  name: TypeCore\n  nameWithType: DelegateInArgument<T>.TypeCore\n  fullName: System.Activities.DelegateInArgument<T>.TypeCore\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Activities.DelegateInArgument`1.#ctor*\n  parent: System.Activities.DelegateInArgument`1\n  isExternal: false\n  name: DelegateInArgument<T>\n  nameWithType: DelegateInArgument<T>.DelegateInArgument<T>\n- uid: System.Activities.DelegateInArgument`1.Get*\n  parent: System.Activities.DelegateInArgument`1\n  isExternal: false\n  name: Get\n  nameWithType: DelegateInArgument<T>.Get\n- uid: System.Activities.DelegateInArgument`1.Set*\n  parent: System.Activities.DelegateInArgument`1\n  isExternal: false\n  name: Set\n  nameWithType: DelegateInArgument<T>.Set\n- uid: System.Activities.DelegateInArgument`1.TypeCore*\n  parent: System.Activities.DelegateInArgument`1\n  isExternal: false\n  name: TypeCore\n  nameWithType: DelegateInArgument<T>.TypeCore\n"}