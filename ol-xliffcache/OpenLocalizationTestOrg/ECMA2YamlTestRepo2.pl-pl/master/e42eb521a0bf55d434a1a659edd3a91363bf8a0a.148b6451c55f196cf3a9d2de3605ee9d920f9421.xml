{"nodes":[{"pos":[967,1048],"content":"Converts the string name of an event setter handler to a delegate representation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the string name of an event setter handler to a delegate representation.","pos":[0,81]}]},{"pos":[1061,1290],"content":"For more information about how XAML for WPF processes event handler names, see [XAML Overview (WPF)](~/add/includes/ajax-current-ext-md.md).      <a name=\"xamlTextUsage_EventSetterHandlerConverter\"></a>    ## XAML Text Usage","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"For more information about how XAML for WPF processes event handler names, see <bpt id=\"p1\">[</bpt>XAML Overview (WPF)<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[0,140],"source":"For more information about how XAML for WPF processes event handler names, see [XAML Overview (WPF)](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlTextUsage_EventSetterHandlerConverter\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Text Usage","pos":[146,224],"source":"<a name=\"xamlTextUsage_EventSetterHandlerConverter\"></a>    ## XAML Text Usage"}]},{"pos":[5244,5355],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Markup.EventSetterHandlerConverter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Markup.EventSetterHandlerConverter\"></xref> class."},{"pos":[6182,6275],"content":"Returns whether this converter can convert an object of one type to a <xref:System.Delegate>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns whether this converter can convert an object of one type to a &lt;xref:System.Delegate&gt;.","pos":[0,93],"source":"Returns whether this converter can convert an object of one type to a <xref:System.Delegate>."}]},{"pos":[6287,6413],"content":"This method returns `true` only when `sourceType` is a <xref:System.String> type. All other `sourceType` types return `false`.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method returns <ph id=\"ph1\">`true`</ph> only when <ph id=\"ph2\">`sourceType`</ph> is a &lt;xref:System.String&gt; type.","pos":[0,81],"source":"This method returns `true` only when `sourceType` is a <xref:System.String> type."},{"content":"All other <ph id=\"ph1\">`sourceType`</ph> types return <ph id=\"ph2\">`false`</ph>.","pos":[82,126],"source":" All other `sourceType` types return `false`."}]},{"pos":[6684,6784],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[6849,6920],"content":"A <xref:System.Type> that represents the type you want to convert from.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; that represents the type you want to convert from.","pos":[0,71],"source":"A <xref:System.Type> that represents the type you want to convert from."}]},{"pos":[6979,7160],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this converter can perform the conversion; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this converter can perform the conversion; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7905,7981],"content":"Returns whether this converter can convert the object to the specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns whether this converter can convert the object to the specified type.","pos":[0,76]}]},{"pos":[8255,8355],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[8425,8494],"content":"A <xref:System.Type> that represents the type you want to convert to.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; that represents the type you want to convert to.","pos":[0,69],"source":"A <xref:System.Type> that represents the type you want to convert to."}]},{"pos":[8553,8631],"content":"Always returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Always returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9481,9565],"content":"Converts the specified string to a new <xref:System.Delegate> for the event handler.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified string to a new &lt;xref:System.Delegate&gt; for the event handler.","pos":[0,84],"source":"Converts the specified string to a new <xref:System.Delegate> for the event handler."}]},{"pos":[9577,9723],"content":"The <ph id=\"ph1\">`typeDescriptorContext`</ph> must provide services for &lt;xref:System.Xaml.IRootObjectProvider&gt; and &lt;xref:System.Windows.Markup.IProvideValueTarget&gt;.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The `typeDescriptorContext` must provide services for <xref:System.Xaml.IRootObjectProvider> and <xref:System.Windows.Markup.IProvideValueTarget>."},{"pos":[10037,10137],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[10224,10298],"content":"The <xref:System.Globalization.CultureInfo> to use as the current culture.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Globalization.CultureInfo&gt; to use as the current culture.","pos":[0,74],"source":"The <xref:System.Globalization.CultureInfo> to use as the current culture."}]},{"pos":[10361,10390],"content":"The source string to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The source string to convert.","pos":[0,29]}]},{"pos":[10448,10522],"content":"A new <xref:System.Delegate> that represents the referenced event handler.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new &lt;xref:System.Delegate&gt; that represents the referenced event handler.","pos":[0,74],"source":"A new <xref:System.Delegate> that represents the referenced event handler."}]},{"pos":[10715,10820],"content":"The necessary services are not available.       -or-       Could not perform the specific conversion.","needQuote":false,"needEscape":true,"nodes":[{"content":"The necessary services are not available.       -or-       Could not perform the specific conversion.","pos":[0,101],"nodes":[{"content":"The necessary services are not available.","pos":[0,41]},{"content":"-or-       Could not perform the specific conversion.","pos":[48,101]}]}]},{"pos":[10924,11047],"content":"<ph id=\"ph1\">&lt;code&gt;typeDescriptorContext&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;source&lt;/code&gt;</ph> are <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>typeDescriptorContext</code> or <code>source</code> are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[11833,11919],"content":"Converts the specified value object to the specified type. Always throws an exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified value object to the specified type. Always throws an exception.","pos":[0,86],"nodes":[{"content":"Converts the specified value object to the specified type.","pos":[0,58]},{"content":"Always throws an exception.","pos":[59,86]}]}]},{"pos":[12252,12352],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[12439,12513],"content":"The <xref:System.Globalization.CultureInfo> to use as the current culture.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Globalization.CultureInfo&gt; to use as the current culture.","pos":[0,74],"source":"The <xref:System.Globalization.CultureInfo> to use as the current culture."}]},{"pos":[12575,12596],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[12666,12711],"content":"The type to convert the <ph id=\"ph1\">`value`</ph> parameter to.","needQuote":true,"needEscape":true,"source":"The type to convert the `value` parameter to."},{"pos":[12769,12796],"content":"Always throws an exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"Always throws an exception.","pos":[0,27]}]},{"pos":[12986,13006],"content":"Thrown in all cases.","needQuote":true,"needEscape":true,"nodes":[{"content":"Thrown in all cases.","pos":[0,20]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Markup.EventSetterHandlerConverter\n  id: EventSetterHandlerConverter\n  children:\n  - System.Windows.Markup.EventSetterHandlerConverter.#ctor\n  - System.Windows.Markup.EventSetterHandlerConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Windows.Markup.EventSetterHandlerConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Windows.Markup.EventSetterHandlerConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.Windows.Markup.EventSetterHandlerConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  langs:\n  - csharp\n  name: EventSetterHandlerConverter\n  nameWithType: EventSetterHandlerConverter\n  fullName: System.Windows.Markup.EventSetterHandlerConverter\n  type: Class\n  summary: Converts the string name of an event setter handler to a delegate representation.\n  remarks: \"For more information about how XAML for WPF processes event handler names, see [XAML Overview (WPF)](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"xamlTextUsage_EventSetterHandlerConverter\\\"></a>   \\n## XAML Text Usage\"\n  syntax:\n    content: 'public sealed class EventSetterHandlerConverter : System.ComponentModel.TypeConverter'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  platform:\n  - net462\n- uid: System.Windows.Markup.EventSetterHandlerConverter.#ctor\n  id: '#ctor'\n  parent: System.Windows.Markup.EventSetterHandlerConverter\n  langs:\n  - csharp\n  name: EventSetterHandlerConverter()\n  nameWithType: EventSetterHandlerConverter.EventSetterHandlerConverter()\n  fullName: System.Windows.Markup.EventSetterHandlerConverter.EventSetterHandlerConverter()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Markup\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Markup.EventSetterHandlerConverter\"></xref> class.\n  syntax:\n    content: public EventSetterHandlerConverter ();\n    parameters: []\n  overload: System.Windows.Markup.EventSetterHandlerConverter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Markup.EventSetterHandlerConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Markup.EventSetterHandlerConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: EventSetterHandlerConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.Windows.Markup.EventSetterHandlerConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Markup\n  summary: Returns whether this converter can convert an object of one type to a <xref:System.Delegate>.\n  remarks: This method returns `true` only when `sourceType` is a <xref:System.String> type. All other `sourceType` types return `false`.\n  syntax:\n    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, Type sourceType);\n    parameters:\n    - id: typeDescriptorContext\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: sourceType\n      type: System.Type\n      description: A <xref:System.Type> that represents the type you want to convert from.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this converter can perform the conversion; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Markup.EventSetterHandlerConverter.CanConvertFrom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Markup.EventSetterHandlerConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Markup.EventSetterHandlerConverter\n  langs:\n  - csharp\n  name: CanConvertTo(ITypeDescriptorContext,Type)\n  nameWithType: EventSetterHandlerConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  fullName: System.Windows.Markup.EventSetterHandlerConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Markup\n  summary: Returns whether this converter can convert the object to the specified type.\n  syntax:\n    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, Type destinationType);\n    parameters:\n    - id: typeDescriptorContext\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: destinationType\n      type: System.Type\n      description: A <xref:System.Type> that represents the type you want to convert to.\n    return:\n      type: System.Boolean\n      description: Always returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Markup.EventSetterHandlerConverter.CanConvertTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Markup.EventSetterHandlerConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Windows.Markup.EventSetterHandlerConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: EventSetterHandlerConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.Windows.Markup.EventSetterHandlerConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Markup\n  summary: Converts the specified string to a new <xref:System.Delegate> for the event handler.\n  remarks: The `typeDescriptorContext` must provide services for <xref:System.Xaml.IRootObjectProvider> and <xref:System.Windows.Markup.IProvideValueTarget>.\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, System.Globalization.CultureInfo cultureInfo, object source);\n    parameters:\n    - id: typeDescriptorContext\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: cultureInfo\n      type: System.Globalization.CultureInfo\n      description: The <xref:System.Globalization.CultureInfo> to use as the current culture.\n    - id: source\n      type: System.Object\n      description: The source string to convert.\n    return:\n      type: System.Object\n      description: A new <xref:System.Delegate> that represents the referenced event handler.\n  overload: System.Windows.Markup.EventSetterHandlerConverter.ConvertFrom*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"The necessary services are not available.  \\n  \\n -or-  \\n  \\n Could not perform the specific conversion.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>typeDescriptorContext</code> or <code>source</code> are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Markup.EventSetterHandlerConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Windows.Markup.EventSetterHandlerConverter\n  langs:\n  - csharp\n  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  nameWithType: EventSetterHandlerConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  fullName: System.Windows.Markup.EventSetterHandlerConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Markup\n  summary: Converts the specified value object to the specified type. Always throws an exception.\n  syntax:\n    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, System.Globalization.CultureInfo cultureInfo, object value, Type destinationType);\n    parameters:\n    - id: typeDescriptorContext\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: cultureInfo\n      type: System.Globalization.CultureInfo\n      description: The <xref:System.Globalization.CultureInfo> to use as the current culture.\n    - id: value\n      type: System.Object\n      description: The value to convert.\n    - id: destinationType\n      type: System.Type\n      description: The type to convert the `value` parameter to.\n    return:\n      type: System.Object\n      description: Always throws an exception.\n  overload: System.Windows.Markup.EventSetterHandlerConverter.ConvertTo*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: Thrown in all cases.\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: System.ComponentModel.TypeConverter\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Windows.Markup.EventSetterHandlerConverter.#ctor\n  parent: System.Windows.Markup.EventSetterHandlerConverter\n  isExternal: false\n  name: EventSetterHandlerConverter()\n  nameWithType: EventSetterHandlerConverter.EventSetterHandlerConverter()\n  fullName: System.Windows.Markup.EventSetterHandlerConverter.EventSetterHandlerConverter()\n- uid: System.Windows.Markup.EventSetterHandlerConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Markup.EventSetterHandlerConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: EventSetterHandlerConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.Windows.Markup.EventSetterHandlerConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Windows.Markup.EventSetterHandlerConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Markup.EventSetterHandlerConverter\n  isExternal: false\n  name: CanConvertTo(ITypeDescriptorContext,Type)\n  nameWithType: EventSetterHandlerConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  fullName: System.Windows.Markup.EventSetterHandlerConverter.CanConvertTo(ITypeDescriptorContext,Type)\n- uid: System.Windows.Markup.EventSetterHandlerConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Windows.Markup.EventSetterHandlerConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: EventSetterHandlerConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.Windows.Markup.EventSetterHandlerConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: true\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Windows.Markup.EventSetterHandlerConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Windows.Markup.EventSetterHandlerConverter\n  isExternal: false\n  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  nameWithType: EventSetterHandlerConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  fullName: System.Windows.Markup.EventSetterHandlerConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n- uid: System.Windows.Markup.EventSetterHandlerConverter.#ctor*\n  parent: System.Windows.Markup.EventSetterHandlerConverter\n  isExternal: false\n  name: EventSetterHandlerConverter\n  nameWithType: EventSetterHandlerConverter.EventSetterHandlerConverter\n- uid: System.Windows.Markup.EventSetterHandlerConverter.CanConvertFrom*\n  parent: System.Windows.Markup.EventSetterHandlerConverter\n  isExternal: false\n  name: CanConvertFrom\n  nameWithType: EventSetterHandlerConverter.CanConvertFrom\n- uid: System.Windows.Markup.EventSetterHandlerConverter.CanConvertTo*\n  parent: System.Windows.Markup.EventSetterHandlerConverter\n  isExternal: false\n  name: CanConvertTo\n  nameWithType: EventSetterHandlerConverter.CanConvertTo\n- uid: System.Windows.Markup.EventSetterHandlerConverter.ConvertFrom*\n  parent: System.Windows.Markup.EventSetterHandlerConverter\n  isExternal: false\n  name: ConvertFrom\n  nameWithType: EventSetterHandlerConverter.ConvertFrom\n- uid: System.Windows.Markup.EventSetterHandlerConverter.ConvertTo*\n  parent: System.Windows.Markup.EventSetterHandlerConverter\n  isExternal: false\n  name: ConvertTo\n  nameWithType: EventSetterHandlerConverter.ConvertTo\n"}