{"nodes":[{"pos":[2380,2599],"content":"Represents a security token handler that processes tokens of type <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>. By default, the handler will perform chain-trust validation of the X.509 certificate.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a security token handler that processes tokens of type <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,133],"source":"Represents a security token handler that processes tokens of type <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>."},{"content":"By default, the handler will perform chain-trust validation of the X.509 certificate.","pos":[134,219]}]},{"pos":[4510,4644],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with default values.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler\"></xref> class with default values."},{"pos":[4656,4909],"content":"The &lt;xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A&gt; property is set to <ph id=\"ph1\">`false`</ph> and the &lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A&gt; validator is used as the default certificate validator.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A> property is set to `false` and the <xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A> validator is used as the default certificate validator."},{"pos":[5622,5830],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by using a value that indicates whether the certificate should be mapped to a Windows account.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler\"></xref> class by using a value that indicates whether the certificate should be mapped to a Windows account."},{"pos":[5842,5984],"content":"The <xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A> validator is used as the default certificate validator.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A&gt; validator is used as the default certificate validator.","pos":[0,142],"source":"The <xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A> validator is used as the default certificate validator."}]},{"pos":[6146,6432],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the certificate should be mapped to a Windows account; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. Sets the <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the certificate should be mapped to a Windows account; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,193],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the certificate should be mapped to a Windows account; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"Sets the &lt;xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows*&gt; property.","pos":[194,286],"source":" Sets the <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows*> property."}]},{"pos":[7200,7359],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by using the specified certificate validator.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler\"></xref> class by using the specified certificate validator."},{"pos":[7371,7478],"content":"The &lt;xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A&gt; property is set to <ph id=\"ph1\">`false`</ph>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A> property is set to `false`."},{"pos":[7748,7882],"content":"The certificate validator to use. Sets the <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The certificate validator to use. Sets the <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator*> property.","pos":[0,134],"nodes":[{"content":"The certificate validator to use.","pos":[0,33]},{"content":"Sets the &lt;xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator*&gt; property.","pos":[34,134],"source":" Sets the <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator*> property."}]}]},{"pos":[8704,8952],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by using a value that indicates whether the certificate should be mapped to a Windows account and the specified certificate validator.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler\"></xref> class by using a value that indicates whether the certificate should be mapped to a Windows account and the specified certificate validator."},{"pos":[9192,9478],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the certificate should be mapped to a Windows account; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. Sets the <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the certificate should be mapped to a Windows account; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,193],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the certificate should be mapped to a Windows account; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"Sets the &lt;xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows*&gt; property.","pos":[194,286],"source":" Sets the <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows*> property."}]},{"pos":[9597,9731],"content":"The certificate validator to use. Sets the <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The certificate validator to use. Sets the <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator*> property.","pos":[0,134],"nodes":[{"content":"The certificate validator to use.","pos":[0,33]},{"content":"Sets the &lt;xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator*&gt; property.","pos":[34,134],"source":" Sets the <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator*> property."}]}]},{"pos":[10425,10603],"content":"Returns a value that indicates whether the specified reader is referring to an <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;ds:X509Data&amp;gt;\" name=\"&amp;lt;ds:X509Data&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element.","needQuote":true,"needEscape":true,"source":"Returns a value that indicates whether the specified reader is referring to an <xref uid=\"langword_csharp_&lt;ds:X509Data&gt;\" name=\"&lt;ds:X509Data&gt;\" href=\"\"></xref> element."},{"pos":[10791,10866],"content":"An XML reader positioned at the start element of the key identifier clause.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML reader positioned at the start element of the key identifier clause.","pos":[0,75]}]},{"pos":[10925,11193],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the reader is referring to an <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_&amp;lt;ds:X509Data&amp;gt;\" name=\"&amp;lt;ds:X509Data&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> element; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the reader is referring to an <xref uid=\"langword_csharp_&lt;ds:X509Data&gt;\" name=\"&lt;ds:X509Data&gt;\" href=\"\"></xref> element; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11403,11487],"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[12022,12150],"content":"Returns a value that indicates whether the reader points to an X.509 security token as defined in the WS-Security specification.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the reader points to an X.509 security token as defined in the WS-Security specification.","pos":[0,128]}]},{"pos":[12324,12359],"content":"A reader pointing to the token XML.","needQuote":true,"needEscape":true,"nodes":[{"content":"A reader pointing to the token XML.","pos":[0,35]}]},{"pos":[12418,12607],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the reader is pointing to an X.509 security token; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the reader is pointing to an X.509 security token; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12803,12887],"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[13367,13521],"content":"Gets a value that indicates whether this handler supports validation of tokens of type <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether this handler supports validation of tokens of type <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>."},{"pos":[13650,13975],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the handler supports validation of tokens of type <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the handler supports validation of tokens of type <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,256],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the handler supports validation of tokens of type <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"Always <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[257,325],"source":" Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[14809,14918],"content":"Returns a value that indicates whether the specified key identifier clause can be serialized by this handler.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the specified key identifier clause can be serialized by this handler.","pos":[0,109]}]},{"pos":[14931,15213],"content":"The supported key identifier clause types are:      1.  <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>      2.  <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>      3.  <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The supported key identifier clause types are:      1.  <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>      2.  <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>      3.  <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>","pos":[0,276],"nodes":[{"content":"The supported key identifier clause types are:      1.","pos":[0,54]},{"content":"&lt;xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause&gt;      2.","pos":[56,134],"source":"  <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>      2."},{"content":"&lt;xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause&gt;      3.","pos":[136,209],"source":"  <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>      3."},{"content":"&lt;xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause&gt;","pos":[211,276],"source":"  <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>"}]}]},{"pos":[15515,15558],"content":"The key identifier clause to be serialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key identifier clause to be serialized.","pos":[0,43]}]},{"pos":[15617,15997],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">securityKeyIdentifierClause</ph><ept id=\"p2\">&lt;/code&gt;</ept> is supported and if the &lt;xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes*&gt; property is set to <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <code>securityKeyIdentifierClause</code> is supported and if the <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes*> property is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[16208,16313],"content":"<ph id=\"ph1\">&lt;code&gt;securityKeyIdentifierClause&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>securityKeyIdentifierClause</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[16778,16919],"content":"Gets a value that indicates whether this handler can write tokens of type <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether this handler can write tokens of type <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>."},{"pos":[17045,17357],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the handler can write tokens of type <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the handler can write tokens of type <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,243],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the handler can write tokens of type <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"Always <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[244,312],"source":" Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[17954,18085],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.X509CertificateValidator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is used by the current instance.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.IdentityModel.Selectors.X509CertificateValidator\"></xref> that is used by the current instance."},{"pos":[18306,18375],"content":"The X.509 certificate validator that is used by the current instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The X.509 certificate validator that is used by the current instance.","pos":[0,69]}]},{"pos":[18998,19080],"content":"Gets the X.509 security token type defined in the WS-Security X.509 Token Profile.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the X.509 security token type defined in the WS-Security X.509 Token Profile.","pos":[0,82]}]},{"pos":[19235,19370],"content":"The X.509 token type URI. By default, the value of the <xref:System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The X.509 token type URI. By default, the value of the <xref:System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate*> property.","pos":[0,135],"nodes":[{"content":"The X.509 token type URI.","pos":[0,25]},{"content":"By default, the value of the &lt;xref:System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate*&gt; property.","pos":[26,135],"source":" By default, the value of the <xref:System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate*> property."}]}]},{"pos":[20077,20113],"content":"Loads custom configuration from XML.","needQuote":true,"needEscape":true,"nodes":[{"content":"Loads custom configuration from XML.","pos":[0,36]}]},{"pos":[20330,20385],"content":"The XML elements that contain the custom configuration.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML elements that contain the custom configuration.","pos":[0,55]}]},{"pos":[20592,20690],"content":"<ph id=\"ph1\">&lt;code&gt;customConfigElements&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>customConfigElements</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[20801,20849],"content":"The custom configuration specified is not valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The custom configuration specified is not valid.","pos":[0,48]}]},{"pos":[21309,21412],"content":"Gets or sets a value that indicates whether the validating token should be mapped to a Windows account.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the validating token should be mapped to a Windows account.","pos":[0,103]}]},{"pos":[21533,21731],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the validating token should be mapped to a Windows account; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the validating token should be mapped to a Windows account; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[22417,22493],"content":"Deserializes a key identifier clause referenced by the specified XML reader.","needQuote":true,"needEscape":true,"nodes":[{"content":"Deserializes a key identifier clause referenced by the specified XML reader.","pos":[0,76]}]},{"pos":[22729,22782],"content":"The XML reader referencing the key identifier clause.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML reader referencing the key identifier clause.","pos":[0,53]}]},{"pos":[22882,22943],"content":"The key identifier clause that was deserialized from the XML.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key identifier clause that was deserialized from the XML.","pos":[0,61]}]},{"pos":[23150,23234],"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[23754,23831],"content":"Deserializes the X.509 security token referenced by the specified XML reader.","needQuote":true,"needEscape":true,"nodes":[{"content":"Deserializes the X.509 security token referenced by the specified XML reader.","pos":[0,77]}]},{"pos":[24039,24097],"content":"An XML reader that is pointing to an X.509 security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML reader that is pointing to an X.509 security token.","pos":[0,58]}]},{"pos":[24183,24311],"content":"The security token deserialized from the XML. An instance of <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The security token deserialized from the XML.","pos":[0,45]},{"content":"An instance of <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[46,128],"source":" An instance of <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>."}]},{"pos":[24504,24588],"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[24681,24864],"content":"<code>reader</code> is not pointing to a valid X.509 security token as defined in the WS-Security X.509 Token Profile. Or the encodingType specified is other than Base64 or HexBinary.","needQuote":true,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is not pointing to a valid X.509 security token as defined in the WS-Security X.509 Token Profile.","pos":[0,118],"source":"<code>reader</code> is not pointing to a valid X.509 security token as defined in the WS-Security X.509 Token Profile."},{"content":"Or the encodingType specified is other than Base64 or HexBinary.","pos":[119,183]}]},{"pos":[25309,25379],"content":"Gets the <xref:System.Type> of the tokens that this handler processes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the &lt;xref:System.Type&gt; of the tokens that this handler processes.","pos":[0,70],"source":"Gets the <xref:System.Type> of the tokens that this handler processes."}]},{"pos":[25498,25599],"content":"By default, the type of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"By default, the type of the <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref> class."},{"pos":[26286,26331],"content":"Validates the specified X.509 security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Validates the specified X.509 security token.","pos":[0,45]}]},{"pos":[26630,26656],"content":"The token to be validated.","needQuote":true,"needEscape":true,"nodes":[{"content":"The token to be validated.","pos":[0,26]}]},{"pos":[26789,26827],"content":"The identities contained in the token.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identities contained in the token.","pos":[0,38]}]},{"pos":[27016,27125],"content":"<ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> is not assignable from <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>token</code> is not assignable from <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>."},{"pos":[27228,27311],"content":"<ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>token</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[27423,28080],"content":"The &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration<bpt id=\"p1\">*</bpt>&gt; property is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.       -or-       There is no issuer name registry (<bpt id=\"p3\">&lt;xref href=\"System.IdentityModel.Tokens.IssuerNameRegistry\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>) configured. (The &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry<ept id=\"p1\">*</ept>&gt; property of the <bpt id=\"p4\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> referenced by the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*&gt; property is <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>.)","needQuote":false,"needEscape":true,"source":"The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*> property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       There is no issuer name registry (<xref href=\"System.IdentityModel.Tokens.IssuerNameRegistry\"></xref>) configured. (The <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry*> property of the <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration\"></xref> referenced by the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*> property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.)"},{"pos":[28248,28389],"content":"The current <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.X509CertificateValidator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> was unable to validate the certificate in the token.","needQuote":true,"needEscape":true,"source":"The current <xref href=\"System.IdentityModel.Selectors.X509CertificateValidator\"></xref> was unable to validate the certificate in the token."},{"pos":[28536,28752],"content":"The current <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.IssuerNameRegistry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> returned <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> when trying to resolve the issuer of the certificate in the token.","needQuote":true,"needEscape":true,"source":"The current <xref href=\"System.IdentityModel.Tokens.IssuerNameRegistry\"></xref> returned <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> when trying to resolve the issuer of the certificate in the token."},{"pos":[29543,29608],"content":"Serializes the specified key identifier clause to the XML writer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Serializes the specified key identifier clause to the XML writer.","pos":[0,65]}]},{"pos":[29879,29950],"content":"The XML writer to which the key identifier clause should be serialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML writer to which the key identifier clause should be serialized.","pos":[0,71]}]},{"pos":[30076,30115],"content":"The key identifier clause to serialize.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key identifier clause to serialize.","pos":[0,39]}]},{"pos":[30324,30547],"content":"<code>securityKeyIdentifierClause</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>writer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;securityKeyIdentifierClause&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,105],"source":"<code>securityKeyIdentifierClause</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;writer&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[112,207],"source":"       -or-       <code>writer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[30659,30830],"content":"The &lt;xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes*&gt; property is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes*> property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[31481,31555],"content":"Serializes the specified X.509 security token to the specified XML writer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Serializes the specified X.509 security token to the specified XML writer.","pos":[0,74]}]},{"pos":[31776,31831],"content":"The XML writer to which the token should be serialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML writer to which the token should be serialized.","pos":[0,55]}]},{"pos":[31921,32042],"content":"The X.509 security token to serialize. An instance of <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The X.509 security token to serialize.","pos":[0,38]},{"content":"An instance of <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[39,121],"source":" An instance of <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>."}]},{"pos":[32237,32438],"content":"<code>token</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>writer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,83],"source":"<code>token</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;writer&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[90,185],"source":"       -or-       <code>writer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[32534,32643],"content":"<ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> is not assignable from <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>token</code> is not assignable from <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>."},{"pos":[33193,33282],"content":"Gets or Sets the value that specifies whether XmlDsig-defined clause types are preferred.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or Sets the value that specifies whether XmlDsig-defined clause types are preferred.","pos":[0,89]}]},{"pos":[33295,33468],"content":"Supported XmlDSig-defined <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> types are:      -   X509IssuerSerial      -   X509SKI      -   X509Certificate","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Supported XmlDSig-defined &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt; types are:      -   X509IssuerSerial      -   X509SKI      -   X509Certificate","pos":[0,167],"source":"Supported XmlDSig-defined <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> types are:      -   X509IssuerSerial      -   X509SKI      -   X509Certificate"}]},{"pos":[33608,33790],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if XmlDsig-defined clause types are preferred; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if XmlDsig-defined clause types are preferred; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[34449,34679],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.X509NTAuthChainTrustValidator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is used by the current instance during certificate validation when the incoming X.509 certificate is mapped to a Windows account.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.IdentityModel.Tokens.X509NTAuthChainTrustValidator\"></xref> that is used by the current instance during certificate validation when the incoming X.509 certificate is mapped to a Windows account."},{"pos":[34913,35108],"content":"An X.509 certificate validator that will validate a specified X.509 certificate and verify whether the certificate can be mapped to a Windows account and whether the certificate chain is trusted.","needQuote":true,"needEscape":true,"nodes":[{"content":"An X.509 certificate validator that will validate a specified X.509 certificate and verify whether the certificate can be mapped to a Windows account and whether the certificate chain is trusted.","pos":[0,195]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  id: X509SecurityTokenHandler\n  children:\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean)\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean,System.IdentityModel.Selectors.X509CertificateValidator)\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator\n  langs:\n  - csharp\n  name: X509SecurityTokenHandler\n  nameWithType: X509SecurityTokenHandler\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  type: Class\n  summary: Represents a security token handler that processes tokens of type <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>. By default, the handler will perform chain-trust validation of the X.509 certificate.\n  syntax:\n    content: 'public class X509SecurityTokenHandler : System.IdentityModel.Tokens.SecurityTokenHandler'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Tokens.SecurityTokenHandler\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.Configuration\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: X509SecurityTokenHandler()\n  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler()\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509SecurityTokenHandler()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler\"></xref> class with default values.\n  remarks: The <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A> property is set to `false` and the <xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A> validator is used as the default certificate validator.\n  syntax:\n    content: public X509SecurityTokenHandler ();\n    parameters: []\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean)\n  id: '#ctor(System.Boolean)'\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: X509SecurityTokenHandler(Boolean)\n  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean)\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler\"></xref> class by using a value that indicates whether the certificate should be mapped to a Windows account.\n  remarks: The <xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A> validator is used as the default certificate validator.\n  syntax:\n    content: public X509SecurityTokenHandler (bool mapToWindows);\n    parameters:\n    - id: mapToWindows\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the certificate should be mapped to a Windows account; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. Sets the <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows*> property.\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)\n  id: '#ctor(System.IdentityModel.Selectors.X509CertificateValidator)'\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: X509SecurityTokenHandler(X509CertificateValidator)\n  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler(X509CertificateValidator)\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509SecurityTokenHandler(X509CertificateValidator)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler\"></xref> class by using the specified certificate validator.\n  remarks: The <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A> property is set to `false`.\n  syntax:\n    content: public X509SecurityTokenHandler (System.IdentityModel.Selectors.X509CertificateValidator certificateValidator);\n    parameters:\n    - id: certificateValidator\n      type: System.IdentityModel.Selectors.X509CertificateValidator\n      description: The certificate validator to use. Sets the <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator*> property.\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean,System.IdentityModel.Selectors.X509CertificateValidator)\n  id: '#ctor(System.Boolean,System.IdentityModel.Selectors.X509CertificateValidator)'\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: X509SecurityTokenHandler(Boolean,X509CertificateValidator)\n  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean,X509CertificateValidator)\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean,X509CertificateValidator)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler\"></xref> class by using a value that indicates whether the certificate should be mapped to a Windows account and the specified certificate validator.\n  syntax:\n    content: public X509SecurityTokenHandler (bool mapToWindows, System.IdentityModel.Selectors.X509CertificateValidator certificateValidator);\n    parameters:\n    - id: mapToWindows\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the certificate should be mapped to a Windows account; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. Sets the <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows*> property.\n    - id: certificateValidator\n      type: System.IdentityModel.Selectors.X509CertificateValidator\n      description: The certificate validator to use. Sets the <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator*> property.\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  id: CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: CanReadKeyIdentifierClause(XmlReader)\n  nameWithType: X509SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns a value that indicates whether the specified reader is referring to an <xref uid=\"langword_csharp_&lt;ds:X509Data&gt;\" name=\"&lt;ds:X509Data&gt;\" href=\"\"></xref> element.\n  syntax:\n    content: public override bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: An XML reader positioned at the start element of the key identifier clause.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the reader is referring to an <xref uid=\"langword_csharp_&lt;ds:X509Data&gt;\" name=\"&lt;ds:X509Data&gt;\" href=\"\"></xref> element; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)\n  id: CanReadToken(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: CanReadToken(XmlReader)\n  nameWithType: X509SecurityTokenHandler.CanReadToken(XmlReader)\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(XmlReader)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns a value that indicates whether the reader points to an X.509 security token as defined in the WS-Security specification.\n  syntax:\n    content: public override bool CanReadToken (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: A reader pointing to the token XML.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the reader is pointing to an X.509 security token; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken\n  id: CanValidateToken\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: CanValidateToken\n  nameWithType: X509SecurityTokenHandler.CanValidateToken\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a value that indicates whether this handler supports validation of tokens of type <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>.\n  syntax:\n    content: public override bool CanValidateToken { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the handler supports validation of tokens of type <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  id: CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)\n  nameWithType: X509SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns a value that indicates whether the specified key identifier clause can be serialized by this handler.\n  remarks: \"The supported key identifier clause types are:  \\n  \\n1.  <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>  \\n  \\n2.  <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>  \\n  \\n3.  <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>\"\n  syntax:\n    content: public override bool CanWriteKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);\n    parameters:\n    - id: securityKeyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: The key identifier clause to be serialized.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <code>securityKeyIdentifierClause</code> is supported and if the <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes*> property is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>securityKeyIdentifierClause</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken\n  id: CanWriteToken\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: CanWriteToken\n  nameWithType: X509SecurityTokenHandler.CanWriteToken\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a value that indicates whether this handler can write tokens of type <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>.\n  syntax:\n    content: public override bool CanWriteToken { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the handler can write tokens of type <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator\n  id: CertificateValidator\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: CertificateValidator\n  nameWithType: X509SecurityTokenHandler.CertificateValidator\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets or sets the <xref href=\"System.IdentityModel.Selectors.X509CertificateValidator\"></xref> that is used by the current instance.\n  syntax:\n    content: public System.IdentityModel.Selectors.X509CertificateValidator CertificateValidator { get; set; }\n    return:\n      type: System.IdentityModel.Selectors.X509CertificateValidator\n      description: The X.509 certificate validator that is used by the current instance.\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers\n  id: GetTokenTypeIdentifiers\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: GetTokenTypeIdentifiers()\n  nameWithType: X509SecurityTokenHandler.GetTokenTypeIdentifiers()\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the X.509 security token type defined in the WS-Security X.509 Token Profile.\n  syntax:\n    content: public override string[] GetTokenTypeIdentifiers ();\n    parameters: []\n    return:\n      type: System.String[]\n      description: The X.509 token type URI. By default, the value of the <xref:System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate*> property.\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  id: LoadCustomConfiguration(System.Xml.XmlNodeList)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: LoadCustomConfiguration(XmlNodeList)\n  nameWithType: X509SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Loads custom configuration from XML.\n  syntax:\n    content: public override void LoadCustomConfiguration (System.Xml.XmlNodeList customConfigElements);\n    parameters:\n    - id: customConfigElements\n      type: System.Xml.XmlNodeList\n      description: The XML elements that contain the custom configuration.\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>customConfigElements</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The custom configuration specified is not valid.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows\n  id: MapToWindows\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: MapToWindows\n  nameWithType: X509SecurityTokenHandler.MapToWindows\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets or sets a value that indicates whether the validating token should be mapped to a Windows account.\n  syntax:\n    content: public bool MapToWindows { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the validating token should be mapped to a Windows account; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)\n  id: ReadKeyIdentifierClause(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: ReadKeyIdentifierClause(XmlReader)\n  nameWithType: X509SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Deserializes a key identifier clause referenced by the specified XML reader.\n  syntax:\n    content: public override System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: The XML reader referencing the key identifier clause.\n    return:\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: The key identifier clause that was deserialized from the XML.\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(System.Xml.XmlReader)\n  id: ReadToken(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: ReadToken(XmlReader)\n  nameWithType: X509SecurityTokenHandler.ReadToken(XmlReader)\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(XmlReader)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Deserializes the X.509 security token referenced by the specified XML reader.\n  syntax:\n    content: public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: An XML reader that is pointing to an X.509 security token.\n    return:\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The security token deserialized from the XML. An instance of <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>.\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: <code>reader</code> is not pointing to a valid X.509 security token as defined in the WS-Security X.509 Token Profile. Or the encodingType specified is other than Base64 or HexBinary.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType\n  id: TokenType\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: TokenType\n  nameWithType: X509SecurityTokenHandler.TokenType\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the <xref:System.Type> of the tokens that this handler processes.\n  syntax:\n    content: public override Type TokenType { get; }\n    return:\n      type: System.Type\n      description: By default, the type of the <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref> class.\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  id: ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: ValidateToken(SecurityToken)\n  nameWithType: X509SecurityTokenHandler.ValidateToken(SecurityToken)\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Validates the specified X.509 security token.\n  syntax:\n    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity> ValidateToken (System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The token to be validated.\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}\n      description: The identities contained in the token.\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>token</code> is not assignable from <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>token</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*> property is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n There is no issuer name registry (<xref href=\\\"System.IdentityModel.Tokens.IssuerNameRegistry\\\"></xref>) configured. (The <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry*> property of the <xref href=\\\"System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration\\\"></xref> referenced by the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*> property is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.)\"\n  - type: System.IdentityModel.Tokens.SecurityTokenValidationException\n    commentId: T:System.IdentityModel.Tokens.SecurityTokenValidationException\n    description: The current <xref href=\"System.IdentityModel.Selectors.X509CertificateValidator\"></xref> was unable to validate the certificate in the token.\n  - type: System.IdentityModel.Tokens.SecurityTokenException\n    commentId: T:System.IdentityModel.Tokens.SecurityTokenException\n    description: The current <xref href=\"System.IdentityModel.Tokens.IssuerNameRegistry\"></xref> returned <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> when trying to resolve the issuer of the certificate in the token.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  id: WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)\n  nameWithType: X509SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Serializes the specified key identifier clause to the XML writer.\n  syntax:\n    content: public override void WriteKeyIdentifierClause (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: The XML writer to which the key identifier clause should be serialized.\n    - id: securityKeyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: The key identifier clause to serialize.\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>securityKeyIdentifierClause</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>writer</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes*> property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  id: WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: WriteToken(XmlWriter,SecurityToken)\n  nameWithType: X509SecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Serializes the specified X.509 security token to the specified XML writer.\n  syntax:\n    content: public override void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: The XML writer to which the token should be serialized.\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The X.509 security token to serialize. An instance of <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>.\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>token</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>writer</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>token</code> is not assignable from <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes\n  id: WriteXmlDSigDefinedClauseTypes\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: WriteXmlDSigDefinedClauseTypes\n  nameWithType: X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets or Sets the value that specifies whether XmlDsig-defined clause types are preferred.\n  remarks: \"Supported XmlDSig-defined <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> types are:  \\n  \\n-   X509IssuerSerial  \\n  \\n-   X509SKI  \\n  \\n-   X509Certificate\"\n  syntax:\n    content: public bool WriteXmlDSigDefinedClauseTypes { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if XmlDsig-defined clause types are preferred; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator\n  id: X509NTAuthChainTrustValidator\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: X509NTAuthChainTrustValidator\n  nameWithType: X509SecurityTokenHandler.X509NTAuthChainTrustValidator\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets or sets the <xref href=\"System.IdentityModel.Tokens.X509NTAuthChainTrustValidator\"></xref> that is used by the current instance during certificate validation when the incoming X.509 certificate is mapped to a Windows account.\n  syntax:\n    content: public System.IdentityModel.Tokens.X509NTAuthChainTrustValidator X509NTAuthChainTrustValidator { get; set; }\n    return:\n      type: System.IdentityModel.Tokens.X509NTAuthChainTrustValidator\n      description: An X.509 certificate validator that will validate a specified X.509 certificate and verify whether the certificate can be mapped to a Windows account and whether the certificate chain is trusted.\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: System.IdentityModel.Tokens.SecurityTokenHandler\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Xml.XmlException\n  isExternal: true\n  name: System.Xml.XmlException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.IdentityModel.Tokens.SecurityTokenValidationException\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityTokenValidationException\n  nameWithType: SecurityTokenValidationException\n  fullName: System.IdentityModel.Tokens.SecurityTokenValidationException\n- uid: System.IdentityModel.Tokens.SecurityTokenException\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityTokenException\n  nameWithType: SecurityTokenException\n  fullName: System.IdentityModel.Tokens.SecurityTokenException\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: X509SecurityTokenHandler()\n  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler()\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509SecurityTokenHandler()\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: X509SecurityTokenHandler(Boolean)\n  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean)\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: X509SecurityTokenHandler(X509CertificateValidator)\n  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler(X509CertificateValidator)\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509SecurityTokenHandler(X509CertificateValidator)\n- uid: System.IdentityModel.Selectors.X509CertificateValidator\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: X509CertificateValidator\n  nameWithType: X509CertificateValidator\n  fullName: System.IdentityModel.Selectors.X509CertificateValidator\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean,System.IdentityModel.Selectors.X509CertificateValidator)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: X509SecurityTokenHandler(Boolean,X509CertificateValidator)\n  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean,X509CertificateValidator)\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean,X509CertificateValidator)\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: CanReadKeyIdentifierClause(XmlReader)\n  nameWithType: X509SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)\n- uid: System.Xml.XmlReader\n  parent: System.Xml\n  isExternal: true\n  name: XmlReader\n  nameWithType: XmlReader\n  fullName: System.Xml.XmlReader\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: CanReadToken(XmlReader)\n  nameWithType: X509SecurityTokenHandler.CanReadToken(XmlReader)\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(XmlReader)\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: CanValidateToken\n  nameWithType: X509SecurityTokenHandler.CanValidateToken\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)\n  nameWithType: X509SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifierClause\n  nameWithType: SecurityKeyIdentifierClause\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: CanWriteToken\n  nameWithType: X509SecurityTokenHandler.CanWriteToken\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: CertificateValidator\n  nameWithType: X509SecurityTokenHandler.CertificateValidator\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: GetTokenTypeIdentifiers()\n  nameWithType: X509SecurityTokenHandler.GetTokenTypeIdentifiers()\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers()\n- uid: System.String[]\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: LoadCustomConfiguration(XmlNodeList)\n  nameWithType: X509SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)\n- uid: System.Xml.XmlNodeList\n  parent: System.Xml\n  isExternal: false\n  name: XmlNodeList\n  nameWithType: XmlNodeList\n  fullName: System.Xml.XmlNodeList\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: MapToWindows\n  nameWithType: X509SecurityTokenHandler.MapToWindows\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: ReadKeyIdentifierClause(XmlReader)\n  nameWithType: X509SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: ReadToken(XmlReader)\n  nameWithType: X509SecurityTokenHandler.ReadToken(XmlReader)\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(XmlReader)\n- uid: System.IdentityModel.Tokens.SecurityToken\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityToken\n  nameWithType: SecurityToken\n  fullName: System.IdentityModel.Tokens.SecurityToken\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: TokenType\n  nameWithType: X509SecurityTokenHandler.TokenType\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: ValidateToken(SecurityToken)\n  nameWithType: X509SecurityTokenHandler.ValidateToken(SecurityToken)\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(SecurityToken)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<ClaimsIdentity>\n  nameWithType: ReadOnlyCollection<ClaimsIdentity>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Security.Claims.ClaimsIdentity\n    name: ClaimsIdentity\n    nameWithType: ClaimsIdentity\n    fullName: ClaimsIdentity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)\n  nameWithType: X509SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)\n- uid: System.Xml.XmlWriter\n  parent: System.Xml\n  isExternal: true\n  name: XmlWriter\n  nameWithType: XmlWriter\n  fullName: System.Xml.XmlWriter\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: WriteToken(XmlWriter,SecurityToken)\n  nameWithType: X509SecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: WriteXmlDSigDefinedClauseTypes\n  nameWithType: X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: X509NTAuthChainTrustValidator\n  nameWithType: X509SecurityTokenHandler.X509NTAuthChainTrustValidator\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator\n- uid: System.IdentityModel.Tokens.X509NTAuthChainTrustValidator\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: X509NTAuthChainTrustValidator\n  nameWithType: X509NTAuthChainTrustValidator\n  fullName: System.IdentityModel.Tokens.X509NTAuthChainTrustValidator\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor*\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: X509SecurityTokenHandler\n  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause*\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: CanReadKeyIdentifierClause\n  nameWithType: X509SecurityTokenHandler.CanReadKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken*\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: CanReadToken\n  nameWithType: X509SecurityTokenHandler.CanReadToken\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken*\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: CanValidateToken\n  nameWithType: X509SecurityTokenHandler.CanValidateToken\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause*\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: CanWriteKeyIdentifierClause\n  nameWithType: X509SecurityTokenHandler.CanWriteKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken*\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: CanWriteToken\n  nameWithType: X509SecurityTokenHandler.CanWriteToken\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator*\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: CertificateValidator\n  nameWithType: X509SecurityTokenHandler.CertificateValidator\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers*\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: GetTokenTypeIdentifiers\n  nameWithType: X509SecurityTokenHandler.GetTokenTypeIdentifiers\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration*\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: LoadCustomConfiguration\n  nameWithType: X509SecurityTokenHandler.LoadCustomConfiguration\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows*\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: MapToWindows\n  nameWithType: X509SecurityTokenHandler.MapToWindows\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause*\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: ReadKeyIdentifierClause\n  nameWithType: X509SecurityTokenHandler.ReadKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken*\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: ReadToken\n  nameWithType: X509SecurityTokenHandler.ReadToken\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType*\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: TokenType\n  nameWithType: X509SecurityTokenHandler.TokenType\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken*\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: ValidateToken\n  nameWithType: X509SecurityTokenHandler.ValidateToken\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause*\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: WriteKeyIdentifierClause\n  nameWithType: X509SecurityTokenHandler.WriteKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken*\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: WriteToken\n  nameWithType: X509SecurityTokenHandler.WriteToken\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes*\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: WriteXmlDSigDefinedClauseTypes\n  nameWithType: X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator*\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: X509NTAuthChainTrustValidator\n  nameWithType: X509SecurityTokenHandler.X509NTAuthChainTrustValidator\n"}