{"nodes":[{"pos":[603,698],"content":"Defines the lock that implements single-writer/multiple-reader semantics. This is a value type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines the lock that implements single-writer/multiple-reader semantics. This is a value type.","pos":[0,95],"nodes":[{"content":"Defines the lock that implements single-writer/multiple-reader semantics.","pos":[0,73]},{"content":"This is a value type.","pos":[74,95]}]}]},{"pos":[2537,2665],"content":"Indicates whether a specified object is a <bpt id=\"p1\">&lt;xref href=\"System.Threading.LockCookie\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and is equal to the current instance.","needQuote":true,"needEscape":true,"source":"Indicates whether a specified object is a <xref href=\"System.Threading.LockCookie\"></xref> and is equal to the current instance."},{"pos":[2806,2852],"content":"The object to compare to the current instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to compare to the current instance.","pos":[0,46]}]},{"pos":[2911,3126],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the value of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p2\">&lt;/code&gt;</ept> is equal to the value of the current instance; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value of <code>obj</code> is equal to the value of the current instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[3601,3715],"content":"Indicates whether the current instance is equal to the specified <bpt id=\"p1\">&lt;xref href=\"System.Threading.LockCookie\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Indicates whether the current instance is equal to the specified <xref href=\"System.Threading.LockCookie\"></xref>."},{"pos":[3882,3970],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Threading.LockCookie\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare to the current instance.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Threading.LockCookie\"></xref> to compare to the current instance."},{"pos":[4029,4231],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p2\">&lt;/code&gt;</ept> is equal to the value of the current instance; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>obj</code> is equal to the value of the current instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[4643,4683],"content":"Returns the hash code for this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]},{"pos":[4818,4852],"content":"A 32-bit signed integer hash code.","needQuote":true,"needEscape":true,"nodes":[{"content":"A 32-bit signed integer hash code.","pos":[0,34]}]},{"pos":[5448,5540],"content":"Indicates whether two <bpt id=\"p1\">&lt;xref href=\"System.Threading.LockCookie\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures are equal.","needQuote":true,"needEscape":true,"source":"Indicates whether two <xref href=\"System.Threading.LockCookie\"></xref> structures are equal."},{"pos":[5746,5817],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Threading.LockCookie\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare to <ph id=\"ph1\">`b`</ph>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Threading.LockCookie\"></xref> to compare to `b`."},{"pos":[5889,5960],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Threading.LockCookie\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare to <ph id=\"ph1\">`a`</ph>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Threading.LockCookie\"></xref> to compare to `a`."},{"pos":[6019,6200],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">a</ph><ept id=\"p2\">&lt;/code&gt;</ept> is equal to <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">b</ph><ept id=\"p3\">&lt;/code&gt;</ept>; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>a</code> is equal to <code>b</code>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6806,6902],"content":"Indicates whether two <bpt id=\"p1\">&lt;xref href=\"System.Threading.LockCookie\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures are not equal.","needQuote":true,"needEscape":true,"source":"Indicates whether two <xref href=\"System.Threading.LockCookie\"></xref> structures are not equal."},{"pos":[7110,7181],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Threading.LockCookie\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare to <ph id=\"ph1\">`b`</ph>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Threading.LockCookie\"></xref> to compare to `b`."},{"pos":[7253,7324],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Threading.LockCookie\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare to <ph id=\"ph1\">`a`</ph>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Threading.LockCookie\"></xref> to compare to `a`."},{"pos":[7383,7568],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">a</ph><ept id=\"p2\">&lt;/code&gt;</ept> is not equal to <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">b</ph><ept id=\"p3\">&lt;/code&gt;</ept>; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>a</code> is not equal to <code>b</code>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Threading.LockCookie\n  id: LockCookie\n  children:\n  - System.Threading.LockCookie.Equals(System.Object)\n  - System.Threading.LockCookie.Equals(System.Threading.LockCookie)\n  - System.Threading.LockCookie.GetHashCode\n  - System.Threading.LockCookie.op_Equality(System.Threading.LockCookie,System.Threading.LockCookie)\n  - System.Threading.LockCookie.op_Inequality(System.Threading.LockCookie,System.Threading.LockCookie)\n  langs:\n  - csharp\n  name: LockCookie\n  nameWithType: LockCookie\n  fullName: System.Threading.LockCookie\n  type: Struct\n  summary: Defines the lock that implements single-writer/multiple-reader semantics. This is a value type.\n  remarks: ''\n  example:\n  - \"The following example shows how to request a reader lock, upgrade the reader lock to a writer lock, and save the LockCookie. It then uses the LockCookie to downgrade to a reader lock again.  \\n  \\n This code is part of a larger example provided for the <xref:System.Threading.ReaderWriterLock> class.  \\n  \\n [!code-cpp[System.Threading.ReaderWriterLock#2](~/add/codesnippet/cpp/t-system.threading.lockc_1.cpp)]\\n [!code-cs[System.Threading.ReaderWriterLock#2](~/add/codesnippet/csharp/t-system.threading.lockc_1.cs)]\\n [!code-vb[System.Threading.ReaderWriterLock#2](~/add/codesnippet/visualbasic/t-system.threading.lockc_1.vb)]  \\n[!code-cpp[System.Threading.ReaderWriterLock#5](~/add/codesnippet/cpp/t-system.threading.lockc_2.cpp)]\\n[!code-cs[System.Threading.ReaderWriterLock#5](~/add/codesnippet/csharp/t-system.threading.lockc_2.cs)]\\n[!code-vb[System.Threading.ReaderWriterLock#5](~/add/codesnippet/visualbasic/t-system.threading.lockc_2.vb)]  \\n[!code-cpp[System.Threading.ReaderWriterLock#7](~/add/codesnippet/cpp/t-system.threading.lockc_3.cpp)]\\n[!code-cs[System.Threading.ReaderWriterLock#7](~/add/codesnippet/csharp/t-system.threading.lockc_3.cs)]\\n[!code-vb[System.Threading.ReaderWriterLock#7](~/add/codesnippet/visualbasic/t-system.threading.lockc_3.vb)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public struct LockCookie\n  inheritance:\n  - System.ValueType\n  implements: []\n  platform:\n  - net462\n- uid: System.Threading.LockCookie.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Threading.LockCookie\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: LockCookie.Equals(Object)\n  fullName: System.Threading.LockCookie.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  summary: Indicates whether a specified object is a <xref href=\"System.Threading.LockCookie\"></xref> and is equal to the current instance.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare to the current instance.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value of <code>obj</code> is equal to the value of the current instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Threading.LockCookie.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Threading.LockCookie.Equals(System.Threading.LockCookie)\n  id: Equals(System.Threading.LockCookie)\n  parent: System.Threading.LockCookie\n  langs:\n  - csharp\n  name: Equals(LockCookie)\n  nameWithType: LockCookie.Equals(LockCookie)\n  fullName: System.Threading.LockCookie.Equals(LockCookie)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  summary: Indicates whether the current instance is equal to the specified <xref href=\"System.Threading.LockCookie\"></xref>.\n  syntax:\n    content: public bool Equals (System.Threading.LockCookie obj);\n    parameters:\n    - id: obj\n      type: System.Threading.LockCookie\n      description: The <xref href=\"System.Threading.LockCookie\"></xref> to compare to the current instance.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>obj</code> is equal to the value of the current instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Threading.LockCookie.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Threading.LockCookie.GetHashCode\n  id: GetHashCode\n  parent: System.Threading.LockCookie\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: LockCookie.GetHashCode()\n  fullName: System.Threading.LockCookie.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  summary: Returns the hash code for this instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer hash code.\n  overload: System.Threading.LockCookie.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Threading.LockCookie.op_Equality(System.Threading.LockCookie,System.Threading.LockCookie)\n  id: op_Equality(System.Threading.LockCookie,System.Threading.LockCookie)\n  parent: System.Threading.LockCookie\n  langs:\n  - csharp\n  name: op_Equality(LockCookie,LockCookie)\n  nameWithType: LockCookie.op_Equality(LockCookie,LockCookie)\n  fullName: System.Threading.LockCookie.op_Equality(LockCookie,LockCookie)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  summary: Indicates whether two <xref href=\"System.Threading.LockCookie\"></xref> structures are equal.\n  syntax:\n    content: public static bool op_Equality (System.Threading.LockCookie a, System.Threading.LockCookie b);\n    parameters:\n    - id: a\n      type: System.Threading.LockCookie\n      description: The <xref href=\"System.Threading.LockCookie\"></xref> to compare to `b`.\n    - id: b\n      type: System.Threading.LockCookie\n      description: The <xref href=\"System.Threading.LockCookie\"></xref> to compare to `a`.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>a</code> is equal to <code>b</code>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Threading.LockCookie.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Threading.LockCookie.op_Inequality(System.Threading.LockCookie,System.Threading.LockCookie)\n  id: op_Inequality(System.Threading.LockCookie,System.Threading.LockCookie)\n  parent: System.Threading.LockCookie\n  langs:\n  - csharp\n  name: op_Inequality(LockCookie,LockCookie)\n  nameWithType: LockCookie.op_Inequality(LockCookie,LockCookie)\n  fullName: System.Threading.LockCookie.op_Inequality(LockCookie,LockCookie)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  summary: Indicates whether two <xref href=\"System.Threading.LockCookie\"></xref> structures are not equal.\n  syntax:\n    content: public static bool op_Inequality (System.Threading.LockCookie a, System.Threading.LockCookie b);\n    parameters:\n    - id: a\n      type: System.Threading.LockCookie\n      description: The <xref href=\"System.Threading.LockCookie\"></xref> to compare to `b`.\n    - id: b\n      type: System.Threading.LockCookie\n      description: The <xref href=\"System.Threading.LockCookie\"></xref> to compare to `a`.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>a</code> is not equal to <code>b</code>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Threading.LockCookie.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Threading.LockCookie.Equals(System.Object)\n  parent: System.Threading.LockCookie\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: LockCookie.Equals(Object)\n  fullName: System.Threading.LockCookie.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.LockCookie.Equals(System.Threading.LockCookie)\n  parent: System.Threading.LockCookie\n  isExternal: false\n  name: Equals(LockCookie)\n  nameWithType: LockCookie.Equals(LockCookie)\n  fullName: System.Threading.LockCookie.Equals(LockCookie)\n- uid: System.Threading.LockCookie\n  parent: System.Threading\n  isExternal: false\n  name: LockCookie\n  nameWithType: LockCookie\n  fullName: System.Threading.LockCookie\n- uid: System.Threading.LockCookie.GetHashCode\n  parent: System.Threading.LockCookie\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: LockCookie.GetHashCode()\n  fullName: System.Threading.LockCookie.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.LockCookie.op_Equality(System.Threading.LockCookie,System.Threading.LockCookie)\n  parent: System.Threading.LockCookie\n  isExternal: false\n  name: op_Equality(LockCookie,LockCookie)\n  nameWithType: LockCookie.op_Equality(LockCookie,LockCookie)\n  fullName: System.Threading.LockCookie.op_Equality(LockCookie,LockCookie)\n- uid: System.Threading.LockCookie.op_Inequality(System.Threading.LockCookie,System.Threading.LockCookie)\n  parent: System.Threading.LockCookie\n  isExternal: false\n  name: op_Inequality(LockCookie,LockCookie)\n  nameWithType: LockCookie.op_Inequality(LockCookie,LockCookie)\n  fullName: System.Threading.LockCookie.op_Inequality(LockCookie,LockCookie)\n- uid: System.Threading.LockCookie.Equals*\n  parent: System.Threading.LockCookie\n  isExternal: false\n  name: Equals\n  nameWithType: LockCookie.Equals\n- uid: System.Threading.LockCookie.GetHashCode*\n  parent: System.Threading.LockCookie\n  isExternal: false\n  name: GetHashCode\n  nameWithType: LockCookie.GetHashCode\n- uid: System.Threading.LockCookie.op_Equality*\n  parent: System.Threading.LockCookie\n  isExternal: false\n  name: op_Equality\n  nameWithType: LockCookie.op_Equality\n- uid: System.Threading.LockCookie.op_Inequality*\n  parent: System.Threading.LockCookie\n  isExternal: false\n  name: op_Inequality\n  nameWithType: LockCookie.op_Inequality\n"}