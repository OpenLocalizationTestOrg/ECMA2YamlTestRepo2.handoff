{"nodes":[{"pos":[1346,1430],"content":"The default message handler used by <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.HttpClient\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The default message handler used by <xref href=\"System.Net.Http.HttpClient\"></xref>."},{"pos":[1442,1589],"content":"The HttpClientHandler class and classes derived from it enable developers to configure a variety of options ranging from proxies to authentication.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The HttpClientHandler class and classes derived from it enable developers to configure a variety of options ranging from proxies to authentication.","pos":[0,147]}]},{"pos":[2352,2438],"content":"Creates an instance of a <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.HttpClientHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Creates an instance of a <xref href=\"System.Net.Http.HttpClientHandler\"></xref> class."},{"pos":[2983,3075],"content":"Gets or sets a value that indicates whether the handler should follow redirection responses.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the handler should follow redirection responses.","pos":[0,92]}]},{"pos":[3088,3901],"content":"Set AllowAutoRedirect to `true` if you want the handler to automatically follow HTTP redirection headers to the new location of the resource. The maximum number of redirections to follow is set by the <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A> property.       If AllowAutoRedirect is set to `false`, all HTTP responses with an HTTP status code from 300 to 399 are  returned to the application.       The Authorization header is cleared on auto-redirects and the handler automatically tries to re-authenticate to the redirected location. In practice, this means that an application can't put custom authentication information into the Authorization header if it is possible to encounter redirection. Instead, the application must implement and register a custom authentication module.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Set AllowAutoRedirect to <ph id=\"ph1\">`true`</ph> if you want the handler to automatically follow HTTP redirection headers to the new location of the resource.","pos":[0,141],"source":"Set AllowAutoRedirect to `true` if you want the handler to automatically follow HTTP redirection headers to the new location of the resource."},{"content":"The maximum number of redirections to follow is set by the &lt;xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A&gt; property.","pos":[142,279],"source":" The maximum number of redirections to follow is set by the <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A> property."},{"content":"If AllowAutoRedirect is set to <ph id=\"ph1\">`false`</ph>, all HTTP responses with an HTTP status code from 300 to 399 are  returned to the application.","pos":[286,419],"source":"       If AllowAutoRedirect is set to `false`, all HTTP responses with an HTTP status code from 300 to 399 are  returned to the application."},{"content":"The Authorization header is cleared on auto-redirects and the handler automatically tries to re-authenticate to the redirected location.","pos":[426,562]},{"content":"In practice, this means that an application can't put custom authentication information into the Authorization header if it is possible to encounter redirection.","pos":[563,724]},{"content":"Instead, the application must implement and register a custom authentication module.","pos":[725,809]}]},{"pos":[4028,4304],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the if the handler should follow redirection responses; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the if the handler should follow redirection responses; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,193],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the if the handler should follow redirection responses; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[194,276],"source":" The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[4815,4938],"content":"Gets or sets the type of decompression method used by the handler for automatic decompression of the HTTP content response.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the type of decompression method used by the handler for automatic decompression of the HTTP content response.","pos":[0,123]}]},{"pos":[5113,5229],"content":"The automatic decompression method used by the handler. The default value is <xref:System.Net.DecompressionMethods>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The automatic decompression method used by the handler. The default value is <xref:System.Net.DecompressionMethods>.","pos":[0,116],"nodes":[{"content":"The automatic decompression method used by the handler.","pos":[0,55]},{"content":"The default value is &lt;xref:System.Net.DecompressionMethods&gt;.","pos":[56,116],"source":" The default value is <xref:System.Net.DecompressionMethods>."}]}]},{"pos":[5755,5930],"content":"Gets or sets a value that indicates if the certificate is automatically picked from the certificate store or if the caller is allowed to pass in a specific client certificate.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates if the certificate is automatically picked from the certificate store or if the caller is allowed to pass in a specific client certificate.","pos":[0,175]}]},{"pos":[6123,6192],"content":"The collection of security certificates associated with this handler.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection of security certificates associated with this handler.","pos":[0,69]}]},{"pos":[6675,6753],"content":"Gets or sets the cookie container used to store server cookies by the handler.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the cookie container used to store server cookies by the handler.","pos":[0,78]}]},{"pos":[6766,7418],"content":"The CookieContainer property provides an instance of the <xref:System.Net.CookieContainer> class that contains the cookies associated with this handler.       If the <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> property is `true`, the CookieContainer property represents the cookie container used to store the server cookies. The user can set custom cookies before sending requests using this property. If the  <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> property is false and the user adds cookies to CookieContainer, cookies are ignored and not sent to the server. Setting the CookieContainer to `null` will throw an exception.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The CookieContainer property provides an instance of the &lt;xref:System.Net.CookieContainer&gt; class that contains the cookies associated with this handler.","pos":[0,152],"source":"The CookieContainer property provides an instance of the <xref:System.Net.CookieContainer> class that contains the cookies associated with this handler."},{"content":"If the &lt;xref:System.Net.Http.HttpClientHandler.UseCookies%2A&gt; property is <ph id=\"ph1\">`true`</ph>, the CookieContainer property represents the cookie container used to store the server cookies.","pos":[159,335],"source":"       If the <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> property is `true`, the CookieContainer property represents the cookie container used to store the server cookies."},{"content":"The user can set custom cookies before sending requests using this property.","pos":[336,412]},{"content":"If the  &lt;xref:System.Net.Http.HttpClientHandler.UseCookies%2A&gt; property is false and the user adds cookies to CookieContainer, cookies are ignored and not sent to the server.","pos":[413,587],"source":" If the  <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> property is false and the user adds cookies to CookieContainer, cookies are ignored and not sent to the server."},{"content":"Setting the CookieContainer to <ph id=\"ph1\">`null`</ph> will throw an exception.","pos":[588,650],"source":" Setting the CookieContainer to `null` will throw an exception."}]},{"pos":[7577,7642],"content":"The cookie container used to store server cookies by the handler.","needQuote":true,"needEscape":true,"nodes":[{"content":"The cookie container used to store server cookies by the handler.","pos":[0,65]}]},{"pos":[8096,8157],"content":"Gets or sets authentication information used by this handler.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets authentication information used by this handler.","pos":[0,61]}]},{"pos":[8305,8441],"content":"The authentication credentials associated with the handler. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The authentication credentials associated with the handler.","pos":[0,59]},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[60,136],"source":" The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[8928,9077],"content":"Releases the unmanaged resources used by the <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.HttpClientHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and optionally disposes of the managed resources.","needQuote":true,"needEscape":true,"source":"Releases the unmanaged resources used by the <xref href=\"System.Net.Http.HttpClientHandler\"></xref> and optionally disposes of the managed resources."},{"pos":[9090,9629],"content":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.       When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.HttpClientHandler> references. This method invokes the `Dispose()` method of each referenced object.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is called by the public <ph id=\"ph1\">`Dispose()`</ph> method and the &lt;xref:System.Object.Finalize%2A&gt; method.","pos":[0,103],"source":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method."},{"content":"<ph id=\"ph1\">`Dispose()`</ph> invokes the protected <ph id=\"ph2\">`Dispose(Boolean)`</ph> method with the <ph id=\"ph3\">`disposing`</ph> parameter set to <ph id=\"ph4\">`true`</ph>.","pos":[104,209],"source":"`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`."},{"content":"&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id=\"ph1\">`Dispose`</ph> with <ph id=\"ph2\">`disposing`</ph> set to <ph id=\"ph3\">`false`</ph>.","pos":[210,293],"source":" <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`."},{"content":"When the <ph id=\"ph1\">`disposing`</ph> parameter is <ph id=\"ph2\">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.Net.Http.HttpClientHandler&gt; references.","pos":[300,467],"source":"       When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.HttpClientHandler> references."},{"content":"This method invokes the <ph id=\"ph1\">`Dispose()`</ph> method of each referenced object.","pos":[468,537],"source":" This method invokes the `Dispose()` method of each referenced object."}]},{"pos":[9786,9996],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to releases only unmanaged resources.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release both managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to releases only unmanaged resources."},{"pos":[10507,10577],"content":"Gets or sets the maximum number of redirects that the handler follows.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the maximum number of redirects that the handler follows.","pos":[0,70]}]},{"pos":[10589,10781],"content":"The MaxAutomaticRedirections property sets the maximum number of redirections for the request to follow if the &lt;xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A&gt; property is <ph id=\"ph1\">`true`</ph>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The MaxAutomaticRedirections property sets the maximum number of redirections for the request to follow if the <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> property is `true`."},{"pos":[10911,11005],"content":"The maximum number of redirection responses that the handler follows. The default value is 50.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum number of redirection responses that the handler follows. The default value is 50.","pos":[0,94],"nodes":[{"content":"The maximum number of redirection responses that the handler follows.","pos":[0,69]},{"content":"The default value is 50.","pos":[70,94]}]}]},{"pos":[11548,11621],"content":"Gets or sets the maximum request content buffer size used by the handler.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the maximum request content buffer size used by the handler.","pos":[0,73]}]},{"pos":[11633,11863],"content":"An app can set the MaxRequestContentBufferSize property to a lower value to limit the size of the request buffer. If the size of the request content is greater than the MaxRequestContentBufferSize property, an exception is thrown.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"An app can set the MaxRequestContentBufferSize property to a lower value to limit the size of the request buffer. If the size of the request content is greater than the MaxRequestContentBufferSize property, an exception is thrown.","pos":[0,230],"nodes":[{"content":"An app can set the MaxRequestContentBufferSize property to a lower value to limit the size of the request buffer.","pos":[0,113]},{"content":"If the size of the request content is greater than the MaxRequestContentBufferSize property, an exception is thrown.","pos":[114,230]}]}]},{"pos":[11997,12080],"content":"The maximum request content buffer size in bytes. The default value is 2 gigabytes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum request content buffer size in bytes. The default value is 2 gigabytes.","pos":[0,83],"nodes":[{"content":"The maximum request content buffer size in bytes.","pos":[0,49]},{"content":"The default value is 2 gigabytes.","pos":[50,83]}]}]},{"pos":[12566,12669],"content":"Gets or sets a value that indicates whether the handler sends an Authorization header with the request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the handler sends an Authorization header with the request.","pos":[0,103]}]},{"pos":[12682,13599],"content":"After a client request to a specific <xref:System.Uri> is successfully authenticated, if the PreAuthenticate property is `true` and credentials are supplied, <xref:System.Net.Http.HttpClientHandler> matches against the credential list supplied in the  <xref:System.Net.Http.HttpClientHandler.Credentials%2A> property. The Authorization header is sent with each request to any <xref:System.Uri> that matches the specific <xref:System.Uri> up to the last forward slash.       If the client request to a specific <xref:System.Uri> is not successfully authenticated, the request uses standard authentication procedures.       With the exception of the first request, the PreAuthenticate property indicates whether to send authentication information with subsequent requests to a <xref:System.Uri> that matches the specific <xref:System.Uri> up to the last forward slash without waiting to be challenged by the server.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"After a client request to a specific &lt;xref:System.Uri&gt; is successfully authenticated, if the PreAuthenticate property is <ph id=\"ph1\">`true`</ph> and credentials are supplied, &lt;xref:System.Net.Http.HttpClientHandler&gt; matches against the credential list supplied in the  &lt;xref:System.Net.Http.HttpClientHandler.Credentials%2A&gt; property.","pos":[0,317],"source":"After a client request to a specific <xref:System.Uri> is successfully authenticated, if the PreAuthenticate property is `true` and credentials are supplied, <xref:System.Net.Http.HttpClientHandler> matches against the credential list supplied in the  <xref:System.Net.Http.HttpClientHandler.Credentials%2A> property."},{"content":"The Authorization header is sent with each request to any &lt;xref:System.Uri&gt; that matches the specific &lt;xref:System.Uri&gt; up to the last forward slash.","pos":[318,467],"source":" The Authorization header is sent with each request to any <xref:System.Uri> that matches the specific <xref:System.Uri> up to the last forward slash."},{"content":"If the client request to a specific &lt;xref:System.Uri&gt; is not successfully authenticated, the request uses standard authentication procedures.","pos":[474,615],"source":"       If the client request to a specific <xref:System.Uri> is not successfully authenticated, the request uses standard authentication procedures."},{"content":"With the exception of the first request, the PreAuthenticate property indicates whether to send authentication information with subsequent requests to a &lt;xref:System.Uri&gt; that matches the specific &lt;xref:System.Uri&gt; up to the last forward slash without waiting to be challenged by the server.","pos":[622,913],"source":"       With the exception of the first request, the PreAuthenticate property indicates whether to send authentication information with subsequent requests to a <xref:System.Uri> that matches the specific <xref:System.Uri> up to the last forward slash without waiting to be challenged by the server."}]},{"pos":[13724,14043],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> for the handler to send an HTTP Authorization header with requests after authentication has taken place; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the handler to send an HTTP Authorization header with requests after authentication has taken place; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,240],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> for the handler to send an HTTP Authorization header with requests after authentication has taken place; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[241,319],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[14467,14518],"content":"Gets or sets proxy information used by the handler.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets proxy information used by the handler.","pos":[0,51]}]},{"pos":[16670,16795],"content":"The proxy information used by the handler. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The proxy information used by the handler.","pos":[0,42]},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[43,125],"source":" The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[17483,17697],"content":"Creates an instance of  <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.HttpResponseMessage\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> based on the information provided in the <bpt id=\"p2\">&lt;xref href=\"System.Net.Http.HttpRequestMessage\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> as an operation that will not block.","needQuote":true,"needEscape":true,"source":"Creates an instance of  <xref href=\"System.Net.Http.HttpResponseMessage\"></xref> based on the information provided in the <xref href=\"System.Net.Http.HttpRequestMessage\"></xref> as an operation that will not block."},{"pos":[17709,17958],"content":"This operation is does not block. It returns an instance of <xref:System.Threading.Tasks.Task%601> to represent the asynchronous operation. When the operation completes, <xref:System.Threading.Tasks.Task%601.Result%2A> contains the response message.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This operation is does not block. It returns an instance of <xref:System.Threading.Tasks.Task%601> to represent the asynchronous operation. When the operation completes, <xref:System.Threading.Tasks.Task%601.Result%2A> contains the response message.","pos":[0,249],"nodes":[{"content":"This operation is does not block.","pos":[0,33]},{"content":"It returns an instance of &lt;xref:System.Threading.Tasks.Task%601&gt; to represent the asynchronous operation.","pos":[34,139],"source":" It returns an instance of <xref:System.Threading.Tasks.Task%601> to represent the asynchronous operation."},{"content":"When the operation completes, &lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt; contains the response message.","pos":[140,249],"source":" When the operation completes, <xref:System.Threading.Tasks.Task%601.Result%2A> contains the response message."}]}]},{"pos":[18276,18301],"content":"The HTTP request message.","needQuote":true,"needEscape":true,"nodes":[{"content":"The HTTP request message.","pos":[0,25]}]},{"pos":[18396,18441],"content":"A cancellation token to cancel the operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"A cancellation token to cancel the operation.","pos":[0,45]}]},{"pos":[18550,18606],"content":"The task object representing the asynchronous operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The task object representing the asynchronous operation.","pos":[0,56]}]},{"pos":[18780,18870],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">request</ph><ept id=\"p1\">&lt;/code&gt;</ept> was <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>request</code> was <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[19339,19437],"content":"Gets a value that indicates whether the handler supports automatic response content decompression.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the handler supports automatic response content decompression.","pos":[0,98]}]},{"pos":[19579,19869],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the if the handler supports automatic response content decompression; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the if the handler supports automatic response content decompression; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,207],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the if the handler supports automatic response content decompression; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[208,290],"source":" The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[20348,20420],"content":"Gets a value that indicates whether the handler supports proxy settings.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the handler supports proxy settings.","pos":[0,72]}]},{"pos":[20545,20809],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the if the handler supports proxy settings; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the if the handler supports proxy settings; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,181],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the if the handler supports proxy settings; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[182,264],"source":" The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[21351,21581],"content":"Gets a value that indicates whether the handler supports configuration settings for the &lt;xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect<bpt id=\"p1\">*</bpt>&gt; and &lt;xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections<ept id=\"p1\">*</ept>&gt; properties.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether the handler supports configuration settings for the <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect*> and <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections*> properties."},{"pos":[21722,22144],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the if the handler supports configuration settings for the <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect*> and <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections*> properties; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the if the handler supports configuration settings for the &lt;xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect<bpt id=\"p2\">*</bpt>&gt; and &lt;xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections<ept id=\"p2\">*</ept>&gt; properties; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,339],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the if the handler supports configuration settings for the <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect*> and <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections*> properties; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[340,422],"source":" The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[22607,22810],"content":"Gets or sets a value that indicates whether the handler uses the  <xref:System.Net.Http.HttpClientHandler.CookieContainer*> property  to store server cookies and uses these cookies when sending requests.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the handler uses the  &lt;xref:System.Net.Http.HttpClientHandler.CookieContainer*&gt; property  to store server cookies and uses these cookies when sending requests.","pos":[0,203],"source":"Gets or sets a value that indicates whether the handler uses the  <xref:System.Net.Http.HttpClientHandler.CookieContainer*> property  to store server cookies and uses these cookies when sending requests."}]},{"pos":[22929,23325],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the if the handler supports uses the  <xref:System.Net.Http.HttpClientHandler.CookieContainer*> property  to store server cookies and uses these cookies when sending requests; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the if the handler supports uses the  &lt;xref:System.Net.Http.HttpClientHandler.CookieContainer*&gt; property  to store server cookies and uses these cookies when sending requests; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,313],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the if the handler supports uses the  <xref:System.Net.Http.HttpClientHandler.CookieContainer*> property  to store server cookies and uses these cookies when sending requests; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[314,396],"source":" The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[23824,23925],"content":"Gets or sets a value that controls whether default credentials are sent with requests by the handler.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that controls whether default credentials are sent with requests by the handler.","pos":[0,101]}]},{"pos":[23937,24474],"content":"Set this property to `true` when requests made by the <xref:System.Net.Http.HttpClientHandler> object should, if requested by the server, be authenticated using the credentials of the currently logged on user. For client applications, this is the desired behavior in most scenarios. For middle-tier applications, such as ASP.NET applications, instead of using this property, you would typically set the <xref:System.Net.Http.HttpClientHandler.Credentials%2A> property to the credentials of the client on whose behalf the request is made.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Set this property to <ph id=\"ph1\">`true`</ph> when requests made by the &lt;xref:System.Net.Http.HttpClientHandler&gt; object should, if requested by the server, be authenticated using the credentials of the currently logged on user.","pos":[0,209],"source":"Set this property to `true` when requests made by the <xref:System.Net.Http.HttpClientHandler> object should, if requested by the server, be authenticated using the credentials of the currently logged on user."},{"content":"For client applications, this is the desired behavior in most scenarios.","pos":[210,282]},{"content":"For middle-tier applications, such as ASP.NET applications, instead of using this property, you would typically set the &lt;xref:System.Net.Http.HttpClientHandler.Credentials%2A&gt; property to the credentials of the client on whose behalf the request is made.","pos":[283,537],"source":" For middle-tier applications, such as ASP.NET applications, instead of using this property, you would typically set the <xref:System.Net.Http.HttpClientHandler.Credentials%2A> property to the credentials of the client on whose behalf the request is made."}]},{"pos":[24604,24860],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the default credentials are used; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the default credentials are used; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,171],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the default credentials are used; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[172,256],"source":" The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[25305,25387],"content":"Gets or sets a value that indicates whether the handler uses a proxy for requests.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the handler uses a proxy for requests.","pos":[0,82]}]},{"pos":[25504,25769],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the handler should use a proxy for requests; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the handler should use a proxy for requests; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,182],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the handler should use a proxy for requests; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[183,265],"source":" The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.Http.HttpClientHandler\n  id: HttpClientHandler\n  children:\n  - System.Net.Http.HttpClientHandler.#ctor\n  - System.Net.Http.HttpClientHandler.AllowAutoRedirect\n  - System.Net.Http.HttpClientHandler.AutomaticDecompression\n  - System.Net.Http.HttpClientHandler.ClientCertificateOptions\n  - System.Net.Http.HttpClientHandler.CookieContainer\n  - System.Net.Http.HttpClientHandler.Credentials\n  - System.Net.Http.HttpClientHandler.Dispose(System.Boolean)\n  - System.Net.Http.HttpClientHandler.MaxAutomaticRedirections\n  - System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize\n  - System.Net.Http.HttpClientHandler.PreAuthenticate\n  - System.Net.Http.HttpClientHandler.Proxy\n  - System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  - System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression\n  - System.Net.Http.HttpClientHandler.SupportsProxy\n  - System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration\n  - System.Net.Http.HttpClientHandler.UseCookies\n  - System.Net.Http.HttpClientHandler.UseDefaultCredentials\n  - System.Net.Http.HttpClientHandler.UseProxy\n  langs:\n  - csharp\n  name: HttpClientHandler\n  nameWithType: HttpClientHandler\n  fullName: System.Net.Http.HttpClientHandler\n  type: Class\n  summary: The default message handler used by <xref href=\"System.Net.Http.HttpClient\"></xref>.\n  remarks: The HttpClientHandler class and classes derived from it enable developers to configure a variety of options ranging from proxies to authentication.\n  example:\n  - '[!code-cs[System.Net.Http.HttpClientHandler#1](~/add/codesnippet/csharp/t-system.net.http.httpcl_0_1.cs)]'\n  syntax:\n    content: 'public class HttpClientHandler : System.Net.Http.HttpMessageHandler'\n  inheritance:\n  - System.Object\n  - System.Net.Http.HttpMessageHandler\n  implements: []\n  inheritedMembers:\n  - System.Net.Http.HttpMessageHandler.Dispose\n  platform:\n  - net462\n- uid: System.Net.Http.HttpClientHandler.#ctor\n  id: '#ctor'\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: HttpClientHandler()\n  nameWithType: HttpClientHandler.HttpClientHandler()\n  fullName: System.Net.Http.HttpClientHandler.HttpClientHandler()\n  type: Constructor\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: Creates an instance of a <xref href=\"System.Net.Http.HttpClientHandler\"></xref> class.\n  syntax:\n    content: public HttpClientHandler ();\n    parameters: []\n  overload: System.Net.Http.HttpClientHandler.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.HttpClientHandler.AllowAutoRedirect\n  id: AllowAutoRedirect\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: AllowAutoRedirect\n  nameWithType: HttpClientHandler.AllowAutoRedirect\n  fullName: System.Net.Http.HttpClientHandler.AllowAutoRedirect\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: Gets or sets a value that indicates whether the handler should follow redirection responses.\n  remarks: \"Set AllowAutoRedirect to `true` if you want the handler to automatically follow HTTP redirection headers to the new location of the resource. The maximum number of redirections to follow is set by the <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A> property.  \\n  \\n If AllowAutoRedirect is set to `false`, all HTTP responses with an HTTP status code from 300 to 399 are  returned to the application.  \\n  \\n The Authorization header is cleared on auto-redirects and the handler automatically tries to re-authenticate to the redirected location. In practice, this means that an application can't put custom authentication information into the Authorization header if it is possible to encounter redirection. Instead, the application must implement and register a custom authentication module.\"\n  syntax:\n    content: public bool AllowAutoRedirect { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the if the handler should follow redirection responses; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Net.Http.HttpClientHandler.AllowAutoRedirect*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.HttpClientHandler.AutomaticDecompression\n  id: AutomaticDecompression\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: AutomaticDecompression\n  nameWithType: HttpClientHandler.AutomaticDecompression\n  fullName: System.Net.Http.HttpClientHandler.AutomaticDecompression\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: Gets or sets the type of decompression method used by the handler for automatic decompression of the HTTP content response.\n  syntax:\n    content: public System.Net.DecompressionMethods AutomaticDecompression { get; set; }\n    return:\n      type: System.Net.DecompressionMethods\n      description: The automatic decompression method used by the handler. The default value is <xref:System.Net.DecompressionMethods>.\n  overload: System.Net.Http.HttpClientHandler.AutomaticDecompression*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.HttpClientHandler.ClientCertificateOptions\n  id: ClientCertificateOptions\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: ClientCertificateOptions\n  nameWithType: HttpClientHandler.ClientCertificateOptions\n  fullName: System.Net.Http.HttpClientHandler.ClientCertificateOptions\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: Gets or sets a value that indicates if the certificate is automatically picked from the certificate store or if the caller is allowed to pass in a specific client certificate.\n  syntax:\n    content: public System.Net.Http.ClientCertificateOption ClientCertificateOptions { get; set; }\n    return:\n      type: System.Net.Http.ClientCertificateOption\n      description: The collection of security certificates associated with this handler.\n  overload: System.Net.Http.HttpClientHandler.ClientCertificateOptions*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.HttpClientHandler.CookieContainer\n  id: CookieContainer\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: CookieContainer\n  nameWithType: HttpClientHandler.CookieContainer\n  fullName: System.Net.Http.HttpClientHandler.CookieContainer\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: Gets or sets the cookie container used to store server cookies by the handler.\n  remarks: \"The CookieContainer property provides an instance of the <xref:System.Net.CookieContainer> class that contains the cookies associated with this handler.  \\n  \\n If the <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> property is `true`, the CookieContainer property represents the cookie container used to store the server cookies. The user can set custom cookies before sending requests using this property. If the  <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> property is false and the user adds cookies to CookieContainer, cookies are ignored and not sent to the server. Setting the CookieContainer to `null` will throw an exception.\"\n  syntax:\n    content: public System.Net.CookieContainer CookieContainer { get; set; }\n    return:\n      type: System.Net.CookieContainer\n      description: The cookie container used to store server cookies by the handler.\n  overload: System.Net.Http.HttpClientHandler.CookieContainer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.HttpClientHandler.Credentials\n  id: Credentials\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: Credentials\n  nameWithType: HttpClientHandler.Credentials\n  fullName: System.Net.Http.HttpClientHandler.Credentials\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: Gets or sets authentication information used by this handler.\n  syntax:\n    content: public System.Net.ICredentials Credentials { get; set; }\n    return:\n      type: System.Net.ICredentials\n      description: The authentication credentials associated with the handler. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Net.Http.HttpClientHandler.Credentials*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.HttpClientHandler.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: HttpClientHandler.Dispose(Boolean)\n  fullName: System.Net.Http.HttpClientHandler.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: Releases the unmanaged resources used by the <xref href=\"System.Net.Http.HttpClientHandler\"></xref> and optionally disposes of the managed resources.\n  remarks: \"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \\n  \\n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.HttpClientHandler> references. This method invokes the `Dispose()` method of each referenced object.\"\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release both managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to releases only unmanaged resources.\n  overload: System.Net.Http.HttpClientHandler.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.HttpClientHandler.MaxAutomaticRedirections\n  id: MaxAutomaticRedirections\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: MaxAutomaticRedirections\n  nameWithType: HttpClientHandler.MaxAutomaticRedirections\n  fullName: System.Net.Http.HttpClientHandler.MaxAutomaticRedirections\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: Gets or sets the maximum number of redirects that the handler follows.\n  remarks: The MaxAutomaticRedirections property sets the maximum number of redirections for the request to follow if the <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> property is `true`.\n  syntax:\n    content: public int MaxAutomaticRedirections { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum number of redirection responses that the handler follows. The default value is 50.\n  overload: System.Net.Http.HttpClientHandler.MaxAutomaticRedirections*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize\n  id: MaxRequestContentBufferSize\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: MaxRequestContentBufferSize\n  nameWithType: HttpClientHandler.MaxRequestContentBufferSize\n  fullName: System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: Gets or sets the maximum request content buffer size used by the handler.\n  remarks: An app can set the MaxRequestContentBufferSize property to a lower value to limit the size of the request buffer. If the size of the request content is greater than the MaxRequestContentBufferSize property, an exception is thrown.\n  syntax:\n    content: public long MaxRequestContentBufferSize { get; set; }\n    return:\n      type: System.Int64\n      description: The maximum request content buffer size in bytes. The default value is 2 gigabytes.\n  overload: System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.HttpClientHandler.PreAuthenticate\n  id: PreAuthenticate\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: PreAuthenticate\n  nameWithType: HttpClientHandler.PreAuthenticate\n  fullName: System.Net.Http.HttpClientHandler.PreAuthenticate\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: Gets or sets a value that indicates whether the handler sends an Authorization header with the request.\n  remarks: \"After a client request to a specific <xref:System.Uri> is successfully authenticated, if the PreAuthenticate property is `true` and credentials are supplied, <xref:System.Net.Http.HttpClientHandler> matches against the credential list supplied in the  <xref:System.Net.Http.HttpClientHandler.Credentials%2A> property. The Authorization header is sent with each request to any <xref:System.Uri> that matches the specific <xref:System.Uri> up to the last forward slash.  \\n  \\n If the client request to a specific <xref:System.Uri> is not successfully authenticated, the request uses standard authentication procedures.  \\n  \\n With the exception of the first request, the PreAuthenticate property indicates whether to send authentication information with subsequent requests to a <xref:System.Uri> that matches the specific <xref:System.Uri> up to the last forward slash without waiting to be challenged by the server.\"\n  syntax:\n    content: public bool PreAuthenticate { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> for the handler to send an HTTP Authorization header with requests after authentication has taken place; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.Http.HttpClientHandler.PreAuthenticate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.HttpClientHandler.Proxy\n  id: Proxy\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: Proxy\n  nameWithType: HttpClientHandler.Proxy\n  fullName: System.Net.Http.HttpClientHandler.Proxy\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: Gets or sets proxy information used by the handler.\n  remarks: \"The Proxy property identifies the <xref:System.Net.WebProxy> object to use to process requests to Internet resources. To specify that no proxy should be used, set the Proxy property to the proxy instance returned by the <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A> method.  \\n  \\n The local computer or application config file may specify that a default proxy be used. If the Proxy property is specified, then the proxy settings from the Proxy property override the local computer or application config file and the handler will use the proxy settings specified. If no proxy is specified in a config file and the Proxy property is unspecified, the handler uses the proxy settings inherited from Internet Explorer on the local computer. If there are no proxy settings in Internet Explorer, the request is sent directly to the server.  \\n  \\n The <xref:System.Net.Http.HttpClientHandler> class parses a proxy bypass list with wildcard characters inherited from Internet Explorer the same as the bypass list is parsed directly by Internet Explorer. For example, the <xref:System.Net.Http.HttpClientHandler> class will parse a bypass list of \\\"nt*\\\" from Internet Explorer as a regular expression of \\\"nt.\\\\*\\\". So a URL of \\\" http://nt.com\\\" would bypass the proxy using the <xref:System.Net.Http.HttpClientHandler> class and using Internet Explorer.  \\n  \\n The <xref:System.Net.Http.HttpClientHandler> class supports local proxy bypass. The class considers a destination to be local if any of the following conditions are met:  \\n  \\n1.  The destination contains a flat name (no dots in the URL).  \\n  \\n2.  The destination contains a loopback address (<xref:System.Net.IPAddress.Loopback> or <xref:System.Net.IPAddress.IPv6Loopback>) or the destination contains an <xref:System.Net.IPAddress> assigned to the local computer.  \\n  \\n3.  The domain suffix of the destination matches the local computer's domain suffix (<xref:System.Net.NetworkInformation.IPGlobalProperties.DomainName%2A>).\"\n  syntax:\n    content: public System.Net.IWebProxy Proxy { get; set; }\n    return:\n      type: System.Net.IWebProxy\n      description: The proxy information used by the handler. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Net.Http.HttpClientHandler.Proxy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  id: SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: SendAsync(HttpRequestMessage,CancellationToken)\n  nameWithType: HttpClientHandler.SendAsync(HttpRequestMessage,CancellationToken)\n  fullName: System.Net.Http.HttpClientHandler.SendAsync(HttpRequestMessage,CancellationToken)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: Creates an instance of  <xref href=\"System.Net.Http.HttpResponseMessage\"></xref> based on the information provided in the <xref href=\"System.Net.Http.HttpRequestMessage\"></xref> as an operation that will not block.\n  remarks: This operation is does not block. It returns an instance of <xref:System.Threading.Tasks.Task%601> to represent the asynchronous operation. When the operation completes, <xref:System.Threading.Tasks.Task%601.Result%2A> contains the response message.\n  syntax:\n    content: protected override System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: request\n      type: System.Net.Http.HttpRequestMessage\n      description: The HTTP request message.\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: A cancellation token to cancel the operation.\n    return:\n      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}\n      description: The task object representing the asynchronous operation.\n  overload: System.Net.Http.HttpClientHandler.SendAsync*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>request</code> was <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression\n  id: SupportsAutomaticDecompression\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: SupportsAutomaticDecompression\n  nameWithType: HttpClientHandler.SupportsAutomaticDecompression\n  fullName: System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: Gets a value that indicates whether the handler supports automatic response content decompression.\n  syntax:\n    content: public virtual bool SupportsAutomaticDecompression { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the if the handler supports automatic response content decompression; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.HttpClientHandler.SupportsProxy\n  id: SupportsProxy\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: SupportsProxy\n  nameWithType: HttpClientHandler.SupportsProxy\n  fullName: System.Net.Http.HttpClientHandler.SupportsProxy\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: Gets a value that indicates whether the handler supports proxy settings.\n  syntax:\n    content: public virtual bool SupportsProxy { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the if the handler supports proxy settings; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Net.Http.HttpClientHandler.SupportsProxy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration\n  id: SupportsRedirectConfiguration\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: SupportsRedirectConfiguration\n  nameWithType: HttpClientHandler.SupportsRedirectConfiguration\n  fullName: System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: Gets a value that indicates whether the handler supports configuration settings for the <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect*> and <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections*> properties.\n  syntax:\n    content: public virtual bool SupportsRedirectConfiguration { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the if the handler supports configuration settings for the <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect*> and <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections*> properties; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.HttpClientHandler.UseCookies\n  id: UseCookies\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: UseCookies\n  nameWithType: HttpClientHandler.UseCookies\n  fullName: System.Net.Http.HttpClientHandler.UseCookies\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: Gets or sets a value that indicates whether the handler uses the  <xref:System.Net.Http.HttpClientHandler.CookieContainer*> property  to store server cookies and uses these cookies when sending requests.\n  syntax:\n    content: public bool UseCookies { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the if the handler supports uses the  <xref:System.Net.Http.HttpClientHandler.CookieContainer*> property  to store server cookies and uses these cookies when sending requests; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Net.Http.HttpClientHandler.UseCookies*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.HttpClientHandler.UseDefaultCredentials\n  id: UseDefaultCredentials\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: UseDefaultCredentials\n  nameWithType: HttpClientHandler.UseDefaultCredentials\n  fullName: System.Net.Http.HttpClientHandler.UseDefaultCredentials\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: Gets or sets a value that controls whether default credentials are sent with requests by the handler.\n  remarks: Set this property to `true` when requests made by the <xref:System.Net.Http.HttpClientHandler> object should, if requested by the server, be authenticated using the credentials of the currently logged on user. For client applications, this is the desired behavior in most scenarios. For middle-tier applications, such as ASP.NET applications, instead of using this property, you would typically set the <xref:System.Net.Http.HttpClientHandler.Credentials%2A> property to the credentials of the client on whose behalf the request is made.\n  syntax:\n    content: public bool UseDefaultCredentials { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the default credentials are used; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.Http.HttpClientHandler.UseDefaultCredentials*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.HttpClientHandler.UseProxy\n  id: UseProxy\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: UseProxy\n  nameWithType: HttpClientHandler.UseProxy\n  fullName: System.Net.Http.HttpClientHandler.UseProxy\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: Gets or sets a value that indicates whether the handler uses a proxy for requests.\n  syntax:\n    content: public bool UseProxy { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the handler should use a proxy for requests; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Net.Http.HttpClientHandler.UseProxy*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Net.Http.HttpMessageHandler\n  isExternal: false\n  name: System.Net.Http.HttpMessageHandler\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Net.Http.HttpClientHandler.#ctor\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: HttpClientHandler()\n  nameWithType: HttpClientHandler.HttpClientHandler()\n  fullName: System.Net.Http.HttpClientHandler.HttpClientHandler()\n- uid: System.Net.Http.HttpClientHandler.AllowAutoRedirect\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: AllowAutoRedirect\n  nameWithType: HttpClientHandler.AllowAutoRedirect\n  fullName: System.Net.Http.HttpClientHandler.AllowAutoRedirect\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.Http.HttpClientHandler.AutomaticDecompression\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: AutomaticDecompression\n  nameWithType: HttpClientHandler.AutomaticDecompression\n  fullName: System.Net.Http.HttpClientHandler.AutomaticDecompression\n- uid: System.Net.DecompressionMethods\n  parent: System.Net\n  isExternal: true\n  name: DecompressionMethods\n  nameWithType: DecompressionMethods\n  fullName: System.Net.DecompressionMethods\n- uid: System.Net.Http.HttpClientHandler.ClientCertificateOptions\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: ClientCertificateOptions\n  nameWithType: HttpClientHandler.ClientCertificateOptions\n  fullName: System.Net.Http.HttpClientHandler.ClientCertificateOptions\n- uid: System.Net.Http.ClientCertificateOption\n  parent: System.Net.Http\n  isExternal: false\n  name: ClientCertificateOption\n  nameWithType: ClientCertificateOption\n  fullName: System.Net.Http.ClientCertificateOption\n- uid: System.Net.Http.HttpClientHandler.CookieContainer\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: CookieContainer\n  nameWithType: HttpClientHandler.CookieContainer\n  fullName: System.Net.Http.HttpClientHandler.CookieContainer\n- uid: System.Net.CookieContainer\n  parent: System.Net\n  isExternal: true\n  name: CookieContainer\n  nameWithType: CookieContainer\n  fullName: System.Net.CookieContainer\n- uid: System.Net.Http.HttpClientHandler.Credentials\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: Credentials\n  nameWithType: HttpClientHandler.Credentials\n  fullName: System.Net.Http.HttpClientHandler.Credentials\n- uid: System.Net.ICredentials\n  parent: System.Net\n  isExternal: true\n  name: ICredentials\n  nameWithType: ICredentials\n  fullName: System.Net.ICredentials\n- uid: System.Net.Http.HttpClientHandler.Dispose(System.Boolean)\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: HttpClientHandler.Dispose(Boolean)\n  fullName: System.Net.Http.HttpClientHandler.Dispose(Boolean)\n- uid: System.Net.Http.HttpClientHandler.MaxAutomaticRedirections\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: MaxAutomaticRedirections\n  nameWithType: HttpClientHandler.MaxAutomaticRedirections\n  fullName: System.Net.Http.HttpClientHandler.MaxAutomaticRedirections\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: MaxRequestContentBufferSize\n  nameWithType: HttpClientHandler.MaxRequestContentBufferSize\n  fullName: System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize\n- uid: System.Int64\n  parent: System\n  isExternal: true\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Net.Http.HttpClientHandler.PreAuthenticate\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: PreAuthenticate\n  nameWithType: HttpClientHandler.PreAuthenticate\n  fullName: System.Net.Http.HttpClientHandler.PreAuthenticate\n- uid: System.Net.Http.HttpClientHandler.Proxy\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: Proxy\n  nameWithType: HttpClientHandler.Proxy\n  fullName: System.Net.Http.HttpClientHandler.Proxy\n- uid: System.Net.IWebProxy\n  parent: System.Net\n  isExternal: true\n  name: IWebProxy\n  nameWithType: IWebProxy\n  fullName: System.Net.IWebProxy\n- uid: System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: SendAsync(HttpRequestMessage,CancellationToken)\n  nameWithType: HttpClientHandler.SendAsync(HttpRequestMessage,CancellationToken)\n  fullName: System.Net.Http.HttpClientHandler.SendAsync(HttpRequestMessage,CancellationToken)\n- uid: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}\n  parent: System.Threading.Tasks\n  isExternal: true\n  name: Task<HttpResponseMessage>\n  nameWithType: Task<HttpResponseMessage>\n  fullName: System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: Task<System.Net.Http.HttpResponseMessage>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Net.Http.HttpResponseMessage\n    name: HttpResponseMessage\n    nameWithType: HttpResponseMessage\n    fullName: HttpResponseMessage\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Net.Http.HttpRequestMessage\n  parent: System.Net.Http\n  isExternal: false\n  name: HttpRequestMessage\n  nameWithType: HttpRequestMessage\n  fullName: System.Net.Http.HttpRequestMessage\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: true\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: SupportsAutomaticDecompression\n  nameWithType: HttpClientHandler.SupportsAutomaticDecompression\n  fullName: System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression\n- uid: System.Net.Http.HttpClientHandler.SupportsProxy\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: SupportsProxy\n  nameWithType: HttpClientHandler.SupportsProxy\n  fullName: System.Net.Http.HttpClientHandler.SupportsProxy\n- uid: System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: SupportsRedirectConfiguration\n  nameWithType: HttpClientHandler.SupportsRedirectConfiguration\n  fullName: System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration\n- uid: System.Net.Http.HttpClientHandler.UseCookies\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: UseCookies\n  nameWithType: HttpClientHandler.UseCookies\n  fullName: System.Net.Http.HttpClientHandler.UseCookies\n- uid: System.Net.Http.HttpClientHandler.UseDefaultCredentials\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: UseDefaultCredentials\n  nameWithType: HttpClientHandler.UseDefaultCredentials\n  fullName: System.Net.Http.HttpClientHandler.UseDefaultCredentials\n- uid: System.Net.Http.HttpClientHandler.UseProxy\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: UseProxy\n  nameWithType: HttpClientHandler.UseProxy\n  fullName: System.Net.Http.HttpClientHandler.UseProxy\n- uid: System.Net.Http.HttpClientHandler.#ctor*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: HttpClientHandler\n  nameWithType: HttpClientHandler.HttpClientHandler\n- uid: System.Net.Http.HttpClientHandler.AllowAutoRedirect*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: AllowAutoRedirect\n  nameWithType: HttpClientHandler.AllowAutoRedirect\n- uid: System.Net.Http.HttpClientHandler.AutomaticDecompression*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: AutomaticDecompression\n  nameWithType: HttpClientHandler.AutomaticDecompression\n- uid: System.Net.Http.HttpClientHandler.ClientCertificateOptions*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: ClientCertificateOptions\n  nameWithType: HttpClientHandler.ClientCertificateOptions\n- uid: System.Net.Http.HttpClientHandler.CookieContainer*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: CookieContainer\n  nameWithType: HttpClientHandler.CookieContainer\n- uid: System.Net.Http.HttpClientHandler.Credentials*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: Credentials\n  nameWithType: HttpClientHandler.Credentials\n- uid: System.Net.Http.HttpClientHandler.Dispose*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: Dispose\n  nameWithType: HttpClientHandler.Dispose\n- uid: System.Net.Http.HttpClientHandler.MaxAutomaticRedirections*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: MaxAutomaticRedirections\n  nameWithType: HttpClientHandler.MaxAutomaticRedirections\n- uid: System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: MaxRequestContentBufferSize\n  nameWithType: HttpClientHandler.MaxRequestContentBufferSize\n- uid: System.Net.Http.HttpClientHandler.PreAuthenticate*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: PreAuthenticate\n  nameWithType: HttpClientHandler.PreAuthenticate\n- uid: System.Net.Http.HttpClientHandler.Proxy*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: Proxy\n  nameWithType: HttpClientHandler.Proxy\n- uid: System.Net.Http.HttpClientHandler.SendAsync*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: SendAsync\n  nameWithType: HttpClientHandler.SendAsync\n- uid: System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: SupportsAutomaticDecompression\n  nameWithType: HttpClientHandler.SupportsAutomaticDecompression\n- uid: System.Net.Http.HttpClientHandler.SupportsProxy*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: SupportsProxy\n  nameWithType: HttpClientHandler.SupportsProxy\n- uid: System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: SupportsRedirectConfiguration\n  nameWithType: HttpClientHandler.SupportsRedirectConfiguration\n- uid: System.Net.Http.HttpClientHandler.UseCookies*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: UseCookies\n  nameWithType: HttpClientHandler.UseCookies\n- uid: System.Net.Http.HttpClientHandler.UseDefaultCredentials*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: UseDefaultCredentials\n  nameWithType: HttpClientHandler.UseDefaultCredentials\n- uid: System.Net.Http.HttpClientHandler.UseProxy*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: UseProxy\n  nameWithType: HttpClientHandler.UseProxy\n"}