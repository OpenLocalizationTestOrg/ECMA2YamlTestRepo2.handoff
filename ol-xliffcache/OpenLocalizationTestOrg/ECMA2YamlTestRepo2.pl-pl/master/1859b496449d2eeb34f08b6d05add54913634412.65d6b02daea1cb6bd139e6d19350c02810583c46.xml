{"nodes":[{"pos":[619,771],"content":"Represents a tag that contains <bpt id=\"p1\">[</bpt>ECMAScript<ept id=\"p1\">](http://www.ecma-international.org/publications/standards/Ecma-327.htm)</ept> that is run when the rule is matched.","needQuote":true,"needEscape":true,"source":"Represents a tag that contains [ECMAScript](http://www.ecma-international.org/publications/standards/Ecma-327.htm) that is run when the rule is matched."},{"pos":[784,1702],"content":"The default semantic format for System.Speech conforms to the W3C [Semantic Interpretation for Speech Recognition (SISR) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201765), where the format for `tag` elements that contain script is `semantics/1.0`. You must specify the script for SrgsSemanticInterpretationTag objects using this format. In the syntax of `semantics/1.0`:      -   The Rule Variable of the containing rule element is identified by \"out\".      -   The name of the object that has access to the Rule Variable of rule elements outside the containing rule element is identified by \"rules\".      -   The result from the latest referenced rule that matches the utterance can be represented by \"rules.latest()\".       You can also associate a semantic value with a phrase in a grammar without using script, using the <xref:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag> object.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default semantic format for System.Speech conforms to the W3C <bpt id=\"p1\">[</bpt>Semantic Interpretation for Speech Recognition (SISR) Version 1.0<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=201765)</ept>, where the format for <ph id=\"ph1\">`tag`</ph> elements that contain script is <ph id=\"ph2\">`semantics/1.0`</ph>.","pos":[0,257],"source":"The default semantic format for System.Speech conforms to the W3C [Semantic Interpretation for Speech Recognition (SISR) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201765), where the format for `tag` elements that contain script is `semantics/1.0`."},{"content":"You must specify the script for SrgsSemanticInterpretationTag objects using this format.","pos":[258,346]},{"content":"In the syntax of <ph id=\"ph1\">`semantics/1.0`</ph>:      -   The Rule Variable of the containing rule element is identified by \"out\".","pos":[347,462],"source":" In the syntax of `semantics/1.0`:      -   The Rule Variable of the containing rule element is identified by \"out\"."},{"content":"-   The name of the object that has access to the Rule Variable of rule elements outside the containing rule element is identified by \"rules\".","pos":[468,610]},{"content":"-   The result from the latest referenced rule that matches the utterance can be represented by \"rules.latest()\".","pos":[616,729]},{"content":"You can also associate a semantic value with a phrase in a grammar without using script, using the &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag&gt; object.","pos":[736,904],"source":"       You can also associate a semantic value with a phrase in a grammar without using script, using the <xref:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag> object."}]},{"pos":[9193,9315],"content":"Creates an instance of the <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Creates an instance of the <xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag\"></xref> class."},{"pos":[9327,9507],"content":"This constructor creates a semantic interpretation tag whose <xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.Script%2A> property contains an empty string.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This constructor creates a semantic interpretation tag whose &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.Script%2A&gt; property contains an empty string.","pos":[0,180],"source":"This constructor creates a semantic interpretation tag whose <xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.Script%2A> property contains an empty string."}]},{"pos":[10303,10468],"content":"Creates an instance of the <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, specifying the script contents of the tag.","needQuote":true,"needEscape":true,"source":"Creates an instance of the <xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag\"></xref> class, specifying the script contents of the tag."},{"pos":[10480,10667],"content":"This constructor creates a semantic interpretation tag whose &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.Script%2A&gt; property is set to the value in <ph id=\"ph1\">`script`</ph>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"This constructor creates a semantic interpretation tag whose <xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.Script%2A> property is set to the value in `script`."},{"pos":[10823,10946],"content":"A string that contains the <bpt id=\"p1\">[</bpt>ECMAScript<ept id=\"p1\">](http://www.ecma-international.org/publications/standards/Ecma-327.htm)</ept> for the tag.","needQuote":true,"needEscape":true,"source":"A string that contains the [ECMAScript](http://www.ecma-international.org/publications/standards/Ecma-327.htm) for the tag."},{"pos":[11150,11234],"content":"<ph id=\"ph1\">&lt;code&gt;script&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>script</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[11717,11830],"content":"Gets or sets the <bpt id=\"p1\">[</bpt>ECMAScript<ept id=\"p1\">](http://www.ecma-international.org/publications/standards/Ecma-327.htm)</ept> for the tag.","needQuote":true,"needEscape":true,"source":"Gets or sets the [ECMAScript](http://www.ecma-international.org/publications/standards/Ecma-327.htm) for the tag."},{"pos":[11946,12016],"content":"A string that contains the semantic interpretation script for the tag.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains the semantic interpretation script for the tag.","pos":[0,70]}]},{"pos":[12221,12322],"content":"An attempt is made to set <bpt id=\"p1\">**</bpt>Script<ept id=\"p1\">**</ept> to <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An attempt is made to set **Script** to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag\n  id: SrgsSemanticInterpretationTag\n  children:\n  - System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.#ctor\n  - System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.#ctor(System.String)\n  - System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.Script\n  langs:\n  - csharp\n  name: SrgsSemanticInterpretationTag\n  nameWithType: SrgsSemanticInterpretationTag\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag\n  type: Class\n  summary: Represents a tag that contains [ECMAScript](http://www.ecma-international.org/publications/standards/Ecma-327.htm) that is run when the rule is matched.\n  remarks: \"The default semantic format for System.Speech conforms to the W3C [Semantic Interpretation for Speech Recognition (SISR) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201765), where the format for `tag` elements that contain script is `semantics/1.0`. You must specify the script for SrgsSemanticInterpretationTag objects using this format. In the syntax of `semantics/1.0`:  \\n  \\n-   The Rule Variable of the containing rule element is identified by \\\"out\\\".  \\n  \\n-   The name of the object that has access to the Rule Variable of rule elements outside the containing rule element is identified by \\\"rules\\\".  \\n  \\n-   The result from the latest referenced rule that matches the utterance can be represented by \\\"rules.latest()\\\".  \\n  \\n You can also associate a semantic value with a phrase in a grammar without using script, using the <xref:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag> object.\"\n  example:\n  - \"The following example creates a grammar for choosing the cities for a flight. The example uses SrgsSemanticInterpretationTag to assign a semantic value to each city, which is the code for the city's airport. The example also uses SrgsSemanticInterpretationTag to assign a separate semantic key for each of the two references made by the <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef> object named `cityRef` to the <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> object named `cities`. The semantic keys identify a recognized city as the departure city or the arrival city for the flight. The handler for the <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> event uses the keys to retrieve the semantics from the recognition result.  \\n  \\n In the code example, \\\"out\\\" refers to the Rule Variable of the containing <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>. The expression \\\"out.LeavingFrom\\\" refers to the property named `LeavingFrom` of the Rule Variable on the rule named `bookFlight`.  \\n  \\n The expression \\\"rules.flightCities\\\" refers to the Rule Variable on the rule whose <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id%2A> is `flightCities`, and which is the target of a rule reference. In the example, the expression \\\"out.LeavingFrom=rules.flightCities;\\\" assigns the value from the rule whose <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id%2A> is `flightCities` to the property named `LeavingFrom` of the Rule Variable on the rule named `bookFlight`. See [Semantic Results Content](http://msdn.microsoft.com/en-us/622291af-615c-4a15-9014-2933aa3f89fe), [Grammar Rule Name Referencing](http://msdn.microsoft.com/en-us/0777e975-8665-4cc3-957b-752743cb1bb9), and [Grammar Rule Reference Referencing](http://msdn.microsoft.com/en-us/dec3a809-9aa2-4139-893f-3a549ca1e03e) for more information.  \\n  \\n```  \\nusing System;  \\nusing System.Speech.Recognition;  \\nusing System.Speech.Recognition.SrgsGrammar;  \\n  \\nnamespace SampleRecognition  \\n{  \\n  class Program  \\n  {  \\n    static void Main(string[] args)  \\n  \\n    // Initialize a SpeechRecognitionEngine object.  \\n    {  \\n      using (SpeechRecognitionEngine recognizer =  \\n         new SpeechRecognitionEngine(new System.Globalization.CultureInfo(\\\"en-US\\\")))  \\n      {  \\n  \\n        // Create a rule for the cities, assign a semantic value to each city.  \\n        SrgsRule cities = new SrgsRule(\\\"flightCities\\\");  \\n        SrgsItem chi = new SrgsItem(\\\"Chicago\\\");  \\n        chi.Add(new SrgsSemanticInterpretationTag(\\\"out = \\\\\\\"ORD\\\\\\\";\\\"));  \\n        SrgsItem bos = new SrgsItem(\\\"Boston\\\");  \\n        bos.Add(new SrgsSemanticInterpretationTag(\\\"out = \\\\\\\"BOS\\\\\\\";\\\"));  \\n        SrgsItem mia = new SrgsItem(\\\"Miami\\\");  \\n        mia.Add(new SrgsSemanticInterpretationTag(\\\"out = \\\\\\\"MIA\\\\\\\";\\\"));  \\n        SrgsItem dal = new SrgsItem(\\\"Dallas\\\");  \\n        dal.Add(new SrgsSemanticInterpretationTag(\\\"out = \\\\\\\"DFW\\\\\\\";\\\"));  \\n  \\n        SrgsOneOf airports = new SrgsOneOf(chi, bos, mia, dal);  \\n        cities.Add(airports);  \\n        cities.Scope = SrgsRuleScope.Private;  \\n  \\n        // Create a rule reference to the rule for cities.  \\n        SrgsRuleRef cityRef = new SrgsRuleRef(cities);  \\n  \\n        // Create the root rule for the grammar.  \\n        SrgsRule bookFlight = new SrgsRule(\\\"flightBooker\\\");  \\n        bookFlight.Add(new SrgsItem(\\\"I want to fly from\\\"));  \\n        bookFlight.Add(cityRef);  \\n        bookFlight.Add(new SrgsSemanticInterpretationTag(\\\"out.LeavingFrom=rules.flightCities;\\\"));  \\n        bookFlight.Add(new SrgsItem(\\\"to\\\"));  \\n        bookFlight.Add(cityRef);  \\n        bookFlight.Add(new SrgsSemanticInterpretationTag(\\\"out.GoingTo=rules.flightCities;\\\"));  \\n        bookFlight.Scope = SrgsRuleScope.Public;  \\n  \\n        // Initialize the SrgsDocument, set the root rule, add rules to the collection.  \\n        SrgsDocument itinerary = new SrgsDocument(bookFlight);  \\n        itinerary.Rules.Add(cities);  \\n  \\n        // Create a Grammar object and load it to the recognizer.  \\n        Grammar g = new Grammar(itinerary);  \\n        g.Name = (\\\"City Chooser\\\");  \\n        recognizer.LoadGrammarAsync(g);  \\n  \\n        // Configure recognizer input.                  \\n        recognizer.SetInputToDefaultAudioDevice();  \\n  \\n        // Attach a handler for the SpeechRecognized event.  \\n        recognizer.SpeechRecognized +=  \\n          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  \\n  \\n        // Start recognition.  \\n        recognizer.RecognizeAsync();  \\n        Console.WriteLine(\\\"Starting asynchronous recognition...\\\");  \\n  \\n        // Keep the console window open.  \\n        Console.ReadLine();  \\n      }  \\n    }  \\n  \\n    // Write to the console the text and the semantics from the recognition result.  \\n    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  \\n    {  \\n      Console.WriteLine(\\\"Speech recognized: \\\" + e.Result.Text);  \\n      Console.WriteLine();  \\n      Console.WriteLine(\\\"Semantic results:\\\");  \\n      Console.WriteLine(\\\"  The departure city is: \\\" + e.Result.Semantics[\\\"LeavingFrom\\\"].Value);  \\n      Console.WriteLine(\\\"  The arrival city is: \\\" + e.Result.Semantics[\\\"GoingTo\\\"].Value);  \\n    }  \\n  }  \\n}  \\n  \\n```  \\n  \\n The following is the XML form of the grammar generated by the code in the example above.  \\n  \\n```xml  \\n<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>  \\n<grammar xml:lang=\\\"en-US\\\" root=\\\"flightBooker\\\" tag-format=\\\"semantics/1.0\\\"   \\nversion=\\\"1.0\\\" xmlns=\\\"http://www.w3.org/2001/06/grammar\\\">  \\n  \\n  <rule id=\\\"flightBooker\\\" scope=\\\"public\\\">  \\n    <item> I want to fly from </item>  \\n    <ruleref uri=\\\"#flightCities\\\" />   \\n    <tag> out.LeavingFrom=rules.flightCities; </tag>  \\n    <item> to </item>  \\n    <ruleref uri=\\\"#flightCities\\\" />   \\n    <tag> out.GoingTo=rules.flightCities; </tag>  \\n  </rule>  \\n  \\n  <rule id=\\\"flightCities\\\" scope=\\\"private\\\">  \\n    <one-of>  \\n      <item> Chicago <tag> out=\\\"ORD\\\"; </tag></item>  \\n      <item> Boston <tag> out=\\\"BOS\\\"; </tag></item>  \\n      <item> Miami <tag> out=\\\"MIA\\\"; </tag></item>  \\n      <item> Dallas <tag> out=\\\"DFW\\\"; </tag></item>  \\n    </one-of>  \\n  </rule>  \\n  \\n</grammar>  \\n```\"\n  syntax:\n    content: >-\n      [System.Diagnostics.DebuggerDisplay(\"{DebuggerDisplayString ()}\")]\n\n      public class SrgsSemanticInterpretationTag : System.Speech.Recognition.SrgsGrammar.SrgsElement\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.Speech.Recognition.SrgsGrammar.SrgsElement\n  implements: []\n  inheritedMembers:\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  platform:\n  - net462\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.#ctor\n  id: '#ctor'\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag\n  langs:\n  - csharp\n  name: SrgsSemanticInterpretationTag()\n  nameWithType: SrgsSemanticInterpretationTag.SrgsSemanticInterpretationTag()\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.SrgsSemanticInterpretationTag()\n  type: Constructor\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition.SrgsGrammar\n  summary: Creates an instance of the <xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag\"></xref> class.\n  remarks: This constructor creates a semantic interpretation tag whose <xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.Script%2A> property contains an empty string.\n  syntax:\n    content: public SrgsSemanticInterpretationTag ();\n    parameters: []\n  overload: System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag\n  langs:\n  - csharp\n  name: SrgsSemanticInterpretationTag(String)\n  nameWithType: SrgsSemanticInterpretationTag.SrgsSemanticInterpretationTag(String)\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.SrgsSemanticInterpretationTag(String)\n  type: Constructor\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition.SrgsGrammar\n  summary: Creates an instance of the <xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag\"></xref> class, specifying the script contents of the tag.\n  remarks: This constructor creates a semantic interpretation tag whose <xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.Script%2A> property is set to the value in `script`.\n  syntax:\n    content: public SrgsSemanticInterpretationTag (string script);\n    parameters:\n    - id: script\n      type: System.String\n      description: A string that contains the [ECMAScript](http://www.ecma-international.org/publications/standards/Ecma-327.htm) for the tag.\n  overload: System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>script</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.Script\n  id: Script\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag\n  langs:\n  - csharp\n  name: Script\n  nameWithType: SrgsSemanticInterpretationTag.Script\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.Script\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition.SrgsGrammar\n  summary: Gets or sets the [ECMAScript](http://www.ecma-international.org/publications/standards/Ecma-327.htm) for the tag.\n  syntax:\n    content: public string Script { get; set; }\n    return:\n      type: System.String\n      description: A string that contains the semantic interpretation script for the tag.\n  overload: System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.Script*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: An attempt is made to set **Script** to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsElement\n  isExternal: false\n  name: System.Speech.Recognition.SrgsGrammar.SrgsElement\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.#ctor\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag\n  isExternal: false\n  name: SrgsSemanticInterpretationTag()\n  nameWithType: SrgsSemanticInterpretationTag.SrgsSemanticInterpretationTag()\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.SrgsSemanticInterpretationTag()\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.#ctor(System.String)\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag\n  isExternal: false\n  name: SrgsSemanticInterpretationTag(String)\n  nameWithType: SrgsSemanticInterpretationTag.SrgsSemanticInterpretationTag(String)\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.SrgsSemanticInterpretationTag(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.Script\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag\n  isExternal: false\n  name: Script\n  nameWithType: SrgsSemanticInterpretationTag.Script\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.Script\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.#ctor*\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag\n  isExternal: false\n  name: SrgsSemanticInterpretationTag\n  nameWithType: SrgsSemanticInterpretationTag.SrgsSemanticInterpretationTag\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.Script*\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag\n  isExternal: false\n  name: Script\n  nameWithType: SrgsSemanticInterpretationTag.Script\n"}