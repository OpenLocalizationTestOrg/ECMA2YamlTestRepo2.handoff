{"nodes":[{"pos":[939,1040],"content":"Modifies a database query by using the data key of the item that is selected in a data-bound control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Modifies a database query by using the data key of the item that is selected in a data-bound control.","pos":[0,101]}]},{"pos":[1053,2184],"content":"The ControlFilterExpression class that is designed to be used when a page contains two data-bound controls such as a <xref:System.Web.UI.WebControls.GridView> control and a <xref:System.Web.UI.WebControls.ListView> control. One control is the source, where a data key (row) is selected. The other control is the target where the data is displayed based on the selected data key. The target data is obtained by a data source control that executes the query that is defined in the <xref:System.Web.UI.WebControls.QueryExtender> class and that is built by using the selected data key.       To use the ControlFilterExpression class in a page, you follow these steps:      -   Add the <xref:System.Web.UI.WebControls.QueryExtender> control to the page.      -   Set the `TargetControlID` property of the <xref:System.Web.UI.WebControls.QueryExtender> control to the ID of the target data source control.      -   Add a ControlFilterExpression instance to the <xref:System.Web.UI.WebControls.QueryExtender> control.      -   Set the `ControlID` property of the ControlFilterExpression element to the source data-bound control.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ControlFilterExpression class that is designed to be used when a page contains two data-bound controls such as a &lt;xref:System.Web.UI.WebControls.GridView&gt; control and a &lt;xref:System.Web.UI.WebControls.ListView&gt; control.","pos":[0,223],"source":"The ControlFilterExpression class that is designed to be used when a page contains two data-bound controls such as a <xref:System.Web.UI.WebControls.GridView> control and a <xref:System.Web.UI.WebControls.ListView> control."},{"content":"One control is the source, where a data key (row) is selected.","pos":[224,286]},{"content":"The other control is the target where the data is displayed based on the selected data key.","pos":[287,378]},{"content":"The target data is obtained by a data source control that executes the query that is defined in the &lt;xref:System.Web.UI.WebControls.QueryExtender&gt; class and that is built by using the selected data key.","pos":[379,581],"source":" The target data is obtained by a data source control that executes the query that is defined in the <xref:System.Web.UI.WebControls.QueryExtender> class and that is built by using the selected data key."},{"content":"To use the ControlFilterExpression class in a page, you follow these steps:      -   Add the &lt;xref:System.Web.UI.WebControls.QueryExtender&gt; control to the page.","pos":[588,748],"source":"       To use the ControlFilterExpression class in a page, you follow these steps:      -   Add the <xref:System.Web.UI.WebControls.QueryExtender> control to the page."},{"content":"-   Set the <ph id=\"ph1\">`TargetControlID`</ph> property of the &lt;xref:System.Web.UI.WebControls.QueryExtender&gt; control to the ID of the target data source control.","pos":[754,899],"source":"      -   Set the `TargetControlID` property of the <xref:System.Web.UI.WebControls.QueryExtender> control to the ID of the target data source control."},{"content":"-   Add a ControlFilterExpression instance to the &lt;xref:System.Web.UI.WebControls.QueryExtender&gt; control.","pos":[905,1010],"source":"      -   Add a ControlFilterExpression instance to the <xref:System.Web.UI.WebControls.QueryExtender> control."},{"content":"-   Set the <ph id=\"ph1\">`ControlID`</ph> property of the ControlFilterExpression element to the source data-bound control.","pos":[1016,1121],"source":"      -   Set the `ControlID` property of the ControlFilterExpression element to the source data-bound control."}]},{"pos":[4476,4584],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.ControlFilterExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.DynamicData.ControlFilterExpression\"></xref> class."},{"pos":[5152,5215],"content":"Gets or sets the name of the column that the query is based on.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the column that the query is based on.","pos":[0,63]}]},{"pos":[5228,5973],"content":"If this property is empty, the <xref:System.Web.DynamicData.ControlFilterExpression> control treats the selected data key as the primary key of the current table. This is useful in a list-details scenario where source and target data-bound controls operate on data from the same table.       If you assign a value to the property, the <xref:System.Web.DynamicData.ControlFilterExpression> control treats the data key as a foreign key. The value assigned to this property becomes the name of the column that is displayed in the target data-bound control. This is useful in a parent-child scenario where the target data-bound control operates on data from the child table and the source data-bound control operates on data from the parent table.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If this property is empty, the <xref:System.Web.DynamicData.ControlFilterExpression> control treats the selected data key as the primary key of the current table. This is useful in a list-details scenario where source and target data-bound controls operate on data from the same table.       If you assign a value to the property, the <xref:System.Web.DynamicData.ControlFilterExpression> control treats the data key as a foreign key. The value assigned to this property becomes the name of the column that is displayed in the target data-bound control. This is useful in a parent-child scenario where the target data-bound control operates on data from the child table and the source data-bound control operates on data from the parent table.","pos":[0,743],"nodes":[{"content":"If this property is empty, the &lt;xref:System.Web.DynamicData.ControlFilterExpression&gt; control treats the selected data key as the primary key of the current table.","pos":[0,162],"source":"If this property is empty, the <xref:System.Web.DynamicData.ControlFilterExpression> control treats the selected data key as the primary key of the current table."},{"content":"This is useful in a list-details scenario where source and target data-bound controls operate on data from the same table.","pos":[163,285]},{"content":"If you assign a value to the property, the &lt;xref:System.Web.DynamicData.ControlFilterExpression&gt; control treats the data key as a foreign key.","pos":[292,434],"source":"       If you assign a value to the property, the <xref:System.Web.DynamicData.ControlFilterExpression> control treats the data key as a foreign key."},{"content":"The value assigned to this property becomes the name of the column that is displayed in the target data-bound control.","pos":[435,553]},{"content":"This is useful in a parent-child scenario where the target data-bound control operates on data from the child table and the source data-bound control operates on data from the parent table.","pos":[554,743]}]}]},{"pos":[6491,6541],"content":"The name of the column that the query is based on.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the column that the query is based on.","pos":[0,50]}]},{"pos":[7048,7101],"content":"Gets or sets the ID of the source data-bound control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the ID of the source data-bound control.","pos":[0,53]}]},{"pos":[7113,7337],"content":"The ControlID property identifies the source data-bound control from which the data key is selected. The selected data key is then used by the <xref:System.Web.DynamicData.ControlFilterExpression> control to build the query.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ControlID property identifies the source data-bound control from which the data key is selected. The selected data key is then used by the <xref:System.Web.DynamicData.ControlFilterExpression> control to build the query.","pos":[0,224],"nodes":[{"content":"The ControlID property identifies the source data-bound control from which the data key is selected.","pos":[0,100]},{"content":"The selected data key is then used by the &lt;xref:System.Web.DynamicData.ControlFilterExpression&gt; control to build the query.","pos":[101,224],"source":" The selected data key is then used by the <xref:System.Web.DynamicData.ControlFilterExpression> control to build the query."}]}]},{"pos":[7859,7899],"content":"The ID of the source data-bound control.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ID of the source data-bound control.","pos":[0,40]}]},{"pos":[8506,8543],"content":"Gets the data source query to modify.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the data source query to modify.","pos":[0,37]}]},{"pos":[8555,8662],"content":"The GetQueryable method modifies the query based on the selected data key of the source data-bound control.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetQueryable method modifies the query based on the selected data key of the source data-bound control.","pos":[0,107]}]},{"pos":[8858,8890],"content":"The data source query to modify.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data source query to modify.","pos":[0,32]}]},{"pos":[8957,9108],"content":"The object that represents the data source query that is modified by this <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.ControlFilterExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"The object that represents the data source query that is modified by this <xref href=\"System.Web.DynamicData.ControlFilterExpression\"></xref> instance."},{"pos":[9693,9734],"content":"Restores the previously saved view state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Restores the previously saved view state.","pos":[0,41]}]},{"pos":[9899,9920],"content":"The state to restore.","needQuote":true,"needEscape":true,"nodes":[{"content":"The state to restore.","pos":[0,21]}]},{"pos":[10458,10539],"content":"Saves the changes to view state since the time the page was posted to the server.","needQuote":true,"needEscape":true,"nodes":[{"content":"Saves the changes to view state since the time the page was posted to the server.","pos":[0,81]}]},{"pos":[10683,10870],"content":"The object that contains the changes to view state. If there is no view state associated with the object, this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object that contains the changes to view state.","pos":[0,51]},{"content":"If there is no view state associated with the object, this method returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[52,187],"source":" If there is no view state associated with the object, this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[11699,11762],"content":"Initializes the filter expression with data source information.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes the filter expression with data source information.","pos":[0,63]}]},{"pos":[12025,12222],"content":"The control in which the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.ControlFilterExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance is contained, such as the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.QueryExtender\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"The control in which the <xref href=\"System.Web.DynamicData.ControlFilterExpression\"></xref> instance is contained, such as the <xref href=\"System.Web.UI.WebControls.QueryExtender\"></xref> control."},{"pos":[12295,12372],"content":"The application's current <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The application's current <xref href=\"System.Web.HttpContext\"></xref> object."},{"pos":[12472,12876],"content":"The target data source for the <xref href=\"System.Web.DynamicData.ControlFilterExpression\"></xref> instance. If the <xref href=\"System.Web.DynamicData.DynamicFilterExpression\"></xref> instance is contained in the <xref href=\"System.Web.UI.WebControls.QueryExtender\"></xref> control, this parameter is the data source that the <xref href=\"System.Web.UI.WebControls.QueryExtender\"></xref> control refers to","needQuote":true,"needEscape":true,"nodes":[{"content":"The target data source for the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.ControlFilterExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","pos":[0,108],"source":"The target data source for the <xref href=\"System.Web.DynamicData.ControlFilterExpression\"></xref> instance."},{"content":"If the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.DynamicFilterExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance is contained in the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.QueryExtender\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control, this parameter is the data source that the <bpt id=\"p3\">&lt;xref href=\"System.Web.UI.WebControls.QueryExtender\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> control refers to","pos":[109,404],"source":" If the <xref href=\"System.Web.DynamicData.DynamicFilterExpression\"></xref> instance is contained in the <xref href=\"System.Web.UI.WebControls.QueryExtender\"></xref> control, this parameter is the data source that the <xref href=\"System.Web.UI.WebControls.QueryExtender\"></xref> control refers to"}]},{"pos":[13416,13648],"content":"Causes the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.ControlFilterExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to track changes to its view state so they can be stored in the control's view state object and to be persisted across requests for the same page.","needQuote":true,"needEscape":true,"source":"Causes the <xref href=\"System.Web.DynamicData.ControlFilterExpression\"></xref> object to track changes to its view state so they can be stored in the control's view state object and to be persisted across requests for the same page."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.DynamicData.ControlFilterExpression\n  id: ControlFilterExpression\n  children:\n  - System.Web.DynamicData.ControlFilterExpression.#ctor\n  - System.Web.DynamicData.ControlFilterExpression.Column\n  - System.Web.DynamicData.ControlFilterExpression.ControlID\n  - System.Web.DynamicData.ControlFilterExpression.GetQueryable(System.Linq.IQueryable)\n  - System.Web.DynamicData.ControlFilterExpression.LoadViewState(System.Object)\n  - System.Web.DynamicData.ControlFilterExpression.SaveViewState\n  - System.Web.DynamicData.ControlFilterExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)\n  - System.Web.DynamicData.ControlFilterExpression.TrackViewState\n  langs:\n  - csharp\n  name: ControlFilterExpression\n  nameWithType: ControlFilterExpression\n  fullName: System.Web.DynamicData.ControlFilterExpression\n  type: Class\n  summary: Modifies a database query by using the data key of the item that is selected in a data-bound control.\n  remarks: \"The ControlFilterExpression class that is designed to be used when a page contains two data-bound controls such as a <xref:System.Web.UI.WebControls.GridView> control and a <xref:System.Web.UI.WebControls.ListView> control. One control is the source, where a data key (row) is selected. The other control is the target where the data is displayed based on the selected data key. The target data is obtained by a data source control that executes the query that is defined in the <xref:System.Web.UI.WebControls.QueryExtender> class and that is built by using the selected data key.  \\n  \\n To use the ControlFilterExpression class in a page, you follow these steps:  \\n  \\n-   Add the <xref:System.Web.UI.WebControls.QueryExtender> control to the page.  \\n  \\n-   Set the `TargetControlID` property of the <xref:System.Web.UI.WebControls.QueryExtender> control to the ID of the target data source control.  \\n  \\n-   Add a ControlFilterExpression instance to the <xref:System.Web.UI.WebControls.QueryExtender> control.  \\n  \\n-   Set the `ControlID` property of the ControlFilterExpression element to the source data-bound control.\"\n  example:\n  - \"The following example shows how to use the ControlFilterExpression class to reference a source data-bound control, where the data key is selected. The <xref:System.Web.UI.WebControls.QueryExtender> control points to a target data source control that obtains data that is filtered by using the selected data key. In the example, the source data-bound control references a parent table and the target data-bound control references a child table.  \\n  \\n```  \\n<asp:QueryExtender ID=\\\"QueryExtenderID\\\"   \\n    TargetControlID=\\\"TargetDataSourceID\\\" runat=\\\"server\\\">  \\n    <asp:ControlFilterExpression ControlID=\\\"SourceGridViewID\\\" />  \\n</asp:QueryExtender>  \\n```\"\n  syntax:\n    content: 'public class ControlFilterExpression : System.Web.UI.WebControls.Expressions.DataSourceExpression'\n  inheritance:\n  - System.Object\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression\n  implements: []\n  inheritedMembers:\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Context\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.DataSource\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.IsTrackingViewState\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Owner\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SetDirty\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#IsTrackingViewState\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#LoadViewState(System.Object)\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#SaveViewState\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#TrackViewState\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.ViewState\n  platform:\n  - net462\n- uid: System.Web.DynamicData.ControlFilterExpression.#ctor\n  id: '#ctor'\n  parent: System.Web.DynamicData.ControlFilterExpression\n  langs:\n  - csharp\n  name: ControlFilterExpression()\n  nameWithType: ControlFilterExpression.ControlFilterExpression()\n  fullName: System.Web.DynamicData.ControlFilterExpression.ControlFilterExpression()\n  type: Constructor\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Initializes a new instance of the <xref href=\"System.Web.DynamicData.ControlFilterExpression\"></xref> class.\n  syntax:\n    content: public ControlFilterExpression ();\n    parameters: []\n  overload: System.Web.DynamicData.ControlFilterExpression.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.ControlFilterExpression.Column\n  id: Column\n  parent: System.Web.DynamicData.ControlFilterExpression\n  langs:\n  - csharp\n  name: Column\n  nameWithType: ControlFilterExpression.Column\n  fullName: System.Web.DynamicData.ControlFilterExpression.Column\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets or sets the name of the column that the query is based on.\n  remarks: \"If this property is empty, the <xref:System.Web.DynamicData.ControlFilterExpression> control treats the selected data key as the primary key of the current table. This is useful in a list-details scenario where source and target data-bound controls operate on data from the same table.  \\n  \\n If you assign a value to the property, the <xref:System.Web.DynamicData.ControlFilterExpression> control treats the data key as a foreign key. The value assigned to this property becomes the name of the column that is displayed in the target data-bound control. This is useful in a parent-child scenario where the target data-bound control operates on data from the child table and the source data-bound control operates on data from the parent table.\"\n  example:\n  - \"The following example shows how to use the <xref:System.Web.DynamicData.ControlFilterExpression> class to set the column that the filter applies to.  \\n  \\n```  \\n<asp:QueryExtender ID=\\\"QueryExtenderID\\\"   \\n    TargetControlID=\\\"TargetDataSourceID\\\" runat=\\\"server\\\">  \\n    <asp:ControlFilterExpression ControlID=\\\"GridViewID\\\" Column=\\\"Category\\\"/>  \\n</asp:QueryExtender>  \\n```\"\n  syntax:\n    content: public string Column { get; set; }\n    return:\n      type: System.String\n      description: The name of the column that the query is based on.\n  overload: System.Web.DynamicData.ControlFilterExpression.Column*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.ControlFilterExpression.ControlID\n  id: ControlID\n  parent: System.Web.DynamicData.ControlFilterExpression\n  langs:\n  - csharp\n  name: ControlID\n  nameWithType: ControlFilterExpression.ControlID\n  fullName: System.Web.DynamicData.ControlFilterExpression.ControlID\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets or sets the ID of the source data-bound control.\n  remarks: The ControlID property identifies the source data-bound control from which the data key is selected. The selected data key is then used by the <xref:System.Web.DynamicData.ControlFilterExpression> control to build the query.\n  example:\n  - \"The following example shows how to use the <xref:System.Web.DynamicData.ControlFilterExpression> class to set the ID of the source data-bound control.  \\n  \\n```  \\n<asp:QueryExtender ID=\\\"QueryExtenderID\\\"   \\n    TargetControlID=\\\"TargetDataSourceID\\\" runat=\\\"server\\\">  \\n    <asp:ControlFilterExpression ControlID=\\\"GridViewID\\\" Column=\\\"Category\\\"/>  \\n</asp:QueryExtender>  \\n```\"\n  syntax:\n    content: public string ControlID { get; set; }\n    return:\n      type: System.String\n      description: The ID of the source data-bound control.\n  overload: System.Web.DynamicData.ControlFilterExpression.ControlID*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.ControlFilterExpression.GetQueryable(System.Linq.IQueryable)\n  id: GetQueryable(System.Linq.IQueryable)\n  parent: System.Web.DynamicData.ControlFilterExpression\n  langs:\n  - csharp\n  name: GetQueryable(IQueryable)\n  nameWithType: ControlFilterExpression.GetQueryable(IQueryable)\n  fullName: System.Web.DynamicData.ControlFilterExpression.GetQueryable(IQueryable)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the data source query to modify.\n  remarks: The GetQueryable method modifies the query based on the selected data key of the source data-bound control.\n  syntax:\n    content: public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable\n      description: The data source query to modify.\n    return:\n      type: System.Linq.IQueryable\n      description: The object that represents the data source query that is modified by this <xref href=\"System.Web.DynamicData.ControlFilterExpression\"></xref> instance.\n  overload: System.Web.DynamicData.ControlFilterExpression.GetQueryable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.ControlFilterExpression.LoadViewState(System.Object)\n  id: LoadViewState(System.Object)\n  parent: System.Web.DynamicData.ControlFilterExpression\n  langs:\n  - csharp\n  name: LoadViewState(Object)\n  nameWithType: ControlFilterExpression.LoadViewState(Object)\n  fullName: System.Web.DynamicData.ControlFilterExpression.LoadViewState(Object)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Restores the previously saved view state.\n  syntax:\n    content: protected override void LoadViewState (object savedState);\n    parameters:\n    - id: savedState\n      type: System.Object\n      description: The state to restore.\n  overload: System.Web.DynamicData.ControlFilterExpression.LoadViewState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.ControlFilterExpression.SaveViewState\n  id: SaveViewState\n  parent: System.Web.DynamicData.ControlFilterExpression\n  langs:\n  - csharp\n  name: SaveViewState()\n  nameWithType: ControlFilterExpression.SaveViewState()\n  fullName: System.Web.DynamicData.ControlFilterExpression.SaveViewState()\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Saves the changes to view state since the time the page was posted to the server.\n  syntax:\n    content: protected override object SaveViewState ();\n    parameters: []\n    return:\n      type: System.Object\n      description: The object that contains the changes to view state. If there is no view state associated with the object, this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Web.DynamicData.ControlFilterExpression.SaveViewState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.ControlFilterExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)\n  id: SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)\n  parent: System.Web.DynamicData.ControlFilterExpression\n  langs:\n  - csharp\n  name: SetContext(Control,HttpContext,IQueryableDataSource)\n  nameWithType: ControlFilterExpression.SetContext(Control,HttpContext,IQueryableDataSource)\n  fullName: System.Web.DynamicData.ControlFilterExpression.SetContext(Control,HttpContext,IQueryableDataSource)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Initializes the filter expression with data source information.\n  syntax:\n    content: public override void SetContext (System.Web.UI.Control owner, System.Web.HttpContext context, System.Web.UI.WebControls.IQueryableDataSource dataSource);\n    parameters:\n    - id: owner\n      type: System.Web.UI.Control\n      description: The control in which the <xref href=\"System.Web.DynamicData.ControlFilterExpression\"></xref> instance is contained, such as the <xref href=\"System.Web.UI.WebControls.QueryExtender\"></xref> control.\n    - id: context\n      type: System.Web.HttpContext\n      description: The application's current <xref href=\"System.Web.HttpContext\"></xref> object.\n    - id: dataSource\n      type: System.Web.UI.WebControls.IQueryableDataSource\n      description: The target data source for the <xref href=\"System.Web.DynamicData.ControlFilterExpression\"></xref> instance. If the <xref href=\"System.Web.DynamicData.DynamicFilterExpression\"></xref> instance is contained in the <xref href=\"System.Web.UI.WebControls.QueryExtender\"></xref> control, this parameter is the data source that the <xref href=\"System.Web.UI.WebControls.QueryExtender\"></xref> control refers to\n  overload: System.Web.DynamicData.ControlFilterExpression.SetContext*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.ControlFilterExpression.TrackViewState\n  id: TrackViewState\n  parent: System.Web.DynamicData.ControlFilterExpression\n  langs:\n  - csharp\n  name: TrackViewState()\n  nameWithType: ControlFilterExpression.TrackViewState()\n  fullName: System.Web.DynamicData.ControlFilterExpression.TrackViewState()\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Causes the <xref href=\"System.Web.DynamicData.ControlFilterExpression\"></xref> object to track changes to its view state so they can be stored in the control's view state object and to be persisted across requests for the same page.\n  syntax:\n    content: protected override void TrackViewState ();\n    parameters: []\n  overload: System.Web.DynamicData.ControlFilterExpression.TrackViewState*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.UI.WebControls.Expressions.DataSourceExpression\n  isExternal: false\n  name: System.Web.UI.WebControls.Expressions.DataSourceExpression\n- uid: System.Web.DynamicData.ControlFilterExpression.#ctor\n  parent: System.Web.DynamicData.ControlFilterExpression\n  isExternal: false\n  name: ControlFilterExpression()\n  nameWithType: ControlFilterExpression.ControlFilterExpression()\n  fullName: System.Web.DynamicData.ControlFilterExpression.ControlFilterExpression()\n- uid: System.Web.DynamicData.ControlFilterExpression.Column\n  parent: System.Web.DynamicData.ControlFilterExpression\n  isExternal: false\n  name: Column\n  nameWithType: ControlFilterExpression.Column\n  fullName: System.Web.DynamicData.ControlFilterExpression.Column\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.DynamicData.ControlFilterExpression.ControlID\n  parent: System.Web.DynamicData.ControlFilterExpression\n  isExternal: false\n  name: ControlID\n  nameWithType: ControlFilterExpression.ControlID\n  fullName: System.Web.DynamicData.ControlFilterExpression.ControlID\n- uid: System.Web.DynamicData.ControlFilterExpression.GetQueryable(System.Linq.IQueryable)\n  parent: System.Web.DynamicData.ControlFilterExpression\n  isExternal: false\n  name: GetQueryable(IQueryable)\n  nameWithType: ControlFilterExpression.GetQueryable(IQueryable)\n  fullName: System.Web.DynamicData.ControlFilterExpression.GetQueryable(IQueryable)\n- uid: System.Linq.IQueryable\n  parent: System.Linq\n  isExternal: true\n  name: IQueryable\n  nameWithType: IQueryable\n  fullName: System.Linq.IQueryable\n- uid: System.Web.DynamicData.ControlFilterExpression.LoadViewState(System.Object)\n  parent: System.Web.DynamicData.ControlFilterExpression\n  isExternal: false\n  name: LoadViewState(Object)\n  nameWithType: ControlFilterExpression.LoadViewState(Object)\n  fullName: System.Web.DynamicData.ControlFilterExpression.LoadViewState(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.DynamicData.ControlFilterExpression.SaveViewState\n  parent: System.Web.DynamicData.ControlFilterExpression\n  isExternal: false\n  name: SaveViewState()\n  nameWithType: ControlFilterExpression.SaveViewState()\n  fullName: System.Web.DynamicData.ControlFilterExpression.SaveViewState()\n- uid: System.Web.DynamicData.ControlFilterExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)\n  parent: System.Web.DynamicData.ControlFilterExpression\n  isExternal: false\n  name: SetContext(Control,HttpContext,IQueryableDataSource)\n  nameWithType: ControlFilterExpression.SetContext(Control,HttpContext,IQueryableDataSource)\n  fullName: System.Web.DynamicData.ControlFilterExpression.SetContext(Control,HttpContext,IQueryableDataSource)\n- uid: System.Web.UI.Control\n  parent: System.Web.UI\n  isExternal: false\n  name: Control\n  nameWithType: Control\n  fullName: System.Web.UI.Control\n- uid: System.Web.HttpContext\n  parent: System.Web\n  isExternal: false\n  name: HttpContext\n  nameWithType: HttpContext\n  fullName: System.Web.HttpContext\n- uid: System.Web.UI.WebControls.IQueryableDataSource\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: IQueryableDataSource\n  nameWithType: IQueryableDataSource\n  fullName: System.Web.UI.WebControls.IQueryableDataSource\n- uid: System.Web.DynamicData.ControlFilterExpression.TrackViewState\n  parent: System.Web.DynamicData.ControlFilterExpression\n  isExternal: false\n  name: TrackViewState()\n  nameWithType: ControlFilterExpression.TrackViewState()\n  fullName: System.Web.DynamicData.ControlFilterExpression.TrackViewState()\n- uid: System.Web.DynamicData.ControlFilterExpression.#ctor*\n  parent: System.Web.DynamicData.ControlFilterExpression\n  isExternal: false\n  name: ControlFilterExpression\n  nameWithType: ControlFilterExpression.ControlFilterExpression\n- uid: System.Web.DynamicData.ControlFilterExpression.Column*\n  parent: System.Web.DynamicData.ControlFilterExpression\n  isExternal: false\n  name: Column\n  nameWithType: ControlFilterExpression.Column\n- uid: System.Web.DynamicData.ControlFilterExpression.ControlID*\n  parent: System.Web.DynamicData.ControlFilterExpression\n  isExternal: false\n  name: ControlID\n  nameWithType: ControlFilterExpression.ControlID\n- uid: System.Web.DynamicData.ControlFilterExpression.GetQueryable*\n  parent: System.Web.DynamicData.ControlFilterExpression\n  isExternal: false\n  name: GetQueryable\n  nameWithType: ControlFilterExpression.GetQueryable\n- uid: System.Web.DynamicData.ControlFilterExpression.LoadViewState*\n  parent: System.Web.DynamicData.ControlFilterExpression\n  isExternal: false\n  name: LoadViewState\n  nameWithType: ControlFilterExpression.LoadViewState\n- uid: System.Web.DynamicData.ControlFilterExpression.SaveViewState*\n  parent: System.Web.DynamicData.ControlFilterExpression\n  isExternal: false\n  name: SaveViewState\n  nameWithType: ControlFilterExpression.SaveViewState\n- uid: System.Web.DynamicData.ControlFilterExpression.SetContext*\n  parent: System.Web.DynamicData.ControlFilterExpression\n  isExternal: false\n  name: SetContext\n  nameWithType: ControlFilterExpression.SetContext\n- uid: System.Web.DynamicData.ControlFilterExpression.TrackViewState*\n  parent: System.Web.DynamicData.ControlFilterExpression\n  isExternal: false\n  name: TrackViewState\n  nameWithType: ControlFilterExpression.TrackViewState\n"}