{"nodes":[{"pos":[495,670],"content":"Exposes methods and properties to support UI Automation client access to controls having an intrinsic value that does not span a range and that can be represented as a string.","needQuote":true,"needEscape":true,"nodes":[{"content":"Exposes methods and properties to support UI Automation client access to controls having an intrinsic value that does not span a range and that can be represented as a string.","pos":[0,175]}]},{"pos":[683,910],"content":"The value of the control may or may not be editable depending on the control and its settings.       Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.ValuePattern> control pattern.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The value of the control may or may not be editable depending on the control and its settings.       Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.ValuePattern> control pattern.","pos":[0,225],"nodes":[{"content":"The value of the control may or may not be editable depending on the control and its settings.","pos":[0,94]},{"content":"Implemented on a UI Automation provider that must support the &lt;xref:System.Windows.Automation.ValuePattern&gt; control pattern.","pos":[101,225],"source":"       Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.ValuePattern> control pattern."}]}]},{"pos":[1695,1767],"content":"Gets a value that specifies whether the value of a control is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that specifies whether the value of a control is read-only.","pos":[0,72]}]},{"pos":[1779,2071],"content":"A control should have its &lt;xref:System.Windows.Automation.AutomationElement.IsEnabledProperty&gt; set to <ph id=\"ph1\">`true`</ph> and its &lt;xref:System.Windows.Automation.ValuePattern.IsReadOnlyProperty&gt; set to <ph id=\"ph2\">`false`</ph> before allowing a call to &lt;xref:System.Windows.Automation.Provider.IValueProvider.SetValue%2A&gt;.","needQuote":true,"needEscape":true,"extradata":"MT","source":"A control should have its <xref:System.Windows.Automation.AutomationElement.IsEnabledProperty> set to `true` and its <xref:System.Windows.Automation.ValuePattern.IsReadOnlyProperty> set to `false` before allowing a call to <xref:System.Windows.Automation.Provider.IValueProvider.SetValue%2A>."},{"pos":[2575,2748],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the value is read-only; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if it can be modified.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value is read-only; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it can be modified."},{"pos":[3319,3347],"content":"Sets the value of a control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the value of a control.","pos":[0,28]}]},{"pos":[3360,4311],"content":"Single-line edit controls support programmatic access to their contents by implementing <xref:System.Windows.Automation.Provider.IValueProvider>. However, multi-line edit controls do not implement <xref:System.Windows.Automation.Provider.IValueProvider>; instead they provide access to their content by implementing <xref:System.Windows.Automation.Provider.ITextProvider>.       Controls such as <xref:System.Windows.Automation.ControlType.ListItem> and <xref:System.Windows.Automation.ControlType.TreeItem> must implement <xref:System.Windows.Automation.Provider.IValueProvider> if the value of any of the items is editable, regardless of the current edit mode of the control. The parent control must also implement <xref:System.Windows.Automation.Provider.IValueProvider> if the child items are editable.       ![Editable list item.](~/add/media/uia-valuepattern-editable-listitem.PNG \"Editable list item.\")   Example of an Editable List Item","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Single-line edit controls support programmatic access to their contents by implementing &lt;xref:System.Windows.Automation.Provider.IValueProvider&gt;.","pos":[0,145],"source":"Single-line edit controls support programmatic access to their contents by implementing <xref:System.Windows.Automation.Provider.IValueProvider>."},{"content":"However, multi-line edit controls do not implement &lt;xref:System.Windows.Automation.Provider.IValueProvider&gt;; instead they provide access to their content by implementing &lt;xref:System.Windows.Automation.Provider.ITextProvider&gt;.","pos":[146,372],"source":" However, multi-line edit controls do not implement <xref:System.Windows.Automation.Provider.IValueProvider>; instead they provide access to their content by implementing <xref:System.Windows.Automation.Provider.ITextProvider>."},{"content":"Controls such as &lt;xref:System.Windows.Automation.ControlType.ListItem&gt; and &lt;xref:System.Windows.Automation.ControlType.TreeItem&gt; must implement &lt;xref:System.Windows.Automation.Provider.IValueProvider&gt; if the value of any of the items is editable, regardless of the current edit mode of the control.","pos":[379,677],"source":"       Controls such as <xref:System.Windows.Automation.ControlType.ListItem> and <xref:System.Windows.Automation.ControlType.TreeItem> must implement <xref:System.Windows.Automation.Provider.IValueProvider> if the value of any of the items is editable, regardless of the current edit mode of the control."},{"content":"The parent control must also implement &lt;xref:System.Windows.Automation.Provider.IValueProvider&gt; if the child items are editable.","pos":[678,806],"source":" The parent control must also implement <xref:System.Windows.Automation.Provider.IValueProvider> if the child items are editable."},{"content":"<bpt id=\"p1\">![</bpt>Editable list item.<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/uia-valuepattern-editable-listitem.PNG \"</bpt>Editable list item.<ept id=\"p2\">\")</ept>","pos":[813,909],"source":"![Editable list item.](~/add/media/uia-valuepattern-editable-listitem.PNG \"Editable list item.\")"},{"content":"Example of an Editable List Item","pos":[912,944]}]},{"pos":[4840,4940],"content":"The value to set. The provider is responsible for converting the value to the appropriate data type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to set. The provider is responsible for converting the value to the appropriate data type.","pos":[0,100],"nodes":[{"content":"The value to set.","pos":[0,17]},{"content":"The provider is responsible for converting the value to the appropriate data type.","pos":[18,100]}]}]},{"pos":[5137,5252],"content":"If locale-specific information is passed to a control in an incorrect format such as an incorrectly formatted date.","needQuote":true,"needEscape":true,"nodes":[{"content":"If locale-specific information is passed to a control in an incorrect format such as an incorrectly formatted date.","pos":[0,115]}]},{"pos":[5347,5431],"content":"If a new value cannot be converted from a string to a format the control recognizes.","needQuote":true,"needEscape":true,"nodes":[{"content":"If a new value cannot be converted from a string to a format the control recognizes.","pos":[0,84]}]},{"pos":[5582,5650],"content":"When an attempt is made to manipulate a control that is not enabled.","needQuote":true,"needEscape":true,"nodes":[{"content":"When an attempt is made to manipulate a control that is not enabled.","pos":[0,68]}]},{"pos":[6063,6093],"content":"Gets the value of the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the control.","pos":[0,30]}]},{"pos":[6106,6931],"content":"Single-line edit controls support programmatic access to their contents by implementing <xref:System.Windows.Automation.Provider.IValueProvider> (in addition to <xref:System.Windows.Automation.Provider.ITextProvider>). However, multi-line edit controls do not implement <xref:System.Windows.Automation.Provider.IValueProvider>.       To retrieve the textual contents of multi-line edit controls, the controls must implement <xref:System.Windows.Automation.Provider.ITextProvider>. However, <xref:System.Windows.Automation.Provider.ITextProvider> does not support setting the value of a control.       <xref:System.Windows.Automation.Provider.IValueProvider> does not support the retrieval of formatting information or substring values. Implement <xref:System.Windows.Automation.Provider.ITextProvider> in these scenarios.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Single-line edit controls support programmatic access to their contents by implementing <xref:System.Windows.Automation.Provider.IValueProvider> (in addition to <xref:System.Windows.Automation.Provider.ITextProvider>). However, multi-line edit controls do not implement <xref:System.Windows.Automation.Provider.IValueProvider>.       To retrieve the textual contents of multi-line edit controls, the controls must implement <xref:System.Windows.Automation.Provider.ITextProvider>. However, <xref:System.Windows.Automation.Provider.ITextProvider> does not support setting the value of a control.       <xref:System.Windows.Automation.Provider.IValueProvider> does not support the retrieval of formatting information or substring values. Implement <xref:System.Windows.Automation.Provider.ITextProvider> in these scenarios.","pos":[0,821],"nodes":[{"content":"Single-line edit controls support programmatic access to their contents by implementing &lt;xref:System.Windows.Automation.Provider.IValueProvider&gt; (in addition to &lt;xref:System.Windows.Automation.Provider.ITextProvider&gt;).","pos":[0,218],"source":"Single-line edit controls support programmatic access to their contents by implementing <xref:System.Windows.Automation.Provider.IValueProvider> (in addition to <xref:System.Windows.Automation.Provider.ITextProvider>)."},{"content":"However, multi-line edit controls do not implement &lt;xref:System.Windows.Automation.Provider.IValueProvider&gt;.","pos":[219,327],"source":" However, multi-line edit controls do not implement <xref:System.Windows.Automation.Provider.IValueProvider>."},{"content":"To retrieve the textual contents of multi-line edit controls, the controls must implement &lt;xref:System.Windows.Automation.Provider.ITextProvider&gt;.","pos":[334,480],"source":"       To retrieve the textual contents of multi-line edit controls, the controls must implement <xref:System.Windows.Automation.Provider.ITextProvider>."},{"content":"However, &lt;xref:System.Windows.Automation.Provider.ITextProvider&gt; does not support setting the value of a control.","pos":[481,594],"source":" However, <xref:System.Windows.Automation.Provider.ITextProvider> does not support setting the value of a control."},{"content":"&lt;xref:System.Windows.Automation.Provider.IValueProvider&gt; does not support the retrieval of formatting information or substring values.","pos":[601,735],"source":"       <xref:System.Windows.Automation.Provider.IValueProvider> does not support the retrieval of formatting information or substring values."},{"content":"Implement &lt;xref:System.Windows.Automation.Provider.ITextProvider&gt; in these scenarios.","pos":[736,821],"source":" Implement <xref:System.Windows.Automation.Provider.ITextProvider> in these scenarios."}]}]},{"pos":[7414,7451],"content":"The value of the control as a string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the control as a string.","pos":[0,37]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Automation.Provider.IValueProvider\n  id: IValueProvider\n  children:\n  - System.Windows.Automation.Provider.IValueProvider.IsReadOnly\n  - System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)\n  - System.Windows.Automation.Provider.IValueProvider.Value\n  langs:\n  - csharp\n  name: IValueProvider\n  nameWithType: IValueProvider\n  fullName: System.Windows.Automation.Provider.IValueProvider\n  type: Interface\n  summary: Exposes methods and properties to support UI Automation client access to controls having an intrinsic value that does not span a range and that can be represented as a string.\n  remarks: \"The value of the control may or may not be editable depending on the control and its settings.  \\n  \\n Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.ValuePattern> control pattern.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      [System.Runtime.InteropServices.Guid(\"c7935180-6fb3-4201-b174-7df73adbf64a\")]\n\n      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]\n\n      public interface IValueProvider\n  implements: []\n  platform:\n  - net462\n- uid: System.Windows.Automation.Provider.IValueProvider.IsReadOnly\n  id: IsReadOnly\n  parent: System.Windows.Automation.Provider.IValueProvider\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: IValueProvider.IsReadOnly\n  fullName: System.Windows.Automation.Provider.IValueProvider.IsReadOnly\n  type: Property\n  assemblies:\n  - UIAutomationProvider\n  namespace: System.Windows.Automation.Provider\n  summary: Gets a value that specifies whether the value of a control is read-only.\n  remarks: A control should have its <xref:System.Windows.Automation.AutomationElement.IsEnabledProperty> set to `true` and its <xref:System.Windows.Automation.ValuePattern.IsReadOnlyProperty> set to `false` before allowing a call to <xref:System.Windows.Automation.Provider.IValueProvider.SetValue%2A>.\n  example:\n  - \"The following example shows an implementation of this method for a control that allows its value to be changed.  \\n  \\n [!code-vb[UIAIValueProvider_snip#IsReadOnly](~/add/codesnippet/visualbasic/uiaivalueprovider_snip/valuefragment.vb#isreadonly)]\\n [!code-cs[UIAIValueProvider_snip#IsReadOnly](~/add/codesnippet/csharp/UIAIValueProvider_snip/ValueFragment.cs#isreadonly)]\"\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value is read-only; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it can be modified.\n  overload: System.Windows.Automation.Provider.IValueProvider.IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)\n  id: SetValue(System.String)\n  parent: System.Windows.Automation.Provider.IValueProvider\n  langs:\n  - csharp\n  name: SetValue(String)\n  nameWithType: IValueProvider.SetValue(String)\n  fullName: System.Windows.Automation.Provider.IValueProvider.SetValue(String)\n  type: Method\n  assemblies:\n  - UIAutomationProvider\n  namespace: System.Windows.Automation.Provider\n  summary: Sets the value of a control.\n  remarks: \"Single-line edit controls support programmatic access to their contents by implementing <xref:System.Windows.Automation.Provider.IValueProvider>. However, multi-line edit controls do not implement <xref:System.Windows.Automation.Provider.IValueProvider>; instead they provide access to their content by implementing <xref:System.Windows.Automation.Provider.ITextProvider>.  \\n  \\n Controls such as <xref:System.Windows.Automation.ControlType.ListItem> and <xref:System.Windows.Automation.ControlType.TreeItem> must implement <xref:System.Windows.Automation.Provider.IValueProvider> if the value of any of the items is editable, regardless of the current edit mode of the control. The parent control must also implement <xref:System.Windows.Automation.Provider.IValueProvider> if the child items are editable.  \\n  \\n ![Editable list item.](~/add/media/uia-valuepattern-editable-listitem.PNG \\\"Editable list item.\\\")  \\nExample of an Editable List Item\"\n  example:\n  - \"The following example code demonstrates a custom control that allows its value to be set to a string of limited length.  \\n  \\n [!code-vb[UIAIValueProvider_snip#SetValue](~/add/codesnippet/visualbasic/uiaivalueprovider_snip/valuefragment.vb#setvalue)]\\n [!code-cs[UIAIValueProvider_snip#SetValue](~/add/codesnippet/csharp/UIAIValueProvider_snip/ValueFragment.cs#setvalue)]\"\n  syntax:\n    content: public void SetValue (string value);\n    parameters:\n    - id: value\n      type: System.String\n      description: The value to set. The provider is responsible for converting the value to the appropriate data type.\n  overload: System.Windows.Automation.Provider.IValueProvider.SetValue*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: If locale-specific information is passed to a control in an incorrect format such as an incorrectly formatted date.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: If a new value cannot be converted from a string to a format the control recognizes.\n  - type: System.Windows.Automation.ElementNotEnabledException\n    commentId: T:System.Windows.Automation.ElementNotEnabledException\n    description: When an attempt is made to manipulate a control that is not enabled.\n  platform:\n  - net462\n- uid: System.Windows.Automation.Provider.IValueProvider.Value\n  id: Value\n  parent: System.Windows.Automation.Provider.IValueProvider\n  langs:\n  - csharp\n  name: Value\n  nameWithType: IValueProvider.Value\n  fullName: System.Windows.Automation.Provider.IValueProvider.Value\n  type: Property\n  assemblies:\n  - UIAutomationProvider\n  namespace: System.Windows.Automation.Provider\n  summary: Gets the value of the control.\n  remarks: \"Single-line edit controls support programmatic access to their contents by implementing <xref:System.Windows.Automation.Provider.IValueProvider> (in addition to <xref:System.Windows.Automation.Provider.ITextProvider>). However, multi-line edit controls do not implement <xref:System.Windows.Automation.Provider.IValueProvider>.  \\n  \\n To retrieve the textual contents of multi-line edit controls, the controls must implement <xref:System.Windows.Automation.Provider.ITextProvider>. However, <xref:System.Windows.Automation.Provider.ITextProvider> does not support setting the value of a control.  \\n  \\n <xref:System.Windows.Automation.Provider.IValueProvider> does not support the retrieval of formatting information or substring values. Implement <xref:System.Windows.Automation.Provider.ITextProvider> in these scenarios.\"\n  example:\n  - \"The following example shows an implementation of this method for a control that allows its value to be retrieved.  \\n  \\n [!code-vb[UIAIValueProvider_snip#Value](~/add/codesnippet/visualbasic/uiaivalueprovider_snip/valuefragment.vb#value)]\\n [!code-cs[UIAIValueProvider_snip#Value](~/add/codesnippet/csharp/UIAIValueProvider_snip/ValueFragment.cs#value)]\"\n  syntax:\n    content: public string Value { get; }\n    return:\n      type: System.String\n      description: The value of the control as a string.\n  overload: System.Windows.Automation.Provider.IValueProvider.Value*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Windows.Automation.ElementNotEnabledException\n  parent: System.Windows.Automation\n  isExternal: false\n  name: ElementNotEnabledException\n  nameWithType: ElementNotEnabledException\n  fullName: System.Windows.Automation.ElementNotEnabledException\n- uid: System.Windows.Automation.Provider.IValueProvider.IsReadOnly\n  parent: System.Windows.Automation.Provider.IValueProvider\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: IValueProvider.IsReadOnly\n  fullName: System.Windows.Automation.Provider.IValueProvider.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)\n  parent: System.Windows.Automation.Provider.IValueProvider\n  isExternal: false\n  name: SetValue(String)\n  nameWithType: IValueProvider.SetValue(String)\n  fullName: System.Windows.Automation.Provider.IValueProvider.SetValue(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Automation.Provider.IValueProvider.Value\n  parent: System.Windows.Automation.Provider.IValueProvider\n  isExternal: false\n  name: Value\n  nameWithType: IValueProvider.Value\n  fullName: System.Windows.Automation.Provider.IValueProvider.Value\n- uid: System.Windows.Automation.Provider.IValueProvider.IsReadOnly*\n  parent: System.Windows.Automation.Provider.IValueProvider\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: IValueProvider.IsReadOnly\n- uid: System.Windows.Automation.Provider.IValueProvider.SetValue*\n  parent: System.Windows.Automation.Provider.IValueProvider\n  isExternal: false\n  name: SetValue\n  nameWithType: IValueProvider.SetValue\n- uid: System.Windows.Automation.Provider.IValueProvider.Value*\n  parent: System.Windows.Automation.Provider.IValueProvider\n  isExternal: false\n  name: Value\n  nameWithType: IValueProvider.Value\n"}