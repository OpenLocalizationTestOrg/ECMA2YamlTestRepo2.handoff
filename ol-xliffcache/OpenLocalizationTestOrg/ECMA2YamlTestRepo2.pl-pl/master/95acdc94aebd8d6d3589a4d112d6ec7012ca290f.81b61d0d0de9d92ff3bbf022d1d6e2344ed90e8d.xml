{"nodes":[{"pos":[546,598],"content":"Provides access to an add-in for a variety of tasks.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides access to an add-in for a variety of tasks.","pos":[0,52]}]},{"pos":[611,1786],"content":"Use this class to perform the following tasks:      -   Use the <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> property to obtain an <xref:System.AddIn.Hosting.AddInEnvironment> object for an add-in. Then use that object to activate other add-ins in the same application domain and process as the original add-in.      -   Use the <xref:System.AddIn.Hosting.AddInController.AppDomain%2A> property to obtain an <xref:System.AppDomain> object for an add-in. Then use that object to activate other add-ins in the same application domain as the original add-in. Note that because of limitations in cross-process remoting, this scenario will not work with add-ins that are activated in a separate process.      -   Use the <xref:System.AddIn.Hosting.AddInController.Token%2A> property to obtain an <xref:System.AddIn.Hosting.AddInToken> object that represents an add-in.      -   Shut down an add-in with the <xref:System.AddIn.Hosting.AddInController.Shutdown%2A> method.       To obtain the controller for an add-in, call the <xref:System.AddIn.Hosting.AddInController.GetAddInController%2A> method and pass an instance of the add-in as its parameter.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this class to perform the following tasks:      -   Use the <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> property to obtain an <xref:System.AddIn.Hosting.AddInEnvironment> object for an add-in. Then use that object to activate other add-ins in the same application domain and process as the original add-in.      -   Use the <xref:System.AddIn.Hosting.AddInController.AppDomain%2A> property to obtain an <xref:System.AppDomain> object for an add-in. Then use that object to activate other add-ins in the same application domain as the original add-in. Note that because of limitations in cross-process remoting, this scenario will not work with add-ins that are activated in a separate process.      -   Use the <xref:System.AddIn.Hosting.AddInController.Token%2A> property to obtain an <xref:System.AddIn.Hosting.AddInToken> object that represents an add-in.      -   Shut down an add-in with the <xref:System.AddIn.Hosting.AddInController.Shutdown%2A> method.       To obtain the controller for an add-in, call the <xref:System.AddIn.Hosting.AddInController.GetAddInController%2A> method and pass an instance of the add-in as its parameter.","pos":[0,1165],"nodes":[{"content":"Use this class to perform the following tasks:      -   Use the &lt;xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A&gt; property to obtain an &lt;xref:System.AddIn.Hosting.AddInEnvironment&gt; object for an add-in.","pos":[0,216],"source":"Use this class to perform the following tasks:      -   Use the <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> property to obtain an <xref:System.AddIn.Hosting.AddInEnvironment> object for an add-in."},{"content":"Then use that object to activate other add-ins in the same application domain and process as the original add-in.","pos":[217,330]},{"content":"-   Use the &lt;xref:System.AddIn.Hosting.AddInController.AppDomain%2A&gt; property to obtain an &lt;xref:System.AppDomain&gt; object for an add-in.","pos":[336,472],"source":"      -   Use the <xref:System.AddIn.Hosting.AddInController.AppDomain%2A> property to obtain an <xref:System.AppDomain> object for an add-in."},{"content":"Then use that object to activate other add-ins in the same application domain as the original add-in.","pos":[473,574]},{"content":"Note that because of limitations in cross-process remoting, this scenario will not work with add-ins that are activated in a separate process.","pos":[575,717]},{"content":"-   Use the &lt;xref:System.AddIn.Hosting.AddInController.Token%2A&gt; property to obtain an &lt;xref:System.AddIn.Hosting.AddInToken&gt; object that represents an add-in.","pos":[723,882],"source":"      -   Use the <xref:System.AddIn.Hosting.AddInController.Token%2A> property to obtain an <xref:System.AddIn.Hosting.AddInToken> object that represents an add-in."},{"content":"-   Shut down an add-in with the &lt;xref:System.AddIn.Hosting.AddInController.Shutdown%2A&gt; method.","pos":[888,984],"source":"      -   Shut down an add-in with the <xref:System.AddIn.Hosting.AddInController.Shutdown%2A> method."},{"content":"To obtain the controller for an add-in, call the &lt;xref:System.AddIn.Hosting.AddInController.GetAddInController%2A&gt; method and pass an instance of the add-in as its parameter.","pos":[991,1165],"source":"       To obtain the controller for an add-in, call the <xref:System.AddIn.Hosting.AddInController.GetAddInController%2A> method and pass an instance of the add-in as its parameter."}]}]},{"pos":[2652,2726],"content":"Gets an <bpt id=\"p1\">&lt;xref href=\"System.AddIn.Hosting.AddInEnvironment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets an <xref href=\"System.AddIn.Hosting.AddInEnvironment\"></xref> object."},{"pos":[2738,2947],"content":"Use this property to get the <xref:System.AddIn.Hosting.AddInEnvironment> object for an add-in. Then use that object to activate other add-ins in the same application domain and process as the original add-in.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this property to get the <xref:System.AddIn.Hosting.AddInEnvironment> object for an add-in. Then use that object to activate other add-ins in the same application domain and process as the original add-in.","pos":[0,209],"nodes":[{"content":"Use this property to get the &lt;xref:System.AddIn.Hosting.AddInEnvironment&gt; object for an add-in.","pos":[0,95],"source":"Use this property to get the <xref:System.AddIn.Hosting.AddInEnvironment> object for an add-in."},{"content":"Then use that object to activate other add-ins in the same application domain and process as the original add-in.","pos":[96,209]}]}]},{"pos":[3406,3506],"content":"An object that can be used to activate other add-ins in the same environment as the original add-in.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that can be used to activate other add-ins in the same environment as the original add-in.","pos":[0,100]}]},{"pos":[3963,4015],"content":"Gets the application domain that contains an add-in.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the application domain that contains an add-in.","pos":[0,52]}]},{"pos":[4027,4159],"content":"Use this property to obtain an add-in's <xref:System.AppDomain> object and to activate other add-ins in the same application domain.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this property to obtain an add-in's &lt;xref:System.AppDomain&gt; object and to activate other add-ins in the same application domain.","pos":[0,132],"source":"Use this property to obtain an add-in's <xref:System.AppDomain> object and to activate other add-ins in the same application domain."}]},{"pos":[4565,4602],"content":"The application domain of the add-in.","needQuote":true,"needEscape":true,"nodes":[{"content":"The application domain of the add-in.","pos":[0,37]}]},{"pos":[5149,5186],"content":"Obtains the controller for an add-in.","needQuote":true,"needEscape":true,"nodes":[{"content":"Obtains the controller for an add-in.","pos":[0,37]}]},{"pos":[5198,5324],"content":"The <xref:System.AddIn.Hosting.AddInToken.Activate%2A> methods return an object that represents the host's view of the add-in.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.AddIn.Hosting.AddInToken.Activate%2A&gt; methods return an object that represents the host's view of the add-in.","pos":[0,126],"source":"The <xref:System.AddIn.Hosting.AddInToken.Activate%2A> methods return an object that represents the host's view of the add-in."}]},{"pos":[5511,5539],"content":"The host view of the add-in.","needQuote":true,"needEscape":true,"nodes":[{"content":"The host view of the add-in.","pos":[0,28]}]},{"pos":[5620,5650],"content":"The controller for the add-in.","needQuote":true,"needEscape":true,"nodes":[{"content":"The controller for the add-in.","pos":[0,30]}]},{"pos":[6108,6127],"content":"Disables an add-in.","needQuote":true,"needEscape":true,"nodes":[{"content":"Disables an add-in.","pos":[0,19]}]},{"pos":[6140,7023],"content":"This method breaks the communication pipeline between an add-in and its host. If the add-in was activated in an automatically generated application domain by using the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29> or <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.Security.PermissionSet%29> methods, the Shutdown method also unloads the application domain.       If the add-in was loaded into its own application domain, the Shutdown method also unloads the application domain.       If the add-in was loaded into an existing application domain, the host and pipeline segments will no longer have any references to that add-in. In this case, the add-in will be eligible to be reclaimed by garbage collection.       You can also use this class to shut down an add-in that is activated in an external process.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method breaks the communication pipeline between an add-in and its host. If the add-in was activated in an automatically generated application domain by using the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29> or <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.Security.PermissionSet%29> methods, the Shutdown method also unloads the application domain.       If the add-in was loaded into its own application domain, the Shutdown method also unloads the application domain.       If the add-in was loaded into an existing application domain, the host and pipeline segments will no longer have any references to that add-in. In this case, the add-in will be eligible to be reclaimed by garbage collection.       You can also use this class to shut down an add-in that is activated in an external process.","pos":[0,877],"nodes":[{"content":"This method breaks the communication pipeline between an add-in and its host.","pos":[0,77]},{"content":"If the add-in was activated in an automatically generated application domain by using the &lt;xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29&gt; or &lt;xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.Security.PermissionSet%29&gt; methods, the Shutdown method also unloads the application domain.","pos":[78,426],"source":" If the add-in was activated in an automatically generated application domain by using the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29> or <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.Security.PermissionSet%29> methods, the Shutdown method also unloads the application domain."},{"content":"If the add-in was loaded into its own application domain, the Shutdown method also unloads the application domain.","pos":[433,547]},{"content":"If the add-in was loaded into an existing application domain, the host and pipeline segments will no longer have any references to that add-in.","pos":[554,697]},{"content":"In this case, the add-in will be eligible to be reclaimed by garbage collection.","pos":[698,778]},{"content":"You can also use this class to shut down an add-in that is activated in an external process.","pos":[785,877]}]}]},{"pos":[7897,7939],"content":"Gets the token that represents the add-in.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the token that represents the add-in.","pos":[0,42]}]},{"pos":[7951,8040],"content":"Typically, you use this property to obtain a token to activate an add-in at a later time.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Typically, you use this property to obtain a token to activate an add-in at a later time.","pos":[0,89]}]},{"pos":[8193,8230],"content":"An object that represents the add-in.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that represents the add-in.","pos":[0,37]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.AddIn.Hosting.AddInController\n  id: AddInController\n  children:\n  - System.AddIn.Hosting.AddInController.AddInEnvironment\n  - System.AddIn.Hosting.AddInController.AppDomain\n  - System.AddIn.Hosting.AddInController.GetAddInController(System.Object)\n  - System.AddIn.Hosting.AddInController.Shutdown\n  - System.AddIn.Hosting.AddInController.Token\n  langs:\n  - csharp\n  name: AddInController\n  nameWithType: AddInController\n  fullName: System.AddIn.Hosting.AddInController\n  type: Class\n  summary: Provides access to an add-in for a variety of tasks.\n  remarks: \"Use this class to perform the following tasks:  \\n  \\n-   Use the <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> property to obtain an <xref:System.AddIn.Hosting.AddInEnvironment> object for an add-in. Then use that object to activate other add-ins in the same application domain and process as the original add-in.  \\n  \\n-   Use the <xref:System.AddIn.Hosting.AddInController.AppDomain%2A> property to obtain an <xref:System.AppDomain> object for an add-in. Then use that object to activate other add-ins in the same application domain as the original add-in. Note that because of limitations in cross-process remoting, this scenario will not work with add-ins that are activated in a separate process.  \\n  \\n-   Use the <xref:System.AddIn.Hosting.AddInController.Token%2A> property to obtain an <xref:System.AddIn.Hosting.AddInToken> object that represents an add-in.  \\n  \\n-   Shut down an add-in with the <xref:System.AddIn.Hosting.AddInController.Shutdown%2A> method.  \\n  \\n To obtain the controller for an add-in, call the <xref:System.AddIn.Hosting.AddInController.GetAddInController%2A> method and pass an instance of the add-in as its parameter.\"\n  example:\n  - \"The following example activates an add-in within the same environment as a previously activated add-in by using an AddInController object.  \\n  \\n [!code-vb[AddInP3Host#8](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#8)]\\n [!code-cs[AddInP3Host#8](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#8)]\"\n  syntax:\n    content: public sealed class AddInController\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.AddIn.Hosting.AddInController.AddInEnvironment\n  id: AddInEnvironment\n  parent: System.AddIn.Hosting.AddInController\n  langs:\n  - csharp\n  name: AddInEnvironment\n  nameWithType: AddInController.AddInEnvironment\n  fullName: System.AddIn.Hosting.AddInController.AddInEnvironment\n  type: Property\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Gets an <xref href=\"System.AddIn.Hosting.AddInEnvironment\"></xref> object.\n  remarks: Use this property to get the <xref:System.AddIn.Hosting.AddInEnvironment> object for an add-in. Then use that object to activate other add-ins in the same application domain and process as the original add-in.\n  example:\n  - \"The following example activates a second add-in within the same environment as the first add-in.  \\n  \\n [!code-vb[AddInP3Host#8](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#8)]\\n [!code-cs[AddInP3Host#8](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#8)]\"\n  syntax:\n    content: public System.AddIn.Hosting.AddInEnvironment AddInEnvironment { get; }\n    return:\n      type: System.AddIn.Hosting.AddInEnvironment\n      description: An object that can be used to activate other add-ins in the same environment as the original add-in.\n  overload: System.AddIn.Hosting.AddInController.AddInEnvironment*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.AddIn.Hosting.AddInController.AppDomain\n  id: AppDomain\n  parent: System.AddIn.Hosting.AddInController\n  langs:\n  - csharp\n  name: AppDomain\n  nameWithType: AddInController.AppDomain\n  fullName: System.AddIn.Hosting.AddInController.AppDomain\n  type: Property\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Gets the application domain that contains an add-in.\n  remarks: Use this property to obtain an add-in's <xref:System.AppDomain> object and to activate other add-ins in the same application domain.\n  example:\n  - \"The following example activates a second add-in in the same application domain as the first add-in.  \\n  \\n [!code-vb[AddInP3Host#9](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#9)]\\n [!code-cs[AddInP3Host#9](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#9)]\"\n  syntax:\n    content: public AppDomain AppDomain { get; }\n    return:\n      type: System.AppDomain\n      description: The application domain of the add-in.\n  overload: System.AddIn.Hosting.AddInController.AppDomain*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.AddIn.Hosting.AddInController.GetAddInController(System.Object)\n  id: GetAddInController(System.Object)\n  parent: System.AddIn.Hosting.AddInController\n  langs:\n  - csharp\n  name: GetAddInController(Object)\n  nameWithType: AddInController.GetAddInController(Object)\n  fullName: System.AddIn.Hosting.AddInController.GetAddInController(Object)\n  type: Method\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Obtains the controller for an add-in.\n  remarks: The <xref:System.AddIn.Hosting.AddInToken.Activate%2A> methods return an object that represents the host's view of the add-in.\n  syntax:\n    content: public static System.AddIn.Hosting.AddInController GetAddInController (object addIn);\n    parameters:\n    - id: addIn\n      type: System.Object\n      description: The host view of the add-in.\n    return:\n      type: System.AddIn.Hosting.AddInController\n      description: The controller for the add-in.\n  overload: System.AddIn.Hosting.AddInController.GetAddInController*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.AddIn.Hosting.AddInController.Shutdown\n  id: Shutdown\n  parent: System.AddIn.Hosting.AddInController\n  langs:\n  - csharp\n  name: Shutdown()\n  nameWithType: AddInController.Shutdown()\n  fullName: System.AddIn.Hosting.AddInController.Shutdown()\n  type: Method\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Disables an add-in.\n  remarks: \"This method breaks the communication pipeline between an add-in and its host. If the add-in was activated in an automatically generated application domain by using the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29> or <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.Security.PermissionSet%29> methods, the Shutdown method also unloads the application domain.  \\n  \\n If the add-in was loaded into its own application domain, the Shutdown method also unloads the application domain.  \\n  \\n If the add-in was loaded into an existing application domain, the host and pipeline segments will no longer have any references to that add-in. In this case, the add-in will be eligible to be reclaimed by garbage collection.  \\n  \\n You can also use this class to shut down an add-in that is activated in an external process.\"\n  example:\n  - \"The following example obtains the <xref:System.AddIn.Hosting.AddInController> object for a host view named `manager` and then shuts down the add-in.  \\n  \\n [!code-vb[AddInCollectionPipelineHost#6](~/add/codesnippet/visualbasic/ListAdaptersHost/Program.vb#6)]\\n [!code-cs[AddInCollectionPipelineHost#6](~/add/codesnippet/csharp/ListAdaptersHost/Program.cs#6)]\"\n  syntax:\n    content: public void Shutdown ();\n    parameters: []\n  overload: System.AddIn.Hosting.AddInController.Shutdown*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.AddIn.Hosting.AddInController.Token\n  id: Token\n  parent: System.AddIn.Hosting.AddInController\n  langs:\n  - csharp\n  name: Token\n  nameWithType: AddInController.Token\n  fullName: System.AddIn.Hosting.AddInController.Token\n  type: Property\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Gets the token that represents the add-in.\n  remarks: Typically, you use this property to obtain a token to activate an add-in at a later time.\n  syntax:\n    content: public System.AddIn.Hosting.AddInToken Token { get; }\n    return:\n      type: System.AddIn.Hosting.AddInToken\n      description: An object that represents the add-in.\n  overload: System.AddIn.Hosting.AddInController.Token*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.AddIn.Hosting.AddInController.AddInEnvironment\n  parent: System.AddIn.Hosting.AddInController\n  isExternal: false\n  name: AddInEnvironment\n  nameWithType: AddInController.AddInEnvironment\n  fullName: System.AddIn.Hosting.AddInController.AddInEnvironment\n- uid: System.AddIn.Hosting.AddInEnvironment\n  parent: System.AddIn.Hosting\n  isExternal: false\n  name: AddInEnvironment\n  nameWithType: AddInEnvironment\n  fullName: System.AddIn.Hosting.AddInEnvironment\n- uid: System.AddIn.Hosting.AddInController.AppDomain\n  parent: System.AddIn.Hosting.AddInController\n  isExternal: false\n  name: AppDomain\n  nameWithType: AddInController.AppDomain\n  fullName: System.AddIn.Hosting.AddInController.AppDomain\n- uid: System.AppDomain\n  parent: System\n  isExternal: false\n  name: AppDomain\n  nameWithType: AppDomain\n  fullName: System.AppDomain\n- uid: System.AddIn.Hosting.AddInController.GetAddInController(System.Object)\n  parent: System.AddIn.Hosting.AddInController\n  isExternal: false\n  name: GetAddInController(Object)\n  nameWithType: AddInController.GetAddInController(Object)\n  fullName: System.AddIn.Hosting.AddInController.GetAddInController(Object)\n- uid: System.AddIn.Hosting.AddInController\n  parent: System.AddIn.Hosting\n  isExternal: false\n  name: AddInController\n  nameWithType: AddInController\n  fullName: System.AddIn.Hosting.AddInController\n- uid: System.AddIn.Hosting.AddInController.Shutdown\n  parent: System.AddIn.Hosting.AddInController\n  isExternal: false\n  name: Shutdown()\n  nameWithType: AddInController.Shutdown()\n  fullName: System.AddIn.Hosting.AddInController.Shutdown()\n- uid: System.AddIn.Hosting.AddInController.Token\n  parent: System.AddIn.Hosting.AddInController\n  isExternal: false\n  name: Token\n  nameWithType: AddInController.Token\n  fullName: System.AddIn.Hosting.AddInController.Token\n- uid: System.AddIn.Hosting.AddInToken\n  parent: System.AddIn.Hosting\n  isExternal: false\n  name: AddInToken\n  nameWithType: AddInToken\n  fullName: System.AddIn.Hosting.AddInToken\n- uid: System.AddIn.Hosting.AddInController.AddInEnvironment*\n  parent: System.AddIn.Hosting.AddInController\n  isExternal: false\n  name: AddInEnvironment\n  nameWithType: AddInController.AddInEnvironment\n- uid: System.AddIn.Hosting.AddInController.AppDomain*\n  parent: System.AddIn.Hosting.AddInController\n  isExternal: false\n  name: AppDomain\n  nameWithType: AddInController.AppDomain\n- uid: System.AddIn.Hosting.AddInController.GetAddInController*\n  parent: System.AddIn.Hosting.AddInController\n  isExternal: false\n  name: GetAddInController\n  nameWithType: AddInController.GetAddInController\n- uid: System.AddIn.Hosting.AddInController.Shutdown*\n  parent: System.AddIn.Hosting.AddInController\n  isExternal: false\n  name: Shutdown\n  nameWithType: AddInController.Shutdown\n- uid: System.AddIn.Hosting.AddInController.Token*\n  parent: System.AddIn.Hosting.AddInController\n  isExternal: false\n  name: Token\n  nameWithType: AddInController.Token\n"}