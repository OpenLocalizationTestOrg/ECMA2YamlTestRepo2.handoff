{"nodes":[{"pos":[1004,1101],"content":"Converts a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.ModifierKeys\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to and from other types.","needQuote":true,"needEscape":true,"source":"Converts a <xref href=\"System.Windows.Input.ModifierKeys\"></xref> object to and from other types."},{"pos":[1114,1630],"content":"The ModifierKeysConverter converts to and from a <xref:System.String> using the \"+\" character as the delimiter.  For example, the string `Control+ALT` would be converted into a <xref:System.Windows.Input.ModifierKeys> object consisting of the <xref:System.Windows.Input.ModifierKeys> and <xref:System.Windows.Input.ModifierKeys> keys. This behavior differs from the default XAML parser-level enumeration combine character of \",\".      <a name=\"xamlTextUsage_ModifierKeysConverter\"></a>    ## XAML Text Usage","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ModifierKeysConverter converts to and from a &lt;xref:System.String&gt; using the \"+\" character as the delimiter.","pos":[0,111],"source":"The ModifierKeysConverter converts to and from a <xref:System.String> using the \"+\" character as the delimiter."},{"content":"For example, the string <ph id=\"ph1\">`Control+ALT`</ph> would be converted into a &lt;xref:System.Windows.Input.ModifierKeys&gt; object consisting of the &lt;xref:System.Windows.Input.ModifierKeys&gt; and &lt;xref:System.Windows.Input.ModifierKeys&gt; keys.","pos":[113,334],"source":"  For example, the string `Control+ALT` would be converted into a <xref:System.Windows.Input.ModifierKeys> object consisting of the <xref:System.Windows.Input.ModifierKeys> and <xref:System.Windows.Input.ModifierKeys> keys."},{"content":"This behavior differs from the default XAML parser-level enumeration combine character of \",\".","pos":[335,429]},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlTextUsage_ModifierKeysConverter\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Text Usage","pos":[435,507],"source":"<a name=\"xamlTextUsage_ModifierKeysConverter\"></a>    ## XAML Text Usage"}]},{"pos":[5515,5619],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.ModifierKeysConverter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Input.ModifierKeysConverter\"></xref> class."},{"pos":[6395,6565],"content":"Determines whether an object of the specified type can be converted to an instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.ModifierKeys\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, using the specified context.","needQuote":true,"needEscape":true,"source":"Determines whether an object of the specified type can be converted to an instance of <xref href=\"System.Windows.Input.ModifierKeys\"></xref>, using the specified context."},{"pos":[6808,6916],"content":"A format context that provides information about the environment from which this converter is being invoked.","needQuote":true,"needEscape":true,"nodes":[{"content":"A format context that provides information about the environment from which this converter is being invoked.","pos":[0,108]}]},{"pos":[6981,7021],"content":"The type being evaluated for conversion.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type being evaluated for conversion.","pos":[0,40]}]},{"pos":[7080,7272],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">sourceType</ph><ept id=\"p2\">&lt;/code&gt;</ept> is type &lt;xref:System.String&gt;; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>sourceType</code> is type <xref:System.String>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7972,8129],"content":"Determines whether an instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.ModifierKeys\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> can be converted to the specified type, using the specified context.","needQuote":true,"needEscape":true,"source":"Determines whether an instance of <xref href=\"System.Windows.Input.ModifierKeys\"></xref> can be converted to the specified type, using the specified context."},{"pos":[8375,8483],"content":"A format context that provides information about the environment from which this converter is being invoked.","needQuote":true,"needEscape":true,"nodes":[{"content":"A format context that provides information about the environment from which this converter is being invoked.","pos":[0,108]}]},{"pos":[8553,8593],"content":"The type being evaluated for conversion.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type being evaluated for conversion.","pos":[0,40]}]},{"pos":[8652,8849],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">destinationType</ph><ept id=\"p2\">&lt;/code&gt;</ept> is type &lt;xref:System.String&gt;; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>destinationType</code> is type <xref:System.String>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9654,9784],"content":"Attempts to convert the specified object to a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.ModifierKeys\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, using the specified context.","needQuote":true,"needEscape":true,"source":"Attempts to convert the specified object to a <xref href=\"System.Windows.Input.ModifierKeys\"></xref>, using the specified context."},{"pos":[9796,10145],"content":"The <xref:System.Windows.Input.ModifierKeysConverter> converts to and from a <xref:System.String> using the \"+\" key as the delimiter.  For example, the string `Control+ALT` would be converted into a <xref:System.Windows.Input.ModifierKeys> consisting of the <xref:System.Windows.Input.ModifierKeys> and <xref:System.Windows.Input.ModifierKeys> keys.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Windows.Input.ModifierKeysConverter&gt; converts to and from a &lt;xref:System.String&gt; using the \"+\" key as the delimiter.","pos":[0,133],"source":"The <xref:System.Windows.Input.ModifierKeysConverter> converts to and from a <xref:System.String> using the \"+\" key as the delimiter."},{"content":"For example, the string <ph id=\"ph1\">`Control+ALT`</ph> would be converted into a &lt;xref:System.Windows.Input.ModifierKeys&gt; consisting of the &lt;xref:System.Windows.Input.ModifierKeys&gt; and &lt;xref:System.Windows.Input.ModifierKeys&gt; keys.","pos":[135,349],"source":"  For example, the string `Control+ALT` would be converted into a <xref:System.Windows.Input.ModifierKeys> consisting of the <xref:System.Windows.Input.ModifierKeys> and <xref:System.Windows.Input.ModifierKeys> keys."}]},{"pos":[10427,10535],"content":"A format context that provides information about the environment from which this converter is being invoked.","needQuote":true,"needEscape":true,"nodes":[{"content":"A format context that provides information about the environment from which this converter is being invoked.","pos":[0,108]}]},{"pos":[10618,10647],"content":"Culture specific information.","needQuote":true,"needEscape":true,"nodes":[{"content":"Culture specific information.","pos":[0,29]}]},{"pos":[10710,10732],"content":"The object to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to convert.","pos":[0,22]}]},{"pos":[10790,10811],"content":"The converted object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The converted object.","pos":[0,21]}]},{"pos":[10996,11036],"content":"<ph id=\"ph1\">&lt;code&gt;source&lt;/code&gt;</ph> cannot be converted.","needQuote":true,"needEscape":true,"source":"<code>source</code> cannot be converted."},{"pos":[11784,11912],"content":"Attempts to convert a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.ModifierKeys\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to the specified type, using the specified context.","needQuote":true,"needEscape":true,"source":"Attempts to convert a <xref href=\"System.Windows.Input.ModifierKeys\"></xref> to the specified type, using the specified context."},{"pos":[11925,12332],"content":"`destinationType` must be <xref:System.String>.       The <xref:System.Windows.Input.ModifierKeysConverter> converts to and from a <xref:System.String> using the \"+\" key as the delimiter.  For example, the string `Control+ALT` would be converted into a <xref:System.Windows.Input.ModifierKeys> consisting of the <xref:System.Windows.Input.ModifierKeys> and <xref:System.Windows.Input.ModifierKeys> keys.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">`destinationType`</ph> must be &lt;xref:System.String&gt;.","pos":[0,47],"source":"`destinationType` must be <xref:System.String>."},{"content":"The &lt;xref:System.Windows.Input.ModifierKeysConverter&gt; converts to and from a &lt;xref:System.String&gt; using the \"+\" key as the delimiter.","pos":[54,187],"source":"       The <xref:System.Windows.Input.ModifierKeysConverter> converts to and from a <xref:System.String> using the \"+\" key as the delimiter."},{"content":"For example, the string <ph id=\"ph1\">`Control+ALT`</ph> would be converted into a &lt;xref:System.Windows.Input.ModifierKeys&gt; consisting of the &lt;xref:System.Windows.Input.ModifierKeys&gt; and &lt;xref:System.Windows.Input.ModifierKeys&gt; keys.","pos":[189,403],"source":"  For example, the string `Control+ALT` would be converted into a <xref:System.Windows.Input.ModifierKeys> consisting of the <xref:System.Windows.Input.ModifierKeys> and <xref:System.Windows.Input.ModifierKeys> keys."}]},{"pos":[12634,12742],"content":"A format context that provides information about the environment from which this converter is being invoked.","needQuote":true,"needEscape":true,"nodes":[{"content":"A format context that provides information about the environment from which this converter is being invoked.","pos":[0,108]}]},{"pos":[12825,12854],"content":"Culture specific information.","needQuote":true,"needEscape":true,"nodes":[{"content":"Culture specific information.","pos":[0,29]}]},{"pos":[12916,12938],"content":"The object to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to convert.","pos":[0,22]}]},{"pos":[13008,13042],"content":"The type to convert the object to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type to convert the object to.","pos":[0,34]}]},{"pos":[13100,13121],"content":"The converted object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The converted object.","pos":[0,21]}]},{"pos":[13304,13397],"content":"<ph id=\"ph1\">&lt;code&gt;destinationType&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>destinationType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[13544,13642],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> does not map to a valid <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.ModifierKeys\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>value</code> does not map to a valid <xref href=\"System.Windows.Input.ModifierKeys\"></xref>."},{"pos":[13745,13784],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> cannot be converted.","needQuote":true,"needEscape":true,"source":"<code>value</code> cannot be converted."},{"pos":[14350,14461],"content":"Determines whether the specified value is a valid <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.ModifierKeys\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"Determines whether the specified value is a valid <xref href=\"System.Windows.Input.ModifierKeys\"></xref> value."},{"pos":[14680,14712],"content":"The value to check for validity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to check for validity.","pos":[0,32]}]},{"pos":[14771,14988],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if input is a valid <bpt id=\"p2\">&lt;xref href=\"System.Windows.Input.ModifierKeys\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> value; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if input is a valid <xref href=\"System.Windows.Input.ModifierKeys\"></xref> value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.ModifierKeysConverter\n  id: ModifierKeysConverter\n  children:\n  - System.Windows.Input.ModifierKeysConverter.#ctor\n  - System.Windows.Input.ModifierKeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Windows.Input.ModifierKeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Windows.Input.ModifierKeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.Windows.Input.ModifierKeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  - System.Windows.Input.ModifierKeysConverter.IsDefinedModifierKeys(System.Windows.Input.ModifierKeys)\n  langs:\n  - csharp\n  name: ModifierKeysConverter\n  nameWithType: ModifierKeysConverter\n  fullName: System.Windows.Input.ModifierKeysConverter\n  type: Class\n  summary: Converts a <xref href=\"System.Windows.Input.ModifierKeys\"></xref> object to and from other types.\n  remarks: \"The ModifierKeysConverter converts to and from a <xref:System.String> using the \\\"+\\\" character as the delimiter.  For example, the string `Control+ALT` would be converted into a <xref:System.Windows.Input.ModifierKeys> object consisting of the <xref:System.Windows.Input.ModifierKeys> and <xref:System.Windows.Input.ModifierKeys> keys. This behavior differs from the default XAML parser-level enumeration combine character of \\\",\\\".  \\n  \\n<a name=\\\"xamlTextUsage_ModifierKeysConverter\\\"></a>   \\n## XAML Text Usage\"\n  syntax:\n    content: 'public class ModifierKeysConverter : System.ComponentModel.TypeConverter'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  platform:\n  - net462\n- uid: System.Windows.Input.ModifierKeysConverter.#ctor\n  id: '#ctor'\n  parent: System.Windows.Input.ModifierKeysConverter\n  langs:\n  - csharp\n  name: ModifierKeysConverter()\n  nameWithType: ModifierKeysConverter.ModifierKeysConverter()\n  fullName: System.Windows.Input.ModifierKeysConverter.ModifierKeysConverter()\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Input\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Input.ModifierKeysConverter\"></xref> class.\n  syntax:\n    content: public ModifierKeysConverter ();\n    parameters: []\n  overload: System.Windows.Input.ModifierKeysConverter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.ModifierKeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Input.ModifierKeysConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: ModifierKeysConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.Windows.Input.ModifierKeysConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Input\n  summary: Determines whether an object of the specified type can be converted to an instance of <xref href=\"System.Windows.Input.ModifierKeys\"></xref>, using the specified context.\n  syntax:\n    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A format context that provides information about the environment from which this converter is being invoked.\n    - id: sourceType\n      type: System.Type\n      description: The type being evaluated for conversion.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>sourceType</code> is type <xref:System.String>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Input.ModifierKeysConverter.CanConvertFrom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.ModifierKeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Input.ModifierKeysConverter\n  langs:\n  - csharp\n  name: CanConvertTo(ITypeDescriptorContext,Type)\n  nameWithType: ModifierKeysConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  fullName: System.Windows.Input.ModifierKeysConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Input\n  summary: Determines whether an instance of <xref href=\"System.Windows.Input.ModifierKeys\"></xref> can be converted to the specified type, using the specified context.\n  syntax:\n    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A format context that provides information about the environment from which this converter is being invoked.\n    - id: destinationType\n      type: System.Type\n      description: The type being evaluated for conversion.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>destinationType</code> is type <xref:System.String>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Input.ModifierKeysConverter.CanConvertTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.ModifierKeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Windows.Input.ModifierKeysConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: ModifierKeysConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.Windows.Input.ModifierKeysConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Input\n  summary: Attempts to convert the specified object to a <xref href=\"System.Windows.Input.ModifierKeys\"></xref>, using the specified context.\n  remarks: The <xref:System.Windows.Input.ModifierKeysConverter> converts to and from a <xref:System.String> using the \"+\" key as the delimiter.  For example, the string `Control+ALT` would be converted into a <xref:System.Windows.Input.ModifierKeys> consisting of the <xref:System.Windows.Input.ModifierKeys> and <xref:System.Windows.Input.ModifierKeys> keys.\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object source);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A format context that provides information about the environment from which this converter is being invoked.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Culture specific information.\n    - id: source\n      type: System.Object\n      description: The object to convert.\n    return:\n      type: System.Object\n      description: The converted object.\n  overload: System.Windows.Input.ModifierKeysConverter.ConvertFrom*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>source</code> cannot be converted.\n  platform:\n  - net462\n- uid: System.Windows.Input.ModifierKeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Windows.Input.ModifierKeysConverter\n  langs:\n  - csharp\n  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  nameWithType: ModifierKeysConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  fullName: System.Windows.Input.ModifierKeysConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Input\n  summary: Attempts to convert a <xref href=\"System.Windows.Input.ModifierKeys\"></xref> to the specified type, using the specified context.\n  remarks: \"`destinationType` must be <xref:System.String>.  \\n  \\n The <xref:System.Windows.Input.ModifierKeysConverter> converts to and from a <xref:System.String> using the \\\"+\\\" key as the delimiter.  For example, the string `Control+ALT` would be converted into a <xref:System.Windows.Input.ModifierKeys> consisting of the <xref:System.Windows.Input.ModifierKeys> and <xref:System.Windows.Input.ModifierKeys> keys.\"\n  syntax:\n    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A format context that provides information about the environment from which this converter is being invoked.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Culture specific information.\n    - id: value\n      type: System.Object\n      description: The object to convert.\n    - id: destinationType\n      type: System.Type\n      description: The type to convert the object to.\n    return:\n      type: System.Object\n      description: The converted object.\n  overload: System.Windows.Input.ModifierKeysConverter.ConvertTo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>destinationType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: <code>value</code> does not map to a valid <xref href=\"System.Windows.Input.ModifierKeys\"></xref>.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>value</code> cannot be converted.\n  platform:\n  - net462\n- uid: System.Windows.Input.ModifierKeysConverter.IsDefinedModifierKeys(System.Windows.Input.ModifierKeys)\n  id: IsDefinedModifierKeys(System.Windows.Input.ModifierKeys)\n  parent: System.Windows.Input.ModifierKeysConverter\n  langs:\n  - csharp\n  name: IsDefinedModifierKeys(ModifierKeys)\n  nameWithType: ModifierKeysConverter.IsDefinedModifierKeys(ModifierKeys)\n  fullName: System.Windows.Input.ModifierKeysConverter.IsDefinedModifierKeys(ModifierKeys)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Input\n  summary: Determines whether the specified value is a valid <xref href=\"System.Windows.Input.ModifierKeys\"></xref> value.\n  syntax:\n    content: public static bool IsDefinedModifierKeys (System.Windows.Input.ModifierKeys modifierKeys);\n    parameters:\n    - id: modifierKeys\n      type: System.Windows.Input.ModifierKeys\n      description: The value to check for validity.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if input is a valid <xref href=\"System.Windows.Input.ModifierKeys\"></xref> value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Input.ModifierKeysConverter.IsDefinedModifierKeys*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: System.ComponentModel.TypeConverter\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ComponentModel.InvalidEnumArgumentException\n  parent: System.ComponentModel\n  isExternal: false\n  name: InvalidEnumArgumentException\n  nameWithType: InvalidEnumArgumentException\n  fullName: System.ComponentModel.InvalidEnumArgumentException\n- uid: System.Windows.Input.ModifierKeysConverter.#ctor\n  parent: System.Windows.Input.ModifierKeysConverter\n  isExternal: false\n  name: ModifierKeysConverter()\n  nameWithType: ModifierKeysConverter.ModifierKeysConverter()\n  fullName: System.Windows.Input.ModifierKeysConverter.ModifierKeysConverter()\n- uid: System.Windows.Input.ModifierKeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Input.ModifierKeysConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: ModifierKeysConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.Windows.Input.ModifierKeysConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Windows.Input.ModifierKeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Input.ModifierKeysConverter\n  isExternal: false\n  name: CanConvertTo(ITypeDescriptorContext,Type)\n  nameWithType: ModifierKeysConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  fullName: System.Windows.Input.ModifierKeysConverter.CanConvertTo(ITypeDescriptorContext,Type)\n- uid: System.Windows.Input.ModifierKeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Windows.Input.ModifierKeysConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: ModifierKeysConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.Windows.Input.ModifierKeysConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: true\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Windows.Input.ModifierKeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Windows.Input.ModifierKeysConverter\n  isExternal: false\n  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  nameWithType: ModifierKeysConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  fullName: System.Windows.Input.ModifierKeysConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n- uid: System.Windows.Input.ModifierKeysConverter.IsDefinedModifierKeys(System.Windows.Input.ModifierKeys)\n  parent: System.Windows.Input.ModifierKeysConverter\n  isExternal: false\n  name: IsDefinedModifierKeys(ModifierKeys)\n  nameWithType: ModifierKeysConverter.IsDefinedModifierKeys(ModifierKeys)\n  fullName: System.Windows.Input.ModifierKeysConverter.IsDefinedModifierKeys(ModifierKeys)\n- uid: System.Windows.Input.ModifierKeys\n  parent: System.Windows.Input\n  isExternal: false\n  name: ModifierKeys\n  nameWithType: ModifierKeys\n  fullName: System.Windows.Input.ModifierKeys\n- uid: System.Windows.Input.ModifierKeysConverter.#ctor*\n  parent: System.Windows.Input.ModifierKeysConverter\n  isExternal: false\n  name: ModifierKeysConverter\n  nameWithType: ModifierKeysConverter.ModifierKeysConverter\n- uid: System.Windows.Input.ModifierKeysConverter.CanConvertFrom*\n  parent: System.Windows.Input.ModifierKeysConverter\n  isExternal: false\n  name: CanConvertFrom\n  nameWithType: ModifierKeysConverter.CanConvertFrom\n- uid: System.Windows.Input.ModifierKeysConverter.CanConvertTo*\n  parent: System.Windows.Input.ModifierKeysConverter\n  isExternal: false\n  name: CanConvertTo\n  nameWithType: ModifierKeysConverter.CanConvertTo\n- uid: System.Windows.Input.ModifierKeysConverter.ConvertFrom*\n  parent: System.Windows.Input.ModifierKeysConverter\n  isExternal: false\n  name: ConvertFrom\n  nameWithType: ModifierKeysConverter.ConvertFrom\n- uid: System.Windows.Input.ModifierKeysConverter.ConvertTo*\n  parent: System.Windows.Input.ModifierKeysConverter\n  isExternal: false\n  name: ConvertTo\n  nameWithType: ModifierKeysConverter.ConvertTo\n- uid: System.Windows.Input.ModifierKeysConverter.IsDefinedModifierKeys*\n  parent: System.Windows.Input.ModifierKeysConverter\n  isExternal: false\n  name: IsDefinedModifierKeys\n  nameWithType: ModifierKeysConverter.IsDefinedModifierKeys\n"}