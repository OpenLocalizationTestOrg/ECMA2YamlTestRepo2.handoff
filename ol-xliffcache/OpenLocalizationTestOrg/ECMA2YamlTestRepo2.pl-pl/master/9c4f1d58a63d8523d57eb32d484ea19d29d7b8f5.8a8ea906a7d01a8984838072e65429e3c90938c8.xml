{"nodes":[{"pos":[791,893],"content":"Provides a strongly typed collection of <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.ProcessModule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"Provides a strongly typed collection of <xref href=\"System.Diagnostics.ProcessModule\"></xref> objects."},{"pos":[905,1173],"content":"A module is an executable file or a dynamic link library (DLL). Each process consists of one or more modules. You can use this class to iterate over a collection of process modules on the system. A module is identified by its module name and fully qualified file path.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A module is an executable file or a dynamic link library (DLL). Each process consists of one or more modules. You can use this class to iterate over a collection of process modules on the system. A module is identified by its module name and fully qualified file path.","pos":[0,268],"nodes":[{"content":"A module is an executable file or a dynamic link library (DLL).","pos":[0,63]},{"content":"Each process consists of one or more modules.","pos":[64,109]},{"content":"You can use this class to iterate over a collection of process modules on the system.","pos":[110,195]},{"content":"A module is identified by its module name and fully qualified file path.","pos":[196,268]}]}]},{"pos":[2288,2476],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.ProcessModuleCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, with no associated <bpt id=\"p2\">&lt;xref href=\"System.Diagnostics.ProcessModule\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instances.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Diagnostics.ProcessModuleCollection\"></xref> class, with no associated <xref href=\"System.Diagnostics.ProcessModule\"></xref> instances."},{"pos":[3188,3386],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.ProcessModuleCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, using the specified array of <bpt id=\"p2\">&lt;xref href=\"System.Diagnostics.ProcessModule\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instances.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Diagnostics.ProcessModuleCollection\"></xref> class, using the specified array of <xref href=\"System.Diagnostics.ProcessModule\"></xref> instances."},{"pos":[3601,3780],"content":"An array of <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.ProcessModule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances with which to initialize this <bpt id=\"p2\">&lt;xref href=\"System.Diagnostics.ProcessModuleCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"An array of <xref href=\"System.Diagnostics.ProcessModule\"></xref> instances with which to initialize this <xref href=\"System.Diagnostics.ProcessModuleCollection\"></xref> instance."},{"pos":[4356,4429],"content":"Determines whether the specified process module exists in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the specified process module exists in the collection.","pos":[0,73]}]},{"pos":[4441,4517],"content":"A module is identified by its module name and its fully qualified file path.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A module is identified by its module name and its fully qualified file path.","pos":[0,76]}]},{"pos":[4702,4820],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.ProcessModule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance that indicates the module to find in this collection.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Diagnostics.ProcessModule\"></xref> instance that indicates the module to find in this collection."},{"pos":[4879,5054],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the module exists in the collection; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the module exists in the collection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[5677,5802],"content":"Copies an array of <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.ProcessModule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances to the collection, at the specified index.","needQuote":true,"needEscape":true,"source":"Copies an array of <xref href=\"System.Diagnostics.ProcessModule\"></xref> instances to the collection, at the specified index."},{"pos":[5998,6099],"content":"An array of <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.ProcessModule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances to add to the collection.","needQuote":true,"needEscape":true,"source":"An array of <xref href=\"System.Diagnostics.ProcessModule\"></xref> instances to add to the collection."},{"pos":[6160,6207],"content":"The location at which to add the new instances.","needQuote":true,"needEscape":true,"nodes":[{"content":"The location at which to add the new instances.","pos":[0,47]}]},{"pos":[6779,6845],"content":"Provides the location of a specified module within the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides the location of a specified module within the collection.","pos":[0,66]}]},{"pos":[7028,7111],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.ProcessModule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> whose index is retrieved.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Diagnostics.ProcessModule\"></xref> whose index is retrieved."},{"pos":[7168,7304],"content":"The zero-based index that defines the location of the module within the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.ProcessModuleCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The zero-based index that defines the location of the module within the <xref href=\"System.Diagnostics.ProcessModuleCollection\"></xref>."},{"pos":[7800,7860],"content":"Gets an index for iterating over the set of process modules.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an index for iterating over the set of process modules.","pos":[0,60]}]},{"pos":[8025,8084],"content":"The zero-based index value of the module in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index value of the module in the collection.","pos":[0,59]}]},{"pos":[8161,8259],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.ProcessModule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that indexes the modules in the collection","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Diagnostics.ProcessModule\"></xref> that indexes the modules in the collection"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.ProcessModuleCollection\n  id: ProcessModuleCollection\n  children:\n  - System.Diagnostics.ProcessModuleCollection.#ctor\n  - System.Diagnostics.ProcessModuleCollection.#ctor(System.Diagnostics.ProcessModule[])\n  - System.Diagnostics.ProcessModuleCollection.Contains(System.Diagnostics.ProcessModule)\n  - System.Diagnostics.ProcessModuleCollection.CopyTo(System.Diagnostics.ProcessModule[],System.Int32)\n  - System.Diagnostics.ProcessModuleCollection.IndexOf(System.Diagnostics.ProcessModule)\n  - System.Diagnostics.ProcessModuleCollection.Item(System.Int32)\n  langs:\n  - csharp\n  name: ProcessModuleCollection\n  nameWithType: ProcessModuleCollection\n  fullName: System.Diagnostics.ProcessModuleCollection\n  type: Class\n  summary: Provides a strongly typed collection of <xref href=\"System.Diagnostics.ProcessModule\"></xref> objects.\n  remarks: A module is an executable file or a dynamic link library (DLL). Each process consists of one or more modules. You can use this class to iterate over a collection of process modules on the system. A module is identified by its module name and fully qualified file path.\n  syntax:\n    content: 'public class ProcessModuleCollection : System.Collections.ReadOnlyCollectionBase'\n  inheritance:\n  - System.Object\n  - System.Collections.ReadOnlyCollectionBase\n  implements: []\n  inheritedMembers:\n  - System.Collections.ReadOnlyCollectionBase.Count\n  - System.Collections.ReadOnlyCollectionBase.GetEnumerator\n  - System.Collections.ReadOnlyCollectionBase.InnerList\n  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized\n  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot\n  platform:\n  - net462\n- uid: System.Diagnostics.ProcessModuleCollection.#ctor\n  id: '#ctor'\n  parent: System.Diagnostics.ProcessModuleCollection\n  langs:\n  - csharp\n  name: ProcessModuleCollection()\n  nameWithType: ProcessModuleCollection.ProcessModuleCollection()\n  fullName: System.Diagnostics.ProcessModuleCollection.ProcessModuleCollection()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.ProcessModuleCollection\"></xref> class, with no associated <xref href=\"System.Diagnostics.ProcessModule\"></xref> instances.\n  syntax:\n    content: protected ProcessModuleCollection ();\n    parameters: []\n  overload: System.Diagnostics.ProcessModuleCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.ProcessModuleCollection.#ctor(System.Diagnostics.ProcessModule[])\n  id: '#ctor(System.Diagnostics.ProcessModule[])'\n  parent: System.Diagnostics.ProcessModuleCollection\n  langs:\n  - csharp\n  name: ProcessModuleCollection(ProcessModule[])\n  nameWithType: ProcessModuleCollection.ProcessModuleCollection(ProcessModule[])\n  fullName: System.Diagnostics.ProcessModuleCollection.ProcessModuleCollection(ProcessModule[])\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.ProcessModuleCollection\"></xref> class, using the specified array of <xref href=\"System.Diagnostics.ProcessModule\"></xref> instances.\n  syntax:\n    content: public ProcessModuleCollection (System.Diagnostics.ProcessModule[] processModules);\n    parameters:\n    - id: processModules\n      type: System.Diagnostics.ProcessModule[]\n      description: An array of <xref href=\"System.Diagnostics.ProcessModule\"></xref> instances with which to initialize this <xref href=\"System.Diagnostics.ProcessModuleCollection\"></xref> instance.\n  overload: System.Diagnostics.ProcessModuleCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.ProcessModuleCollection.Contains(System.Diagnostics.ProcessModule)\n  id: Contains(System.Diagnostics.ProcessModule)\n  parent: System.Diagnostics.ProcessModuleCollection\n  langs:\n  - csharp\n  name: Contains(ProcessModule)\n  nameWithType: ProcessModuleCollection.Contains(ProcessModule)\n  fullName: System.Diagnostics.ProcessModuleCollection.Contains(ProcessModule)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Determines whether the specified process module exists in the collection.\n  remarks: A module is identified by its module name and its fully qualified file path.\n  syntax:\n    content: public bool Contains (System.Diagnostics.ProcessModule module);\n    parameters:\n    - id: module\n      type: System.Diagnostics.ProcessModule\n      description: A <xref href=\"System.Diagnostics.ProcessModule\"></xref> instance that indicates the module to find in this collection.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the module exists in the collection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Diagnostics.ProcessModuleCollection.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.ProcessModuleCollection.CopyTo(System.Diagnostics.ProcessModule[],System.Int32)\n  id: CopyTo(System.Diagnostics.ProcessModule[],System.Int32)\n  parent: System.Diagnostics.ProcessModuleCollection\n  langs:\n  - csharp\n  name: CopyTo(ProcessModule[],Int32)\n  nameWithType: ProcessModuleCollection.CopyTo(ProcessModule[],Int32)\n  fullName: System.Diagnostics.ProcessModuleCollection.CopyTo(ProcessModule[],Int32)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Copies an array of <xref href=\"System.Diagnostics.ProcessModule\"></xref> instances to the collection, at the specified index.\n  syntax:\n    content: public void CopyTo (System.Diagnostics.ProcessModule[] array, int index);\n    parameters:\n    - id: array\n      type: System.Diagnostics.ProcessModule[]\n      description: An array of <xref href=\"System.Diagnostics.ProcessModule\"></xref> instances to add to the collection.\n    - id: index\n      type: System.Int32\n      description: The location at which to add the new instances.\n  overload: System.Diagnostics.ProcessModuleCollection.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.ProcessModuleCollection.IndexOf(System.Diagnostics.ProcessModule)\n  id: IndexOf(System.Diagnostics.ProcessModule)\n  parent: System.Diagnostics.ProcessModuleCollection\n  langs:\n  - csharp\n  name: IndexOf(ProcessModule)\n  nameWithType: ProcessModuleCollection.IndexOf(ProcessModule)\n  fullName: System.Diagnostics.ProcessModuleCollection.IndexOf(ProcessModule)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Provides the location of a specified module within the collection.\n  syntax:\n    content: public int IndexOf (System.Diagnostics.ProcessModule module);\n    parameters:\n    - id: module\n      type: System.Diagnostics.ProcessModule\n      description: The <xref href=\"System.Diagnostics.ProcessModule\"></xref> whose index is retrieved.\n    return:\n      type: System.Int32\n      description: The zero-based index that defines the location of the module within the <xref href=\"System.Diagnostics.ProcessModuleCollection\"></xref>.\n  overload: System.Diagnostics.ProcessModuleCollection.IndexOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.ProcessModuleCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Diagnostics.ProcessModuleCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: ProcessModuleCollection.Item(Int32)\n  fullName: System.Diagnostics.ProcessModuleCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Gets an index for iterating over the set of process modules.\n  syntax:\n    content: public System.Diagnostics.ProcessModule this[int index] { get; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index value of the module in the collection.\n    return:\n      type: System.Diagnostics.ProcessModule\n      description: A <xref href=\"System.Diagnostics.ProcessModule\"></xref> that indexes the modules in the collection\n  overload: System.Diagnostics.ProcessModuleCollection.Item*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Collections.ReadOnlyCollectionBase\n  isExternal: false\n  name: System.Collections.ReadOnlyCollectionBase\n- uid: System.Diagnostics.ProcessModuleCollection.#ctor\n  parent: System.Diagnostics.ProcessModuleCollection\n  isExternal: false\n  name: ProcessModuleCollection()\n  nameWithType: ProcessModuleCollection.ProcessModuleCollection()\n  fullName: System.Diagnostics.ProcessModuleCollection.ProcessModuleCollection()\n- uid: System.Diagnostics.ProcessModuleCollection.#ctor(System.Diagnostics.ProcessModule[])\n  parent: System.Diagnostics.ProcessModuleCollection\n  isExternal: false\n  name: ProcessModuleCollection(ProcessModule[])\n  nameWithType: ProcessModuleCollection.ProcessModuleCollection(ProcessModule[])\n  fullName: System.Diagnostics.ProcessModuleCollection.ProcessModuleCollection(ProcessModule[])\n- uid: System.Diagnostics.ProcessModule[]\n  parent: System.Diagnostics\n  isExternal: false\n  name: ProcessModule\n  nameWithType: ProcessModule\n  fullName: System.Diagnostics.ProcessModule[]\n  spec.csharp:\n  - uid: System.Diagnostics.ProcessModule\n    name: ProcessModule\n    nameWithType: ProcessModule\n    fullName: ProcessModule[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.ProcessModuleCollection.Contains(System.Diagnostics.ProcessModule)\n  parent: System.Diagnostics.ProcessModuleCollection\n  isExternal: false\n  name: Contains(ProcessModule)\n  nameWithType: ProcessModuleCollection.Contains(ProcessModule)\n  fullName: System.Diagnostics.ProcessModuleCollection.Contains(ProcessModule)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.ProcessModule\n  parent: System.Diagnostics\n  isExternal: false\n  name: ProcessModule\n  nameWithType: ProcessModule\n  fullName: System.Diagnostics.ProcessModule\n- uid: System.Diagnostics.ProcessModuleCollection.CopyTo(System.Diagnostics.ProcessModule[],System.Int32)\n  parent: System.Diagnostics.ProcessModuleCollection\n  isExternal: false\n  name: CopyTo(ProcessModule[],Int32)\n  nameWithType: ProcessModuleCollection.CopyTo(ProcessModule[],Int32)\n  fullName: System.Diagnostics.ProcessModuleCollection.CopyTo(ProcessModule[],Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.ProcessModuleCollection.IndexOf(System.Diagnostics.ProcessModule)\n  parent: System.Diagnostics.ProcessModuleCollection\n  isExternal: false\n  name: IndexOf(ProcessModule)\n  nameWithType: ProcessModuleCollection.IndexOf(ProcessModule)\n  fullName: System.Diagnostics.ProcessModuleCollection.IndexOf(ProcessModule)\n- uid: System.Diagnostics.ProcessModuleCollection.Item(System.Int32)\n  parent: System.Diagnostics.ProcessModuleCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: ProcessModuleCollection.Item(Int32)\n  fullName: System.Diagnostics.ProcessModuleCollection.Item(Int32)\n- uid: System.Diagnostics.ProcessModuleCollection.#ctor*\n  parent: System.Diagnostics.ProcessModuleCollection\n  isExternal: false\n  name: ProcessModuleCollection\n  nameWithType: ProcessModuleCollection.ProcessModuleCollection\n- uid: System.Diagnostics.ProcessModuleCollection.Contains*\n  parent: System.Diagnostics.ProcessModuleCollection\n  isExternal: false\n  name: Contains\n  nameWithType: ProcessModuleCollection.Contains\n- uid: System.Diagnostics.ProcessModuleCollection.CopyTo*\n  parent: System.Diagnostics.ProcessModuleCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: ProcessModuleCollection.CopyTo\n- uid: System.Diagnostics.ProcessModuleCollection.IndexOf*\n  parent: System.Diagnostics.ProcessModuleCollection\n  isExternal: false\n  name: IndexOf\n  nameWithType: ProcessModuleCollection.IndexOf\n- uid: System.Diagnostics.ProcessModuleCollection.Item*\n  parent: System.Diagnostics.ProcessModuleCollection\n  isExternal: false\n  name: Item\n  nameWithType: ProcessModuleCollection.Item\n"}