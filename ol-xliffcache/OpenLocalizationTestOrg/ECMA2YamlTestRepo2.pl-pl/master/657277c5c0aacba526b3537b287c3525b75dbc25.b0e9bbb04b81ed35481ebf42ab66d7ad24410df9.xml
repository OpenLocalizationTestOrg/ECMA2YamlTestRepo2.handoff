{"nodes":[{"pos":[1251,1335],"content":"Converts <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects from one type to another.","needQuote":true,"needEscape":true,"source":"Converts <xref href=\"System.Drawing.SizeF\"></xref> objects from one type to another."},{"pos":[1347,1617],"content":"Most commonly, the SizeFConverter type converter is used to convert <xref:System.Drawing.Font> instances to and from their corresponding string representations. Access the <xref:System.Drawing.FontConverter> class through the <xref:System.ComponentModel.TypeDescriptor>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Most commonly, the SizeFConverter type converter is used to convert <xref:System.Drawing.Font> instances to and from their corresponding string representations. Access the <xref:System.Drawing.FontConverter> class through the <xref:System.ComponentModel.TypeDescriptor>.","pos":[0,270],"nodes":[{"content":"Most commonly, the SizeFConverter type converter is used to convert &lt;xref:System.Drawing.Font&gt; instances to and from their corresponding string representations.","pos":[0,160],"source":"Most commonly, the SizeFConverter type converter is used to convert <xref:System.Drawing.Font> instances to and from their corresponding string representations."},{"content":"Access the &lt;xref:System.Drawing.FontConverter&gt; class through the &lt;xref:System.ComponentModel.TypeDescriptor&gt;.","pos":[161,270],"source":" Access the <xref:System.Drawing.FontConverter> class through the <xref:System.ComponentModel.TypeDescriptor>."}]}]},{"pos":[4937,5028],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeFConverter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Drawing.SizeFConverter\"></xref> class."},{"pos":[5735,5903],"content":"Returns a value indicating whether the converter can convert from the type specified to the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> type, using the specified context.","needQuote":true,"needEscape":true,"source":"Returns a value indicating whether the converter can convert from the type specified to the <xref href=\"System.Drawing.SizeF\"></xref> type, using the specified context."},{"pos":[5915,6002],"content":"If the specified type is a &lt;xref:System.String&gt;, this method will always return <ph id=\"ph1\">`true`</ph>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"If the specified type is a <xref:System.String>, this method will always return `true`."},{"pos":[6245,6363],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> through which additional context can be supplied.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> through which additional context can be supplied."},{"pos":[6428,6498],"content":"A <xref:System.Type> the represents the type you wish to convert from.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; the represents the type you wish to convert from.","pos":[0,70],"source":"A <xref:System.Type> the represents the type you wish to convert from."}]},{"pos":[6557,6737],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to indicate the conversion can be performed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate the conversion can be performed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7375,7543],"content":"Returns a value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeFConverter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> can convert a <bpt id=\"p2\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to the specified type.","needQuote":true,"needEscape":true,"source":"Returns a value indicating whether the <xref href=\"System.Drawing.SizeFConverter\"></xref> can convert a <xref href=\"System.Drawing.SizeF\"></xref> to the specified type."},{"pos":[7789,7907],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> through which additional context can be supplied.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> through which additional context can be supplied."},{"pos":[7977,8048],"content":"A <xref:System.Type> that represents the type you want to convert from.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; that represents the type you want to convert from.","pos":[0,71],"source":"A <xref:System.Type> that represents the type you want to convert from."}]},{"pos":[8107,8287],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this converter can perform the conversion otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this converter can perform the conversion otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9030,9139],"content":"Converts the given object to the type of this converter, using the specified context and culture information.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the given object to the type of this converter, using the specified context and culture information.","pos":[0,109]}]},{"pos":[9420,9520],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[9603,9677],"content":"The <xref:System.Globalization.CultureInfo> to use as the current culture.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Globalization.CultureInfo&gt; to use as the current culture.","pos":[0,74],"source":"The <xref:System.Globalization.CultureInfo> to use as the current culture."}]},{"pos":[9739,9775],"content":"The <xref:System.Object> to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to convert.","pos":[0,36],"source":"The <xref:System.Object> to convert."}]},{"pos":[9833,9893],"content":"An <xref:System.Object> that represents the converted value.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Object&gt; that represents the converted value.","pos":[0,60],"source":"An <xref:System.Object> that represents the converted value."}]},{"pos":[10664,10771],"content":"Converts the given value object to the specified type, using the specified context and culture information.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the given value object to the specified type, using the specified context and culture information.","pos":[0,107]}]},{"pos":[11072,11172],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[11255,11348],"content":"A <xref:System.Globalization.CultureInfo>. If null is passed, the current culture is assumed.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <xref:System.Globalization.CultureInfo>. If null is passed, the current culture is assumed.","pos":[0,93],"nodes":[{"content":"A &lt;xref:System.Globalization.CultureInfo&gt;.","pos":[0,42],"source":"A <xref:System.Globalization.CultureInfo>."},{"content":"If null is passed, the current culture is assumed.","pos":[43,93]}]}]},{"pos":[11410,11446],"content":"The <xref:System.Object> to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to convert.","pos":[0,36],"source":"The <xref:System.Object> to convert."}]},{"pos":[11516,11573],"content":"The <xref:System.Type> to convert the value parameter to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; to convert the value parameter to.","pos":[0,57],"source":"The <xref:System.Type> to convert the value parameter to."}]},{"pos":[11631,11691],"content":"An <xref:System.Object> that represents the converted value.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Object&gt; that represents the converted value.","pos":[0,60],"source":"An <xref:System.Object> that represents the converted value."}]},{"pos":[12393,12523],"content":"Creates an instance of a <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the specified property values using the specified context.","needQuote":true,"needEscape":true,"source":"Creates an instance of a <xref href=\"System.Drawing.SizeF\"></xref> with the specified property values using the specified context."},{"pos":[12798,12916],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> through which additional context can be supplied.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> through which additional context can be supplied."},{"pos":[13004,13082],"content":"An <xref:System.Collections.IDictionary> containing property names and values.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IDictionary&gt; containing property names and values.","pos":[0,78],"source":"An <xref:System.Collections.IDictionary> containing property names and values."}]},{"pos":[13140,13324],"content":"An &lt;xref:System.Object&gt; representing the new <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the object cannot be created.","needQuote":true,"needEscape":true,"source":"An <xref:System.Object> representing the new <xref href=\"System.Drawing.SizeF\"></xref>, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the object cannot be created."},{"pos":[13993,14165],"content":"Returns a value indicating whether changing a value on this object requires a call to the <xref:System.Drawing.SizeFConverter.CreateInstance*> method to create a new value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value indicating whether changing a value on this object requires a call to the &lt;xref:System.Drawing.SizeFConverter.CreateInstance*&gt; method to create a new value.","pos":[0,172],"source":"Returns a value indicating whether changing a value on this object requires a call to the <xref:System.Drawing.SizeFConverter.CreateInstance*> method to create a new value."}]},{"pos":[14403,14577],"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context. This may be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","pos":[0,100],"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"content":"This may be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[101,174],"source":" This may be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[14636,14712],"content":"Always returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Always returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."},{"pos":[15451,15579],"content":"Retrieves a set of properties for the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> type using the specified context and attributes.","needQuote":true,"needEscape":true,"source":"Retrieves a set of properties for the <xref href=\"System.Drawing.SizeF\"></xref> type using the specified context and attributes."},{"pos":[15591,15707],"content":"This method always returns the properties of a &lt;xref:System.Drawing.SizeF&gt; type regardless of the <ph id=\"ph1\">`value`</ph> parameter.","needQuote":true,"needEscape":true,"extradata":"MT","source":"This method always returns the properties of a <xref:System.Drawing.SizeF> type regardless of the `value` parameter."},{"pos":[16016,16134],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> through which additional context can be supplied.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> through which additional context can be supplied."},{"pos":[16196,16246],"content":"The <xref:System.Object> to return properties for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to return properties for.","pos":[0,50],"source":"The <xref:System.Object> to return properties for."}]},{"pos":[16318,16391],"content":"An array of <xref:System.Attribute> objects that describe the properties.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of &lt;xref:System.Attribute&gt; objects that describe the properties.","pos":[0,73],"source":"An array of <xref:System.Attribute> objects that describe the properties."}]},{"pos":[16486,16586],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptorCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing the properties.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> containing the properties."},{"pos":[17234,17321],"content":"Returns whether the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> type supports properties.","needQuote":true,"needEscape":true,"source":"Returns whether the <xref href=\"System.Drawing.SizeF\"></xref> type supports properties."},{"pos":[17555,17673],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> through which additional context can be supplied.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> through which additional context can be supplied."},{"pos":[17732,17808],"content":"Always returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Always returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Drawing.SizeFConverter\n  id: SizeFConverter\n  children:\n  - System.Drawing.SizeFConverter.#ctor\n  - System.Drawing.SizeFConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Drawing.SizeFConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Drawing.SizeFConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.Drawing.SizeFConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  - System.Drawing.SizeFConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.Drawing.SizeFConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.Drawing.SizeFConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.Drawing.SizeFConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  langs:\n  - csharp\n  name: SizeFConverter\n  nameWithType: SizeFConverter\n  fullName: System.Drawing.SizeFConverter\n  type: Class\n  summary: Converts <xref href=\"System.Drawing.SizeF\"></xref> objects from one type to another.\n  remarks: Most commonly, the SizeFConverter type converter is used to convert <xref:System.Drawing.Font> instances to and from their corresponding string representations. Access the <xref:System.Drawing.FontConverter> class through the <xref:System.ComponentModel.TypeDescriptor>.\n  syntax:\n    content: 'public class SizeFConverter : System.ComponentModel.TypeConverter'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  platform:\n  - net462\n- uid: System.Drawing.SizeFConverter.#ctor\n  id: '#ctor'\n  parent: System.Drawing.SizeFConverter\n  langs:\n  - csharp\n  name: SizeFConverter()\n  nameWithType: SizeFConverter.SizeFConverter()\n  fullName: System.Drawing.SizeFConverter.SizeFConverter()\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Initializes a new instance of the <xref href=\"System.Drawing.SizeFConverter\"></xref> class.\n  syntax:\n    content: public SizeFConverter ();\n    parameters: []\n  overload: System.Drawing.SizeFConverter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.SizeFConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Drawing.SizeFConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: SizeFConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.Drawing.SizeFConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Returns a value indicating whether the converter can convert from the type specified to the <xref href=\"System.Drawing.SizeF\"></xref> type, using the specified context.\n  remarks: If the specified type is a <xref:System.String>, this method will always return `true`.\n  syntax:\n    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> through which additional context can be supplied.\n    - id: sourceType\n      type: System.Type\n      description: A <xref:System.Type> the represents the type you wish to convert from.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate the conversion can be performed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Drawing.SizeFConverter.CanConvertFrom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.SizeFConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Drawing.SizeFConverter\n  langs:\n  - csharp\n  name: CanConvertTo(ITypeDescriptorContext,Type)\n  nameWithType: SizeFConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  fullName: System.Drawing.SizeFConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Returns a value indicating whether the <xref href=\"System.Drawing.SizeFConverter\"></xref> can convert a <xref href=\"System.Drawing.SizeF\"></xref> to the specified type.\n  syntax:\n    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> through which additional context can be supplied.\n    - id: destinationType\n      type: System.Type\n      description: A <xref:System.Type> that represents the type you want to convert from.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this converter can perform the conversion otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Drawing.SizeFConverter.CanConvertTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.SizeFConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Drawing.SizeFConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: SizeFConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.Drawing.SizeFConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Converts the given object to the type of this converter, using the specified context and culture information.\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: The <xref:System.Globalization.CultureInfo> to use as the current culture.\n    - id: value\n      type: System.Object\n      description: The <xref:System.Object> to convert.\n    return:\n      type: System.Object\n      description: An <xref:System.Object> that represents the converted value.\n  overload: System.Drawing.SizeFConverter.ConvertFrom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.SizeFConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Drawing.SizeFConverter\n  langs:\n  - csharp\n  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  nameWithType: SizeFConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  fullName: System.Drawing.SizeFConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Converts the given value object to the specified type, using the specified context and culture information.\n  syntax:\n    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: A <xref:System.Globalization.CultureInfo>. If null is passed, the current culture is assumed.\n    - id: value\n      type: System.Object\n      description: The <xref:System.Object> to convert.\n    - id: destinationType\n      type: System.Type\n      description: The <xref:System.Type> to convert the value parameter to.\n    return:\n      type: System.Object\n      description: An <xref:System.Object> that represents the converted value.\n  overload: System.Drawing.SizeFConverter.ConvertTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.SizeFConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  id: CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  parent: System.Drawing.SizeFConverter\n  langs:\n  - csharp\n  name: CreateInstance(ITypeDescriptorContext,IDictionary)\n  nameWithType: SizeFConverter.CreateInstance(ITypeDescriptorContext,IDictionary)\n  fullName: System.Drawing.SizeFConverter.CreateInstance(ITypeDescriptorContext,IDictionary)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Creates an instance of a <xref href=\"System.Drawing.SizeF\"></xref> with the specified property values using the specified context.\n  syntax:\n    content: public override object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> through which additional context can be supplied.\n    - id: propertyValues\n      type: System.Collections.IDictionary\n      description: An <xref:System.Collections.IDictionary> containing property names and values.\n    return:\n      type: System.Object\n      description: An <xref:System.Object> representing the new <xref href=\"System.Drawing.SizeF\"></xref>, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the object cannot be created.\n  overload: System.Drawing.SizeFConverter.CreateInstance*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.SizeFConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  id: GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Drawing.SizeFConverter\n  langs:\n  - csharp\n  name: GetCreateInstanceSupported(ITypeDescriptorContext)\n  nameWithType: SizeFConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n  fullName: System.Drawing.SizeFConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Returns a value indicating whether changing a value on this object requires a call to the <xref:System.Drawing.SizeFConverter.CreateInstance*> method to create a new value.\n  syntax:\n    content: public override bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context. This may be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    return:\n      type: System.Boolean\n      description: Always returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Drawing.SizeFConverter.GetCreateInstanceSupported*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.SizeFConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  id: GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  parent: System.Drawing.SizeFConverter\n  langs:\n  - csharp\n  name: GetProperties(ITypeDescriptorContext,Object,Attribute[])\n  nameWithType: SizeFConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])\n  fullName: System.Drawing.SizeFConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Retrieves a set of properties for the <xref href=\"System.Drawing.SizeF\"></xref> type using the specified context and attributes.\n  remarks: This method always returns the properties of a <xref:System.Drawing.SizeF> type regardless of the `value` parameter.\n  syntax:\n    content: public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> through which additional context can be supplied.\n    - id: value\n      type: System.Object\n      description: The <xref:System.Object> to return properties for.\n    - id: attributes\n      type: System.Attribute[]\n      description: An array of <xref:System.Attribute> objects that describe the properties.\n    return:\n      type: System.ComponentModel.PropertyDescriptorCollection\n      description: A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> containing the properties.\n  overload: System.Drawing.SizeFConverter.GetProperties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.SizeFConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  id: GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Drawing.SizeFConverter\n  langs:\n  - csharp\n  name: GetPropertiesSupported(ITypeDescriptorContext)\n  nameWithType: SizeFConverter.GetPropertiesSupported(ITypeDescriptorContext)\n  fullName: System.Drawing.SizeFConverter.GetPropertiesSupported(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Returns whether the <xref href=\"System.Drawing.SizeF\"></xref> type supports properties.\n  syntax:\n    content: public override bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> through which additional context can be supplied.\n    return:\n      type: System.Boolean\n      description: Always returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Drawing.SizeFConverter.GetPropertiesSupported*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: System.ComponentModel.TypeConverter\n- uid: System.Drawing.SizeFConverter.#ctor\n  parent: System.Drawing.SizeFConverter\n  isExternal: false\n  name: SizeFConverter()\n  nameWithType: SizeFConverter.SizeFConverter()\n  fullName: System.Drawing.SizeFConverter.SizeFConverter()\n- uid: System.Drawing.SizeFConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Drawing.SizeFConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: SizeFConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.Drawing.SizeFConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Drawing.SizeFConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Drawing.SizeFConverter\n  isExternal: false\n  name: CanConvertTo(ITypeDescriptorContext,Type)\n  nameWithType: SizeFConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  fullName: System.Drawing.SizeFConverter.CanConvertTo(ITypeDescriptorContext,Type)\n- uid: System.Drawing.SizeFConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Drawing.SizeFConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: SizeFConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.Drawing.SizeFConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: true\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Drawing.SizeFConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Drawing.SizeFConverter\n  isExternal: false\n  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  nameWithType: SizeFConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  fullName: System.Drawing.SizeFConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n- uid: System.Drawing.SizeFConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  parent: System.Drawing.SizeFConverter\n  isExternal: false\n  name: CreateInstance(ITypeDescriptorContext,IDictionary)\n  nameWithType: SizeFConverter.CreateInstance(ITypeDescriptorContext,IDictionary)\n  fullName: System.Drawing.SizeFConverter.CreateInstance(ITypeDescriptorContext,IDictionary)\n- uid: System.Collections.IDictionary\n  parent: System.Collections\n  isExternal: true\n  name: IDictionary\n  nameWithType: IDictionary\n  fullName: System.Collections.IDictionary\n- uid: System.Drawing.SizeFConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Drawing.SizeFConverter\n  isExternal: false\n  name: GetCreateInstanceSupported(ITypeDescriptorContext)\n  nameWithType: SizeFConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n  fullName: System.Drawing.SizeFConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n- uid: System.Drawing.SizeFConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  parent: System.Drawing.SizeFConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext,Object,Attribute[])\n  nameWithType: SizeFConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])\n  fullName: System.Drawing.SizeFConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])\n- uid: System.ComponentModel.PropertyDescriptorCollection\n  parent: System.ComponentModel\n  isExternal: false\n  name: PropertyDescriptorCollection\n  nameWithType: PropertyDescriptorCollection\n  fullName: System.ComponentModel.PropertyDescriptorCollection\n- uid: System.Attribute[]\n  parent: System\n  isExternal: true\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute[]\n  spec.csharp:\n  - uid: System.Attribute\n    name: Attribute\n    nameWithType: Attribute\n    fullName: Attribute[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Drawing.SizeFConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Drawing.SizeFConverter\n  isExternal: false\n  name: GetPropertiesSupported(ITypeDescriptorContext)\n  nameWithType: SizeFConverter.GetPropertiesSupported(ITypeDescriptorContext)\n  fullName: System.Drawing.SizeFConverter.GetPropertiesSupported(ITypeDescriptorContext)\n- uid: System.Drawing.SizeFConverter.#ctor*\n  parent: System.Drawing.SizeFConverter\n  isExternal: false\n  name: SizeFConverter\n  nameWithType: SizeFConverter.SizeFConverter\n- uid: System.Drawing.SizeFConverter.CanConvertFrom*\n  parent: System.Drawing.SizeFConverter\n  isExternal: false\n  name: CanConvertFrom\n  nameWithType: SizeFConverter.CanConvertFrom\n- uid: System.Drawing.SizeFConverter.CanConvertTo*\n  parent: System.Drawing.SizeFConverter\n  isExternal: false\n  name: CanConvertTo\n  nameWithType: SizeFConverter.CanConvertTo\n- uid: System.Drawing.SizeFConverter.ConvertFrom*\n  parent: System.Drawing.SizeFConverter\n  isExternal: false\n  name: ConvertFrom\n  nameWithType: SizeFConverter.ConvertFrom\n- uid: System.Drawing.SizeFConverter.ConvertTo*\n  parent: System.Drawing.SizeFConverter\n  isExternal: false\n  name: ConvertTo\n  nameWithType: SizeFConverter.ConvertTo\n- uid: System.Drawing.SizeFConverter.CreateInstance*\n  parent: System.Drawing.SizeFConverter\n  isExternal: false\n  name: CreateInstance\n  nameWithType: SizeFConverter.CreateInstance\n- uid: System.Drawing.SizeFConverter.GetCreateInstanceSupported*\n  parent: System.Drawing.SizeFConverter\n  isExternal: false\n  name: GetCreateInstanceSupported\n  nameWithType: SizeFConverter.GetCreateInstanceSupported\n- uid: System.Drawing.SizeFConverter.GetProperties*\n  parent: System.Drawing.SizeFConverter\n  isExternal: false\n  name: GetProperties\n  nameWithType: SizeFConverter.GetProperties\n- uid: System.Drawing.SizeFConverter.GetPropertiesSupported*\n  parent: System.Drawing.SizeFConverter\n  isExternal: false\n  name: GetPropertiesSupported\n  nameWithType: SizeFConverter.GetPropertiesSupported\n"}