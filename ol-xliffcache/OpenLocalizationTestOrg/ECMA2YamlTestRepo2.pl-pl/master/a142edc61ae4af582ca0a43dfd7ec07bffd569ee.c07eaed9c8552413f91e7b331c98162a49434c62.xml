{"nodes":[{"pos":[1249,1293],"content":"Represents a symbol reader for managed code.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a symbol reader for managed code.","pos":[0,44]}]},{"pos":[1306,1597],"content":"The interface provides access to documents, methods, and variables.      > [!NOTE] >  This interface is the managed counterpart of the `ISymUnmanagedReader` interface, one of the unmanaged symbol store interfaces that provide an alternative way to read and write debug symbol information.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The interface provides access to documents, methods, and variables.","pos":[0,67]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This interface is the managed counterpart of the <ph id=\"ph2\">`ISymUnmanagedReader`</ph> interface, one of the unmanaged symbol store interfaces that provide an alternative way to read and write debug symbol information.","pos":[73,288],"source":"      > [!NOTE] >  This interface is the managed counterpart of the `ISymUnmanagedReader` interface, one of the unmanaged symbol store interfaces that provide an alternative way to read and write debug symbol information."}]},{"pos":[2315,2375],"content":"Gets a document specified by the language, vendor, and type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a document specified by the language, vendor, and type.","pos":[0,60]}]},{"pos":[2609,2646],"content":"The URL that identifies the document.","needQuote":true,"needEscape":true,"nodes":[{"content":"The URL that identifies the document.","pos":[0,37]}]},{"pos":[2709,2816],"content":"The document language. You can specify this parameter as &lt;xref:System.Guid?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"The document language. You can specify this parameter as &lt;xref:System.Guid?displayProperty=fullName&gt;.","pos":[0,107],"nodes":[{"content":"The document language.","pos":[0,22]},{"content":"You can specify this parameter as <ph id=\"ph1\">&amp;lt;</ph>xref:System.Guid?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[23,107],"source":" You can specify this parameter as &lt;xref:System.Guid?displayProperty=fullName&gt;."}]}]},{"pos":[2885,3023],"content":"The identity of the vendor for the document language. You can specify this parameter as &lt;xref:System.Guid?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identity of the vendor for the document language. You can specify this parameter as &lt;xref:System.Guid?displayProperty=fullName&gt;.","pos":[0,138],"nodes":[{"content":"The identity of the vendor for the document language.","pos":[0,53]},{"content":"You can specify this parameter as <ph id=\"ph1\">&amp;lt;</ph>xref:System.Guid?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[54,138],"source":" You can specify this parameter as &lt;xref:System.Guid?displayProperty=fullName&gt;."}]}]},{"pos":[3090,3200],"content":"The type of the document. You can specify this parameter as &lt;xref:System.Guid?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the document. You can specify this parameter as &lt;xref:System.Guid?displayProperty=fullName&gt;.","pos":[0,110],"nodes":[{"content":"The type of the document.","pos":[0,25]},{"content":"You can specify this parameter as <ph id=\"ph1\">&amp;lt;</ph>xref:System.Guid?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[26,110],"source":" You can specify this parameter as &lt;xref:System.Guid?displayProperty=fullName&gt;."}]}]},{"pos":[3291,3314],"content":"The specified document.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified document.","pos":[0,23]}]},{"pos":[3821,3880],"content":"Gets an array of all documents defined in the symbol store.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an array of all documents defined in the symbol store.","pos":[0,59]}]},{"pos":[4088,4142],"content":"An array of all documents defined in the symbol store.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of all documents defined in the symbol store.","pos":[0,54]}]},{"pos":[4680,4720],"content":"Gets all global variables in the module.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets all global variables in the module.","pos":[0,40]}]},{"pos":[4934,4974],"content":"An array of all variables in the module.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of all variables in the module.","pos":[0,40]}]},{"pos":[5594,5667],"content":"Gets a symbol reader method object when given the identifier of a method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a symbol reader method object when given the identifier of a method.","pos":[0,73]}]},{"pos":[5913,5946],"content":"The metadata token of the method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata token of the method.","pos":[0,33]}]},{"pos":[6035,6103],"content":"The symbol reader method object for the specified method identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The symbol reader method object for the specified method identifier.","pos":[0,68]}]},{"pos":[6758,6865],"content":"Gets a symbol reader method object when given the identifier of a method and its edit and continue version.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a symbol reader method object when given the identifier of a method and its edit and continue version.","pos":[0,107]}]},{"pos":[7124,7157],"content":"The metadata token of the method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata token of the method.","pos":[0,33]}]},{"pos":[7220,7264],"content":"The edit and continue version of the method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The edit and continue version of the method.","pos":[0,44]}]},{"pos":[7353,7421],"content":"The symbol reader method object for the specified method identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The symbol reader method object for the specified method identifier.","pos":[0,68]}]},{"pos":[8240,8324],"content":"Gets a symbol reader method object that contains a specified position in a document.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a symbol reader method object that contains a specified position in a document.","pos":[0,84]}]},{"pos":[8624,8668],"content":"The document in which the method is located.","needQuote":true,"needEscape":true,"nodes":[{"content":"The document in which the method is located.","pos":[0,44]}]},{"pos":[8728,8815],"content":"The position of the line within the document. The lines are numbered, beginning with 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The position of the line within the document. The lines are numbered, beginning with 1.","pos":[0,87],"nodes":[{"content":"The position of the line within the document.","pos":[0,45]},{"content":"The lines are numbered, beginning with 1.","pos":[46,87]}]}]},{"pos":[8877,8964],"content":"The position of column within the document. The columns are numbered, beginning with 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The position of column within the document. The columns are numbered, beginning with 1.","pos":[0,87],"nodes":[{"content":"The position of column within the document.","pos":[0,43]},{"content":"The columns are numbered, beginning with 1.","pos":[44,87]}]}]},{"pos":[9053,9121],"content":"The reader method object for the specified position in the document.","needQuote":true,"needEscape":true,"nodes":[{"content":"The reader method object for the specified position in the document.","pos":[0,68]}]},{"pos":[9651,9740],"content":"Gets the namespaces that are defined in the global scope within the current symbol store.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the namespaces that are defined in the global scope within the current symbol store.","pos":[0,89]}]},{"pos":[9951,10026],"content":"The namespaces defined in the global scope within the current symbol store.","needQuote":true,"needEscape":true,"nodes":[{"content":"The namespaces defined in the global scope within the current symbol store.","pos":[0,75]}]},{"pos":[10720,10774],"content":"Gets an attribute value when given the attribute name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an attribute value when given the attribute name.","pos":[0,54]}]},{"pos":[10786,10885],"content":"This attribute is only associated with symbolic information and is not a metadata custom attribute.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This attribute is only associated with symbolic information and is not a metadata custom attribute.","pos":[0,99]}]},{"pos":[11112,11183],"content":"The metadata token for the object for which the attribute is requested.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata token for the object for which the attribute is requested.","pos":[0,71]}]},{"pos":[11244,11263],"content":"The attribute name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The attribute name.","pos":[0,19]}]},{"pos":[11321,11348],"content":"The value of the attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the attribute.","pos":[0,27]}]},{"pos":[11980,12040],"content":"Gets the variables that are not local when given the parent.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the variables that are not local when given the parent.","pos":[0,60]}]},{"pos":[12293,12363],"content":"The metadata token for the type for which the variables are requested.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata token for the type for which the variables are requested.","pos":[0,70]}]},{"pos":[12456,12493],"content":"An array of variables for the parent.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of variables for the parent.","pos":[0,37]}]},{"pos":[13007,13112],"content":"Gets the metadata token for the method that was specified as the user entry point for the module, if any.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the metadata token for the method that was specified as the user entry point for the module, if any.","pos":[0,105]}]},{"pos":[13124,13219],"content":"This is normally your main method, rather than compiler-generated stubs before the main method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This is normally your main method, rather than compiler-generated stubs before the main method.","pos":[0,95]}]},{"pos":[13403,13481],"content":"The metadata token for the method that is the user entry point for the module.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata token for the method that is the user entry point for the module.","pos":[0,78]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.SymbolStore.ISymbolReader\n  id: ISymbolReader\n  children:\n  - System.Diagnostics.SymbolStore.ISymbolReader.GetDocument(System.String,System.Guid,System.Guid,System.Guid)\n  - System.Diagnostics.SymbolStore.ISymbolReader.GetDocuments\n  - System.Diagnostics.SymbolStore.ISymbolReader.GetGlobalVariables\n  - System.Diagnostics.SymbolStore.ISymbolReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken)\n  - System.Diagnostics.SymbolStore.ISymbolReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)\n  - System.Diagnostics.SymbolStore.ISymbolReader.GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  - System.Diagnostics.SymbolStore.ISymbolReader.GetNamespaces\n  - System.Diagnostics.SymbolStore.ISymbolReader.GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)\n  - System.Diagnostics.SymbolStore.ISymbolReader.GetVariables(System.Diagnostics.SymbolStore.SymbolToken)\n  - System.Diagnostics.SymbolStore.ISymbolReader.UserEntryPoint\n  langs:\n  - csharp\n  name: ISymbolReader\n  nameWithType: ISymbolReader\n  fullName: System.Diagnostics.SymbolStore.ISymbolReader\n  type: Interface\n  summary: Represents a symbol reader for managed code.\n  remarks: \"The interface provides access to documents, methods, and variables.  \\n  \\n> [!NOTE]\\n>  This interface is the managed counterpart of the `ISymUnmanagedReader` interface, one of the unmanaged symbol store interfaces that provide an alternative way to read and write debug symbol information.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface ISymbolReader\n  implements: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetDocument(System.String,System.Guid,System.Guid,System.Guid)\n  id: GetDocument(System.String,System.Guid,System.Guid,System.Guid)\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  langs:\n  - csharp\n  name: GetDocument(String,Guid,Guid,Guid)\n  nameWithType: ISymbolReader.GetDocument(String,Guid,Guid,Guid)\n  fullName: System.Diagnostics.SymbolStore.ISymbolReader.GetDocument(String,Guid,Guid,Guid)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets a document specified by the language, vendor, and type.\n  syntax:\n    content: public System.Diagnostics.SymbolStore.ISymbolDocument GetDocument (string url, Guid language, Guid languageVendor, Guid documentType);\n    parameters:\n    - id: url\n      type: System.String\n      description: The URL that identifies the document.\n    - id: language\n      type: System.Guid\n      description: The document language. You can specify this parameter as &lt;xref:System.Guid?displayProperty=fullName&gt;.\n    - id: languageVendor\n      type: System.Guid\n      description: The identity of the vendor for the document language. You can specify this parameter as &lt;xref:System.Guid?displayProperty=fullName&gt;.\n    - id: documentType\n      type: System.Guid\n      description: The type of the document. You can specify this parameter as &lt;xref:System.Guid?displayProperty=fullName&gt;.\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolDocument\n      description: The specified document.\n  overload: System.Diagnostics.SymbolStore.ISymbolReader.GetDocument*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetDocuments\n  id: GetDocuments\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  langs:\n  - csharp\n  name: GetDocuments()\n  nameWithType: ISymbolReader.GetDocuments()\n  fullName: System.Diagnostics.SymbolStore.ISymbolReader.GetDocuments()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets an array of all documents defined in the symbol store.\n  syntax:\n    content: public System.Diagnostics.SymbolStore.ISymbolDocument[] GetDocuments ();\n    parameters: []\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolDocument[]\n      description: An array of all documents defined in the symbol store.\n  overload: System.Diagnostics.SymbolStore.ISymbolReader.GetDocuments*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetGlobalVariables\n  id: GetGlobalVariables\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  langs:\n  - csharp\n  name: GetGlobalVariables()\n  nameWithType: ISymbolReader.GetGlobalVariables()\n  fullName: System.Diagnostics.SymbolStore.ISymbolReader.GetGlobalVariables()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets all global variables in the module.\n  syntax:\n    content: public System.Diagnostics.SymbolStore.ISymbolVariable[] GetGlobalVariables ();\n    parameters: []\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolVariable[]\n      description: An array of all variables in the module.\n  overload: System.Diagnostics.SymbolStore.ISymbolReader.GetGlobalVariables*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken)\n  id: GetMethod(System.Diagnostics.SymbolStore.SymbolToken)\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  langs:\n  - csharp\n  name: GetMethod(SymbolToken)\n  nameWithType: ISymbolReader.GetMethod(SymbolToken)\n  fullName: System.Diagnostics.SymbolStore.ISymbolReader.GetMethod(SymbolToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets a symbol reader method object when given the identifier of a method.\n  syntax:\n    content: public System.Diagnostics.SymbolStore.ISymbolMethod GetMethod (System.Diagnostics.SymbolStore.SymbolToken method);\n    parameters:\n    - id: method\n      type: System.Diagnostics.SymbolStore.SymbolToken\n      description: The metadata token of the method.\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolMethod\n      description: The symbol reader method object for the specified method identifier.\n  overload: System.Diagnostics.SymbolStore.ISymbolReader.GetMethod*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)\n  id: GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  langs:\n  - csharp\n  name: GetMethod(SymbolToken,Int32)\n  nameWithType: ISymbolReader.GetMethod(SymbolToken,Int32)\n  fullName: System.Diagnostics.SymbolStore.ISymbolReader.GetMethod(SymbolToken,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets a symbol reader method object when given the identifier of a method and its edit and continue version.\n  syntax:\n    content: public System.Diagnostics.SymbolStore.ISymbolMethod GetMethod (System.Diagnostics.SymbolStore.SymbolToken method, int version);\n    parameters:\n    - id: method\n      type: System.Diagnostics.SymbolStore.SymbolToken\n      description: The metadata token of the method.\n    - id: version\n      type: System.Int32\n      description: The edit and continue version of the method.\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolMethod\n      description: The symbol reader method object for the specified method identifier.\n  overload: System.Diagnostics.SymbolStore.ISymbolReader.GetMethod*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  id: GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  langs:\n  - csharp\n  name: GetMethodFromDocumentPosition(ISymbolDocument,Int32,Int32)\n  nameWithType: ISymbolReader.GetMethodFromDocumentPosition(ISymbolDocument,Int32,Int32)\n  fullName: System.Diagnostics.SymbolStore.ISymbolReader.GetMethodFromDocumentPosition(ISymbolDocument,Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets a symbol reader method object that contains a specified position in a document.\n  syntax:\n    content: public System.Diagnostics.SymbolStore.ISymbolMethod GetMethodFromDocumentPosition (System.Diagnostics.SymbolStore.ISymbolDocument document, int line, int column);\n    parameters:\n    - id: document\n      type: System.Diagnostics.SymbolStore.ISymbolDocument\n      description: The document in which the method is located.\n    - id: line\n      type: System.Int32\n      description: The position of the line within the document. The lines are numbered, beginning with 1.\n    - id: column\n      type: System.Int32\n      description: The position of column within the document. The columns are numbered, beginning with 1.\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolMethod\n      description: The reader method object for the specified position in the document.\n  overload: System.Diagnostics.SymbolStore.ISymbolReader.GetMethodFromDocumentPosition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetNamespaces\n  id: GetNamespaces\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  langs:\n  - csharp\n  name: GetNamespaces()\n  nameWithType: ISymbolReader.GetNamespaces()\n  fullName: System.Diagnostics.SymbolStore.ISymbolReader.GetNamespaces()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the namespaces that are defined in the global scope within the current symbol store.\n  syntax:\n    content: public System.Diagnostics.SymbolStore.ISymbolNamespace[] GetNamespaces ();\n    parameters: []\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolNamespace[]\n      description: The namespaces defined in the global scope within the current symbol store.\n  overload: System.Diagnostics.SymbolStore.ISymbolReader.GetNamespaces*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)\n  id: GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  langs:\n  - csharp\n  name: GetSymAttribute(SymbolToken,String)\n  nameWithType: ISymbolReader.GetSymAttribute(SymbolToken,String)\n  fullName: System.Diagnostics.SymbolStore.ISymbolReader.GetSymAttribute(SymbolToken,String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets an attribute value when given the attribute name.\n  remarks: This attribute is only associated with symbolic information and is not a metadata custom attribute.\n  syntax:\n    content: public byte[] GetSymAttribute (System.Diagnostics.SymbolStore.SymbolToken parent, string name);\n    parameters:\n    - id: parent\n      type: System.Diagnostics.SymbolStore.SymbolToken\n      description: The metadata token for the object for which the attribute is requested.\n    - id: name\n      type: System.String\n      description: The attribute name.\n    return:\n      type: System.Byte[]\n      description: The value of the attribute.\n  overload: System.Diagnostics.SymbolStore.ISymbolReader.GetSymAttribute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetVariables(System.Diagnostics.SymbolStore.SymbolToken)\n  id: GetVariables(System.Diagnostics.SymbolStore.SymbolToken)\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  langs:\n  - csharp\n  name: GetVariables(SymbolToken)\n  nameWithType: ISymbolReader.GetVariables(SymbolToken)\n  fullName: System.Diagnostics.SymbolStore.ISymbolReader.GetVariables(SymbolToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the variables that are not local when given the parent.\n  syntax:\n    content: public System.Diagnostics.SymbolStore.ISymbolVariable[] GetVariables (System.Diagnostics.SymbolStore.SymbolToken parent);\n    parameters:\n    - id: parent\n      type: System.Diagnostics.SymbolStore.SymbolToken\n      description: The metadata token for the type for which the variables are requested.\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolVariable[]\n      description: An array of variables for the parent.\n  overload: System.Diagnostics.SymbolStore.ISymbolReader.GetVariables*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.UserEntryPoint\n  id: UserEntryPoint\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  langs:\n  - csharp\n  name: UserEntryPoint\n  nameWithType: ISymbolReader.UserEntryPoint\n  fullName: System.Diagnostics.SymbolStore.ISymbolReader.UserEntryPoint\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the metadata token for the method that was specified as the user entry point for the module, if any.\n  remarks: This is normally your main method, rather than compiler-generated stubs before the main method.\n  syntax:\n    content: public System.Diagnostics.SymbolStore.SymbolToken UserEntryPoint { get; }\n    return:\n      type: System.Diagnostics.SymbolStore.SymbolToken\n      description: The metadata token for the method that is the user entry point for the module.\n  overload: System.Diagnostics.SymbolStore.ISymbolReader.UserEntryPoint*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetDocument(System.String,System.Guid,System.Guid,System.Guid)\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  isExternal: false\n  name: GetDocument(String,Guid,Guid,Guid)\n  nameWithType: ISymbolReader.GetDocument(String,Guid,Guid,Guid)\n  fullName: System.Diagnostics.SymbolStore.ISymbolReader.GetDocument(String,Guid,Guid,Guid)\n- uid: System.Diagnostics.SymbolStore.ISymbolDocument\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolDocument\n  nameWithType: ISymbolDocument\n  fullName: System.Diagnostics.SymbolStore.ISymbolDocument\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Guid\n  parent: System\n  isExternal: true\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetDocuments\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  isExternal: false\n  name: GetDocuments()\n  nameWithType: ISymbolReader.GetDocuments()\n  fullName: System.Diagnostics.SymbolStore.ISymbolReader.GetDocuments()\n- uid: System.Diagnostics.SymbolStore.ISymbolDocument[]\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolDocument\n  nameWithType: ISymbolDocument\n  fullName: System.Diagnostics.SymbolStore.ISymbolDocument[]\n  spec.csharp:\n  - uid: System.Diagnostics.SymbolStore.ISymbolDocument\n    name: ISymbolDocument\n    nameWithType: ISymbolDocument\n    fullName: ISymbolDocument[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetGlobalVariables\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  isExternal: false\n  name: GetGlobalVariables()\n  nameWithType: ISymbolReader.GetGlobalVariables()\n  fullName: System.Diagnostics.SymbolStore.ISymbolReader.GetGlobalVariables()\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable[]\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolVariable\n  nameWithType: ISymbolVariable\n  fullName: System.Diagnostics.SymbolStore.ISymbolVariable[]\n  spec.csharp:\n  - uid: System.Diagnostics.SymbolStore.ISymbolVariable\n    name: ISymbolVariable\n    nameWithType: ISymbolVariable\n    fullName: ISymbolVariable[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken)\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  isExternal: false\n  name: GetMethod(SymbolToken)\n  nameWithType: ISymbolReader.GetMethod(SymbolToken)\n  fullName: System.Diagnostics.SymbolStore.ISymbolReader.GetMethod(SymbolToken)\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolMethod\n  nameWithType: ISymbolMethod\n  fullName: System.Diagnostics.SymbolStore.ISymbolMethod\n- uid: System.Diagnostics.SymbolStore.SymbolToken\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: SymbolToken\n  nameWithType: SymbolToken\n  fullName: System.Diagnostics.SymbolStore.SymbolToken\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  isExternal: false\n  name: GetMethod(SymbolToken,Int32)\n  nameWithType: ISymbolReader.GetMethod(SymbolToken,Int32)\n  fullName: System.Diagnostics.SymbolStore.ISymbolReader.GetMethod(SymbolToken,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  isExternal: false\n  name: GetMethodFromDocumentPosition(ISymbolDocument,Int32,Int32)\n  nameWithType: ISymbolReader.GetMethodFromDocumentPosition(ISymbolDocument,Int32,Int32)\n  fullName: System.Diagnostics.SymbolStore.ISymbolReader.GetMethodFromDocumentPosition(ISymbolDocument,Int32,Int32)\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetNamespaces\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  isExternal: false\n  name: GetNamespaces()\n  nameWithType: ISymbolReader.GetNamespaces()\n  fullName: System.Diagnostics.SymbolStore.ISymbolReader.GetNamespaces()\n- uid: System.Diagnostics.SymbolStore.ISymbolNamespace[]\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolNamespace\n  nameWithType: ISymbolNamespace\n  fullName: System.Diagnostics.SymbolStore.ISymbolNamespace[]\n  spec.csharp:\n  - uid: System.Diagnostics.SymbolStore.ISymbolNamespace\n    name: ISymbolNamespace\n    nameWithType: ISymbolNamespace\n    fullName: ISymbolNamespace[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  isExternal: false\n  name: GetSymAttribute(SymbolToken,String)\n  nameWithType: ISymbolReader.GetSymAttribute(SymbolToken,String)\n  fullName: System.Diagnostics.SymbolStore.ISymbolReader.GetSymAttribute(SymbolToken,String)\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetVariables(System.Diagnostics.SymbolStore.SymbolToken)\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  isExternal: false\n  name: GetVariables(SymbolToken)\n  nameWithType: ISymbolReader.GetVariables(SymbolToken)\n  fullName: System.Diagnostics.SymbolStore.ISymbolReader.GetVariables(SymbolToken)\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.UserEntryPoint\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  isExternal: false\n  name: UserEntryPoint\n  nameWithType: ISymbolReader.UserEntryPoint\n  fullName: System.Diagnostics.SymbolStore.ISymbolReader.UserEntryPoint\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetDocument*\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  isExternal: false\n  name: GetDocument\n  nameWithType: ISymbolReader.GetDocument\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetDocuments*\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  isExternal: false\n  name: GetDocuments\n  nameWithType: ISymbolReader.GetDocuments\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetGlobalVariables*\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  isExternal: false\n  name: GetGlobalVariables\n  nameWithType: ISymbolReader.GetGlobalVariables\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetMethod*\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  isExternal: false\n  name: GetMethod\n  nameWithType: ISymbolReader.GetMethod\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetMethodFromDocumentPosition*\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  isExternal: false\n  name: GetMethodFromDocumentPosition\n  nameWithType: ISymbolReader.GetMethodFromDocumentPosition\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetNamespaces*\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  isExternal: false\n  name: GetNamespaces\n  nameWithType: ISymbolReader.GetNamespaces\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetSymAttribute*\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  isExternal: false\n  name: GetSymAttribute\n  nameWithType: ISymbolReader.GetSymAttribute\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.GetVariables*\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  isExternal: false\n  name: GetVariables\n  nameWithType: ISymbolReader.GetVariables\n- uid: System.Diagnostics.SymbolStore.ISymbolReader.UserEntryPoint*\n  parent: System.Diagnostics.SymbolStore.ISymbolReader\n  isExternal: false\n  name: UserEntryPoint\n  nameWithType: ISymbolReader.UserEntryPoint\n"}