{"nodes":[{"pos":[450,655],"content":"An instance of this class is returned by the &lt;xref:System.Workflow.Activities.Rules.IRuleExpression.Validate*&gt; method of an <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.Rules.IRuleExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> expression.","needQuote":true,"needEscape":true,"source":"An instance of this class is returned by the <xref:System.Workflow.Activities.Rules.IRuleExpression.Validate*> method of an <xref href=\"System.Workflow.Activities.Rules.IRuleExpression\"></xref> expression."},{"pos":[668,1181],"content":"The <xref:System.Workflow.Activities.Rules.RuleExpressionInfo.ExpressionType%2A> property on RuleExpressionInfo provides the return type of the expression. For example, a binary expression, when evaluated, has a return type of Boolean; or, an expression that accesses a property might return an integer type.       The information in the RuleExpressionInfo can be used to validate the use of the expression. For example, a greater-than test cannot be used to compare two expressions if either returns a Boolean.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.Workflow.Activities.Rules.RuleExpressionInfo.ExpressionType%2A> property on RuleExpressionInfo provides the return type of the expression. For example, a binary expression, when evaluated, has a return type of Boolean; or, an expression that accesses a property might return an integer type.       The information in the RuleExpressionInfo can be used to validate the use of the expression. For example, a greater-than test cannot be used to compare two expressions if either returns a Boolean.","pos":[0,511],"nodes":[{"content":"The &lt;xref:System.Workflow.Activities.Rules.RuleExpressionInfo.ExpressionType%2A&gt; property on RuleExpressionInfo provides the return type of the expression.","pos":[0,155],"source":"The <xref:System.Workflow.Activities.Rules.RuleExpressionInfo.ExpressionType%2A> property on RuleExpressionInfo provides the return type of the expression."},{"content":"For example, a binary expression, when evaluated, has a return type of Boolean; or, an expression that accesses a property might return an integer type.","pos":[156,308]},{"content":"The information in the RuleExpressionInfo can be used to validate the use of the expression.","pos":[315,407]},{"content":"For example, a greater-than test cannot be used to compare two expressions if either returns a Boolean.","pos":[408,511]}]}]},{"pos":[1825,1938],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleExpressionInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.Rules.RuleExpressionInfo\"></xref> class."},{"pos":[2095,2136],"content":"The <xref:System.Type> of the expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the expression.","pos":[0,41],"source":"The <xref:System.Type> of the expression."}]},{"pos":[2696,2728],"content":"Gets the type of the expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the type of the expression.","pos":[0,32]}]},{"pos":[2843,2884],"content":"The <xref:System.Type> of the expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the expression.","pos":[0,41],"source":"The <xref:System.Type> of the expression."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.Activities.Rules.RuleExpressionInfo\n  id: RuleExpressionInfo\n  children:\n  - System.Workflow.Activities.Rules.RuleExpressionInfo.#ctor(System.Type)\n  - System.Workflow.Activities.Rules.RuleExpressionInfo.ExpressionType\n  langs:\n  - csharp\n  name: RuleExpressionInfo\n  nameWithType: RuleExpressionInfo\n  fullName: System.Workflow.Activities.Rules.RuleExpressionInfo\n  type: Class\n  summary: An instance of this class is returned by the <xref:System.Workflow.Activities.Rules.IRuleExpression.Validate*> method of an <xref href=\"System.Workflow.Activities.Rules.IRuleExpression\"></xref> expression.\n  remarks: \"The <xref:System.Workflow.Activities.Rules.RuleExpressionInfo.ExpressionType%2A> property on RuleExpressionInfo provides the return type of the expression. For example, a binary expression, when evaluated, has a return type of Boolean; or, an expression that accesses a property might return an integer type.  \\n  \\n The information in the RuleExpressionInfo can be used to validate the use of the expression. For example, a greater-than test cannot be used to compare two expressions if either returns a Boolean.\"\n  syntax:\n    content: public class RuleExpressionInfo\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.Rules.RuleExpressionInfo.#ctor(System.Type)\n  id: '#ctor(System.Type)'\n  parent: System.Workflow.Activities.Rules.RuleExpressionInfo\n  langs:\n  - csharp\n  name: RuleExpressionInfo(Type)\n  nameWithType: RuleExpressionInfo.RuleExpressionInfo(Type)\n  fullName: System.Workflow.Activities.Rules.RuleExpressionInfo.RuleExpressionInfo(Type)\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.Rules.RuleExpressionInfo\"></xref> class.\n  syntax:\n    content: public RuleExpressionInfo (Type expressionType);\n    parameters:\n    - id: expressionType\n      type: System.Type\n      description: The <xref:System.Type> of the expression.\n  overload: System.Workflow.Activities.Rules.RuleExpressionInfo.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.Rules.RuleExpressionInfo.ExpressionType\n  id: ExpressionType\n  parent: System.Workflow.Activities.Rules.RuleExpressionInfo\n  langs:\n  - csharp\n  name: ExpressionType\n  nameWithType: RuleExpressionInfo.ExpressionType\n  fullName: System.Workflow.Activities.Rules.RuleExpressionInfo.ExpressionType\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: Gets the type of the expression.\n  syntax:\n    content: public Type ExpressionType { get; }\n    return:\n      type: System.Type\n      description: The <xref:System.Type> of the expression.\n  overload: System.Workflow.Activities.Rules.RuleExpressionInfo.ExpressionType*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Workflow.Activities.Rules.RuleExpressionInfo.#ctor(System.Type)\n  parent: System.Workflow.Activities.Rules.RuleExpressionInfo\n  isExternal: false\n  name: RuleExpressionInfo(Type)\n  nameWithType: RuleExpressionInfo.RuleExpressionInfo(Type)\n  fullName: System.Workflow.Activities.Rules.RuleExpressionInfo.RuleExpressionInfo(Type)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Workflow.Activities.Rules.RuleExpressionInfo.ExpressionType\n  parent: System.Workflow.Activities.Rules.RuleExpressionInfo\n  isExternal: false\n  name: ExpressionType\n  nameWithType: RuleExpressionInfo.ExpressionType\n  fullName: System.Workflow.Activities.Rules.RuleExpressionInfo.ExpressionType\n- uid: System.Workflow.Activities.Rules.RuleExpressionInfo.#ctor*\n  parent: System.Workflow.Activities.Rules.RuleExpressionInfo\n  isExternal: false\n  name: RuleExpressionInfo\n  nameWithType: RuleExpressionInfo.RuleExpressionInfo\n- uid: System.Workflow.Activities.Rules.RuleExpressionInfo.ExpressionType*\n  parent: System.Workflow.Activities.Rules.RuleExpressionInfo\n  isExternal: false\n  name: ExpressionType\n  nameWithType: RuleExpressionInfo.ExpressionType\n"}