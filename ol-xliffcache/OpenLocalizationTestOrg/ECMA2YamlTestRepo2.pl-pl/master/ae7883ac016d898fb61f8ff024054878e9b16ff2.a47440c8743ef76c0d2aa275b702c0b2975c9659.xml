{"nodes":[{"pos":[2400,2570],"content":"The DataTableReader obtains the contents of one or more <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects in the form of one or more read-only, forward-only result sets.","needQuote":true,"needEscape":true,"source":"The DataTableReader obtains the contents of one or more <xref href=\"System.Data.DataTable\"></xref> objects in the form of one or more read-only, forward-only result sets."},{"pos":[2583,4454],"content":"The DataTableReader works much like any other data reader, such as the <xref:System.Data.SqlClient.SqlDataReader>, except that the DataTableReader provides for iterating over rows in a <xref:System.Data.DataTable>. In other words, it provides for iterating over rows in a cache. The cached data can be modified while the DataTableReader is active, and the reader automatically maintains its position.       When you create a DataTableReader from a <xref:System.Data.DataTable>, the resulting DataTableReader object contains one result set with the same data as the <xref:System.Data.DataTable> from which it was created, except for any rows that have been marked as deleted. The columns appear in the same order as in the original <xref:System.Data.DataTable>. The structure of the returned result is identical in schema and data to the original <xref:System.Data.DataTable>. A DataTableReader that was created by calling the <xref:System.Data.DataSet.GetDataReader%2A> method of a <xref:System.Data.DataSet> object contains multiple result sets if the <xref:System.Data.DataSet>contains more than one table. The results are in the same sequence as the <xref:System.Data.DataTable>objects in the <xref:System.Data.DataTableCollection> of the <xref:System.Data.DataSet> object.       The returned result set contains only the current version of each <xref:System.Data.DataRow>; rows that are marked for deletion are skipped.       The `DataTableReader` provides a stable iterator; that is, the contents of the `DataTableReader` are not invalidated if the size of the underlying collection is modified during iteration. For example, if one or more rows in the <xref:System.Data.DataTable.Rows%2A> collection are deleted or removed during iteration, the current position within the `DataTableReader` is maintained appropriately and it does not invalidate the iterator.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The DataTableReader works much like any other data reader, such as the &lt;xref:System.Data.SqlClient.SqlDataReader&gt;, except that the DataTableReader provides for iterating over rows in a &lt;xref:System.Data.DataTable&gt;.","pos":[0,214],"source":"The DataTableReader works much like any other data reader, such as the <xref:System.Data.SqlClient.SqlDataReader>, except that the DataTableReader provides for iterating over rows in a <xref:System.Data.DataTable>."},{"content":"In other words, it provides for iterating over rows in a cache.","pos":[215,278]},{"content":"The cached data can be modified while the DataTableReader is active, and the reader automatically maintains its position.","pos":[279,400]},{"content":"When you create a DataTableReader from a &lt;xref:System.Data.DataTable&gt;, the resulting DataTableReader object contains one result set with the same data as the &lt;xref:System.Data.DataTable&gt; from which it was created, except for any rows that have been marked as deleted.","pos":[407,674],"source":"       When you create a DataTableReader from a <xref:System.Data.DataTable>, the resulting DataTableReader object contains one result set with the same data as the <xref:System.Data.DataTable> from which it was created, except for any rows that have been marked as deleted."},{"content":"The columns appear in the same order as in the original &lt;xref:System.Data.DataTable&gt;.","pos":[675,760],"source":" The columns appear in the same order as in the original <xref:System.Data.DataTable>."},{"content":"The structure of the returned result is identical in schema and data to the original &lt;xref:System.Data.DataTable&gt;.","pos":[761,875],"source":" The structure of the returned result is identical in schema and data to the original <xref:System.Data.DataTable>."},{"content":"A DataTableReader that was created by calling the &lt;xref:System.Data.DataSet.GetDataReader%2A&gt; method of a &lt;xref:System.Data.DataSet&gt; object contains multiple result sets if the &lt;xref:System.Data.DataSet&gt;contains more than one table.","pos":[876,1108],"source":" A DataTableReader that was created by calling the <xref:System.Data.DataSet.GetDataReader%2A> method of a <xref:System.Data.DataSet> object contains multiple result sets if the <xref:System.Data.DataSet>contains more than one table."},{"content":"The results are in the same sequence as the &lt;xref:System.Data.DataTable&gt;objects in the &lt;xref:System.Data.DataTableCollection&gt; of the &lt;xref:System.Data.DataSet&gt; object.","pos":[1109,1276],"source":" The results are in the same sequence as the <xref:System.Data.DataTable>objects in the <xref:System.Data.DataTableCollection> of the <xref:System.Data.DataSet> object."},{"content":"The returned result set contains only the current version of each &lt;xref:System.Data.DataRow&gt;; rows that are marked for deletion are skipped.","pos":[1283,1423],"source":"       The returned result set contains only the current version of each <xref:System.Data.DataRow>; rows that are marked for deletion are skipped."},{"content":"The <ph id=\"ph1\">`DataTableReader`</ph> provides a stable iterator; that is, the contents of the <ph id=\"ph2\">`DataTableReader`</ph> are not invalidated if the size of the underlying collection is modified during iteration.","pos":[1430,1617],"source":"       The `DataTableReader` provides a stable iterator; that is, the contents of the `DataTableReader` are not invalidated if the size of the underlying collection is modified during iteration."},{"content":"For example, if one or more rows in the &lt;xref:System.Data.DataTable.Rows%2A&gt; collection are deleted or removed during iteration, the current position within the <ph id=\"ph1\">`DataTableReader`</ph> is maintained appropriately and it does not invalidate the iterator.","pos":[1618,1865],"source":" For example, if one or more rows in the <xref:System.Data.DataTable.Rows%2A> collection are deleted or removed during iteration, the current position within the `DataTableReader` is maintained appropriately and it does not invalidate the iterator."}]},{"pos":[6508,6672],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by using data from the supplied <bpt id=\"p2\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.DataTableReader\"></xref> class by using data from the supplied <xref href=\"System.Data.DataTable\"></xref>."},{"pos":[6843,6981],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from which the new <bpt id=\"p2\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> obtains its result set.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Data.DataTable\"></xref> from which the new <xref href=\"System.Data.DataTableReader\"></xref> obtains its result set."},{"pos":[7485,7653],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the supplied array of <bpt id=\"p2\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.DataTableReader\"></xref> class using the supplied array of <xref href=\"System.Data.DataTable\"></xref> objects."},{"pos":[7665,8244],"content":"If you must create a <xref:System.Data.DataTableReader> based on all or a subset of the tables within a specific <xref:System.Data.Dataset>, call the `DataSet`'s <xref:System.Data.DataSet.GetDataReader%2A> method. If you want to create a new <xref:System.Data.DataTableReader> instance based on a group of `DataTable` instances that are not otherwise related, use this constructor. You can also take advantage of this constructor to rearrange the ordering of the `DataTables` within the `DataTableReader`, if their ordering within their source `DataSet` does not meet your needs.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If you must create a &lt;xref:System.Data.DataTableReader&gt; based on all or a subset of the tables within a specific &lt;xref:System.Data.Dataset&gt;, call the <ph id=\"ph1\">`DataSet`</ph>'s &lt;xref:System.Data.DataSet.GetDataReader%2A&gt; method.","pos":[0,213],"source":"If you must create a <xref:System.Data.DataTableReader> based on all or a subset of the tables within a specific <xref:System.Data.Dataset>, call the `DataSet`'s <xref:System.Data.DataSet.GetDataReader%2A> method."},{"content":"If you want to create a new &lt;xref:System.Data.DataTableReader&gt; instance based on a group of <ph id=\"ph1\">`DataTable`</ph> instances that are not otherwise related, use this constructor.","pos":[214,381],"source":" If you want to create a new <xref:System.Data.DataTableReader> instance based on a group of `DataTable` instances that are not otherwise related, use this constructor."},{"content":"You can also take advantage of this constructor to rearrange the ordering of the <ph id=\"ph1\">`DataTables`</ph> within the <ph id=\"ph2\">`DataTableReader`</ph>, if their ordering within their source <ph id=\"ph3\">`DataSet`</ph> does not meet your needs.","pos":[382,579],"source":" You can also take advantage of this constructor to rearrange the ordering of the `DataTables` within the `DataTableReader`, if their ordering within their source `DataSet` does not meet your needs."}]},{"pos":[9365,9523],"content":"The array of <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects that supplies the results for the new <bpt id=\"p2\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The array of <xref href=\"System.Data.DataTable\"></xref> objects that supplies the results for the new <xref href=\"System.Data.DataTableReader\"></xref> object."},{"pos":[9907,9975],"content":"Closes the current <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Closes the current <xref href=\"System.Data.DataTableReader\"></xref>."},{"pos":[9987,10066],"content":"Calling <ph id=\"ph1\">`Close()`</ph> on a closed <ph id=\"ph2\">`DataTableReader`</ph> object does not raise an error.","needQuote":true,"needEscape":true,"extradata":"MT","source":"Calling `Close()` on a closed `DataTableReader` object does not raise an error."},{"pos":[10519,10616],"content":"The depth of nesting for the current row of the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The depth of nesting for the current row of the <xref href=\"System.Data.DataTableReader\"></xref>."},{"pos":[10629,10714],"content":"`DataTableReader` does not support nesting. The `Depth` property always returns zero.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">`DataTableReader`</ph> does not support nesting.","pos":[0,43],"source":"`DataTableReader` does not support nesting."},{"content":"The <ph id=\"ph1\">`Depth`</ph> property always returns zero.","pos":[44,85],"source":" The `Depth` property always returns zero."}]},{"pos":[10830,10884],"content":"The depth of nesting for the current row; always zero.","needQuote":true,"needEscape":true,"nodes":[{"content":"The depth of nesting for the current row; always zero.","pos":[0,54]}]},{"pos":[11289,11338],"content":"Returns the number of columns in the current row.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the number of columns in the current row.","pos":[0,49]}]},{"pos":[11458,11555],"content":"When not positioned in a valid result set, 0; otherwise the number of columns in the current row.","needQuote":true,"needEscape":true,"nodes":[{"content":"When not positioned in a valid result set, 0; otherwise the number of columns in the current row.","pos":[0,97]}]},{"pos":[11732,11841],"content":"An attempt was made to retrieve the field count in a closed <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An attempt was made to retrieve the field count in a closed <xref href=\"System.Data.DataTableReader\"></xref>."},{"pos":[12229,12295],"content":"Gets the value of the specified column as a <xref:System.Boolean>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the specified column as a &lt;xref:System.Boolean&gt;.","pos":[0,66],"source":"Gets the value of the specified column as a <xref:System.Boolean>."}]},{"pos":[12308,12576],"content":"No conversions are performed; therefore the data retrieved must either already be a Boolean or coercible to a Boolean, or an exception is generated.       Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"No conversions are performed; therefore the data retrieved must either already be a Boolean or coercible to a Boolean, or an exception is generated.       Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.","pos":[0,266],"nodes":[{"content":"No conversions are performed; therefore the data retrieved must either already be a Boolean or coercible to a Boolean, or an exception is generated.","pos":[0,148]},{"content":"Call &lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt; to see if there are null values before calling this method.","pos":[155,266],"source":"       Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method."}]}]},{"pos":[13303,13333],"content":"The zero-based column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]},{"pos":[13392,13426],"content":"The value of the specified column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the specified column.","pos":[0,34]}]},{"pos":[13607,13705],"content":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index passed was outside the range of 0 to &lt;xref:System.Data.DataTableReader.FieldCount*&gt; - 1.","pos":[0,98],"source":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1."}]},{"pos":[13838,13894],"content":"An attempt was made to retrieve data from a deleted row.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt was made to retrieve data from a deleted row.","pos":[0,56]}]},{"pos":[14005,14113],"content":"An attempt was made to read or access a column in a closed <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An attempt was made to read or access a column in a closed <xref href=\"System.Data.DataTableReader\"></xref>."},{"pos":[14214,14321],"content":"The specified column does not contain a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The specified column does not contain a <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref>."},{"pos":[14694,14743],"content":"Gets the value of the specified column as a byte.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the specified column as a byte.","pos":[0,49]}]},{"pos":[14756,14981],"content":"No conversions are performed; therefore the data retrieved must already be a byte or coercible to a byte.       Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"No conversions are performed; therefore the data retrieved must already be a byte or coercible to a byte.       Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.","pos":[0,223],"nodes":[{"content":"No conversions are performed; therefore the data retrieved must already be a byte or coercible to a byte.","pos":[0,105]},{"content":"Call &lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt; to see if there are null values before calling this method.","pos":[112,223],"source":"       Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method."}]}]},{"pos":[15702,15732],"content":"The zero-based column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]},{"pos":[15788,15822],"content":"The value of the specified column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the specified column.","pos":[0,34]}]},{"pos":[16000,16098],"content":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index passed was outside the range of 0 to &lt;xref:System.Data.DataTableReader.FieldCount*&gt; - 1.","pos":[0,98],"source":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1."}]},{"pos":[16231,16287],"content":"An attempt was made to retrieve data from a deleted row.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt was made to retrieve data from a deleted row.","pos":[0,56]}]},{"pos":[16398,16540],"content":"An attempt was made to read or access a column in a closed <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DataTableReader\" name=\"DataTableReader\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An attempt was made to read or access a column in a closed <xref uid=\"langword_csharp_DataTableReader\" name=\"DataTableReader\" href=\"\"></xref>."},{"pos":[16641,16686],"content":"The specified column does not contain a byte.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified column does not contain a byte.","pos":[0,45]}]},{"pos":[17245,17377],"content":"Reads a stream of bytes starting at the specified column offset into the buffer as an array starting at the specified buffer offset.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reads a stream of bytes starting at the specified column offset into the buffer as an array starting at the specified buffer offset.","pos":[0,132]}]},{"pos":[17390,18098],"content":"`GetBytes` returns the number of available bytes in the field. Most of the time this is the exact length of the field. However, the number returned may be less than the true length of the field if `GetBytes` has already been used to obtain bytes from the field. This may be the case, for example, when the <xref:System.Data.DataTableReader> is reading a large data structure into a buffer       If you pass a buffer that is `null` (`Nothing` in Visual Basic), `GetBytes` returns the length of the entire field in bytes, not the remaining size based on the buffer offset parameter.       No conversions are performed; therefore the data retrieved must already be a byte array or coercible to a byte array.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">`GetBytes`</ph> returns the number of available bytes in the field.","pos":[0,62],"source":"`GetBytes` returns the number of available bytes in the field."},{"content":"Most of the time this is the exact length of the field.","pos":[63,118]},{"content":"However, the number returned may be less than the true length of the field if <ph id=\"ph1\">`GetBytes`</ph> has already been used to obtain bytes from the field.","pos":[119,261],"source":" However, the number returned may be less than the true length of the field if `GetBytes` has already been used to obtain bytes from the field."},{"content":"This may be the case, for example, when the &lt;xref:System.Data.DataTableReader&gt; is reading a large data structure into a buffer       If you pass a buffer that is <ph id=\"ph1\">`null`</ph> (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic), <ph id=\"ph3\">`GetBytes`</ph> returns the length of the entire field in bytes, not the remaining size based on the buffer offset parameter.","pos":[262,580],"source":" This may be the case, for example, when the <xref:System.Data.DataTableReader> is reading a large data structure into a buffer       If you pass a buffer that is `null` (`Nothing` in Visual Basic), `GetBytes` returns the length of the entire field in bytes, not the remaining size based on the buffer offset parameter."},{"content":"No conversions are performed; therefore the data retrieved must already be a byte array or coercible to a byte array.","pos":[587,704]}]},{"pos":[18905,18935],"content":"The zero-based column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]},{"pos":[19000,19066],"content":"The index within the field from which to start the read operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index within the field from which to start the read operation.","pos":[0,66]}]},{"pos":[19129,19179],"content":"The buffer into which to read the stream of bytes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The buffer into which to read the stream of bytes.","pos":[0,50]}]},{"pos":[19246,19309],"content":"The index within the buffer at which to start placing the data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index within the buffer at which to start placing the data.","pos":[0,63]}]},{"pos":[19371,19414],"content":"The maximum length to copy into the buffer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum length to copy into the buffer.","pos":[0,43]}]},{"pos":[19471,19503],"content":"The actual number of bytes read.","needQuote":true,"needEscape":true,"nodes":[{"content":"The actual number of bytes read.","pos":[0,32]}]},{"pos":[19682,19780],"content":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index passed was outside the range of 0 to &lt;xref:System.Data.DataTableReader.FieldCount*&gt; - 1.","pos":[0,98],"source":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1."}]},{"pos":[19913,19969],"content":"An attempt was made to retrieve data from a deleted row.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt was made to retrieve data from a deleted row.","pos":[0,56]}]},{"pos":[20080,20222],"content":"An attempt was made to read or access a column in a closed <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DataTableReader\" name=\"DataTableReader\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An attempt was made to read or access a column in a closed <xref uid=\"langword_csharp_DataTableReader\" name=\"DataTableReader\" href=\"\"></xref>."},{"pos":[20323,20374],"content":"The specified column does not contain a byte array.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified column does not contain a byte array.","pos":[0,51]}]},{"pos":[20747,20801],"content":"Gets the value of the specified column as a character.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the specified column as a character.","pos":[0,54]}]},{"pos":[20814,21049],"content":"No conversions are performed; therefore the data retrieved must already be a character or coercible to a character.       Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"No conversions are performed; therefore the data retrieved must already be a character or coercible to a character.       Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.","pos":[0,233],"nodes":[{"content":"No conversions are performed; therefore the data retrieved must already be a character or coercible to a character.","pos":[0,115]},{"content":"Call &lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt; to see if there are null values before calling this method.","pos":[122,233],"source":"       Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method."}]}]},{"pos":[21753,21783],"content":"The zero-based column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]},{"pos":[21839,21863],"content":"The value of the column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the column.","pos":[0,24]}]},{"pos":[22041,22139],"content":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index passed was outside the range of 0 to &lt;xref:System.Data.DataTableReader.FieldCount*&gt; - 1.","pos":[0,98],"source":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1."}]},{"pos":[22272,22328],"content":"An attempt was made to retrieve data from a deleted row.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt was made to retrieve data from a deleted row.","pos":[0,56]}]},{"pos":[22439,22581],"content":"An attempt was made to read or access a column in a closed <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DataTableReader\" name=\"DataTableReader\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An attempt was made to read or access a column in a closed <xref uid=\"langword_csharp_DataTableReader\" name=\"DataTableReader\" href=\"\"></xref>."},{"pos":[22682,22731],"content":"The specified field does not contain a character.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified field does not contain a character.","pos":[0,49]}]},{"pos":[23290,23353],"content":"Returns the value of the specified column as a character array.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the value of the specified column as a character array.","pos":[0,63]}]},{"pos":[23366,24088],"content":"`GetChars` returns the number of available characters in the field. Most of the time this is the exact length of the field. However, the number returned may be less than the true length of the field if `GetChars` has already been used to obtain characters from the field.       The actual number of characters read can be less than the requested length, if the end of the field is reached. If you pass a buffer that is null (`Nothing` in Visual Basic), `GetChars` returns the length of the entire field in characters, not the remaining size based on the buffer offset parameter.       No conversions are performed; therefore the data to be retrieved must already be a character array or coercible to a character array.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">`GetChars`</ph> returns the number of available characters in the field.","pos":[0,67],"source":"`GetChars` returns the number of available characters in the field."},{"content":"Most of the time this is the exact length of the field.","pos":[68,123]},{"content":"However, the number returned may be less than the true length of the field if <ph id=\"ph1\">`GetChars`</ph> has already been used to obtain characters from the field.","pos":[124,271],"source":" However, the number returned may be less than the true length of the field if `GetChars` has already been used to obtain characters from the field."},{"content":"The actual number of characters read can be less than the requested length, if the end of the field is reached.","pos":[278,389]},{"content":"If you pass a buffer that is null (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic), <ph id=\"ph2\">`GetChars`</ph> returns the length of the entire field in characters, not the remaining size based on the buffer offset parameter.","pos":[390,578],"source":" If you pass a buffer that is null (`Nothing` in Visual Basic), `GetChars` returns the length of the entire field in characters, not the remaining size based on the buffer offset parameter."},{"content":"No conversions are performed; therefore the data to be retrieved must already be a character array or coercible to a character array.","pos":[585,718]}]},{"pos":[25319,25349],"content":"The zero-based column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]},{"pos":[25414,25480],"content":"The index within the field from which to start the read operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index within the field from which to start the read operation.","pos":[0,66]}]},{"pos":[25543,25593],"content":"The buffer into which to read the stream of chars.","needQuote":true,"needEscape":true,"nodes":[{"content":"The buffer into which to read the stream of chars.","pos":[0,50]}]},{"pos":[25660,25723],"content":"The index within the buffer at which to start placing the data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index within the buffer at which to start placing the data.","pos":[0,63]}]},{"pos":[25785,25828],"content":"The maximum length to copy into the buffer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum length to copy into the buffer.","pos":[0,43]}]},{"pos":[25885,25922],"content":"The actual number of characters read.","needQuote":true,"needEscape":true,"nodes":[{"content":"The actual number of characters read.","pos":[0,37]}]},{"pos":[26101,26199],"content":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index passed was outside the range of 0 to &lt;xref:System.Data.DataTableReader.FieldCount*&gt; - 1.","pos":[0,98],"source":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1."}]},{"pos":[26332,26388],"content":"An attempt was made to retrieve data from a deleted row.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt was made to retrieve data from a deleted row.","pos":[0,56]}]},{"pos":[26499,26641],"content":"An attempt was made to read or access a column in a closed <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DataTableReader\" name=\"DataTableReader\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An attempt was made to read or access a column in a closed <xref uid=\"langword_csharp_DataTableReader\" name=\"DataTableReader\" href=\"\"></xref>."},{"pos":[26742,26798],"content":"The specified column does not contain a character array.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified column does not contain a character array.","pos":[0,56]}]},{"pos":[27211,27276],"content":"Gets a string representing the data type of the specified column.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a string representing the data type of the specified column.","pos":[0,65]}]},{"pos":[27288,27423],"content":"The GetDataTypeName method always returns the type of the underlying <xref:System.Data.DataColumn> instead of a provider-specific type.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetDataTypeName method always returns the type of the underlying &lt;xref:System.Data.DataColumn&gt; instead of a provider-specific type.","pos":[0,135],"source":"The GetDataTypeName method always returns the type of the underlying <xref:System.Data.DataColumn> instead of a provider-specific type."}]},{"pos":[28072,28102],"content":"The zero-based column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]},{"pos":[28160,28205],"content":"A string representing the column's data type.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string representing the column's data type.","pos":[0,45]}]},{"pos":[28391,28489],"content":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index passed was outside the range of 0 to &lt;xref:System.Data.DataTableReader.FieldCount*&gt; - 1.","pos":[0,98],"source":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1."}]},{"pos":[28600,28708],"content":"An attempt was made to read or access a column in a closed <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An attempt was made to read or access a column in a closed <xref href=\"System.Data.DataTableReader\"></xref>."},{"pos":[29101,29175],"content":"Gets the value of the specified column as a <xref:System.DateTime> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the specified column as a &lt;xref:System.DateTime&gt; object.","pos":[0,74],"source":"Gets the value of the specified column as a <xref:System.DateTime> object."}]},{"pos":[29188,29437],"content":"No conversions are performed; therefore the data retrieved must already be a <xref:System.DateTime> or coercible to a `DataTime`.       Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"No conversions are performed; therefore the data retrieved must already be a &lt;xref:System.DateTime&gt; or coercible to a <ph id=\"ph1\">`DataTime`</ph>.","pos":[0,129],"source":"No conversions are performed; therefore the data retrieved must already be a <xref:System.DateTime> or coercible to a `DataTime`."},{"content":"Call &lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt; to see if there are null values before calling this method.","pos":[136,247],"source":"       Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method."}]},{"pos":[30176,30206],"content":"The zero-based column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]},{"pos":[30266,30300],"content":"The value of the specified column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the specified column.","pos":[0,34]}]},{"pos":[30482,30580],"content":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index passed was outside the range of 0 to &lt;xref:System.Data.DataTableReader.FieldCount*&gt; - 1.","pos":[0,98],"source":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1."}]},{"pos":[30713,30769],"content":"An attempt was made to retrieve data from a deleted row.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt was made to retrieve data from a deleted row.","pos":[0,56]}]},{"pos":[30880,31022],"content":"An attempt was made to read or access a column in a closed <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DataTableReader\" name=\"DataTableReader\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An attempt was made to read or access a column in a closed <xref uid=\"langword_csharp_DataTableReader\" name=\"DataTableReader\" href=\"\"></xref>."},{"pos":[31123,31178],"content":"The specified column does not contain a DateTime value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified column does not contain a DateTime value.","pos":[0,55]}]},{"pos":[31566,31632],"content":"Gets the value of the specified column as a <xref:System.Decimal>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the specified column as a &lt;xref:System.Decimal&gt;.","pos":[0,66],"source":"Gets the value of the specified column as a <xref:System.Decimal>."}]},{"pos":[31645,31892],"content":"No conversions are performed; therefore the data retrieved must already be a <xref:System.Decimal> or coercible to a `Decimal`.       Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"No conversions are performed; therefore the data retrieved must already be a &lt;xref:System.Decimal&gt; or coercible to a <ph id=\"ph1\">`Decimal`</ph>.","pos":[0,127],"source":"No conversions are performed; therefore the data retrieved must already be a <xref:System.Decimal> or coercible to a `Decimal`."},{"content":"Call &lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt; to see if there are null values before calling this method.","pos":[134,245],"source":"       Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method."}]},{"pos":[32625,32655],"content":"The zero-based column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]},{"pos":[32714,32748],"content":"The value of the specified column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the specified column.","pos":[0,34]}]},{"pos":[32929,33027],"content":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index passed was outside the range of 0 to &lt;xref:System.Data.DataTableReader.FieldCount*&gt; - 1.","pos":[0,98],"source":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1."}]},{"pos":[33160,33216],"content":"An attempt was made to retrieve data from a deleted row.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt was made to retrieve data from a deleted row.","pos":[0,56]}]},{"pos":[33327,33469],"content":"An attempt was made to read or access a column in a closed <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DataTableReader\" name=\"DataTableReader\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An attempt was made to read or access a column in a closed <xref uid=\"langword_csharp_DataTableReader\" name=\"DataTableReader\" href=\"\"></xref>."},{"pos":[33570,33683],"content":"The specified column does not contain a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Decimal\" name=\"Decimal\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"The specified column does not contain a <xref uid=\"langword_csharp_Decimal\" name=\"Decimal\" href=\"\"></xref> value."},{"pos":[34066,34139],"content":"Gets the value of the column as a double-precision floating point number.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the column as a double-precision floating point number.","pos":[0,73]}]},{"pos":[34152,34453],"content":"No conversions are performed; therefore the data retrieved must already be a double-precision floating point number or must be coercible to a double-precision floating point number.       Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"No conversions are performed; therefore the data retrieved must already be a double-precision floating point number or must be coercible to a double-precision floating point number.       Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.","pos":[0,299],"nodes":[{"content":"No conversions are performed; therefore the data retrieved must already be a double-precision floating point number or must be coercible to a double-precision floating point number.","pos":[0,181]},{"content":"Call &lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt; to see if there are null values before calling this method.","pos":[188,299],"source":"       Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method."}]}]},{"pos":[35184,35221],"content":"The zero-based ordinal of the column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based ordinal of the column.","pos":[0,37]}]},{"pos":[35279,35313],"content":"The value of the specified column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the specified column.","pos":[0,34]}]},{"pos":[35493,35591],"content":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index passed was outside the range of 0 to &lt;xref:System.Data.DataTableReader.FieldCount*&gt; - 1.","pos":[0,98],"source":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1."}]},{"pos":[35724,35780],"content":"An attempt was made to retrieve data from a deleted row.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt was made to retrieve data from a deleted row.","pos":[0,56]}]},{"pos":[35891,36033],"content":"An attempt was made to read or access a column in a closed <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DataTableReader\" name=\"DataTableReader\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An attempt was made to read or access a column in a closed <xref uid=\"langword_csharp_DataTableReader\" name=\"DataTableReader\" href=\"\"></xref>."},{"pos":[36134,36213],"content":"The specified column does not contain a double-precision floating point number.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified column does not contain a double-precision floating point number.","pos":[0,79]}]},{"pos":[36573,36651],"content":"Returns an enumerator that can be used to iterate through the item collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an enumerator that can be used to iterate through the item collection.","pos":[0,78]}]},{"pos":[36664,38118],"content":"Enumerators only allow for reading the data in the <xref:System.Data.DataTableReader>. Enumerators cannot be used to modify the underlying collection.       At first, the enumerator is positioned before the first element in the collection. At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception. Therefore, you must call `MoveNext` to advance the enumerator to the first element of the collection before reading the value of `Current`.       `Current` returns a <xref:System.Data.Common.DbDataRecord>, and returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. `MoveNext` sets `Current` to the next element.       After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling `MoveNext` returns false. If the last call to `MoveNext` returned `false`, calling `Current` throws an exception. In addition, because the <xref:System.Data.DataTableReader> provides forward-only access to its data, calling the <xref:System.Collections.IEnumerator.Reset%2A> method of the IEnumerator throws a <xref:System.NotSupportedException>.       The <xref:System.Data.DataTableReader> provides a stable enumerator. This means that even if row deletions or additions occur within the underlying data, the enumerator returned by a call to GetEnumerator is still valid.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Enumerators only allow for reading the data in the &lt;xref:System.Data.DataTableReader&gt;.","pos":[0,86],"source":"Enumerators only allow for reading the data in the <xref:System.Data.DataTableReader>."},{"content":"Enumerators cannot be used to modify the underlying collection.","pos":[87,150]},{"content":"At first, the enumerator is positioned before the first element in the collection.","pos":[157,239]},{"content":"At this position, calling &lt;xref:System.Collections.IEnumerator.Current%2A&gt; throws an exception.","pos":[240,335],"source":" At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception."},{"content":"Therefore, you must call <ph id=\"ph1\">`MoveNext`</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id=\"ph2\">`Current`</ph>.","pos":[336,475],"source":" Therefore, you must call `MoveNext` to advance the enumerator to the first element of the collection before reading the value of `Current`."},{"content":"<ph id=\"ph1\">`Current`</ph> returns a &lt;xref:System.Data.Common.DbDataRecord&gt;, and returns the same object until either &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; is called.","pos":[482,693],"source":"`Current` returns a <xref:System.Data.Common.DbDataRecord>, and returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called."},{"content":"<ph id=\"ph1\">`MoveNext`</ph> sets <ph id=\"ph2\">`Current`</ph> to the next element.","pos":[694,740],"source":"`MoveNext` sets `Current` to the next element."},{"content":"After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <ph id=\"ph1\">`MoveNext`</ph> returns false.","pos":[747,898],"source":"       After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling `MoveNext` returns false."},{"content":"If the last call to <ph id=\"ph1\">`MoveNext`</ph> returned <ph id=\"ph2\">`false`</ph>, calling <ph id=\"ph3\">`Current`</ph> throws an exception.","pos":[899,986],"source":" If the last call to `MoveNext` returned `false`, calling `Current` throws an exception."},{"content":"In addition, because the &lt;xref:System.Data.DataTableReader&gt; provides forward-only access to its data, calling the &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; method of the IEnumerator throws a &lt;xref:System.NotSupportedException&gt;.","pos":[987,1219],"source":" In addition, because the <xref:System.Data.DataTableReader> provides forward-only access to its data, calling the <xref:System.Collections.IEnumerator.Reset%2A> method of the IEnumerator throws a <xref:System.NotSupportedException>."},{"content":"The &lt;xref:System.Data.DataTableReader&gt; provides a stable enumerator.","pos":[1226,1294],"source":"       The <xref:System.Data.DataTableReader> provides a stable enumerator."},{"content":"This means that even if row deletions or additions occur within the underlying data, the enumerator returned by a call to GetEnumerator is still valid.","pos":[1295,1446]}]},{"pos":[38893,38977],"content":"An <xref:System.Collections.IEnumerator> object that represents the item collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IEnumerator&gt; object that represents the item collection.","pos":[0,84],"source":"An <xref:System.Collections.IEnumerator> object that represents the item collection."}]},{"pos":[39157,39265],"content":"An attempt was made to read or access a column in a closed <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An attempt was made to read or access a column in a closed <xref href=\"System.Data.DataTableReader\"></xref>."},{"pos":[39663,39727],"content":"Gets the <xref:System.Type> that is the data type of the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the &lt;xref:System.Type&gt; that is the data type of the object.","pos":[0,64],"source":"Gets the <xref:System.Type> that is the data type of the object."}]},{"pos":[40335,40365],"content":"The zero-based column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]},{"pos":[40421,40480],"content":"The <xref:System.Type> that is the data type of the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; that is the data type of the object.","pos":[0,59],"source":"The <xref:System.Type> that is the data type of the object."}]},{"pos":[40663,40761],"content":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index passed was outside the range of 0 to &lt;xref:System.Data.DataTableReader.FieldCount*&gt; - 1.","pos":[0,98],"source":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1."}]},{"pos":[40872,40981],"content":"An attempt was made to read or access a column in a closed <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> .","needQuote":true,"needEscape":true,"source":"An attempt was made to read or access a column in a closed <xref href=\"System.Data.DataTableReader\"></xref> ."},{"pos":[41359,41442],"content":"Gets the value of the specified column as a single-precision floating point number.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the specified column as a single-precision floating point number.","pos":[0,83]}]},{"pos":[41455,41756],"content":"No conversions are performed; therefore the data retrieved must already be a single-precision floating point number or must be coercible to a single-precision floating point number.       Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"No conversions are performed; therefore the data retrieved must already be a single-precision floating point number or must be coercible to a single-precision floating point number.       Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.","pos":[0,299],"nodes":[{"content":"No conversions are performed; therefore the data retrieved must already be a single-precision floating point number or must be coercible to a single-precision floating point number.","pos":[0,181]},{"content":"Call &lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt; to see if there are null values before calling this method.","pos":[188,299],"source":"       Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method."}]}]},{"pos":[42483,42513],"content":"The zero-based column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]},{"pos":[42571,42595],"content":"The value of the column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the column.","pos":[0,24]}]},{"pos":[42774,42872],"content":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index passed was outside the range of 0 to &lt;xref:System.Data.DataTableReader.FieldCount*&gt; - 1.","pos":[0,98],"source":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1."}]},{"pos":[43005,43061],"content":"An attempt was made to retrieve data from a deleted row.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt was made to retrieve data from a deleted row.","pos":[0,56]}]},{"pos":[43172,43280],"content":"An attempt was made to read or access a column in a closed <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An attempt was made to read or access a column in a closed <xref href=\"System.Data.DataTableReader\"></xref>."},{"pos":[43381,43460],"content":"The specified column does not contain a single-precision floating point number.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified column does not contain a single-precision floating point number.","pos":[0,79]}]},{"pos":[43833,43911],"content":"Gets the value of the specified column as a globally-unique identifier (GUID).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the specified column as a globally-unique identifier (GUID).","pos":[0,78]}]},{"pos":[43924,44165],"content":"No conversions are performed; therefore the data retrieved must already be a <xref:System.Guid> or coercible to a `Guid`.       Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"No conversions are performed; therefore the data retrieved must already be a &lt;xref:System.Guid&gt; or coercible to a <ph id=\"ph1\">`Guid`</ph>.","pos":[0,121],"source":"No conversions are performed; therefore the data retrieved must already be a <xref:System.Guid> or coercible to a `Guid`."},{"content":"Call &lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt; to see if there are null values before calling this method.","pos":[128,239],"source":"       Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method."}]},{"pos":[44867,44897],"content":"The zero-based column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]},{"pos":[44953,44987],"content":"The value of the specified column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the specified column.","pos":[0,34]}]},{"pos":[45165,45263],"content":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index passed was outside the range of 0 to &lt;xref:System.Data.DataTableReader.FieldCount*&gt; - 1.","pos":[0,98],"source":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1."}]},{"pos":[45396,45452],"content":"An attempt was made to retrieve data from a deleted row.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt was made to retrieve data from a deleted row.","pos":[0,56]}]},{"pos":[45563,45671],"content":"An attempt was made to read or access a column in a closed <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An attempt was made to read or access a column in a closed <xref href=\"System.Data.DataTableReader\"></xref>."},{"pos":[45772,45817],"content":"The specified column does not contain a GUID.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified column does not contain a GUID.","pos":[0,45]}]},{"pos":[46195,46261],"content":"Gets the value of the specified column as a 16-bit signed integer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the specified column as a 16-bit signed integer.","pos":[0,66]}]},{"pos":[46274,46520],"content":"No conversions are performed; therefore, the data retrieved must already be an <xref:System.Int16> or coercible to an `Int16`.       Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be an &lt;xref:System.Int16&gt; or coercible to an <ph id=\"ph1\">`Int16`</ph>.","pos":[0,126],"source":"No conversions are performed; therefore, the data retrieved must already be an <xref:System.Int16> or coercible to an `Int16`."},{"content":"Call &lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt; to see if there are null values before calling this method.","pos":[133,244],"source":"       Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method."}]},{"pos":[47245,47274],"content":"The zero-based column ordinal","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal","pos":[0,29]}]},{"pos":[47331,47365],"content":"The value of the specified column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the specified column.","pos":[0,34]}]},{"pos":[47544,47642],"content":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index passed was outside the range of 0 to &lt;xref:System.Data.DataTableReader.FieldCount*&gt; - 1.","pos":[0,98],"source":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1."}]},{"pos":[47775,47831],"content":"An attempt was made to retrieve data from a deleted row.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt was made to retrieve data from a deleted row.","pos":[0,56]}]},{"pos":[47942,48050],"content":"An attempt was made to read or access a column in a closed <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An attempt was made to read or access a column in a closed <xref href=\"System.Data.DataTableReader\"></xref>."},{"pos":[48151,48213],"content":"The specified column does not contain a 16-bit signed integer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified column does not contain a 16-bit signed integer.","pos":[0,62]}]},{"pos":[48591,48657],"content":"Gets the value of the specified column as a 32-bit signed integer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the specified column as a 32-bit signed integer.","pos":[0,66]}]},{"pos":[48670,48916],"content":"No conversions are performed; therefore, the data retrieved must already be an <xref:System.Int32> or coercible to an `Int32`.       Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be an &lt;xref:System.Int32&gt; or coercible to an <ph id=\"ph1\">`Int32`</ph>.","pos":[0,126],"source":"No conversions are performed; therefore, the data retrieved must already be an <xref:System.Int32> or coercible to an `Int32`."},{"content":"Call &lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt; to see if there are null values before calling this method.","pos":[133,244],"source":"       Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method."}]},{"pos":[49641,49670],"content":"The zero-based column ordinal","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal","pos":[0,29]}]},{"pos":[49727,49761],"content":"The value of the specified column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the specified column.","pos":[0,34]}]},{"pos":[49940,50038],"content":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index passed was outside the range of 0 to &lt;xref:System.Data.DataTableReader.FieldCount*&gt; - 1.","pos":[0,98],"source":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1."}]},{"pos":[50171,50227],"content":"An attempt was made to retrieve data from a deleted row.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt was made to retrieve data from a deleted row.","pos":[0,56]}]},{"pos":[50338,50447],"content":"An attempt was made to read or access a column in a closed <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> .","needQuote":true,"needEscape":true,"source":"An attempt was made to read or access a column in a closed <xref href=\"System.Data.DataTableReader\"></xref> ."},{"pos":[50548,50616],"content":"The specified column does not contain a 32-bit signed integer value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified column does not contain a 32-bit signed integer value.","pos":[0,68]}]},{"pos":[50994,51060],"content":"Gets the value of the specified column as a 64-bit signed integer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the specified column as a 64-bit signed integer.","pos":[0,66]}]},{"pos":[51073,51319],"content":"No conversions are performed; therefore, the data retrieved must already be an <xref:System.Int64> or coercible to an `Int64`.       Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be an &lt;xref:System.Int64&gt; or coercible to an <ph id=\"ph1\">`Int64`</ph>.","pos":[0,126],"source":"No conversions are performed; therefore, the data retrieved must already be an <xref:System.Int64> or coercible to an `Int64`."},{"content":"Call &lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt; to see if there are null values before calling this method.","pos":[133,244],"source":"       Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method."}]},{"pos":[52043,52072],"content":"The zero-based column ordinal","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal","pos":[0,29]}]},{"pos":[52129,52163],"content":"The value of the specified column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the specified column.","pos":[0,34]}]},{"pos":[52342,52440],"content":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index passed was outside the range of 0 to &lt;xref:System.Data.DataTableReader.FieldCount*&gt; - 1.","pos":[0,98],"source":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1."}]},{"pos":[52573,52629],"content":"An attempt was made to retrieve data from a deleted row.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt was made to retrieve data from a deleted row.","pos":[0,56]}]},{"pos":[52740,52849],"content":"An attempt was made to read or access a column in a closed <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> .","needQuote":true,"needEscape":true,"source":"An attempt was made to read or access a column in a closed <xref href=\"System.Data.DataTableReader\"></xref> ."},{"pos":[52950,53018],"content":"The specified column does not contain a 64-bit signed integer value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified column does not contain a 64-bit signed integer value.","pos":[0,68]}]},{"pos":[53391,53456],"content":"Gets the value of the specified column as a <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the specified column as a &lt;xref:System.String&gt;.","pos":[0,65],"source":"Gets the value of the specified column as a <xref:System.String>."}]},{"pos":[53468,53768],"content":"The `GetName` and <xref:System.Data.DataTableReader.GetOrdinal%2A> methods provide inverse functionality. That is, calling `GetOrdinal` on the return value of calling `GetName` should return the original parameter passed to `GetName`; the same applies to calling the procedures in the opposite order.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`GetName`</ph> and &lt;xref:System.Data.DataTableReader.GetOrdinal%2A&gt; methods provide inverse functionality.","pos":[0,105],"source":"The `GetName` and <xref:System.Data.DataTableReader.GetOrdinal%2A> methods provide inverse functionality."},{"content":"That is, calling <ph id=\"ph1\">`GetOrdinal`</ph> on the return value of calling <ph id=\"ph2\">`GetName`</ph> should return the original parameter passed to <ph id=\"ph3\">`GetName`</ph>; the same applies to calling the procedures in the opposite order.","pos":[106,300],"source":" That is, calling `GetOrdinal` on the return value of calling `GetName` should return the original parameter passed to `GetName`; the same applies to calling the procedures in the opposite order."}]},{"pos":[54348,54377],"content":"The zero-based column ordinal","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal","pos":[0,29]}]},{"pos":[54435,54468],"content":"The name of the specified column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the specified column.","pos":[0,33]}]},{"pos":[54646,54744],"content":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index passed was outside the range of 0 to &lt;xref:System.Data.DataTableReader.FieldCount*&gt; - 1.","pos":[0,98],"source":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1."}]},{"pos":[54855,54963],"content":"An attempt was made to read or access a column in a closed <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An attempt was made to read or access a column in a closed <xref href=\"System.Data.DataTableReader\"></xref>."},{"pos":[55356,55410],"content":"Gets the column ordinal, given the name of the column.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the column ordinal, given the name of the column.","pos":[0,54]}]},{"pos":[55423,56138],"content":"Because most of the methods provided by the <xref:System.Data.DataTableReader> class must be provided with an ordinal column number, you can use the `GetOrdinal` method to retrieve the column number, given the name of the column.       `GetOrdinal` performs a case-sensitive lookup first. If it fails, a second case-insensitive search is made. If the column number is not found an `IndexOutOfRangeException` is thrown.       `GetOrdinal` is kana-width insensitive.       Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call `GetOrdinal` within a loop. Save time by calling `GetOrdinal` one time and assigning the results to an integer variable for use within the loop","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Because most of the methods provided by the &lt;xref:System.Data.DataTableReader&gt; class must be provided with an ordinal column number, you can use the <ph id=\"ph1\">`GetOrdinal`</ph> method to retrieve the column number, given the name of the column.","pos":[0,229],"source":"Because most of the methods provided by the <xref:System.Data.DataTableReader> class must be provided with an ordinal column number, you can use the `GetOrdinal` method to retrieve the column number, given the name of the column."},{"content":"<ph id=\"ph1\">`GetOrdinal`</ph> performs a case-sensitive lookup first.","pos":[236,288],"source":"`GetOrdinal` performs a case-sensitive lookup first."},{"content":"If it fails, a second case-insensitive search is made.","pos":[289,343]},{"content":"If the column number is not found an <ph id=\"ph1\">`IndexOutOfRangeException`</ph> is thrown.","pos":[344,418],"source":" If the column number is not found an `IndexOutOfRangeException` is thrown."},{"content":"<ph id=\"ph1\">`GetOrdinal`</ph> is kana-width insensitive.","pos":[425,464],"source":"`GetOrdinal` is kana-width insensitive."},{"content":"Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call <ph id=\"ph1\">`GetOrdinal`</ph> within a loop.","pos":[471,593],"source":"       Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call `GetOrdinal` within a loop."},{"content":"Save time by calling <ph id=\"ph1\">`GetOrdinal`</ph> one time and assigning the results to an integer variable for use within the loop","pos":[594,709],"source":" Save time by calling `GetOrdinal` one time and assigning the results to an integer variable for use within the loop"}]},{"pos":[56921,56944],"content":"The name of the column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the column.","pos":[0,23]}]},{"pos":[57001,57031],"content":"The zero-based column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]},{"pos":[57208,57316],"content":"An attempt was made to read or access a column in a closed <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An attempt was made to read or access a column in a closed <xref href=\"System.Data.DataTableReader\"></xref>."},{"pos":[57411,57457],"content":"The name specified is not a valid column name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name specified is not a valid column name.","pos":[0,46]}]},{"pos":[57935,58001],"content":"Gets the type of the specified column in provider-specific format.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the type of the specified column in provider-specific format.","pos":[0,66]}]},{"pos":[58013,58490],"content":"Because the <xref:System.Data.DataTableReader> always returns the type stored within the underlying <xref:System.Data.DataColumn>, the value returned by calling the GetProviderSpecificFieldType method always returns the same type as the type stored within the <xref:System.Data.DataTable>. When you work with the <xref:System.Data.DataTableReader> class, calling the GetProviderSpecificFieldType method returns the same type as calling the <xref:System.Type.GetType%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Because the <xref:System.Data.DataTableReader> always returns the type stored within the underlying <xref:System.Data.DataColumn>, the value returned by calling the GetProviderSpecificFieldType method always returns the same type as the type stored within the <xref:System.Data.DataTable>. When you work with the <xref:System.Data.DataTableReader> class, calling the GetProviderSpecificFieldType method returns the same type as calling the <xref:System.Type.GetType%2A> method.","pos":[0,477],"nodes":[{"content":"Because the &lt;xref:System.Data.DataTableReader&gt; always returns the type stored within the underlying &lt;xref:System.Data.DataColumn&gt;, the value returned by calling the GetProviderSpecificFieldType method always returns the same type as the type stored within the &lt;xref:System.Data.DataTable&gt;.","pos":[0,289],"source":"Because the <xref:System.Data.DataTableReader> always returns the type stored within the underlying <xref:System.Data.DataColumn>, the value returned by calling the GetProviderSpecificFieldType method always returns the same type as the type stored within the <xref:System.Data.DataTable>."},{"content":"When you work with the &lt;xref:System.Data.DataTableReader&gt; class, calling the GetProviderSpecificFieldType method returns the same type as calling the &lt;xref:System.Type.GetType%2A&gt; method.","pos":[290,477],"source":" When you work with the <xref:System.Data.DataTableReader> class, calling the GetProviderSpecificFieldType method returns the same type as calling the <xref:System.Type.GetType%2A> method."}]}]},{"pos":[58657,58687],"content":"The zero-based column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]},{"pos":[58743,58802],"content":"The <xref:System.Type> that is the data type of the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; that is the data type of the object.","pos":[0,59],"source":"The <xref:System.Type> that is the data type of the object."}]},{"pos":[59001,59099],"content":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index passed was outside the range of 0 to &lt;xref:System.Data.DataTableReader.FieldCount*&gt; - 1.","pos":[0,98],"source":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1."}]},{"pos":[59210,59318],"content":"An attempt was made to read or access a column in a closed <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An attempt was made to read or access a column in a closed <xref href=\"System.Data.DataTableReader\"></xref>."},{"pos":[59776,59843],"content":"Gets the value of the specified column in provider-specific format.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the specified column in provider-specific format.","pos":[0,67]}]},{"pos":[59855,60359],"content":"Because the <xref:System.Data.DataTableReader> always returns the type stored within the underlying <xref:System.Data.DataColumn>, the value returned by calling the GetProviderSpecificValue method always returns data of the same type as the data stored within the <xref:System.Data.DataTable>. When you work with the <xref:System.Data.DataTableReader> class, calling the GetProviderSpecificValue method returns the same value and type as calling the <xref:System.Data.DataTableReader.GetValue%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Because the <xref:System.Data.DataTableReader> always returns the type stored within the underlying <xref:System.Data.DataColumn>, the value returned by calling the GetProviderSpecificValue method always returns data of the same type as the data stored within the <xref:System.Data.DataTable>. When you work with the <xref:System.Data.DataTableReader> class, calling the GetProviderSpecificValue method returns the same value and type as calling the <xref:System.Data.DataTableReader.GetValue%2A> method.","pos":[0,504],"nodes":[{"content":"Because the &lt;xref:System.Data.DataTableReader&gt; always returns the type stored within the underlying &lt;xref:System.Data.DataColumn&gt;, the value returned by calling the GetProviderSpecificValue method always returns data of the same type as the data stored within the &lt;xref:System.Data.DataTable&gt;.","pos":[0,293],"source":"Because the <xref:System.Data.DataTableReader> always returns the type stored within the underlying <xref:System.Data.DataColumn>, the value returned by calling the GetProviderSpecificValue method always returns data of the same type as the data stored within the <xref:System.Data.DataTable>."},{"content":"When you work with the &lt;xref:System.Data.DataTableReader&gt; class, calling the GetProviderSpecificValue method returns the same value and type as calling the &lt;xref:System.Data.DataTableReader.GetValue%2A&gt; method.","pos":[294,504],"source":" When you work with the <xref:System.Data.DataTableReader> class, calling the GetProviderSpecificValue method returns the same value and type as calling the <xref:System.Data.DataTableReader.GetValue%2A> method."}]}]},{"pos":[60524,60585],"content":"The zero-based number of the column whose value is retrieved.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based number of the column whose value is retrieved.","pos":[0,61]}]},{"pos":[60643,60705],"content":"The value of the specified column in provider-specific format.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the specified column in provider-specific format.","pos":[0,62]}]},{"pos":[60900,60998],"content":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index passed was outside the range of 0 to &lt;xref:System.Data.DataTableReader.FieldCount*&gt; - 1.","pos":[0,98],"source":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1."}]},{"pos":[61131,61187],"content":"An attempt was made to retrieve data from a deleted row.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt was made to retrieve data from a deleted row.","pos":[0,56]}]},{"pos":[61298,61405],"content":"An attempt was made to read or access a column in a closed <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>","needQuote":true,"needEscape":true,"source":"An attempt was made to read or access a column in a closed <xref href=\"System.Data.DataTableReader\"></xref>"},{"pos":[61883,62024],"content":"Fills the supplied array with provider-specific type information for all the columns in the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Fills the supplied array with provider-specific type information for all the columns in the <xref href=\"System.Data.DataTableReader\"></xref>."},{"pos":[62036,62549],"content":"Because the <xref:System.Data.DataTableReader> always returns the data of the type stored within the underlying <xref:System.Data.DataColumn>, the values returned by calling the GetProviderSpecificValues method is always of the same types as the data stored within the <xref:System.Data.DataTable>. When you work with the <xref:System.Data.DataTableReader> class, calling the GetProviderSpecificValues method returns the same values and types as calling the <xref:System.Data.DataTableReader.GetValues%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Because the <xref:System.Data.DataTableReader> always returns the data of the type stored within the underlying <xref:System.Data.DataColumn>, the values returned by calling the GetProviderSpecificValues method is always of the same types as the data stored within the <xref:System.Data.DataTable>. When you work with the <xref:System.Data.DataTableReader> class, calling the GetProviderSpecificValues method returns the same values and types as calling the <xref:System.Data.DataTableReader.GetValues%2A> method.","pos":[0,513],"nodes":[{"content":"Because the &lt;xref:System.Data.DataTableReader&gt; always returns the data of the type stored within the underlying &lt;xref:System.Data.DataColumn&gt;, the values returned by calling the GetProviderSpecificValues method is always of the same types as the data stored within the &lt;xref:System.Data.DataTable&gt;.","pos":[0,298],"source":"Because the <xref:System.Data.DataTableReader> always returns the data of the type stored within the underlying <xref:System.Data.DataColumn>, the values returned by calling the GetProviderSpecificValues method is always of the same types as the data stored within the <xref:System.Data.DataTable>."},{"content":"When you work with the &lt;xref:System.Data.DataTableReader&gt; class, calling the GetProviderSpecificValues method returns the same values and types as calling the &lt;xref:System.Data.DataTableReader.GetValues%2A&gt; method.","pos":[299,513],"source":" When you work with the <xref:System.Data.DataTableReader> class, calling the GetProviderSpecificValues method returns the same values and types as calling the <xref:System.Data.DataTableReader.GetValues%2A> method."}]}]},{"pos":[62718,62848],"content":"An array of objects to be filled in with type information for the columns in the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An array of objects to be filled in with type information for the columns in the <xref href=\"System.Data.DataTableReader\"></xref>."},{"pos":[62905,62955],"content":"The number of column values copied into the array.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of column values copied into the array.","pos":[0,50]}]},{"pos":[63169,63225],"content":"An attempt was made to retrieve data from a deleted row.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt was made to retrieve data from a deleted row.","pos":[0,56]}]},{"pos":[63336,63444],"content":"An attempt was made to read or access a column in a closed <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An attempt was made to read or access a column in a closed <xref href=\"System.Data.DataTableReader\"></xref>."},{"pos":[63809,63953],"content":"Returns a <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that describes the column metadata of the <bpt id=\"p2\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a <xref href=\"System.Data.DataTable\"></xref> that describes the column metadata of the <xref href=\"System.Data.DataTableReader\"></xref>."},{"pos":[63966,68171],"content":"The GetSchemaTable method returns metadata about each column in the following order:      |DataReader column|Description|   |-----------------------|-----------------|   |ColumnName|The name of the column as it appears in the <xref:System.Data.DataTable>.|   |ColumnOrdinal|The ordinal of the column|   |ColumnSize|-1 if the <xref:System.Data.Common.SchemaTableColumn.ColumnSize> (or <xref:System.Data.DataColumn.MaxLength%2A>) property of the <xref:System.Data.DataColumn> cannot be determined or is not relevant; otherwise, 0 or a positive integer that contains the `MaxLength` value.|   |NumericPrecision|If the column type is a numeric type, this is the maximum precision of the column. If the column type is not a numeric data type, this is a null value.|   |NumericScale|If column data type has a scale component, return the number of digits to the right of the decimal point. Otherwise, return a null value.|   |DataType|The underlying type of the column.|   |ProviderType|The indicator of the column's data type. If the data type of the column varies from row to row, this value is <xref:System.Object>. This column cannot contain a null value.|   |IsLong|`true` if the data type of the column is <xref:System.String> and its <xref:System.Data.DataColumn.MaxLength%2A> property is -1. Otherwise, `false`.|   |AllowDBNull|`true` if the AllowDbNull constraint is set to true for the column; otherwise, `false`.|   |IsReadOnly|`true` if the column cannot be modified; otherwise `false`.|   |IsRowVersion|`false`, for every column.|   |IsUnique|`true`: No two rows in the <xref:System.Data.DataTable> can have the same value in this column. `IsUnique` is guaranteed to be true if the column represents a key by itself or if there is a constraint of type UNIQUE that applies only to this column. `false`: The column can contain duplicate values in the `DataTable`. The default of this column is `false`.|   |IsKey|`true`: The column is one of a set of columns that, taken together, uniquely identify the row in the <xref:System.Data.DataTable>. The set of columns with `IsKey` set to `true` must uniquely identify a row in the `DataTable`. There is no requirement that this set of columns is a minimal set of columns. This set of columns may be generated from a `DataTable` primary key, a unique constraint or a unique index. `false`: The column is not required to uniquely identify the row. This value is `true` if the column participates in a single or composite primary key. Otherwise, its value is `false`.|   |IsAutoIncrement|`true`: The column assigns values to new rows in fixed increments. `false`: The column does not assign values to new rows in fixed increments. The default of this column is `false`.|   |BaseCatalogName|The name of the catalog in the data store that contains the column. `Null` if the base catalog name cannot be determined. The default value for this column is a `null` value.|   |BaseSchemaName|This value is always `Null`.|   |BaseTableName|The name of the <xref:System.Data.DataTable>.|   |BaseColumnName|The name of the column in the <xref:System.Data.DataTable>.|   |AutoIncrementSeed|The value of the <xref:System.Data.DataTable>'s <xref:System.Data.DataColumn.AutoIncrementSeed%2A> property.|   |AutoIncrementStep|The value of the <xref:System.Data.DataTable>'s <xref:System.Data.DataColumn.AutoIncrementStep%2A> property.|   |DefaultValue|The value of the <xref:System.Data.DataColumn>'s <xref:System.Data.DataColumn.DefaultValue%2A> property.|   |Expression|The expression string, if the current column is an expression column and all columns used in the expression belong to the same `T:System.Data.DataTable` that contains the expression column; otherwise `null`.|   |ColumnMapping|The <xref:System.Data.MappingType> value associated with the <xref:System.Data.DataColumn>. The type can be one of `Attribute`, `Element`, `Hidden`, or `SimpleContent`. The default value is `Element`.|   |BaseTableNamespace|The value of the <xref:System.Data.DataTable>'s <xref:System.Data.DataTable.Namespace%2A> property.|   |BaseColumnNamespace|The value of the <xref:System.Data.DataColumn>'s <xref:System.Data.DataColumn.Namespace%2A> property.|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetSchemaTable method returns metadata about each column in the following order:      |DataReader column|Description|   |-----------------------|-----------------|   |ColumnName|The name of the column as it appears in the &lt;xref:System.Data.DataTable&gt;.|   |ColumnOrdinal|The ordinal of the column|   |ColumnSize|-1 if the &lt;xref:System.Data.Common.SchemaTableColumn.ColumnSize&gt; (or &lt;xref:System.Data.DataColumn.MaxLength%2A&gt;) property of the &lt;xref:System.Data.DataColumn&gt; cannot be determined or is not relevant; otherwise, 0 or a positive integer that contains the <ph id=\"ph1\">`MaxLength`</ph> value.|   |NumericPrecision|If the column type is a numeric type, this is the maximum precision of the column.","pos":[0,690],"source":"The GetSchemaTable method returns metadata about each column in the following order:      |DataReader column|Description|   |-----------------------|-----------------|   |ColumnName|The name of the column as it appears in the <xref:System.Data.DataTable>.|   |ColumnOrdinal|The ordinal of the column|   |ColumnSize|-1 if the <xref:System.Data.Common.SchemaTableColumn.ColumnSize> (or <xref:System.Data.DataColumn.MaxLength%2A>) property of the <xref:System.Data.DataColumn> cannot be determined or is not relevant; otherwise, 0 or a positive integer that contains the `MaxLength` value.|   |NumericPrecision|If the column type is a numeric type, this is the maximum precision of the column."},{"content":"If the column type is not a numeric data type, this is a null value.|   |NumericScale|If column data type has a scale component, return the number of digits to the right of the decimal point.","pos":[691,882]},{"content":"Otherwise, return a null value.|   |DataType|The underlying type of the column.|   |ProviderType|The indicator of the column's data type.","pos":[883,1020]},{"content":"If the data type of the column varies from row to row, this value is &lt;xref:System.Object&gt;.","pos":[1021,1111],"source":" If the data type of the column varies from row to row, this value is <xref:System.Object>."},{"content":"This column cannot contain a null value.|   |IsLong|<ph id=\"ph1\">`true`</ph> if the data type of the column is &lt;xref:System.String&gt; and its &lt;xref:System.Data.DataColumn.MaxLength%2A&gt; property is -1.","pos":[1112,1292],"source":" This column cannot contain a null value.|   |IsLong|`true` if the data type of the column is <xref:System.String> and its <xref:System.Data.DataColumn.MaxLength%2A> property is -1."},{"content":"Otherwise, <ph id=\"ph1\">`false`</ph>.|   |AllowDBNull|<ph id=\"ph2\">`true`</ph> if the AllowDbNull constraint is set to true for the column; otherwise, <ph id=\"ph3\">`false`</ph>.|   |IsReadOnly|<ph id=\"ph4\">`true`</ph> if the column cannot be modified; otherwise <ph id=\"ph5\">`false`</ph>.|   |IsRowVersion|<ph id=\"ph6\">`false`</ph>, for every column.|   |IsUnique|<ph id=\"ph7\">`true`</ph>: No two rows in the &lt;xref:System.Data.DataTable&gt; can have the same value in this column.","pos":[1293,1644],"source":" Otherwise, `false`.|   |AllowDBNull|`true` if the AllowDbNull constraint is set to true for the column; otherwise, `false`.|   |IsReadOnly|`true` if the column cannot be modified; otherwise `false`.|   |IsRowVersion|`false`, for every column.|   |IsUnique|`true`: No two rows in the <xref:System.Data.DataTable> can have the same value in this column."},{"content":"<ph id=\"ph1\">`IsUnique`</ph> is guaranteed to be true if the column represents a key by itself or if there is a constraint of type UNIQUE that applies only to this column.","pos":[1645,1798],"source":"`IsUnique` is guaranteed to be true if the column represents a key by itself or if there is a constraint of type UNIQUE that applies only to this column."},{"content":"<ph id=\"ph1\">`false`</ph>: The column can contain duplicate values in the <ph id=\"ph2\">`DataTable`</ph>.","pos":[1799,1867],"source":"`false`: The column can contain duplicate values in the `DataTable`."},{"content":"The default of this column is <ph id=\"ph1\">`false`</ph>.|   |IsKey|<ph id=\"ph2\">`true`</ph>: The column is one of a set of columns that, taken together, uniquely identify the row in the &lt;xref:System.Data.DataTable&gt;.","pos":[1868,2047],"source":" The default of this column is `false`.|   |IsKey|`true`: The column is one of a set of columns that, taken together, uniquely identify the row in the <xref:System.Data.DataTable>."},{"content":"The set of columns with <ph id=\"ph1\">`IsKey`</ph> set to <ph id=\"ph2\">`true`</ph> must uniquely identify a row in the <ph id=\"ph3\">`DataTable`</ph>.","pos":[2048,2142],"source":" The set of columns with `IsKey` set to `true` must uniquely identify a row in the `DataTable`."},{"content":"There is no requirement that this set of columns is a minimal set of columns.","pos":[2143,2220]},{"content":"This set of columns may be generated from a <ph id=\"ph1\">`DataTable`</ph> primary key, a unique constraint or a unique index.","pos":[2221,2328],"source":" This set of columns may be generated from a `DataTable` primary key, a unique constraint or a unique index."},{"content":"<ph id=\"ph1\">`false`</ph>: The column is not required to uniquely identify the row.","pos":[2329,2394],"source":"`false`: The column is not required to uniquely identify the row."},{"content":"This value is <ph id=\"ph1\">`true`</ph> if the column participates in a single or composite primary key.","pos":[2395,2480],"source":" This value is `true` if the column participates in a single or composite primary key."},{"content":"Otherwise, its value is <ph id=\"ph1\">`false`</ph>.|   |IsAutoIncrement|<ph id=\"ph2\">`true`</ph>: The column assigns values to new rows in fixed increments.","pos":[2481,2600],"source":" Otherwise, its value is `false`.|   |IsAutoIncrement|`true`: The column assigns values to new rows in fixed increments."},{"content":"<ph id=\"ph1\">`false`</ph>: The column does not assign values to new rows in fixed increments.","pos":[2601,2676],"source":"`false`: The column does not assign values to new rows in fixed increments."},{"content":"The default of this column is <ph id=\"ph1\">`false`</ph>.|   |BaseCatalogName|The name of the catalog in the data store that contains the column.","pos":[2677,2803],"source":" The default of this column is `false`.|   |BaseCatalogName|The name of the catalog in the data store that contains the column."},{"content":"<ph id=\"ph1\">`Null`</ph> if the base catalog name cannot be determined.","pos":[2804,2857],"source":"`Null` if the base catalog name cannot be determined."},{"content":"The default value for this column is a <ph id=\"ph1\">`null`</ph> value.|   |BaseSchemaName|This value is always <ph id=\"ph2\">`Null`</ph>.|   |BaseTableName|The name of the &lt;xref:System.Data.DataTable&gt;.|   |BaseColumnName|The name of the column in the &lt;xref:System.Data.DataTable&gt;.|   |AutoIncrementSeed|The value of the &lt;xref:System.Data.DataTable&gt;'s &lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt; property.|   |AutoIncrementStep|The value of the &lt;xref:System.Data.DataTable&gt;'s &lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt; property.|   |DefaultValue|The value of the &lt;xref:System.Data.DataColumn&gt;'s &lt;xref:System.Data.DataColumn.DefaultValue%2A&gt; property.|   |Expression|The expression string, if the current column is an expression column and all columns used in the expression belong to the same <ph id=\"ph3\">`T:System.Data.DataTable`</ph> that contains the expression column; otherwise <ph id=\"ph4\">`null`</ph>.|   |ColumnMapping|The &lt;xref:System.Data.MappingType&gt; value associated with the &lt;xref:System.Data.DataColumn&gt;.","pos":[2858,3818],"source":" The default value for this column is a `null` value.|   |BaseSchemaName|This value is always `Null`.|   |BaseTableName|The name of the <xref:System.Data.DataTable>.|   |BaseColumnName|The name of the column in the <xref:System.Data.DataTable>.|   |AutoIncrementSeed|The value of the <xref:System.Data.DataTable>'s <xref:System.Data.DataColumn.AutoIncrementSeed%2A> property.|   |AutoIncrementStep|The value of the <xref:System.Data.DataTable>'s <xref:System.Data.DataColumn.AutoIncrementStep%2A> property.|   |DefaultValue|The value of the <xref:System.Data.DataColumn>'s <xref:System.Data.DataColumn.DefaultValue%2A> property.|   |Expression|The expression string, if the current column is an expression column and all columns used in the expression belong to the same `T:System.Data.DataTable` that contains the expression column; otherwise `null`.|   |ColumnMapping|The <xref:System.Data.MappingType> value associated with the <xref:System.Data.DataColumn>."},{"content":"The type can be one of <ph id=\"ph1\">`Attribute`</ph>, <ph id=\"ph2\">`Element`</ph>, <ph id=\"ph3\">`Hidden`</ph>, or <ph id=\"ph4\">`SimpleContent`</ph>.","pos":[3819,3895],"source":" The type can be one of `Attribute`, `Element`, `Hidden`, or `SimpleContent`."},{"content":"The default value is <ph id=\"ph1\">`Element`</ph>.|   |BaseTableNamespace|The value of the &lt;xref:System.Data.DataTable&gt;'s &lt;xref:System.Data.DataTable.Namespace%2A&gt; property.|   |BaseColumnNamespace|The value of the &lt;xref:System.Data.DataColumn&gt;'s &lt;xref:System.Data.DataColumn.Namespace%2A&gt; property.|","pos":[3896,4177],"source":" The default value is `Element`.|   |BaseTableNamespace|The value of the <xref:System.Data.DataTable>'s <xref:System.Data.DataTable.Namespace%2A> property.|   |BaseColumnNamespace|The value of the <xref:System.Data.DataColumn>'s <xref:System.Data.DataColumn.Namespace%2A> property.|"}]},{"pos":[68936,69016],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that describes the column metadata.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.DataTable\"></xref> that describes the column metadata."},{"pos":[69197,69260],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is closed.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Data.DataTableReader\"></xref> is closed."},{"pos":[69643,69694],"content":"Gets the value of the specified column as a string.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the specified column as a string.","pos":[0,51]}]},{"pos":[69706,69817],"content":"Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Call &lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt; to see if there are null values before calling this method.","pos":[0,111],"source":"Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method."}]},{"pos":[70540,70569],"content":"The zero-based column ordinal","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal","pos":[0,29]}]},{"pos":[70627,70661],"content":"The value of the specified column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the specified column.","pos":[0,34]}]},{"pos":[70841,70939],"content":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index passed was outside the range of 0 to &lt;xref:System.Data.DataTableReader.FieldCount*&gt; - 1.","pos":[0,98],"source":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1."}]},{"pos":[71072,71128],"content":"An attempt was made to retrieve data from a deleted row.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt was made to retrieve data from a deleted row.","pos":[0,56]}]},{"pos":[71239,71347],"content":"An attempt was made to read or access a column in a closed <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An attempt was made to read or access a column in a closed <xref href=\"System.Data.DataTableReader\"></xref>."},{"pos":[71448,71495],"content":"The specified column does not contain a string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified column does not contain a string.","pos":[0,47]}]},{"pos":[71873,71933],"content":"Gets the value of the specified column in its native format.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the specified column in its native format.","pos":[0,60]}]},{"pos":[71945,72101],"content":"Although you can call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method, you do not have to do this.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Although you can call &lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt; to see if there are null values before calling this method, you do not have to do this.","pos":[0,156],"source":"Although you can call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method, you do not have to do this."}]},{"pos":[72912,72941],"content":"The zero-based column ordinal","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal","pos":[0,29]}]},{"pos":[72999,73136],"content":"The value of the specified column. This method returns <xref uid=\"langword_csharp_DBNull\" name=\"DBNull\" href=\"\"></xref> for null columns.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the specified column.","pos":[0,34]},{"content":"This method returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DBNull\" name=\"DBNull\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for null columns.","pos":[35,137],"source":" This method returns <xref uid=\"langword_csharp_DBNull\" name=\"DBNull\" href=\"\"></xref> for null columns."}]},{"pos":[73315,73413],"content":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index passed was outside the range of 0 to &lt;xref:System.Data.DataTableReader.FieldCount*&gt; - 1.","pos":[0,98],"source":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1."}]},{"pos":[73546,73602],"content":"An attempt was made to retrieve data from a deleted row.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt was made to retrieve data from a deleted row.","pos":[0,56]}]},{"pos":[73713,73821],"content":"An attempt was made to read or access columns in a closed <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> .","needQuote":true,"needEscape":true,"source":"An attempt was made to read or access columns in a closed <xref href=\"System.Data.DataTableReader\"></xref> ."},{"pos":[74219,74291],"content":"Populates an array of objects with the column values of the current row.","needQuote":true,"needEscape":true,"nodes":[{"content":"Populates an array of objects with the column values of the current row.","pos":[0,72]}]},{"pos":[74304,75109],"content":"For most applications, this method provides an efficient means for retrieving all columns, instead of retrieving each column individually. If your intent is to retrieve all the column values from a row within the <xref:System.Data.DataTableReader>, the `GetValues` method provides the most efficient solution.       You can pass an <xref:System.Object> array that contains fewer than the number of columns that are contained in the resulting row. Only the amount of data the `Object` array can hold is copied to the array. You can also pass an `Object` array whose length is more than the number of columns that are contained in the resulting row, in which case the additional array elements remains unchanged by the method call.       This method places `DBNull` in the output array for null columns.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"For most applications, this method provides an efficient means for retrieving all columns, instead of retrieving each column individually.","pos":[0,138]},{"content":"If your intent is to retrieve all the column values from a row within the &lt;xref:System.Data.DataTableReader&gt;, the <ph id=\"ph1\">`GetValues`</ph> method provides the most efficient solution.","pos":[139,309],"source":" If your intent is to retrieve all the column values from a row within the <xref:System.Data.DataTableReader>, the `GetValues` method provides the most efficient solution."},{"content":"You can pass an &lt;xref:System.Object&gt; array that contains fewer than the number of columns that are contained in the resulting row.","pos":[316,446],"source":"       You can pass an <xref:System.Object> array that contains fewer than the number of columns that are contained in the resulting row."},{"content":"Only the amount of data the <ph id=\"ph1\">`Object`</ph> array can hold is copied to the array.","pos":[447,522],"source":" Only the amount of data the `Object` array can hold is copied to the array."},{"content":"You can also pass an <ph id=\"ph1\">`Object`</ph> array whose length is more than the number of columns that are contained in the resulting row, in which case the additional array elements remains unchanged by the method call.","pos":[523,729],"source":" You can also pass an `Object` array whose length is more than the number of columns that are contained in the resulting row, in which case the additional array elements remains unchanged by the method call."},{"content":"This method places <ph id=\"ph1\">`DBNull`</ph> in the output array for null columns.","pos":[736,801],"source":"       This method places `DBNull` in the output array for null columns."}]},{"pos":[75831,75959],"content":"An array of &lt;xref:System.Object&gt; into which to copy the column values from the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An array of <xref:System.Object> into which to copy the column values from the <xref href=\"System.Data.DataTableReader\"></xref>."},{"pos":[76016,76066],"content":"The number of column values copied into the array.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of column values copied into the array.","pos":[0,50]}]},{"pos":[76246,76344],"content":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index passed was outside the range of 0 to &lt;xref:System.Data.DataTableReader.FieldCount*&gt; - 1.","pos":[0,98],"source":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1."}]},{"pos":[76477,76533],"content":"An attempt was made to retrieve data from a deleted row.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt was made to retrieve data from a deleted row.","pos":[0,56]}]},{"pos":[76644,76753],"content":"An attempt was made to read or access a column in a closed <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> .","needQuote":true,"needEscape":true,"source":"An attempt was made to read or access a column in a closed <xref href=\"System.Data.DataTableReader\"></xref> ."},{"pos":[77079,77194],"content":"Gets a value that indicates whether the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> contains one or more rows.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether the <xref href=\"System.Data.DataTableReader\"></xref> contains one or more rows."},{"pos":[77207,77771],"content":"The `HasRows` property returns information about the current result set. If the <xref:System.Data.DataTableReader> contains multiple result sets, you can examine the value of the `HasRows` property immediately after you call the <xref:System.Data.DataTableReader.NextResult%2A> method in order to determine whether the new result set contains rows.       Use the `HasRows` property to avoid the requirement to call the <xref:System.Data.DataTableReader.Read%2A> method of the <xref:System.Data.DataTableReader> if there are no rows within the current result set.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`HasRows`</ph> property returns information about the current result set.","pos":[0,72],"source":"The `HasRows` property returns information about the current result set."},{"content":"If the &lt;xref:System.Data.DataTableReader&gt; contains multiple result sets, you can examine the value of the <ph id=\"ph1\">`HasRows`</ph> property immediately after you call the &lt;xref:System.Data.DataTableReader.NextResult%2A&gt; method in order to determine whether the new result set contains rows.","pos":[73,348],"source":" If the <xref:System.Data.DataTableReader> contains multiple result sets, you can examine the value of the `HasRows` property immediately after you call the <xref:System.Data.DataTableReader.NextResult%2A> method in order to determine whether the new result set contains rows."},{"content":"Use the <ph id=\"ph1\">`HasRows`</ph> property to avoid the requirement to call the &lt;xref:System.Data.DataTableReader.Read%2A&gt; method of the &lt;xref:System.Data.DataTableReader&gt; if there are no rows within the current result set.","pos":[355,562],"source":"       Use the `HasRows` property to avoid the requirement to call the <xref:System.Data.DataTableReader.Read%2A> method of the <xref:System.Data.DataTableReader> if there are no rows within the current result set."}]},{"pos":[78581,78798],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> contains one or more rows; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Data.DataTableReader\"></xref> contains one or more rows; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[78972,79080],"content":"An attempt was made to retrieve information about a closed <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An attempt was made to retrieve information about a closed <xref href=\"System.Data.DataTableReader\"></xref>."},{"pos":[79411,79510],"content":"Gets a value that indicates whether the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is closed.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether the <xref href=\"System.Data.DataTableReader\"></xref> is closed."},{"pos":[79522,79764],"content":"&lt;xref:System.Data.DataTableReader.Close%2A&gt; is the only method and <ph id=\"ph1\">`IsClosed`</ph> and &lt;xref:System.Data.DataTableReader.RecordsAffected%2A&gt; are the only properties that can be accessed after the &lt;xref:System.Data.DataTableReader&gt; has been closed.","needQuote":true,"needEscape":true,"extradata":"MT","source":"<xref:System.Data.DataTableReader.Close%2A> is the only method and `IsClosed` and <xref:System.Data.DataTableReader.RecordsAffected%2A> are the only properties that can be accessed after the <xref:System.Data.DataTableReader> has been closed."},{"pos":[79885,80095],"content":"Returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is closed; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Data.DataTableReader\"></xref> is closed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[80540,80627],"content":"Gets a value that indicates whether the column contains non-existent or missing values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the column contains non-existent or missing values.","pos":[0,87]}]},{"pos":[80639,80877],"content":"Call this method to see if there are null column values before calling the typed get methods (for example, <xref:System.Data.DataTableReader.GetByte%2A>, <xref:System.Data.DataTableReader.GetChar%2A>, and so on) to avoid raising an error.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Call this method to see if there are null column values before calling the typed get methods (for example, &lt;xref:System.Data.DataTableReader.GetByte%2A&gt;, &lt;xref:System.Data.DataTableReader.GetChar%2A&gt;, and so on) to avoid raising an error.","pos":[0,238],"source":"Call this method to see if there are null column values before calling the typed get methods (for example, <xref:System.Data.DataTableReader.GetByte%2A>, <xref:System.Data.DataTableReader.GetChar%2A>, and so on) to avoid raising an error."}]},{"pos":[81595,81624],"content":"The zero-based column ordinal","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal","pos":[0,29]}]},{"pos":[81683,81901],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified column value is equivalent to <bpt id=\"p2\">&lt;xref href=\"System.DBNull\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified column value is equivalent to <xref href=\"System.DBNull\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[82080,82178],"content":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index passed was outside the range of 0 to &lt;xref:System.Data.DataTableReader.FieldCount*&gt; - 1.","pos":[0,98],"source":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1."}]},{"pos":[82311,82367],"content":"An attempt was made to retrieve data from a deleted row.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt was made to retrieve data from a deleted row.","pos":[0,56]}]},{"pos":[82478,82587],"content":"An attempt was made to read or access a column in a closed <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> .","needQuote":true,"needEscape":true,"source":"An attempt was made to read or access a column in a closed <xref href=\"System.Data.DataTableReader\"></xref> ."},{"pos":[82947,83032],"content":"Gets the value of the specified column in its native format given the column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the specified column in its native format given the column ordinal.","pos":[0,85]}]},{"pos":[83044,83186],"content":"This overload for <xref:System.Data.DataTableReader.Item%2A> behaves identically to the <xref:System.Data.DataTableReader.GetValue%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This overload for &lt;xref:System.Data.DataTableReader.Item%2A&gt; behaves identically to the &lt;xref:System.Data.DataTableReader.GetValue%2A&gt; method.","pos":[0,142],"source":"This overload for <xref:System.Data.DataTableReader.Item%2A> behaves identically to the <xref:System.Data.DataTableReader.GetValue%2A> method."}]},{"pos":[83865,83895],"content":"The zero-based column ordinal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]},{"pos":[83953,84008],"content":"The value of the specified column in its native format.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the specified column in its native format.","pos":[0,55]}]},{"pos":[84177,84275],"content":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index passed was outside the range of 0 to &lt;xref:System.Data.DataTableReader.FieldCount*&gt; - 1.","pos":[0,98],"source":"The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1."}]},{"pos":[84640,84722],"content":"Gets the value of the specified column in its native format given the column name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the specified column in its native format given the column name.","pos":[0,82]}]},{"pos":[84735,85131],"content":"A case-sensitive lookup is performed first. If it fails, a second case-insensitive search is made.       This method is kana-width insensitive.       This overloaded version of <xref:System.Data.DataTableReader.Item%2A> corresponds to calling the <xref:System.Data.DataTableReader.GetOrdinal%2A> method, and then subsequently calling the <xref:System.Data.DataTableReader.GetValue%2A> method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A case-sensitive lookup is performed first. If it fails, a second case-insensitive search is made.       This method is kana-width insensitive.       This overloaded version of <xref:System.Data.DataTableReader.Item%2A> corresponds to calling the <xref:System.Data.DataTableReader.GetOrdinal%2A> method, and then subsequently calling the <xref:System.Data.DataTableReader.GetValue%2A> method.","pos":[0,392],"nodes":[{"content":"A case-sensitive lookup is performed first.","pos":[0,43]},{"content":"If it fails, a second case-insensitive search is made.","pos":[44,98]},{"content":"This method is kana-width insensitive.","pos":[105,143]},{"content":"This overloaded version of &lt;xref:System.Data.DataTableReader.Item%2A&gt; corresponds to calling the &lt;xref:System.Data.DataTableReader.GetOrdinal%2A&gt; method, and then subsequently calling the &lt;xref:System.Data.DataTableReader.GetValue%2A&gt; method.","pos":[150,392],"source":"       This overloaded version of <xref:System.Data.DataTableReader.Item%2A> corresponds to calling the <xref:System.Data.DataTableReader.GetOrdinal%2A> method, and then subsequently calling the <xref:System.Data.DataTableReader.GetValue%2A> method."}]}]},{"pos":[85848,85871],"content":"The name of the column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the column.","pos":[0,23]}]},{"pos":[85929,85984],"content":"The value of the specified column in its native format.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the specified column in its native format.","pos":[0,55]}]},{"pos":[86139,86185],"content":"The name specified is not a valid column name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name specified is not a valid column name.","pos":[0,46]}]},{"pos":[86318,86374],"content":"An attempt was made to retrieve data from a deleted row.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt was made to retrieve data from a deleted row.","pos":[0,56]}]},{"pos":[86485,86593],"content":"An attempt was made to read or access a column in a closed <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An attempt was made to read or access a column in a closed <xref href=\"System.Data.DataTableReader\"></xref>."},{"pos":[86938,87031],"content":"Advances the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to the next result set, if any.","needQuote":true,"needEscape":true,"source":"Advances the <xref href=\"System.Data.DataTableReader\"></xref> to the next result set, if any."},{"pos":[87044,87377],"content":"Used to process multiple results that can be generated by creating a <xref:System.Data.DataTableReader> over a <xref:System.Data.DataSet> that contains two or more tables, or an array that contains two or more <xref:System.Data.DataTable> instances.       A new <xref:System.Data.DataTableReader> is positioned on the first result.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Used to process multiple results that can be generated by creating a <xref:System.Data.DataTableReader> over a <xref:System.Data.DataSet> that contains two or more tables, or an array that contains two or more <xref:System.Data.DataTable> instances.       A new <xref:System.Data.DataTableReader> is positioned on the first result.","pos":[0,331],"nodes":[{"content":"Used to process multiple results that can be generated by creating a &lt;xref:System.Data.DataTableReader&gt; over a &lt;xref:System.Data.DataSet&gt; that contains two or more tables, or an array that contains two or more &lt;xref:System.Data.DataTable&gt; instances.","pos":[0,249],"source":"Used to process multiple results that can be generated by creating a <xref:System.Data.DataTableReader> over a <xref:System.Data.DataSet> that contains two or more tables, or an array that contains two or more <xref:System.Data.DataTable> instances."},{"content":"A new &lt;xref:System.Data.DataTableReader&gt; is positioned on the first result.","pos":[256,331],"source":"       A new <xref:System.Data.DataTableReader> is positioned on the first result."}]}]},{"pos":[88469,88636],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if there was another result set; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if there was another result set; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[88813,88910],"content":"An attempt was made to navigate within a closed <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An attempt was made to navigate within a closed <xref href=\"System.Data.DataTableReader\"></xref>."},{"pos":[89225,89306],"content":"Advances the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to the next record.","needQuote":true,"needEscape":true,"source":"Advances the <xref href=\"System.Data.DataTableReader\"></xref> to the next record."},{"pos":[89318,89469],"content":"The default position of the <xref:System.Data.DataTableReader> is before the first record. Therefore, you must call `Read` to start accessing any data.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default position of the &lt;xref:System.Data.DataTableReader&gt; is before the first record.","pos":[0,90],"source":"The default position of the <xref:System.Data.DataTableReader> is before the first record."},{"content":"Therefore, you must call <ph id=\"ph1\">`Read`</ph> to start accessing any data.","pos":[91,151],"source":" Therefore, you must call `Read` to start accessing any data."}]},{"pos":[89999,90167],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if there was another row to read; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if there was another row to read; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[90338,90447],"content":"An attempt was made to read or access a column in a closed <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> .","needQuote":true,"needEscape":true,"source":"An attempt was made to read or access a column in a closed <xref href=\"System.Data.DataTableReader\"></xref> ."},{"pos":[90813,90901],"content":"Gets the number of rows inserted, changed, or deleted by execution of the SQL statement.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of rows inserted, changed, or deleted by execution of the SQL statement.","pos":[0,88]}]},{"pos":[91026,91131],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTableReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> does not support this property and always returns 0.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Data.DataTableReader\"></xref> does not support this property and always returns 0."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.DataTableReader\n  id: DataTableReader\n  children:\n  - System.Data.DataTableReader.#ctor(System.Data.DataTable)\n  - System.Data.DataTableReader.#ctor(System.Data.DataTable[])\n  - System.Data.DataTableReader.Close\n  - System.Data.DataTableReader.Depth\n  - System.Data.DataTableReader.FieldCount\n  - System.Data.DataTableReader.GetBoolean(System.Int32)\n  - System.Data.DataTableReader.GetByte(System.Int32)\n  - System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)\n  - System.Data.DataTableReader.GetChar(System.Int32)\n  - System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)\n  - System.Data.DataTableReader.GetDataTypeName(System.Int32)\n  - System.Data.DataTableReader.GetDateTime(System.Int32)\n  - System.Data.DataTableReader.GetDecimal(System.Int32)\n  - System.Data.DataTableReader.GetDouble(System.Int32)\n  - System.Data.DataTableReader.GetEnumerator\n  - System.Data.DataTableReader.GetFieldType(System.Int32)\n  - System.Data.DataTableReader.GetFloat(System.Int32)\n  - System.Data.DataTableReader.GetGuid(System.Int32)\n  - System.Data.DataTableReader.GetInt16(System.Int32)\n  - System.Data.DataTableReader.GetInt32(System.Int32)\n  - System.Data.DataTableReader.GetInt64(System.Int32)\n  - System.Data.DataTableReader.GetName(System.Int32)\n  - System.Data.DataTableReader.GetOrdinal(System.String)\n  - System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)\n  - System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)\n  - System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])\n  - System.Data.DataTableReader.GetSchemaTable\n  - System.Data.DataTableReader.GetString(System.Int32)\n  - System.Data.DataTableReader.GetValue(System.Int32)\n  - System.Data.DataTableReader.GetValues(System.Object[])\n  - System.Data.DataTableReader.HasRows\n  - System.Data.DataTableReader.IsClosed\n  - System.Data.DataTableReader.IsDBNull(System.Int32)\n  - System.Data.DataTableReader.Item(System.Int32)\n  - System.Data.DataTableReader.Item(System.String)\n  - System.Data.DataTableReader.NextResult\n  - System.Data.DataTableReader.Read\n  - System.Data.DataTableReader.RecordsAffected\n  langs:\n  - csharp\n  name: DataTableReader\n  nameWithType: DataTableReader\n  fullName: System.Data.DataTableReader\n  type: Class\n  summary: The DataTableReader obtains the contents of one or more <xref href=\"System.Data.DataTable\"></xref> objects in the form of one or more read-only, forward-only result sets.\n  remarks: \"The DataTableReader works much like any other data reader, such as the <xref:System.Data.SqlClient.SqlDataReader>, except that the DataTableReader provides for iterating over rows in a <xref:System.Data.DataTable>. In other words, it provides for iterating over rows in a cache. The cached data can be modified while the DataTableReader is active, and the reader automatically maintains its position.  \\n  \\n When you create a DataTableReader from a <xref:System.Data.DataTable>, the resulting DataTableReader object contains one result set with the same data as the <xref:System.Data.DataTable> from which it was created, except for any rows that have been marked as deleted. The columns appear in the same order as in the original <xref:System.Data.DataTable>. The structure of the returned result is identical in schema and data to the original <xref:System.Data.DataTable>. A DataTableReader that was created by calling the <xref:System.Data.DataSet.GetDataReader%2A> method of a <xref:System.Data.DataSet> object contains multiple result sets if the <xref:System.Data.DataSet>contains more than one table. The results are in the same sequence as the <xref:System.Data.DataTable>objects in the <xref:System.Data.DataTableCollection> of the <xref:System.Data.DataSet> object.  \\n  \\n The returned result set contains only the current version of each <xref:System.Data.DataRow>; rows that are marked for deletion are skipped.  \\n  \\n The `DataTableReader` provides a stable iterator; that is, the contents of the `DataTableReader` are not invalidated if the size of the underlying collection is modified during iteration. For example, if one or more rows in the <xref:System.Data.DataTable.Rows%2A> collection are deleted or removed during iteration, the current position within the `DataTableReader` is maintained appropriately and it does not invalidate the iterator.\"\n  syntax:\n    content: 'public sealed class DataTableReader : System.Data.Common.DbDataReader'\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.Data.Common.DbDataReader\n  implements: []\n  inheritedMembers:\n  - System.Data.Common.DbDataReader.Dispose\n  - System.Data.Common.DbDataReader.Dispose(System.Boolean)\n  - System.Data.Common.DbDataReader.GetData(System.Int32)\n  - System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)\n  - System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)\n  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)\n  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)\n  - System.Data.Common.DbDataReader.GetStream(System.Int32)\n  - System.Data.Common.DbDataReader.GetTextReader(System.Int32)\n  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)\n  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)\n  - System.Data.Common.DbDataReader.NextResultAsync\n  - System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)\n  - System.Data.Common.DbDataReader.ReadAsync\n  - System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)\n  - System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)\n  - System.Data.Common.DbDataReader.VisibleFieldCount\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  platform:\n  - net462\n- uid: System.Data.DataTableReader.#ctor(System.Data.DataTable)\n  id: '#ctor(System.Data.DataTable)'\n  parent: System.Data.DataTableReader\n  langs:\n  - csharp\n  name: DataTableReader(DataTable)\n  nameWithType: DataTableReader.DataTableReader(DataTable)\n  fullName: System.Data.DataTableReader.DataTableReader(DataTable)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Initializes a new instance of the <xref href=\"System.Data.DataTableReader\"></xref> class by using data from the supplied <xref href=\"System.Data.DataTable\"></xref>.\n  syntax:\n    content: public DataTableReader (System.Data.DataTable dataTable);\n    parameters:\n    - id: dataTable\n      type: System.Data.DataTable\n      description: The <xref href=\"System.Data.DataTable\"></xref> from which the new <xref href=\"System.Data.DataTableReader\"></xref> obtains its result set.\n  overload: System.Data.DataTableReader.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataTableReader.#ctor(System.Data.DataTable[])\n  id: '#ctor(System.Data.DataTable[])'\n  parent: System.Data.DataTableReader\n  langs:\n  - csharp\n  name: DataTableReader(DataTable[])\n  nameWithType: DataTableReader.DataTableReader(DataTable[])\n  fullName: System.Data.DataTableReader.DataTableReader(DataTable[])\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Initializes a new instance of the <xref href=\"System.Data.DataTableReader\"></xref> class using the supplied array of <xref href=\"System.Data.DataTable\"></xref> objects.\n  remarks: If you must create a <xref:System.Data.DataTableReader> based on all or a subset of the tables within a specific <xref:System.Data.Dataset>, call the `DataSet`'s <xref:System.Data.DataSet.GetDataReader%2A> method. If you want to create a new <xref:System.Data.DataTableReader> instance based on a group of `DataTable` instances that are not otherwise related, use this constructor. You can also take advantage of this constructor to rearrange the ordering of the `DataTables` within the `DataTableReader`, if their ordering within their source `DataSet` does not meet your needs.\n  example:\n  - \"In the following example, the TestConstructor method creates two <xref:System.Data.DataTable>instances. In order to demonstrate this constructor for the <xref:System.Data.DataTableReader> class, the sample creates a new `DataTableReader` based on an array that contains the two `DataTables`, and performs a simple operation, printing the contents from the first few columns to the console window. In order to test this application, create a new Console application, and paste the sample code into the newly created file.  \\n  \\n [!code-vb[DataWorks DataTableReader.ctor#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_20_1.vb)]\\n [!code-cs[DataWorks DataTableReader.ctor#1](~/add/codesnippet/csharp/m-system.data.datatabler_20_1.cs)]  \\n  \\n The Console window displays the following results:  \\n  \\n```  \\n1 Mary  \\n2 Andy  \\n3 Peter  \\n4 Russ  \\n1 Wireless Network Card  \\n2 Hard Drive  \\n3 Monitor  \\n4 CPU  \\n```\"\n  syntax:\n    content: public DataTableReader (System.Data.DataTable[] dataTables);\n    parameters:\n    - id: dataTables\n      type: System.Data.DataTable[]\n      description: The array of <xref href=\"System.Data.DataTable\"></xref> objects that supplies the results for the new <xref href=\"System.Data.DataTableReader\"></xref> object.\n  overload: System.Data.DataTableReader.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataTableReader.Close\n  id: Close\n  parent: System.Data.DataTableReader\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: DataTableReader.Close()\n  fullName: System.Data.DataTableReader.Close()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Closes the current <xref href=\"System.Data.DataTableReader\"></xref>.\n  remarks: Calling `Close()` on a closed `DataTableReader` object does not raise an error.\n  syntax:\n    content: public override void Close ();\n    parameters: []\n  overload: System.Data.DataTableReader.Close*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataTableReader.Depth\n  id: Depth\n  parent: System.Data.DataTableReader\n  langs:\n  - csharp\n  name: Depth\n  nameWithType: DataTableReader.Depth\n  fullName: System.Data.DataTableReader.Depth\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: The depth of nesting for the current row of the <xref href=\"System.Data.DataTableReader\"></xref>.\n  remarks: '`DataTableReader` does not support nesting. The `Depth` property always returns zero.'\n  syntax:\n    content: public override int Depth { get; }\n    return:\n      type: System.Int32\n      description: The depth of nesting for the current row; always zero.\n  overload: System.Data.DataTableReader.Depth*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataTableReader.FieldCount\n  id: FieldCount\n  parent: System.Data.DataTableReader\n  langs:\n  - csharp\n  name: FieldCount\n  nameWithType: DataTableReader.FieldCount\n  fullName: System.Data.DataTableReader.FieldCount\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Returns the number of columns in the current row.\n  syntax:\n    content: public override int FieldCount { get; }\n    return:\n      type: System.Int32\n      description: When not positioned in a valid result set, 0; otherwise the number of columns in the current row.\n  overload: System.Data.DataTableReader.FieldCount*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to retrieve the field count in a closed <xref href=\"System.Data.DataTableReader\"></xref>.\n  platform:\n  - net462\n- uid: System.Data.DataTableReader.GetBoolean(System.Int32)\n  id: GetBoolean(System.Int32)\n  parent: System.Data.DataTableReader\n  langs:\n  - csharp\n  name: GetBoolean(Int32)\n  nameWithType: DataTableReader.GetBoolean(Int32)\n  fullName: System.Data.DataTableReader.GetBoolean(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets the value of the specified column as a <xref:System.Boolean>.\n  remarks: \"No conversions are performed; therefore the data retrieved must either already be a Boolean or coercible to a Boolean, or an exception is generated.  \\n  \\n Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.\"\n  example:\n  - \"The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\\\<NULL>. If the data within the column is not the correct type, the example displays an error message for each row.  \\n  \\n [!code-vb[DataWorks DataTableReader.GetBoolean#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_0_1.vb)]\\n [!code-cs[DataWorks DataTableReader.GetBoolean#1](~/add/codesnippet/csharp/m-system.data.datatabler_0_1.cs)]\"\n  syntax:\n    content: public override bool GetBoolean (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Boolean\n      description: The value of the specified column.\n  overload: System.Data.DataTableReader.GetBoolean*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.\n  - type: System.Data.DeletedRowInaccessibleException\n    commentId: T:System.Data.DeletedRowInaccessibleException\n    description: An attempt was made to retrieve data from a deleted row.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to read or access a column in a closed <xref href=\"System.Data.DataTableReader\"></xref>.\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified column does not contain a <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Data.DataTableReader.GetByte(System.Int32)\n  id: GetByte(System.Int32)\n  parent: System.Data.DataTableReader\n  langs:\n  - csharp\n  name: GetByte(Int32)\n  nameWithType: DataTableReader.GetByte(Int32)\n  fullName: System.Data.DataTableReader.GetByte(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets the value of the specified column as a byte.\n  remarks: \"No conversions are performed; therefore the data retrieved must already be a byte or coercible to a byte.  \\n  \\n Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.\"\n  example:\n  - \"The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\\\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \\n  \\n [!code-vb[DataWorks DataTableReader.GetByte#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_8_1.vb)]\\n [!code-cs[DataWorks DataTableReader.GetByte#1](~/add/codesnippet/csharp/m-system.data.datatabler_8_1.cs)]\"\n  syntax:\n    content: public override byte GetByte (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Byte\n      description: The value of the specified column.\n  overload: System.Data.DataTableReader.GetByte*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.\n  - type: System.Data.DeletedRowInaccessibleException\n    commentId: T:System.Data.DeletedRowInaccessibleException\n    description: An attempt was made to retrieve data from a deleted row.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to read or access a column in a closed <xref uid=\"langword_csharp_DataTableReader\" name=\"DataTableReader\" href=\"\"></xref>.\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified column does not contain a byte.\n  platform:\n  - net462\n- uid: System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)\n  id: GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)\n  parent: System.Data.DataTableReader\n  langs:\n  - csharp\n  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)\n  nameWithType: DataTableReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)\n  fullName: System.Data.DataTableReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Reads a stream of bytes starting at the specified column offset into the buffer as an array starting at the specified buffer offset.\n  remarks: \"`GetBytes` returns the number of available bytes in the field. Most of the time this is the exact length of the field. However, the number returned may be less than the true length of the field if `GetBytes` has already been used to obtain bytes from the field. This may be the case, for example, when the <xref:System.Data.DataTableReader> is reading a large data structure into a buffer  \\n  \\n If you pass a buffer that is `null` (`Nothing` in Visual Basic), `GetBytes` returns the length of the entire field in bytes, not the remaining size based on the buffer offset parameter.  \\n  \\n No conversions are performed; therefore the data retrieved must already be a byte array or coercible to a byte array.\"\n  example:\n  - \"The following example creates a <xref:System.Data.DataTableReader> based on data in the AdventureWorks sample database, and saves each image retrieved to a separate file in the C:\\\\ folder. In order to test this application, create a new Console application, reference the System.Drawing.dll assembly, and paste the sample code into the newly created file.  \\n  \\n [!code-cs[DataWorks DataTableReader.GetBytes#1](~/add/codesnippet/csharp/ff921727-bdbe-4741-b853-_1.cs)]\\n [!code-vb[DataWorks DataTableReader.GetBytes#1](~/add/codesnippet/visualbasic/ff921727-bdbe-4741-b853-_1.vb)]\"\n  syntax:\n    content: public override long GetBytes (int ordinal, long dataIndex, byte[] buffer, int bufferIndex, int length);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    - id: dataIndex\n      type: System.Int64\n      description: The index within the field from which to start the read operation.\n    - id: buffer\n      type: System.Byte[]\n      description: The buffer into which to read the stream of bytes.\n    - id: bufferIndex\n      type: System.Int32\n      description: The index within the buffer at which to start placing the data.\n    - id: length\n      type: System.Int32\n      description: The maximum length to copy into the buffer.\n    return:\n      type: System.Int64\n      description: The actual number of bytes read.\n  overload: System.Data.DataTableReader.GetBytes*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.\n  - type: System.Data.DeletedRowInaccessibleException\n    commentId: T:System.Data.DeletedRowInaccessibleException\n    description: An attempt was made to retrieve data from a deleted row.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to read or access a column in a closed <xref uid=\"langword_csharp_DataTableReader\" name=\"DataTableReader\" href=\"\"></xref>.\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified column does not contain a byte array.\n  platform:\n  - net462\n- uid: System.Data.DataTableReader.GetChar(System.Int32)\n  id: GetChar(System.Int32)\n  parent: System.Data.DataTableReader\n  langs:\n  - csharp\n  name: GetChar(Int32)\n  nameWithType: DataTableReader.GetChar(Int32)\n  fullName: System.Data.DataTableReader.GetChar(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets the value of the specified column as a character.\n  remarks: \"No conversions are performed; therefore the data retrieved must already be a character or coercible to a character.  \\n  \\n Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.\"\n  example:\n  - \"The following example displays the contents of the column numbered 2 within the passed-in DataTableReader. If the value the column within a particular row is null, the code displays the text \\\\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \\n  \\n [!code-vb[DataWorks DataTableReader.GetChar#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_16_1.vb)]\\n [!code-cs[DataWorks DataTableReader.GetChar#1](~/add/codesnippet/csharp/m-system.data.datatabler_16_1.cs)]\"\n  syntax:\n    content: public override char GetChar (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Char\n      description: The value of the column.\n  overload: System.Data.DataTableReader.GetChar*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.\n  - type: System.Data.DeletedRowInaccessibleException\n    commentId: T:System.Data.DeletedRowInaccessibleException\n    description: An attempt was made to retrieve data from a deleted row.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to read or access a column in a closed <xref uid=\"langword_csharp_DataTableReader\" name=\"DataTableReader\" href=\"\"></xref>.\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified field does not contain a character.\n  platform:\n  - net462\n- uid: System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)\n  id: GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)\n  parent: System.Data.DataTableReader\n  langs:\n  - csharp\n  name: GetChars(Int32,Int64,Char[],Int32,Int32)\n  nameWithType: DataTableReader.GetChars(Int32,Int64,Char[],Int32,Int32)\n  fullName: System.Data.DataTableReader.GetChars(Int32,Int64,Char[],Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Returns the value of the specified column as a character array.\n  remarks: \"`GetChars` returns the number of available characters in the field. Most of the time this is the exact length of the field. However, the number returned may be less than the true length of the field if `GetChars` has already been used to obtain characters from the field.  \\n  \\n The actual number of characters read can be less than the requested length, if the end of the field is reached. If you pass a buffer that is null (`Nothing` in Visual Basic), `GetChars` returns the length of the entire field in characters, not the remaining size based on the buffer offset parameter.  \\n  \\n No conversions are performed; therefore the data to be retrieved must already be a character array or coercible to a character array.\"\n  example:\n  - \"The following example demonstrates the `GetChars` method. The `TestGetChars` method expects to be passed a `DataTableReader` filled with two columns of data: a file name in the first column, and an array of characters in the second. In addition, `TestGetChars` lets you specify the buffer size to be used as it reads the data from the character array in the `DataTableReader`. `TestGetChars` creates a file corresponding to each row of data in the `DataTableReader`, using the supplied data in the first column of the `DataTableReader` as the file name.  \\n  \\n This procedure demonstrates the use of the `GetChars` method reading data that was stored in the `DataTable` as a character array. Any other type of data causes the `GetChars` method to throw an `InvalidCastException`.  \\n  \\n [!code-cs[DataWorks DataTableReader.GetChars#1](~/add/codesnippet/csharp/299b411e-96a3-40b6-89fc-_1.cs)]\\n [!code-vb[DataWorks DataTableReader.GetChars#1](~/add/codesnippet/visualbasic/299b411e-96a3-40b6-89fc-_1.vb)]\"\n  syntax:\n    content: public override long GetChars (int ordinal, long dataIndex, char[] buffer, int bufferIndex, int length);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    - id: dataIndex\n      type: System.Int64\n      description: The index within the field from which to start the read operation.\n    - id: buffer\n      type: System.Char[]\n      description: The buffer into which to read the stream of chars.\n    - id: bufferIndex\n      type: System.Int32\n      description: The index within the buffer at which to start placing the data.\n    - id: length\n      type: System.Int32\n      description: The maximum length to copy into the buffer.\n    return:\n      type: System.Int64\n      description: The actual number of characters read.\n  overload: System.Data.DataTableReader.GetChars*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.\n  - type: System.Data.DeletedRowInaccessibleException\n    commentId: T:System.Data.DeletedRowInaccessibleException\n    description: An attempt was made to retrieve data from a deleted row.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to read or access a column in a closed <xref uid=\"langword_csharp_DataTableReader\" name=\"DataTableReader\" href=\"\"></xref>.\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified column does not contain a character array.\n  platform:\n  - net462\n- uid: System.Data.DataTableReader.GetDataTypeName(System.Int32)\n  id: GetDataTypeName(System.Int32)\n  parent: System.Data.DataTableReader\n  langs:\n  - csharp\n  name: GetDataTypeName(Int32)\n  nameWithType: DataTableReader.GetDataTypeName(Int32)\n  fullName: System.Data.DataTableReader.GetDataTypeName(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets a string representing the data type of the specified column.\n  remarks: The GetDataTypeName method always returns the type of the underlying <xref:System.Data.DataColumn> instead of a provider-specific type.\n  example:\n  - \"The following console application displays a list of fields and their type names from a simple <xref:System.Data.DataTable>:  \\n  \\n [!code-vb[DataWorks DataTableReader.GetDataTypeName#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_10_1.vb)]\\n [!code-cs[DataWorks DataTableReader.GetDataTypeName#1](~/add/codesnippet/csharp/m-system.data.datatabler_10_1.cs)]  \\n  \\n The Console window displays the following results:  \\n  \\n```  \\nID: Int32  \\nName: String  \\n```\"\n  syntax:\n    content: public override string GetDataTypeName (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.String\n      description: A string representing the column's data type.\n  overload: System.Data.DataTableReader.GetDataTypeName*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to read or access a column in a closed <xref href=\"System.Data.DataTableReader\"></xref>.\n  platform:\n  - net462\n- uid: System.Data.DataTableReader.GetDateTime(System.Int32)\n  id: GetDateTime(System.Int32)\n  parent: System.Data.DataTableReader\n  langs:\n  - csharp\n  name: GetDateTime(Int32)\n  nameWithType: DataTableReader.GetDateTime(Int32)\n  fullName: System.Data.DataTableReader.GetDateTime(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets the value of the specified column as a <xref:System.DateTime> object.\n  remarks: \"No conversions are performed; therefore the data retrieved must already be a <xref:System.DateTime> or coercible to a `DataTime`.  \\n  \\n Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.\"\n  example:\n  - \"The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\\\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \\n  \\n [!code-vb[DataWorks DataTableReader.GetDateTime#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_23_1.vb)]\\n [!code-cs[DataWorks DataTableReader.GetDateTime#1](~/add/codesnippet/csharp/m-system.data.datatabler_23_1.cs)]\"\n  syntax:\n    content: public override DateTime GetDateTime (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.DateTime\n      description: The value of the specified column.\n  overload: System.Data.DataTableReader.GetDateTime*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.\n  - type: System.Data.DeletedRowInaccessibleException\n    commentId: T:System.Data.DeletedRowInaccessibleException\n    description: An attempt was made to retrieve data from a deleted row.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to read or access a column in a closed <xref uid=\"langword_csharp_DataTableReader\" name=\"DataTableReader\" href=\"\"></xref>.\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified column does not contain a DateTime value.\n  platform:\n  - net462\n- uid: System.Data.DataTableReader.GetDecimal(System.Int32)\n  id: GetDecimal(System.Int32)\n  parent: System.Data.DataTableReader\n  langs:\n  - csharp\n  name: GetDecimal(Int32)\n  nameWithType: DataTableReader.GetDecimal(Int32)\n  fullName: System.Data.DataTableReader.GetDecimal(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets the value of the specified column as a <xref:System.Decimal>.\n  remarks: \"No conversions are performed; therefore the data retrieved must already be a <xref:System.Decimal> or coercible to a `Decimal`.  \\n  \\n Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.\"\n  example:\n  - \"The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\\\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \\n  \\n [!code-cs[DataWorks DataTableReader.GetDecimal#1](~/add/codesnippet/csharp/m-system.data.datatabler_4_1.cs)]\\n [!code-vb[DataWorks DataTableReader.GetDecimal#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_4_1.vb)]\"\n  syntax:\n    content: public override decimal GetDecimal (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Decimal\n      description: The value of the specified column.\n  overload: System.Data.DataTableReader.GetDecimal*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.\n  - type: System.Data.DeletedRowInaccessibleException\n    commentId: T:System.Data.DeletedRowInaccessibleException\n    description: An attempt was made to retrieve data from a deleted row.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to read or access a column in a closed <xref uid=\"langword_csharp_DataTableReader\" name=\"DataTableReader\" href=\"\"></xref>.\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified column does not contain a <xref uid=\"langword_csharp_Decimal\" name=\"Decimal\" href=\"\"></xref> value.\n  platform:\n  - net462\n- uid: System.Data.DataTableReader.GetDouble(System.Int32)\n  id: GetDouble(System.Int32)\n  parent: System.Data.DataTableReader\n  langs:\n  - csharp\n  name: GetDouble(Int32)\n  nameWithType: DataTableReader.GetDouble(Int32)\n  fullName: System.Data.DataTableReader.GetDouble(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets the value of the column as a double-precision floating point number.\n  remarks: \"No conversions are performed; therefore the data retrieved must already be a double-precision floating point number or must be coercible to a double-precision floating point number.  \\n  \\n Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.\"\n  example:\n  - \"The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\\\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \\n  \\n [!code-cs[DataWorks DataTableReader.GetDouble#1](~/add/codesnippet/csharp/m-system.data.datatabler_19_1.cs)]\\n [!code-vb[DataWorks DataTableReader.GetDouble#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_19_1.vb)]\"\n  syntax:\n    content: public override double GetDouble (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based ordinal of the column.\n    return:\n      type: System.Double\n      description: The value of the specified column.\n  overload: System.Data.DataTableReader.GetDouble*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.\n  - type: System.Data.DeletedRowInaccessibleException\n    commentId: T:System.Data.DeletedRowInaccessibleException\n    description: An attempt was made to retrieve data from a deleted row.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to read or access a column in a closed <xref uid=\"langword_csharp_DataTableReader\" name=\"DataTableReader\" href=\"\"></xref>.\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified column does not contain a double-precision floating point number.\n  platform:\n  - net462\n- uid: System.Data.DataTableReader.GetEnumerator\n  id: GetEnumerator\n  parent: System.Data.DataTableReader\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: DataTableReader.GetEnumerator()\n  fullName: System.Data.DataTableReader.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Returns an enumerator that can be used to iterate through the item collection.\n  remarks: \"Enumerators only allow for reading the data in the <xref:System.Data.DataTableReader>. Enumerators cannot be used to modify the underlying collection.  \\n  \\n At first, the enumerator is positioned before the first element in the collection. At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception. Therefore, you must call `MoveNext` to advance the enumerator to the first element of the collection before reading the value of `Current`.  \\n  \\n `Current` returns a <xref:System.Data.Common.DbDataRecord>, and returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. `MoveNext` sets `Current` to the next element.  \\n  \\n After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling `MoveNext` returns false. If the last call to `MoveNext` returned `false`, calling `Current` throws an exception. In addition, because the <xref:System.Data.DataTableReader> provides forward-only access to its data, calling the <xref:System.Collections.IEnumerator.Reset%2A> method of the IEnumerator throws a <xref:System.NotSupportedException>.  \\n  \\n The <xref:System.Data.DataTableReader> provides a stable enumerator. This means that even if row deletions or additions occur within the underlying data, the enumerator returned by a call to GetEnumerator is still valid.\"\n  example:\n  - \"The following example demonstrates the use of the GetEnumerator method. This includes the behavior of the enumerator when rows are deleted from the underlying <xref:System.Data.DataTable> while the enumerator is active.  \\n  \\n [!code-vb[DataWorks DataTableReader.GetEnumerator#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_7_1.vb)]\\n [!code-cs[DataWorks DataTableReader.GetEnumerator#1](~/add/codesnippet/csharp/m-system.data.datatabler_7_1.cs)]  \\n  \\n The procedure displays the following text in the Console window:  \\n  \\n```  \\nPeter  \\nMary  \\nRuss  \\n```\"\n  syntax:\n    content: public override System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref:System.Collections.IEnumerator> object that represents the item collection.\n  overload: System.Data.DataTableReader.GetEnumerator*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to read or access a column in a closed <xref href=\"System.Data.DataTableReader\"></xref>.\n  platform:\n  - net462\n- uid: System.Data.DataTableReader.GetFieldType(System.Int32)\n  id: GetFieldType(System.Int32)\n  parent: System.Data.DataTableReader\n  langs:\n  - csharp\n  name: GetFieldType(Int32)\n  nameWithType: DataTableReader.GetFieldType(Int32)\n  fullName: System.Data.DataTableReader.GetFieldType(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets the <xref:System.Type> that is the data type of the object.\n  remarks: ''\n  example:\n  - \"Call the following procedure, passing in a <xref:System.Data.DataTableReader> instance in order to display a list of all the fields and the full name for each type in the Console window.  \\n  \\n [!code-cs[DataWorks DataTableReader.GetFieldType#1](~/add/codesnippet/csharp/m-system.data.datatabler_13_1.cs)]\\n [!code-vb[DataWorks DataTableReader.GetFieldType#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_13_1.vb)]\"\n  syntax:\n    content: public override Type GetFieldType (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Type\n      description: The <xref:System.Type> that is the data type of the object.\n  overload: System.Data.DataTableReader.GetFieldType*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to read or access a column in a closed <xref href=\"System.Data.DataTableReader\"></xref> .\n  platform:\n  - net462\n- uid: System.Data.DataTableReader.GetFloat(System.Int32)\n  id: GetFloat(System.Int32)\n  parent: System.Data.DataTableReader\n  langs:\n  - csharp\n  name: GetFloat(Int32)\n  nameWithType: DataTableReader.GetFloat(Int32)\n  fullName: System.Data.DataTableReader.GetFloat(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets the value of the specified column as a single-precision floating point number.\n  remarks: \"No conversions are performed; therefore the data retrieved must already be a single-precision floating point number or must be coercible to a single-precision floating point number.  \\n  \\n Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.\"\n  example:\n  - \"The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\\\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \\n  \\n [!code-cs[DataWorks DataTableReader.GetFloat#1](~/add/codesnippet/csharp/m-system.data.datatabler_11_1.cs)]\\n [!code-vb[DataWorks DataTableReader.GetFloat#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_11_1.vb)]\"\n  syntax:\n    content: public override float GetFloat (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Single\n      description: The value of the column.\n  overload: System.Data.DataTableReader.GetFloat*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.\n  - type: System.Data.DeletedRowInaccessibleException\n    commentId: T:System.Data.DeletedRowInaccessibleException\n    description: An attempt was made to retrieve data from a deleted row.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to read or access a column in a closed <xref href=\"System.Data.DataTableReader\"></xref>.\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified column does not contain a single-precision floating point number.\n  platform:\n  - net462\n- uid: System.Data.DataTableReader.GetGuid(System.Int32)\n  id: GetGuid(System.Int32)\n  parent: System.Data.DataTableReader\n  langs:\n  - csharp\n  name: GetGuid(Int32)\n  nameWithType: DataTableReader.GetGuid(Int32)\n  fullName: System.Data.DataTableReader.GetGuid(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets the value of the specified column as a globally-unique identifier (GUID).\n  remarks: \"No conversions are performed; therefore the data retrieved must already be a <xref:System.Guid> or coercible to a `Guid`.  \\n  \\n Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.\"\n  example:\n  - \"The following example displays the contents of the column numbered 2 within the passed-in DataTableReader. If the value the column within a particular row is null, the code displays the text \\\\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \\n  \\n [!code-vb[DataWorks DataTableReader.GetGuid#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_2_1.vb)]\\n [!code-cs[DataWorks DataTableReader.GetGuid#1](~/add/codesnippet/csharp/m-system.data.datatabler_2_1.cs)]\"\n  syntax:\n    content: public override Guid GetGuid (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Guid\n      description: The value of the specified column.\n  overload: System.Data.DataTableReader.GetGuid*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.\n  - type: System.Data.DeletedRowInaccessibleException\n    commentId: T:System.Data.DeletedRowInaccessibleException\n    description: An attempt was made to retrieve data from a deleted row.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to read or access a column in a closed <xref href=\"System.Data.DataTableReader\"></xref>.\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified column does not contain a GUID.\n  platform:\n  - net462\n- uid: System.Data.DataTableReader.GetInt16(System.Int32)\n  id: GetInt16(System.Int32)\n  parent: System.Data.DataTableReader\n  langs:\n  - csharp\n  name: GetInt16(Int32)\n  nameWithType: DataTableReader.GetInt16(Int32)\n  fullName: System.Data.DataTableReader.GetInt16(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets the value of the specified column as a 16-bit signed integer.\n  remarks: \"No conversions are performed; therefore, the data retrieved must already be an <xref:System.Int16> or coercible to an `Int16`.  \\n  \\n Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.\"\n  example:\n  - \"The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\\\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \\n  \\n [!code-vb[DataWorks DataTableReader.GetInt16#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_1_1.vb)]\\n [!code-cs[DataWorks DataTableReader.GetInt16#1](~/add/codesnippet/csharp/m-system.data.datatabler_1_1.cs)]\"\n  syntax:\n    content: public override short GetInt16 (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal\n    return:\n      type: System.Int16\n      description: The value of the specified column.\n  overload: System.Data.DataTableReader.GetInt16*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.\n  - type: System.Data.DeletedRowInaccessibleException\n    commentId: T:System.Data.DeletedRowInaccessibleException\n    description: An attempt was made to retrieve data from a deleted row.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to read or access a column in a closed <xref href=\"System.Data.DataTableReader\"></xref>.\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified column does not contain a 16-bit signed integer.\n  platform:\n  - net462\n- uid: System.Data.DataTableReader.GetInt32(System.Int32)\n  id: GetInt32(System.Int32)\n  parent: System.Data.DataTableReader\n  langs:\n  - csharp\n  name: GetInt32(Int32)\n  nameWithType: DataTableReader.GetInt32(Int32)\n  fullName: System.Data.DataTableReader.GetInt32(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets the value of the specified column as a 32-bit signed integer.\n  remarks: \"No conversions are performed; therefore, the data retrieved must already be an <xref:System.Int32> or coercible to an `Int32`.  \\n  \\n Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.\"\n  example:\n  - \"The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\\\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \\n  \\n [!code-cs[DataWorks DataTableReader.GetInt32#1](~/add/codesnippet/csharp/m-system.data.datatabler_15_1.cs)]\\n [!code-vb[DataWorks DataTableReader.GetInt32#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_15_1.vb)]\"\n  syntax:\n    content: public override int GetInt32 (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal\n    return:\n      type: System.Int32\n      description: The value of the specified column.\n  overload: System.Data.DataTableReader.GetInt32*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.\n  - type: System.Data.DeletedRowInaccessibleException\n    commentId: T:System.Data.DeletedRowInaccessibleException\n    description: An attempt was made to retrieve data from a deleted row.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to read or access a column in a closed <xref href=\"System.Data.DataTableReader\"></xref> .\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified column does not contain a 32-bit signed integer value.\n  platform:\n  - net462\n- uid: System.Data.DataTableReader.GetInt64(System.Int32)\n  id: GetInt64(System.Int32)\n  parent: System.Data.DataTableReader\n  langs:\n  - csharp\n  name: GetInt64(Int32)\n  nameWithType: DataTableReader.GetInt64(Int32)\n  fullName: System.Data.DataTableReader.GetInt64(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets the value of the specified column as a 64-bit signed integer.\n  remarks: \"No conversions are performed; therefore, the data retrieved must already be an <xref:System.Int64> or coercible to an `Int64`.  \\n  \\n Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.\"\n  example:\n  - \"The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\\\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \\n  \\n [!code-vb[DataWorks DataTableReader.GetInt64#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_5_1.vb)]\\n [!code-cs[DataWorks DataTableReader.GetInt64#1](~/add/codesnippet/csharp/m-system.data.datatabler_5_1.cs)]\"\n  syntax:\n    content: public override long GetInt64 (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal\n    return:\n      type: System.Int64\n      description: The value of the specified column.\n  overload: System.Data.DataTableReader.GetInt64*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.\n  - type: System.Data.DeletedRowInaccessibleException\n    commentId: T:System.Data.DeletedRowInaccessibleException\n    description: An attempt was made to retrieve data from a deleted row.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to read or access a column in a closed <xref href=\"System.Data.DataTableReader\"></xref> .\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified column does not contain a 64-bit signed integer value.\n  platform:\n  - net462\n- uid: System.Data.DataTableReader.GetName(System.Int32)\n  id: GetName(System.Int32)\n  parent: System.Data.DataTableReader\n  langs:\n  - csharp\n  name: GetName(Int32)\n  nameWithType: DataTableReader.GetName(Int32)\n  fullName: System.Data.DataTableReader.GetName(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets the value of the specified column as a <xref:System.String>.\n  remarks: The `GetName` and <xref:System.Data.DataTableReader.GetOrdinal%2A> methods provide inverse functionality. That is, calling `GetOrdinal` on the return value of calling `GetName` should return the original parameter passed to `GetName`; the same applies to calling the procedures in the opposite order.\n  example:\n  - \"The following simple example includes a procedure that lists the names of all the columns within the specified `DataTableReader`, and the column's ordinal position, to the Console window.  \\n  \\n [!code-cs[DataWorks DataTableReader.GetName#1](~/add/codesnippet/csharp/m-system.data.datatabler_6_1.cs)]\\n [!code-vb[DataWorks DataTableReader.GetName#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_6_1.vb)]\"\n  syntax:\n    content: public override string GetName (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal\n    return:\n      type: System.String\n      description: The name of the specified column.\n  overload: System.Data.DataTableReader.GetName*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to read or access a column in a closed <xref href=\"System.Data.DataTableReader\"></xref>.\n  platform:\n  - net462\n- uid: System.Data.DataTableReader.GetOrdinal(System.String)\n  id: GetOrdinal(System.String)\n  parent: System.Data.DataTableReader\n  langs:\n  - csharp\n  name: GetOrdinal(String)\n  nameWithType: DataTableReader.GetOrdinal(String)\n  fullName: System.Data.DataTableReader.GetOrdinal(String)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets the column ordinal, given the name of the column.\n  remarks: \"Because most of the methods provided by the <xref:System.Data.DataTableReader> class must be provided with an ordinal column number, you can use the `GetOrdinal` method to retrieve the column number, given the name of the column.  \\n  \\n `GetOrdinal` performs a case-sensitive lookup first. If it fails, a second case-insensitive search is made. If the column number is not found an `IndexOutOfRangeException` is thrown.  \\n  \\n `GetOrdinal` is kana-width insensitive.  \\n  \\n Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call `GetOrdinal` within a loop. Save time by calling `GetOrdinal` one time and assigning the results to an integer variable for use within the loop\"\n  example:\n  - \"If you have only a column name, in which case the column name is user supplied, and you must retrieve information from the column, you can use a procedure like the following to extract the required information. In this example, the procedure accepts a column name and returns the data that is contained within that column for the current row in the <xref:System.Data.DataTableReader> :  \\n  \\n [!code-cs[DataWorks DataTableReader.GetOrdinal#1](~/add/codesnippet/csharp/m-system.data.datatabler_3_1.cs)]\\n [!code-vb[DataWorks DataTableReader.GetOrdinal#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_3_1.vb)]\"\n  syntax:\n    content: public override int GetOrdinal (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the column.\n    return:\n      type: System.Int32\n      description: The zero-based column ordinal.\n  overload: System.Data.DataTableReader.GetOrdinal*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to read or access a column in a closed <xref href=\"System.Data.DataTableReader\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The name specified is not a valid column name.\n  platform:\n  - net462\n- uid: System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)\n  id: GetProviderSpecificFieldType(System.Int32)\n  parent: System.Data.DataTableReader\n  langs:\n  - csharp\n  name: GetProviderSpecificFieldType(Int32)\n  nameWithType: DataTableReader.GetProviderSpecificFieldType(Int32)\n  fullName: System.Data.DataTableReader.GetProviderSpecificFieldType(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets the type of the specified column in provider-specific format.\n  remarks: Because the <xref:System.Data.DataTableReader> always returns the type stored within the underlying <xref:System.Data.DataColumn>, the value returned by calling the GetProviderSpecificFieldType method always returns the same type as the type stored within the <xref:System.Data.DataTable>. When you work with the <xref:System.Data.DataTableReader> class, calling the GetProviderSpecificFieldType method returns the same type as calling the <xref:System.Type.GetType%2A> method.\n  syntax:\n    content: public override Type GetProviderSpecificFieldType (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Type\n      description: The <xref:System.Type> that is the data type of the object.\n  overload: System.Data.DataTableReader.GetProviderSpecificFieldType*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to read or access a column in a closed <xref href=\"System.Data.DataTableReader\"></xref>.\n  platform:\n  - net462\n- uid: System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)\n  id: GetProviderSpecificValue(System.Int32)\n  parent: System.Data.DataTableReader\n  langs:\n  - csharp\n  name: GetProviderSpecificValue(Int32)\n  nameWithType: DataTableReader.GetProviderSpecificValue(Int32)\n  fullName: System.Data.DataTableReader.GetProviderSpecificValue(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets the value of the specified column in provider-specific format.\n  remarks: Because the <xref:System.Data.DataTableReader> always returns the type stored within the underlying <xref:System.Data.DataColumn>, the value returned by calling the GetProviderSpecificValue method always returns data of the same type as the data stored within the <xref:System.Data.DataTable>. When you work with the <xref:System.Data.DataTableReader> class, calling the GetProviderSpecificValue method returns the same value and type as calling the <xref:System.Data.DataTableReader.GetValue%2A> method.\n  syntax:\n    content: public override object GetProviderSpecificValue (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based number of the column whose value is retrieved.\n    return:\n      type: System.Object\n      description: The value of the specified column in provider-specific format.\n  overload: System.Data.DataTableReader.GetProviderSpecificValue*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.\n  - type: System.Data.DeletedRowInaccessibleException\n    commentId: T:System.Data.DeletedRowInaccessibleException\n    description: An attempt was made to retrieve data from a deleted row.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to read or access a column in a closed <xref href=\"System.Data.DataTableReader\"></xref>\n  platform:\n  - net462\n- uid: System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])\n  id: GetProviderSpecificValues(System.Object[])\n  parent: System.Data.DataTableReader\n  langs:\n  - csharp\n  name: GetProviderSpecificValues(Object[])\n  nameWithType: DataTableReader.GetProviderSpecificValues(Object[])\n  fullName: System.Data.DataTableReader.GetProviderSpecificValues(Object[])\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Fills the supplied array with provider-specific type information for all the columns in the <xref href=\"System.Data.DataTableReader\"></xref>.\n  remarks: Because the <xref:System.Data.DataTableReader> always returns the data of the type stored within the underlying <xref:System.Data.DataColumn>, the values returned by calling the GetProviderSpecificValues method is always of the same types as the data stored within the <xref:System.Data.DataTable>. When you work with the <xref:System.Data.DataTableReader> class, calling the GetProviderSpecificValues method returns the same values and types as calling the <xref:System.Data.DataTableReader.GetValues%2A> method.\n  syntax:\n    content: public override int GetProviderSpecificValues (object[] values);\n    parameters:\n    - id: values\n      type: System.Object[]\n      description: An array of objects to be filled in with type information for the columns in the <xref href=\"System.Data.DataTableReader\"></xref>.\n    return:\n      type: System.Int32\n      description: The number of column values copied into the array.\n  overload: System.Data.DataTableReader.GetProviderSpecificValues*\n  exceptions:\n  - type: System.Data.DeletedRowInaccessibleException\n    commentId: T:System.Data.DeletedRowInaccessibleException\n    description: An attempt was made to retrieve data from a deleted row.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to read or access a column in a closed <xref href=\"System.Data.DataTableReader\"></xref>.\n  platform:\n  - net462\n- uid: System.Data.DataTableReader.GetSchemaTable\n  id: GetSchemaTable\n  parent: System.Data.DataTableReader\n  langs:\n  - csharp\n  name: GetSchemaTable()\n  nameWithType: DataTableReader.GetSchemaTable()\n  fullName: System.Data.DataTableReader.GetSchemaTable()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Returns a <xref href=\"System.Data.DataTable\"></xref> that describes the column metadata of the <xref href=\"System.Data.DataTableReader\"></xref>.\n  remarks: \"The GetSchemaTable method returns metadata about each column in the following order:  \\n  \\n|DataReader column|Description|  \\n|-----------------------|-----------------|  \\n|ColumnName|The name of the column as it appears in the <xref:System.Data.DataTable>.|  \\n|ColumnOrdinal|The ordinal of the column|  \\n|ColumnSize|-1 if the <xref:System.Data.Common.SchemaTableColumn.ColumnSize> (or <xref:System.Data.DataColumn.MaxLength%2A>) property of the <xref:System.Data.DataColumn> cannot be determined or is not relevant; otherwise, 0 or a positive integer that contains the `MaxLength` value.|  \\n|NumericPrecision|If the column type is a numeric type, this is the maximum precision of the column. If the column type is not a numeric data type, this is a null value.|  \\n|NumericScale|If column data type has a scale component, return the number of digits to the right of the decimal point. Otherwise, return a null value.|  \\n|DataType|The underlying type of the column.|  \\n|ProviderType|The indicator of the column's data type. If the data type of the column varies from row to row, this value is <xref:System.Object>. This column cannot contain a null value.|  \\n|IsLong|`true` if the data type of the column is <xref:System.String> and its <xref:System.Data.DataColumn.MaxLength%2A> property is -1. Otherwise, `false`.|  \\n|AllowDBNull|`true` if the AllowDbNull constraint is set to true for the column; otherwise, `false`.|  \\n|IsReadOnly|`true` if the column cannot be modified; otherwise `false`.|  \\n|IsRowVersion|`false`, for every column.|  \\n|IsUnique|`true`: No two rows in the <xref:System.Data.DataTable> can have the same value in this column. `IsUnique` is guaranteed to be true if the column represents a key by itself or if there is a constraint of type UNIQUE that applies only to this column. `false`: The column can contain duplicate values in the `DataTable`. The default of this column is `false`.|  \\n|IsKey|`true`: The column is one of a set of columns that, taken together, uniquely identify the row in the <xref:System.Data.DataTable>. The set of columns with `IsKey` set to `true` must uniquely identify a row in the `DataTable`. There is no requirement that this set of columns is a minimal set of columns. This set of columns may be generated from a `DataTable` primary key, a unique constraint or a unique index. `false`: The column is not required to uniquely identify the row. This value is `true` if the column participates in a single or composite primary key. Otherwise, its value is `false`.|  \\n|IsAutoIncrement|`true`: The column assigns values to new rows in fixed increments. `false`: The column does not assign values to new rows in fixed increments. The default of this column is `false`.|  \\n|BaseCatalogName|The name of the catalog in the data store that contains the column. `Null` if the base catalog name cannot be determined. The default value for this column is a `null` value.|  \\n|BaseSchemaName|This value is always `Null`.|  \\n|BaseTableName|The name of the <xref:System.Data.DataTable>.|  \\n|BaseColumnName|The name of the column in the <xref:System.Data.DataTable>.|  \\n|AutoIncrementSeed|The value of the <xref:System.Data.DataTable>'s <xref:System.Data.DataColumn.AutoIncrementSeed%2A> property.|  \\n|AutoIncrementStep|The value of the <xref:System.Data.DataTable>'s <xref:System.Data.DataColumn.AutoIncrementStep%2A> property.|  \\n|DefaultValue|The value of the <xref:System.Data.DataColumn>'s <xref:System.Data.DataColumn.DefaultValue%2A> property.|  \\n|Expression|The expression string, if the current column is an expression column and all columns used in the expression belong to the same `T:System.Data.DataTable` that contains the expression column; otherwise `null`.|  \\n|ColumnMapping|The <xref:System.Data.MappingType> value associated with the <xref:System.Data.DataColumn>. The type can be one of `Attribute`, `Element`, `Hidden`, or `SimpleContent`. The default value is `Element`.|  \\n|BaseTableNamespace|The value of the <xref:System.Data.DataTable>'s <xref:System.Data.DataTable.Namespace%2A> property.|  \\n|BaseColumnNamespace|The value of the <xref:System.Data.DataColumn>'s <xref:System.Data.DataColumn.Namespace%2A> property.|\"\n  example:\n  - \"The following console application example retrieves schema information about the specified column. Pass the `DisplaySchemaTableInfo` procedure a <xref:System.Data.DataTableReader> and an integer representing the ordinal position of a column within the `DataTableReader`, and the procedure outputs schema information to the console window.  \\n  \\n [!code-cs[DataWorks DataTableReader.GetSchemaTable#1](~/add/codesnippet/csharp/m-system.data.datatabler_14_1.cs)]\\n [!code-vb[DataWorks DataTableReader.GetSchemaTable#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_14_1.vb)]\"\n  syntax:\n    content: public override System.Data.DataTable GetSchemaTable ();\n    parameters: []\n    return:\n      type: System.Data.DataTable\n      description: A <xref href=\"System.Data.DataTable\"></xref> that describes the column metadata.\n  overload: System.Data.DataTableReader.GetSchemaTable*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Data.DataTableReader\"></xref> is closed.\n  platform:\n  - net462\n- uid: System.Data.DataTableReader.GetString(System.Int32)\n  id: GetString(System.Int32)\n  parent: System.Data.DataTableReader\n  langs:\n  - csharp\n  name: GetString(Int32)\n  nameWithType: DataTableReader.GetString(Int32)\n  fullName: System.Data.DataTableReader.GetString(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets the value of the specified column as a string.\n  remarks: Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.\n  example:\n  - \"The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\\\<NULL>. If the data within the column of the correct type, the example displays an error message for each row.  \\n  \\n [!code-cs[DataWorks DataTableReader.GetString#1](~/add/codesnippet/csharp/m-system.data.datatabler_17_1.cs)]\\n [!code-vb[DataWorks DataTableReader.GetString#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_17_1.vb)]\"\n  syntax:\n    content: public override string GetString (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal\n    return:\n      type: System.String\n      description: The value of the specified column.\n  overload: System.Data.DataTableReader.GetString*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.\n  - type: System.Data.DeletedRowInaccessibleException\n    commentId: T:System.Data.DeletedRowInaccessibleException\n    description: An attempt was made to retrieve data from a deleted row.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to read or access a column in a closed <xref href=\"System.Data.DataTableReader\"></xref>.\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified column does not contain a string.\n  platform:\n  - net462\n- uid: System.Data.DataTableReader.GetValue(System.Int32)\n  id: GetValue(System.Int32)\n  parent: System.Data.DataTableReader\n  langs:\n  - csharp\n  name: GetValue(Int32)\n  nameWithType: DataTableReader.GetValue(Int32)\n  fullName: System.Data.DataTableReader.GetValue(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets the value of the specified column in its native format.\n  remarks: Although you can call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method, you do not have to do this.\n  example:\n  - \"The following example iterates through all the columns within the current row in a <xref:System.Data.DataTableReader>, displaying the contents of each column and the column name. Generally, if your intent is to work with all the columns within a row retrieved by a <xref:System.Data.DataTableReader>, consider using the <xref:System.Data.DataTableReader.GetValues%2A> method instead, because it is more efficient.  \\n  \\n [!code-cs[DataWorks DataTableReader.GetValue#1](~/add/codesnippet/csharp/m-system.data.datatabler_22_1.cs)]\\n [!code-vb[DataWorks DataTableReader.GetValue#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_22_1.vb)]\"\n  syntax:\n    content: public override object GetValue (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal\n    return:\n      type: System.Object\n      description: The value of the specified column. This method returns <xref uid=\"langword_csharp_DBNull\" name=\"DBNull\" href=\"\"></xref> for null columns.\n  overload: System.Data.DataTableReader.GetValue*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.\n  - type: System.Data.DeletedRowInaccessibleException\n    commentId: T:System.Data.DeletedRowInaccessibleException\n    description: An attempt was made to retrieve data from a deleted row.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to read or access columns in a closed <xref href=\"System.Data.DataTableReader\"></xref> .\n  platform:\n  - net462\n- uid: System.Data.DataTableReader.GetValues(System.Object[])\n  id: GetValues(System.Object[])\n  parent: System.Data.DataTableReader\n  langs:\n  - csharp\n  name: GetValues(Object[])\n  nameWithType: DataTableReader.GetValues(Object[])\n  fullName: System.Data.DataTableReader.GetValues(Object[])\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Populates an array of objects with the column values of the current row.\n  remarks: \"For most applications, this method provides an efficient means for retrieving all columns, instead of retrieving each column individually. If your intent is to retrieve all the column values from a row within the <xref:System.Data.DataTableReader>, the `GetValues` method provides the most efficient solution.  \\n  \\n You can pass an <xref:System.Object> array that contains fewer than the number of columns that are contained in the resulting row. Only the amount of data the `Object` array can hold is copied to the array. You can also pass an `Object` array whose length is more than the number of columns that are contained in the resulting row, in which case the additional array elements remains unchanged by the method call.  \\n  \\n This method places `DBNull` in the output array for null columns.\"\n  example:\n  - \"The following example demonstrates using an array that is the correct size, to read all values from the current row in the supplied <xref:System.Data.DataTableReader>. In addition, the sample demonstrates using a fixed-sized array that could be either smaller or larger than the number of available columns.  \\n  \\n [!code-cs[DataWorks DataTableReader.GetValueObject#1](~/add/codesnippet/csharp/m-system.data.datatabler_21_1.cs)]\\n [!code-vb[DataWorks DataTableReader.GetValueObject#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_21_1.vb)]\"\n  syntax:\n    content: public override int GetValues (object[] values);\n    parameters:\n    - id: values\n      type: System.Object[]\n      description: An array of <xref:System.Object> into which to copy the column values from the <xref href=\"System.Data.DataTableReader\"></xref>.\n    return:\n      type: System.Int32\n      description: The number of column values copied into the array.\n  overload: System.Data.DataTableReader.GetValues*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.\n  - type: System.Data.DeletedRowInaccessibleException\n    commentId: T:System.Data.DeletedRowInaccessibleException\n    description: An attempt was made to retrieve data from a deleted row.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to read or access a column in a closed <xref href=\"System.Data.DataTableReader\"></xref> .\n  platform:\n  - net462\n- uid: System.Data.DataTableReader.HasRows\n  id: HasRows\n  parent: System.Data.DataTableReader\n  langs:\n  - csharp\n  name: HasRows\n  nameWithType: DataTableReader.HasRows\n  fullName: System.Data.DataTableReader.HasRows\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets a value that indicates whether the <xref href=\"System.Data.DataTableReader\"></xref> contains one or more rows.\n  remarks: \"The `HasRows` property returns information about the current result set. If the <xref:System.Data.DataTableReader> contains multiple result sets, you can examine the value of the `HasRows` property immediately after you call the <xref:System.Data.DataTableReader.NextResult%2A> method in order to determine whether the new result set contains rows.  \\n  \\n Use the `HasRows` property to avoid the requirement to call the <xref:System.Data.DataTableReader.Read%2A> method of the <xref:System.Data.DataTableReader> if there are no rows within the current result set.\"\n  example:\n  - \"The following example fills two <xref:System.Data.DataTable> instances with data. The first <xref:System.Data.DataTable> contains one row, and the second contains no rows. The example then creates a <xref:System.Data.DataTableReader> that contains both <xref:System.Data.DataTable> objects, and calls the PrintData method to display the contents of each, checking the value of the HasRows property of each before it makes the call to PrintData.  \\n  \\n [!code-cs[DataWorks DataTableReader.HasRows#1](~/add/codesnippet/csharp/p-system.data.datatabler_1_1.cs)]\\n [!code-vb[DataWorks DataTableReader.HasRows#1](~/add/codesnippet/visualbasic/p-system.data.datatabler_1_1.vb)]\"\n  syntax:\n    content: public override bool HasRows { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Data.DataTableReader\"></xref> contains one or more rows; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.DataTableReader.HasRows*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to retrieve information about a closed <xref href=\"System.Data.DataTableReader\"></xref>.\n  platform:\n  - net462\n- uid: System.Data.DataTableReader.IsClosed\n  id: IsClosed\n  parent: System.Data.DataTableReader\n  langs:\n  - csharp\n  name: IsClosed\n  nameWithType: DataTableReader.IsClosed\n  fullName: System.Data.DataTableReader.IsClosed\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets a value that indicates whether the <xref href=\"System.Data.DataTableReader\"></xref> is closed.\n  remarks: <xref:System.Data.DataTableReader.Close%2A> is the only method and `IsClosed` and <xref:System.Data.DataTableReader.RecordsAffected%2A> are the only properties that can be accessed after the <xref:System.Data.DataTableReader> has been closed.\n  syntax:\n    content: public override bool IsClosed { get; }\n    return:\n      type: System.Boolean\n      description: Returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Data.DataTableReader\"></xref> is closed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.DataTableReader.IsClosed*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataTableReader.IsDBNull(System.Int32)\n  id: IsDBNull(System.Int32)\n  parent: System.Data.DataTableReader\n  langs:\n  - csharp\n  name: IsDBNull(Int32)\n  nameWithType: DataTableReader.IsDBNull(Int32)\n  fullName: System.Data.DataTableReader.IsDBNull(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets a value that indicates whether the column contains non-existent or missing values.\n  remarks: Call this method to see if there are null column values before calling the typed get methods (for example, <xref:System.Data.DataTableReader.GetByte%2A>, <xref:System.Data.DataTableReader.GetChar%2A>, and so on) to avoid raising an error.\n  example:\n  - \"The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\\\<NULL>. If the data within the column of the correct type, the example displays an error message for each row.  \\n  \\n [!code-vb[DataWorks DataTableReader.IsDbNull#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_18_1.vb)]\\n [!code-cs[DataWorks DataTableReader.IsDbNull#1](~/add/codesnippet/csharp/m-system.data.datatabler_18_1.cs)]\"\n  syntax:\n    content: public override bool IsDBNull (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified column value is equivalent to <xref href=\"System.DBNull\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.DataTableReader.IsDBNull*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.\n  - type: System.Data.DeletedRowInaccessibleException\n    commentId: T:System.Data.DeletedRowInaccessibleException\n    description: An attempt was made to retrieve data from a deleted row.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to read or access a column in a closed <xref href=\"System.Data.DataTableReader\"></xref> .\n  platform:\n  - net462\n- uid: System.Data.DataTableReader.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Data.DataTableReader\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: DataTableReader.Item(Int32)\n  fullName: System.Data.DataTableReader.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets the value of the specified column in its native format given the column ordinal.\n  remarks: This overload for <xref:System.Data.DataTableReader.Item%2A> behaves identically to the <xref:System.Data.DataTableReader.GetValue%2A> method.\n  example:\n  - \"The following example displays the contents of all the columns, in all the rows from the supplied <xref:System.Data.DataTableReader>. The code uses the <xref:System.Data.DataTableReader.Item%2A> method (the indexer, in Microsoft C#) to retrieve the value that is contained in each column.  \\n  \\n [!code-vb[DataWorks DataTableReader.Item#1](~/add/codesnippet/visualbasic/p-system.data.datatabler_0_1.vb)]\\n [!code-cs[DataWorks DataTableReader.Item#1](~/add/codesnippet/csharp/p-system.data.datatabler_0_1.cs)]\"\n  syntax:\n    content: public override object this[int ordinal] { get; }\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Object\n      description: The value of the specified column in its native format.\n  overload: System.Data.DataTableReader.Item*\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: The index passed was outside the range of 0 to <xref:System.Data.DataTableReader.FieldCount*> - 1.\n  platform:\n  - net462\n- uid: System.Data.DataTableReader.Item(System.String)\n  id: Item(System.String)\n  parent: System.Data.DataTableReader\n  langs:\n  - csharp\n  name: Item(String)\n  nameWithType: DataTableReader.Item(String)\n  fullName: System.Data.DataTableReader.Item(String)\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets the value of the specified column in its native format given the column name.\n  remarks: \"A case-sensitive lookup is performed first. If it fails, a second case-insensitive search is made.  \\n  \\n This method is kana-width insensitive.  \\n  \\n This overloaded version of <xref:System.Data.DataTableReader.Item%2A> corresponds to calling the <xref:System.Data.DataTableReader.GetOrdinal%2A> method, and then subsequently calling the <xref:System.Data.DataTableReader.GetValue%2A> method.\"\n  example:\n  - \"Given a <xref:System.Data.DataTableReader> and a column name, the GetValueByName procedure returns the value of the specified column. Before calling this procedure, you must create a new <xref:System.Data.DataTableReader> instance and call its Read method at least one time to position the row pointer on a row of data.  \\n  \\n [!code-vb[DataWorks DataTableReader.ItemName#1](~/add/codesnippet/visualbasic/p-system.data.datatabler_2_1.vb)]\\n [!code-cs[DataWorks DataTableReader.ItemName#1](~/add/codesnippet/csharp/p-system.data.datatabler_2_1.cs)]\"\n  syntax:\n    content: public override object this[string name] { get; }\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the column.\n    return:\n      type: System.Object\n      description: The value of the specified column in its native format.\n  overload: System.Data.DataTableReader.Item*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The name specified is not a valid column name.\n  - type: System.Data.DeletedRowInaccessibleException\n    commentId: T:System.Data.DeletedRowInaccessibleException\n    description: An attempt was made to retrieve data from a deleted row.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to read or access a column in a closed <xref href=\"System.Data.DataTableReader\"></xref>.\n  platform:\n  - net462\n- uid: System.Data.DataTableReader.NextResult\n  id: NextResult\n  parent: System.Data.DataTableReader\n  langs:\n  - csharp\n  name: NextResult()\n  nameWithType: DataTableReader.NextResult()\n  fullName: System.Data.DataTableReader.NextResult()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Advances the <xref href=\"System.Data.DataTableReader\"></xref> to the next result set, if any.\n  remarks: \"Used to process multiple results that can be generated by creating a <xref:System.Data.DataTableReader> over a <xref:System.Data.DataSet> that contains two or more tables, or an array that contains two or more <xref:System.Data.DataTable> instances.  \\n  \\n A new <xref:System.Data.DataTableReader> is positioned on the first result.\"\n  example:\n  - \"In the following example, the TestConstructor method creates two <xref:System.Data.DataTable>instances. In order to demonstrate this constructor for the <xref:System.Data.DataTableReader> class, the sample creates a new `DataTableReader` based on an array that contains the two `DataTables`, and performs a simple operation, printing the contents from the first few columns to the console window. In order to test this application, create a new Console application, and paste the sample code into the newly created file.  \\n  \\n [!code-vb[DataWorks DataTableReader.NextResult#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_9_1.vb)]\\n [!code-cs[DataWorks DataTableReader.NextResult#1](~/add/codesnippet/csharp/m-system.data.datatabler_9_1.cs)]  \\n  \\n The Console window displays the following results:  \\n  \\n```  \\n1 Mary  \\n2 Andy  \\n3 Peter  \\n4 Russ  \\n1 Wireless Network Card  \\n2 Hard Drive  \\n3 Monitor  \\n4 CPU  \\n```\"\n  syntax:\n    content: public override bool NextResult ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if there was another result set; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.DataTableReader.NextResult*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to navigate within a closed <xref href=\"System.Data.DataTableReader\"></xref>.\n  platform:\n  - net462\n- uid: System.Data.DataTableReader.Read\n  id: Read\n  parent: System.Data.DataTableReader\n  langs:\n  - csharp\n  name: Read()\n  nameWithType: DataTableReader.Read()\n  fullName: System.Data.DataTableReader.Read()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Advances the <xref href=\"System.Data.DataTableReader\"></xref> to the next record.\n  remarks: The default position of the <xref:System.Data.DataTableReader> is before the first record. Therefore, you must call `Read` to start accessing any data.\n  example:\n  - \"The PrintColumns procedure loops through all the rows in the <xref:System.Data.DataTableReader>, displaying the contents of each column in the Console window.  \\n  \\n [!code-cs[DataWorks DataTableReader.Read#1](~/add/codesnippet/csharp/m-system.data.datatabler_12_1.cs)]\\n [!code-vb[DataWorks DataTableReader.Read#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_12_1.vb)]\"\n  syntax:\n    content: public override bool Read ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if there was another row to read; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.DataTableReader.Read*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to read or access a column in a closed <xref href=\"System.Data.DataTableReader\"></xref> .\n  platform:\n  - net462\n- uid: System.Data.DataTableReader.RecordsAffected\n  id: RecordsAffected\n  parent: System.Data.DataTableReader\n  langs:\n  - csharp\n  name: RecordsAffected\n  nameWithType: DataTableReader.RecordsAffected\n  fullName: System.Data.DataTableReader.RecordsAffected\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets the number of rows inserted, changed, or deleted by execution of the SQL statement.\n  syntax:\n    content: public override int RecordsAffected { get; }\n    return:\n      type: System.Int32\n      description: The <xref href=\"System.Data.DataTableReader\"></xref> does not support this property and always returns 0.\n  overload: System.Data.DataTableReader.RecordsAffected*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Data.Common.DbDataReader\n  isExternal: false\n  name: System.Data.Common.DbDataReader\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.Data.DeletedRowInaccessibleException\n  parent: System.Data\n  isExternal: false\n  name: DeletedRowInaccessibleException\n  nameWithType: DeletedRowInaccessibleException\n  fullName: System.Data.DeletedRowInaccessibleException\n- uid: System.InvalidCastException\n  isExternal: true\n  name: System.InvalidCastException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.IndexOutOfRangeException\n  isExternal: true\n  name: System.IndexOutOfRangeException\n- uid: System.Data.DataTableReader.#ctor(System.Data.DataTable)\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: DataTableReader(DataTable)\n  nameWithType: DataTableReader.DataTableReader(DataTable)\n  fullName: System.Data.DataTableReader.DataTableReader(DataTable)\n- uid: System.Data.DataTable\n  parent: System.Data\n  isExternal: false\n  name: DataTable\n  nameWithType: DataTable\n  fullName: System.Data.DataTable\n- uid: System.Data.DataTableReader.#ctor(System.Data.DataTable[])\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: DataTableReader(DataTable[])\n  nameWithType: DataTableReader.DataTableReader(DataTable[])\n  fullName: System.Data.DataTableReader.DataTableReader(DataTable[])\n- uid: System.Data.DataTable[]\n  parent: System.Data\n  isExternal: false\n  name: DataTable\n  nameWithType: DataTable\n  fullName: System.Data.DataTable[]\n  spec.csharp:\n  - uid: System.Data.DataTable\n    name: DataTable\n    nameWithType: DataTable\n    fullName: DataTable[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.DataTableReader.Close\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: Close()\n  nameWithType: DataTableReader.Close()\n  fullName: System.Data.DataTableReader.Close()\n- uid: System.Data.DataTableReader.Depth\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: Depth\n  nameWithType: DataTableReader.Depth\n  fullName: System.Data.DataTableReader.Depth\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.DataTableReader.FieldCount\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: FieldCount\n  nameWithType: DataTableReader.FieldCount\n  fullName: System.Data.DataTableReader.FieldCount\n- uid: System.Data.DataTableReader.GetBoolean(System.Int32)\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetBoolean(Int32)\n  nameWithType: DataTableReader.GetBoolean(Int32)\n  fullName: System.Data.DataTableReader.GetBoolean(Int32)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.DataTableReader.GetByte(System.Int32)\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetByte(Int32)\n  nameWithType: DataTableReader.GetByte(Int32)\n  fullName: System.Data.DataTableReader.GetByte(Int32)\n- uid: System.Byte\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)\n  nameWithType: DataTableReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)\n  fullName: System.Data.DataTableReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)\n- uid: System.Int64\n  parent: System\n  isExternal: true\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.DataTableReader.GetChar(System.Int32)\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetChar(Int32)\n  nameWithType: DataTableReader.GetChar(Int32)\n  fullName: System.Data.DataTableReader.GetChar(Int32)\n- uid: System.Char\n  parent: System\n  isExternal: true\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetChars(Int32,Int64,Char[],Int32,Int32)\n  nameWithType: DataTableReader.GetChars(Int32,Int64,Char[],Int32,Int32)\n  fullName: System.Data.DataTableReader.GetChars(Int32,Int64,Char[],Int32,Int32)\n- uid: System.Char[]\n  parent: System\n  isExternal: true\n  name: Char\n  nameWithType: Char\n  fullName: System.Char[]\n  spec.csharp:\n  - uid: System.Char\n    name: Char\n    nameWithType: Char\n    fullName: Char[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.DataTableReader.GetDataTypeName(System.Int32)\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetDataTypeName(Int32)\n  nameWithType: DataTableReader.GetDataTypeName(Int32)\n  fullName: System.Data.DataTableReader.GetDataTypeName(Int32)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.DataTableReader.GetDateTime(System.Int32)\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetDateTime(Int32)\n  nameWithType: DataTableReader.GetDateTime(Int32)\n  fullName: System.Data.DataTableReader.GetDateTime(Int32)\n- uid: System.DateTime\n  parent: System\n  isExternal: true\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.Data.DataTableReader.GetDecimal(System.Int32)\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetDecimal(Int32)\n  nameWithType: DataTableReader.GetDecimal(Int32)\n  fullName: System.Data.DataTableReader.GetDecimal(Int32)\n- uid: System.Decimal\n  parent: System\n  isExternal: true\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.Data.DataTableReader.GetDouble(System.Int32)\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetDouble(Int32)\n  nameWithType: DataTableReader.GetDouble(Int32)\n  fullName: System.Data.DataTableReader.GetDouble(Int32)\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Data.DataTableReader.GetEnumerator\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: DataTableReader.GetEnumerator()\n  fullName: System.Data.DataTableReader.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Data.DataTableReader.GetFieldType(System.Int32)\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetFieldType(Int32)\n  nameWithType: DataTableReader.GetFieldType(Int32)\n  fullName: System.Data.DataTableReader.GetFieldType(Int32)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Data.DataTableReader.GetFloat(System.Int32)\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetFloat(Int32)\n  nameWithType: DataTableReader.GetFloat(Int32)\n  fullName: System.Data.DataTableReader.GetFloat(Int32)\n- uid: System.Single\n  parent: System\n  isExternal: true\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Data.DataTableReader.GetGuid(System.Int32)\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetGuid(Int32)\n  nameWithType: DataTableReader.GetGuid(Int32)\n  fullName: System.Data.DataTableReader.GetGuid(Int32)\n- uid: System.Guid\n  parent: System\n  isExternal: true\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Data.DataTableReader.GetInt16(System.Int32)\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetInt16(Int32)\n  nameWithType: DataTableReader.GetInt16(Int32)\n  fullName: System.Data.DataTableReader.GetInt16(Int32)\n- uid: System.Int16\n  parent: System\n  isExternal: true\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Data.DataTableReader.GetInt32(System.Int32)\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetInt32(Int32)\n  nameWithType: DataTableReader.GetInt32(Int32)\n  fullName: System.Data.DataTableReader.GetInt32(Int32)\n- uid: System.Data.DataTableReader.GetInt64(System.Int32)\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetInt64(Int32)\n  nameWithType: DataTableReader.GetInt64(Int32)\n  fullName: System.Data.DataTableReader.GetInt64(Int32)\n- uid: System.Data.DataTableReader.GetName(System.Int32)\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetName(Int32)\n  nameWithType: DataTableReader.GetName(Int32)\n  fullName: System.Data.DataTableReader.GetName(Int32)\n- uid: System.Data.DataTableReader.GetOrdinal(System.String)\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetOrdinal(String)\n  nameWithType: DataTableReader.GetOrdinal(String)\n  fullName: System.Data.DataTableReader.GetOrdinal(String)\n- uid: System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetProviderSpecificFieldType(Int32)\n  nameWithType: DataTableReader.GetProviderSpecificFieldType(Int32)\n  fullName: System.Data.DataTableReader.GetProviderSpecificFieldType(Int32)\n- uid: System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetProviderSpecificValue(Int32)\n  nameWithType: DataTableReader.GetProviderSpecificValue(Int32)\n  fullName: System.Data.DataTableReader.GetProviderSpecificValue(Int32)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetProviderSpecificValues(Object[])\n  nameWithType: DataTableReader.GetProviderSpecificValues(Object[])\n  fullName: System.Data.DataTableReader.GetProviderSpecificValues(Object[])\n- uid: System.Object[]\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.DataTableReader.GetSchemaTable\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetSchemaTable()\n  nameWithType: DataTableReader.GetSchemaTable()\n  fullName: System.Data.DataTableReader.GetSchemaTable()\n- uid: System.Data.DataTableReader.GetString(System.Int32)\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetString(Int32)\n  nameWithType: DataTableReader.GetString(Int32)\n  fullName: System.Data.DataTableReader.GetString(Int32)\n- uid: System.Data.DataTableReader.GetValue(System.Int32)\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetValue(Int32)\n  nameWithType: DataTableReader.GetValue(Int32)\n  fullName: System.Data.DataTableReader.GetValue(Int32)\n- uid: System.Data.DataTableReader.GetValues(System.Object[])\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetValues(Object[])\n  nameWithType: DataTableReader.GetValues(Object[])\n  fullName: System.Data.DataTableReader.GetValues(Object[])\n- uid: System.Data.DataTableReader.HasRows\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: HasRows\n  nameWithType: DataTableReader.HasRows\n  fullName: System.Data.DataTableReader.HasRows\n- uid: System.Data.DataTableReader.IsClosed\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: IsClosed\n  nameWithType: DataTableReader.IsClosed\n  fullName: System.Data.DataTableReader.IsClosed\n- uid: System.Data.DataTableReader.IsDBNull(System.Int32)\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: IsDBNull(Int32)\n  nameWithType: DataTableReader.IsDBNull(Int32)\n  fullName: System.Data.DataTableReader.IsDBNull(Int32)\n- uid: System.Data.DataTableReader.Item(System.Int32)\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: DataTableReader.Item(Int32)\n  fullName: System.Data.DataTableReader.Item(Int32)\n- uid: System.Data.DataTableReader.Item(System.String)\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: Item(String)\n  nameWithType: DataTableReader.Item(String)\n  fullName: System.Data.DataTableReader.Item(String)\n- uid: System.Data.DataTableReader.NextResult\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: NextResult()\n  nameWithType: DataTableReader.NextResult()\n  fullName: System.Data.DataTableReader.NextResult()\n- uid: System.Data.DataTableReader.Read\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: Read()\n  nameWithType: DataTableReader.Read()\n  fullName: System.Data.DataTableReader.Read()\n- uid: System.Data.DataTableReader.RecordsAffected\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: RecordsAffected\n  nameWithType: DataTableReader.RecordsAffected\n  fullName: System.Data.DataTableReader.RecordsAffected\n- uid: System.Data.DataTableReader.#ctor*\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: DataTableReader\n  nameWithType: DataTableReader.DataTableReader\n- uid: System.Data.DataTableReader.Close*\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: Close\n  nameWithType: DataTableReader.Close\n- uid: System.Data.DataTableReader.Depth*\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: Depth\n  nameWithType: DataTableReader.Depth\n- uid: System.Data.DataTableReader.FieldCount*\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: FieldCount\n  nameWithType: DataTableReader.FieldCount\n- uid: System.Data.DataTableReader.GetBoolean*\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetBoolean\n  nameWithType: DataTableReader.GetBoolean\n- uid: System.Data.DataTableReader.GetByte*\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetByte\n  nameWithType: DataTableReader.GetByte\n- uid: System.Data.DataTableReader.GetBytes*\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetBytes\n  nameWithType: DataTableReader.GetBytes\n- uid: System.Data.DataTableReader.GetChar*\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetChar\n  nameWithType: DataTableReader.GetChar\n- uid: System.Data.DataTableReader.GetChars*\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetChars\n  nameWithType: DataTableReader.GetChars\n- uid: System.Data.DataTableReader.GetDataTypeName*\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetDataTypeName\n  nameWithType: DataTableReader.GetDataTypeName\n- uid: System.Data.DataTableReader.GetDateTime*\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetDateTime\n  nameWithType: DataTableReader.GetDateTime\n- uid: System.Data.DataTableReader.GetDecimal*\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetDecimal\n  nameWithType: DataTableReader.GetDecimal\n- uid: System.Data.DataTableReader.GetDouble*\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetDouble\n  nameWithType: DataTableReader.GetDouble\n- uid: System.Data.DataTableReader.GetEnumerator*\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: DataTableReader.GetEnumerator\n- uid: System.Data.DataTableReader.GetFieldType*\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetFieldType\n  nameWithType: DataTableReader.GetFieldType\n- uid: System.Data.DataTableReader.GetFloat*\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetFloat\n  nameWithType: DataTableReader.GetFloat\n- uid: System.Data.DataTableReader.GetGuid*\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetGuid\n  nameWithType: DataTableReader.GetGuid\n- uid: System.Data.DataTableReader.GetInt16*\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetInt16\n  nameWithType: DataTableReader.GetInt16\n- uid: System.Data.DataTableReader.GetInt32*\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetInt32\n  nameWithType: DataTableReader.GetInt32\n- uid: System.Data.DataTableReader.GetInt64*\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetInt64\n  nameWithType: DataTableReader.GetInt64\n- uid: System.Data.DataTableReader.GetName*\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetName\n  nameWithType: DataTableReader.GetName\n- uid: System.Data.DataTableReader.GetOrdinal*\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetOrdinal\n  nameWithType: DataTableReader.GetOrdinal\n- uid: System.Data.DataTableReader.GetProviderSpecificFieldType*\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetProviderSpecificFieldType\n  nameWithType: DataTableReader.GetProviderSpecificFieldType\n- uid: System.Data.DataTableReader.GetProviderSpecificValue*\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetProviderSpecificValue\n  nameWithType: DataTableReader.GetProviderSpecificValue\n- uid: System.Data.DataTableReader.GetProviderSpecificValues*\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetProviderSpecificValues\n  nameWithType: DataTableReader.GetProviderSpecificValues\n- uid: System.Data.DataTableReader.GetSchemaTable*\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetSchemaTable\n  nameWithType: DataTableReader.GetSchemaTable\n- uid: System.Data.DataTableReader.GetString*\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetString\n  nameWithType: DataTableReader.GetString\n- uid: System.Data.DataTableReader.GetValue*\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetValue\n  nameWithType: DataTableReader.GetValue\n- uid: System.Data.DataTableReader.GetValues*\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: GetValues\n  nameWithType: DataTableReader.GetValues\n- uid: System.Data.DataTableReader.HasRows*\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: HasRows\n  nameWithType: DataTableReader.HasRows\n- uid: System.Data.DataTableReader.IsClosed*\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: IsClosed\n  nameWithType: DataTableReader.IsClosed\n- uid: System.Data.DataTableReader.IsDBNull*\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: IsDBNull\n  nameWithType: DataTableReader.IsDBNull\n- uid: System.Data.DataTableReader.Item*\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: Item\n  nameWithType: DataTableReader.Item\n- uid: System.Data.DataTableReader.NextResult*\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: NextResult\n  nameWithType: DataTableReader.NextResult\n- uid: System.Data.DataTableReader.Read*\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: Read\n  nameWithType: DataTableReader.Read\n- uid: System.Data.DataTableReader.RecordsAffected*\n  parent: System.Data.DataTableReader\n  isExternal: false\n  name: RecordsAffected\n  nameWithType: DataTableReader.RecordsAffected\n"}