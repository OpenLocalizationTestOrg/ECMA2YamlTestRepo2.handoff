{"nodes":[{"pos":[628,725],"content":"Provides contextual information about a component, such as its container and property descriptor.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides contextual information about a component, such as its container and property descriptor.","pos":[0,97]}]},{"pos":[738,1390],"content":"The ITypeDescriptorContext interface provides contextual information about a component. ITypeDescriptorContext is typically used at design time to provide information about a design-time container. This interface is commonly used in type conversion. For details, see <xref:System.ComponentModel.TypeConverter>.      > [!NOTE] >  Do not rely on the presence of this interface when you design a type converter. If a particular interface, property, or service is necessary but not available, the type converter should return `null` rather than throw an exception. This interface's properties can return `null` at any time, and you should plan for this.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ITypeDescriptorContext interface provides contextual information about a component.","pos":[0,87]},{"content":"ITypeDescriptorContext is typically used at design time to provide information about a design-time container.","pos":[88,197]},{"content":"This interface is commonly used in type conversion.","pos":[198,249]},{"content":"For details, see &lt;xref:System.ComponentModel.TypeConverter&gt;.","pos":[250,310],"source":" For details, see <xref:System.ComponentModel.TypeConverter>."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Do not rely on the presence of this interface when you design a type converter.","pos":[316,408],"source":"      > [!NOTE] >  Do not rely on the presence of this interface when you design a type converter."},{"content":"If a particular interface, property, or service is necessary but not available, the type converter should return <ph id=\"ph1\">`null`</ph> rather than throw an exception.","pos":[409,560],"source":" If a particular interface, property, or service is necessary but not available, the type converter should return `null` rather than throw an exception."},{"content":"This interface's properties can return <ph id=\"ph1\">`null`</ph> at any time, and you should plan for this.","pos":[561,649],"source":" This interface's properties can return `null` at any time, and you should plan for this."}]},{"pos":[2423,2526],"content":"Gets the container representing this <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.TypeDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> request.","needQuote":true,"needEscape":true,"source":"Gets the container representing this <xref href=\"System.ComponentModel.TypeDescriptor\"></xref> request."},{"pos":[2538,2641],"content":"The Container property gets the logical container of the component associated with the type descriptor.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Container property gets the logical container of the component associated with the type descriptor.","pos":[0,103]}]},{"pos":[2800,3143],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.IContainer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the set of objects for this <bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.TypeDescriptor\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if there is no container or if the <bpt id=\"p4\">&lt;xref href=\"System.ComponentModel.TypeDescriptor\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> does not use outside objects.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.IContainer\"></xref> with the set of objects for this <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is no container or if the <xref href=\"System.ComponentModel.TypeDescriptor\"></xref> does not use outside objects."},{"pos":[3622,3690],"content":"Gets the object that is connected with this type descriptor request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the object that is connected with this type descriptor request.","pos":[0,68]}]},{"pos":[3702,4162],"content":"The Instance property gets the object that is invoking the <xref:System.ComponentModel.ITypeDescriptorContext> interface. For example, if a type converter is given a <xref:System.Drawing.Color> to convert, Instance returns the actual instance of the control that is using the <xref:System.Drawing.Color>. You can subsequently query the control for further information about its services and its <xref:System.ComponentModel.ITypeDescriptorContext.Container%2A>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Instance property gets the object that is invoking the <xref:System.ComponentModel.ITypeDescriptorContext> interface. For example, if a type converter is given a <xref:System.Drawing.Color> to convert, Instance returns the actual instance of the control that is using the <xref:System.Drawing.Color>. You can subsequently query the control for further information about its services and its <xref:System.ComponentModel.ITypeDescriptorContext.Container%2A>.","pos":[0,460],"nodes":[{"content":"The Instance property gets the object that is invoking the &lt;xref:System.ComponentModel.ITypeDescriptorContext&gt; interface.","pos":[0,121],"source":"The Instance property gets the object that is invoking the <xref:System.ComponentModel.ITypeDescriptorContext> interface."},{"content":"For example, if a type converter is given a &lt;xref:System.Drawing.Color&gt; to convert, Instance returns the actual instance of the control that is using the &lt;xref:System.Drawing.Color&gt;.","pos":[122,304],"source":" For example, if a type converter is given a <xref:System.Drawing.Color> to convert, Instance returns the actual instance of the control that is using the <xref:System.Drawing.Color>."},{"content":"You can subsequently query the control for further information about its services and its &lt;xref:System.ComponentModel.ITypeDescriptorContext.Container%2A&gt;.","pos":[305,460],"source":" You can subsequently query the control for further information about its services and its <xref:System.ComponentModel.ITypeDescriptorContext.Container%2A>."}]}]},{"pos":[4275,4495],"content":"The object that invokes the method on the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.TypeDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if there is no object responsible for the call.","needQuote":true,"needEscape":true,"source":"The object that invokes the method on the <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is no object responsible for the call."},{"pos":[5027,5135],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.IComponentChangeService.ComponentChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.ComponentModel.Design.IComponentChangeService.ComponentChanged\"></xref> event."},{"pos":[5148,5628],"content":"Use the OnComponentChanged method to send notification that an instance of an object has changed.       Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnComponentChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the OnComponentChanged method to send notification that an instance of an object has changed.","pos":[0,97]},{"content":"Raising an event invokes the event handler through a delegate.","pos":[104,166]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[167,287],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."},{"content":"The OnComponentChanged method also allows derived classes to handle the event without attaching a delegate.","pos":[294,401]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[402,476]}]},{"pos":[6253,6362],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.IComponentChangeService.ComponentChanging\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.ComponentModel.Design.IComponentChangeService.ComponentChanging\"></xref> event."},{"pos":[6375,7000],"content":"Use the OnComponentChanging method to send notification that an instance of an object is about to be changed. This method also returns a value indicating whether this object can be changed. When `false` is returned, do not change the object.       Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnComponentChanging method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the OnComponentChanging method to send notification that an instance of an object is about to be changed.","pos":[0,109]},{"content":"This method also returns a value indicating whether this object can be changed.","pos":[110,189]},{"content":"When <ph id=\"ph1\">`false`</ph> is returned, do not change the object.","pos":[190,241],"source":" When `false` is returned, do not change the object."},{"content":"Raising an event invokes the event handler through a delegate.","pos":[248,310]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[311,431],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."},{"content":"The OnComponentChanging method also allows derived classes to handle the event without attaching a delegate.","pos":[438,546]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[547,621]}]},{"pos":[7138,7304],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this object can be changed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this object can be changed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7843,7961],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is associated with the given context item.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> that is associated with the given context item."},{"pos":[8145,8424],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that describes the given context item; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if there is no <bpt id=\"p3\">&lt;xref href=\"System.ComponentModel.PropertyDescriptor\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> responsible for the call.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> that describes the given context item; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is no <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> responsible for the call."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.ITypeDescriptorContext\n  id: ITypeDescriptorContext\n  children:\n  - System.ComponentModel.ITypeDescriptorContext.Container\n  - System.ComponentModel.ITypeDescriptorContext.Instance\n  - System.ComponentModel.ITypeDescriptorContext.OnComponentChanged\n  - System.ComponentModel.ITypeDescriptorContext.OnComponentChanging\n  - System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor\n  langs:\n  - csharp\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n  type: Interface\n  summary: Provides contextual information about a component, such as its container and property descriptor.\n  remarks: \"The ITypeDescriptorContext interface provides contextual information about a component. ITypeDescriptorContext is typically used at design time to provide information about a design-time container. This interface is commonly used in type conversion. For details, see <xref:System.ComponentModel.TypeConverter>.  \\n  \\n> [!NOTE]\\n>  Do not rely on the presence of this interface when you design a type converter. If a particular interface, property, or service is necessary but not available, the type converter should return `null` rather than throw an exception. This interface's properties can return `null` at any time, and you should plan for this.\"\n  example:\n  - \"The following code example demonstrates how to use the ITypeDescriptorContext interface to support type conversion.  \\n  \\n [!code-cpp[InstanceDescriptorSample#1](~/add/codesnippet/cpp/t-system.componentmodel._73_1.cpp)]\\n [!code-vb[InstanceDescriptorSample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._73_1.vb)]\\n [!code-cs[InstanceDescriptorSample#1](~/add/codesnippet/csharp/t-system.componentmodel._73_1.cs)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface ITypeDescriptorContext : IServiceProvider\n  implements:\n  - System.IServiceProvider\n  platform:\n  - net462\n- uid: System.ComponentModel.ITypeDescriptorContext.Container\n  id: Container\n  parent: System.ComponentModel.ITypeDescriptorContext\n  langs:\n  - csharp\n  name: Container\n  nameWithType: ITypeDescriptorContext.Container\n  fullName: System.ComponentModel.ITypeDescriptorContext.Container\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets the container representing this <xref href=\"System.ComponentModel.TypeDescriptor\"></xref> request.\n  remarks: The Container property gets the logical container of the component associated with the type descriptor.\n  syntax:\n    content: public System.ComponentModel.IContainer Container { get; }\n    return:\n      type: System.ComponentModel.IContainer\n      description: An <xref href=\"System.ComponentModel.IContainer\"></xref> with the set of objects for this <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is no container or if the <xref href=\"System.ComponentModel.TypeDescriptor\"></xref> does not use outside objects.\n  overload: System.ComponentModel.ITypeDescriptorContext.Container*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.ITypeDescriptorContext.Instance\n  id: Instance\n  parent: System.ComponentModel.ITypeDescriptorContext\n  langs:\n  - csharp\n  name: Instance\n  nameWithType: ITypeDescriptorContext.Instance\n  fullName: System.ComponentModel.ITypeDescriptorContext.Instance\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets the object that is connected with this type descriptor request.\n  remarks: The Instance property gets the object that is invoking the <xref:System.ComponentModel.ITypeDescriptorContext> interface. For example, if a type converter is given a <xref:System.Drawing.Color> to convert, Instance returns the actual instance of the control that is using the <xref:System.Drawing.Color>. You can subsequently query the control for further information about its services and its <xref:System.ComponentModel.ITypeDescriptorContext.Container%2A>.\n  syntax:\n    content: public object Instance { get; }\n    return:\n      type: System.Object\n      description: The object that invokes the method on the <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is no object responsible for the call.\n  overload: System.ComponentModel.ITypeDescriptorContext.Instance*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.ITypeDescriptorContext.OnComponentChanged\n  id: OnComponentChanged\n  parent: System.ComponentModel.ITypeDescriptorContext\n  langs:\n  - csharp\n  name: OnComponentChanged()\n  nameWithType: ITypeDescriptorContext.OnComponentChanged()\n  fullName: System.ComponentModel.ITypeDescriptorContext.OnComponentChanged()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Raises the <xref href=\"System.ComponentModel.Design.IComponentChangeService.ComponentChanged\"></xref> event.\n  remarks: \"Use the OnComponentChanged method to send notification that an instance of an object has changed.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The OnComponentChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: public void OnComponentChanged ();\n    parameters: []\n  overload: System.ComponentModel.ITypeDescriptorContext.OnComponentChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.ITypeDescriptorContext.OnComponentChanging\n  id: OnComponentChanging\n  parent: System.ComponentModel.ITypeDescriptorContext\n  langs:\n  - csharp\n  name: OnComponentChanging()\n  nameWithType: ITypeDescriptorContext.OnComponentChanging()\n  fullName: System.ComponentModel.ITypeDescriptorContext.OnComponentChanging()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Raises the <xref href=\"System.ComponentModel.Design.IComponentChangeService.ComponentChanging\"></xref> event.\n  remarks: \"Use the OnComponentChanging method to send notification that an instance of an object is about to be changed. This method also returns a value indicating whether this object can be changed. When `false` is returned, do not change the object.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The OnComponentChanging method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: public bool OnComponentChanging ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this object can be changed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.ITypeDescriptorContext.OnComponentChanging*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor\n  id: PropertyDescriptor\n  parent: System.ComponentModel.ITypeDescriptorContext\n  langs:\n  - csharp\n  name: PropertyDescriptor\n  nameWithType: ITypeDescriptorContext.PropertyDescriptor\n  fullName: System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets the <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> that is associated with the given context item.\n  syntax:\n    content: public System.ComponentModel.PropertyDescriptor PropertyDescriptor { get; }\n    return:\n      type: System.ComponentModel.PropertyDescriptor\n      description: The <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> that describes the given context item; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is no <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> responsible for the call.\n  overload: System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.ITypeDescriptorContext.Container\n  parent: System.ComponentModel.ITypeDescriptorContext\n  isExternal: false\n  name: Container\n  nameWithType: ITypeDescriptorContext.Container\n  fullName: System.ComponentModel.ITypeDescriptorContext.Container\n- uid: System.ComponentModel.IContainer\n  parent: System.ComponentModel\n  isExternal: false\n  name: IContainer\n  nameWithType: IContainer\n  fullName: System.ComponentModel.IContainer\n- uid: System.ComponentModel.ITypeDescriptorContext.Instance\n  parent: System.ComponentModel.ITypeDescriptorContext\n  isExternal: false\n  name: Instance\n  nameWithType: ITypeDescriptorContext.Instance\n  fullName: System.ComponentModel.ITypeDescriptorContext.Instance\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.ITypeDescriptorContext.OnComponentChanged\n  parent: System.ComponentModel.ITypeDescriptorContext\n  isExternal: false\n  name: OnComponentChanged()\n  nameWithType: ITypeDescriptorContext.OnComponentChanged()\n  fullName: System.ComponentModel.ITypeDescriptorContext.OnComponentChanged()\n- uid: System.ComponentModel.ITypeDescriptorContext.OnComponentChanging\n  parent: System.ComponentModel.ITypeDescriptorContext\n  isExternal: false\n  name: OnComponentChanging()\n  nameWithType: ITypeDescriptorContext.OnComponentChanging()\n  fullName: System.ComponentModel.ITypeDescriptorContext.OnComponentChanging()\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor\n  parent: System.ComponentModel.ITypeDescriptorContext\n  isExternal: false\n  name: PropertyDescriptor\n  nameWithType: ITypeDescriptorContext.PropertyDescriptor\n  fullName: System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor\n- uid: System.ComponentModel.PropertyDescriptor\n  parent: System.ComponentModel\n  isExternal: false\n  name: PropertyDescriptor\n  nameWithType: PropertyDescriptor\n  fullName: System.ComponentModel.PropertyDescriptor\n- uid: System.ComponentModel.ITypeDescriptorContext.Container*\n  parent: System.ComponentModel.ITypeDescriptorContext\n  isExternal: false\n  name: Container\n  nameWithType: ITypeDescriptorContext.Container\n- uid: System.ComponentModel.ITypeDescriptorContext.Instance*\n  parent: System.ComponentModel.ITypeDescriptorContext\n  isExternal: false\n  name: Instance\n  nameWithType: ITypeDescriptorContext.Instance\n- uid: System.ComponentModel.ITypeDescriptorContext.OnComponentChanged*\n  parent: System.ComponentModel.ITypeDescriptorContext\n  isExternal: false\n  name: OnComponentChanged\n  nameWithType: ITypeDescriptorContext.OnComponentChanged\n- uid: System.ComponentModel.ITypeDescriptorContext.OnComponentChanging*\n  parent: System.ComponentModel.ITypeDescriptorContext\n  isExternal: false\n  name: OnComponentChanging\n  nameWithType: ITypeDescriptorContext.OnComponentChanging\n- uid: System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor*\n  parent: System.ComponentModel.ITypeDescriptorContext\n  isExternal: false\n  name: PropertyDescriptor\n  nameWithType: ITypeDescriptorContext.PropertyDescriptor\n"}