{"nodes":[{"pos":[513,642],"content":"Wraps remoting data for passing between message sinks, either for requests from client to server or for the subsequent responses.","needQuote":true,"needEscape":true,"nodes":[{"content":"Wraps remoting data for passing between message sinks, either for requests from client to server or for the subsequent responses.","pos":[0,129]}]},{"pos":[655,1224],"content":"The InternalMessageWrapper class is the base class for the <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> and <xref:System.Runtime.Remoting.Messaging.MethodReturnMessageWrapper> classes, which wrap messages for method calls on remote objects.       InternalMessageWrapper is used by the infrastructure of the .NET Framework. You do not need to create instances of the InternalMessageWrapper, <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper>, and <xref:System.Runtime.Remoting.Messaging.MethodReturnMessageWrapper> classes directly.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The InternalMessageWrapper class is the base class for the <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> and <xref:System.Runtime.Remoting.Messaging.MethodReturnMessageWrapper> classes, which wrap messages for method calls on remote objects.       InternalMessageWrapper is used by the infrastructure of the .NET Framework. You do not need to create instances of the InternalMessageWrapper, <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper>, and <xref:System.Runtime.Remoting.Messaging.MethodReturnMessageWrapper> classes directly.","pos":[0,567],"nodes":[{"content":"The InternalMessageWrapper class is the base class for the &lt;xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper&gt; and &lt;xref:System.Runtime.Remoting.Messaging.MethodReturnMessageWrapper&gt; classes, which wrap messages for method calls on remote objects.","pos":[0,261],"source":"The InternalMessageWrapper class is the base class for the <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> and <xref:System.Runtime.Remoting.Messaging.MethodReturnMessageWrapper> classes, which wrap messages for method calls on remote objects."},{"content":"InternalMessageWrapper is used by the infrastructure of the .NET Framework.","pos":[268,343]},{"content":"You do not need to create instances of the InternalMessageWrapper, &lt;xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper&gt;, and &lt;xref:System.Runtime.Remoting.Messaging.MethodReturnMessageWrapper&gt; classes directly.","pos":[344,567],"source":" You do not need to create instances of the InternalMessageWrapper, <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper>, and <xref:System.Runtime.Remoting.Messaging.MethodReturnMessageWrapper> classes directly."}]}]},{"pos":[2068,2186],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.Messaging.InternalMessageWrapper\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Messaging.InternalMessageWrapper\"></xref> class."},{"pos":[2199,2933],"content":"The <xref:System.Runtime.Remoting.Messaging.InternalMessageWrapper> class is used by the remoting infrastructure of the .NET Framework. You do not need to create an <xref:System.Runtime.Remoting.Messaging.InternalMessageWrapper> directly.       The <xref:System.Runtime.Remoting.Messaging.IMessage> parameter also implements the derived interface, <xref:System.Runtime.Remoting.Messaging.IMethodMessage>, which indicates that the message acts as a request or as a response on a remote method call. The <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage> and <xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage> interfaces, in turn, inherit from the <xref:System.Runtime.Remoting.Messaging.IMethodMessage> interface.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.Runtime.Remoting.Messaging.InternalMessageWrapper> class is used by the remoting infrastructure of the .NET Framework. You do not need to create an <xref:System.Runtime.Remoting.Messaging.InternalMessageWrapper> directly.       The <xref:System.Runtime.Remoting.Messaging.IMessage> parameter also implements the derived interface, <xref:System.Runtime.Remoting.Messaging.IMethodMessage>, which indicates that the message acts as a request or as a response on a remote method call. The <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage> and <xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage> interfaces, in turn, inherit from the <xref:System.Runtime.Remoting.Messaging.IMethodMessage> interface.","pos":[0,732],"nodes":[{"content":"The &lt;xref:System.Runtime.Remoting.Messaging.InternalMessageWrapper&gt; class is used by the remoting infrastructure of the .NET Framework.","pos":[0,135],"source":"The <xref:System.Runtime.Remoting.Messaging.InternalMessageWrapper> class is used by the remoting infrastructure of the .NET Framework."},{"content":"You do not need to create an &lt;xref:System.Runtime.Remoting.Messaging.InternalMessageWrapper&gt; directly.","pos":[136,238],"source":" You do not need to create an <xref:System.Runtime.Remoting.Messaging.InternalMessageWrapper> directly."},{"content":"The &lt;xref:System.Runtime.Remoting.Messaging.IMessage&gt; parameter also implements the derived interface, &lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage&gt;, which indicates that the message acts as a request or as a response on a remote method call.","pos":[245,497],"source":"       The <xref:System.Runtime.Remoting.Messaging.IMessage> parameter also implements the derived interface, <xref:System.Runtime.Remoting.Messaging.IMethodMessage>, which indicates that the message acts as a request or as a response on a remote method call."},{"content":"The &lt;xref:System.Runtime.Remoting.Messaging.IMethodCallMessage&gt; and &lt;xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage&gt; interfaces, in turn, inherit from the &lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage&gt; interface.","pos":[498,732],"source":" The <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage> and <xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage> interfaces, in turn, inherit from the <xref:System.Runtime.Remoting.Messaging.IMethodMessage> interface."}]}]},{"pos":[3142,3246],"content":"A message that acts either as an outgoing method call on a remote object, or as the subsequent response.","needQuote":true,"needEscape":true,"nodes":[{"content":"A message that acts either as an outgoing method call on a remote object, or as the subsequent response.","pos":[0,104]}]},{"pos":[3810,3964],"content":"Represents the request or response <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.Messaging.IMethodMessage\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> interface that is wrapped by the message wrapper.","needQuote":true,"needEscape":true,"source":"Represents the request or response <xref href=\"System.Runtime.Remoting.Messaging.IMethodMessage\"></xref> interface that is wrapped by the message wrapper."},{"pos":[4143,4155],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.Messaging.InternalMessageWrapper\n  id: InternalMessageWrapper\n  children:\n  - System.Runtime.Remoting.Messaging.InternalMessageWrapper.#ctor(System.Runtime.Remoting.Messaging.IMessage)\n  - System.Runtime.Remoting.Messaging.InternalMessageWrapper.WrappedMessage\n  langs:\n  - csharp\n  name: InternalMessageWrapper\n  nameWithType: InternalMessageWrapper\n  fullName: System.Runtime.Remoting.Messaging.InternalMessageWrapper\n  type: Class\n  summary: Wraps remoting data for passing between message sinks, either for requests from client to server or for the subsequent responses.\n  remarks: \"The InternalMessageWrapper class is the base class for the <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> and <xref:System.Runtime.Remoting.Messaging.MethodReturnMessageWrapper> classes, which wrap messages for method calls on remote objects.  \\n  \\n InternalMessageWrapper is used by the infrastructure of the .NET Framework. You do not need to create instances of the InternalMessageWrapper, <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper>, and <xref:System.Runtime.Remoting.Messaging.MethodReturnMessageWrapper> classes directly.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      [System.Security.SecurityCritical]\n\n      public class InternalMessageWrapper\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Messaging.InternalMessageWrapper.#ctor(System.Runtime.Remoting.Messaging.IMessage)\n  id: '#ctor(System.Runtime.Remoting.Messaging.IMessage)'\n  parent: System.Runtime.Remoting.Messaging.InternalMessageWrapper\n  langs:\n  - csharp\n  name: InternalMessageWrapper(IMessage)\n  nameWithType: InternalMessageWrapper.InternalMessageWrapper(IMessage)\n  fullName: System.Runtime.Remoting.Messaging.InternalMessageWrapper.InternalMessageWrapper(IMessage)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Messaging.InternalMessageWrapper\"></xref> class.\n  remarks: \"The <xref:System.Runtime.Remoting.Messaging.InternalMessageWrapper> class is used by the remoting infrastructure of the .NET Framework. You do not need to create an <xref:System.Runtime.Remoting.Messaging.InternalMessageWrapper> directly.  \\n  \\n The <xref:System.Runtime.Remoting.Messaging.IMessage> parameter also implements the derived interface, <xref:System.Runtime.Remoting.Messaging.IMethodMessage>, which indicates that the message acts as a request or as a response on a remote method call. The <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage> and <xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage> interfaces, in turn, inherit from the <xref:System.Runtime.Remoting.Messaging.IMethodMessage> interface.\"\n  syntax:\n    content: public InternalMessageWrapper (System.Runtime.Remoting.Messaging.IMessage msg);\n    parameters:\n    - id: msg\n      type: System.Runtime.Remoting.Messaging.IMessage\n      description: A message that acts either as an outgoing method call on a remote object, or as the subsequent response.\n  overload: System.Runtime.Remoting.Messaging.InternalMessageWrapper.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Messaging.InternalMessageWrapper.WrappedMessage\n  id: WrappedMessage\n  parent: System.Runtime.Remoting.Messaging.InternalMessageWrapper\n  langs:\n  - csharp\n  name: WrappedMessage\n  nameWithType: InternalMessageWrapper.WrappedMessage\n  fullName: System.Runtime.Remoting.Messaging.InternalMessageWrapper.WrappedMessage\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Represents the request or response <xref href=\"System.Runtime.Remoting.Messaging.IMethodMessage\"></xref> interface that is wrapped by the message wrapper.\n  syntax:\n    content: protected System.Runtime.Remoting.Messaging.IMessage WrappedMessage;\n    return:\n      type: System.Runtime.Remoting.Messaging.IMessage\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Runtime.Remoting.Messaging.InternalMessageWrapper.#ctor(System.Runtime.Remoting.Messaging.IMessage)\n  parent: System.Runtime.Remoting.Messaging.InternalMessageWrapper\n  isExternal: false\n  name: InternalMessageWrapper(IMessage)\n  nameWithType: InternalMessageWrapper.InternalMessageWrapper(IMessage)\n  fullName: System.Runtime.Remoting.Messaging.InternalMessageWrapper.InternalMessageWrapper(IMessage)\n- uid: System.Runtime.Remoting.Messaging.IMessage\n  parent: System.Runtime.Remoting.Messaging\n  isExternal: false\n  name: IMessage\n  nameWithType: IMessage\n  fullName: System.Runtime.Remoting.Messaging.IMessage\n- uid: System.Runtime.Remoting.Messaging.InternalMessageWrapper.WrappedMessage\n  parent: System.Runtime.Remoting.Messaging.InternalMessageWrapper\n  isExternal: false\n  name: WrappedMessage\n  nameWithType: InternalMessageWrapper.WrappedMessage\n  fullName: System.Runtime.Remoting.Messaging.InternalMessageWrapper.WrappedMessage\n- uid: System.Runtime.Remoting.Messaging.InternalMessageWrapper.#ctor*\n  parent: System.Runtime.Remoting.Messaging.InternalMessageWrapper\n  isExternal: false\n  name: InternalMessageWrapper\n  nameWithType: InternalMessageWrapper.InternalMessageWrapper\n"}