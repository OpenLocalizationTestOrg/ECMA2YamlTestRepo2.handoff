{"nodes":[{"pos":[497,624],"content":"Manages a <xref href=\"System.Web.Security.RolePrincipal\"></xref> instance for the current user. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Manages a <bpt id=\"p1\">&lt;xref href=\"System.Web.Security.RolePrincipal\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance for the current user.","pos":[0,95],"source":"Manages a <xref href=\"System.Web.Security.RolePrincipal\"></xref> instance for the current user."},{"content":"This class cannot be inherited.","pos":[96,127]}]},{"pos":[637,1448],"content":"The RoleManagerModule class is used to assign a <xref:System.Web.Security.RolePrincipal> to the <xref:System.Web.HttpContext.User%2A> property of the <xref:System.Web.HttpContext.Current%2A><xref:System.Web.HttpContext>.       When a request completes, the RoleManagerModule refreshes the roles cookie that contains cached role information. If the <xref:System.Web.HttpContext.User%2A> property is of type <xref:System.Web.Security.RolePrincipal>, and that <xref:System.Web.Security.RolePrincipal> indicates that its cached role list has been modified by setting the <xref:System.Web.Security.RolePrincipal.CachedListChanged%2A> property to `true`, the RoleManagerModule will update the roles cookie that contains cached role information.       This class is not intended to be used directly from your code.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The RoleManagerModule class is used to assign a &lt;xref:System.Web.Security.RolePrincipal&gt; to the &lt;xref:System.Web.HttpContext.User%2A&gt; property of the &lt;xref:System.Web.HttpContext.Current%2A&gt;&lt;xref:System.Web.HttpContext&gt;.","pos":[0,220],"source":"The RoleManagerModule class is used to assign a <xref:System.Web.Security.RolePrincipal> to the <xref:System.Web.HttpContext.User%2A> property of the <xref:System.Web.HttpContext.Current%2A><xref:System.Web.HttpContext>."},{"content":"When a request completes, the RoleManagerModule refreshes the roles cookie that contains cached role information.","pos":[227,340]},{"content":"If the &lt;xref:System.Web.HttpContext.User%2A&gt; property is of type &lt;xref:System.Web.Security.RolePrincipal&gt;, and that &lt;xref:System.Web.Security.RolePrincipal&gt; indicates that its cached role list has been modified by setting the &lt;xref:System.Web.Security.RolePrincipal.CachedListChanged%2A&gt; property to <ph id=\"ph1\">`true`</ph>, the RoleManagerModule will update the roles cookie that contains cached role information.","pos":[341,738],"source":" If the <xref:System.Web.HttpContext.User%2A> property is of type <xref:System.Web.Security.RolePrincipal>, and that <xref:System.Web.Security.RolePrincipal> indicates that its cached role list has been modified by setting the <xref:System.Web.Security.RolePrincipal.CachedListChanged%2A> property to `true`, the RoleManagerModule will update the roles cookie that contains cached role information."},{"content":"This class is not intended to be used directly from your code.","pos":[745,807]}]},{"pos":[2036,2131],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Security.RoleManagerModule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.Web.Security.RoleManagerModule\"></xref> class."},{"pos":[2143,2444],"content":"The <xref:System.Web.Security.RoleManagerModule> class is used to place a <xref:System.Web.Security.RolePrincipal> in the <xref:System.Web.HttpContext.User%2A> property of the <xref:System.Web.HttpContext.Current%2A><xref:System.Web.HttpContext> and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.Security.RoleManagerModule&gt; class is used to place a &lt;xref:System.Web.Security.RolePrincipal&gt; in the &lt;xref:System.Web.HttpContext.User%2A&gt; property of the &lt;xref:System.Web.HttpContext.Current%2A&gt;&lt;xref:System.Web.HttpContext&gt; and is not intended to be used directly from your code.","pos":[0,301],"source":"The <xref:System.Web.Security.RoleManagerModule> class is used to place a <xref:System.Web.Security.RolePrincipal> in the <xref:System.Web.HttpContext.User%2A> property of the <xref:System.Web.HttpContext.Current%2A><xref:System.Web.HttpContext> and is not intended to be used directly from your code."}]},{"pos":[2958,3023],"content":"Called by the HTTP runtime to dispose of the role-manager module.","needQuote":true,"needEscape":true,"nodes":[{"content":"Called by the HTTP runtime to dispose of the role-manager module.","pos":[0,65]}]},{"pos":[3036,3468],"content":"Call Dispose when you are finished using the <xref:System.Web.Security.RoleManagerModule>. The Dispose method leaves the <xref:System.Web.Security.RoleManagerModule> in an unusable state. After calling Dispose, you must release all references to the <xref:System.Web.Security.RoleManagerModule> so the memory it occupied can be reclaimed by garbage collection.       This method is not intended to be used directly from your code.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Call Dispose when you are finished using the <xref:System.Web.Security.RoleManagerModule>. The Dispose method leaves the <xref:System.Web.Security.RoleManagerModule> in an unusable state. After calling Dispose, you must release all references to the <xref:System.Web.Security.RoleManagerModule> so the memory it occupied can be reclaimed by garbage collection.       This method is not intended to be used directly from your code.","pos":[0,430],"nodes":[{"content":"Call Dispose when you are finished using the &lt;xref:System.Web.Security.RoleManagerModule&gt;.","pos":[0,90],"source":"Call Dispose when you are finished using the <xref:System.Web.Security.RoleManagerModule>."},{"content":"The Dispose method leaves the &lt;xref:System.Web.Security.RoleManagerModule&gt; in an unusable state.","pos":[91,187],"source":" The Dispose method leaves the <xref:System.Web.Security.RoleManagerModule> in an unusable state."},{"content":"After calling Dispose, you must release all references to the &lt;xref:System.Web.Security.RoleManagerModule&gt; so the memory it occupied can be reclaimed by garbage collection.","pos":[188,360],"source":" After calling Dispose, you must release all references to the <xref:System.Web.Security.RoleManagerModule> so the memory it occupied can be reclaimed by garbage collection."},{"content":"This method is not intended to be used directly from your code.","pos":[367,430]}]}]},{"pos":[3978,4197],"content":"A global application event that is raised when the <bpt id=\"p1\">&lt;xref href=\"System.Web.Security.RoleManagerModule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is ready to create a <bpt id=\"p2\">&lt;xref href=\"System.Web.Security.RolePrincipal\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> that represents the current user.","needQuote":true,"needEscape":true,"source":"A global application event that is raised when the <xref href=\"System.Web.Security.RoleManagerModule\"></xref> is ready to create a <xref href=\"System.Web.Security.RolePrincipal\"></xref> that represents the current user."},{"pos":[4210,5343],"content":"The GetRoles event is raised before the <xref:System.Web.Security.RoleManagerModule> creates a <xref:System.Web.Security.RolePrincipal> object and assigns it to the <xref:System.Web.HttpContext.User%2A> property of the <xref:System.Web.HttpContext.Current%2A><xref:System.Web.HttpContext>. You can use this event to audit when role information is applied or to replace the creation of a <xref:System.Web.Security.RolePrincipal> by the <xref:System.Web.Security.RoleManagerModule> with your own code.       You can cancel the application of role information by the <xref:System.Web.Security.RoleManagerModule> by setting the <xref:System.Web.Security.RoleManagerEventArgs.RolesPopulated%2A> property of the <xref:System.Web.Security.RoleManagerEventArgs> to `true` in the GetRoles event.       If you set <xref:System.Web.Security.RoleManagerEventArgs.RolesPopulated%2A> to `true` in your GetRoles event handler, then the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> is not set to a <xref:System.Web.Security.RolePrincipal> object by the <xref:System.Web.Security.RoleManagerModule>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetRoles event is raised before the &lt;xref:System.Web.Security.RoleManagerModule&gt; creates a &lt;xref:System.Web.Security.RolePrincipal&gt; object and assigns it to the &lt;xref:System.Web.HttpContext.User%2A&gt; property of the &lt;xref:System.Web.HttpContext.Current%2A&gt;&lt;xref:System.Web.HttpContext&gt;.","pos":[0,289],"source":"The GetRoles event is raised before the <xref:System.Web.Security.RoleManagerModule> creates a <xref:System.Web.Security.RolePrincipal> object and assigns it to the <xref:System.Web.HttpContext.User%2A> property of the <xref:System.Web.HttpContext.Current%2A><xref:System.Web.HttpContext>."},{"content":"You can use this event to audit when role information is applied or to replace the creation of a &lt;xref:System.Web.Security.RolePrincipal&gt; by the &lt;xref:System.Web.Security.RoleManagerModule&gt; with your own code.","pos":[290,499],"source":" You can use this event to audit when role information is applied or to replace the creation of a <xref:System.Web.Security.RolePrincipal> by the <xref:System.Web.Security.RoleManagerModule> with your own code."},{"content":"You can cancel the application of role information by the &lt;xref:System.Web.Security.RoleManagerModule&gt; by setting the &lt;xref:System.Web.Security.RoleManagerEventArgs.RolesPopulated%2A&gt; property of the &lt;xref:System.Web.Security.RoleManagerEventArgs&gt; to <ph id=\"ph1\">`true`</ph> in the GetRoles event.","pos":[506,786],"source":"       You can cancel the application of role information by the <xref:System.Web.Security.RoleManagerModule> by setting the <xref:System.Web.Security.RoleManagerEventArgs.RolesPopulated%2A> property of the <xref:System.Web.Security.RoleManagerEventArgs> to `true` in the GetRoles event."},{"content":"If you set &lt;xref:System.Web.Security.RoleManagerEventArgs.RolesPopulated%2A&gt; to <ph id=\"ph1\">`true`</ph> in your GetRoles event handler, then the &lt;xref:System.Web.HttpContext.User%2A&gt; property of the current &lt;xref:System.Web.HttpContext&gt; is not set to a &lt;xref:System.Web.Security.RolePrincipal&gt; object by the &lt;xref:System.Web.Security.RoleManagerModule&gt;.","pos":[793,1129],"source":"       If you set <xref:System.Web.Security.RoleManagerEventArgs.RolesPopulated%2A> to `true` in your GetRoles event handler, then the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> is not set to a <xref:System.Web.Security.RolePrincipal> object by the <xref:System.Web.Security.RoleManagerModule>."}]},{"pos":[5993,6005],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6477,6536],"content":"Associates the role manager with the specified application.","needQuote":true,"needEscape":true,"nodes":[{"content":"Associates the role manager with the specified application.","pos":[0,59]}]},{"pos":[6548,6841],"content":"This method subscribes to the <xref:System.Web.HttpApplication.PostAuthorizeRequest> and <xref:System.Web.HttpApplication.EndRequest> methods of the specified <xref:System.Web.HttpApplication> for the purpose of managing role information and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method subscribes to the &lt;xref:System.Web.HttpApplication.PostAuthorizeRequest&gt; and &lt;xref:System.Web.HttpApplication.EndRequest&gt; methods of the specified &lt;xref:System.Web.HttpApplication&gt; for the purpose of managing role information and is not intended to be used directly from your code.","pos":[0,293],"source":"This method subscribes to the <xref:System.Web.HttpApplication.PostAuthorizeRequest> and <xref:System.Web.HttpApplication.EndRequest> methods of the specified <xref:System.Web.HttpApplication> for the purpose of managing role information and is not intended to be used directly from your code."}]},{"pos":[7004,7137],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpApplication\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to associate the <bpt id=\"p2\">&lt;xref href=\"System.Web.Security.RoleManagerModule\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> with.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.HttpApplication\"></xref> to associate the <xref href=\"System.Web.Security.RoleManagerModule\"></xref> with."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Security.RoleManagerModule\n  id: RoleManagerModule\n  children:\n  - System.Web.Security.RoleManagerModule.#ctor\n  - System.Web.Security.RoleManagerModule.Dispose\n  - System.Web.Security.RoleManagerModule.GetRoles\n  - System.Web.Security.RoleManagerModule.Init(System.Web.HttpApplication)\n  langs:\n  - csharp\n  name: RoleManagerModule\n  nameWithType: RoleManagerModule\n  fullName: System.Web.Security.RoleManagerModule\n  type: Class\n  summary: Manages a <xref href=\"System.Web.Security.RolePrincipal\"></xref> instance for the current user. This class cannot be inherited.\n  remarks: \"The RoleManagerModule class is used to assign a <xref:System.Web.Security.RolePrincipal> to the <xref:System.Web.HttpContext.User%2A> property of the <xref:System.Web.HttpContext.Current%2A><xref:System.Web.HttpContext>.  \\n  \\n When a request completes, the RoleManagerModule refreshes the roles cookie that contains cached role information. If the <xref:System.Web.HttpContext.User%2A> property is of type <xref:System.Web.Security.RolePrincipal>, and that <xref:System.Web.Security.RolePrincipal> indicates that its cached role list has been modified by setting the <xref:System.Web.Security.RolePrincipal.CachedListChanged%2A> property to `true`, the RoleManagerModule will update the roles cookie that contains cached role information.  \\n  \\n This class is not intended to be used directly from your code.\"\n  syntax:\n    content: 'public sealed class RoleManagerModule : System.Web.IHttpModule'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Web.IHttpModule\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.Security.RoleManagerModule.#ctor\n  id: '#ctor'\n  parent: System.Web.Security.RoleManagerModule\n  langs:\n  - csharp\n  name: RoleManagerModule()\n  nameWithType: RoleManagerModule.RoleManagerModule()\n  fullName: System.Web.Security.RoleManagerModule.RoleManagerModule()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Creates a new instance of the <xref href=\"System.Web.Security.RoleManagerModule\"></xref> class.\n  remarks: The <xref:System.Web.Security.RoleManagerModule> class is used to place a <xref:System.Web.Security.RolePrincipal> in the <xref:System.Web.HttpContext.User%2A> property of the <xref:System.Web.HttpContext.Current%2A><xref:System.Web.HttpContext> and is not intended to be used directly from your code.\n  syntax:\n    content: public RoleManagerModule ();\n    parameters: []\n  overload: System.Web.Security.RoleManagerModule.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.RoleManagerModule.Dispose\n  id: Dispose\n  parent: System.Web.Security.RoleManagerModule\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: RoleManagerModule.Dispose()\n  fullName: System.Web.Security.RoleManagerModule.Dispose()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Called by the HTTP runtime to dispose of the role-manager module.\n  remarks: \"Call Dispose when you are finished using the <xref:System.Web.Security.RoleManagerModule>. The Dispose method leaves the <xref:System.Web.Security.RoleManagerModule> in an unusable state. After calling Dispose, you must release all references to the <xref:System.Web.Security.RoleManagerModule> so the memory it occupied can be reclaimed by garbage collection.  \\n  \\n This method is not intended to be used directly from your code.\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Web.Security.RoleManagerModule.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.RoleManagerModule.GetRoles\n  id: GetRoles\n  parent: System.Web.Security.RoleManagerModule\n  langs:\n  - csharp\n  name: GetRoles\n  nameWithType: RoleManagerModule.GetRoles\n  fullName: System.Web.Security.RoleManagerModule.GetRoles\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: A global application event that is raised when the <xref href=\"System.Web.Security.RoleManagerModule\"></xref> is ready to create a <xref href=\"System.Web.Security.RolePrincipal\"></xref> that represents the current user.\n  remarks: \"The GetRoles event is raised before the <xref:System.Web.Security.RoleManagerModule> creates a <xref:System.Web.Security.RolePrincipal> object and assigns it to the <xref:System.Web.HttpContext.User%2A> property of the <xref:System.Web.HttpContext.Current%2A><xref:System.Web.HttpContext>. You can use this event to audit when role information is applied or to replace the creation of a <xref:System.Web.Security.RolePrincipal> by the <xref:System.Web.Security.RoleManagerModule> with your own code.  \\n  \\n You can cancel the application of role information by the <xref:System.Web.Security.RoleManagerModule> by setting the <xref:System.Web.Security.RoleManagerEventArgs.RolesPopulated%2A> property of the <xref:System.Web.Security.RoleManagerEventArgs> to `true` in the GetRoles event.  \\n  \\n If you set <xref:System.Web.Security.RoleManagerEventArgs.RolesPopulated%2A> to `true` in your GetRoles event handler, then the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> is not set to a <xref:System.Web.Security.RolePrincipal> object by the <xref:System.Web.Security.RoleManagerModule>.\"\n  example:\n  - \"The following example shows the GetRoles event included in the Global.asax file for an ASP.NET application. The GetRoles event adds a trace notification for an application where trace is enabled in the Web.config file.  \\n  \\n [!code-cs[System.Web.Security.RoleManagerModule#1](~/add/codesnippet/csharp/e-system.web.security.ro_1.asax)]\\n [!code-vb[System.Web.Security.RoleManagerModule#1](~/add/codesnippet/visualbasic/e-system.web.security.ro_1.asax)]\"\n  syntax:\n    content: public event System.Web.Security.RoleManagerEventHandler GetRoles;\n    return:\n      type: System.Web.Security.RoleManagerEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.RoleManagerModule.Init(System.Web.HttpApplication)\n  id: Init(System.Web.HttpApplication)\n  parent: System.Web.Security.RoleManagerModule\n  langs:\n  - csharp\n  name: Init(HttpApplication)\n  nameWithType: RoleManagerModule.Init(HttpApplication)\n  fullName: System.Web.Security.RoleManagerModule.Init(HttpApplication)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Associates the role manager with the specified application.\n  remarks: This method subscribes to the <xref:System.Web.HttpApplication.PostAuthorizeRequest> and <xref:System.Web.HttpApplication.EndRequest> methods of the specified <xref:System.Web.HttpApplication> for the purpose of managing role information and is not intended to be used directly from your code.\n  syntax:\n    content: public void Init (System.Web.HttpApplication app);\n    parameters:\n    - id: app\n      type: System.Web.HttpApplication\n      description: The <xref href=\"System.Web.HttpApplication\"></xref> to associate the <xref href=\"System.Web.Security.RoleManagerModule\"></xref> with.\n  overload: System.Web.Security.RoleManagerModule.Init*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Web.Security.RoleManagerModule.#ctor\n  parent: System.Web.Security.RoleManagerModule\n  isExternal: false\n  name: RoleManagerModule()\n  nameWithType: RoleManagerModule.RoleManagerModule()\n  fullName: System.Web.Security.RoleManagerModule.RoleManagerModule()\n- uid: System.Web.Security.RoleManagerModule.Dispose\n  parent: System.Web.Security.RoleManagerModule\n  isExternal: false\n  name: Dispose()\n  nameWithType: RoleManagerModule.Dispose()\n  fullName: System.Web.Security.RoleManagerModule.Dispose()\n- uid: System.Web.Security.RoleManagerModule.GetRoles\n  parent: System.Web.Security.RoleManagerModule\n  isExternal: false\n  name: GetRoles\n  nameWithType: RoleManagerModule.GetRoles\n  fullName: System.Web.Security.RoleManagerModule.GetRoles\n- uid: System.Web.Security.RoleManagerEventHandler\n  parent: System.Web.Security\n  isExternal: false\n  name: RoleManagerEventHandler\n  nameWithType: RoleManagerEventHandler\n  fullName: System.Web.Security.RoleManagerEventHandler\n- uid: System.Web.Security.RoleManagerModule.Init(System.Web.HttpApplication)\n  parent: System.Web.Security.RoleManagerModule\n  isExternal: false\n  name: Init(HttpApplication)\n  nameWithType: RoleManagerModule.Init(HttpApplication)\n  fullName: System.Web.Security.RoleManagerModule.Init(HttpApplication)\n- uid: System.Web.HttpApplication\n  parent: System.Web\n  isExternal: false\n  name: HttpApplication\n  nameWithType: HttpApplication\n  fullName: System.Web.HttpApplication\n- uid: System.Web.Security.RoleManagerModule.#ctor*\n  parent: System.Web.Security.RoleManagerModule\n  isExternal: false\n  name: RoleManagerModule\n  nameWithType: RoleManagerModule.RoleManagerModule\n- uid: System.Web.Security.RoleManagerModule.Dispose*\n  parent: System.Web.Security.RoleManagerModule\n  isExternal: false\n  name: Dispose\n  nameWithType: RoleManagerModule.Dispose\n- uid: System.Web.Security.RoleManagerModule.Init*\n  parent: System.Web.Security.RoleManagerModule\n  isExternal: false\n  name: Init\n  nameWithType: RoleManagerModule.Init\n"}