{"nodes":[{"pos":[871,1132],"content":"Helps to secure another implementation of <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> by wrapping the <bpt id=\"p2\">&lt;xref href=\"System.Xml.XmlResolver\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object and restricting the resources that the underlying <bpt id=\"p3\">&lt;xref href=\"System.Xml.XmlResolver\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> has access to.","needQuote":true,"needEscape":true,"source":"Helps to secure another implementation of <xref href=\"System.Xml.XmlResolver\"></xref> by wrapping the <xref href=\"System.Xml.XmlResolver\"></xref> object and restricting the resources that the underlying <xref href=\"System.Xml.XmlResolver\"></xref> has access to."},{"pos":[1145,8856],"content":"The <xref:System.Xml.XmlUrlResolver> class is the default resolver for all classes in the <xref:System.Xml> namespace. It is used to load XML documents and to resolve external resources such as entities, DTDs or schemas, and import or include directives.       You can override this default by specifying the <xref:System.Xml.XmlResolver> object to use. For example, if you want to restrict the resources that the underlying <xref:System.Xml.XmlResolver> can access, you can use an XmlSecureResolver object.       XmlSecureResolver wraps around a concrete implementation of <xref:System.Xml.XmlResolver> and restricts the resources that the underlying <xref:System.Xml.XmlResolver> has access to. For example, XmlSecureResolver has the ability to prohibit cross-domain redirection, which occurs from an embedded Uniform Resource Identifier (URI) reference.       When you construct an XmlSecureResolver object, you provide a valid <xref:System.Xml.XmlResolver> implementation along with a URL, an instance of an evidence object, or a permission set, which is used by the XmlSecureResolver to determine security. Either a <xref:System.Security.PermissionSet?displayProperty=fullName> is generated or the existing one is used and <xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName> is called on it to help secure the underlying <xref:System.Xml.XmlResolver>.      > [!IMPORTANT] >  XmlSecureResolver objects can contain sensitive information such as user credentials. You should be careful when caching XmlSecureResolver objects and should not pass the XmlSecureResolver object to an untrusted component.      > [!IMPORTANT] >  There are differences in the security infrastructure for code running on the .NET Framework common language runtime (CLR) and for code running on the CLR that is integrated within Microsoft SQL Server 2005. This can lead to cases where code developed for the .NET Framework CLR operates differently when used on the SQL Server integrated CLR. One of these differences affects the XmlSecureResolver class when you have evidence that is based on a URL (that is, when you use the <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%28System.String%29> method or the <xref:System.Xml.XmlSecureResolver.%23ctor%2A> constructor). The policy resolution mechanism of the SQL Server integrated CLR does not use the <xref:System.Security.Policy.Url> or <xref:System.Security.Policy.Zone> information. Instead, it grants permissions based on the GUID that the server adds when assemblies are loaded. When you use the XmlSecureResolver in the SQL Server integrated CLR, provide any required evidence directly by using a specified <xref:System.Security.PermissionSet>.      ## To use a secure resolver      1.  Create an XmlSecureResolver with the correct permission set.      2.  Create an <xref:System.Xml.XmlReaderSettings> object that uses the XmlSecureResolver object.           [!code-vb[XmlSecureResolver_Samples#5a](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_1.vb)]      [!code-cs[XmlSecureResolver_Samples#5a](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_1.cs)]      3.  Pass  the <xref:System.Xml.XmlReaderSettings> object to the <xref:System.Xml.XmlReader.Create%2A> method when you're creating the <xref:System.Xml.XmlReader> object.           [!code-vb[XmlSecureResolver_Samples#5b](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_2.vb)]      [!code-cs[XmlSecureResolver_Samples#5b](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_2.cs)]      ## To restrict access by using a URL    Use the <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29> constructor to create an XmlSecureResolver object that is allowed to access your local intranet site only.       [!code-vb[XmlSecureResolver_Samples#3](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_3.vb)]  [!code-cs[XmlSecureResolver_Samples#3](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_3.cs)]      ## To restrict access by using a permission set      1.  Create a <xref:System.Net.WebPermission> object.           [!code-vb[XmlSecureResolver_Samples#4a](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_4.vb)]      [!code-cs[XmlSecureResolver_Samples#4a](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_4.cs)]      2.  Specify the URLs that you want to allow access to.           [!code-vb[XmlSecureResolver_Samples#4b](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_5.vb)]      [!code-cs[XmlSecureResolver_Samples#4b](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_5.cs)]      3.  Add the web permissions to the <xref:System.Security.PermissionSet> object.           [!code-vb[XmlSecureResolver_Samples#4c](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_6.vb)]      [!code-cs[XmlSecureResolver_Samples#4c](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_6.cs)]      4.  Use the <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.PermissionSet%29> constructor to create an XmlSecureResolver object by using the permission set.           [!code-vb[XmlSecureResolver_Samples#4d](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_7.vb)]      [!code-cs[XmlSecureResolver_Samples#4d](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_7.cs)]           See the <xref:System.Xml.XmlSecureResolver.%23ctor%2A> reference page for another example.      ## To restrict access by using evidence    You can restrict access by using the <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> constructor and specifying <xref:System.Security.Policy.Evidence>. The <xref:System.Security.Policy.Evidence> is used to create the <xref:System.Security.PermissionSet> that is applied to the underlying <xref:System.Xml.XmlResolver>. The XmlSecureResolver calls <xref:System.Security.PermissionSet.PermitOnly%2A> on the created <xref:System.Security.PermissionSet> before opening any resources.       Here are some common scenarios and the type of evidence to provide for each:      -   If you are working in a fully trusted environment, use your assembly to create the evidence:           [!code-vb[XmlSecureResolver_Samples#1](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_8.vb)]      [!code-cs[XmlSecureResolver_Samples#1](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_8.cs)]      -   If you are working in a semi-trusted environment, you have code or data coming from an outside source, and you know the origin of the outside source and have a verifiable URI, use the URI to create the evidence:           [!code-vb[XmlSecureResolver_Samples#2](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_9.vb)]      [!code-cs[XmlSecureResolver_Samples#2](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_9.cs)]      -   If you are working in a semi-trusted environment and you have code or data coming from an outside source, but you don't know the origin of the outside source, either:           Set the `evidence` parameter to `null`. This allows no access to resources.           -or-           If your application requires some access to resources, request evidence from the caller.      ## To use the secure resolver to load an XSLT style sheet      1.  Create an XmlSecureResolver with the correct permission set.      2.  Pass the XmlSecureResolver to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method.           [!code-vb[XmlSecureResolver_Samples#6](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_10.vb)]      [!code-cs[XmlSecureResolver_Samples#6](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_10.cs)]","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Xml.XmlUrlResolver&gt; class is the default resolver for all classes in the &lt;xref:System.Xml&gt; namespace.","pos":[0,118],"source":"The <xref:System.Xml.XmlUrlResolver> class is the default resolver for all classes in the <xref:System.Xml> namespace."},{"content":"It is used to load XML documents and to resolve external resources such as entities, DTDs or schemas, and import or include directives.","pos":[119,254]},{"content":"You can override this default by specifying the &lt;xref:System.Xml.XmlResolver&gt; object to use.","pos":[261,353],"source":"       You can override this default by specifying the <xref:System.Xml.XmlResolver> object to use."},{"content":"For example, if you want to restrict the resources that the underlying &lt;xref:System.Xml.XmlResolver&gt; can access, you can use an XmlSecureResolver object.","pos":[354,507],"source":" For example, if you want to restrict the resources that the underlying <xref:System.Xml.XmlResolver> can access, you can use an XmlSecureResolver object."},{"content":"XmlSecureResolver wraps around a concrete implementation of &lt;xref:System.Xml.XmlResolver&gt; and restricts the resources that the underlying &lt;xref:System.Xml.XmlResolver&gt; has access to.","pos":[514,696],"source":"       XmlSecureResolver wraps around a concrete implementation of <xref:System.Xml.XmlResolver> and restricts the resources that the underlying <xref:System.Xml.XmlResolver> has access to."},{"content":"For example, XmlSecureResolver has the ability to prohibit cross-domain redirection, which occurs from an embedded Uniform Resource Identifier (URI) reference.","pos":[697,856]},{"content":"When you construct an XmlSecureResolver object, you provide a valid &lt;xref:System.Xml.XmlResolver&gt; implementation along with a URL, an instance of an evidence object, or a permission set, which is used by the XmlSecureResolver to determine security.","pos":[863,1111],"source":"       When you construct an XmlSecureResolver object, you provide a valid <xref:System.Xml.XmlResolver> implementation along with a URL, an instance of an evidence object, or a permission set, which is used by the XmlSecureResolver to determine security."},{"content":"Either a &lt;xref:System.Security.PermissionSet?displayProperty=fullName&gt; is generated or the existing one is used and &lt;xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName&gt; is called on it to help secure the underlying &lt;xref:System.Xml.XmlResolver&gt;.","pos":[1112,1380],"source":" Either a <xref:System.Security.PermissionSet?displayProperty=fullName> is generated or the existing one is used and <xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName> is called on it to help secure the underlying <xref:System.Xml.XmlResolver>."},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  XmlSecureResolver objects can contain sensitive information such as user credentials.","pos":[1386,1489],"source":"      > [!IMPORTANT] >  XmlSecureResolver objects can contain sensitive information such as user credentials."},{"content":"You should be careful when caching XmlSecureResolver objects and should not pass the XmlSecureResolver object to an untrusted component.","pos":[1490,1626]},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  There are differences in the security infrastructure for code running on the .NET Framework common language runtime (CLR) and for code running on the CLR that is integrated within Microsoft SQL Server 2005.","pos":[1632,1856],"source":"      > [!IMPORTANT] >  There are differences in the security infrastructure for code running on the .NET Framework common language runtime (CLR) and for code running on the CLR that is integrated within Microsoft SQL Server 2005."},{"content":"This can lead to cases where code developed for the .NET Framework CLR operates differently when used on the SQL Server integrated CLR.","pos":[1857,1992]},{"content":"One of these differences affects the XmlSecureResolver class when you have evidence that is based on a URL (that is, when you use the &lt;xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%28System.String%29&gt; method or the &lt;xref:System.Xml.XmlSecureResolver.%23ctor%2A&gt; constructor).","pos":[1993,2277],"source":" One of these differences affects the XmlSecureResolver class when you have evidence that is based on a URL (that is, when you use the <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%28System.String%29> method or the <xref:System.Xml.XmlSecureResolver.%23ctor%2A> constructor)."},{"content":"The policy resolution mechanism of the SQL Server integrated CLR does not use the &lt;xref:System.Security.Policy.Url&gt; or &lt;xref:System.Security.Policy.Zone&gt; information.","pos":[2278,2444],"source":" The policy resolution mechanism of the SQL Server integrated CLR does not use the <xref:System.Security.Policy.Url> or <xref:System.Security.Policy.Zone> information."},{"content":"Instead, it grants permissions based on the GUID that the server adds when assemblies are loaded.","pos":[2445,2542]},{"content":"When you use the XmlSecureResolver in the SQL Server integrated CLR, provide any required evidence directly by using a specified &lt;xref:System.Security.PermissionSet&gt;.","pos":[2543,2709],"source":" When you use the XmlSecureResolver in the SQL Server integrated CLR, provide any required evidence directly by using a specified <xref:System.Security.PermissionSet>."},{"content":"To use a secure resolver      1.","pos":[2718,2750]},{"content":"Create an XmlSecureResolver with the correct permission set.","pos":[2752,2812]},{"content":"2.","pos":[2818,2820]},{"content":"Create an &lt;xref:System.Xml.XmlReaderSettings&gt; object that uses the XmlSecureResolver object.","pos":[2822,2914],"source":"  Create an <xref:System.Xml.XmlReaderSettings> object that uses the XmlSecureResolver object."},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>XmlSecureResolver_Samples#5a<ept id=\"p2\">](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_1.vb)</ept><ept id=\"p1\">]</ept>      <bpt id=\"p3\">[!code-cs</bpt><bpt id=\"p4\">[</bpt>XmlSecureResolver_Samples#5a<ept id=\"p4\">](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_1.cs)</ept><ept id=\"p3\">]</ept>      3.","pos":[2925,3136],"source":"[!code-vb[XmlSecureResolver_Samples#5a](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_1.vb)]      [!code-cs[XmlSecureResolver_Samples#5a](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_1.cs)]      3."},{"content":"Pass  the &lt;xref:System.Xml.XmlReaderSettings&gt; object to the &lt;xref:System.Xml.XmlReader.Create%2A&gt; method when you're creating the &lt;xref:System.Xml.XmlReader&gt; object.","pos":[3138,3303],"source":"  Pass  the <xref:System.Xml.XmlReaderSettings> object to the <xref:System.Xml.XmlReader.Create%2A> method when you're creating the <xref:System.Xml.XmlReader> object."},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>XmlSecureResolver_Samples#5b<ept id=\"p2\">](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_2.vb)</ept><ept id=\"p1\">]</ept>      <bpt id=\"p3\">[!code-cs</bpt><bpt id=\"p4\">[</bpt>XmlSecureResolver_Samples#5b<ept id=\"p4\">](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_2.cs)</ept><ept id=\"p3\">]</ept>      ## To restrict access by using a URL    Use the &lt;xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29&gt; constructor to create an XmlSecureResolver object that is allowed to access your local intranet site only.","pos":[3314,3765],"source":"[!code-vb[XmlSecureResolver_Samples#5b](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_2.vb)]      [!code-cs[XmlSecureResolver_Samples#5b](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_2.cs)]      ## To restrict access by using a URL    Use the <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29> constructor to create an XmlSecureResolver object that is allowed to access your local intranet site only."},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>XmlSecureResolver_Samples#3<ept id=\"p2\">](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_3.vb)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-cs</bpt><bpt id=\"p4\">[</bpt>XmlSecureResolver_Samples#3<ept id=\"p4\">](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_3.cs)</ept><ept id=\"p3\">]</ept>      ## To restrict access by using a permission set      1.","pos":[3772,4030],"source":"[!code-vb[XmlSecureResolver_Samples#3](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_3.vb)]  [!code-cs[XmlSecureResolver_Samples#3](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_3.cs)]      ## To restrict access by using a permission set      1."},{"content":"Create a &lt;xref:System.Net.WebPermission&gt; object.","pos":[4032,4080],"source":"  Create a <xref:System.Net.WebPermission> object."},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>XmlSecureResolver_Samples#4a<ept id=\"p2\">](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_4.vb)</ept><ept id=\"p1\">]</ept>      <bpt id=\"p3\">[!code-cs</bpt><bpt id=\"p4\">[</bpt>XmlSecureResolver_Samples#4a<ept id=\"p4\">](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_4.cs)</ept><ept id=\"p3\">]</ept>      2.","pos":[4091,4302],"source":"[!code-vb[XmlSecureResolver_Samples#4a](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_4.vb)]      [!code-cs[XmlSecureResolver_Samples#4a](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_4.cs)]      2."},{"content":"Specify the URLs that you want to allow access to.","pos":[4304,4354]},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>XmlSecureResolver_Samples#4b<ept id=\"p2\">](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_5.vb)</ept><ept id=\"p1\">]</ept>      <bpt id=\"p3\">[!code-cs</bpt><bpt id=\"p4\">[</bpt>XmlSecureResolver_Samples#4b<ept id=\"p4\">](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_5.cs)</ept><ept id=\"p3\">]</ept>      3.","pos":[4365,4576],"source":"[!code-vb[XmlSecureResolver_Samples#4b](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_5.vb)]      [!code-cs[XmlSecureResolver_Samples#4b](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_5.cs)]      3."},{"content":"Add the web permissions to the &lt;xref:System.Security.PermissionSet&gt; object.","pos":[4578,4653],"source":"  Add the web permissions to the <xref:System.Security.PermissionSet> object."},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>XmlSecureResolver_Samples#4c<ept id=\"p2\">](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_6.vb)</ept><ept id=\"p1\">]</ept>      <bpt id=\"p3\">[!code-cs</bpt><bpt id=\"p4\">[</bpt>XmlSecureResolver_Samples#4c<ept id=\"p4\">](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_6.cs)</ept><ept id=\"p3\">]</ept>      4.","pos":[4664,4875],"source":"[!code-vb[XmlSecureResolver_Samples#4c](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_6.vb)]      [!code-cs[XmlSecureResolver_Samples#4c](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_6.cs)]      4."},{"content":"Use the &lt;xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.PermissionSet%29&gt; constructor to create an XmlSecureResolver object by using the permission set.","pos":[4877,5067],"source":"  Use the <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.PermissionSet%29> constructor to create an XmlSecureResolver object by using the permission set."},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>XmlSecureResolver_Samples#4d<ept id=\"p2\">](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_7.vb)</ept><ept id=\"p1\">]</ept>      <bpt id=\"p3\">[!code-cs</bpt><bpt id=\"p4\">[</bpt>XmlSecureResolver_Samples#4d<ept id=\"p4\">](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_7.cs)</ept><ept id=\"p3\">]</ept>           See the &lt;xref:System.Xml.XmlSecureResolver.%23ctor%2A&gt; reference page for another example.","pos":[5078,5382],"source":"[!code-vb[XmlSecureResolver_Samples#4d](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_7.vb)]      [!code-cs[XmlSecureResolver_Samples#4d](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_7.cs)]           See the <xref:System.Xml.XmlSecureResolver.%23ctor%2A> reference page for another example."},{"content":"To restrict access by using evidence    You can restrict access by using the &lt;xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29&gt; constructor and specifying &lt;xref:System.Security.Policy.Evidence&gt;.","pos":[5391,5640],"source":"      ## To restrict access by using evidence    You can restrict access by using the <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> constructor and specifying <xref:System.Security.Policy.Evidence>."},{"content":"The &lt;xref:System.Security.Policy.Evidence&gt; is used to create the &lt;xref:System.Security.PermissionSet&gt; that is applied to the underlying &lt;xref:System.Xml.XmlResolver&gt;.","pos":[5641,5807],"source":" The <xref:System.Security.Policy.Evidence> is used to create the <xref:System.Security.PermissionSet> that is applied to the underlying <xref:System.Xml.XmlResolver>."},{"content":"The XmlSecureResolver calls &lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt; on the created &lt;xref:System.Security.PermissionSet&gt; before opening any resources.","pos":[5808,5968],"source":" The XmlSecureResolver calls <xref:System.Security.PermissionSet.PermitOnly%2A> on the created <xref:System.Security.PermissionSet> before opening any resources."},{"content":"Here are some common scenarios and the type of evidence to provide for each:      -   If you are working in a fully trusted environment, use your assembly to create the evidence:           <bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>XmlSecureResolver_Samples#1<ept id=\"p2\">](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_8.vb)</ept><ept id=\"p1\">]</ept>      <bpt id=\"p3\">[!code-cs</bpt><bpt id=\"p4\">[</bpt>XmlSecureResolver_Samples#1<ept id=\"p4\">](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_8.cs)</ept><ept id=\"p3\">]</ept>      -   If you are working in a semi-trusted environment, you have code or data coming from an outside source, and you know the origin of the outside source and have a verifiable URI, use the URI to create the evidence:           <bpt id=\"p5\">[!code-vb</bpt><bpt id=\"p6\">[</bpt>XmlSecureResolver_Samples#2<ept id=\"p6\">](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_9.vb)</ept><ept id=\"p5\">]</ept>      <bpt id=\"p7\">[!code-cs</bpt><bpt id=\"p8\">[</bpt>XmlSecureResolver_Samples#2<ept id=\"p8\">](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_9.cs)</ept><ept id=\"p7\">]</ept>      -   If you are working in a semi-trusted environment and you have code or data coming from an outside source, but you don't know the origin of the outside source, either:           Set the <ph id=\"ph1\">`evidence`</ph> parameter to <ph id=\"ph2\">`null`</ph>.","pos":[5975,7024],"source":"       Here are some common scenarios and the type of evidence to provide for each:      -   If you are working in a fully trusted environment, use your assembly to create the evidence:           [!code-vb[XmlSecureResolver_Samples#1](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_8.vb)]      [!code-cs[XmlSecureResolver_Samples#1](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_8.cs)]      -   If you are working in a semi-trusted environment, you have code or data coming from an outside source, and you know the origin of the outside source and have a verifiable URI, use the URI to create the evidence:           [!code-vb[XmlSecureResolver_Samples#2](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_9.vb)]      [!code-cs[XmlSecureResolver_Samples#2](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_9.cs)]      -   If you are working in a semi-trusted environment and you have code or data coming from an outside source, but you don't know the origin of the outside source, either:           Set the `evidence` parameter to `null`."},{"content":"This allows no access to resources.","pos":[7025,7060]},{"content":"-or-           If your application requires some access to resources, request evidence from the caller.","pos":[7071,7174]},{"content":"To use the secure resolver to load an XSLT style sheet      1.","pos":[7183,7245]},{"content":"Create an XmlSecureResolver with the correct permission set.","pos":[7247,7307]},{"content":"2.","pos":[7313,7315]},{"content":"Pass the XmlSecureResolver to the &lt;xref:System.Xml.Xsl.XslCompiledTransform.Load%2A&gt; method.","pos":[7317,7409],"source":"  Pass the XmlSecureResolver to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method."},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>XmlSecureResolver_Samples#6<ept id=\"p2\">](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_10.vb)</ept><ept id=\"p1\">]</ept>      <bpt id=\"p3\">[!code-cs</bpt><bpt id=\"p4\">[</bpt>XmlSecureResolver_Samples#6<ept id=\"p4\">](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_10.cs)</ept><ept id=\"p3\">]</ept>","pos":[7420,7623],"source":"[!code-vb[XmlSecureResolver_Samples#6](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_10.vb)]      [!code-cs[XmlSecureResolver_Samples#6](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_10.cs)]"}]},{"pos":[9648,9856],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlSecureResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the <bpt id=\"p2\">&lt;xref href=\"System.Xml.XmlResolver\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and <bpt id=\"p3\">&lt;xref href=\"System.Security.PermissionSet\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> specified.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xml.XmlSecureResolver\"></xref> class with the <xref href=\"System.Xml.XmlResolver\"></xref> and <xref href=\"System.Security.PermissionSet\"></xref> specified."},{"pos":[10520,10610],"content":"The XML resolver that is wrapped by the <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlSecureResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The XML resolver that is wrapped by the <xref href=\"System.Xml.XmlSecureResolver\"></xref>."},{"pos":[10696,11066],"content":"The permission set to apply to the underlying <xref href=\"System.Xml.XmlResolver\"></xref>. The <xref href=\"System.Xml.XmlSecureResolver\"></xref> calls the &lt;xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName&gt; method on the permission set before calling the <xref:System.Xml.XmlSecureResolver.GetEntity*> method on the underlying XML resolver.","needQuote":true,"needEscape":true,"nodes":[{"content":"The permission set to apply to the underlying <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,90],"source":"The permission set to apply to the underlying <xref href=\"System.Xml.XmlResolver\"></xref>."},{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlSecureResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> calls the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> method on the permission set before calling the &lt;xref:System.Xml.XmlSecureResolver.GetEntity*&gt; method on the underlying XML resolver.","pos":[91,370],"source":" The <xref href=\"System.Xml.XmlSecureResolver\"></xref> calls the &lt;xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName&gt; method on the permission set before calling the <xref:System.Xml.XmlSecureResolver.GetEntity*> method on the underlying XML resolver."}]},{"pos":[11669,11879],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlSecureResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the <bpt id=\"p2\">&lt;xref href=\"System.Xml.XmlResolver\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and <bpt id=\"p3\">&lt;xref href=\"System.Security.Policy.Evidence\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> specified.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xml.XmlSecureResolver\"></xref> class with the <xref href=\"System.Xml.XmlResolver\"></xref> and <xref href=\"System.Security.Policy.Evidence\"></xref> specified."},{"pos":[11892,13120],"content":"Here are some possible scenarios and the type of evidence to provide for each scenario:      -   If you are working in a fully trusted environment, use your assembly to create the evidence:           [!code-vb[XmlSecureResolver_Samples#1](~/add/codesnippet/visualbasic/74601da4-12bd-44fe-a117-_1.vb)]      [!code-cs[XmlSecureResolver_Samples#1](~/add/codesnippet/csharp/74601da4-12bd-44fe-a117-_1.cs)]      -   If you are working in a semi-trusted environment, you have code or data coming from an outside source, and you know the origin of the outside source and have a verifiable URI, use the URI to create the evidence:           [!code-vb[XmlSecureResolver_Samples#2](~/add/codesnippet/visualbasic/74601da4-12bd-44fe-a117-_2.vb)]      [!code-cs[XmlSecureResolver_Samples#2](~/add/codesnippet/csharp/74601da4-12bd-44fe-a117-_2.cs)]      -   If you are working in a semi-trusted environment and you have code or data coming from an outside source, but you don't know the origin of the outside source, either:           Set the `evidence` parameter to `null`. This allows no access to resources.           -or-           If your application requires some access to resources, request evidence from the caller.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Here are some possible scenarios and the type of evidence to provide for each scenario:      -   If you are working in a fully trusted environment, use your assembly to create the evidence:           <bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>XmlSecureResolver_Samples#1<ept id=\"p2\">](~/add/codesnippet/visualbasic/74601da4-12bd-44fe-a117-_1.vb)</ept><ept id=\"p1\">]</ept>      <bpt id=\"p3\">[!code-cs</bpt><bpt id=\"p4\">[</bpt>XmlSecureResolver_Samples#1<ept id=\"p4\">](~/add/codesnippet/csharp/74601da4-12bd-44fe-a117-_1.cs)</ept><ept id=\"p3\">]</ept>      -   If you are working in a semi-trusted environment, you have code or data coming from an outside source, and you know the origin of the outside source and have a verifiable URI, use the URI to create the evidence:           <bpt id=\"p5\">[!code-vb</bpt><bpt id=\"p6\">[</bpt>XmlSecureResolver_Samples#2<ept id=\"p6\">](~/add/codesnippet/visualbasic/74601da4-12bd-44fe-a117-_2.vb)</ept><ept id=\"p5\">]</ept>      <bpt id=\"p7\">[!code-cs</bpt><bpt id=\"p8\">[</bpt>XmlSecureResolver_Samples#2<ept id=\"p8\">](~/add/codesnippet/csharp/74601da4-12bd-44fe-a117-_2.cs)</ept><ept id=\"p7\">]</ept>      -   If you are working in a semi-trusted environment and you have code or data coming from an outside source, but you don't know the origin of the outside source, either:           Set the <ph id=\"ph1\">`evidence`</ph> parameter to <ph id=\"ph2\">`null`</ph>.","pos":[0,1060],"source":"Here are some possible scenarios and the type of evidence to provide for each scenario:      -   If you are working in a fully trusted environment, use your assembly to create the evidence:           [!code-vb[XmlSecureResolver_Samples#1](~/add/codesnippet/visualbasic/74601da4-12bd-44fe-a117-_1.vb)]      [!code-cs[XmlSecureResolver_Samples#1](~/add/codesnippet/csharp/74601da4-12bd-44fe-a117-_1.cs)]      -   If you are working in a semi-trusted environment, you have code or data coming from an outside source, and you know the origin of the outside source and have a verifiable URI, use the URI to create the evidence:           [!code-vb[XmlSecureResolver_Samples#2](~/add/codesnippet/visualbasic/74601da4-12bd-44fe-a117-_2.vb)]      [!code-cs[XmlSecureResolver_Samples#2](~/add/codesnippet/csharp/74601da4-12bd-44fe-a117-_2.cs)]      -   If you are working in a semi-trusted environment and you have code or data coming from an outside source, but you don't know the origin of the outside source, either:           Set the `evidence` parameter to `null`."},{"content":"This allows no access to resources.","pos":[1061,1096]},{"content":"-or-           If your application requires some access to resources, request evidence from the caller.","pos":[1107,1210]}]},{"pos":[13336,13426],"content":"The XML resolver that is wrapped by the <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlSecureResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The XML resolver that is wrapped by the <xref href=\"System.Xml.XmlSecureResolver\"></xref>."},{"pos":[13509,14019],"content":"The evidence used to create the <xref href=\"System.Security.PermissionSet\"></xref> that will be applied to the underlying <xref href=\"System.Xml.XmlResolver\"></xref>. The <xref href=\"System.Xml.XmlSecureResolver\"></xref> calls the &lt;xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName&gt; method on the created <xref href=\"System.Security.PermissionSet\"></xref> before calling <xref:System.Xml.XmlSecureResolver.GetEntity*> on the underlying <xref href=\"System.Xml.XmlResolver\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The evidence used to create the <bpt id=\"p1\">&lt;xref href=\"System.Security.PermissionSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that will be applied to the underlying <bpt id=\"p2\">&lt;xref href=\"System.Xml.XmlResolver\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,166],"source":"The evidence used to create the <xref href=\"System.Security.PermissionSet\"></xref> that will be applied to the underlying <xref href=\"System.Xml.XmlResolver\"></xref>."},{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlSecureResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> calls the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> method on the created <bpt id=\"p2\">&lt;xref href=\"System.Security.PermissionSet\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> before calling &lt;xref:System.Xml.XmlSecureResolver.GetEntity*&gt; on the underlying <bpt id=\"p3\">&lt;xref href=\"System.Xml.XmlResolver\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[167,510],"source":" The <xref href=\"System.Xml.XmlSecureResolver\"></xref> calls the &lt;xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName&gt; method on the created <xref href=\"System.Security.PermissionSet\"></xref> before calling <xref:System.Xml.XmlSecureResolver.GetEntity*> on the underlying <xref href=\"System.Xml.XmlResolver\"></xref>."}]},{"pos":[14580,14740],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlSecureResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the <bpt id=\"p2\">&lt;xref href=\"System.Xml.XmlResolver\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and URL provided.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xml.XmlSecureResolver\"></xref> class with the <xref href=\"System.Xml.XmlResolver\"></xref> and URL provided."},{"pos":[16414,16504],"content":"The XML resolver that is wrapped by the <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlSecureResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The XML resolver that is wrapped by the <xref href=\"System.Xml.XmlSecureResolver\"></xref>."},{"pos":[16572,17066],"content":"The URL used to create the <xref href=\"System.Security.PermissionSet\"></xref> that will be applied to the underlying <xref href=\"System.Xml.XmlResolver\"></xref>. The <xref href=\"System.Xml.XmlSecureResolver\"></xref> calls &lt;xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName&gt; on the created <xref href=\"System.Security.PermissionSet\"></xref> before calling <xref:System.Xml.XmlSecureResolver.GetEntity*> on the underlying <xref href=\"System.Xml.XmlResolver\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The URL used to create the <bpt id=\"p1\">&lt;xref href=\"System.Security.PermissionSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that will be applied to the underlying <bpt id=\"p2\">&lt;xref href=\"System.Xml.XmlResolver\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,161],"source":"The URL used to create the <xref href=\"System.Security.PermissionSet\"></xref> that will be applied to the underlying <xref href=\"System.Xml.XmlResolver\"></xref>."},{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlSecureResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> calls <ph id=\"ph1\">&amp;lt;</ph>xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> on the created <bpt id=\"p2\">&lt;xref href=\"System.Security.PermissionSet\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> before calling &lt;xref:System.Xml.XmlSecureResolver.GetEntity*&gt; on the underlying <bpt id=\"p3\">&lt;xref href=\"System.Xml.XmlResolver\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[162,494],"source":" The <xref href=\"System.Xml.XmlSecureResolver\"></xref> calls &lt;xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName&gt; on the created <xref href=\"System.Security.PermissionSet\"></xref> before calling <xref:System.Xml.XmlSecureResolver.GetEntity*> on the underlying <xref href=\"System.Xml.XmlResolver\"></xref>."}]},{"pos":[17577,17617],"content":"Creates evidence using the supplied URL.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates evidence using the supplied URL.","pos":[0,40]}]},{"pos":[18935,18971],"content":"The URL used to create the evidence.","needQuote":true,"needEscape":true,"nodes":[{"content":"The URL used to create the evidence.","pos":[0,36]}]},{"pos":[19047,19125],"content":"The evidence generated from the supplied URL as defined by the default policy.","needQuote":true,"needEscape":true,"nodes":[{"content":"The evidence generated from the supplied URL as defined by the default policy.","pos":[0,78]}]},{"pos":[19554,19605],"content":"Sets credentials used to authenticate web requests.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets credentials used to authenticate web requests.","pos":[0,51]}]},{"pos":[20280,20681],"content":"The credentials to be used to authenticate web requests. The <xref href=\"System.Xml.XmlSecureResolver\"></xref> sets the given credentials on the underlying <xref href=\"System.Xml.XmlResolver\"></xref>. If this property is not set, the value defaults to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>; that is, the <xref href=\"System.Xml.XmlSecureResolver\"></xref> has no user credentials.","needQuote":true,"needEscape":true,"nodes":[{"content":"The credentials to be used to authenticate web requests.","pos":[0,56]},{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlSecureResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> sets the given credentials on the underlying <bpt id=\"p2\">&lt;xref href=\"System.Xml.XmlResolver\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[57,200],"source":" The <xref href=\"System.Xml.XmlSecureResolver\"></xref> sets the given credentials on the underlying <xref href=\"System.Xml.XmlResolver\"></xref>."},{"content":"If this property is not set, the value defaults to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>; that is, the <bpt id=\"p2\">&lt;xref href=\"System.Xml.XmlSecureResolver\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> has no user credentials.","pos":[201,401],"source":" If this property is not set, the value defaults to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>; that is, the <xref href=\"System.Xml.XmlSecureResolver\"></xref> has no user credentials."}]},{"pos":[21216,21648],"content":"Maps a URI to an object that contains the actual resource. This method temporarily sets the <xref href=\"System.Security.PermissionSet\"></xref> created in the constructor by calling &lt;xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName&gt; before calling <xref uid=\"langword_csharp_GetEntity\" name=\"GetEntity\" href=\"\"></xref> on the underlying <xref href=\"System.Xml.XmlResolver\"></xref> to open the resource.","needQuote":true,"needEscape":true,"nodes":[{"content":"Maps a URI to an object that contains the actual resource.","pos":[0,58]},{"content":"This method temporarily sets the <bpt id=\"p1\">&lt;xref href=\"System.Security.PermissionSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> created in the constructor by calling <ph id=\"ph1\">&amp;lt;</ph>xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> before calling <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_GetEntity\" name=\"GetEntity\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> on the underlying <bpt id=\"p3\">&lt;xref href=\"System.Xml.XmlResolver\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> to open the resource.","pos":[59,432],"source":" This method temporarily sets the <xref href=\"System.Security.PermissionSet\"></xref> created in the constructor by calling &lt;xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName&gt; before calling <xref uid=\"langword_csharp_GetEntity\" name=\"GetEntity\" href=\"\"></xref> on the underlying <xref href=\"System.Xml.XmlResolver\"></xref> to open the resource."}]},{"pos":[22207,22285],"content":"The URI that is returned from <xref:System.Xml.XmlSecureResolver.ResolveUri*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The URI that is returned from &lt;xref:System.Xml.XmlSecureResolver.ResolveUri*&gt;.","pos":[0,78],"source":"The URI that is returned from <xref:System.Xml.XmlSecureResolver.ResolveUri*>."}]},{"pos":[22346,22365],"content":"Currently not used.","needQuote":true,"needEscape":true,"nodes":[{"content":"Currently not used.","pos":[0,19]}]},{"pos":[22436,22531],"content":"The type of object to return. The current version only returns <xref:System.IO.Stream> objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of object to return. The current version only returns <xref:System.IO.Stream> objects.","pos":[0,95],"nodes":[{"content":"The type of object to return.","pos":[0,29]},{"content":"The current version only returns &lt;xref:System.IO.Stream&gt; objects.","pos":[30,95],"source":" The current version only returns <xref:System.IO.Stream> objects."}]}]},{"pos":[22589,22893],"content":"The stream returned by calling <xref uid=\"langword_csharp_GetEntity\" name=\"GetEntity\" href=\"\"></xref> on the underlying <xref href=\"System.Xml.XmlResolver\"></xref>. If a type other than <xref:System.IO.Stream> is specified, the method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The stream returned by calling <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_GetEntity\" name=\"GetEntity\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> on the underlying <bpt id=\"p2\">&lt;xref href=\"System.Xml.XmlResolver\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,164],"source":"The stream returned by calling <xref uid=\"langword_csharp_GetEntity\" name=\"GetEntity\" href=\"\"></xref> on the underlying <xref href=\"System.Xml.XmlResolver\"></xref>."},{"content":"If a type other than &lt;xref:System.IO.Stream&gt; is specified, the method returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[165,304],"source":" If a type other than <xref:System.IO.Stream> is specified, the method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[23052,23189],"content":"<ph id=\"ph1\">&lt;code&gt;ofObjectToReturn&lt;/code&gt;</ph> is neither <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> nor a <ph id=\"ph2\">&lt;xref:System.IO.Stream&gt;</ph> type.","needQuote":true,"needEscape":true,"source":"<code>ofObjectToReturn</code> is neither <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> nor a <xref:System.IO.Stream> type."},{"pos":[23286,23327],"content":"The specified URI is not an absolute URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified URI is not an absolute URI.","pos":[0,41]}]},{"pos":[23432,23521],"content":"<ph id=\"ph1\">&lt;code&gt;absoluteUri&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>absoluteUri</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[23600,23673],"content":"There is a runtime error (for example, an interrupted server connection).","needQuote":true,"needEscape":true,"nodes":[{"content":"There is a runtime error (for example, an interrupted server connection).","pos":[0,73]}]},{"pos":[24162,24235],"content":"Asynchronously maps a URI to an object that contains the actual resource.","needQuote":true,"needEscape":true,"nodes":[{"content":"Asynchronously maps a URI to an object that contains the actual resource.","pos":[0,73]}]},{"pos":[24461,24531],"content":"The URI returned from <xref:System.Xml.XmlSecureResolver.ResolveUri*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The URI returned from &lt;xref:System.Xml.XmlSecureResolver.ResolveUri*&gt;.","pos":[0,70],"source":"The URI returned from <xref:System.Xml.XmlSecureResolver.ResolveUri*>."}]},{"pos":[24592,24611],"content":"Currently not used.","needQuote":true,"needEscape":true,"nodes":[{"content":"Currently not used.","pos":[0,19]}]},{"pos":[24682,24777],"content":"The type of object to return. The current version only returns <xref:System.IO.Stream> objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of object to return. The current version only returns <xref:System.IO.Stream> objects.","pos":[0,95],"nodes":[{"content":"The type of object to return.","pos":[0,29]},{"content":"The current version only returns &lt;xref:System.IO.Stream&gt; objects.","pos":[30,95],"source":" The current version only returns <xref:System.IO.Stream> objects."}]}]},{"pos":[24864,25168],"content":"The stream returned by calling <xref uid=\"langword_csharp_GetEntity\" name=\"GetEntity\" href=\"\"></xref> on the underlying <xref href=\"System.Xml.XmlResolver\"></xref>. If a type other than <xref:System.IO.Stream> is specified, the method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The stream returned by calling <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_GetEntity\" name=\"GetEntity\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> on the underlying <bpt id=\"p2\">&lt;xref href=\"System.Xml.XmlResolver\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,164],"source":"The stream returned by calling <xref uid=\"langword_csharp_GetEntity\" name=\"GetEntity\" href=\"\"></xref> on the underlying <xref href=\"System.Xml.XmlResolver\"></xref>."},{"content":"If a type other than &lt;xref:System.IO.Stream&gt; is specified, the method returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[165,304],"source":" If a type other than <xref:System.IO.Stream> is specified, the method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[25672,25876],"content":"Resolves the absolute URI from the base and relative URIs by calling <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_ResolveUri\" name=\"ResolveUri\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> on the underlying <bpt id=\"p2\">&lt;xref href=\"System.Xml.XmlResolver\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Resolves the absolute URI from the base and relative URIs by calling <xref uid=\"langword_csharp_ResolveUri\" name=\"ResolveUri\" href=\"\"></xref> on the underlying <xref href=\"System.Xml.XmlResolver\"></xref>."},{"pos":[26042,26088],"content":"The base URI used to resolve the relative URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"The base URI used to resolve the relative URI.","pos":[0,46]}]},{"pos":[26156,26347],"content":"The URI to resolve. The URI can be absolute or relative. If absolute, this value effectively replaces the `baseUri` value. If relative, it combines with the `baseUri` to make an absolute URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"The URI to resolve.","pos":[0,19]},{"content":"The URI can be absolute or relative.","pos":[20,56]},{"content":"If absolute, this value effectively replaces the <ph id=\"ph1\">`baseUri`</ph> value.","pos":[57,122],"source":" If absolute, this value effectively replaces the `baseUri` value."},{"content":"If relative, it combines with the <ph id=\"ph1\">`baseUri`</ph> to make an absolute URI.","pos":[123,191],"source":" If relative, it combines with the `baseUri` to make an absolute URI."}]},{"pos":[26402,26679],"content":"The absolute URI or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the relative URI cannot be resolved (returned by calling <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_ResolveUri\" name=\"ResolveUri\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> on the underlying <bpt id=\"p3\">&lt;xref href=\"System.Xml.XmlResolver\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>).","needQuote":true,"needEscape":true,"source":"The absolute URI or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the relative URI cannot be resolved (returned by calling <xref uid=\"langword_csharp_ResolveUri\" name=\"ResolveUri\" href=\"\"></xref> on the underlying <xref href=\"System.Xml.XmlResolver\"></xref>)."},{"pos":[26841,26930],"content":"<ph id=\"ph1\">&lt;code&gt;relativeUri&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>relativeUri</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xml.XmlSecureResolver\n  id: XmlSecureResolver\n  children:\n  - System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.PermissionSet)\n  - System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)\n  - System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)\n  - System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)\n  - System.Xml.XmlSecureResolver.Credentials\n  - System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)\n  - System.Xml.XmlSecureResolver.GetEntityAsync(System.Uri,System.String,System.Type)\n  - System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)\n  langs:\n  - csharp\n  name: XmlSecureResolver\n  nameWithType: XmlSecureResolver\n  fullName: System.Xml.XmlSecureResolver\n  type: Class\n  summary: Helps to secure another implementation of <xref href=\"System.Xml.XmlResolver\"></xref> by wrapping the <xref href=\"System.Xml.XmlResolver\"></xref> object and restricting the resources that the underlying <xref href=\"System.Xml.XmlResolver\"></xref> has access to.\n  remarks: \"The <xref:System.Xml.XmlUrlResolver> class is the default resolver for all classes in the <xref:System.Xml> namespace. It is used to load XML documents and to resolve external resources such as entities, DTDs or schemas, and import or include directives.  \\n  \\n You can override this default by specifying the <xref:System.Xml.XmlResolver> object to use. For example, if you want to restrict the resources that the underlying <xref:System.Xml.XmlResolver> can access, you can use an XmlSecureResolver object.  \\n  \\n XmlSecureResolver wraps around a concrete implementation of <xref:System.Xml.XmlResolver> and restricts the resources that the underlying <xref:System.Xml.XmlResolver> has access to. For example, XmlSecureResolver has the ability to prohibit cross-domain redirection, which occurs from an embedded Uniform Resource Identifier (URI) reference.  \\n  \\n When you construct an XmlSecureResolver object, you provide a valid <xref:System.Xml.XmlResolver> implementation along with a URL, an instance of an evidence object, or a permission set, which is used by the XmlSecureResolver to determine security. Either a <xref:System.Security.PermissionSet?displayProperty=fullName> is generated or the existing one is used and <xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName> is called on it to help secure the underlying <xref:System.Xml.XmlResolver>.  \\n  \\n> [!IMPORTANT]\\n>  XmlSecureResolver objects can contain sensitive information such as user credentials. You should be careful when caching XmlSecureResolver objects and should not pass the XmlSecureResolver object to an untrusted component.  \\n  \\n> [!IMPORTANT]\\n>  There are differences in the security infrastructure for code running on the .NET Framework common language runtime (CLR) and for code running on the CLR that is integrated within Microsoft SQL Server 2005. This can lead to cases where code developed for the .NET Framework CLR operates differently when used on the SQL Server integrated CLR. One of these differences affects the XmlSecureResolver class when you have evidence that is based on a URL (that is, when you use the <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%28System.String%29> method or the <xref:System.Xml.XmlSecureResolver.%23ctor%2A> constructor). The policy resolution mechanism of the SQL Server integrated CLR does not use the <xref:System.Security.Policy.Url> or <xref:System.Security.Policy.Zone> information. Instead, it grants permissions based on the GUID that the server adds when assemblies are loaded. When you use the XmlSecureResolver in the SQL Server integrated CLR, provide any required evidence directly by using a specified <xref:System.Security.PermissionSet>.  \\n  \\n## To use a secure resolver  \\n  \\n1.  Create an XmlSecureResolver with the correct permission set.  \\n  \\n2.  Create an <xref:System.Xml.XmlReaderSettings> object that uses the XmlSecureResolver object.  \\n  \\n     [!code-vb[XmlSecureResolver_Samples#5a](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_1.vb)]\\n     [!code-cs[XmlSecureResolver_Samples#5a](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_1.cs)]  \\n  \\n3.  Pass  the <xref:System.Xml.XmlReaderSettings> object to the <xref:System.Xml.XmlReader.Create%2A> method when you're creating the <xref:System.Xml.XmlReader> object.  \\n  \\n     [!code-vb[XmlSecureResolver_Samples#5b](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_2.vb)]\\n     [!code-cs[XmlSecureResolver_Samples#5b](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_2.cs)]  \\n  \\n## To restrict access by using a URL  \\n Use the <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29> constructor to create an XmlSecureResolver object that is allowed to access your local intranet site only.  \\n  \\n [!code-vb[XmlSecureResolver_Samples#3](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_3.vb)]\\n [!code-cs[XmlSecureResolver_Samples#3](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_3.cs)]  \\n  \\n## To restrict access by using a permission set  \\n  \\n1.  Create a <xref:System.Net.WebPermission> object.  \\n  \\n     [!code-vb[XmlSecureResolver_Samples#4a](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_4.vb)]\\n     [!code-cs[XmlSecureResolver_Samples#4a](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_4.cs)]  \\n  \\n2.  Specify the URLs that you want to allow access to.  \\n  \\n     [!code-vb[XmlSecureResolver_Samples#4b](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_5.vb)]\\n     [!code-cs[XmlSecureResolver_Samples#4b](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_5.cs)]  \\n  \\n3.  Add the web permissions to the <xref:System.Security.PermissionSet> object.  \\n  \\n     [!code-vb[XmlSecureResolver_Samples#4c](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_6.vb)]\\n     [!code-cs[XmlSecureResolver_Samples#4c](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_6.cs)]  \\n  \\n4.  Use the <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.PermissionSet%29> constructor to create an XmlSecureResolver object by using the permission set.  \\n  \\n     [!code-vb[XmlSecureResolver_Samples#4d](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_7.vb)]\\n     [!code-cs[XmlSecureResolver_Samples#4d](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_7.cs)]  \\n  \\n     See the <xref:System.Xml.XmlSecureResolver.%23ctor%2A> reference page for another example.  \\n  \\n## To restrict access by using evidence  \\n You can restrict access by using the <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> constructor and specifying <xref:System.Security.Policy.Evidence>. The <xref:System.Security.Policy.Evidence> is used to create the <xref:System.Security.PermissionSet> that is applied to the underlying <xref:System.Xml.XmlResolver>. The XmlSecureResolver calls <xref:System.Security.PermissionSet.PermitOnly%2A> on the created <xref:System.Security.PermissionSet> before opening any resources.  \\n  \\n Here are some common scenarios and the type of evidence to provide for each:  \\n  \\n-   If you are working in a fully trusted environment, use your assembly to create the evidence:  \\n  \\n     [!code-vb[XmlSecureResolver_Samples#1](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_8.vb)]\\n     [!code-cs[XmlSecureResolver_Samples#1](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_8.cs)]  \\n  \\n-   If you are working in a semi-trusted environment, you have code or data coming from an outside source, and you know the origin of the outside source and have a verifiable URI, use the URI to create the evidence:  \\n  \\n     [!code-vb[XmlSecureResolver_Samples#2](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_9.vb)]\\n     [!code-cs[XmlSecureResolver_Samples#2](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_9.cs)]  \\n  \\n-   If you are working in a semi-trusted environment and you have code or data coming from an outside source, but you don't know the origin of the outside source, either:  \\n  \\n     Set the `evidence` parameter to `null`. This allows no access to resources.  \\n  \\n     -or-  \\n  \\n     If your application requires some access to resources, request evidence from the caller.  \\n  \\n## To use the secure resolver to load an XSLT style sheet  \\n  \\n1.  Create an XmlSecureResolver with the correct permission set.  \\n  \\n2.  Pass the XmlSecureResolver to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method.  \\n  \\n     [!code-vb[XmlSecureResolver_Samples#6](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_10.vb)]\\n     [!code-cs[XmlSecureResolver_Samples#6](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_10.cs)]\"\n  syntax:\n    content: 'public class XmlSecureResolver : System.Xml.XmlResolver'\n  inheritance:\n  - System.Object\n  - System.Xml.XmlResolver\n  implements: []\n  inheritedMembers:\n  - System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)\n  platform:\n  - net462\n- uid: System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.PermissionSet)\n  id: '#ctor(System.Xml.XmlResolver,System.Security.PermissionSet)'\n  parent: System.Xml.XmlSecureResolver\n  langs:\n  - csharp\n  name: XmlSecureResolver(XmlResolver,PermissionSet)\n  nameWithType: XmlSecureResolver.XmlSecureResolver(XmlResolver,PermissionSet)\n  fullName: System.Xml.XmlSecureResolver.XmlSecureResolver(XmlResolver,PermissionSet)\n  type: Constructor\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Initializes a new instance of the <xref href=\"System.Xml.XmlSecureResolver\"></xref> class with the <xref href=\"System.Xml.XmlResolver\"></xref> and <xref href=\"System.Security.PermissionSet\"></xref> specified.\n  remarks: ''\n  example:\n  - \"The following example constructs an <xref:System.Xml.XmlSecureResolver> object by using a customized permission set.  \\n  \\n [!code-cs[XmlSecureResolver.cctor#1](~/add/codesnippet/csharp/e6fb0edb-66a8-45c7-82d0-_1.cs)]\\n [!code-cpp[XmlSecureResolver.cctor#1](~/add/codesnippet/cpp/e6fb0edb-66a8-45c7-82d0-_1.cpp)]\\n [!code-vb[XmlSecureResolver.cctor#1](~/add/codesnippet/visualbasic/e6fb0edb-66a8-45c7-82d0-_1.vb)]\"\n  syntax:\n    content: public XmlSecureResolver (System.Xml.XmlResolver resolver, System.Security.PermissionSet permissionSet);\n    parameters:\n    - id: resolver\n      type: System.Xml.XmlResolver\n      description: The XML resolver that is wrapped by the <xref href=\"System.Xml.XmlSecureResolver\"></xref>.\n    - id: permissionSet\n      type: System.Security.PermissionSet\n      description: The permission set to apply to the underlying <xref href=\"System.Xml.XmlResolver\"></xref>. The <xref href=\"System.Xml.XmlSecureResolver\"></xref> calls the &lt;xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName&gt; method on the permission set before calling the <xref:System.Xml.XmlSecureResolver.GetEntity*> method on the underlying XML resolver.\n  overload: System.Xml.XmlSecureResolver.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)\n  id: '#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)'\n  parent: System.Xml.XmlSecureResolver\n  langs:\n  - csharp\n  name: XmlSecureResolver(XmlResolver,Evidence)\n  nameWithType: XmlSecureResolver.XmlSecureResolver(XmlResolver,Evidence)\n  fullName: System.Xml.XmlSecureResolver.XmlSecureResolver(XmlResolver,Evidence)\n  type: Constructor\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Initializes a new instance of the <xref href=\"System.Xml.XmlSecureResolver\"></xref> class with the <xref href=\"System.Xml.XmlResolver\"></xref> and <xref href=\"System.Security.Policy.Evidence\"></xref> specified.\n  remarks: \"Here are some possible scenarios and the type of evidence to provide for each scenario:  \\n  \\n-   If you are working in a fully trusted environment, use your assembly to create the evidence:  \\n  \\n     [!code-vb[XmlSecureResolver_Samples#1](~/add/codesnippet/visualbasic/74601da4-12bd-44fe-a117-_1.vb)]\\n     [!code-cs[XmlSecureResolver_Samples#1](~/add/codesnippet/csharp/74601da4-12bd-44fe-a117-_1.cs)]  \\n  \\n-   If you are working in a semi-trusted environment, you have code or data coming from an outside source, and you know the origin of the outside source and have a verifiable URI, use the URI to create the evidence:  \\n  \\n     [!code-vb[XmlSecureResolver_Samples#2](~/add/codesnippet/visualbasic/74601da4-12bd-44fe-a117-_2.vb)]\\n     [!code-cs[XmlSecureResolver_Samples#2](~/add/codesnippet/csharp/74601da4-12bd-44fe-a117-_2.cs)]  \\n  \\n-   If you are working in a semi-trusted environment and you have code or data coming from an outside source, but you don't know the origin of the outside source, either:  \\n  \\n     Set the `evidence` parameter to `null`. This allows no access to resources.  \\n  \\n     -or-  \\n  \\n     If your application requires some access to resources, request evidence from the caller.\"\n  syntax:\n    content: public XmlSecureResolver (System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);\n    parameters:\n    - id: resolver\n      type: System.Xml.XmlResolver\n      description: The XML resolver that is wrapped by the <xref href=\"System.Xml.XmlSecureResolver\"></xref>.\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: The evidence used to create the <xref href=\"System.Security.PermissionSet\"></xref> that will be applied to the underlying <xref href=\"System.Xml.XmlResolver\"></xref>. The <xref href=\"System.Xml.XmlSecureResolver\"></xref> calls the &lt;xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName&gt; method on the created <xref href=\"System.Security.PermissionSet\"></xref> before calling <xref:System.Xml.XmlSecureResolver.GetEntity*> on the underlying <xref href=\"System.Xml.XmlResolver\"></xref>.\n  overload: System.Xml.XmlSecureResolver.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)\n  id: '#ctor(System.Xml.XmlResolver,System.String)'\n  parent: System.Xml.XmlSecureResolver\n  langs:\n  - csharp\n  name: XmlSecureResolver(XmlResolver,String)\n  nameWithType: XmlSecureResolver.XmlSecureResolver(XmlResolver,String)\n  fullName: System.Xml.XmlSecureResolver.XmlSecureResolver(XmlResolver,String)\n  type: Constructor\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Initializes a new instance of the <xref href=\"System.Xml.XmlSecureResolver\"></xref> class with the <xref href=\"System.Xml.XmlResolver\"></xref> and URL provided.\n  remarks: >-\n    > [!IMPORTANT]\n\n    >  There are differences in the security infrastructure for code running on the .NET Framework common language runtime (CLR) and for code running on the CLR that is integrated within Microsoft SQL Server 2005. This can lead to cases where code developed for the .NET Framework CLR operates differently when used on the SQL Server integrated CLR. One of these differences affects the <xref:System.Xml.XmlSecureResolver> class when you have evidence that is based on a URL (that is, when you use the <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A> method or the XmlSecureResolver constructor). The policy resolution mechanism of the SQL Server integrated CLR does not use the <xref:System.Security.Policy.Url> or <xref:System.Security.Policy.Zone> information. Instead, it grants permissions based on the GUID that the server adds when assemblies are loaded. When you use the <xref:System.Xml.XmlSecureResolver> in the SQL Server integrated CLR, provide any required evidence directly by using a specified <xref:System.Security.PermissionSet>.\n  example:\n  - \"This example uses the XmlSecureResolver constructor to create an <xref:System.Xml.XmlSecureResolver> object that is allowed to access your local intranet site only.  \\n  \\n [!code-vb[XmlSecureResolver_Samples#3](~/add/codesnippet/visualbasic/m-system.xml.xmlsecurere_1.vb)]\\n [!code-cs[XmlSecureResolver_Samples#3](~/add/codesnippet/csharp/m-system.xml.xmlsecurere_1.cs)]\"\n  syntax:\n    content: public XmlSecureResolver (System.Xml.XmlResolver resolver, string securityUrl);\n    parameters:\n    - id: resolver\n      type: System.Xml.XmlResolver\n      description: The XML resolver that is wrapped by the <xref href=\"System.Xml.XmlSecureResolver\"></xref>.\n    - id: securityUrl\n      type: System.String\n      description: The URL used to create the <xref href=\"System.Security.PermissionSet\"></xref> that will be applied to the underlying <xref href=\"System.Xml.XmlResolver\"></xref>. The <xref href=\"System.Xml.XmlSecureResolver\"></xref> calls &lt;xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName&gt; on the created <xref href=\"System.Security.PermissionSet\"></xref> before calling <xref:System.Xml.XmlSecureResolver.GetEntity*> on the underlying <xref href=\"System.Xml.XmlResolver\"></xref>.\n  overload: System.Xml.XmlSecureResolver.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)\n  id: CreateEvidenceForUrl(System.String)\n  parent: System.Xml.XmlSecureResolver\n  langs:\n  - csharp\n  name: CreateEvidenceForUrl(String)\n  nameWithType: XmlSecureResolver.CreateEvidenceForUrl(String)\n  fullName: System.Xml.XmlSecureResolver.CreateEvidenceForUrl(String)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Creates evidence using the supplied URL.\n  remarks: >-\n    > [!IMPORTANT]\n\n    >  There are differences in the security infrastructure for code running on the .NET Framework common language runtime (CLR) and for code running on the CLR that is integrated within Microsoft SQL Server 2005. This can lead to cases where code developed for the .NET Framework CLR operates differently when used on the SQL Server integrated CLR. One of these differences affects the <xref:System.Xml.XmlSecureResolver> class when you have evidence that is based on a URL (that is, when you use the CreateEvidenceForUrl method or the <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29> constructor). The policy resolution mechanism of the SQL Server integrated CLR doesn't use the <xref:System.Security.Policy.Url> or <xref:System.Security.Policy.Zone> information. Instead, it grants permissions based on the GUID that the server adds when assemblies are loaded. When you use the <xref:System.Xml.XmlSecureResolver> in the SQL Server integrated CLR, provide any required evidence directly by using a specified <xref:System.Security.PermissionSet>.\n  syntax:\n    content: public static System.Security.Policy.Evidence CreateEvidenceForUrl (string securityUrl);\n    parameters:\n    - id: securityUrl\n      type: System.String\n      description: The URL used to create the evidence.\n    return:\n      type: System.Security.Policy.Evidence\n      description: The evidence generated from the supplied URL as defined by the default policy.\n  overload: System.Xml.XmlSecureResolver.CreateEvidenceForUrl*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlSecureResolver.Credentials\n  id: Credentials\n  parent: System.Xml.XmlSecureResolver\n  langs:\n  - csharp\n  name: Credentials\n  nameWithType: XmlSecureResolver.Credentials\n  fullName: System.Xml.XmlSecureResolver.Credentials\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Sets credentials used to authenticate web requests.\n  remarks: ''\n  example:\n  - \"The following example uses an <xref:System.Xml.XmlSecureResolver> with default credentials to resolve and open network resources needed by the <xref:System.Xml.XmlTextReader>.  \\n  \\n [!code-cpp[XmlSecureResolver.Credentials#1](~/add/codesnippet/cpp/p-system.xml.xmlsecurere_1.cpp)]\\n [!code-vb[XmlSecureResolver.Credentials#1](~/add/codesnippet/visualbasic/p-system.xml.xmlsecurere_1.vb)]\\n [!code-cs[XmlSecureResolver.Credentials#1](~/add/codesnippet/csharp/p-system.xml.xmlsecurere_1.cs)]\"\n  syntax:\n    content: public override System.Net.ICredentials Credentials { set; }\n    return:\n      type: System.Net.ICredentials\n      description: The credentials to be used to authenticate web requests. The <xref href=\"System.Xml.XmlSecureResolver\"></xref> sets the given credentials on the underlying <xref href=\"System.Xml.XmlResolver\"></xref>. If this property is not set, the value defaults to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>; that is, the <xref href=\"System.Xml.XmlSecureResolver\"></xref> has no user credentials.\n  overload: System.Xml.XmlSecureResolver.Credentials*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)\n  id: GetEntity(System.Uri,System.String,System.Type)\n  parent: System.Xml.XmlSecureResolver\n  langs:\n  - csharp\n  name: GetEntity(Uri,String,Type)\n  nameWithType: XmlSecureResolver.GetEntity(Uri,String,Type)\n  fullName: System.Xml.XmlSecureResolver.GetEntity(Uri,String,Type)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Maps a URI to an object that contains the actual resource. This method temporarily sets the <xref href=\"System.Security.PermissionSet\"></xref> created in the constructor by calling &lt;xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName&gt; before calling <xref uid=\"langword_csharp_GetEntity\" name=\"GetEntity\" href=\"\"></xref> on the underlying <xref href=\"System.Xml.XmlResolver\"></xref> to open the resource.\n  remarks: >-\n    > [!IMPORTANT]\n\n    >  Your application can mitigate memory denial of service threats to the GetEntity method by implementing an <xref:System.Runtime.InteropServices.ComTypes.IStream> that limits the number of bytes read. This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the GetEntity method.\n  syntax:\n    content: public override object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);\n    parameters:\n    - id: absoluteUri\n      type: System.Uri\n      description: The URI that is returned from <xref:System.Xml.XmlSecureResolver.ResolveUri*>.\n    - id: role\n      type: System.String\n      description: Currently not used.\n    - id: ofObjectToReturn\n      type: System.Type\n      description: The type of object to return. The current version only returns <xref:System.IO.Stream> objects.\n    return:\n      type: System.Object\n      description: The stream returned by calling <xref uid=\"langword_csharp_GetEntity\" name=\"GetEntity\" href=\"\"></xref> on the underlying <xref href=\"System.Xml.XmlResolver\"></xref>. If a type other than <xref:System.IO.Stream> is specified, the method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Xml.XmlSecureResolver.GetEntity*\n  exceptions:\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: <code>ofObjectToReturn</code> is neither <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> nor a <xref:System.IO.Stream> type.\n  - type: System.UriFormatException\n    commentId: T:System.UriFormatException\n    description: The specified URI is not an absolute URI.\n  - type: System.NullReferenceException\n    commentId: T:System.NullReferenceException\n    description: <code>absoluteUri</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: There is a runtime error (for example, an interrupted server connection).\n  platform:\n  - net462\n- uid: System.Xml.XmlSecureResolver.GetEntityAsync(System.Uri,System.String,System.Type)\n  id: GetEntityAsync(System.Uri,System.String,System.Type)\n  parent: System.Xml.XmlSecureResolver\n  langs:\n  - csharp\n  name: GetEntityAsync(Uri,String,Type)\n  nameWithType: XmlSecureResolver.GetEntityAsync(Uri,String,Type)\n  fullName: System.Xml.XmlSecureResolver.GetEntityAsync(Uri,String,Type)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Asynchronously maps a URI to an object that contains the actual resource.\n  syntax:\n    content: public override System.Threading.Tasks.Task<object> GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);\n    parameters:\n    - id: absoluteUri\n      type: System.Uri\n      description: The URI returned from <xref:System.Xml.XmlSecureResolver.ResolveUri*>.\n    - id: role\n      type: System.String\n      description: Currently not used.\n    - id: ofObjectToReturn\n      type: System.Type\n      description: The type of object to return. The current version only returns <xref:System.IO.Stream> objects.\n    return:\n      type: System.Threading.Tasks.Task{System.Object}\n      description: The stream returned by calling <xref uid=\"langword_csharp_GetEntity\" name=\"GetEntity\" href=\"\"></xref> on the underlying <xref href=\"System.Xml.XmlResolver\"></xref>. If a type other than <xref:System.IO.Stream> is specified, the method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Xml.XmlSecureResolver.GetEntityAsync*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)\n  id: ResolveUri(System.Uri,System.String)\n  parent: System.Xml.XmlSecureResolver\n  langs:\n  - csharp\n  name: ResolveUri(Uri,String)\n  nameWithType: XmlSecureResolver.ResolveUri(Uri,String)\n  fullName: System.Xml.XmlSecureResolver.ResolveUri(Uri,String)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Resolves the absolute URI from the base and relative URIs by calling <xref uid=\"langword_csharp_ResolveUri\" name=\"ResolveUri\" href=\"\"></xref> on the underlying <xref href=\"System.Xml.XmlResolver\"></xref>.\n  syntax:\n    content: public override Uri ResolveUri (Uri baseUri, string relativeUri);\n    parameters:\n    - id: baseUri\n      type: System.Uri\n      description: The base URI used to resolve the relative URI.\n    - id: relativeUri\n      type: System.String\n      description: The URI to resolve. The URI can be absolute or relative. If absolute, this value effectively replaces the `baseUri` value. If relative, it combines with the `baseUri` to make an absolute URI.\n    return:\n      type: System.Uri\n      description: The absolute URI or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the relative URI cannot be resolved (returned by calling <xref uid=\"langword_csharp_ResolveUri\" name=\"ResolveUri\" href=\"\"></xref> on the underlying <xref href=\"System.Xml.XmlResolver\"></xref>).\n  overload: System.Xml.XmlSecureResolver.ResolveUri*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>relativeUri</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.Xml.XmlResolver\n  isExternal: false\n  name: System.Xml.XmlResolver\n- uid: System.Xml.XmlException\n  isExternal: true\n  name: System.Xml.XmlException\n- uid: System.UriFormatException\n  isExternal: true\n  name: System.UriFormatException\n- uid: System.NullReferenceException\n  isExternal: true\n  name: System.NullReferenceException\n- uid: System.Exception\n  isExternal: true\n  name: System.Exception\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.PermissionSet)\n  parent: System.Xml.XmlSecureResolver\n  isExternal: false\n  name: XmlSecureResolver(XmlResolver,PermissionSet)\n  nameWithType: XmlSecureResolver.XmlSecureResolver(XmlResolver,PermissionSet)\n  fullName: System.Xml.XmlSecureResolver.XmlSecureResolver(XmlResolver,PermissionSet)\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)\n  parent: System.Xml.XmlSecureResolver\n  isExternal: false\n  name: XmlSecureResolver(XmlResolver,Evidence)\n  nameWithType: XmlSecureResolver.XmlSecureResolver(XmlResolver,Evidence)\n  fullName: System.Xml.XmlSecureResolver.XmlSecureResolver(XmlResolver,Evidence)\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)\n  parent: System.Xml.XmlSecureResolver\n  isExternal: false\n  name: XmlSecureResolver(XmlResolver,String)\n  nameWithType: XmlSecureResolver.XmlSecureResolver(XmlResolver,String)\n  fullName: System.Xml.XmlSecureResolver.XmlSecureResolver(XmlResolver,String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)\n  parent: System.Xml.XmlSecureResolver\n  isExternal: false\n  name: CreateEvidenceForUrl(String)\n  nameWithType: XmlSecureResolver.CreateEvidenceForUrl(String)\n  fullName: System.Xml.XmlSecureResolver.CreateEvidenceForUrl(String)\n- uid: System.Xml.XmlSecureResolver.Credentials\n  parent: System.Xml.XmlSecureResolver\n  isExternal: false\n  name: Credentials\n  nameWithType: XmlSecureResolver.Credentials\n  fullName: System.Xml.XmlSecureResolver.Credentials\n- uid: System.Net.ICredentials\n  parent: System.Net\n  isExternal: true\n  name: ICredentials\n  nameWithType: ICredentials\n  fullName: System.Net.ICredentials\n- uid: System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)\n  parent: System.Xml.XmlSecureResolver\n  isExternal: false\n  name: GetEntity(Uri,String,Type)\n  nameWithType: XmlSecureResolver.GetEntity(Uri,String,Type)\n  fullName: System.Xml.XmlSecureResolver.GetEntity(Uri,String,Type)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Uri\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Xml.XmlSecureResolver.GetEntityAsync(System.Uri,System.String,System.Type)\n  parent: System.Xml.XmlSecureResolver\n  isExternal: false\n  name: GetEntityAsync(Uri,String,Type)\n  nameWithType: XmlSecureResolver.GetEntityAsync(Uri,String,Type)\n  fullName: System.Xml.XmlSecureResolver.GetEntityAsync(Uri,String,Type)\n- uid: System.Threading.Tasks.Task{System.Object}\n  parent: System.Threading.Tasks\n  isExternal: true\n  name: Task<Object>\n  nameWithType: Task<Object>\n  fullName: System.Threading.Tasks.Task<System.Object>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: Task<System.Object>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)\n  parent: System.Xml.XmlSecureResolver\n  isExternal: false\n  name: ResolveUri(Uri,String)\n  nameWithType: XmlSecureResolver.ResolveUri(Uri,String)\n  fullName: System.Xml.XmlSecureResolver.ResolveUri(Uri,String)\n- uid: System.Xml.XmlSecureResolver.#ctor*\n  parent: System.Xml.XmlSecureResolver\n  isExternal: false\n  name: XmlSecureResolver\n  nameWithType: XmlSecureResolver.XmlSecureResolver\n- uid: System.Xml.XmlSecureResolver.CreateEvidenceForUrl*\n  parent: System.Xml.XmlSecureResolver\n  isExternal: false\n  name: CreateEvidenceForUrl\n  nameWithType: XmlSecureResolver.CreateEvidenceForUrl\n- uid: System.Xml.XmlSecureResolver.Credentials*\n  parent: System.Xml.XmlSecureResolver\n  isExternal: false\n  name: Credentials\n  nameWithType: XmlSecureResolver.Credentials\n- uid: System.Xml.XmlSecureResolver.GetEntity*\n  parent: System.Xml.XmlSecureResolver\n  isExternal: false\n  name: GetEntity\n  nameWithType: XmlSecureResolver.GetEntity\n- uid: System.Xml.XmlSecureResolver.GetEntityAsync*\n  parent: System.Xml.XmlSecureResolver\n  isExternal: false\n  name: GetEntityAsync\n  nameWithType: XmlSecureResolver.GetEntityAsync\n- uid: System.Xml.XmlSecureResolver.ResolveUri*\n  parent: System.Xml.XmlSecureResolver\n  isExternal: false\n  name: ResolveUri\n  nameWithType: XmlSecureResolver.ResolveUri\n"}