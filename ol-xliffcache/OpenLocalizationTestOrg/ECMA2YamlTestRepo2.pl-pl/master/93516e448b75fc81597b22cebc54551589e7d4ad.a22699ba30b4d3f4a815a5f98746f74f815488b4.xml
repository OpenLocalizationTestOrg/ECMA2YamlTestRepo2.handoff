{"nodes":[{"pos":[864,976],"content":"Defines the configuration information used by <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Routing.RoutingExtension\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Defines the configuration information used by <xref href=\"System.ServiceModel.Routing.RoutingExtension\"></xref>."},{"pos":[1585,1691],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Routing.RoutingConfiguration\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.ServiceModel.Routing.RoutingConfiguration\"></xref> class."},{"pos":[2800,3026],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Routing.RoutingConfiguration\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified <ph id=\"ph1\">&amp;lt;</ph>xref:System.ServiceModel.Dispatcher.MessageFilterTable%601<ph id=\"ph2\">&amp;gt;</ph> and routeOnHeadersOnly parameter.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.ServiceModel.Routing.RoutingConfiguration\"></xref> class using the specified &lt;xref:System.ServiceModel.Dispatcher.MessageFilterTable%601&gt; and routeOnHeadersOnly parameter."},{"pos":[3465,3520],"content":"The message filter table to use for this configuration.","needQuote":true,"needEscape":true,"nodes":[{"content":"The message filter table to use for this configuration.","pos":[0,55]}]},{"pos":[3596,3916],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the &lt;xref:System.ServiceModel.Dispatcher.MessageFilterTable%601&gt; can only examine message headers; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <ph id=\"ph1\">&amp;lt;</ph>xref:System.ServiceModel.Dispatcher.MessageFilterTable%601<ph id=\"ph2\">&amp;gt;</ph> can only examine message headers; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,243],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the &lt;xref:System.ServiceModel.Dispatcher.MessageFilterTable%601&gt; can only examine message headers; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[244,320],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[4497,4591],"content":"Gets a value that indicates whether messages are to be dispatched in the order they were sent.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether messages are to be dispatched in the order they were sent.","pos":[0,94]}]},{"pos":[4721,4918],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if messages are to be dispatched in the order they were sent; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if messages are to be dispatched in the order they were sent; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[5465,5576],"content":"Gets or sets the &lt;xref:System.ServiceModel.Dispatcher.MessageFilterTable%601&gt; used by this configuration.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the <ph id=\"ph1\">&amp;lt;</ph>xref:System.ServiceModel.Dispatcher.MessageFilterTable%601<ph id=\"ph2\">&amp;gt;</ph> used by this configuration.","pos":[0,111],"source":"Gets or sets the &lt;xref:System.ServiceModel.Dispatcher.MessageFilterTable%601&gt; used by this configuration."}]},{"pos":[5949,5974],"content":"The message filter table.","needQuote":true,"needEscape":true,"nodes":[{"content":"The message filter table.","pos":[0,25]}]},{"pos":[6546,6630],"content":"Gets or sets a value that indicates whether the filter can examine the message body.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the filter can examine the message body.","pos":[0,84]}]},{"pos":[6757,6965],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the filter can only examine message headers; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is **true**.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the filter can only examine message headers; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,183],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the filter can only examine message headers; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept>.","pos":[184,208],"source":" The default is **true**."}]},{"pos":[7559,7697],"content":"Gets or sets a value that indicates whether messages should be processed between SOAP <xref:System.ServiceModel.Channels.MessageVersion>s.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether messages should be processed between SOAP &lt;xref:System.ServiceModel.Channels.MessageVersion&gt;s.","pos":[0,138],"source":"Gets or sets a value that indicates whether messages should be processed between SOAP <xref:System.ServiceModel.Channels.MessageVersion>s."}]},{"pos":[7710,9621],"content":"SOAP processing is the process where messages are converted between SOAP <xref:System.ServiceModel.Channels.MessageVersion>s.       Setting this value to `false` indicates that the <xref:System.ServiceModel.Routing.RoutingBehavior> should not install the <xref:System.ServiceModel.Routing.SoapProcessingBehavior> on the client endpoints. If set to `false`, you must add your own message inspector or other code to handle some aspects of messages before they are sent. It is also possible to disable SOAP processing on each endpoint. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)] the <xref:System.ServiceModel.Routing.SoapProcessingBehavior> class.       By default, the <xref:System.ServiceModel.Routing.RoutingBehavior> creates and attaches a new <xref:System.ServiceModel.Routing.SoapProcessingBehavior> with <xref:System.ServiceModel.Routing.SoapProcessingBehavior.ProcessMessages%2A> set to `true` for each client endpoint. If you do not want to use the <xref:System.ServiceModel.Routing.SoapProcessingBehavior> on a specific endpoint, create a new <xref:System.ServiceModel.Routing.SoapProcessingBehavior> with this value set to `false` and then attach it to the endpoint on which you do not want processing to occur. If the <xref:System.ServiceModel.Routing.RoutingBehavior> observes that a client already has a <xref:System.ServiceModel.Routing.SoapProcessingBehavior>, it does not attempt to attach another.       To disable the application of <xref:System.ServiceModel.Routing.SoapProcessingBehavior> on any endpoint, disable SOAP processing on the <xref:System.ServiceModel.Routing.RoutingBehavior>and the <xref:System.ServiceModel.Routing.RoutingConfiguration>.       If SoapProcessingEnabled is `true`, the <xref:System.ServiceModel.Routing.SoapProcessingBehavior> is added to the client endpoint <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A> collection.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"SOAP processing is the process where messages are converted between SOAP &lt;xref:System.ServiceModel.Channels.MessageVersion&gt;s.","pos":[0,125],"source":"SOAP processing is the process where messages are converted between SOAP <xref:System.ServiceModel.Channels.MessageVersion>s."},{"content":"Setting this value to <ph id=\"ph1\">`false`</ph> indicates that the &lt;xref:System.ServiceModel.Routing.RoutingBehavior&gt; should not install the &lt;xref:System.ServiceModel.Routing.SoapProcessingBehavior&gt; on the client endpoints.","pos":[132,337],"source":"       Setting this value to `false` indicates that the <xref:System.ServiceModel.Routing.RoutingBehavior> should not install the <xref:System.ServiceModel.Routing.SoapProcessingBehavior> on the client endpoints."},{"content":"If set to <ph id=\"ph1\">`false`</ph>, you must add your own message inspector or other code to handle some aspects of messages before they are sent.","pos":[338,467],"source":" If set to `false`, you must add your own message inspector or other code to handle some aspects of messages before they are sent."},{"content":"It is also possible to disable SOAP processing on each endpoint.","pos":[468,532]},{"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph> the &lt;xref:System.ServiceModel.Routing.SoapProcessingBehavior&gt; class.","pos":[533,662],"source":"[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)] the <xref:System.ServiceModel.Routing.SoapProcessingBehavior> class."},{"content":"By default, the &lt;xref:System.ServiceModel.Routing.RoutingBehavior&gt; creates and attaches a new &lt;xref:System.ServiceModel.Routing.SoapProcessingBehavior&gt; with &lt;xref:System.ServiceModel.Routing.SoapProcessingBehavior.ProcessMessages%2A&gt; set to <ph id=\"ph1\">`true`</ph> for each client endpoint.","pos":[669,942],"source":"       By default, the <xref:System.ServiceModel.Routing.RoutingBehavior> creates and attaches a new <xref:System.ServiceModel.Routing.SoapProcessingBehavior> with <xref:System.ServiceModel.Routing.SoapProcessingBehavior.ProcessMessages%2A> set to `true` for each client endpoint."},{"content":"If you do not want to use the &lt;xref:System.ServiceModel.Routing.SoapProcessingBehavior&gt; on a specific endpoint, create a new &lt;xref:System.ServiceModel.Routing.SoapProcessingBehavior&gt; with this value set to <ph id=\"ph1\">`false`</ph> and then attach it to the endpoint on which you do not want processing to occur.","pos":[943,1237],"source":" If you do not want to use the <xref:System.ServiceModel.Routing.SoapProcessingBehavior> on a specific endpoint, create a new <xref:System.ServiceModel.Routing.SoapProcessingBehavior> with this value set to `false` and then attach it to the endpoint on which you do not want processing to occur."},{"content":"If the &lt;xref:System.ServiceModel.Routing.RoutingBehavior&gt; observes that a client already has a &lt;xref:System.ServiceModel.Routing.SoapProcessingBehavior&gt;, it does not attempt to attach another.","pos":[1238,1430],"source":" If the <xref:System.ServiceModel.Routing.RoutingBehavior> observes that a client already has a <xref:System.ServiceModel.Routing.SoapProcessingBehavior>, it does not attempt to attach another."},{"content":"To disable the application of &lt;xref:System.ServiceModel.Routing.SoapProcessingBehavior&gt; on any endpoint, disable SOAP processing on the &lt;xref:System.ServiceModel.Routing.RoutingBehavior&gt;and the &lt;xref:System.ServiceModel.Routing.RoutingConfiguration&gt;.","pos":[1437,1687],"source":"       To disable the application of <xref:System.ServiceModel.Routing.SoapProcessingBehavior> on any endpoint, disable SOAP processing on the <xref:System.ServiceModel.Routing.RoutingBehavior>and the <xref:System.ServiceModel.Routing.RoutingConfiguration>."},{"content":"If SoapProcessingEnabled is <ph id=\"ph1\">`true`</ph>, the &lt;xref:System.ServiceModel.Routing.SoapProcessingBehavior&gt; is added to the client endpoint &lt;xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A&gt; collection.","pos":[1694,1903],"source":"       If SoapProcessingEnabled is `true`, the <xref:System.ServiceModel.Routing.SoapProcessingBehavior> is added to the client endpoint <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A> collection."}]},{"pos":[9752,10003],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if messages should be processed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if messages should be processed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,168],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if messages should be processed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[169,251],"source":" The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Routing.RoutingConfiguration\n  id: RoutingConfiguration\n  children:\n  - System.ServiceModel.Routing.RoutingConfiguration.#ctor\n  - System.ServiceModel.Routing.RoutingConfiguration.#ctor(System.ServiceModel.Dispatcher.MessageFilterTable{System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ServiceEndpoint}},System.Boolean)\n  - System.ServiceModel.Routing.RoutingConfiguration.EnsureOrderedDispatch\n  - System.ServiceModel.Routing.RoutingConfiguration.FilterTable\n  - System.ServiceModel.Routing.RoutingConfiguration.RouteOnHeadersOnly\n  - System.ServiceModel.Routing.RoutingConfiguration.SoapProcessingEnabled\n  langs:\n  - csharp\n  name: RoutingConfiguration\n  nameWithType: RoutingConfiguration\n  fullName: System.ServiceModel.Routing.RoutingConfiguration\n  type: Class\n  summary: Defines the configuration information used by <xref href=\"System.ServiceModel.Routing.RoutingExtension\"></xref>.\n  syntax:\n    content: public sealed class RoutingConfiguration\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.RoutingConfiguration.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Routing.RoutingConfiguration\n  langs:\n  - csharp\n  name: RoutingConfiguration()\n  nameWithType: RoutingConfiguration.RoutingConfiguration()\n  fullName: System.ServiceModel.Routing.RoutingConfiguration.RoutingConfiguration()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing\n  summary: Creates a new instance of the <xref href=\"System.ServiceModel.Routing.RoutingConfiguration\"></xref> class.\n  syntax:\n    content: public RoutingConfiguration ();\n    parameters: []\n  overload: System.ServiceModel.Routing.RoutingConfiguration.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.RoutingConfiguration.#ctor(System.ServiceModel.Dispatcher.MessageFilterTable{System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ServiceEndpoint}},System.Boolean)\n  id: '#ctor(System.ServiceModel.Dispatcher.MessageFilterTable{System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ServiceEndpoint}},System.Boolean)'\n  parent: System.ServiceModel.Routing.RoutingConfiguration\n  langs:\n  - csharp\n  name: RoutingConfiguration(MessageFilterTable<IEnumerable<ServiceEndpoint>>,Boolean)\n  nameWithType: RoutingConfiguration.RoutingConfiguration(MessageFilterTable<IEnumerable<ServiceEndpoint>>,Boolean)\n  fullName: System.ServiceModel.Routing.RoutingConfiguration.RoutingConfiguration(MessageFilterTable<IEnumerable<ServiceEndpoint>>,Boolean)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing\n  summary: Creates a new instance of the <xref href=\"System.ServiceModel.Routing.RoutingConfiguration\"></xref> class using the specified &lt;xref:System.ServiceModel.Dispatcher.MessageFilterTable%601&gt; and routeOnHeadersOnly parameter.\n  syntax:\n    content: public RoutingConfiguration (System.ServiceModel.Dispatcher.MessageFilterTable<System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ServiceEndpoint>> filterTable, bool routeOnHeadersOnly);\n    parameters:\n    - id: filterTable\n      type: System.ServiceModel.Dispatcher.MessageFilterTable{System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ServiceEndpoint}}\n      description: The message filter table to use for this configuration.\n    - id: routeOnHeadersOnly\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the &lt;xref:System.ServiceModel.Dispatcher.MessageFilterTable%601&gt; can only examine message headers; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.ServiceModel.Routing.RoutingConfiguration.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.RoutingConfiguration.EnsureOrderedDispatch\n  id: EnsureOrderedDispatch\n  parent: System.ServiceModel.Routing.RoutingConfiguration\n  langs:\n  - csharp\n  name: EnsureOrderedDispatch\n  nameWithType: RoutingConfiguration.EnsureOrderedDispatch\n  fullName: System.ServiceModel.Routing.RoutingConfiguration.EnsureOrderedDispatch\n  type: Property\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing\n  summary: Gets a value that indicates whether messages are to be dispatched in the order they were sent.\n  syntax:\n    content: public bool EnsureOrderedDispatch { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if messages are to be dispatched in the order they were sent; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Routing.RoutingConfiguration.EnsureOrderedDispatch*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.RoutingConfiguration.FilterTable\n  id: FilterTable\n  parent: System.ServiceModel.Routing.RoutingConfiguration\n  langs:\n  - csharp\n  name: FilterTable\n  nameWithType: RoutingConfiguration.FilterTable\n  fullName: System.ServiceModel.Routing.RoutingConfiguration.FilterTable\n  type: Property\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing\n  summary: Gets or sets the &lt;xref:System.ServiceModel.Dispatcher.MessageFilterTable%601&gt; used by this configuration.\n  syntax:\n    content: public System.ServiceModel.Dispatcher.MessageFilterTable<System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ServiceEndpoint>> FilterTable { get; }\n    return:\n      type: System.ServiceModel.Dispatcher.MessageFilterTable{System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ServiceEndpoint}}\n      description: The message filter table.\n  overload: System.ServiceModel.Routing.RoutingConfiguration.FilterTable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.RoutingConfiguration.RouteOnHeadersOnly\n  id: RouteOnHeadersOnly\n  parent: System.ServiceModel.Routing.RoutingConfiguration\n  langs:\n  - csharp\n  name: RouteOnHeadersOnly\n  nameWithType: RoutingConfiguration.RouteOnHeadersOnly\n  fullName: System.ServiceModel.Routing.RoutingConfiguration.RouteOnHeadersOnly\n  type: Property\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing\n  summary: Gets or sets a value that indicates whether the filter can examine the message body.\n  syntax:\n    content: public bool RouteOnHeadersOnly { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the filter can only examine message headers; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is **true**.\n  overload: System.ServiceModel.Routing.RoutingConfiguration.RouteOnHeadersOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.RoutingConfiguration.SoapProcessingEnabled\n  id: SoapProcessingEnabled\n  parent: System.ServiceModel.Routing.RoutingConfiguration\n  langs:\n  - csharp\n  name: SoapProcessingEnabled\n  nameWithType: RoutingConfiguration.SoapProcessingEnabled\n  fullName: System.ServiceModel.Routing.RoutingConfiguration.SoapProcessingEnabled\n  type: Property\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing\n  summary: Gets or sets a value that indicates whether messages should be processed between SOAP <xref:System.ServiceModel.Channels.MessageVersion>s.\n  remarks: \"SOAP processing is the process where messages are converted between SOAP <xref:System.ServiceModel.Channels.MessageVersion>s.  \\n  \\n Setting this value to `false` indicates that the <xref:System.ServiceModel.Routing.RoutingBehavior> should not install the <xref:System.ServiceModel.Routing.SoapProcessingBehavior> on the client endpoints. If set to `false`, you must add your own message inspector or other code to handle some aspects of messages before they are sent. It is also possible to disable SOAP processing on each endpoint. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)] the <xref:System.ServiceModel.Routing.SoapProcessingBehavior> class.  \\n  \\n By default, the <xref:System.ServiceModel.Routing.RoutingBehavior> creates and attaches a new <xref:System.ServiceModel.Routing.SoapProcessingBehavior> with <xref:System.ServiceModel.Routing.SoapProcessingBehavior.ProcessMessages%2A> set to `true` for each client endpoint. If you do not want to use the <xref:System.ServiceModel.Routing.SoapProcessingBehavior> on a specific endpoint, create a new <xref:System.ServiceModel.Routing.SoapProcessingBehavior> with this value set to `false` and then attach it to the endpoint on which you do not want processing to occur. If the <xref:System.ServiceModel.Routing.RoutingBehavior> observes that a client already has a <xref:System.ServiceModel.Routing.SoapProcessingBehavior>, it does not attempt to attach another.  \\n  \\n To disable the application of <xref:System.ServiceModel.Routing.SoapProcessingBehavior> on any endpoint, disable SOAP processing on the <xref:System.ServiceModel.Routing.RoutingBehavior>and the <xref:System.ServiceModel.Routing.RoutingConfiguration>.  \\n  \\n If SoapProcessingEnabled is `true`, the <xref:System.ServiceModel.Routing.SoapProcessingBehavior> is added to the client endpoint <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A> collection.\"\n  syntax:\n    content: public bool SoapProcessingEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if messages should be processed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.ServiceModel.Routing.RoutingConfiguration.SoapProcessingEnabled*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ServiceModel.Routing.RoutingConfiguration.#ctor\n  parent: System.ServiceModel.Routing.RoutingConfiguration\n  isExternal: false\n  name: RoutingConfiguration()\n  nameWithType: RoutingConfiguration.RoutingConfiguration()\n  fullName: System.ServiceModel.Routing.RoutingConfiguration.RoutingConfiguration()\n- uid: System.ServiceModel.Routing.RoutingConfiguration.#ctor(System.ServiceModel.Dispatcher.MessageFilterTable{System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ServiceEndpoint}},System.Boolean)\n  parent: System.ServiceModel.Routing.RoutingConfiguration\n  isExternal: false\n  name: RoutingConfiguration(MessageFilterTable<IEnumerable<ServiceEndpoint>>,Boolean)\n  nameWithType: RoutingConfiguration.RoutingConfiguration(MessageFilterTable<IEnumerable<ServiceEndpoint>>,Boolean)\n  fullName: System.ServiceModel.Routing.RoutingConfiguration.RoutingConfiguration(MessageFilterTable<IEnumerable<ServiceEndpoint>>,Boolean)\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable{System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ServiceEndpoint}}\n  parent: System.ServiceModel.Dispatcher\n  isExternal: false\n  name: MessageFilterTable<IEnumerable<ServiceEndpoint>>\n  nameWithType: MessageFilterTable<IEnumerable<ServiceEndpoint>>\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ServiceEndpoint>>\n  spec.csharp:\n  - uid: System.ServiceModel.Dispatcher.MessageFilterTable`1\n    name: MessageFilterTable\n    nameWithType: MessageFilterTable\n    fullName: MessageFilterTable<System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ServiceEndpoint>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.ServiceModel.Description.ServiceEndpoint>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Description.ServiceEndpoint\n    name: ServiceEndpoint\n    nameWithType: ServiceEndpoint\n    fullName: ServiceEndpoint\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Routing.RoutingConfiguration.EnsureOrderedDispatch\n  parent: System.ServiceModel.Routing.RoutingConfiguration\n  isExternal: false\n  name: EnsureOrderedDispatch\n  nameWithType: RoutingConfiguration.EnsureOrderedDispatch\n  fullName: System.ServiceModel.Routing.RoutingConfiguration.EnsureOrderedDispatch\n- uid: System.ServiceModel.Routing.RoutingConfiguration.FilterTable\n  parent: System.ServiceModel.Routing.RoutingConfiguration\n  isExternal: false\n  name: FilterTable\n  nameWithType: RoutingConfiguration.FilterTable\n  fullName: System.ServiceModel.Routing.RoutingConfiguration.FilterTable\n- uid: System.ServiceModel.Routing.RoutingConfiguration.RouteOnHeadersOnly\n  parent: System.ServiceModel.Routing.RoutingConfiguration\n  isExternal: false\n  name: RouteOnHeadersOnly\n  nameWithType: RoutingConfiguration.RouteOnHeadersOnly\n  fullName: System.ServiceModel.Routing.RoutingConfiguration.RouteOnHeadersOnly\n- uid: System.ServiceModel.Routing.RoutingConfiguration.SoapProcessingEnabled\n  parent: System.ServiceModel.Routing.RoutingConfiguration\n  isExternal: false\n  name: SoapProcessingEnabled\n  nameWithType: RoutingConfiguration.SoapProcessingEnabled\n  fullName: System.ServiceModel.Routing.RoutingConfiguration.SoapProcessingEnabled\n- uid: System.ServiceModel.Routing.RoutingConfiguration.#ctor*\n  parent: System.ServiceModel.Routing.RoutingConfiguration\n  isExternal: false\n  name: RoutingConfiguration\n  nameWithType: RoutingConfiguration.RoutingConfiguration\n- uid: System.ServiceModel.Routing.RoutingConfiguration.EnsureOrderedDispatch*\n  parent: System.ServiceModel.Routing.RoutingConfiguration\n  isExternal: false\n  name: EnsureOrderedDispatch\n  nameWithType: RoutingConfiguration.EnsureOrderedDispatch\n- uid: System.ServiceModel.Routing.RoutingConfiguration.FilterTable*\n  parent: System.ServiceModel.Routing.RoutingConfiguration\n  isExternal: false\n  name: FilterTable\n  nameWithType: RoutingConfiguration.FilterTable\n- uid: System.ServiceModel.Routing.RoutingConfiguration.RouteOnHeadersOnly*\n  parent: System.ServiceModel.Routing.RoutingConfiguration\n  isExternal: false\n  name: RouteOnHeadersOnly\n  nameWithType: RoutingConfiguration.RouteOnHeadersOnly\n- uid: System.ServiceModel.Routing.RoutingConfiguration.SoapProcessingEnabled*\n  parent: System.ServiceModel.Routing.RoutingConfiguration\n  isExternal: false\n  name: SoapProcessingEnabled\n  nameWithType: RoutingConfiguration.SoapProcessingEnabled\n"}