{"nodes":[{"pos":[525,615],"content":"Represents the base class from which all implementations of the RC2 algorithm must derive.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the base class from which all implementations of the RC2 algorithm must derive.","pos":[0,90]}]},{"pos":[3364,3448],"content":"Initializes a new instance of <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.RC2\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of <xref href=\"System.Security.Cryptography.RC2\"></xref>."},{"pos":[3461,4297],"content":"You cannot create an instance of an abstract class. Application code will create a new instance of a derived class.       This algorithm supports key lengths from 40 bits to 1024 bits in increments of 8 bits, but the <xref:System.Security.Cryptography.RC2CryptoServiceProvider> implementation only supports key lengths from 40 bits to 128 bits in increments of 8 bits.       This method initializes the protected fields of <xref:System.Security.Cryptography.SymmetricAlgorithm> to the default values listed in the following table.      |Field|Default Value|   |-----------|-------------------|   |<xref:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue>|128|   |<xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>|64|   |<xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue>|64|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You cannot create an instance of an abstract class. Application code will create a new instance of a derived class.       This algorithm supports key lengths from 40 bits to 1024 bits in increments of 8 bits, but the <xref:System.Security.Cryptography.RC2CryptoServiceProvider> implementation only supports key lengths from 40 bits to 128 bits in increments of 8 bits.       This method initializes the protected fields of <xref:System.Security.Cryptography.SymmetricAlgorithm> to the default values listed in the following table.      |Field|Default Value|   |-----------|-------------------|   |<xref:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue>|128|   |<xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>|64|   |<xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue>|64|","pos":[0,826],"nodes":[{"content":"You cannot create an instance of an abstract class.","pos":[0,51]},{"content":"Application code will create a new instance of a derived class.","pos":[52,115]},{"content":"This algorithm supports key lengths from 40 bits to 1024 bits in increments of 8 bits, but the &lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider&gt; implementation only supports key lengths from 40 bits to 128 bits in increments of 8 bits.","pos":[122,368],"source":"       This algorithm supports key lengths from 40 bits to 1024 bits in increments of 8 bits, but the <xref:System.Security.Cryptography.RC2CryptoServiceProvider> implementation only supports key lengths from 40 bits to 128 bits in increments of 8 bits."},{"content":"This method initializes the protected fields of &lt;xref:System.Security.Cryptography.SymmetricAlgorithm&gt; to the default values listed in the following table.","pos":[375,530],"source":"       This method initializes the protected fields of <xref:System.Security.Cryptography.SymmetricAlgorithm> to the default values listed in the following table."},{"content":"|Field|Default Value|   |-----------|-------------------|   |&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue&gt;|128|   |&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue&gt;|64|   |&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue&gt;|64|","pos":[536,826],"source":"      |Field|Default Value|   |-----------|-------------------|   |<xref:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue>|128|   |<xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>|64|   |<xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue>|64|"}]}]},{"pos":[4769,4894],"content":"Creates an instance of a cryptographic object to perform the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.RC2\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> algorithm.","needQuote":true,"needEscape":true,"source":"Creates an instance of a cryptographic object to perform the <xref href=\"System.Security.Cryptography.RC2\"></xref> algorithm."},{"pos":[4906,5006],"content":"Use this method to create an instance of the RC2 class that you can use to encrypt and decrypt data.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this method to create an instance of the RC2 class that you can use to encrypt and decrypt data.","pos":[0,100]}]},{"pos":[6064,6102],"content":"An instance of a cryptographic object.","needQuote":true,"needEscape":true,"nodes":[{"content":"An instance of a cryptographic object.","pos":[0,38]}]},{"pos":[6302,6419],"content":"The algorithm was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.","needQuote":true,"needEscape":true,"nodes":[{"content":"The algorithm was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.","pos":[0,117]}]},{"pos":[6809,6966],"content":"Creates an instance of a cryptographic object to perform the specified implementation of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.RC2\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> algorithm.","needQuote":true,"needEscape":true,"source":"Creates an instance of a cryptographic object to perform the specified implementation of the <xref href=\"System.Security.Cryptography.RC2\"></xref> algorithm."},{"pos":[6978,7078],"content":"Use this method to create an instance of the RC2 class that you can use to encrypt and decrypt data.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this method to create an instance of the RC2 class that you can use to encrypt and decrypt data.","pos":[0,100]}]},{"pos":[8164,8268],"content":"The name of the specific implementation of <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.RC2\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use.","needQuote":true,"needEscape":true,"source":"The name of the specific implementation of <xref href=\"System.Security.Cryptography.RC2\"></xref> to use."},{"pos":[8345,8383],"content":"An instance of a cryptographic object.","needQuote":true,"needEscape":true,"nodes":[{"content":"An instance of a cryptographic object.","pos":[0,38]}]},{"pos":[8583,8748],"content":"The algorithm described by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">algName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.","needQuote":true,"needEscape":true,"source":"The algorithm described by the <code>algName</code> parameter was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible."},{"pos":[9136,9270],"content":"Gets or sets the effective size of the secret key used by the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.RC2\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> algorithm in bits.","needQuote":true,"needEscape":true,"source":"Gets or sets the effective size of the secret key used by the <xref href=\"System.Security.Cryptography.RC2\"></xref> algorithm in bits."},{"pos":[9400,9499],"content":"The effective key size used by the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.RC2\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> algorithm.","needQuote":true,"needEscape":true,"source":"The effective key size used by the <xref href=\"System.Security.Cryptography.RC2\"></xref> algorithm."},{"pos":[9725,9759],"content":"The effective key size is invalid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The effective key size is invalid.","pos":[0,34]}]},{"pos":[10169,10301],"content":"Represents the effective size of the secret key used by the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.RC2\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> algorithm in bits.","needQuote":true,"needEscape":true,"source":"Represents the effective size of the secret key used by the <xref href=\"System.Security.Cryptography.RC2\"></xref> algorithm in bits."},{"pos":[10313,10417],"content":"This field is accessed through the <xref:System.Security.Cryptography.RC2.EffectiveKeySize%2A> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This field is accessed through the &lt;xref:System.Security.Cryptography.RC2.EffectiveKeySize%2A&gt; property.","pos":[0,104],"source":"This field is accessed through the <xref:System.Security.Cryptography.RC2.EffectiveKeySize%2A> property."}]},{"pos":[10534,10546],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10906,11030],"content":"Gets or sets the size of the secret key used by the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.RC2\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> algorithm in bits.","needQuote":true,"needEscape":true,"source":"Gets or sets the size of the secret key used by the <xref href=\"System.Security.Cryptography.RC2\"></xref> algorithm in bits."},{"pos":[11042,11252],"content":"This algorithm supports key lengths from 40 bits to 1024 bits in increments of 8 bits, but the RC2CryptoServiceProvider implementation only supports key lengths from 40 bits to 128 bits in increments of 8 bits.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This algorithm supports key lengths from 40 bits to 1024 bits in increments of 8 bits, but the RC2CryptoServiceProvider implementation only supports key lengths from 40 bits to 128 bits in increments of 8 bits.","pos":[0,210]}]},{"pos":[11374,11477],"content":"The size of the secret key used by the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.RC2\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> algorithm.","needQuote":true,"needEscape":true,"source":"The size of the secret key used by the <xref href=\"System.Security.Cryptography.RC2\"></xref> algorithm."},{"pos":[11694,11767],"content":"The value for the RC2 key size is less than the effective key size value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value for the RC2 key size is less than the effective key size value.","pos":[0,73]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.RC2\n  id: RC2\n  children:\n  - System.Security.Cryptography.RC2.#ctor\n  - System.Security.Cryptography.RC2.Create\n  - System.Security.Cryptography.RC2.Create(System.String)\n  - System.Security.Cryptography.RC2.EffectiveKeySize\n  - System.Security.Cryptography.RC2.EffectiveKeySizeValue\n  - System.Security.Cryptography.RC2.KeySize\n  langs:\n  - csharp\n  name: RC2\n  nameWithType: RC2\n  fullName: System.Security.Cryptography.RC2\n  type: Class\n  summary: Represents the base class from which all implementations of the RC2 algorithm must derive.\n  remarks: >-\n    > [!NOTE]\n\n    >  A newer symmetric encryption algorithm, Advanced Encryption Standard (AES), is available. Consider using the <xref:System.Security.Cryptography.Aes> algorithm and its derived classes instead of the RC2 class. Use RC2 only for compatibility with legacy applications and data.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class RC2 : System.Security.Cryptography.SymmetricAlgorithm\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.SymmetricAlgorithm\n  implements: []\n  inheritedMembers:\n  - System.Security.Cryptography.SymmetricAlgorithm.BlockSize\n  - System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Clear\n  - System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor\n  - System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor\n  - System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.SymmetricAlgorithm.Dispose\n  - System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)\n  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize\n  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.GenerateIV\n  - System.Security.Cryptography.SymmetricAlgorithm.GenerateKey\n  - System.Security.Cryptography.SymmetricAlgorithm.IV\n  - System.Security.Cryptography.SymmetricAlgorithm.IVValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Key\n  - System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.KeyValue\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Mode\n  - System.Security.Cryptography.SymmetricAlgorithm.ModeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Padding\n  - System.Security.Cryptography.SymmetricAlgorithm.PaddingValue\n  - System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)\n  platform:\n  - net462\n- uid: System.Security.Cryptography.RC2.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.RC2\n  langs:\n  - csharp\n  name: RC2()\n  nameWithType: RC2.RC2()\n  fullName: System.Security.Cryptography.RC2.RC2()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of <xref href=\"System.Security.Cryptography.RC2\"></xref>.\n  remarks: \"You cannot create an instance of an abstract class. Application code will create a new instance of a derived class.  \\n  \\n This algorithm supports key lengths from 40 bits to 1024 bits in increments of 8 bits, but the <xref:System.Security.Cryptography.RC2CryptoServiceProvider> implementation only supports key lengths from 40 bits to 128 bits in increments of 8 bits.  \\n  \\n This method initializes the protected fields of <xref:System.Security.Cryptography.SymmetricAlgorithm> to the default values listed in the following table.  \\n  \\n|Field|Default Value|  \\n|-----------|-------------------|  \\n|<xref:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue>|128|  \\n|<xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>|64|  \\n|<xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue>|64|\"\n  syntax:\n    content: protected RC2 ();\n    parameters: []\n  overload: System.Security.Cryptography.RC2.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.RC2.Create\n  id: Create\n  parent: System.Security.Cryptography.RC2\n  langs:\n  - csharp\n  name: Create()\n  nameWithType: RC2.Create()\n  fullName: System.Security.Cryptography.RC2.Create()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Creates an instance of a cryptographic object to perform the <xref href=\"System.Security.Cryptography.RC2\"></xref> algorithm.\n  remarks: Use this method to create an instance of the RC2 class that you can use to encrypt and decrypt data.\n  example:\n  - \"The following example shows how to create and use an RC2 object to encrypt and decrypt data in a file.  \\n  \\n [!code-cpp[Cryptography.RC2.Create.File#1](~/add/codesnippet/cpp/m-system.security.crypto_46_1.cpp)]\\n [!code-cs[Cryptography.RC2.Create.File#1](~/add/codesnippet/csharp/m-system.security.crypto_46_1.cs)]\\n [!code-vb[Cryptography.RC2.Create.File#1](~/add/codesnippet/visualbasic/m-system.security.crypto_46_1.vb)]  \\n  \\n The following example shows how to create and use an RC2 object to encrypt and decrypt data in memory.  \\n  \\n [!code-cpp[Cryptography.RC2.Create.Memory#1](~/add/codesnippet/cpp/m-system.security.crypto_46_2.cpp)]\\n [!code-cs[Cryptography.RC2.Create.Memory#1](~/add/codesnippet/csharp/m-system.security.crypto_46_2.cs)]\\n [!code-vb[Cryptography.RC2.Create.Memory#1](~/add/codesnippet/visualbasic/m-system.security.crypto_46_2.vb)]\"\n  syntax:\n    content: public static System.Security.Cryptography.RC2 Create ();\n    parameters: []\n    return:\n      type: System.Security.Cryptography.RC2\n      description: An instance of a cryptographic object.\n  overload: System.Security.Cryptography.RC2.Create*\n  exceptions:\n  - type: System.Reflection.TargetInvocationException\n    commentId: T:System.Reflection.TargetInvocationException\n    description: The algorithm was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.RC2.Create(System.String)\n  id: Create(System.String)\n  parent: System.Security.Cryptography.RC2\n  langs:\n  - csharp\n  name: Create(String)\n  nameWithType: RC2.Create(String)\n  fullName: System.Security.Cryptography.RC2.Create(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Creates an instance of a cryptographic object to perform the specified implementation of the <xref href=\"System.Security.Cryptography.RC2\"></xref> algorithm.\n  remarks: Use this method to create an instance of the RC2 class that you can use to encrypt and decrypt data.\n  example:\n  - \"The following example shows how to create and use an RC2 object to encrypt and decrypt data in a file.  \\n  \\n [!code-cpp[Cryptography.RC2.Createstring.File#1](~/add/codesnippet/cpp/m-system.security.crypto_6_1.cpp)]\\n [!code-cs[Cryptography.RC2.Createstring.File#1](~/add/codesnippet/csharp/m-system.security.crypto_6_1.cs)]\\n [!code-vb[Cryptography.RC2.Createstring.File#1](~/add/codesnippet/visualbasic/m-system.security.crypto_6_1.vb)]  \\n  \\n The following example shows how to create and use an RC2 object to encrypt and decrypt data in memory.  \\n  \\n [!code-cs[Cryptography.RC2.Createstring.Memory#1](~/add/codesnippet/csharp/m-system.security.crypto_6_2.cs)]\\n [!code-cpp[Cryptography.RC2.Createstring.Memory#1](~/add/codesnippet/cpp/m-system.security.crypto_6_2.cpp)]\\n [!code-vb[Cryptography.RC2.Createstring.Memory#1](~/add/codesnippet/visualbasic/m-system.security.crypto_6_2.vb)]\"\n  syntax:\n    content: public static System.Security.Cryptography.RC2 Create (string AlgName);\n    parameters:\n    - id: AlgName\n      type: System.String\n      description: The name of the specific implementation of <xref href=\"System.Security.Cryptography.RC2\"></xref> to use.\n    return:\n      type: System.Security.Cryptography.RC2\n      description: An instance of a cryptographic object.\n  overload: System.Security.Cryptography.RC2.Create*\n  exceptions:\n  - type: System.Reflection.TargetInvocationException\n    commentId: T:System.Reflection.TargetInvocationException\n    description: The algorithm described by the <code>algName</code> parameter was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.RC2.EffectiveKeySize\n  id: EffectiveKeySize\n  parent: System.Security.Cryptography.RC2\n  langs:\n  - csharp\n  name: EffectiveKeySize\n  nameWithType: RC2.EffectiveKeySize\n  fullName: System.Security.Cryptography.RC2.EffectiveKeySize\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Gets or sets the effective size of the secret key used by the <xref href=\"System.Security.Cryptography.RC2\"></xref> algorithm in bits.\n  syntax:\n    content: public virtual int EffectiveKeySize { get; set; }\n    return:\n      type: System.Int32\n      description: The effective key size used by the <xref href=\"System.Security.Cryptography.RC2\"></xref> algorithm.\n  overload: System.Security.Cryptography.RC2.EffectiveKeySize*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The effective key size is invalid.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.RC2.EffectiveKeySizeValue\n  id: EffectiveKeySizeValue\n  parent: System.Security.Cryptography.RC2\n  langs:\n  - csharp\n  name: EffectiveKeySizeValue\n  nameWithType: RC2.EffectiveKeySizeValue\n  fullName: System.Security.Cryptography.RC2.EffectiveKeySizeValue\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Represents the effective size of the secret key used by the <xref href=\"System.Security.Cryptography.RC2\"></xref> algorithm in bits.\n  remarks: This field is accessed through the <xref:System.Security.Cryptography.RC2.EffectiveKeySize%2A> property.\n  syntax:\n    content: protected int EffectiveKeySizeValue;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.RC2.KeySize\n  id: KeySize\n  parent: System.Security.Cryptography.RC2\n  langs:\n  - csharp\n  name: KeySize\n  nameWithType: RC2.KeySize\n  fullName: System.Security.Cryptography.RC2.KeySize\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Gets or sets the size of the secret key used by the <xref href=\"System.Security.Cryptography.RC2\"></xref> algorithm in bits.\n  remarks: This algorithm supports key lengths from 40 bits to 1024 bits in increments of 8 bits, but the RC2CryptoServiceProvider implementation only supports key lengths from 40 bits to 128 bits in increments of 8 bits.\n  syntax:\n    content: public override int KeySize { get; set; }\n    return:\n      type: System.Int32\n      description: The size of the secret key used by the <xref href=\"System.Security.Cryptography.RC2\"></xref> algorithm.\n  overload: System.Security.Cryptography.RC2.KeySize*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The value for the RC2 key size is less than the effective key size value.\n  platform:\n  - net462\nreferences:\n- uid: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: System.Security.Cryptography.SymmetricAlgorithm\n- uid: System.Reflection.TargetInvocationException\n  isExternal: true\n  name: System.Reflection.TargetInvocationException\n- uid: System.Security.Cryptography.CryptographicException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicException\n  nameWithType: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n- uid: System.Security.Cryptography.RC2.#ctor\n  parent: System.Security.Cryptography.RC2\n  isExternal: false\n  name: RC2()\n  nameWithType: RC2.RC2()\n  fullName: System.Security.Cryptography.RC2.RC2()\n- uid: System.Security.Cryptography.RC2.Create\n  parent: System.Security.Cryptography.RC2\n  isExternal: false\n  name: Create()\n  nameWithType: RC2.Create()\n  fullName: System.Security.Cryptography.RC2.Create()\n- uid: System.Security.Cryptography.RC2\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: RC2\n  nameWithType: RC2\n  fullName: System.Security.Cryptography.RC2\n- uid: System.Security.Cryptography.RC2.Create(System.String)\n  parent: System.Security.Cryptography.RC2\n  isExternal: false\n  name: Create(String)\n  nameWithType: RC2.Create(String)\n  fullName: System.Security.Cryptography.RC2.Create(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.RC2.EffectiveKeySize\n  parent: System.Security.Cryptography.RC2\n  isExternal: false\n  name: EffectiveKeySize\n  nameWithType: RC2.EffectiveKeySize\n  fullName: System.Security.Cryptography.RC2.EffectiveKeySize\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.RC2.EffectiveKeySizeValue\n  parent: System.Security.Cryptography.RC2\n  isExternal: false\n  name: EffectiveKeySizeValue\n  nameWithType: RC2.EffectiveKeySizeValue\n  fullName: System.Security.Cryptography.RC2.EffectiveKeySizeValue\n- uid: System.Security.Cryptography.RC2.KeySize\n  parent: System.Security.Cryptography.RC2\n  isExternal: false\n  name: KeySize\n  nameWithType: RC2.KeySize\n  fullName: System.Security.Cryptography.RC2.KeySize\n- uid: System.Security.Cryptography.RC2.#ctor*\n  parent: System.Security.Cryptography.RC2\n  isExternal: false\n  name: RC2\n  nameWithType: RC2.RC2\n- uid: System.Security.Cryptography.RC2.Create*\n  parent: System.Security.Cryptography.RC2\n  isExternal: false\n  name: Create\n  nameWithType: RC2.Create\n- uid: System.Security.Cryptography.RC2.EffectiveKeySize*\n  parent: System.Security.Cryptography.RC2\n  isExternal: false\n  name: EffectiveKeySize\n  nameWithType: RC2.EffectiveKeySize\n- uid: System.Security.Cryptography.RC2.KeySize*\n  parent: System.Security.Cryptography.RC2\n  isExternal: false\n  name: KeySize\n  nameWithType: RC2.KeySize\n"}