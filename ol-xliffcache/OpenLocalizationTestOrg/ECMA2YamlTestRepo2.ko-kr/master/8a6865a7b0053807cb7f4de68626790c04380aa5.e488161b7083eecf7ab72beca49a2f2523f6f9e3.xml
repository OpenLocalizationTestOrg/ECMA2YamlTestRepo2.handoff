{"nodes":[{"pos":[1914,2019],"content":"Implements <xref:System.IserviceProvider> and provides access to services offered by the editing context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Implements &lt;xref:System.IserviceProvider&gt; and provides access to services offered by the editing context.","pos":[0,105],"source":"Implements <xref:System.IserviceProvider> and provides access to services offered by the editing context."}]},{"pos":[2031,2438],"content":"<xref:System.Activities.Presentation.EditingContext.Services%2A> represent functionality that is either provided by the host for the designer to use or that is used by the designer to make functionality available to all designers within the editor. It is obtained from the <xref:System.Activities.Presentation.EditingContext> by the <xref:System.Activities.Presentation.EditingContext.Services%2A> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"<xref:System.Activities.Presentation.EditingContext.Services%2A> represent functionality that is either provided by the host for the designer to use or that is used by the designer to make functionality available to all designers within the editor. It is obtained from the <xref:System.Activities.Presentation.EditingContext> by the <xref:System.Activities.Presentation.EditingContext.Services%2A> property.","pos":[0,407],"nodes":[{"content":"&lt;xref:System.Activities.Presentation.EditingContext.Services%2A&gt; represent functionality that is either provided by the host for the designer to use or that is used by the designer to make functionality available to all designers within the editor.","pos":[0,248],"source":"<xref:System.Activities.Presentation.EditingContext.Services%2A> represent functionality that is either provided by the host for the designer to use or that is used by the designer to make functionality available to all designers within the editor."},{"content":"It is obtained from the &lt;xref:System.Activities.Presentation.EditingContext&gt; by the &lt;xref:System.Activities.Presentation.EditingContext.Services%2A&gt; property.","pos":[249,407],"source":" It is obtained from the <xref:System.Activities.Presentation.EditingContext> by the <xref:System.Activities.Presentation.EditingContext.Services%2A> property."}]}]},{"pos":[3164,3271],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.ServiceManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Activities.Presentation.ServiceManager\"></xref> class."},{"pos":[3888,3992],"content":"Returns a Boolean value that indicates whether the service manager contains a service of the given type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a Boolean value that indicates whether the service manager contains a service of the given type.","pos":[0,104]}]},{"pos":[4147,4176],"content":"The type of service to check.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of service to check.","pos":[0,29]}]},{"pos":[4235,4436],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a service of type <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">serviceType</ph><ept id=\"p2\">&lt;/code&gt;</ept> has been published; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a service of type <code>serviceType</code> has been published; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[5081,5093],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5643,5753],"content":"Retrieves an enumerator that can be used to enumerate all of the services that this service manager publishes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves an enumerator that can be used to enumerate all of the services that this service manager publishes.","pos":[0,110]}]},{"pos":[5970,6087],"content":"Returns &lt;xref:System.Collections.Generic.IEnumerator%601&gt;, which contains an enumeration of published services.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.Generic.IEnumerator%601<ph id=\"ph2\">&amp;gt;</ph>, which contains an enumeration of published services.","pos":[0,117],"source":"Returns &lt;xref:System.Collections.Generic.IEnumerator%601&gt;, which contains an enumeration of published services."}]},{"pos":[6803,6815],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7398,7549],"content":"Retrieves the requested service.  This method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the service could not be located.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the requested service.","pos":[0,32]},{"content":"This method returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the service could not be located.","pos":[34,151],"source":"  This method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the service could not be located."}]},{"pos":[7708,7740],"content":"The type of service to retrieve.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of service to retrieve.","pos":[0,32]}]},{"pos":[7798,7967],"content":"Returns &lt;xref:System.Object&gt;, which is an instance of the service, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the service has not been published.","needQuote":true,"needEscape":true,"source":"Returns <xref:System.Object>, which is an instance of the service, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the service has not been published."},{"pos":[8154,8243],"content":"<ph id=\"ph1\">&lt;code&gt;serviceType&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>serviceType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[8821,8833],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9423,9605],"content":"A helper method that returns the target object for a delegate. If the delegate was created to proxy a generic delegate, this will correctly return the original object, not the proxy.","needQuote":true,"needEscape":true,"nodes":[{"content":"A helper method that returns the target object for a delegate. If the delegate was created to proxy a generic delegate, this will correctly return the original object, not the proxy.","pos":[0,182],"nodes":[{"content":"A helper method that returns the target object for a delegate.","pos":[0,62]},{"content":"If the delegate was created to proxy a generic delegate, this will correctly return the original object, not the proxy.","pos":[63,182]}]}]},{"pos":[9766,9801],"content":"The delegate to get the target for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The delegate to get the target for.","pos":[0,35]}]},{"pos":[9859,10039],"content":"Returns <xref:System.Object>, which is the callback target. This can return <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the callback represents a static object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns &lt;xref:System.Object&gt;, which is the callback target.","pos":[0,59],"source":"Returns <xref:System.Object>, which is the callback target."},{"content":"This can return <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the callback represents a static object.","pos":[60,180],"source":" This can return <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the callback represents a static object."}]},{"pos":[10225,10311],"content":"<ph id=\"ph1\">&lt;code&gt;callback&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>callback</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[10947,11201],"content":"Publishes the specified service type, but does not declare an instance. When the service is requested, the Publish service callback will be invoked to create the instance. The callback is invoked only once. After that, the instance it returned is cached.","needQuote":true,"needEscape":true,"nodes":[{"content":"Publishes the specified service type, but does not declare an instance. When the service is requested, the Publish service callback will be invoked to create the instance. The callback is invoked only once. After that, the instance it returned is cached.","pos":[0,254],"nodes":[{"content":"Publishes the specified service type, but does not declare an instance.","pos":[0,71]},{"content":"When the service is requested, the Publish service callback will be invoked to create the instance.","pos":[72,171]},{"content":"The callback is invoked only once.","pos":[172,206]},{"content":"After that, the instance it returned is cached.","pos":[207,254]}]}]},{"pos":[11419,11450],"content":"The type of service to publish.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of service to publish.","pos":[0,31]}]},{"pos":[11555,11629],"content":"A callback that will be invoked when an instance of the service is needed.","needQuote":true,"needEscape":true,"nodes":[{"content":"A callback that will be invoked when an instance of the service is needed.","pos":[0,74]}]},{"pos":[11813,11927],"content":"<ph id=\"ph1\">&lt;code&gt;serviceType&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;callback&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>serviceType</code> or <code>callback</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[12022,12074],"content":"<ph id=\"ph1\">&lt;code&gt;serviceType&lt;/code&gt;</ph> has already been published.","needQuote":true,"needEscape":true,"source":"<code>serviceType</code> has already been published."},{"pos":[12582,12727],"content":"Publishes the given service. After it is published, the service instance remains in the service manager until the editing context is disposed of.","needQuote":true,"needEscape":true,"nodes":[{"content":"Publishes the given service. After it is published, the service instance remains in the service manager until the editing context is disposed of.","pos":[0,145],"nodes":[{"content":"Publishes the given service.","pos":[0,28]},{"content":"After it is published, the service instance remains in the service manager until the editing context is disposed of.","pos":[29,145]}]}]},{"pos":[12905,12936],"content":"The type of service to publish.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of service to publish.","pos":[0,31]}]},{"pos":[13008,13035],"content":"An instance of the service.","needQuote":true,"needEscape":true,"nodes":[{"content":"An instance of the service.","pos":[0,27]}]},{"pos":[13219,13340],"content":"<ph id=\"ph1\">&lt;code&gt;serviceType&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;serviceInstance&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>serviceType</code> or <code>serviceInstance</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[13435,13579],"content":"<ph id=\"ph1\">&lt;code&gt;serviceInstance&lt;/code&gt;</ph> does not derive from or implement <ph id=\"ph2\">&lt;code&gt;serviceType&lt;/code&gt;</ph>, or <ph id=\"ph3\">&lt;code&gt;serviceType&lt;/code&gt;</ph> has already been published.","needQuote":true,"needEscape":true,"source":"<code>serviceInstance</code> does not derive from or implement <code>serviceType</code>, or <code>serviceType</code> has already been published."},{"pos":[14476,14488],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15223,15235],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15906,16210],"content":"A helper method that performs a <xref uid=\"langword_csharp_Delegate.Remove\" name=\"Delegate.Remove\" href=\"\"></xref> operation, and unwraps delegates that are proxies to generic callbacks. You should use this method in your <xref:System.Activities.Presentation.ServiceManager.UnSubscribe*> implementations.","needQuote":true,"needEscape":true,"nodes":[{"content":"A helper method that performs a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Delegate.Remove\" name=\"Delegate.Remove\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operation, and unwraps delegates that are proxies to generic callbacks.","pos":[0,186],"source":"A helper method that performs a <xref uid=\"langword_csharp_Delegate.Remove\" name=\"Delegate.Remove\" href=\"\"></xref> operation, and unwraps delegates that are proxies to generic callbacks."},{"content":"You should use this method in your &lt;xref:System.Activities.Presentation.ServiceManager.UnSubscribe*&gt; implementations.","pos":[187,304],"source":" You should use this method in your <xref:System.Activities.Presentation.ServiceManager.UnSubscribe*> implementations."}]},{"pos":[16397,16447],"content":"The existing delegate to remove the callback from.","needQuote":true,"needEscape":true,"nodes":[{"content":"The existing delegate to remove the callback from.","pos":[0,50]}]},{"pos":[16514,16537],"content":"The callback to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The callback to remove.","pos":[0,23]}]},{"pos":[16597,16686],"content":"Returns <xref:System.Delegate>, which is  a new value to assign to the existing delegate.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns &lt;xref:System.Delegate&gt;, which is  a new value to assign to the existing delegate.","pos":[0,89],"source":"Returns <xref:System.Delegate>, which is  a new value to assign to the existing delegate."}]},{"pos":[17433,17596],"content":"Invokes the provided callback when someone has published the requested service. If the service was already available, this method invokes the callback immediately.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invokes the provided callback when someone has published the requested service. If the service was already available, this method invokes the callback immediately.","pos":[0,163],"nodes":[{"content":"Invokes the provided callback when someone has published the requested service.","pos":[0,79]},{"content":"If the service was already available, this method invokes the callback immediately.","pos":[80,163]}]}]},{"pos":[17818,17854],"content":"The type of service to subscribe to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of service to subscribe to.","pos":[0,36]}]},{"pos":[17961,18024],"content":"A callback that will be notified when the service is available.","needQuote":true,"needEscape":true,"nodes":[{"content":"A callback that will be notified when the service is available.","pos":[0,63]}]},{"pos":[18210,18324],"content":"<ph id=\"ph1\">&lt;code&gt;serviceType&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;callback&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>serviceType</code> or <code>callback</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[19247,19259],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19979,20089],"content":"Retrieves an enumerator that can be used to enumerate all of the services that this service manager publishes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves an enumerator that can be used to enumerate all of the services that this service manager publishes.","pos":[0,110]}]},{"pos":[20267,20366],"content":"Returns <xref:System.Collections.IEnumerator>, which contains an enumeration of published services.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns &lt;xref:System.Collections.IEnumerator&gt;, which contains an enumeration of published services.","pos":[0,99],"source":"Returns <xref:System.Collections.IEnumerator>, which contains an enumeration of published services."}]},{"pos":[21153,21195],"content":"Removes a subscription for a service type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes a subscription for a service type.","pos":[0,42]}]},{"pos":[21419,21471],"content":"The type of service to remove the subscription from.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of service to remove the subscription from.","pos":[0,52]}]},{"pos":[21578,21630],"content":"The callback object to remove from the subscription.","needQuote":true,"needEscape":true,"nodes":[{"content":"The callback object to remove from the subscription.","pos":[0,52]}]},{"pos":[21818,21932],"content":"<ph id=\"ph1\">&lt;code&gt;serviceType&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;callback&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>serviceType</code> or <code>callback</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[22867,22879],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Presentation.ServiceManager\n  id: ServiceManager\n  children:\n  - System.Activities.Presentation.ServiceManager.#ctor\n  - System.Activities.Presentation.ServiceManager.Contains(System.Type)\n  - System.Activities.Presentation.ServiceManager.Contains``1\n  - System.Activities.Presentation.ServiceManager.GetEnumerator\n  - System.Activities.Presentation.ServiceManager.GetRequiredService``1\n  - System.Activities.Presentation.ServiceManager.GetService(System.Type)\n  - System.Activities.Presentation.ServiceManager.GetService``1\n  - System.Activities.Presentation.ServiceManager.GetTarget(System.Delegate)\n  - System.Activities.Presentation.ServiceManager.Publish(System.Type,System.Activities.Presentation.PublishServiceCallback)\n  - System.Activities.Presentation.ServiceManager.Publish(System.Type,System.Object)\n  - System.Activities.Presentation.ServiceManager.Publish``1(System.Activities.Presentation.PublishServiceCallback`1)\n  - System.Activities.Presentation.ServiceManager.Publish``1(``0)\n  - System.Activities.Presentation.ServiceManager.RemoveCallback(System.Delegate,System.Delegate)\n  - System.Activities.Presentation.ServiceManager.Subscribe(System.Type,System.Activities.Presentation.SubscribeServiceCallback)\n  - System.Activities.Presentation.ServiceManager.Subscribe``1(System.Activities.Presentation.SubscribeServiceCallback`1)\n  - System.Activities.Presentation.ServiceManager.System#Collections#IEnumerable#GetEnumerator\n  - System.Activities.Presentation.ServiceManager.Unsubscribe(System.Type,System.Activities.Presentation.SubscribeServiceCallback)\n  - System.Activities.Presentation.ServiceManager.Unsubscribe``1(System.Activities.Presentation.SubscribeServiceCallback`1)\n  langs:\n  - csharp\n  name: ServiceManager\n  nameWithType: ServiceManager\n  fullName: System.Activities.Presentation.ServiceManager\n  type: Class\n  summary: Implements <xref:System.IserviceProvider> and provides access to services offered by the editing context.\n  remarks: <xref:System.Activities.Presentation.EditingContext.Services%2A> represent functionality that is either provided by the host for the designer to use or that is used by the designer to make functionality available to all designers within the editor. It is obtained from the <xref:System.Activities.Presentation.EditingContext> by the <xref:System.Activities.Presentation.EditingContext.Services%2A> property.\n  syntax:\n    content: 'public abstract class ServiceManager : IServiceProvider, System.Collections.Generic.IEnumerable<Type>'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.IEnumerable<System.Type>\n  - System.IServiceProvider\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.ServiceManager.#ctor\n  id: '#ctor'\n  parent: System.Activities.Presentation.ServiceManager\n  langs:\n  - csharp\n  name: ServiceManager()\n  nameWithType: ServiceManager.ServiceManager()\n  fullName: System.Activities.Presentation.ServiceManager.ServiceManager()\n  type: Constructor\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation\n  summary: Initializes a new instance of the <xref href=\"System.Activities.Presentation.ServiceManager\"></xref> class.\n  syntax:\n    content: protected ServiceManager ();\n    parameters: []\n  overload: System.Activities.Presentation.ServiceManager.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.ServiceManager.Contains(System.Type)\n  id: Contains(System.Type)\n  parent: System.Activities.Presentation.ServiceManager\n  langs:\n  - csharp\n  name: Contains(Type)\n  nameWithType: ServiceManager.Contains(Type)\n  fullName: System.Activities.Presentation.ServiceManager.Contains(Type)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation\n  summary: Returns a Boolean value that indicates whether the service manager contains a service of the given type.\n  syntax:\n    content: public abstract bool Contains (Type serviceType);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The type of service to check.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a service of type <code>serviceType</code> has been published; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Presentation.ServiceManager.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.ServiceManager.Contains``1\n  id: Contains``1\n  parent: System.Activities.Presentation.ServiceManager\n  langs:\n  - csharp\n  name: Contains()\n  nameWithType: ServiceManager.Contains()\n  fullName: System.Activities.Presentation.ServiceManager.Contains()\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation\n  syntax:\n    content: public bool Contains<TServiceType> ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Activities.Presentation.ServiceManager.Contains<TServiceType>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.ServiceManager.GetEnumerator\n  id: GetEnumerator\n  parent: System.Activities.Presentation.ServiceManager\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: ServiceManager.GetEnumerator()\n  fullName: System.Activities.Presentation.ServiceManager.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation\n  summary: Retrieves an enumerator that can be used to enumerate all of the services that this service manager publishes.\n  syntax:\n    content: public abstract System.Collections.Generic.IEnumerator<Type> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Type}\n      description: Returns &lt;xref:System.Collections.Generic.IEnumerator%601&gt;, which contains an enumeration of published services.\n  overload: System.Activities.Presentation.ServiceManager.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.ServiceManager.GetRequiredService``1\n  id: GetRequiredService``1\n  parent: System.Activities.Presentation.ServiceManager\n  langs:\n  - csharp\n  name: GetRequiredService()\n  nameWithType: ServiceManager.GetRequiredService()\n  fullName: System.Activities.Presentation.ServiceManager.GetRequiredService()\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation\n  syntax:\n    content: public TServiceType GetRequiredService<TServiceType> ();\n    parameters: []\n    return:\n      type: TServiceType\n      description: To be added.\n  overload: System.Activities.Presentation.ServiceManager.GetRequiredService<TServiceType>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.ServiceManager.GetService(System.Type)\n  id: GetService(System.Type)\n  parent: System.Activities.Presentation.ServiceManager\n  langs:\n  - csharp\n  name: GetService(Type)\n  nameWithType: ServiceManager.GetService(Type)\n  fullName: System.Activities.Presentation.ServiceManager.GetService(Type)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation\n  summary: Retrieves the requested service.  This method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the service could not be located.\n  syntax:\n    content: public abstract object GetService (Type serviceType);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The type of service to retrieve.\n    return:\n      type: System.Object\n      description: Returns <xref:System.Object>, which is an instance of the service, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the service has not been published.\n  overload: System.Activities.Presentation.ServiceManager.GetService*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>serviceType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Activities.Presentation.ServiceManager.GetService``1\n  id: GetService``1\n  parent: System.Activities.Presentation.ServiceManager\n  langs:\n  - csharp\n  name: GetService()\n  nameWithType: ServiceManager.GetService()\n  fullName: System.Activities.Presentation.ServiceManager.GetService()\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation\n  syntax:\n    content: public TServiceType GetService<TServiceType> ();\n    parameters: []\n    return:\n      type: TServiceType\n      description: To be added.\n  overload: System.Activities.Presentation.ServiceManager.GetService<TServiceType>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.ServiceManager.GetTarget(System.Delegate)\n  id: GetTarget(System.Delegate)\n  parent: System.Activities.Presentation.ServiceManager\n  langs:\n  - csharp\n  name: GetTarget(Delegate)\n  nameWithType: ServiceManager.GetTarget(Delegate)\n  fullName: System.Activities.Presentation.ServiceManager.GetTarget(Delegate)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation\n  summary: A helper method that returns the target object for a delegate. If the delegate was created to proxy a generic delegate, this will correctly return the original object, not the proxy.\n  syntax:\n    content: protected static object GetTarget (Delegate callback);\n    parameters:\n    - id: callback\n      type: System.Delegate\n      description: The delegate to get the target for.\n    return:\n      type: System.Object\n      description: Returns <xref:System.Object>, which is the callback target. This can return <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the callback represents a static object.\n  overload: System.Activities.Presentation.ServiceManager.GetTarget*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>callback</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Activities.Presentation.ServiceManager.Publish(System.Type,System.Activities.Presentation.PublishServiceCallback)\n  id: Publish(System.Type,System.Activities.Presentation.PublishServiceCallback)\n  parent: System.Activities.Presentation.ServiceManager\n  langs:\n  - csharp\n  name: Publish(Type,PublishServiceCallback)\n  nameWithType: ServiceManager.Publish(Type,PublishServiceCallback)\n  fullName: System.Activities.Presentation.ServiceManager.Publish(Type,PublishServiceCallback)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation\n  summary: Publishes the specified service type, but does not declare an instance. When the service is requested, the Publish service callback will be invoked to create the instance. The callback is invoked only once. After that, the instance it returned is cached.\n  syntax:\n    content: public abstract void Publish (Type serviceType, System.Activities.Presentation.PublishServiceCallback callback);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The type of service to publish.\n    - id: callback\n      type: System.Activities.Presentation.PublishServiceCallback\n      description: A callback that will be invoked when an instance of the service is needed.\n  overload: System.Activities.Presentation.ServiceManager.Publish*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>serviceType</code> or <code>callback</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>serviceType</code> has already been published.\n  platform:\n  - net462\n- uid: System.Activities.Presentation.ServiceManager.Publish(System.Type,System.Object)\n  id: Publish(System.Type,System.Object)\n  parent: System.Activities.Presentation.ServiceManager\n  langs:\n  - csharp\n  name: Publish(Type,Object)\n  nameWithType: ServiceManager.Publish(Type,Object)\n  fullName: System.Activities.Presentation.ServiceManager.Publish(Type,Object)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation\n  summary: Publishes the given service. After it is published, the service instance remains in the service manager until the editing context is disposed of.\n  syntax:\n    content: public abstract void Publish (Type serviceType, object serviceInstance);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The type of service to publish.\n    - id: serviceInstance\n      type: System.Object\n      description: An instance of the service.\n  overload: System.Activities.Presentation.ServiceManager.Publish*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>serviceType</code> or <code>serviceInstance</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>serviceInstance</code> does not derive from or implement <code>serviceType</code>, or <code>serviceType</code> has already been published.\n  platform:\n  - net462\n- uid: System.Activities.Presentation.ServiceManager.Publish``1(System.Activities.Presentation.PublishServiceCallback`1)\n  id: Publish``1(System.Activities.Presentation.PublishServiceCallback`1)\n  parent: System.Activities.Presentation.ServiceManager\n  langs:\n  - csharp\n  name: Publish(PublishServiceCallback<TServiceType>)\n  nameWithType: ServiceManager.Publish(PublishServiceCallback<TServiceType>)\n  fullName: System.Activities.Presentation.ServiceManager.Publish(PublishServiceCallback<TServiceType>)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation\n  syntax:\n    content: public void Publish<TServiceType> (System.Activities.Presentation.PublishServiceCallback<TServiceType> callback);\n    parameters:\n    - id: callback\n      type: System.Activities.Presentation.PublishServiceCallback`1\n      description: To be added.\n  overload: System.Activities.Presentation.ServiceManager.Publish<TServiceType>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.ServiceManager.Publish``1(``0)\n  id: Publish``1(``0)\n  parent: System.Activities.Presentation.ServiceManager\n  langs:\n  - csharp\n  name: Publish(TServiceType)\n  nameWithType: ServiceManager.Publish(TServiceType)\n  fullName: System.Activities.Presentation.ServiceManager.Publish(TServiceType)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation\n  syntax:\n    content: public void Publish<TServiceType> (TServiceType serviceInstance);\n    parameters:\n    - id: serviceInstance\n      type: TServiceType\n      description: To be added.\n  overload: System.Activities.Presentation.ServiceManager.Publish<TServiceType>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.ServiceManager.RemoveCallback(System.Delegate,System.Delegate)\n  id: RemoveCallback(System.Delegate,System.Delegate)\n  parent: System.Activities.Presentation.ServiceManager\n  langs:\n  - csharp\n  name: RemoveCallback(Delegate,Delegate)\n  nameWithType: ServiceManager.RemoveCallback(Delegate,Delegate)\n  fullName: System.Activities.Presentation.ServiceManager.RemoveCallback(Delegate,Delegate)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation\n  summary: A helper method that performs a <xref uid=\"langword_csharp_Delegate.Remove\" name=\"Delegate.Remove\" href=\"\"></xref> operation, and unwraps delegates that are proxies to generic callbacks. You should use this method in your <xref:System.Activities.Presentation.ServiceManager.UnSubscribe*> implementations.\n  syntax:\n    content: protected static Delegate RemoveCallback (Delegate existing, Delegate toRemove);\n    parameters:\n    - id: existing\n      type: System.Delegate\n      description: The existing delegate to remove the callback from.\n    - id: toRemove\n      type: System.Delegate\n      description: The callback to remove.\n    return:\n      type: System.Delegate\n      description: Returns <xref:System.Delegate>, which is  a new value to assign to the existing delegate.\n  overload: System.Activities.Presentation.ServiceManager.RemoveCallback*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.ServiceManager.Subscribe(System.Type,System.Activities.Presentation.SubscribeServiceCallback)\n  id: Subscribe(System.Type,System.Activities.Presentation.SubscribeServiceCallback)\n  parent: System.Activities.Presentation.ServiceManager\n  langs:\n  - csharp\n  name: Subscribe(Type,SubscribeServiceCallback)\n  nameWithType: ServiceManager.Subscribe(Type,SubscribeServiceCallback)\n  fullName: System.Activities.Presentation.ServiceManager.Subscribe(Type,SubscribeServiceCallback)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation\n  summary: Invokes the provided callback when someone has published the requested service. If the service was already available, this method invokes the callback immediately.\n  syntax:\n    content: public abstract void Subscribe (Type serviceType, System.Activities.Presentation.SubscribeServiceCallback callback);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The type of service to subscribe to.\n    - id: callback\n      type: System.Activities.Presentation.SubscribeServiceCallback\n      description: A callback that will be notified when the service is available.\n  overload: System.Activities.Presentation.ServiceManager.Subscribe*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>serviceType</code> or <code>callback</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Activities.Presentation.ServiceManager.Subscribe``1(System.Activities.Presentation.SubscribeServiceCallback`1)\n  id: Subscribe``1(System.Activities.Presentation.SubscribeServiceCallback`1)\n  parent: System.Activities.Presentation.ServiceManager\n  langs:\n  - csharp\n  name: Subscribe(SubscribeServiceCallback<TServiceType>)\n  nameWithType: ServiceManager.Subscribe(SubscribeServiceCallback<TServiceType>)\n  fullName: System.Activities.Presentation.ServiceManager.Subscribe(SubscribeServiceCallback<TServiceType>)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation\n  syntax:\n    content: public void Subscribe<TServiceType> (System.Activities.Presentation.SubscribeServiceCallback<TServiceType> callback);\n    parameters:\n    - id: callback\n      type: System.Activities.Presentation.SubscribeServiceCallback`1\n      description: To be added.\n  overload: System.Activities.Presentation.ServiceManager.Subscribe<TServiceType>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.ServiceManager.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Activities.Presentation.ServiceManager\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: ServiceManager.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Activities.Presentation.ServiceManager.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation\n  summary: Retrieves an enumerator that can be used to enumerate all of the services that this service manager publishes.\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Returns <xref:System.Collections.IEnumerator>, which contains an enumeration of published services.\n  overload: System.Activities.Presentation.ServiceManager.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.ServiceManager.Unsubscribe(System.Type,System.Activities.Presentation.SubscribeServiceCallback)\n  id: Unsubscribe(System.Type,System.Activities.Presentation.SubscribeServiceCallback)\n  parent: System.Activities.Presentation.ServiceManager\n  langs:\n  - csharp\n  name: Unsubscribe(Type,SubscribeServiceCallback)\n  nameWithType: ServiceManager.Unsubscribe(Type,SubscribeServiceCallback)\n  fullName: System.Activities.Presentation.ServiceManager.Unsubscribe(Type,SubscribeServiceCallback)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation\n  summary: Removes a subscription for a service type.\n  syntax:\n    content: public abstract void Unsubscribe (Type serviceType, System.Activities.Presentation.SubscribeServiceCallback callback);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The type of service to remove the subscription from.\n    - id: callback\n      type: System.Activities.Presentation.SubscribeServiceCallback\n      description: The callback object to remove from the subscription.\n  overload: System.Activities.Presentation.ServiceManager.Unsubscribe*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>serviceType</code> or <code>callback</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Activities.Presentation.ServiceManager.Unsubscribe``1(System.Activities.Presentation.SubscribeServiceCallback`1)\n  id: Unsubscribe``1(System.Activities.Presentation.SubscribeServiceCallback`1)\n  parent: System.Activities.Presentation.ServiceManager\n  langs:\n  - csharp\n  name: Unsubscribe(SubscribeServiceCallback<TServiceType>)\n  nameWithType: ServiceManager.Unsubscribe(SubscribeServiceCallback<TServiceType>)\n  fullName: System.Activities.Presentation.ServiceManager.Unsubscribe(SubscribeServiceCallback<TServiceType>)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation\n  syntax:\n    content: public void Unsubscribe<TServiceType> (System.Activities.Presentation.SubscribeServiceCallback<TServiceType> callback);\n    parameters:\n    - id: callback\n      type: System.Activities.Presentation.SubscribeServiceCallback`1\n      description: To be added.\n  overload: System.Activities.Presentation.ServiceManager.Unsubscribe<TServiceType>*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Activities.Presentation.ServiceManager.#ctor\n  parent: System.Activities.Presentation.ServiceManager\n  isExternal: false\n  name: ServiceManager()\n  nameWithType: ServiceManager.ServiceManager()\n  fullName: System.Activities.Presentation.ServiceManager.ServiceManager()\n- uid: System.Activities.Presentation.ServiceManager.Contains(System.Type)\n  parent: System.Activities.Presentation.ServiceManager\n  isExternal: false\n  name: Contains(Type)\n  nameWithType: ServiceManager.Contains(Type)\n  fullName: System.Activities.Presentation.ServiceManager.Contains(Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Activities.Presentation.ServiceManager.Contains``1\n  parent: System.Activities.Presentation.ServiceManager\n  isExternal: false\n  name: Contains()\n  nameWithType: ServiceManager.Contains()\n  fullName: System.Activities.Presentation.ServiceManager.Contains()\n- uid: System.Activities.Presentation.ServiceManager.GetEnumerator\n  parent: System.Activities.Presentation.ServiceManager\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: ServiceManager.GetEnumerator()\n  fullName: System.Activities.Presentation.ServiceManager.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator{System.Type}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerator<Type>\n  nameWithType: IEnumerator<Type>\n  fullName: System.Collections.Generic.IEnumerator<System.Type>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    nameWithType: IEnumerator\n    fullName: IEnumerator<System.Type>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: Type\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Presentation.ServiceManager.GetRequiredService``1\n  parent: System.Activities.Presentation.ServiceManager\n  isExternal: false\n  name: GetRequiredService()\n  nameWithType: ServiceManager.GetRequiredService()\n  fullName: System.Activities.Presentation.ServiceManager.GetRequiredService()\n- uid: TServiceType\n  isExternal: true\n  name: TServiceType\n  nameWithType: TServiceType\n  fullName: TServiceType\n- uid: System.Activities.Presentation.ServiceManager.GetService(System.Type)\n  parent: System.Activities.Presentation.ServiceManager\n  isExternal: false\n  name: GetService(Type)\n  nameWithType: ServiceManager.GetService(Type)\n  fullName: System.Activities.Presentation.ServiceManager.GetService(Type)\n- uid: System.Activities.Presentation.ServiceManager.GetService``1\n  parent: System.Activities.Presentation.ServiceManager\n  isExternal: false\n  name: GetService()\n  nameWithType: ServiceManager.GetService()\n  fullName: System.Activities.Presentation.ServiceManager.GetService()\n- uid: System.Activities.Presentation.ServiceManager.GetTarget(System.Delegate)\n  parent: System.Activities.Presentation.ServiceManager\n  isExternal: false\n  name: GetTarget(Delegate)\n  nameWithType: ServiceManager.GetTarget(Delegate)\n  fullName: System.Activities.Presentation.ServiceManager.GetTarget(Delegate)\n- uid: System.Delegate\n  parent: System\n  isExternal: true\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Activities.Presentation.ServiceManager.Publish(System.Type,System.Activities.Presentation.PublishServiceCallback)\n  parent: System.Activities.Presentation.ServiceManager\n  isExternal: false\n  name: Publish(Type,PublishServiceCallback)\n  nameWithType: ServiceManager.Publish(Type,PublishServiceCallback)\n  fullName: System.Activities.Presentation.ServiceManager.Publish(Type,PublishServiceCallback)\n- uid: System.Activities.Presentation.PublishServiceCallback\n  parent: System.Activities.Presentation\n  isExternal: false\n  name: PublishServiceCallback\n  nameWithType: PublishServiceCallback\n  fullName: System.Activities.Presentation.PublishServiceCallback\n- uid: System.Activities.Presentation.ServiceManager.Publish(System.Type,System.Object)\n  parent: System.Activities.Presentation.ServiceManager\n  isExternal: false\n  name: Publish(Type,Object)\n  nameWithType: ServiceManager.Publish(Type,Object)\n  fullName: System.Activities.Presentation.ServiceManager.Publish(Type,Object)\n- uid: System.Activities.Presentation.ServiceManager.Publish``1(System.Activities.Presentation.PublishServiceCallback`1)\n  parent: System.Activities.Presentation.ServiceManager\n  isExternal: false\n  name: Publish(PublishServiceCallback<TServiceType>)\n  nameWithType: ServiceManager.Publish(PublishServiceCallback<TServiceType>)\n  fullName: System.Activities.Presentation.ServiceManager.Publish(PublishServiceCallback<TServiceType>)\n- uid: System.Activities.Presentation.PublishServiceCallback`1\n  parent: System.Activities.Presentation\n  isExternal: false\n  name: PublishServiceCallback<TServiceType>\n  nameWithType: PublishServiceCallback<TServiceType>\n  fullName: System.Activities.Presentation.PublishServiceCallback<TServiceType>\n- uid: System.Activities.Presentation.ServiceManager.Publish``1(``0)\n  parent: System.Activities.Presentation.ServiceManager\n  isExternal: false\n  name: Publish(TServiceType)\n  nameWithType: ServiceManager.Publish(TServiceType)\n  fullName: System.Activities.Presentation.ServiceManager.Publish(TServiceType)\n- uid: System.Activities.Presentation.ServiceManager.RemoveCallback(System.Delegate,System.Delegate)\n  parent: System.Activities.Presentation.ServiceManager\n  isExternal: false\n  name: RemoveCallback(Delegate,Delegate)\n  nameWithType: ServiceManager.RemoveCallback(Delegate,Delegate)\n  fullName: System.Activities.Presentation.ServiceManager.RemoveCallback(Delegate,Delegate)\n- uid: System.Activities.Presentation.ServiceManager.Subscribe(System.Type,System.Activities.Presentation.SubscribeServiceCallback)\n  parent: System.Activities.Presentation.ServiceManager\n  isExternal: false\n  name: Subscribe(Type,SubscribeServiceCallback)\n  nameWithType: ServiceManager.Subscribe(Type,SubscribeServiceCallback)\n  fullName: System.Activities.Presentation.ServiceManager.Subscribe(Type,SubscribeServiceCallback)\n- uid: System.Activities.Presentation.SubscribeServiceCallback\n  parent: System.Activities.Presentation\n  isExternal: false\n  name: SubscribeServiceCallback\n  nameWithType: SubscribeServiceCallback\n  fullName: System.Activities.Presentation.SubscribeServiceCallback\n- uid: System.Activities.Presentation.ServiceManager.Subscribe``1(System.Activities.Presentation.SubscribeServiceCallback`1)\n  parent: System.Activities.Presentation.ServiceManager\n  isExternal: false\n  name: Subscribe(SubscribeServiceCallback<TServiceType>)\n  nameWithType: ServiceManager.Subscribe(SubscribeServiceCallback<TServiceType>)\n  fullName: System.Activities.Presentation.ServiceManager.Subscribe(SubscribeServiceCallback<TServiceType>)\n- uid: System.Activities.Presentation.SubscribeServiceCallback`1\n  parent: System.Activities.Presentation\n  isExternal: false\n  name: SubscribeServiceCallback<TServiceType>\n  nameWithType: SubscribeServiceCallback<TServiceType>\n  fullName: System.Activities.Presentation.SubscribeServiceCallback<TServiceType>\n- uid: System.Activities.Presentation.ServiceManager.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Activities.Presentation.ServiceManager\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: ServiceManager.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Activities.Presentation.ServiceManager.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Activities.Presentation.ServiceManager.Unsubscribe(System.Type,System.Activities.Presentation.SubscribeServiceCallback)\n  parent: System.Activities.Presentation.ServiceManager\n  isExternal: false\n  name: Unsubscribe(Type,SubscribeServiceCallback)\n  nameWithType: ServiceManager.Unsubscribe(Type,SubscribeServiceCallback)\n  fullName: System.Activities.Presentation.ServiceManager.Unsubscribe(Type,SubscribeServiceCallback)\n- uid: System.Activities.Presentation.ServiceManager.Unsubscribe``1(System.Activities.Presentation.SubscribeServiceCallback`1)\n  parent: System.Activities.Presentation.ServiceManager\n  isExternal: false\n  name: Unsubscribe(SubscribeServiceCallback<TServiceType>)\n  nameWithType: ServiceManager.Unsubscribe(SubscribeServiceCallback<TServiceType>)\n  fullName: System.Activities.Presentation.ServiceManager.Unsubscribe(SubscribeServiceCallback<TServiceType>)\n- uid: System.Activities.Presentation.ServiceManager.#ctor*\n  parent: System.Activities.Presentation.ServiceManager\n  isExternal: false\n  name: ServiceManager\n  nameWithType: ServiceManager.ServiceManager\n- uid: System.Activities.Presentation.ServiceManager.Contains*\n  parent: System.Activities.Presentation.ServiceManager\n  isExternal: false\n  name: Contains\n  nameWithType: ServiceManager.Contains\n- uid: System.Activities.Presentation.ServiceManager.Contains<TServiceType>*\n  parent: System.Activities.Presentation.ServiceManager\n  isExternal: false\n  name: Contains<TServiceType>\n  nameWithType: ServiceManager.Contains<TServiceType>\n- uid: System.Activities.Presentation.ServiceManager.GetEnumerator*\n  parent: System.Activities.Presentation.ServiceManager\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: ServiceManager.GetEnumerator\n- uid: System.Activities.Presentation.ServiceManager.GetRequiredService<TServiceType>*\n  parent: System.Activities.Presentation.ServiceManager\n  isExternal: false\n  name: GetRequiredService<TServiceType>\n  nameWithType: ServiceManager.GetRequiredService<TServiceType>\n- uid: System.Activities.Presentation.ServiceManager.GetService*\n  parent: System.Activities.Presentation.ServiceManager\n  isExternal: false\n  name: GetService\n  nameWithType: ServiceManager.GetService\n- uid: System.Activities.Presentation.ServiceManager.GetService<TServiceType>*\n  parent: System.Activities.Presentation.ServiceManager\n  isExternal: false\n  name: GetService<TServiceType>\n  nameWithType: ServiceManager.GetService<TServiceType>\n- uid: System.Activities.Presentation.ServiceManager.GetTarget*\n  parent: System.Activities.Presentation.ServiceManager\n  isExternal: false\n  name: GetTarget\n  nameWithType: ServiceManager.GetTarget\n- uid: System.Activities.Presentation.ServiceManager.Publish*\n  parent: System.Activities.Presentation.ServiceManager\n  isExternal: false\n  name: Publish\n  nameWithType: ServiceManager.Publish\n- uid: System.Activities.Presentation.ServiceManager.Publish<TServiceType>*\n  parent: System.Activities.Presentation.ServiceManager\n  isExternal: false\n  name: Publish<TServiceType>\n  nameWithType: ServiceManager.Publish<TServiceType>\n- uid: System.Activities.Presentation.ServiceManager.RemoveCallback*\n  parent: System.Activities.Presentation.ServiceManager\n  isExternal: false\n  name: RemoveCallback\n  nameWithType: ServiceManager.RemoveCallback\n- uid: System.Activities.Presentation.ServiceManager.Subscribe*\n  parent: System.Activities.Presentation.ServiceManager\n  isExternal: false\n  name: Subscribe\n  nameWithType: ServiceManager.Subscribe\n- uid: System.Activities.Presentation.ServiceManager.Subscribe<TServiceType>*\n  parent: System.Activities.Presentation.ServiceManager\n  isExternal: false\n  name: Subscribe<TServiceType>\n  nameWithType: ServiceManager.Subscribe<TServiceType>\n- uid: System.Activities.Presentation.ServiceManager.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.Activities.Presentation.ServiceManager\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: ServiceManager.System.Collections.IEnumerable.GetEnumerator\n- uid: System.Activities.Presentation.ServiceManager.Unsubscribe*\n  parent: System.Activities.Presentation.ServiceManager\n  isExternal: false\n  name: Unsubscribe\n  nameWithType: ServiceManager.Unsubscribe\n- uid: System.Activities.Presentation.ServiceManager.Unsubscribe<TServiceType>*\n  parent: System.Activities.Presentation.ServiceManager\n  isExternal: false\n  name: Unsubscribe<TServiceType>\n  nameWithType: ServiceManager.Unsubscribe<TServiceType>\n"}