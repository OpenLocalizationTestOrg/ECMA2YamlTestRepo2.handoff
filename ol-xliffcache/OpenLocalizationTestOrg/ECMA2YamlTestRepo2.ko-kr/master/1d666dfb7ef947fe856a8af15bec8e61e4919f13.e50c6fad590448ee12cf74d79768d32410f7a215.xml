{"nodes":[{"pos":[4907,5038],"content":"Represents a floating-point number within the range of -1.79E +308 through 1.79E +308 to be stored in or retrieved from a database.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a floating-point number within the range of -1.79E +308 through 1.79E +308 to be stored in or retrieved from a database.","pos":[0,131]}]},{"pos":[5802,6067],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure using the supplied double parameter to set the new <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure's &lt;xref:System.Data.SqlTypes.SqlDouble.Value*&gt; property.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure using the supplied double parameter to set the new <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure's <xref:System.Data.SqlTypes.SqlDouble.Value*> property."},{"pos":[6201,6299],"content":"A double whose value will be used for the new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A double whose value will be used for the new <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref>."},{"pos":[6871,6982],"content":"The addition operator computes the sum of the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operands.","needQuote":true,"needEscape":true,"source":"The addition operator computes the sum of the two <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> operands."},{"pos":[7215,7279],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[7354,7418],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[7493,7573],"content":"The sum of the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operands.","needQuote":true,"needEscape":true,"source":"The sum of the two <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> operands."},{"pos":[8081,8275],"content":"Compares this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance to the supplied <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and returns an indication of their relative values.","needQuote":true,"needEscape":true,"source":"Compares this <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> instance to the supplied <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> and returns an indication of their relative values."},{"pos":[8454,8525],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to be compared.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> to be compared."},{"pos":[8583,9224],"content":"A signed number that indicates the relative values of the instance and the object.       <table><thead><tr><th> Return value       </th><th> Condition       </th></tr></thead><tbody><tr><td> Less than zero       </td><td> This instance is less than the object.       </td></tr><tr><td> Zero       </td><td> This instance is the same as the object.       </td></tr><tr><td> Greater than zero       </td><td> This instance is greater than the object       -or-       The object is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)       </td></tr></tbody></table>","needQuote":false,"needEscape":true,"nodes":[{"content":"A signed number that indicates the relative values of the instance and the object.       ","pos":[0,89],"nodes":[{"content":"A signed number that indicates the relative values of the instance and the object.","pos":[0,82]}]},{"content":"Return value","pos":[112,124]},{"content":"Condition","pos":[141,150]},{"content":"Less than zero","pos":[191,205]},{"content":" This instance is less than the object.       ","pos":[221,267],"nodes":[{"content":"This instance is less than the object.","pos":[1,39]}]},{"content":"Zero","pos":[286,290]},{"content":" This instance is the same as the object.       ","pos":[306,354],"nodes":[{"content":"This instance is the same as the object.","pos":[1,41]}]},{"content":"Greater than zero","pos":[373,390]},{"content":"This instance is greater than the object       -or-       The object is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic)","pos":[407,580],"source":" This instance is greater than the object       -or-       The object is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)       "}]},{"pos":[9696,9859],"content":"Compares this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance to the supplied &lt;xref:System.Object&gt; and returns an indication of their relative values.","needQuote":true,"needEscape":true,"source":"Compares this <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> instance to the supplied <xref:System.Object> and returns an indication of their relative values."},{"pos":[9997,10033],"content":"The <xref:System.Object> to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to compare.","pos":[0,36],"source":"The <xref:System.Object> to compare."}]},{"pos":[10091,10734],"content":"A signed number that indicates the relative values of the instance and the object.       <table><thead><tr><th> Return value       </th><th> Condition       </th></tr></thead><tbody><tr><td> Less than zero       </td><td> This instance is less than the object.       </td></tr><tr><td> Zero       </td><td> This instance is the same as the object.       </td></tr><tr><td> Greater than zero       </td><td> This instance is greater than the object       -or-       The object is a null reference (<xref uid=\"langword_csharp_Nothing \" name=\"Nothing \" href=\"\"></xref>in Visual Basic).       </td></tr></tbody></table>","needQuote":false,"needEscape":true,"nodes":[{"content":"A signed number that indicates the relative values of the instance and the object.       ","pos":[0,89],"nodes":[{"content":"A signed number that indicates the relative values of the instance and the object.","pos":[0,82]}]},{"content":"Return value","pos":[112,124]},{"content":"Condition","pos":[141,150]},{"content":"Less than zero","pos":[191,205]},{"content":" This instance is less than the object.       ","pos":[221,267],"nodes":[{"content":"This instance is less than the object.","pos":[1,39]}]},{"content":"Zero","pos":[286,290]},{"content":" This instance is the same as the object.       ","pos":[306,354],"nodes":[{"content":"This instance is the same as the object.","pos":[1,41]}]},{"content":"Greater than zero","pos":[373,390]},{"content":" This instance is greater than the object       -or-       The object is a null reference (<xref uid=\"langword_csharp_Nothing \" name=\"Nothing \" href=\"\"></xref>in Visual Basic).       ","pos":[406,589],"nodes":[{"content":"This instance is greater than the object       -or-       The object is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing \" name=\"Nothing \" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>in Visual Basic).","pos":[1,176],"source":" This instance is greater than the object       -or-       The object is a null reference (<xref uid=\"langword_csharp_Nothing \" name=\"Nothing \" href=\"\"></xref>in Visual Basic)."}]}]},{"pos":[11326,11440],"content":"The division operator divides the first <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operand by the second.","needQuote":true,"needEscape":true,"source":"The division operator divides the first <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> operand by the second."},{"pos":[11676,11740],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[11815,11879],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[11954,12070],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that contains the results of the division operation.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure that contains the results of the division operation."},{"pos":[12523,12691],"content":"Compares the supplied object parameter to the &lt;xref:System.Data.SqlTypes.SqlDateTime.Value*&gt; property of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Compares the supplied object parameter to the <xref:System.Data.SqlTypes.SqlDateTime.Value*> property of the <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> object."},{"pos":[12836,12862],"content":"The object to be compared.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to be compared.","pos":[0,26]}]},{"pos":[12921,13085],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two values are equal. Otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two values are equal.","pos":[0,89],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two values are equal."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[90,164],"source":" Otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[13673,13811],"content":"Performs a logical comparison on two instances of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to determine whether they are equal.","needQuote":true,"needEscape":true,"source":"Performs a logical comparison on two instances of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> to determine whether they are equal."},{"pos":[14048,14112],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[14187,14251],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[14327,14491],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two values are equal. Otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two values are equal.","pos":[0,89],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two values are equal."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[90,164],"source":" Otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[14921,15013],"content":"Returns the hash code for this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structre.","needQuote":true,"needEscape":true,"source":"Returns the hash code for this <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structre."},{"pos":[15148,15182],"content":"A 32-bit signed integer hash code.","needQuote":true,"needEscape":true,"nodes":[{"content":"A 32-bit signed integer hash code.","pos":[0,34]}]},{"pos":[15712,15830],"content":"Returns the XML Schema definition language (XSD) of the specified <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the XML Schema definition language (XSD) of the specified <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[16049,16104],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[16176,16341],"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that indicates the XSD of the specified <bpt id=\"p2\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref> value that indicates the XSD of the specified <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[16958,17094],"content":"Compares two instances of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to determine whether the first is greater than the second.","needQuote":true,"needEscape":true,"source":"Compares two instances of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> to determine whether the first is greater than the second."},{"pos":[17336,17400],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[17475,17539],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[17615,18114],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is greater than the second instance.","pos":[0,174],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than the second instance."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[175,239],"source":" Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[240,499],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[18767,18915],"content":"Compares two instances of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to determine whether the first is greater than or equal to the second.","needQuote":true,"needEscape":true,"source":"Compares two instances of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> to determine whether the first is greater than or equal to the second."},{"pos":[19164,19228],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[19303,19367],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[19443,19954],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than or equal to the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is greater than or equal to the second instance.","pos":[0,186],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than or equal to the second instance."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[187,251],"source":" Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[252,511],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[20367,20488],"content":"Returns a Boolean value that indicates whether this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance is null.","needQuote":true,"needEscape":true,"source":"Returns a Boolean value that indicates whether this <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> instance is null."},{"pos":[20500,20588],"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling Null Values<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"For more information, see [Handling Null Values](~/add/includes/ajax-current-ext-md.md)."},{"pos":[20698,20890],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <xref:System.Data.SqlTypes.SqlDouble.Value*> is null. Otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if &lt;xref:System.Data.SqlTypes.SqlDouble.Value*&gt; is null.","pos":[0,117],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <xref:System.Data.SqlTypes.SqlDouble.Value*> is null."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[118,192],"source":" Otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[21488,21621],"content":"Compares two instances of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to determine whether the first is less than the second.","needQuote":true,"needEscape":true,"source":"Compares two instances of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> to determine whether the first is less than the second."},{"pos":[21860,21924],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[21999,22063],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[22139,22635],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is less than the second instance.","pos":[0,171],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than the second instance."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[172,236],"source":" Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[237,496],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[23270,23415],"content":"Compares two instances of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to determine whether the first is less than or equal to the second.","needQuote":true,"needEscape":true,"source":"Compares two instances of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> to determine whether the first is less than or equal to the second."},{"pos":[23661,23725],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[23800,23864],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[23940,24448],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than or equal to the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is less than or equal to the second instance.","pos":[0,183],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than or equal to the second instance."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[184,248],"source":" Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[249,508],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[24865,24975],"content":"A constant representing the maximum value for a <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A constant representing the maximum value for a <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[24987,25010],"content":"This value is 1.79E+308","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This value is 1.79E+308","pos":[0,23]}]},{"pos":[25172,25184],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25541,25647],"content":"A constant representing the minimum possible value of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A constant representing the minimum possible value of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref>."},{"pos":[25659,25683],"content":"This value is -1.79E+308","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This value is -1.79E+308","pos":[0,24]}]},{"pos":[25845,25857],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26404,26525],"content":"The multiplication operator computes the product of the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operands.","needQuote":true,"needEscape":true,"source":"The multiplication operator computes the product of the two <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> operands."},{"pos":[26763,26827],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[26902,26966],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[27041,27125],"content":"The product of the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operands.","needQuote":true,"needEscape":true,"source":"The product of the two <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> operands."},{"pos":[27730,27847],"content":"Compares two instances of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to determine whether they are notequal.","needQuote":true,"needEscape":true,"source":"Compares two instances of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> to determine whether they are notequal."},{"pos":[28087,28151],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[28226,28290],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[28366,28864],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the two instances are not equal or <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if the two instances are equal.","pos":[0,238],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[239,498],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[29259,29414],"content":"Represents a <bpt id=\"p1\">&lt;xref href=\"System.DBNull\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that can be assigned to this instance of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Represents a <xref href=\"System.DBNull\"></xref> that can be assigned to this instance of the <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[29427,29603],"content":"`Null` functions as a constant for the <xref:System.Data.SqlTypes.SqlDouble> structure. For more information, see [Handling Null Values](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">`Null`</ph> functions as a constant for the &lt;xref:System.Data.SqlTypes.SqlDouble&gt; structure.","pos":[0,87],"source":"`Null` functions as a constant for the <xref:System.Data.SqlTypes.SqlDouble> structure."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling Null Values<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[88,176],"source":" For more information, see [Handling Null Values](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[29762,29774],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30338,30449],"content":"The addition operator computes the sum of the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operands.","needQuote":true,"needEscape":true,"source":"The addition operator computes the sum of the two <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> operands."},{"pos":[30690,30754],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[30829,30893],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[30968,31048],"content":"The sum of the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operands.","needQuote":true,"needEscape":true,"source":"The sum of the two <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> operands."},{"pos":[31668,31782],"content":"The division operator divides the first <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operand by the second.","needQuote":true,"needEscape":true,"source":"The division operator divides the first <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> operand by the second."},{"pos":[32023,32087],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[32162,32226],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[32301,32417],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that contains the results of the division operation.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure that contains the results of the division operation."},{"pos":[33037,33175],"content":"Performs a logical comparison on two instances of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to determine whether they are equal.","needQuote":true,"needEscape":true,"source":"Performs a logical comparison on two instances of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> to determine whether they are equal."},{"pos":[33417,33481],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[33556,33620],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[33696,33860],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two values are equal. Otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two values are equal.","pos":[0,89],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two values are equal."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[90,164],"source":" Otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[34658,34670],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[34745,34757],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[35490,35502],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[35560,35572],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[36363,36375],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[36450,36462],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[37097,37233],"content":"Compares two instances of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to determine whether the first is greater than the second.","needQuote":true,"needEscape":true,"source":"Compares two instances of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> to determine whether the first is greater than the second."},{"pos":[37478,37542],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[37617,37681],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[37757,38256],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is greater than the second instance.","pos":[0,174],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than the second instance."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[175,239],"source":" Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[240,499],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[38929,39077],"content":"Compares two instances of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to determine whether the first is greater than or equal to the second.","needQuote":true,"needEscape":true,"source":"Compares two instances of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> to determine whether the first is greater than or equal to the second."},{"pos":[39329,39393],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[39468,39532],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[39608,40119],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than or equal to the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is greater than or equal to the second instance.","pos":[0,186],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than or equal to the second instance."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[187,251],"source":" Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[252,511],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[40838,40850],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[40925,40937],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[41667,41679],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[41754,41766],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[42482,42494],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[42569,42581],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[43297,43309],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[43384,43396],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[44112,44124],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[44199,44211],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[44927,44939],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[45014,45026],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[45749,45761],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[45836,45848],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[46487,46499],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[46574,46586],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[47216,47334],"content":"Compares two instances of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to determine whether they are not equal.","needQuote":true,"needEscape":true,"source":"Compares two instances of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> to determine whether they are not equal."},{"pos":[47578,47642],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[47717,47781],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[47857,48355],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the two instances are not equal or <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if the two instances are equal.","pos":[0,238],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[239,498],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[48977,49110],"content":"Compares two instances of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to determine whether the first is less than the second.","needQuote":true,"needEscape":true,"source":"Compares two instances of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> to determine whether the first is less than the second."},{"pos":[49352,49416],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[49491,49555],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[49631,50127],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is less than the second instance.","pos":[0,171],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than the second instance."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[172,236],"source":" Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[237,496],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[50782,50927],"content":"Compares two instances of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to determine whether the first is less than or equal to the second.","needQuote":true,"needEscape":true,"source":"Compares two instances of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> to determine whether the first is less than or equal to the second."},{"pos":[51176,51240],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[51315,51379],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[51455,51963],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than or equal to the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is less than or equal to the second instance.","pos":[0,183],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than or equal to the second instance."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[184,248],"source":" Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[249,508],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[52590,52711],"content":"The multiplication operator computes the product of the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operands.","needQuote":true,"needEscape":true,"source":"The multiplication operator computes the product of the two <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> operands."},{"pos":[52952,53016],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[53091,53155],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[53230,53314],"content":"The product of the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operands.","needQuote":true,"needEscape":true,"source":"The product of the two <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> operands."},{"pos":[53949,54060],"content":"The subtraction operator the second <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operand from the first.","needQuote":true,"needEscape":true,"source":"The subtraction operator the second <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> operand from the first."},{"pos":[54304,54368],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[54443,54507],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[54582,54623],"content":"The results of the subtraction operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The results of the subtraction operation.","pos":[0,41]}]},{"pos":[55179,55284],"content":"Returns the negated value of the specified <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Returns the negated value of the specified <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[55496,55560],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[55635,55731],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that contains the negated value.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure that contains the negated value."},{"pos":[56189,56307],"content":"Converts the <xref:System.String> representation of a number to its double-precision floating point number equivalent.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the &lt;xref:System.String&gt; representation of a number to its double-precision floating point number equivalent.","pos":[0,118],"source":"Converts the <xref:System.String> representation of a number to its double-precision floating point number equivalent."}]},{"pos":[56467,56549],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to be parsed.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> to be parsed."},{"pos":[56624,56786],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the value represented by the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> that contains the value represented by the <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref>."},{"pos":[57383,57494],"content":"The subtraction operator the second <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operand from the first.","needQuote":true,"needEscape":true,"source":"The subtraction operator the second <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> operand from the first."},{"pos":[57732,57796],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[57871,57935],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[58010,58051],"content":"The results of the subtraction operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The results of the subtraction operation.","pos":[0,41]}]},{"pos":[58697,58807],"content":"This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.","pos":[0,110]}]},{"pos":[58980,59021],"content":"An XML schema consumed by .NET Framework.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML schema consumed by .NET Framework.","pos":[0,41]}]},{"pos":[59771,59881],"content":"This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.","pos":[0,110]}]},{"pos":[60051,60081],"content":"A <xref:System.Xml.XmlReader>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Xml.XmlReader&gt;.","pos":[0,30],"source":"A <xref:System.Xml.XmlReader>."}]},{"pos":[60834,60944],"content":"This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.","pos":[0,110]}]},{"pos":[61115,61145],"content":"A <xref:System.Xml.XmlWriter>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Xml.XmlWriter&gt;.","pos":[0,30],"source":"A <xref:System.Xml.XmlWriter>."}]},{"pos":[61624,61756],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"pos":[61930,62579],"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_SqlBoolean\" name=\"SqlBoolean\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose &lt;xref:System.Data.SqlTypes.SqlBoolean.Value<bpt id=\"p2\">*</bpt>&gt; will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.True\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if the <bpt id=\"p4\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> structure's &lt;xref:System.Data.SqlTypes.SqlDouble.Value<ept id=\"p2\">*</ept>&gt; is non-zero, <bpt id=\"p5\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.False\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept> if the <bpt id=\"p6\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p6\">&lt;/xref&gt;</ept> is zero and <bpt id=\"p7\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p7\">&lt;/xref&gt;</ept> if the <bpt id=\"p8\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p8\">&lt;/xref&gt;</ept> structure is <bpt id=\"p9\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble.Null\"&gt;</bpt><ept id=\"p9\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref uid=\"langword_csharp_SqlBoolean\" name=\"SqlBoolean\" href=\"\"></xref> structure whose <xref:System.Data.SqlTypes.SqlBoolean.Value*> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.True\"></xref> if the <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure's <xref:System.Data.SqlTypes.SqlDouble.Value*> is non-zero, <xref href=\"System.Data.SqlTypes.SqlBoolean.False\"></xref> if the <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> is zero and <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref> if the <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure is <xref href=\"System.Data.SqlTypes.SqlDouble.Null\"></xref>."},{"pos":[63005,63134],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlByte\"></xref>."},{"pos":[63299,63591],"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_SqlByte\" name=\"SqlByte\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> equals the <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> of this <bpt id=\"p4\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref uid=\"langword_csharp_SqlByte\" name=\"SqlByte\" href=\"\"></xref> structure whose <xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"></xref> equals the <xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"></xref> of this <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[64029,64161],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlDecimal\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlDecimal\"></xref>."},{"pos":[64335,64550],"content":"A new <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_SqlDecimal\" name=\"SqlDecimal\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose converted value equals the rounded value of this <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_SqlDouble\" name=\"SqlDouble\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A new <xref uid=\"langword_csharp_SqlDecimal\" name=\"SqlDecimal\" href=\"\"></xref> structure whose converted value equals the rounded value of this <xref uid=\"langword_csharp_SqlDouble\" name=\"SqlDouble\" href=\"\"></xref>."},{"pos":[64981,65111],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlInt16\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt16\"></xref>."},{"pos":[65279,65516],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt16\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> equals the integer part of the <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> structure's value.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlInt16\"></xref> structure whose <xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"></xref> equals the integer part of the <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure's value."},{"pos":[65945,66075],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlInt32\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt32\"></xref>."},{"pos":[66243,66480],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt32\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> equals the integer part of the <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> structure's value.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlInt32\"></xref> structure whose <xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"></xref> equals the integer part of the <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure's value."},{"pos":[66909,67039],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref>."},{"pos":[67207,67444],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> equals the integer part of the <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> structure's value.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure whose <xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"></xref> equals the integer part of the <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure's value."},{"pos":[67873,68003],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref>."},{"pos":[68171,68388],"content":"A new <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_SqlMoney\" name=\"SqlMoney\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose &lt;xref:System.Data.SqlTypes.SqlMoney.Value*&gt; is equal to the value of this <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A new <xref uid=\"langword_csharp_SqlMoney\" name=\"SqlMoney\" href=\"\"></xref> structure whose <xref:System.Data.SqlTypes.SqlMoney.Value*> is equal to the value of this <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref>."},{"pos":[68822,68953],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlSingle\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlSingle\"></xref>."},{"pos":[69124,69383],"content":"A new <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_SqlSingle\" name=\"SqlSingle\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose &lt;xref:System.Data.SqlTypes.SqlSingle.Value<bpt id=\"p2\">*</bpt>&gt; is equal to the &lt;xref:System.Data.SqlTypes.SqlDouble.Value<ept id=\"p2\">*</ept>&gt; of this <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A new <xref uid=\"langword_csharp_SqlSingle\" name=\"SqlSingle\" href=\"\"></xref> structure whose <xref:System.Data.SqlTypes.SqlSingle.Value*> is equal to the <xref:System.Data.SqlTypes.SqlDouble.Value*> of this <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref>."},{"pos":[69818,69949],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlString\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlString\"></xref>."},{"pos":[70120,70315],"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_SqlString\" name=\"SqlString\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> representing the &lt;xref:System.Data.SqlTypes.SqlDouble.Value*&gt; of this <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref uid=\"langword_csharp_SqlString\" name=\"SqlString\" href=\"\"></xref> representing the <xref:System.Data.SqlTypes.SqlDouble.Value*> of this <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref>."},{"pos":[70735,70823],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to a string.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure to a string."},{"pos":[70959,71090],"content":"A string representing the &lt;xref:System.Data.SqlTypes.SqlDouble.Value*&gt; of this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A string representing the <xref:System.Data.SqlTypes.SqlDouble.Value*> of this <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref>."},{"pos":[71488,71600],"content":"Gets the value of the <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure. This property is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","pos":[0,84],"source":"Gets the value of the <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"content":"This property is read-only.","pos":[85,112]}]},{"pos":[71710,71789],"content":"The value of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"The value of the <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[72176,72366],"content":"Represents a zero value that can be assigned to the &lt;xref:System.Data.SqlTypes.SqlDouble.Value*&gt; property of an instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Represents a zero value that can be assigned to the <xref:System.Data.SqlTypes.SqlDouble.Value*> property of an instance of the <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure."},{"pos":[72378,72465],"content":"The <ph id=\"ph1\">`Zero`</ph> field is a constant for the &lt;xref:System.Data.SqlTypes.SqlDouble&gt; structure.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The `Zero` field is a constant for the <xref:System.Data.SqlTypes.SqlDouble> structure."},{"pos":[72623,72635],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.SqlTypes.SqlDouble\n  id: SqlDouble\n  children:\n  - System.Data.SqlTypes.SqlDouble.#ctor(System.Double)\n  - System.Data.SqlTypes.SqlDouble.Add(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  - System.Data.SqlTypes.SqlDouble.CompareTo(System.Data.SqlTypes.SqlDouble)\n  - System.Data.SqlTypes.SqlDouble.CompareTo(System.Object)\n  - System.Data.SqlTypes.SqlDouble.Divide(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  - System.Data.SqlTypes.SqlDouble.Equals(System.Object)\n  - System.Data.SqlTypes.SqlDouble.Equals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  - System.Data.SqlTypes.SqlDouble.GetHashCode\n  - System.Data.SqlTypes.SqlDouble.GetXsdType(System.Xml.Schema.XmlSchemaSet)\n  - System.Data.SqlTypes.SqlDouble.GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  - System.Data.SqlTypes.SqlDouble.GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  - System.Data.SqlTypes.SqlDouble.IsNull\n  - System.Data.SqlTypes.SqlDouble.LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  - System.Data.SqlTypes.SqlDouble.LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  - System.Data.SqlTypes.SqlDouble.MaxValue\n  - System.Data.SqlTypes.SqlDouble.MinValue\n  - System.Data.SqlTypes.SqlDouble.Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  - System.Data.SqlTypes.SqlDouble.NotEquals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  - System.Data.SqlTypes.SqlDouble.Null\n  - System.Data.SqlTypes.SqlDouble.op_Addition(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  - System.Data.SqlTypes.SqlDouble.op_Division(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  - System.Data.SqlTypes.SqlDouble.op_Equality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  - System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlDouble)\n  - System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Double)\n  - System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlDouble)\n  - System.Data.SqlTypes.SqlDouble.op_GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  - System.Data.SqlTypes.SqlDouble.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  - System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlDecimal)\n  - System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt16)\n  - System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt32)\n  - System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlMoney)\n  - System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlSingle)\n  - System.Data.SqlTypes.SqlDouble.op_Implicit(System.Double)\n  - System.Data.SqlTypes.SqlDouble.op_Inequality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  - System.Data.SqlTypes.SqlDouble.op_LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  - System.Data.SqlTypes.SqlDouble.op_LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  - System.Data.SqlTypes.SqlDouble.op_Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  - System.Data.SqlTypes.SqlDouble.op_Subtraction(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  - System.Data.SqlTypes.SqlDouble.op_UnaryNegation(System.Data.SqlTypes.SqlDouble)\n  - System.Data.SqlTypes.SqlDouble.Parse(System.String)\n  - System.Data.SqlTypes.SqlDouble.Subtract(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  - System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#GetSchema\n  - System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)\n  - System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)\n  - System.Data.SqlTypes.SqlDouble.ToSqlBoolean\n  - System.Data.SqlTypes.SqlDouble.ToSqlByte\n  - System.Data.SqlTypes.SqlDouble.ToSqlDecimal\n  - System.Data.SqlTypes.SqlDouble.ToSqlInt16\n  - System.Data.SqlTypes.SqlDouble.ToSqlInt32\n  - System.Data.SqlTypes.SqlDouble.ToSqlInt64\n  - System.Data.SqlTypes.SqlDouble.ToSqlMoney\n  - System.Data.SqlTypes.SqlDouble.ToSqlSingle\n  - System.Data.SqlTypes.SqlDouble.ToSqlString\n  - System.Data.SqlTypes.SqlDouble.ToString\n  - System.Data.SqlTypes.SqlDouble.Value\n  - System.Data.SqlTypes.SqlDouble.Zero\n  langs:\n  - csharp\n  name: SqlDouble\n  nameWithType: SqlDouble\n  fullName: System.Data.SqlTypes.SqlDouble\n  type: Struct\n  summary: Represents a floating-point number within the range of -1.79E +308 through 1.79E +308 to be stored in or retrieved from a database.\n  syntax:\n    content: >-\n      [System.Xml.Serialization.XmlSchemaProvider(\"GetXsdType\")]\n\n      public struct SqlDouble : IComparable, System.Data.SqlTypes.INullable, System.Xml.Serialization.IXmlSerializable\n  inheritance:\n  - System.ValueType\n  implements:\n  - System.Data.SqlTypes.INullable\n  - System.IComparable\n  - System.Xml.Serialization.IXmlSerializable\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.#ctor(System.Double)\n  id: '#ctor(System.Double)'\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: SqlDouble(Double)\n  nameWithType: SqlDouble.SqlDouble(Double)\n  fullName: System.Data.SqlTypes.SqlDouble.SqlDouble(Double)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure using the supplied double parameter to set the new <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure's <xref:System.Data.SqlTypes.SqlDouble.Value*> property.\n  syntax:\n    content: public SqlDouble (double value);\n    parameters:\n    - id: value\n      type: System.Double\n      description: A double whose value will be used for the new <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref>.\n  overload: System.Data.SqlTypes.SqlDouble.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.Add(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  id: Add(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: Add(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.Add(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.Add(SqlDouble,SqlDouble)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: The addition operator computes the sum of the two <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> operands.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlDouble Add (System.Data.SqlTypes.SqlDouble x, System.Data.SqlTypes.SqlDouble y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlDouble\n      description: The sum of the two <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> operands.\n  overload: System.Data.SqlTypes.SqlDouble.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.CompareTo(System.Data.SqlTypes.SqlDouble)\n  id: CompareTo(System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: CompareTo(SqlDouble)\n  nameWithType: SqlDouble.CompareTo(SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.CompareTo(SqlDouble)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares this <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> instance to the supplied <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> and returns an indication of their relative values.\n  syntax:\n    content: public int CompareTo (System.Data.SqlTypes.SqlDouble value);\n    parameters:\n    - id: value\n      type: System.Data.SqlTypes.SqlDouble\n      description: The <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> to be compared.\n    return:\n      type: System.Int32\n      description: \"A signed number that indicates the relative values of the instance and the object.  \\n  \\n <table><thead><tr><th> Return value  \\n  \\n </th><th> Condition  \\n  \\n </th></tr></thead><tbody><tr><td> Less than zero  \\n  \\n </td><td> This instance is less than the object.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> This instance is the same as the object.  \\n  \\n </td></tr><tr><td> Greater than zero  \\n  \\n </td><td> This instance is greater than the object  \\n  \\n -or-  \\n  \\n The object is a null reference (<xref uid=\\\"langword_csharp_Nothing\\\" name=\\\"Nothing\\\" href=\\\"\\\"></xref> in Visual Basic)  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.Data.SqlTypes.SqlDouble.CompareTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.CompareTo(System.Object)\n  id: CompareTo(System.Object)\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: CompareTo(Object)\n  nameWithType: SqlDouble.CompareTo(Object)\n  fullName: System.Data.SqlTypes.SqlDouble.CompareTo(Object)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares this <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> instance to the supplied <xref:System.Object> and returns an indication of their relative values.\n  syntax:\n    content: public int CompareTo (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref:System.Object> to compare.\n    return:\n      type: System.Int32\n      description: \"A signed number that indicates the relative values of the instance and the object.  \\n  \\n <table><thead><tr><th> Return value  \\n  \\n </th><th> Condition  \\n  \\n </th></tr></thead><tbody><tr><td> Less than zero  \\n  \\n </td><td> This instance is less than the object.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> This instance is the same as the object.  \\n  \\n </td></tr><tr><td> Greater than zero  \\n  \\n </td><td> This instance is greater than the object  \\n  \\n -or-  \\n  \\n The object is a null reference (<xref uid=\\\"langword_csharp_Nothing \\\" name=\\\"Nothing \\\" href=\\\"\\\"></xref>in Visual Basic).  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.Data.SqlTypes.SqlDouble.CompareTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.Divide(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  id: Divide(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: Divide(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.Divide(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.Divide(SqlDouble,SqlDouble)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: The division operator divides the first <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> operand by the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlDouble Divide (System.Data.SqlTypes.SqlDouble x, System.Data.SqlTypes.SqlDouble y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure that contains the results of the division operation.\n  overload: System.Data.SqlTypes.SqlDouble.Divide*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: SqlDouble.Equals(Object)\n  fullName: System.Data.SqlTypes.SqlDouble.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares the supplied object parameter to the <xref:System.Data.SqlTypes.SqlDateTime.Value*> property of the <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> object.\n  syntax:\n    content: public override bool Equals (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to be compared.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two values are equal. Otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.SqlTypes.SqlDouble.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.Equals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  id: Equals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: Equals(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.Equals(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.Equals(SqlDouble,SqlDouble)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a logical comparison on two instances of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> to determine whether they are equal.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean Equals (System.Data.SqlTypes.SqlDouble x, System.Data.SqlTypes.SqlDouble y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two values are equal. Otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.SqlTypes.SqlDouble.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.GetHashCode\n  id: GetHashCode\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: SqlDouble.GetHashCode()\n  fullName: System.Data.SqlTypes.SqlDouble.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Returns the hash code for this <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structre.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer hash code.\n  overload: System.Data.SqlTypes.SqlDouble.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.GetXsdType(System.Xml.Schema.XmlSchemaSet)\n  id: GetXsdType(System.Xml.Schema.XmlSchemaSet)\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: GetXsdType(XmlSchemaSet)\n  nameWithType: SqlDouble.GetXsdType(XmlSchemaSet)\n  fullName: System.Data.SqlTypes.SqlDouble.GetXsdType(XmlSchemaSet)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Returns the XML Schema definition language (XSD) of the specified <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n  syntax:\n    content: public static System.Xml.XmlQualifiedName GetXsdType (System.Xml.Schema.XmlSchemaSet schemaSet);\n    parameters:\n    - id: schemaSet\n      type: System.Xml.Schema.XmlSchemaSet\n      description: An <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n    return:\n      type: System.Xml.XmlQualifiedName\n      description: A <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref> value that indicates the XSD of the specified <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n  overload: System.Data.SqlTypes.SqlDouble.GetXsdType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  id: GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: GreaterThan(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.GreaterThan(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.GreaterThan(SqlDouble,SqlDouble)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two instances of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> to determine whether the first is greater than the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean GreaterThan (System.Data.SqlTypes.SqlDouble x, System.Data.SqlTypes.SqlDouble y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlDouble.GreaterThan*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  id: GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: GreaterThanOrEqual(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.GreaterThanOrEqual(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.GreaterThanOrEqual(SqlDouble,SqlDouble)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two instances of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> to determine whether the first is greater than or equal to the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean GreaterThanOrEqual (System.Data.SqlTypes.SqlDouble x, System.Data.SqlTypes.SqlDouble y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than or equal to the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlDouble.GreaterThanOrEqual*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.IsNull\n  id: IsNull\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: IsNull\n  nameWithType: SqlDouble.IsNull\n  fullName: System.Data.SqlTypes.SqlDouble.IsNull\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Returns a Boolean value that indicates whether this <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> instance is null.\n  remarks: For more information, see [Handling Null Values](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public bool IsNull { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <xref:System.Data.SqlTypes.SqlDouble.Value*> is null. Otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.SqlTypes.SqlDouble.IsNull*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  id: LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: LessThan(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.LessThan(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.LessThan(SqlDouble,SqlDouble)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two instances of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> to determine whether the first is less than the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean LessThan (System.Data.SqlTypes.SqlDouble x, System.Data.SqlTypes.SqlDouble y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlDouble.LessThan*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  id: LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: LessThanOrEqual(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.LessThanOrEqual(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.LessThanOrEqual(SqlDouble,SqlDouble)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two instances of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> to determine whether the first is less than or equal to the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean LessThanOrEqual (System.Data.SqlTypes.SqlDouble x, System.Data.SqlTypes.SqlDouble y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than or equal to the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlDouble.LessThanOrEqual*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.MaxValue\n  id: MaxValue\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: MaxValue\n  nameWithType: SqlDouble.MaxValue\n  fullName: System.Data.SqlTypes.SqlDouble.MaxValue\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: A constant representing the maximum value for a <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n  remarks: This value is 1.79E+308\n  syntax:\n    content: public static readonly System.Data.SqlTypes.SqlDouble MaxValue;\n    return:\n      type: System.Data.SqlTypes.SqlDouble\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.MinValue\n  id: MinValue\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: MinValue\n  nameWithType: SqlDouble.MinValue\n  fullName: System.Data.SqlTypes.SqlDouble.MinValue\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: A constant representing the minimum possible value of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref>.\n  remarks: This value is -1.79E+308\n  syntax:\n    content: public static readonly System.Data.SqlTypes.SqlDouble MinValue;\n    return:\n      type: System.Data.SqlTypes.SqlDouble\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  id: Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: Multiply(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.Multiply(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.Multiply(SqlDouble,SqlDouble)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: The multiplication operator computes the product of the two <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> operands.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlDouble Multiply (System.Data.SqlTypes.SqlDouble x, System.Data.SqlTypes.SqlDouble y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlDouble\n      description: The product of the two <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> operands.\n  overload: System.Data.SqlTypes.SqlDouble.Multiply*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.NotEquals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  id: NotEquals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: NotEquals(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.NotEquals(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.NotEquals(SqlDouble,SqlDouble)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two instances of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> to determine whether they are notequal.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean NotEquals (System.Data.SqlTypes.SqlDouble x, System.Data.SqlTypes.SqlDouble y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlDouble.NotEquals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.Null\n  id: \"Null\"\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: \"Null\"\n  nameWithType: SqlDouble.Null\n  fullName: System.Data.SqlTypes.SqlDouble.Null\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Represents a <xref href=\"System.DBNull\"></xref> that can be assigned to this instance of the <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n  remarks: '`Null` functions as a constant for the <xref:System.Data.SqlTypes.SqlDouble> structure. For more information, see [Handling Null Values](~/add/includes/ajax-current-ext-md.md).'\n  syntax:\n    content: public static readonly System.Data.SqlTypes.SqlDouble Null;\n    return:\n      type: System.Data.SqlTypes.SqlDouble\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.op_Addition(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  id: op_Addition(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: op_Addition(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.op_Addition(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.op_Addition(SqlDouble,SqlDouble)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: The addition operator computes the sum of the two <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> operands.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlDouble op_Addition (System.Data.SqlTypes.SqlDouble x, System.Data.SqlTypes.SqlDouble y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlDouble\n      description: The sum of the two <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> operands.\n  overload: System.Data.SqlTypes.SqlDouble.op_Addition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.op_Division(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  id: op_Division(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: op_Division(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.op_Division(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.op_Division(SqlDouble,SqlDouble)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: The division operator divides the first <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> operand by the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlDouble op_Division (System.Data.SqlTypes.SqlDouble x, System.Data.SqlTypes.SqlDouble y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure that contains the results of the division operation.\n  overload: System.Data.SqlTypes.SqlDouble.op_Division*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.op_Equality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  id: op_Equality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: op_Equality(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.op_Equality(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.op_Equality(SqlDouble,SqlDouble)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a logical comparison on two instances of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> to determine whether they are equal.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_Equality (System.Data.SqlTypes.SqlDouble x, System.Data.SqlTypes.SqlDouble y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two values are equal. Otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.SqlTypes.SqlDouble.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlDouble)\n  id: op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: op_Explicit(SqlBoolean)\n  nameWithType: SqlDouble.op_Explicit(SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlDouble.op_Explicit(SqlBoolean)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlDouble op_Explicit (System.Data.SqlTypes.SqlBoolean x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBoolean\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlDouble\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlDouble.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Double)\n  id: op_Explicit(System.Data.SqlTypes.SqlDouble to System.Double)\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: op_Explicit(SqlDouble)\n  nameWithType: SqlDouble.op_Explicit(SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.op_Explicit(SqlDouble)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static double op_Explicit (System.Data.SqlTypes.SqlDouble x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDouble\n      description: To be added.\n    return:\n      type: System.Double\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlDouble.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlDouble)\n  id: op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: op_Explicit(SqlString)\n  nameWithType: SqlDouble.op_Explicit(SqlString)\n  fullName: System.Data.SqlTypes.SqlDouble.op_Explicit(SqlString)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlDouble op_Explicit (System.Data.SqlTypes.SqlString x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlString\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlDouble\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlDouble.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.op_GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  id: op_GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: op_GreaterThan(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.op_GreaterThan(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.op_GreaterThan(SqlDouble,SqlDouble)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two instances of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> to determine whether the first is greater than the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThan (System.Data.SqlTypes.SqlDouble x, System.Data.SqlTypes.SqlDouble y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlDouble.op_GreaterThan*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  id: op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: op_GreaterThanOrEqual(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.op_GreaterThanOrEqual(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.op_GreaterThanOrEqual(SqlDouble,SqlDouble)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two instances of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> to determine whether the first is greater than or equal to the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThanOrEqual (System.Data.SqlTypes.SqlDouble x, System.Data.SqlTypes.SqlDouble y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than or equal to the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlDouble.op_GreaterThanOrEqual*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlByte)\n  id: op_Implicit(System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: op_Implicit(SqlByte)\n  nameWithType: SqlDouble.op_Implicit(SqlByte)\n  fullName: System.Data.SqlTypes.SqlDouble.op_Implicit(SqlByte)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlDouble op_Implicit (System.Data.SqlTypes.SqlByte x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlByte\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlDouble\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlDouble.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlDecimal)\n  id: op_Implicit(System.Data.SqlTypes.SqlDecimal)\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: op_Implicit(SqlDecimal)\n  nameWithType: SqlDouble.op_Implicit(SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDouble.op_Implicit(SqlDecimal)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlDouble op_Implicit (System.Data.SqlTypes.SqlDecimal x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDecimal\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlDouble\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlDouble.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt16)\n  id: op_Implicit(System.Data.SqlTypes.SqlInt16)\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: op_Implicit(SqlInt16)\n  nameWithType: SqlDouble.op_Implicit(SqlInt16)\n  fullName: System.Data.SqlTypes.SqlDouble.op_Implicit(SqlInt16)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlDouble op_Implicit (System.Data.SqlTypes.SqlInt16 x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt16\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlDouble\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlDouble.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt32)\n  id: op_Implicit(System.Data.SqlTypes.SqlInt32)\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: op_Implicit(SqlInt32)\n  nameWithType: SqlDouble.op_Implicit(SqlInt32)\n  fullName: System.Data.SqlTypes.SqlDouble.op_Implicit(SqlInt32)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlDouble op_Implicit (System.Data.SqlTypes.SqlInt32 x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt32\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlDouble\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlDouble.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt64)\n  id: op_Implicit(System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: op_Implicit(SqlInt64)\n  nameWithType: SqlDouble.op_Implicit(SqlInt64)\n  fullName: System.Data.SqlTypes.SqlDouble.op_Implicit(SqlInt64)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlDouble op_Implicit (System.Data.SqlTypes.SqlInt64 x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt64\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlDouble\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlDouble.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlMoney)\n  id: op_Implicit(System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: op_Implicit(SqlMoney)\n  nameWithType: SqlDouble.op_Implicit(SqlMoney)\n  fullName: System.Data.SqlTypes.SqlDouble.op_Implicit(SqlMoney)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlDouble op_Implicit (System.Data.SqlTypes.SqlMoney x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlMoney\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlDouble\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlDouble.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlSingle)\n  id: op_Implicit(System.Data.SqlTypes.SqlSingle)\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: op_Implicit(SqlSingle)\n  nameWithType: SqlDouble.op_Implicit(SqlSingle)\n  fullName: System.Data.SqlTypes.SqlDouble.op_Implicit(SqlSingle)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlDouble op_Implicit (System.Data.SqlTypes.SqlSingle x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlSingle\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlDouble\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlDouble.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.op_Implicit(System.Double)\n  id: op_Implicit(System.Double)\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: op_Implicit(Double)\n  nameWithType: SqlDouble.op_Implicit(Double)\n  fullName: System.Data.SqlTypes.SqlDouble.op_Implicit(Double)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlDouble op_Implicit (double x);\n    parameters:\n    - id: x\n      type: System.Double\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlDouble\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlDouble.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.op_Inequality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  id: op_Inequality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: op_Inequality(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.op_Inequality(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.op_Inequality(SqlDouble,SqlDouble)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two instances of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> to determine whether they are not equal.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_Inequality (System.Data.SqlTypes.SqlDouble x, System.Data.SqlTypes.SqlDouble y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlDouble.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.op_LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  id: op_LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: op_LessThan(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.op_LessThan(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.op_LessThan(SqlDouble,SqlDouble)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two instances of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> to determine whether the first is less than the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_LessThan (System.Data.SqlTypes.SqlDouble x, System.Data.SqlTypes.SqlDouble y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlDouble.op_LessThan*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.op_LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  id: op_LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: op_LessThanOrEqual(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.op_LessThanOrEqual(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.op_LessThanOrEqual(SqlDouble,SqlDouble)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two instances of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> to determine whether the first is less than or equal to the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_LessThanOrEqual (System.Data.SqlTypes.SqlDouble x, System.Data.SqlTypes.SqlDouble y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than or equal to the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlDouble.op_LessThanOrEqual*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.op_Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  id: op_Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: op_Multiply(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.op_Multiply(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.op_Multiply(SqlDouble,SqlDouble)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: The multiplication operator computes the product of the two <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> operands.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlDouble op_Multiply (System.Data.SqlTypes.SqlDouble x, System.Data.SqlTypes.SqlDouble y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlDouble\n      description: The product of the two <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> operands.\n  overload: System.Data.SqlTypes.SqlDouble.op_Multiply*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.op_Subtraction(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  id: op_Subtraction(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: op_Subtraction(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.op_Subtraction(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.op_Subtraction(SqlDouble,SqlDouble)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: The subtraction operator the second <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> operand from the first.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlDouble op_Subtraction (System.Data.SqlTypes.SqlDouble x, System.Data.SqlTypes.SqlDouble y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlDouble\n      description: The results of the subtraction operation.\n  overload: System.Data.SqlTypes.SqlDouble.op_Subtraction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.op_UnaryNegation(System.Data.SqlTypes.SqlDouble)\n  id: op_UnaryNegation(System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: op_UnaryNegation(SqlDouble)\n  nameWithType: SqlDouble.op_UnaryNegation(SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.op_UnaryNegation(SqlDouble)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Returns the negated value of the specified <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlDouble op_UnaryNegation (System.Data.SqlTypes.SqlDouble x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure that contains the negated value.\n  overload: System.Data.SqlTypes.SqlDouble.op_UnaryNegation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: Parse(String)\n  nameWithType: SqlDouble.Parse(String)\n  fullName: System.Data.SqlTypes.SqlDouble.Parse(String)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts the <xref:System.String> representation of a number to its double-precision floating point number equivalent.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlDouble Parse (string s);\n    parameters:\n    - id: s\n      type: System.String\n      description: The <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> to be parsed.\n    return:\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> that contains the value represented by the <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref>.\n  overload: System.Data.SqlTypes.SqlDouble.Parse*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.Subtract(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  id: Subtract(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: Subtract(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.Subtract(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.Subtract(SqlDouble,SqlDouble)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: The subtraction operator the second <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> operand from the first.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlDouble Subtract (System.Data.SqlTypes.SqlDouble x, System.Data.SqlTypes.SqlDouble y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlDouble\n      description: The results of the subtraction operation.\n  overload: System.Data.SqlTypes.SqlDouble.Subtract*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#GetSchema\n  id: System#Xml#Serialization#IXmlSerializable#GetSchema\n  isEii: true\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: System.Xml.Serialization.IXmlSerializable.GetSchema()\n  nameWithType: SqlDouble.System.Xml.Serialization.IXmlSerializable.GetSchema()\n  fullName: System.Data.SqlTypes.SqlDouble.System.Xml.Serialization.IXmlSerializable.GetSchema()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.\n  syntax:\n    content: System.Xml.Schema.XmlSchema IXmlSerializable.GetSchema ();\n    parameters: []\n    return:\n      type: System.Xml.Schema.XmlSchema\n      description: An XML schema consumed by .NET Framework.\n  overload: System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#GetSchema*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)\n  id: System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)\n  isEii: true\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)\n  nameWithType: SqlDouble.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)\n  fullName: System.Data.SqlTypes.SqlDouble.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.\n  syntax:\n    content: void IXmlSerializable.ReadXml (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: A <xref:System.Xml.XmlReader>.\n  overload: System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#ReadXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)\n  id: System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)\n  isEii: true\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)\n  nameWithType: SqlDouble.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)\n  fullName: System.Data.SqlTypes.SqlDouble.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.\n  syntax:\n    content: void IXmlSerializable.WriteXml (System.Xml.XmlWriter writer);\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: A <xref:System.Xml.XmlWriter>.\n  overload: System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#WriteXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.ToSqlBoolean\n  id: ToSqlBoolean\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: ToSqlBoolean()\n  nameWithType: SqlDouble.ToSqlBoolean()\n  fullName: System.Data.SqlTypes.SqlDouble.ToSqlBoolean()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlBoolean ToSqlBoolean ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref uid=\"langword_csharp_SqlBoolean\" name=\"SqlBoolean\" href=\"\"></xref> structure whose <xref:System.Data.SqlTypes.SqlBoolean.Value*> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.True\"></xref> if the <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure's <xref:System.Data.SqlTypes.SqlDouble.Value*> is non-zero, <xref href=\"System.Data.SqlTypes.SqlBoolean.False\"></xref> if the <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> is zero and <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref> if the <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure is <xref href=\"System.Data.SqlTypes.SqlDouble.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlDouble.ToSqlBoolean*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.ToSqlByte\n  id: ToSqlByte\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: ToSqlByte()\n  nameWithType: SqlDouble.ToSqlByte()\n  fullName: System.Data.SqlTypes.SqlDouble.ToSqlByte()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlByte\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlByte ToSqlByte ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref uid=\"langword_csharp_SqlByte\" name=\"SqlByte\" href=\"\"></xref> structure whose <xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"></xref> equals the <xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"></xref> of this <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n  overload: System.Data.SqlTypes.SqlDouble.ToSqlByte*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.ToSqlDecimal\n  id: ToSqlDecimal\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: ToSqlDecimal()\n  nameWithType: SqlDouble.ToSqlDecimal()\n  fullName: System.Data.SqlTypes.SqlDouble.ToSqlDecimal()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlDecimal\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlDecimal ToSqlDecimal ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n      description: A new <xref uid=\"langword_csharp_SqlDecimal\" name=\"SqlDecimal\" href=\"\"></xref> structure whose converted value equals the rounded value of this <xref uid=\"langword_csharp_SqlDouble\" name=\"SqlDouble\" href=\"\"></xref>.\n  overload: System.Data.SqlTypes.SqlDouble.ToSqlDecimal*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.ToSqlInt16\n  id: ToSqlInt16\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: ToSqlInt16()\n  nameWithType: SqlDouble.ToSqlInt16()\n  fullName: System.Data.SqlTypes.SqlDouble.ToSqlInt16()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt16\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlInt16 ToSqlInt16 ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlInt16\n      description: A new <xref href=\"System.Data.SqlTypes.SqlInt16\"></xref> structure whose <xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"></xref> equals the integer part of the <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure's value.\n  overload: System.Data.SqlTypes.SqlDouble.ToSqlInt16*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.ToSqlInt32\n  id: ToSqlInt32\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: ToSqlInt32()\n  nameWithType: SqlDouble.ToSqlInt32()\n  fullName: System.Data.SqlTypes.SqlDouble.ToSqlInt32()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt32\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlInt32 ToSqlInt32 ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlInt32\n      description: A new <xref href=\"System.Data.SqlTypes.SqlInt32\"></xref> structure whose <xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"></xref> equals the integer part of the <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure's value.\n  overload: System.Data.SqlTypes.SqlDouble.ToSqlInt32*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.ToSqlInt64\n  id: ToSqlInt64\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: ToSqlInt64()\n  nameWithType: SqlDouble.ToSqlInt64()\n  fullName: System.Data.SqlTypes.SqlDouble.ToSqlInt64()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlInt64 ToSqlInt64 ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: A new <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure whose <xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"></xref> equals the integer part of the <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure's value.\n  overload: System.Data.SqlTypes.SqlDouble.ToSqlInt64*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.ToSqlMoney\n  id: ToSqlMoney\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: ToSqlMoney()\n  nameWithType: SqlDouble.ToSqlMoney()\n  fullName: System.Data.SqlTypes.SqlDouble.ToSqlMoney()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlMoney ToSqlMoney ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlMoney\n      description: A new <xref uid=\"langword_csharp_SqlMoney\" name=\"SqlMoney\" href=\"\"></xref> structure whose <xref:System.Data.SqlTypes.SqlMoney.Value*> is equal to the value of this <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref>.\n  overload: System.Data.SqlTypes.SqlDouble.ToSqlMoney*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.ToSqlSingle\n  id: ToSqlSingle\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: ToSqlSingle()\n  nameWithType: SqlDouble.ToSqlSingle()\n  fullName: System.Data.SqlTypes.SqlDouble.ToSqlSingle()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlSingle\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlSingle ToSqlSingle ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlSingle\n      description: A new <xref uid=\"langword_csharp_SqlSingle\" name=\"SqlSingle\" href=\"\"></xref> structure whose <xref:System.Data.SqlTypes.SqlSingle.Value*> is equal to the <xref:System.Data.SqlTypes.SqlDouble.Value*> of this <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref>.\n  overload: System.Data.SqlTypes.SqlDouble.ToSqlSingle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.ToSqlString\n  id: ToSqlString\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: ToSqlString()\n  nameWithType: SqlDouble.ToSqlString()\n  fullName: System.Data.SqlTypes.SqlDouble.ToSqlString()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlString\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlString ToSqlString ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlString\n      description: A <xref uid=\"langword_csharp_SqlString\" name=\"SqlString\" href=\"\"></xref> representing the <xref:System.Data.SqlTypes.SqlDouble.Value*> of this <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref>.\n  overload: System.Data.SqlTypes.SqlDouble.ToSqlString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.ToString\n  id: ToString\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: SqlDouble.ToString()\n  fullName: System.Data.SqlTypes.SqlDouble.ToString()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure to a string.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string representing the <xref:System.Data.SqlTypes.SqlDouble.Value*> of this <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref>.\n  overload: System.Data.SqlTypes.SqlDouble.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.Value\n  id: Value\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: Value\n  nameWithType: SqlDouble.Value\n  fullName: System.Data.SqlTypes.SqlDouble.Value\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Gets the value of the <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure. This property is read-only.\n  syntax:\n    content: public double Value { get; }\n    return:\n      type: System.Double\n      description: The value of the <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n  overload: System.Data.SqlTypes.SqlDouble.Value*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlDouble.Zero\n  id: Zero\n  parent: System.Data.SqlTypes.SqlDouble\n  langs:\n  - csharp\n  name: Zero\n  nameWithType: SqlDouble.Zero\n  fullName: System.Data.SqlTypes.SqlDouble.Zero\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Represents a zero value that can be assigned to the <xref:System.Data.SqlTypes.SqlDouble.Value*> property of an instance of the <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure.\n  remarks: The `Zero` field is a constant for the <xref:System.Data.SqlTypes.SqlDouble> structure.\n  syntax:\n    content: public static readonly System.Data.SqlTypes.SqlDouble Zero;\n    return:\n      type: System.Data.SqlTypes.SqlDouble\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Data.SqlTypes.SqlDouble.#ctor(System.Double)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: SqlDouble(Double)\n  nameWithType: SqlDouble.SqlDouble(Double)\n  fullName: System.Data.SqlTypes.SqlDouble.SqlDouble(Double)\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Data.SqlTypes.SqlDouble.Add(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: Add(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.Add(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.Add(SqlDouble,SqlDouble)\n- uid: System.Data.SqlTypes.SqlDouble\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlDouble\n  nameWithType: SqlDouble\n  fullName: System.Data.SqlTypes.SqlDouble\n- uid: System.Data.SqlTypes.SqlDouble.CompareTo(System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: CompareTo(SqlDouble)\n  nameWithType: SqlDouble.CompareTo(SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.CompareTo(SqlDouble)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.SqlTypes.SqlDouble.CompareTo(System.Object)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: CompareTo(Object)\n  nameWithType: SqlDouble.CompareTo(Object)\n  fullName: System.Data.SqlTypes.SqlDouble.CompareTo(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.SqlTypes.SqlDouble.Divide(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: Divide(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.Divide(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.Divide(SqlDouble,SqlDouble)\n- uid: System.Data.SqlTypes.SqlDouble.Equals(System.Object)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: SqlDouble.Equals(Object)\n  fullName: System.Data.SqlTypes.SqlDouble.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.SqlTypes.SqlDouble.Equals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: Equals(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.Equals(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.Equals(SqlDouble,SqlDouble)\n- uid: System.Data.SqlTypes.SqlBoolean\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlBoolean\n  nameWithType: SqlBoolean\n  fullName: System.Data.SqlTypes.SqlBoolean\n- uid: System.Data.SqlTypes.SqlDouble.GetHashCode\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: SqlDouble.GetHashCode()\n  fullName: System.Data.SqlTypes.SqlDouble.GetHashCode()\n- uid: System.Data.SqlTypes.SqlDouble.GetXsdType(System.Xml.Schema.XmlSchemaSet)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: GetXsdType(XmlSchemaSet)\n  nameWithType: SqlDouble.GetXsdType(XmlSchemaSet)\n  fullName: System.Data.SqlTypes.SqlDouble.GetXsdType(XmlSchemaSet)\n- uid: System.Xml.XmlQualifiedName\n  parent: System.Xml\n  isExternal: true\n  name: XmlQualifiedName\n  nameWithType: XmlQualifiedName\n  fullName: System.Xml.XmlQualifiedName\n- uid: System.Xml.Schema.XmlSchemaSet\n  parent: System.Xml.Schema\n  isExternal: false\n  name: XmlSchemaSet\n  nameWithType: XmlSchemaSet\n  fullName: System.Xml.Schema.XmlSchemaSet\n- uid: System.Data.SqlTypes.SqlDouble.GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: GreaterThan(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.GreaterThan(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.GreaterThan(SqlDouble,SqlDouble)\n- uid: System.Data.SqlTypes.SqlDouble.GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: GreaterThanOrEqual(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.GreaterThanOrEqual(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.GreaterThanOrEqual(SqlDouble,SqlDouble)\n- uid: System.Data.SqlTypes.SqlDouble.IsNull\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: IsNull\n  nameWithType: SqlDouble.IsNull\n  fullName: System.Data.SqlTypes.SqlDouble.IsNull\n- uid: System.Data.SqlTypes.SqlDouble.LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: LessThan(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.LessThan(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.LessThan(SqlDouble,SqlDouble)\n- uid: System.Data.SqlTypes.SqlDouble.LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: LessThanOrEqual(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.LessThanOrEqual(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.LessThanOrEqual(SqlDouble,SqlDouble)\n- uid: System.Data.SqlTypes.SqlDouble.MaxValue\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: MaxValue\n  nameWithType: SqlDouble.MaxValue\n  fullName: System.Data.SqlTypes.SqlDouble.MaxValue\n- uid: System.Data.SqlTypes.SqlDouble.MinValue\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: MinValue\n  nameWithType: SqlDouble.MinValue\n  fullName: System.Data.SqlTypes.SqlDouble.MinValue\n- uid: System.Data.SqlTypes.SqlDouble.Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: Multiply(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.Multiply(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.Multiply(SqlDouble,SqlDouble)\n- uid: System.Data.SqlTypes.SqlDouble.NotEquals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: NotEquals(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.NotEquals(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.NotEquals(SqlDouble,SqlDouble)\n- uid: System.Data.SqlTypes.SqlDouble.Null\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: \"Null\"\n  nameWithType: SqlDouble.Null\n  fullName: System.Data.SqlTypes.SqlDouble.Null\n- uid: System.Data.SqlTypes.SqlDouble.op_Addition(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: op_Addition(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.op_Addition(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.op_Addition(SqlDouble,SqlDouble)\n- uid: System.Data.SqlTypes.SqlDouble.op_Division(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: op_Division(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.op_Division(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.op_Division(SqlDouble,SqlDouble)\n- uid: System.Data.SqlTypes.SqlDouble.op_Equality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: op_Equality(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.op_Equality(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.op_Equality(SqlDouble,SqlDouble)\n- uid: System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: op_Explicit(SqlBoolean)\n  nameWithType: SqlDouble.op_Explicit(SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlDouble.op_Explicit(SqlBoolean)\n- uid: System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Double)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: op_Explicit(SqlDouble)\n  nameWithType: SqlDouble.op_Explicit(SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.op_Explicit(SqlDouble)\n- uid: System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: op_Explicit(SqlString)\n  nameWithType: SqlDouble.op_Explicit(SqlString)\n  fullName: System.Data.SqlTypes.SqlDouble.op_Explicit(SqlString)\n- uid: System.Data.SqlTypes.SqlString\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlString\n  nameWithType: SqlString\n  fullName: System.Data.SqlTypes.SqlString\n- uid: System.Data.SqlTypes.SqlDouble.op_GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: op_GreaterThan(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.op_GreaterThan(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.op_GreaterThan(SqlDouble,SqlDouble)\n- uid: System.Data.SqlTypes.SqlDouble.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: op_GreaterThanOrEqual(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.op_GreaterThanOrEqual(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.op_GreaterThanOrEqual(SqlDouble,SqlDouble)\n- uid: System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: op_Implicit(SqlByte)\n  nameWithType: SqlDouble.op_Implicit(SqlByte)\n  fullName: System.Data.SqlTypes.SqlDouble.op_Implicit(SqlByte)\n- uid: System.Data.SqlTypes.SqlByte\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlByte\n  nameWithType: SqlByte\n  fullName: System.Data.SqlTypes.SqlByte\n- uid: System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlDecimal)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: op_Implicit(SqlDecimal)\n  nameWithType: SqlDouble.op_Implicit(SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDouble.op_Implicit(SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlDecimal\n  nameWithType: SqlDecimal\n  fullName: System.Data.SqlTypes.SqlDecimal\n- uid: System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt16)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: op_Implicit(SqlInt16)\n  nameWithType: SqlDouble.op_Implicit(SqlInt16)\n  fullName: System.Data.SqlTypes.SqlDouble.op_Implicit(SqlInt16)\n- uid: System.Data.SqlTypes.SqlInt16\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlInt16\n  nameWithType: SqlInt16\n  fullName: System.Data.SqlTypes.SqlInt16\n- uid: System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt32)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: op_Implicit(SqlInt32)\n  nameWithType: SqlDouble.op_Implicit(SqlInt32)\n  fullName: System.Data.SqlTypes.SqlDouble.op_Implicit(SqlInt32)\n- uid: System.Data.SqlTypes.SqlInt32\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlInt32\n  nameWithType: SqlInt32\n  fullName: System.Data.SqlTypes.SqlInt32\n- uid: System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: op_Implicit(SqlInt64)\n  nameWithType: SqlDouble.op_Implicit(SqlInt64)\n  fullName: System.Data.SqlTypes.SqlDouble.op_Implicit(SqlInt64)\n- uid: System.Data.SqlTypes.SqlInt64\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlInt64\n  nameWithType: SqlInt64\n  fullName: System.Data.SqlTypes.SqlInt64\n- uid: System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: op_Implicit(SqlMoney)\n  nameWithType: SqlDouble.op_Implicit(SqlMoney)\n  fullName: System.Data.SqlTypes.SqlDouble.op_Implicit(SqlMoney)\n- uid: System.Data.SqlTypes.SqlMoney\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlMoney\n  nameWithType: SqlMoney\n  fullName: System.Data.SqlTypes.SqlMoney\n- uid: System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlSingle)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: op_Implicit(SqlSingle)\n  nameWithType: SqlDouble.op_Implicit(SqlSingle)\n  fullName: System.Data.SqlTypes.SqlDouble.op_Implicit(SqlSingle)\n- uid: System.Data.SqlTypes.SqlSingle\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlSingle\n  nameWithType: SqlSingle\n  fullName: System.Data.SqlTypes.SqlSingle\n- uid: System.Data.SqlTypes.SqlDouble.op_Implicit(System.Double)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: op_Implicit(Double)\n  nameWithType: SqlDouble.op_Implicit(Double)\n  fullName: System.Data.SqlTypes.SqlDouble.op_Implicit(Double)\n- uid: System.Data.SqlTypes.SqlDouble.op_Inequality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: op_Inequality(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.op_Inequality(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.op_Inequality(SqlDouble,SqlDouble)\n- uid: System.Data.SqlTypes.SqlDouble.op_LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: op_LessThan(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.op_LessThan(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.op_LessThan(SqlDouble,SqlDouble)\n- uid: System.Data.SqlTypes.SqlDouble.op_LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: op_LessThanOrEqual(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.op_LessThanOrEqual(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.op_LessThanOrEqual(SqlDouble,SqlDouble)\n- uid: System.Data.SqlTypes.SqlDouble.op_Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: op_Multiply(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.op_Multiply(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.op_Multiply(SqlDouble,SqlDouble)\n- uid: System.Data.SqlTypes.SqlDouble.op_Subtraction(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: op_Subtraction(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.op_Subtraction(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.op_Subtraction(SqlDouble,SqlDouble)\n- uid: System.Data.SqlTypes.SqlDouble.op_UnaryNegation(System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: op_UnaryNegation(SqlDouble)\n  nameWithType: SqlDouble.op_UnaryNegation(SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.op_UnaryNegation(SqlDouble)\n- uid: System.Data.SqlTypes.SqlDouble.Parse(System.String)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: Parse(String)\n  nameWithType: SqlDouble.Parse(String)\n  fullName: System.Data.SqlTypes.SqlDouble.Parse(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.SqlTypes.SqlDouble.Subtract(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: Subtract(SqlDouble,SqlDouble)\n  nameWithType: SqlDouble.Subtract(SqlDouble,SqlDouble)\n  fullName: System.Data.SqlTypes.SqlDouble.Subtract(SqlDouble,SqlDouble)\n- uid: System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#GetSchema\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: System.Xml.Serialization.IXmlSerializable.GetSchema()\n  nameWithType: SqlDouble.System.Xml.Serialization.IXmlSerializable.GetSchema()\n  fullName: System.Data.SqlTypes.SqlDouble.System.Xml.Serialization.IXmlSerializable.GetSchema()\n- uid: System.Xml.Schema.XmlSchema\n  parent: System.Xml.Schema\n  isExternal: true\n  name: XmlSchema\n  nameWithType: XmlSchema\n  fullName: System.Xml.Schema.XmlSchema\n- uid: System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)\n  nameWithType: SqlDouble.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)\n  fullName: System.Data.SqlTypes.SqlDouble.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)\n- uid: System.Xml.XmlReader\n  parent: System.Xml\n  isExternal: true\n  name: XmlReader\n  nameWithType: XmlReader\n  fullName: System.Xml.XmlReader\n- uid: System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)\n  nameWithType: SqlDouble.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)\n  fullName: System.Data.SqlTypes.SqlDouble.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)\n- uid: System.Xml.XmlWriter\n  parent: System.Xml\n  isExternal: true\n  name: XmlWriter\n  nameWithType: XmlWriter\n  fullName: System.Xml.XmlWriter\n- uid: System.Data.SqlTypes.SqlDouble.ToSqlBoolean\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: ToSqlBoolean()\n  nameWithType: SqlDouble.ToSqlBoolean()\n  fullName: System.Data.SqlTypes.SqlDouble.ToSqlBoolean()\n- uid: System.Data.SqlTypes.SqlDouble.ToSqlByte\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: ToSqlByte()\n  nameWithType: SqlDouble.ToSqlByte()\n  fullName: System.Data.SqlTypes.SqlDouble.ToSqlByte()\n- uid: System.Data.SqlTypes.SqlDouble.ToSqlDecimal\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: ToSqlDecimal()\n  nameWithType: SqlDouble.ToSqlDecimal()\n  fullName: System.Data.SqlTypes.SqlDouble.ToSqlDecimal()\n- uid: System.Data.SqlTypes.SqlDouble.ToSqlInt16\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: ToSqlInt16()\n  nameWithType: SqlDouble.ToSqlInt16()\n  fullName: System.Data.SqlTypes.SqlDouble.ToSqlInt16()\n- uid: System.Data.SqlTypes.SqlDouble.ToSqlInt32\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: ToSqlInt32()\n  nameWithType: SqlDouble.ToSqlInt32()\n  fullName: System.Data.SqlTypes.SqlDouble.ToSqlInt32()\n- uid: System.Data.SqlTypes.SqlDouble.ToSqlInt64\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: ToSqlInt64()\n  nameWithType: SqlDouble.ToSqlInt64()\n  fullName: System.Data.SqlTypes.SqlDouble.ToSqlInt64()\n- uid: System.Data.SqlTypes.SqlDouble.ToSqlMoney\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: ToSqlMoney()\n  nameWithType: SqlDouble.ToSqlMoney()\n  fullName: System.Data.SqlTypes.SqlDouble.ToSqlMoney()\n- uid: System.Data.SqlTypes.SqlDouble.ToSqlSingle\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: ToSqlSingle()\n  nameWithType: SqlDouble.ToSqlSingle()\n  fullName: System.Data.SqlTypes.SqlDouble.ToSqlSingle()\n- uid: System.Data.SqlTypes.SqlDouble.ToSqlString\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: ToSqlString()\n  nameWithType: SqlDouble.ToSqlString()\n  fullName: System.Data.SqlTypes.SqlDouble.ToSqlString()\n- uid: System.Data.SqlTypes.SqlDouble.ToString\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: ToString()\n  nameWithType: SqlDouble.ToString()\n  fullName: System.Data.SqlTypes.SqlDouble.ToString()\n- uid: System.Data.SqlTypes.SqlDouble.Value\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: Value\n  nameWithType: SqlDouble.Value\n  fullName: System.Data.SqlTypes.SqlDouble.Value\n- uid: System.Data.SqlTypes.SqlDouble.Zero\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: Zero\n  nameWithType: SqlDouble.Zero\n  fullName: System.Data.SqlTypes.SqlDouble.Zero\n- uid: System.Data.SqlTypes.SqlDouble.#ctor*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: SqlDouble\n  nameWithType: SqlDouble.SqlDouble\n- uid: System.Data.SqlTypes.SqlDouble.Add*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: Add\n  nameWithType: SqlDouble.Add\n- uid: System.Data.SqlTypes.SqlDouble.CompareTo*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: CompareTo\n  nameWithType: SqlDouble.CompareTo\n- uid: System.Data.SqlTypes.SqlDouble.Divide*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: Divide\n  nameWithType: SqlDouble.Divide\n- uid: System.Data.SqlTypes.SqlDouble.Equals*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: Equals\n  nameWithType: SqlDouble.Equals\n- uid: System.Data.SqlTypes.SqlDouble.GetHashCode*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: GetHashCode\n  nameWithType: SqlDouble.GetHashCode\n- uid: System.Data.SqlTypes.SqlDouble.GetXsdType*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: GetXsdType\n  nameWithType: SqlDouble.GetXsdType\n- uid: System.Data.SqlTypes.SqlDouble.GreaterThan*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: GreaterThan\n  nameWithType: SqlDouble.GreaterThan\n- uid: System.Data.SqlTypes.SqlDouble.GreaterThanOrEqual*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: GreaterThanOrEqual\n  nameWithType: SqlDouble.GreaterThanOrEqual\n- uid: System.Data.SqlTypes.SqlDouble.IsNull*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: IsNull\n  nameWithType: SqlDouble.IsNull\n- uid: System.Data.SqlTypes.SqlDouble.LessThan*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: LessThan\n  nameWithType: SqlDouble.LessThan\n- uid: System.Data.SqlTypes.SqlDouble.LessThanOrEqual*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: LessThanOrEqual\n  nameWithType: SqlDouble.LessThanOrEqual\n- uid: System.Data.SqlTypes.SqlDouble.Multiply*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: Multiply\n  nameWithType: SqlDouble.Multiply\n- uid: System.Data.SqlTypes.SqlDouble.NotEquals*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: NotEquals\n  nameWithType: SqlDouble.NotEquals\n- uid: System.Data.SqlTypes.SqlDouble.op_Addition*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: op_Addition\n  nameWithType: SqlDouble.op_Addition\n- uid: System.Data.SqlTypes.SqlDouble.op_Division*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: op_Division\n  nameWithType: SqlDouble.op_Division\n- uid: System.Data.SqlTypes.SqlDouble.op_Equality*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: op_Equality\n  nameWithType: SqlDouble.op_Equality\n- uid: System.Data.SqlTypes.SqlDouble.op_Explicit*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: op_Explicit\n  nameWithType: SqlDouble.op_Explicit\n- uid: System.Data.SqlTypes.SqlDouble.op_GreaterThan*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: op_GreaterThan\n  nameWithType: SqlDouble.op_GreaterThan\n- uid: System.Data.SqlTypes.SqlDouble.op_GreaterThanOrEqual*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: op_GreaterThanOrEqual\n  nameWithType: SqlDouble.op_GreaterThanOrEqual\n- uid: System.Data.SqlTypes.SqlDouble.op_Implicit*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: op_Implicit\n  nameWithType: SqlDouble.op_Implicit\n- uid: System.Data.SqlTypes.SqlDouble.op_Inequality*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: op_Inequality\n  nameWithType: SqlDouble.op_Inequality\n- uid: System.Data.SqlTypes.SqlDouble.op_LessThan*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: op_LessThan\n  nameWithType: SqlDouble.op_LessThan\n- uid: System.Data.SqlTypes.SqlDouble.op_LessThanOrEqual*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: op_LessThanOrEqual\n  nameWithType: SqlDouble.op_LessThanOrEqual\n- uid: System.Data.SqlTypes.SqlDouble.op_Multiply*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: op_Multiply\n  nameWithType: SqlDouble.op_Multiply\n- uid: System.Data.SqlTypes.SqlDouble.op_Subtraction*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: op_Subtraction\n  nameWithType: SqlDouble.op_Subtraction\n- uid: System.Data.SqlTypes.SqlDouble.op_UnaryNegation*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: op_UnaryNegation\n  nameWithType: SqlDouble.op_UnaryNegation\n- uid: System.Data.SqlTypes.SqlDouble.Parse*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: Parse\n  nameWithType: SqlDouble.Parse\n- uid: System.Data.SqlTypes.SqlDouble.Subtract*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: Subtract\n  nameWithType: SqlDouble.Subtract\n- uid: System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#GetSchema*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: System.Xml.Serialization.IXmlSerializable.GetSchema\n  nameWithType: SqlDouble.System.Xml.Serialization.IXmlSerializable.GetSchema\n- uid: System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#ReadXml*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: System.Xml.Serialization.IXmlSerializable.ReadXml\n  nameWithType: SqlDouble.System.Xml.Serialization.IXmlSerializable.ReadXml\n- uid: System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#WriteXml*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: System.Xml.Serialization.IXmlSerializable.WriteXml\n  nameWithType: SqlDouble.System.Xml.Serialization.IXmlSerializable.WriteXml\n- uid: System.Data.SqlTypes.SqlDouble.ToSqlBoolean*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: ToSqlBoolean\n  nameWithType: SqlDouble.ToSqlBoolean\n- uid: System.Data.SqlTypes.SqlDouble.ToSqlByte*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: ToSqlByte\n  nameWithType: SqlDouble.ToSqlByte\n- uid: System.Data.SqlTypes.SqlDouble.ToSqlDecimal*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: ToSqlDecimal\n  nameWithType: SqlDouble.ToSqlDecimal\n- uid: System.Data.SqlTypes.SqlDouble.ToSqlInt16*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: ToSqlInt16\n  nameWithType: SqlDouble.ToSqlInt16\n- uid: System.Data.SqlTypes.SqlDouble.ToSqlInt32*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: ToSqlInt32\n  nameWithType: SqlDouble.ToSqlInt32\n- uid: System.Data.SqlTypes.SqlDouble.ToSqlInt64*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: ToSqlInt64\n  nameWithType: SqlDouble.ToSqlInt64\n- uid: System.Data.SqlTypes.SqlDouble.ToSqlMoney*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: ToSqlMoney\n  nameWithType: SqlDouble.ToSqlMoney\n- uid: System.Data.SqlTypes.SqlDouble.ToSqlSingle*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: ToSqlSingle\n  nameWithType: SqlDouble.ToSqlSingle\n- uid: System.Data.SqlTypes.SqlDouble.ToSqlString*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: ToSqlString\n  nameWithType: SqlDouble.ToSqlString\n- uid: System.Data.SqlTypes.SqlDouble.ToString*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: ToString\n  nameWithType: SqlDouble.ToString\n- uid: System.Data.SqlTypes.SqlDouble.Value*\n  parent: System.Data.SqlTypes.SqlDouble\n  isExternal: false\n  name: Value\n  nameWithType: SqlDouble.Value\n"}