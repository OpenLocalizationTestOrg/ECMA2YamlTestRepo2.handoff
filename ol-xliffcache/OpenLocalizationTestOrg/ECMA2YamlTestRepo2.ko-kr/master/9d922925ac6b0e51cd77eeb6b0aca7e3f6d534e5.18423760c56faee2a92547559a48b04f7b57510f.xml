{"nodes":[{"pos":[575,666],"content":"Specifies quotas for channels that belong to a pool of channels used by a service endpoint.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies quotas for channels that belong to a pool of channels used by a service endpoint.","pos":[0,91]}]},{"pos":[679,1538],"content":"Quotas are used as a policy mechanism to prevent the consumption of excessive resources. They prevent Denial of Service (DOS) attacks that are either malicious or unintentional. Use this class when setting channel quotas on a custom channel.       ChannelPoolSettings specifies three quotas:      -   <xref:System.ServiceModel.Channels.ChannelPoolSettings.IdleTimeout%2A> to specify the maximum interval of time for which the channels in the pool can be idle before being closed.      -   <xref:System.ServiceModel.Channels.ChannelPoolSettings.LeaseTimeout%2A> to specify the interval of time after which a channel, when returned to the pool, is closed.      -   <xref:System.ServiceModel.Channels.ChannelPoolSettings.MaxOutboundChannelsPerEndpoint%2A> to specify the maximum number of channels that can be stored in the pool for each remote endpoint.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Quotas are used as a policy mechanism to prevent the consumption of excessive resources. They prevent Denial of Service (DOS) attacks that are either malicious or unintentional. Use this class when setting channel quotas on a custom channel.       ChannelPoolSettings specifies three quotas:      -   <xref:System.ServiceModel.Channels.ChannelPoolSettings.IdleTimeout%2A> to specify the maximum interval of time for which the channels in the pool can be idle before being closed.      -   <xref:System.ServiceModel.Channels.ChannelPoolSettings.LeaseTimeout%2A> to specify the interval of time after which a channel, when returned to the pool, is closed.      -   <xref:System.ServiceModel.Channels.ChannelPoolSettings.MaxOutboundChannelsPerEndpoint%2A> to specify the maximum number of channels that can be stored in the pool for each remote endpoint.","pos":[0,851],"nodes":[{"content":"Quotas are used as a policy mechanism to prevent the consumption of excessive resources.","pos":[0,88]},{"content":"They prevent Denial of Service (DOS) attacks that are either malicious or unintentional.","pos":[89,177]},{"content":"Use this class when setting channel quotas on a custom channel.","pos":[178,241]},{"content":"ChannelPoolSettings specifies three quotas:      -   &lt;xref:System.ServiceModel.Channels.ChannelPoolSettings.IdleTimeout%2A&gt; to specify the maximum interval of time for which the channels in the pool can be idle before being closed.","pos":[248,479],"source":"       ChannelPoolSettings specifies three quotas:      -   <xref:System.ServiceModel.Channels.ChannelPoolSettings.IdleTimeout%2A> to specify the maximum interval of time for which the channels in the pool can be idle before being closed."},{"content":"-   &lt;xref:System.ServiceModel.Channels.ChannelPoolSettings.LeaseTimeout%2A&gt; to specify the interval of time after which a channel, when returned to the pool, is closed.","pos":[485,653],"source":"      -   <xref:System.ServiceModel.Channels.ChannelPoolSettings.LeaseTimeout%2A> to specify the interval of time after which a channel, when returned to the pool, is closed."},{"content":"-   &lt;xref:System.ServiceModel.Channels.ChannelPoolSettings.MaxOutboundChannelsPerEndpoint%2A&gt; to specify the maximum number of channels that can be stored in the pool for each remote endpoint.","pos":[659,851],"source":"      -   <xref:System.ServiceModel.Channels.ChannelPoolSettings.MaxOutboundChannelsPerEndpoint%2A> to specify the maximum number of channels that can be stored in the pool for each remote endpoint."}]}]},{"pos":[2129,2239],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Channels.ChannelPoolSettings\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ChannelPoolSettings\"></xref> class."},{"pos":[2252,2979],"content":"The default values set are:      -   <xref:System.ServiceModel.Channels.ChannelPoolSettings.IdleTimeout%2A>: 2 minutes.      -   <xref:System.ServiceModel.Channels.ChannelPoolSettings.LeaseTimeout%2A>: 10 minutes.      -   <xref:System.ServiceModel.Channels.ChannelPoolSettings.MaxOutboundChannelsPerEndpoint%2A>: 10 channels.       These default quota values are based on a conservatively modest allocation of resources that are suitable for development environments and small installation scenarios. Service administrators should review channel quotas and tune individual quota values if an installation is running out of resources or if connections are being limited despite the availability of additional resources.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default values set are:      -   <xref:System.ServiceModel.Channels.ChannelPoolSettings.IdleTimeout%2A>: 2 minutes.      -   <xref:System.ServiceModel.Channels.ChannelPoolSettings.LeaseTimeout%2A>: 10 minutes.      -   <xref:System.ServiceModel.Channels.ChannelPoolSettings.MaxOutboundChannelsPerEndpoint%2A>: 10 channels.       These default quota values are based on a conservatively modest allocation of resources that are suitable for development environments and small installation scenarios. Service administrators should review channel quotas and tune individual quota values if an installation is running out of resources or if connections are being limited despite the availability of additional resources.","pos":[0,719],"nodes":[{"content":"The default values set are:      -   &lt;xref:System.ServiceModel.Channels.ChannelPoolSettings.IdleTimeout%2A&gt;: 2 minutes.","pos":[0,119],"source":"The default values set are:      -   <xref:System.ServiceModel.Channels.ChannelPoolSettings.IdleTimeout%2A>: 2 minutes."},{"content":"-   &lt;xref:System.ServiceModel.Channels.ChannelPoolSettings.LeaseTimeout%2A&gt;: 10 minutes.","pos":[125,213],"source":"      -   <xref:System.ServiceModel.Channels.ChannelPoolSettings.LeaseTimeout%2A>: 10 minutes."},{"content":"-   &lt;xref:System.ServiceModel.Channels.ChannelPoolSettings.MaxOutboundChannelsPerEndpoint%2A&gt;: 10 channels.","pos":[219,326],"source":"      -   <xref:System.ServiceModel.Channels.ChannelPoolSettings.MaxOutboundChannelsPerEndpoint%2A>: 10 channels."},{"content":"These default quota values are based on a conservatively modest allocation of resources that are suitable for development environments and small installation scenarios.","pos":[333,501]},{"content":"Service administrators should review channel quotas and tune individual quota values if an installation is running out of resources or if connections are being limited despite the availability of additional resources.","pos":[502,719]}]}]},{"pos":[3576,3684],"content":"Get or sets the maximum interval of time for which the channels in the pool can be idle before being closed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Get or sets the maximum interval of time for which the channels in the pool can be idle before being closed.","pos":[0,108]}]},{"pos":[3696,4287],"content":"The IdleTimeout quota is used to mitigate Denial of Service (DOS) attacks on the server that rely on tying up resources for an extended period of time. On the client, setting the correct value can increase the reliability of connecting with the service. The default value is based on a conservatively modest allocation of resources. It is suitable for a development environment and small installation scenarios. Service administrators should review the value if an installation is running out of resources or if connections are being limited despite the availability of additional resources.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The IdleTimeout quota is used to mitigate Denial of Service (DOS) attacks on the server that rely on tying up resources for an extended period of time. On the client, setting the correct value can increase the reliability of connecting with the service. The default value is based on a conservatively modest allocation of resources. It is suitable for a development environment and small installation scenarios. Service administrators should review the value if an installation is running out of resources or if connections are being limited despite the availability of additional resources.","pos":[0,591],"nodes":[{"content":"The IdleTimeout quota is used to mitigate Denial of Service (DOS) attacks on the server that rely on tying up resources for an extended period of time.","pos":[0,151]},{"content":"On the client, setting the correct value can increase the reliability of connecting with the service.","pos":[152,253]},{"content":"The default value is based on a conservatively modest allocation of resources.","pos":[254,332]},{"content":"It is suitable for a development environment and small installation scenarios.","pos":[333,411]},{"content":"Service administrators should review the value if an installation is running out of resources or if connections are being limited despite the availability of additional resources.","pos":[412,591]}]}]},{"pos":[4412,4582],"content":"The <xref:System.TimeSpan> that specifies the maximum interval of time for which the channels in the pool can be idle before being closed. The default value is 2 minutes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <xref:System.TimeSpan> that specifies the maximum interval of time for which the channels in the pool can be idle before being closed. The default value is 2 minutes.","pos":[0,170],"nodes":[{"content":"The &lt;xref:System.TimeSpan&gt; that specifies the maximum interval of time for which the channels in the pool can be idle before being closed.","pos":[0,138],"source":"The <xref:System.TimeSpan> that specifies the maximum interval of time for which the channels in the pool can be idle before being closed."},{"content":"The default value is 2 minutes.","pos":[139,170]}]}]},{"pos":[4785,4869],"content":"The value is less than zero or greater than T:System.Int32.MaxValue in milliseconds.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value is less than zero or greater than T:System.Int32.MaxValue in milliseconds.","pos":[0,84]}]},{"pos":[5312,5377],"content":"Gets or sets the lifetime of a channel, after which it is closed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the lifetime of a channel, after which it is closed.","pos":[0,65]}]},{"pos":[5389,5818],"content":"The LeaseTimeout quota is used to for integration with load balancers and for improving reliability. The default value is based on a conservative allocation of resources. It is suitable for a development environment and small installation scenarios. Service administrators should review the value if an installation is running out of resources or if connections are being limited despite the availability of additional resources.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The LeaseTimeout quota is used to for integration with load balancers and for improving reliability. The default value is based on a conservative allocation of resources. It is suitable for a development environment and small installation scenarios. Service administrators should review the value if an installation is running out of resources or if connections are being limited despite the availability of additional resources.","pos":[0,429],"nodes":[{"content":"The LeaseTimeout quota is used to for integration with load balancers and for improving reliability.","pos":[0,100]},{"content":"The default value is based on a conservative allocation of resources.","pos":[101,170]},{"content":"It is suitable for a development environment and small installation scenarios.","pos":[171,249]},{"content":"Service administrators should review the value if an installation is running out of resources or if connections are being limited despite the availability of additional resources.","pos":[250,429]}]}]},{"pos":[5944,6069],"content":"A <xref:System.TimeSpan> that specifies the lifetime of a channel, after which it is closed. The default value is 10 minutes.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <xref:System.TimeSpan> that specifies the lifetime of a channel, after which it is closed. The default value is 10 minutes.","pos":[0,125],"nodes":[{"content":"A &lt;xref:System.TimeSpan&gt; that specifies the lifetime of a channel, after which it is closed.","pos":[0,92],"source":"A <xref:System.TimeSpan> that specifies the lifetime of a channel, after which it is closed."},{"content":"The default value is 10 minutes.","pos":[93,125]}]}]},{"pos":[6273,6301],"content":"The value is less than zero.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value is less than zero.","pos":[0,28]}]},{"pos":[6834,6946],"content":"Gets or sets the maximum number of channels connecting to remote endpoints that can be initiated by the service.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the maximum number of channels connecting to remote endpoints that can be initiated by the service.","pos":[0,112]}]},{"pos":[6958,7425],"content":"The MaxOutboundChannelsPerEndpoint quota sets cache limits on both the server and the client and is used to improve reliability. The default value is based on a conservatively modest allocation of resources that is suitable for a development environment and small installation scenarios. Service administrators should review the value if an installation is running out of resources or if connections are being limited despite the availability of additional resources.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The MaxOutboundChannelsPerEndpoint quota sets cache limits on both the server and the client and is used to improve reliability. The default value is based on a conservatively modest allocation of resources that is suitable for a development environment and small installation scenarios. Service administrators should review the value if an installation is running out of resources or if connections are being limited despite the availability of additional resources.","pos":[0,467],"nodes":[{"content":"The MaxOutboundChannelsPerEndpoint quota sets cache limits on both the server and the client and is used to improve reliability.","pos":[0,128]},{"content":"The default value is based on a conservatively modest allocation of resources that is suitable for a development environment and small installation scenarios.","pos":[129,287]},{"content":"Service administrators should review the value if an installation is running out of resources or if connections are being limited despite the availability of additional resources.","pos":[288,467]}]}]},{"pos":[7561,7730],"content":"A positive integer that specifies the maximum number of channels to a remote endpoint in the pool that can be initiated by the service. The default value is 10 channels.","needQuote":true,"needEscape":true,"nodes":[{"content":"A positive integer that specifies the maximum number of channels to a remote endpoint in the pool that can be initiated by the service. The default value is 10 channels.","pos":[0,169],"nodes":[{"content":"A positive integer that specifies the maximum number of channels to a remote endpoint in the pool that can be initiated by the service.","pos":[0,135]},{"content":"The default value is 10 channels.","pos":[136,169]}]}]},{"pos":[7952,7980],"content":"The value is less than zero.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value is less than zero.","pos":[0,28]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Channels.ChannelPoolSettings\n  id: ChannelPoolSettings\n  children:\n  - System.ServiceModel.Channels.ChannelPoolSettings.#ctor\n  - System.ServiceModel.Channels.ChannelPoolSettings.IdleTimeout\n  - System.ServiceModel.Channels.ChannelPoolSettings.LeaseTimeout\n  - System.ServiceModel.Channels.ChannelPoolSettings.MaxOutboundChannelsPerEndpoint\n  langs:\n  - csharp\n  name: ChannelPoolSettings\n  nameWithType: ChannelPoolSettings\n  fullName: System.ServiceModel.Channels.ChannelPoolSettings\n  type: Class\n  summary: Specifies quotas for channels that belong to a pool of channels used by a service endpoint.\n  remarks: \"Quotas are used as a policy mechanism to prevent the consumption of excessive resources. They prevent Denial of Service (DOS) attacks that are either malicious or unintentional. Use this class when setting channel quotas on a custom channel.  \\n  \\n ChannelPoolSettings specifies three quotas:  \\n  \\n-   <xref:System.ServiceModel.Channels.ChannelPoolSettings.IdleTimeout%2A> to specify the maximum interval of time for which the channels in the pool can be idle before being closed.  \\n  \\n-   <xref:System.ServiceModel.Channels.ChannelPoolSettings.LeaseTimeout%2A> to specify the interval of time after which a channel, when returned to the pool, is closed.  \\n  \\n-   <xref:System.ServiceModel.Channels.ChannelPoolSettings.MaxOutboundChannelsPerEndpoint%2A> to specify the maximum number of channels that can be stored in the pool for each remote endpoint.\"\n  syntax:\n    content: public class ChannelPoolSettings\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.ChannelPoolSettings.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Channels.ChannelPoolSettings\n  langs:\n  - csharp\n  name: ChannelPoolSettings()\n  nameWithType: ChannelPoolSettings.ChannelPoolSettings()\n  fullName: System.ServiceModel.Channels.ChannelPoolSettings.ChannelPoolSettings()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ChannelPoolSettings\"></xref> class.\n  remarks: \"The default values set are:  \\n  \\n-   <xref:System.ServiceModel.Channels.ChannelPoolSettings.IdleTimeout%2A>: 2 minutes.  \\n  \\n-   <xref:System.ServiceModel.Channels.ChannelPoolSettings.LeaseTimeout%2A>: 10 minutes.  \\n  \\n-   <xref:System.ServiceModel.Channels.ChannelPoolSettings.MaxOutboundChannelsPerEndpoint%2A>: 10 channels.  \\n  \\n These default quota values are based on a conservatively modest allocation of resources that are suitable for development environments and small installation scenarios. Service administrators should review channel quotas and tune individual quota values if an installation is running out of resources or if connections are being limited despite the availability of additional resources.\"\n  syntax:\n    content: public ChannelPoolSettings ();\n    parameters: []\n  overload: System.ServiceModel.Channels.ChannelPoolSettings.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.ChannelPoolSettings.IdleTimeout\n  id: IdleTimeout\n  parent: System.ServiceModel.Channels.ChannelPoolSettings\n  langs:\n  - csharp\n  name: IdleTimeout\n  nameWithType: ChannelPoolSettings.IdleTimeout\n  fullName: System.ServiceModel.Channels.ChannelPoolSettings.IdleTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Get or sets the maximum interval of time for which the channels in the pool can be idle before being closed.\n  remarks: The IdleTimeout quota is used to mitigate Denial of Service (DOS) attacks on the server that rely on tying up resources for an extended period of time. On the client, setting the correct value can increase the reliability of connecting with the service. The default value is based on a conservatively modest allocation of resources. It is suitable for a development environment and small installation scenarios. Service administrators should review the value if an installation is running out of resources or if connections are being limited despite the availability of additional resources.\n  syntax:\n    content: public TimeSpan IdleTimeout { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The <xref:System.TimeSpan> that specifies the maximum interval of time for which the channels in the pool can be idle before being closed. The default value is 2 minutes.\n  overload: System.ServiceModel.Channels.ChannelPoolSettings.IdleTimeout*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value is less than zero or greater than T:System.Int32.MaxValue in milliseconds.\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.ChannelPoolSettings.LeaseTimeout\n  id: LeaseTimeout\n  parent: System.ServiceModel.Channels.ChannelPoolSettings\n  langs:\n  - csharp\n  name: LeaseTimeout\n  nameWithType: ChannelPoolSettings.LeaseTimeout\n  fullName: System.ServiceModel.Channels.ChannelPoolSettings.LeaseTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets the lifetime of a channel, after which it is closed.\n  remarks: The LeaseTimeout quota is used to for integration with load balancers and for improving reliability. The default value is based on a conservative allocation of resources. It is suitable for a development environment and small installation scenarios. Service administrators should review the value if an installation is running out of resources or if connections are being limited despite the availability of additional resources.\n  syntax:\n    content: public TimeSpan LeaseTimeout { get; set; }\n    return:\n      type: System.TimeSpan\n      description: A <xref:System.TimeSpan> that specifies the lifetime of a channel, after which it is closed. The default value is 10 minutes.\n  overload: System.ServiceModel.Channels.ChannelPoolSettings.LeaseTimeout*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value is less than zero.\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.ChannelPoolSettings.MaxOutboundChannelsPerEndpoint\n  id: MaxOutboundChannelsPerEndpoint\n  parent: System.ServiceModel.Channels.ChannelPoolSettings\n  langs:\n  - csharp\n  name: MaxOutboundChannelsPerEndpoint\n  nameWithType: ChannelPoolSettings.MaxOutboundChannelsPerEndpoint\n  fullName: System.ServiceModel.Channels.ChannelPoolSettings.MaxOutboundChannelsPerEndpoint\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets the maximum number of channels connecting to remote endpoints that can be initiated by the service.\n  remarks: The MaxOutboundChannelsPerEndpoint quota sets cache limits on both the server and the client and is used to improve reliability. The default value is based on a conservatively modest allocation of resources that is suitable for a development environment and small installation scenarios. Service administrators should review the value if an installation is running out of resources or if connections are being limited despite the availability of additional resources.\n  syntax:\n    content: public int MaxOutboundChannelsPerEndpoint { get; set; }\n    return:\n      type: System.Int32\n      description: A positive integer that specifies the maximum number of channels to a remote endpoint in the pool that can be initiated by the service. The default value is 10 channels.\n  overload: System.ServiceModel.Channels.ChannelPoolSettings.MaxOutboundChannelsPerEndpoint*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value is less than zero.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.ServiceModel.Channels.ChannelPoolSettings.#ctor\n  parent: System.ServiceModel.Channels.ChannelPoolSettings\n  isExternal: false\n  name: ChannelPoolSettings()\n  nameWithType: ChannelPoolSettings.ChannelPoolSettings()\n  fullName: System.ServiceModel.Channels.ChannelPoolSettings.ChannelPoolSettings()\n- uid: System.ServiceModel.Channels.ChannelPoolSettings.IdleTimeout\n  parent: System.ServiceModel.Channels.ChannelPoolSettings\n  isExternal: false\n  name: IdleTimeout\n  nameWithType: ChannelPoolSettings.IdleTimeout\n  fullName: System.ServiceModel.Channels.ChannelPoolSettings.IdleTimeout\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.ServiceModel.Channels.ChannelPoolSettings.LeaseTimeout\n  parent: System.ServiceModel.Channels.ChannelPoolSettings\n  isExternal: false\n  name: LeaseTimeout\n  nameWithType: ChannelPoolSettings.LeaseTimeout\n  fullName: System.ServiceModel.Channels.ChannelPoolSettings.LeaseTimeout\n- uid: System.ServiceModel.Channels.ChannelPoolSettings.MaxOutboundChannelsPerEndpoint\n  parent: System.ServiceModel.Channels.ChannelPoolSettings\n  isExternal: false\n  name: MaxOutboundChannelsPerEndpoint\n  nameWithType: ChannelPoolSettings.MaxOutboundChannelsPerEndpoint\n  fullName: System.ServiceModel.Channels.ChannelPoolSettings.MaxOutboundChannelsPerEndpoint\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceModel.Channels.ChannelPoolSettings.#ctor*\n  parent: System.ServiceModel.Channels.ChannelPoolSettings\n  isExternal: false\n  name: ChannelPoolSettings\n  nameWithType: ChannelPoolSettings.ChannelPoolSettings\n- uid: System.ServiceModel.Channels.ChannelPoolSettings.IdleTimeout*\n  parent: System.ServiceModel.Channels.ChannelPoolSettings\n  isExternal: false\n  name: IdleTimeout\n  nameWithType: ChannelPoolSettings.IdleTimeout\n- uid: System.ServiceModel.Channels.ChannelPoolSettings.LeaseTimeout*\n  parent: System.ServiceModel.Channels.ChannelPoolSettings\n  isExternal: false\n  name: LeaseTimeout\n  nameWithType: ChannelPoolSettings.LeaseTimeout\n- uid: System.ServiceModel.Channels.ChannelPoolSettings.MaxOutboundChannelsPerEndpoint*\n  parent: System.ServiceModel.Channels.ChannelPoolSettings\n  isExternal: false\n  name: MaxOutboundChannelsPerEndpoint\n  nameWithType: ChannelPoolSettings.MaxOutboundChannelsPerEndpoint\n"}