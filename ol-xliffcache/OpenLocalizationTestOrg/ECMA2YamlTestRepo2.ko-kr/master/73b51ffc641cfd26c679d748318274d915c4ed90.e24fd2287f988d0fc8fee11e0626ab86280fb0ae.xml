{"nodes":[{"pos":[1010,1206],"content":"Associates cancellation logic, in the form of a <bpt id=\"p1\">&lt;xref href=\"System.Activities.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, with a main path of execution, also expressed as a <bpt id=\"p2\">&lt;xref href=\"System.Activities.Activity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Associates cancellation logic, in the form of a <xref href=\"System.Activities.Activity\"></xref>, with a main path of execution, also expressed as a <xref href=\"System.Activities.Activity\"></xref>."},{"pos":[2797,2901],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.CancellationScope\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.Activities.Statements.CancellationScope\"></xref> class."},{"pos":[3448,3633],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> contained by the <bpt id=\"p2\">&lt;xref href=\"System.Activities.Statements.CancellationScope\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> that represents the main path of execution.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Activities.Activity\"></xref> contained by the <xref href=\"System.Activities.Statements.CancellationScope\"></xref> that represents the main path of execution."},{"pos":[3780,3807],"content":"The main path of execution.","needQuote":true,"needEscape":true,"nodes":[{"content":"The main path of execution.","pos":[0,27]}]},{"pos":[4691,4703],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5545,5557],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6109,6207],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Activities.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is executed in the event of cancellation.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Activities.Activity\"></xref> that is executed in the event of cancellation."},{"pos":[6369,6394],"content":"The cancellation handler.","needQuote":true,"needEscape":true,"nodes":[{"content":"The cancellation handler.","pos":[0,25]}]},{"pos":[7248,7260],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8458,8470],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8556,8568],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9088,9255],"content":"Gets the collection of <bpt id=\"p1\">&lt;xref href=\"System.Activities.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects associated with the <bpt id=\"p2\">&lt;xref href=\"System.Activities.Statements.CancellationScope\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the collection of <xref href=\"System.Activities.Activity\"></xref> objects associated with the <xref href=\"System.Activities.Statements.CancellationScope\"></xref>."},{"pos":[9488,9650],"content":"The collection of <bpt id=\"p1\">&lt;xref href=\"System.Activities.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects associated with the <bpt id=\"p2\">&lt;xref href=\"System.Activities.Statements.CancellationScope\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The collection of <xref href=\"System.Activities.Activity\"></xref> objects associated with the <xref href=\"System.Activities.Statements.CancellationScope\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Statements.CancellationScope\n  id: CancellationScope\n  children:\n  - System.Activities.Statements.CancellationScope.#ctor\n  - System.Activities.Statements.CancellationScope.Body\n  - System.Activities.Statements.CancellationScope.CacheMetadata(System.Activities.NativeActivityMetadata)\n  - System.Activities.Statements.CancellationScope.Cancel(System.Activities.NativeActivityContext)\n  - System.Activities.Statements.CancellationScope.CancellationHandler\n  - System.Activities.Statements.CancellationScope.Execute(System.Activities.NativeActivityContext)\n  - System.Activities.Statements.CancellationScope.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.Statements.CancellationScope.Variables\n  langs:\n  - csharp\n  name: CancellationScope\n  nameWithType: CancellationScope\n  fullName: System.Activities.Statements.CancellationScope\n  type: Class\n  summary: Associates cancellation logic, in the form of a <xref href=\"System.Activities.Activity\"></xref>, with a main path of execution, also expressed as a <xref href=\"System.Activities.Activity\"></xref>.\n  syntax:\n    content: >-\n      [System.Windows.Markup.ContentProperty(\"Body\")]\n\n      public sealed class CancellationScope : System.Activities.NativeActivity\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.NativeActivity\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)\n  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.NativeActivity.CanInduceIdle\n  - System.Activities.NativeActivity.Implementation\n  - System.Activities.NativeActivity.ImplementationVersion\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  platform:\n  - net462\n- uid: System.Activities.Statements.CancellationScope.#ctor\n  id: '#ctor'\n  parent: System.Activities.Statements.CancellationScope\n  langs:\n  - csharp\n  name: CancellationScope()\n  nameWithType: CancellationScope.CancellationScope()\n  fullName: System.Activities.Statements.CancellationScope.CancellationScope()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Creates a new instance of the <xref href=\"System.Activities.Statements.CancellationScope\"></xref> class.\n  syntax:\n    content: public CancellationScope ();\n    parameters: []\n  overload: System.Activities.Statements.CancellationScope.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.CancellationScope.Body\n  id: Body\n  parent: System.Activities.Statements.CancellationScope\n  langs:\n  - csharp\n  name: Body\n  nameWithType: CancellationScope.Body\n  fullName: System.Activities.Statements.CancellationScope.Body\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Gets the <xref href=\"System.Activities.Activity\"></xref> contained by the <xref href=\"System.Activities.Statements.CancellationScope\"></xref> that represents the main path of execution.\n  syntax:\n    content: public System.Activities.Activity Body { get; set; }\n    return:\n      type: System.Activities.Activity\n      description: The main path of execution.\n  overload: System.Activities.Statements.CancellationScope.Body*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.CancellationScope.CacheMetadata(System.Activities.NativeActivityMetadata)\n  id: CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.CancellationScope\n  langs:\n  - csharp\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: CancellationScope.CacheMetadata(NativeActivityMetadata)\n  fullName: System.Activities.Statements.CancellationScope.CacheMetadata(NativeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.NativeActivityMetadata\n      description: To be added.\n  overload: System.Activities.Statements.CancellationScope.CacheMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.CancellationScope.Cancel(System.Activities.NativeActivityContext)\n  id: Cancel(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.CancellationScope\n  langs:\n  - csharp\n  name: Cancel(NativeActivityContext)\n  nameWithType: CancellationScope.Cancel(NativeActivityContext)\n  fullName: System.Activities.Statements.CancellationScope.Cancel(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Cancel (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: To be added.\n  overload: System.Activities.Statements.CancellationScope.Cancel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.CancellationScope.CancellationHandler\n  id: CancellationHandler\n  parent: System.Activities.Statements.CancellationScope\n  langs:\n  - csharp\n  name: CancellationHandler\n  nameWithType: CancellationScope.CancellationHandler\n  fullName: System.Activities.Statements.CancellationScope.CancellationHandler\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: The <xref href=\"System.Activities.Activity\"></xref> that is executed in the event of cancellation.\n  syntax:\n    content: public System.Activities.Activity CancellationHandler { get; set; }\n    return:\n      type: System.Activities.Activity\n      description: The cancellation handler.\n  overload: System.Activities.Statements.CancellationScope.CancellationHandler*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.CancellationScope.Execute(System.Activities.NativeActivityContext)\n  id: Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.CancellationScope\n  langs:\n  - csharp\n  name: Execute(NativeActivityContext)\n  nameWithType: CancellationScope.Execute(NativeActivityContext)\n  fullName: System.Activities.Statements.CancellationScope.Execute(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Execute (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: To be added.\n  overload: System.Activities.Statements.CancellationScope.Execute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.CancellationScope.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  id: OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.Statements.CancellationScope\n  langs:\n  - csharp\n  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  nameWithType: CancellationScope.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  fullName: System.Activities.Statements.CancellationScope.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);\n    parameters:\n    - id: metadata\n      type: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n      description: To be added.\n    - id: originalActivity\n      type: System.Activities.Activity\n      description: To be added.\n  overload: System.Activities.Statements.CancellationScope.OnCreateDynamicUpdateMap*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.CancellationScope.Variables\n  id: Variables\n  parent: System.Activities.Statements.CancellationScope\n  langs:\n  - csharp\n  name: Variables\n  nameWithType: CancellationScope.Variables\n  fullName: System.Activities.Statements.CancellationScope.Variables\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Gets the collection of <xref href=\"System.Activities.Activity\"></xref> objects associated with the <xref href=\"System.Activities.Statements.CancellationScope\"></xref>.\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.Activities.Variable> Variables { get; }\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Activities.Variable}\n      description: The collection of <xref href=\"System.Activities.Activity\"></xref> objects associated with the <xref href=\"System.Activities.Statements.CancellationScope\"></xref>.\n  overload: System.Activities.Statements.CancellationScope.Variables*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.NativeActivity\n  isExternal: false\n  name: System.Activities.NativeActivity\n- uid: System.Activities.Statements.CancellationScope.#ctor\n  parent: System.Activities.Statements.CancellationScope\n  isExternal: false\n  name: CancellationScope()\n  nameWithType: CancellationScope.CancellationScope()\n  fullName: System.Activities.Statements.CancellationScope.CancellationScope()\n- uid: System.Activities.Statements.CancellationScope.Body\n  parent: System.Activities.Statements.CancellationScope\n  isExternal: false\n  name: Body\n  nameWithType: CancellationScope.Body\n  fullName: System.Activities.Statements.CancellationScope.Body\n- uid: System.Activities.Activity\n  parent: System.Activities\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n- uid: System.Activities.Statements.CancellationScope.CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.CancellationScope\n  isExternal: false\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: CancellationScope.CacheMetadata(NativeActivityMetadata)\n  fullName: System.Activities.Statements.CancellationScope.CacheMetadata(NativeActivityMetadata)\n- uid: System.Activities.NativeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityMetadata\n  nameWithType: NativeActivityMetadata\n  fullName: System.Activities.NativeActivityMetadata\n- uid: System.Activities.Statements.CancellationScope.Cancel(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.CancellationScope\n  isExternal: false\n  name: Cancel(NativeActivityContext)\n  nameWithType: CancellationScope.Cancel(NativeActivityContext)\n  fullName: System.Activities.Statements.CancellationScope.Cancel(NativeActivityContext)\n- uid: System.Activities.NativeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityContext\n  nameWithType: NativeActivityContext\n  fullName: System.Activities.NativeActivityContext\n- uid: System.Activities.Statements.CancellationScope.CancellationHandler\n  parent: System.Activities.Statements.CancellationScope\n  isExternal: false\n  name: CancellationHandler\n  nameWithType: CancellationScope.CancellationHandler\n  fullName: System.Activities.Statements.CancellationScope.CancellationHandler\n- uid: System.Activities.Statements.CancellationScope.Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.CancellationScope\n  isExternal: false\n  name: Execute(NativeActivityContext)\n  nameWithType: CancellationScope.Execute(NativeActivityContext)\n  fullName: System.Activities.Statements.CancellationScope.Execute(NativeActivityContext)\n- uid: System.Activities.Statements.CancellationScope.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.Statements.CancellationScope\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  nameWithType: CancellationScope.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  fullName: System.Activities.Statements.CancellationScope.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n- uid: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n  parent: System.Activities.DynamicUpdate\n  isExternal: false\n  name: NativeActivityUpdateMapMetadata\n  nameWithType: NativeActivityUpdateMapMetadata\n  fullName: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n- uid: System.Activities.Statements.CancellationScope.Variables\n  parent: System.Activities.Statements.CancellationScope\n  isExternal: false\n  name: Variables\n  nameWithType: CancellationScope.Variables\n  fullName: System.Activities.Statements.CancellationScope.Variables\n- uid: System.Collections.ObjectModel.Collection{System.Activities.Variable}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: Collection<Variable>\n  nameWithType: Collection<Variable>\n  fullName: System.Collections.ObjectModel.Collection<System.Activities.Variable>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: Collection<System.Activities.Variable>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Variable\n    name: Variable\n    nameWithType: Variable\n    fullName: Variable\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.CancellationScope.#ctor*\n  parent: System.Activities.Statements.CancellationScope\n  isExternal: false\n  name: CancellationScope\n  nameWithType: CancellationScope.CancellationScope\n- uid: System.Activities.Statements.CancellationScope.Body*\n  parent: System.Activities.Statements.CancellationScope\n  isExternal: false\n  name: Body\n  nameWithType: CancellationScope.Body\n- uid: System.Activities.Statements.CancellationScope.CacheMetadata*\n  parent: System.Activities.Statements.CancellationScope\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: CancellationScope.CacheMetadata\n- uid: System.Activities.Statements.CancellationScope.Cancel*\n  parent: System.Activities.Statements.CancellationScope\n  isExternal: false\n  name: Cancel\n  nameWithType: CancellationScope.Cancel\n- uid: System.Activities.Statements.CancellationScope.CancellationHandler*\n  parent: System.Activities.Statements.CancellationScope\n  isExternal: false\n  name: CancellationHandler\n  nameWithType: CancellationScope.CancellationHandler\n- uid: System.Activities.Statements.CancellationScope.Execute*\n  parent: System.Activities.Statements.CancellationScope\n  isExternal: false\n  name: Execute\n  nameWithType: CancellationScope.Execute\n- uid: System.Activities.Statements.CancellationScope.OnCreateDynamicUpdateMap*\n  parent: System.Activities.Statements.CancellationScope\n  isExternal: false\n  name: OnCreateDynamicUpdateMap\n  nameWithType: CancellationScope.OnCreateDynamicUpdateMap\n- uid: System.Activities.Statements.CancellationScope.Variables*\n  parent: System.Activities.Statements.CancellationScope\n  isExternal: false\n  name: Variables\n  nameWithType: CancellationScope.Variables\n"}