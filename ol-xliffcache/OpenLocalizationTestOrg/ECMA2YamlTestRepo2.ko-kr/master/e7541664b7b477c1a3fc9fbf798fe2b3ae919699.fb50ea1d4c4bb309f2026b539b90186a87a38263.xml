{"nodes":[{"pos":[663,799],"content":"Represents a prototype-based object that is defined by a constructor function. This class belongs to the built-in object model category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a prototype-based object that is defined by a constructor function. This class belongs to the built-in object model category.","pos":[0,136],"nodes":[{"content":"Represents a prototype-based object that is defined by a constructor function.","pos":[0,78]},{"content":"This class belongs to the built-in object model category.","pos":[79,136]}]}]},{"pos":[4425,4511],"content":"Creates an instance of the prototype-based object, passing in the specified arguments.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an instance of the prototype-based object, passing in the specified arguments.","pos":[0,86]}]},{"pos":[4683,4724],"content":"The arguments to pass to the constructor.","needQuote":true,"needEscape":true,"nodes":[{"content":"The arguments to pass to the constructor.","pos":[0,41]}]},{"pos":[4799,4825],"content":"An instance of the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"An instance of the object.","pos":[0,26]}]},{"pos":[5317,5359],"content":"Converts the specified object to a number.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified object to a number.","pos":[0,42]}]},{"pos":[5493,5515],"content":"The object to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to convert.","pos":[0,22]}]},{"pos":[5573,5633],"content":"<ph id=\"ph1\">&lt;code&gt;arg&lt;/code&gt;</ph> expressed as a number, if that is possible.","needQuote":true,"needEscape":true,"source":"<code>arg</code> expressed as a number, if that is possible."},{"pos":[6077,6165],"content":"Represents the largest possible value of a <xref:System.Double>. This field is constant.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the largest possible value of a <xref:System.Double>. This field is constant.","pos":[0,88],"nodes":[{"content":"Represents the largest possible value of a &lt;xref:System.Double&gt;.","pos":[0,64],"source":"Represents the largest possible value of a <xref:System.Double>."},{"content":"This field is constant.","pos":[65,88]}]}]},{"pos":[6301,6313],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6701,6811],"content":"Represents the smallest positive <xref:System.Double> value that is greater than zero. This field is constant.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the smallest positive <xref:System.Double> value that is greater than zero. This field is constant.","pos":[0,110],"nodes":[{"content":"Represents the smallest positive &lt;xref:System.Double&gt; value that is greater than zero.","pos":[0,86],"source":"Represents the smallest positive <xref:System.Double> value that is greater than zero."},{"content":"This field is constant.","pos":[87,110]}]}]},{"pos":[6947,6959],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7317,7387],"content":"Represents a value that is not a number (NaN). This field is constant.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a value that is not a number (NaN). This field is constant.","pos":[0,70],"nodes":[{"content":"Represents a value that is not a number (NaN).","pos":[0,46]},{"content":"This field is constant.","pos":[47,70]}]}]},{"pos":[7499,7511],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7939,7992],"content":"Represents negative infinity. This field is constant.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents negative infinity. This field is constant.","pos":[0,53],"nodes":[{"content":"Represents negative infinity.","pos":[0,29]},{"content":"This field is constant.","pos":[30,53]}]}]},{"pos":[8124,8136],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8564,8617],"content":"Represents positive infinity. This field is constant.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents positive infinity. This field is constant.","pos":[0,53],"nodes":[{"content":"Represents positive infinity.","pos":[0,29]},{"content":"This field is constant.","pos":[30,53]}]}]},{"pos":[8748,8760],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.JScript.NumberConstructor\n  id: NumberConstructor\n  children:\n  - Microsoft.JScript.NumberConstructor.CreateInstance(System.Object[])\n  - Microsoft.JScript.NumberConstructor.Invoke(System.Object)\n  - Microsoft.JScript.NumberConstructor.MAX_VALUE\n  - Microsoft.JScript.NumberConstructor.MIN_VALUE\n  - Microsoft.JScript.NumberConstructor.NaN\n  - Microsoft.JScript.NumberConstructor.NEGATIVE_INFINITY\n  - Microsoft.JScript.NumberConstructor.POSITIVE_INFINITY\n  langs:\n  - csharp\n  name: NumberConstructor\n  nameWithType: NumberConstructor\n  fullName: Microsoft.JScript.NumberConstructor\n  type: Class\n  summary: Represents a prototype-based object that is defined by a constructor function. This class belongs to the built-in object model category.\n  syntax:\n    content: 'public class NumberConstructor : Microsoft.JScript.ScriptFunction'\n  inheritance:\n  - System.Object\n  - Microsoft.JScript.ScriptObject\n  - Microsoft.JScript.JSObject\n  - Microsoft.JScript.ScriptFunction\n  implements: []\n  inheritedMembers:\n  - Microsoft.JScript.JSObject.AddField(System.String)\n  - Microsoft.JScript.JSObject.field_table\n  - Microsoft.JScript.JSObject.GetMember(System.String,System.Reflection.BindingFlags)\n  - Microsoft.JScript.JSObject.GetMembers(System.Reflection.BindingFlags)\n  - Microsoft.JScript.JSObject.SetMemberValue2(System.String,System.Object)\n  - Microsoft.JScript.JSObject.System#Collections#IEnumerable#GetEnumerator\n  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddMethod(System.String,System.Delegate)\n  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddProperty(System.String)\n  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#RemoveMember(System.Reflection.MemberInfo)\n  - Microsoft.JScript.ScriptFunction.GetPrototypeForConstructedObject\n  - Microsoft.JScript.ScriptFunction.ilength\n  - Microsoft.JScript.ScriptFunction.Invoke(System.Object,System.Object[])\n  - Microsoft.JScript.ScriptFunction.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\n  - Microsoft.JScript.ScriptFunction.length\n  - Microsoft.JScript.ScriptFunction.prototype\n  - Microsoft.JScript.ScriptFunction.ToString\n  - Microsoft.JScript.ScriptObject.engine\n  - Microsoft.JScript.ScriptObject.GetField(System.String,System.Reflection.BindingFlags)\n  - Microsoft.JScript.ScriptObject.GetFields(System.Reflection.BindingFlags)\n  - Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags)\n  - Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\n  - Microsoft.JScript.ScriptObject.GetMethods(System.Reflection.BindingFlags)\n  - Microsoft.JScript.ScriptObject.GetParent\n  - Microsoft.JScript.ScriptObject.GetProperties(System.Reflection.BindingFlags)\n  - Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags)\n  - Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  - Microsoft.JScript.ScriptObject.Item(System.Double)\n  - Microsoft.JScript.ScriptObject.Item(System.Int32)\n  - Microsoft.JScript.ScriptObject.Item(System.Object[])\n  - Microsoft.JScript.ScriptObject.Item(System.String)\n  - Microsoft.JScript.ScriptObject.parent\n  - Microsoft.JScript.ScriptObject.UnderlyingSystemType\n  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo,System.Object)\n  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object)\n  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object,Microsoft.JScript.SimpleHashtable)\n  platform:\n  - net462\n- uid: Microsoft.JScript.NumberConstructor.CreateInstance(System.Object[])\n  id: CreateInstance(System.Object[])\n  parent: Microsoft.JScript.NumberConstructor\n  langs:\n  - csharp\n  name: CreateInstance(Object[])\n  nameWithType: NumberConstructor.CreateInstance(Object[])\n  fullName: Microsoft.JScript.NumberConstructor.CreateInstance(Object[])\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Creates an instance of the prototype-based object, passing in the specified arguments.\n  syntax:\n    content: public Microsoft.JScript.NumberObject CreateInstance (object[] args);\n    parameters:\n    - id: args\n      type: System.Object[]\n      description: The arguments to pass to the constructor.\n    return:\n      type: Microsoft.JScript.NumberObject\n      description: An instance of the object.\n  overload: Microsoft.JScript.NumberConstructor.CreateInstance*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.NumberConstructor.Invoke(System.Object)\n  id: Invoke(System.Object)\n  parent: Microsoft.JScript.NumberConstructor\n  langs:\n  - csharp\n  name: Invoke(Object)\n  nameWithType: NumberConstructor.Invoke(Object)\n  fullName: Microsoft.JScript.NumberConstructor.Invoke(Object)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Converts the specified object to a number.\n  syntax:\n    content: public double Invoke (object arg);\n    parameters:\n    - id: arg\n      type: System.Object\n      description: The object to convert.\n    return:\n      type: System.Double\n      description: <code>arg</code> expressed as a number, if that is possible.\n  overload: Microsoft.JScript.NumberConstructor.Invoke*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.NumberConstructor.MAX_VALUE\n  id: MAX_VALUE\n  parent: Microsoft.JScript.NumberConstructor\n  langs:\n  - csharp\n  name: MAX_VALUE\n  nameWithType: NumberConstructor.MAX_VALUE\n  fullName: Microsoft.JScript.NumberConstructor.MAX_VALUE\n  type: Field\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Represents the largest possible value of a <xref:System.Double>. This field is constant.\n  syntax:\n    content: public const double MAX_VALUE = 1.79769313486232E+308;\n    return:\n      type: System.Double\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.NumberConstructor.MIN_VALUE\n  id: MIN_VALUE\n  parent: Microsoft.JScript.NumberConstructor\n  langs:\n  - csharp\n  name: MIN_VALUE\n  nameWithType: NumberConstructor.MIN_VALUE\n  fullName: Microsoft.JScript.NumberConstructor.MIN_VALUE\n  type: Field\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Represents the smallest positive <xref:System.Double> value that is greater than zero. This field is constant.\n  syntax:\n    content: public const double MIN_VALUE = 4.94065645841247E-324;\n    return:\n      type: System.Double\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.NumberConstructor.NaN\n  id: NaN\n  parent: Microsoft.JScript.NumberConstructor\n  langs:\n  - csharp\n  name: NaN\n  nameWithType: NumberConstructor.NaN\n  fullName: Microsoft.JScript.NumberConstructor.NaN\n  type: Field\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Represents a value that is not a number (NaN). This field is constant.\n  syntax:\n    content: public const double NaN = NaN;\n    return:\n      type: System.Double\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.NumberConstructor.NEGATIVE_INFINITY\n  id: NEGATIVE_INFINITY\n  parent: Microsoft.JScript.NumberConstructor\n  langs:\n  - csharp\n  name: NEGATIVE_INFINITY\n  nameWithType: NumberConstructor.NEGATIVE_INFINITY\n  fullName: Microsoft.JScript.NumberConstructor.NEGATIVE_INFINITY\n  type: Field\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Represents negative infinity. This field is constant.\n  syntax:\n    content: public const double NEGATIVE_INFINITY = -Infinity;\n    return:\n      type: System.Double\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.NumberConstructor.POSITIVE_INFINITY\n  id: POSITIVE_INFINITY\n  parent: Microsoft.JScript.NumberConstructor\n  langs:\n  - csharp\n  name: POSITIVE_INFINITY\n  nameWithType: NumberConstructor.POSITIVE_INFINITY\n  fullName: Microsoft.JScript.NumberConstructor.POSITIVE_INFINITY\n  type: Field\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Represents positive infinity. This field is constant.\n  syntax:\n    content: public const double POSITIVE_INFINITY = Infinity;\n    return:\n      type: System.Double\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: Microsoft.JScript.ScriptFunction\n  isExternal: false\n  name: Microsoft.JScript.ScriptFunction\n- uid: Microsoft.JScript.NumberConstructor.CreateInstance(System.Object[])\n  parent: Microsoft.JScript.NumberConstructor\n  isExternal: false\n  name: CreateInstance(Object[])\n  nameWithType: NumberConstructor.CreateInstance(Object[])\n  fullName: Microsoft.JScript.NumberConstructor.CreateInstance(Object[])\n- uid: Microsoft.JScript.NumberObject\n  parent: Microsoft.JScript\n  isExternal: false\n  name: NumberObject\n  nameWithType: NumberObject\n  fullName: Microsoft.JScript.NumberObject\n- uid: System.Object[]\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: Microsoft.JScript.NumberConstructor.Invoke(System.Object)\n  parent: Microsoft.JScript.NumberConstructor\n  isExternal: false\n  name: Invoke(Object)\n  nameWithType: NumberConstructor.Invoke(Object)\n  fullName: Microsoft.JScript.NumberConstructor.Invoke(Object)\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: Microsoft.JScript.NumberConstructor.MAX_VALUE\n  parent: Microsoft.JScript.NumberConstructor\n  isExternal: false\n  name: MAX_VALUE\n  nameWithType: NumberConstructor.MAX_VALUE\n  fullName: Microsoft.JScript.NumberConstructor.MAX_VALUE\n- uid: Microsoft.JScript.NumberConstructor.MIN_VALUE\n  parent: Microsoft.JScript.NumberConstructor\n  isExternal: false\n  name: MIN_VALUE\n  nameWithType: NumberConstructor.MIN_VALUE\n  fullName: Microsoft.JScript.NumberConstructor.MIN_VALUE\n- uid: Microsoft.JScript.NumberConstructor.NaN\n  parent: Microsoft.JScript.NumberConstructor\n  isExternal: false\n  name: NaN\n  nameWithType: NumberConstructor.NaN\n  fullName: Microsoft.JScript.NumberConstructor.NaN\n- uid: Microsoft.JScript.NumberConstructor.NEGATIVE_INFINITY\n  parent: Microsoft.JScript.NumberConstructor\n  isExternal: false\n  name: NEGATIVE_INFINITY\n  nameWithType: NumberConstructor.NEGATIVE_INFINITY\n  fullName: Microsoft.JScript.NumberConstructor.NEGATIVE_INFINITY\n- uid: Microsoft.JScript.NumberConstructor.POSITIVE_INFINITY\n  parent: Microsoft.JScript.NumberConstructor\n  isExternal: false\n  name: POSITIVE_INFINITY\n  nameWithType: NumberConstructor.POSITIVE_INFINITY\n  fullName: Microsoft.JScript.NumberConstructor.POSITIVE_INFINITY\n- uid: Microsoft.JScript.NumberConstructor.CreateInstance*\n  parent: Microsoft.JScript.NumberConstructor\n  isExternal: false\n  name: CreateInstance\n  nameWithType: NumberConstructor.CreateInstance\n- uid: Microsoft.JScript.NumberConstructor.Invoke*\n  parent: Microsoft.JScript.NumberConstructor\n  isExternal: false\n  name: Invoke\n  nameWithType: NumberConstructor.Invoke\n"}