{"nodes":[{"pos":[699,791],"content":"Specifies all the hash algorithms used for hashing files and for generating the strong name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies all the hash algorithms used for hashing files and for generating the strong name.","pos":[0,92]}]},{"pos":[804,1740],"content":"A `hash function``H` is a transformation that takes an input `m` and returns a fixed-size string, which is called the hash value `h` (that is, `h` = `H` (`m`)). Hash functions with just this property have a variety of general computational uses, but when employed in cryptography, the hash functions are usually chosen to have some additional properties.       The basic requirements for a cryptographic hash function are:      -   The input can be of any length.      -   The output has a fixed length.      -   `H` (`x)` is relatively easy to compute for any given x.      -   `H` (`x`) is one-way.      -   `H` (`x`) is collision-free.       The hash value represents concisely the longer message or document from which it was computed; this value is called the message digest. You can think of a message digest as a digital fingerprint of the larger document. Examples of well-known hash functions are MD2 and and SHA.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A <ph id=\"ph1\">`hash function``H`</ph> is a transformation that takes an input <ph id=\"ph2\">`m`</ph> and returns a fixed-size string, which is called the hash value <ph id=\"ph3\">`h`</ph> (that is, <ph id=\"ph4\">`h`</ph><ph id=\"ph5\"> = </ph><ph id=\"ph6\">`H`</ph> (<ph id=\"ph7\">`m`</ph>)).","pos":[0,160],"source":"A `hash function``H` is a transformation that takes an input `m` and returns a fixed-size string, which is called the hash value `h` (that is, `h` = `H` (`m`))."},{"content":"Hash functions with just this property have a variety of general computational uses, but when employed in cryptography, the hash functions are usually chosen to have some additional properties.","pos":[161,354]},{"content":"The basic requirements for a cryptographic hash function are:      -   The input can be of any length.","pos":[361,463]},{"content":"-   The output has a fixed length.","pos":[469,503]},{"content":"-   <ph id=\"ph1\">`H`</ph> (<ph id=\"ph2\">`x)`</ph> is relatively easy to compute for any given x.","pos":[509,569],"source":"      -   `H` (`x)` is relatively easy to compute for any given x."},{"content":"-   <ph id=\"ph1\">`H`</ph> (<ph id=\"ph2\">`x`</ph>) is one-way.","pos":[575,600],"source":"      -   `H` (`x`) is one-way."},{"content":"-   <ph id=\"ph1\">`H`</ph> (<ph id=\"ph2\">`x`</ph>) is collision-free.","pos":[606,638],"source":"      -   `H` (`x`) is collision-free."},{"content":"The hash value represents concisely the longer message or document from which it was computed; this value is called the message digest.","pos":[645,780]},{"content":"You can think of a message digest as a digital fingerprint of the larger document.","pos":[781,863]},{"content":"Examples of well-known hash functions are MD2 and and SHA.","pos":[864,922]}]},{"pos":[2299,2666],"content":"Retrieves the MD5 message-digest algorithm. MD5 was developed by Rivest in 1991. It is basically MD4 with safety-belts and while it is slightly slower than MD4, it helps provide more security. The algorithm consists of four distinct rounds, which has a slightly different design from that of MD4. Message-digest size, as well as padding requirements, remain the same.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the MD5 message-digest algorithm. MD5 was developed by Rivest in 1991. It is basically MD4 with safety-belts and while it is slightly slower than MD4, it helps provide more security. The algorithm consists of four distinct rounds, which has a slightly different design from that of MD4. Message-digest size, as well as padding requirements, remain the same.","pos":[0,367],"nodes":[{"content":"Retrieves the MD5 message-digest algorithm.","pos":[0,43]},{"content":"MD5 was developed by Rivest in 1991.","pos":[44,80]},{"content":"It is basically MD4 with safety-belts and while it is slightly slower than MD4, it helps provide more security.","pos":[81,192]},{"content":"The algorithm consists of four distinct rounds, which has a slightly different design from that of MD4.","pos":[193,296]},{"content":"Message-digest size, as well as padding requirements, remain the same.","pos":[297,367]}]}]},{"pos":[2791,2803],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3229,3499],"content":"A mask indicating that there is no hash algorithm. If you specify <xref uid=\"langword_csharp_None\" name=\"None\" href=\"\"></xref> for a multi-module assembly, the common language runtime defaults to the SHA1 algorithm, since multi-module assemblies need to generate a hash.","needQuote":true,"needEscape":true,"nodes":[{"content":"A mask indicating that there is no hash algorithm.","pos":[0,50]},{"content":"If you specify <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_None\" name=\"None\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for a multi-module assembly, the common language runtime defaults to the SHA1 algorithm, since multi-module assemblies need to generate a hash.","pos":[51,270],"source":" If you specify <xref uid=\"langword_csharp_None\" name=\"None\" href=\"\"></xref> for a multi-module assembly, the common language runtime defaults to the SHA1 algorithm, since multi-module assemblies need to generate a hash."}]},{"pos":[3625,3637],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4063,4168],"content":"A mask used to retrieve a revision of the Secure Hash Algorithm that corrects an unpublished flaw in SHA.","needQuote":true,"needEscape":true,"nodes":[{"content":"A mask used to retrieve a revision of the Secure Hash Algorithm that corrects an unpublished flaw in SHA.","pos":[0,105]}]},{"pos":[4294,4306],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4742,4834],"content":"A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 256 bits.","needQuote":true,"needEscape":true,"nodes":[{"content":"A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 256 bits.","pos":[0,92]}]},{"pos":[4962,4974],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5410,5502],"content":"A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 384 bits.","needQuote":true,"needEscape":true,"nodes":[{"content":"A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 384 bits.","pos":[0,92]}]},{"pos":[5630,5642],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6078,6170],"content":"A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 512 bits.","needQuote":true,"needEscape":true,"nodes":[{"content":"A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 512 bits.","pos":[0,92]}]},{"pos":[6298,6310],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm\n  id: AssemblyHashAlgorithm\n  children:\n  - System.Configuration.Assemblies.AssemblyHashAlgorithm.MD5\n  - System.Configuration.Assemblies.AssemblyHashAlgorithm.None\n  - System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1\n  - System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA256\n  - System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA384\n  - System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA512\n  langs:\n  - csharp\n  name: AssemblyHashAlgorithm\n  nameWithType: AssemblyHashAlgorithm\n  fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm\n  type: Enum\n  summary: Specifies all the hash algorithms used for hashing files and for generating the strong name.\n  remarks: \"A `hash function``H` is a transformation that takes an input `m` and returns a fixed-size string, which is called the hash value `h` (that is, `h` = `H` (`m`)). Hash functions with just this property have a variety of general computational uses, but when employed in cryptography, the hash functions are usually chosen to have some additional properties.  \\n  \\n The basic requirements for a cryptographic hash function are:  \\n  \\n-   The input can be of any length.  \\n  \\n-   The output has a fixed length.  \\n  \\n-   `H` (`x)` is relatively easy to compute for any given x.  \\n  \\n-   `H` (`x`) is one-way.  \\n  \\n-   `H` (`x`) is collision-free.  \\n  \\n The hash value represents concisely the longer message or document from which it was computed; this value is called the message digest. You can think of a message digest as a digital fingerprint of the larger document. Examples of well-known hash functions are MD2 and and SHA.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public enum AssemblyHashAlgorithm\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm.MD5\n  id: MD5\n  parent: System.Configuration.Assemblies.AssemblyHashAlgorithm\n  langs:\n  - csharp\n  name: MD5\n  nameWithType: AssemblyHashAlgorithm.MD5\n  fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm.MD5\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Configuration.Assemblies\n  summary: Retrieves the MD5 message-digest algorithm. MD5 was developed by Rivest in 1991. It is basically MD4 with safety-belts and while it is slightly slower than MD4, it helps provide more security. The algorithm consists of four distinct rounds, which has a slightly different design from that of MD4. Message-digest size, as well as padding requirements, remain the same.\n  syntax:\n    content: MD5\n    return:\n      type: System.Configuration.Assemblies.AssemblyHashAlgorithm\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm.None\n  id: None\n  parent: System.Configuration.Assemblies.AssemblyHashAlgorithm\n  langs:\n  - csharp\n  name: None\n  nameWithType: AssemblyHashAlgorithm.None\n  fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm.None\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Configuration.Assemblies\n  summary: A mask indicating that there is no hash algorithm. If you specify <xref uid=\"langword_csharp_None\" name=\"None\" href=\"\"></xref> for a multi-module assembly, the common language runtime defaults to the SHA1 algorithm, since multi-module assemblies need to generate a hash.\n  syntax:\n    content: None\n    return:\n      type: System.Configuration.Assemblies.AssemblyHashAlgorithm\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1\n  id: SHA1\n  parent: System.Configuration.Assemblies.AssemblyHashAlgorithm\n  langs:\n  - csharp\n  name: SHA1\n  nameWithType: AssemblyHashAlgorithm.SHA1\n  fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Configuration.Assemblies\n  summary: A mask used to retrieve a revision of the Secure Hash Algorithm that corrects an unpublished flaw in SHA.\n  syntax:\n    content: SHA1\n    return:\n      type: System.Configuration.Assemblies.AssemblyHashAlgorithm\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA256\n  id: SHA256\n  parent: System.Configuration.Assemblies.AssemblyHashAlgorithm\n  langs:\n  - csharp\n  name: SHA256\n  nameWithType: AssemblyHashAlgorithm.SHA256\n  fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA256\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Configuration.Assemblies\n  summary: A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 256 bits.\n  syntax:\n    content: SHA256\n    return:\n      type: System.Configuration.Assemblies.AssemblyHashAlgorithm\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA384\n  id: SHA384\n  parent: System.Configuration.Assemblies.AssemblyHashAlgorithm\n  langs:\n  - csharp\n  name: SHA384\n  nameWithType: AssemblyHashAlgorithm.SHA384\n  fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA384\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Configuration.Assemblies\n  summary: A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 384 bits.\n  syntax:\n    content: SHA384\n    return:\n      type: System.Configuration.Assemblies.AssemblyHashAlgorithm\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA512\n  id: SHA512\n  parent: System.Configuration.Assemblies.AssemblyHashAlgorithm\n  langs:\n  - csharp\n  name: SHA512\n  nameWithType: AssemblyHashAlgorithm.SHA512\n  fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA512\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Configuration.Assemblies\n  summary: A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 512 bits.\n  syntax:\n    content: SHA512\n    return:\n      type: System.Configuration.Assemblies.AssemblyHashAlgorithm\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm.MD5\n  parent: System.Configuration.Assemblies.AssemblyHashAlgorithm\n  isExternal: false\n  name: MD5\n  nameWithType: AssemblyHashAlgorithm.MD5\n  fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm.MD5\n- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm\n  parent: System.Configuration.Assemblies\n  isExternal: false\n  name: AssemblyHashAlgorithm\n  nameWithType: AssemblyHashAlgorithm\n  fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm\n- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm.None\n  parent: System.Configuration.Assemblies.AssemblyHashAlgorithm\n  isExternal: false\n  name: None\n  nameWithType: AssemblyHashAlgorithm.None\n  fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm.None\n- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1\n  parent: System.Configuration.Assemblies.AssemblyHashAlgorithm\n  isExternal: false\n  name: SHA1\n  nameWithType: AssemblyHashAlgorithm.SHA1\n  fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1\n- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA256\n  parent: System.Configuration.Assemblies.AssemblyHashAlgorithm\n  isExternal: false\n  name: SHA256\n  nameWithType: AssemblyHashAlgorithm.SHA256\n  fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA256\n- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA384\n  parent: System.Configuration.Assemblies.AssemblyHashAlgorithm\n  isExternal: false\n  name: SHA384\n  nameWithType: AssemblyHashAlgorithm.SHA384\n  fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA384\n- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA512\n  parent: System.Configuration.Assemblies.AssemblyHashAlgorithm\n  isExternal: false\n  name: SHA512\n  nameWithType: AssemblyHashAlgorithm.SHA512\n  fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA512\n"}