{"nodes":[{"pos":[1691,1962],"content":"A composite activity that contains a collection of event handlers. It is typically used where a collection of events must be handled. Each event is handled by one <xref href=\"System.Workflow.Activities.EventDrivenActivity\"></xref>, which is part of EventHandlersActivity.","needQuote":true,"needEscape":true,"nodes":[{"content":"A composite activity that contains a collection of event handlers.","pos":[0,66]},{"content":"It is typically used where a collection of events must be handled.","pos":[67,133]},{"content":"Each event is handled by one <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.EventDrivenActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, which is part of EventHandlersActivity.","pos":[134,271],"source":" Each event is handled by one <xref href=\"System.Workflow.Activities.EventDrivenActivity\"></xref>, which is part of EventHandlersActivity."}]},{"pos":[1975,2565],"content":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       The EventHandlersActivity activity holds a set of <xref:System.Workflow.Activities.EventDrivenActivity> classes, for use by the associated <xref:System.Workflow.ComponentModel.Activity>.       An EventHandlersActivity activity can only be associated with an <xref:System.Workflow.Activities.EventHandlingScopeActivity>.       The EventHandlersActivity activity is a <xref:System.Workflow.ComponentModel.CompositeActivity>, meaning the EventHandlersActivity activity can contain other activities.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">&gt; [!NOTE]</ph><ph id=\"ph2\"> &gt;  </ph><ph id=\"ph3\">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>       The EventHandlersActivity activity holds a set of &lt;xref:System.Workflow.Activities.EventDrivenActivity&gt; classes, for use by the associated &lt;xref:System.Workflow.ComponentModel.Activity&gt;.","pos":[0,274],"source":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       The EventHandlersActivity activity holds a set of <xref:System.Workflow.Activities.EventDrivenActivity> classes, for use by the associated <xref:System.Workflow.ComponentModel.Activity>."},{"content":"An EventHandlersActivity activity can only be associated with an &lt;xref:System.Workflow.Activities.EventHandlingScopeActivity&gt;.","pos":[281,407],"source":"       An EventHandlersActivity activity can only be associated with an <xref:System.Workflow.Activities.EventHandlingScopeActivity>."},{"content":"The EventHandlersActivity activity is a &lt;xref:System.Workflow.ComponentModel.CompositeActivity&gt;, meaning the EventHandlersActivity activity can contain other activities.","pos":[414,583],"source":"       The EventHandlersActivity activity is a <xref:System.Workflow.ComponentModel.CompositeActivity>, meaning the EventHandlersActivity activity can contain other activities."}]},{"pos":[10858,10968],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.EventHandlersActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.EventHandlersActivity\"></xref> class."},{"pos":[11650,11794],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.EventHandlersActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by using the name of the activity.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.EventHandlersActivity\"></xref> class by using the name of the activity."},{"pos":[11938,11976],"content":"The user-defined name of the activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user-defined name of the activity.","pos":[0,38]}]},{"pos":[12970,12982],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13081,13093],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14094,14106],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14205,14217],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14836,14949],"content":"Gets the currently executing instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.EventDrivenActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the currently executing instance of the <xref href=\"System.Workflow.Activities.EventDrivenActivity\"></xref>."},{"pos":[15156,15246],"content":"The name of the child <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.EventDrivenActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The name of the child <xref href=\"System.Workflow.Activities.EventDrivenActivity\"></xref>."},{"pos":[15330,15438],"content":"The currently executing instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.EventDrivenActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The currently executing instance of the <xref href=\"System.Workflow.Activities.EventDrivenActivity\"></xref>."},{"pos":[15636,15768],"content":"<ph id=\"ph1\">&lt;code&gt;childactivity&lt;/code&gt;</ph> is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"<code>childactivity</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[15863,15935],"content":"The executable activities do not contain the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">childactivity</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The executable activities do not contain the <code>childactivity</code>."},{"pos":[16643,16655],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17844,17856],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17952,17964],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19182,19194],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19292,19304],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20102,20114],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21181,21193],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22700,22712],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22827,22839],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.Activities.EventHandlersActivity\n  id: EventHandlersActivity\n  children:\n  - System.Workflow.Activities.EventHandlersActivity.#ctor\n  - System.Workflow.Activities.EventHandlersActivity.#ctor(System.String)\n  - System.Workflow.Activities.EventHandlersActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.EventHandlersActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.EventHandlersActivity.GetDynamicActivity(System.String)\n  - System.Workflow.Activities.EventHandlersActivity.Initialize(System.IServiceProvider)\n  - System.Workflow.Activities.EventHandlersActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.Activities.EventHandlersActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.Activities.EventHandlersActivity.OnClosed(System.IServiceProvider)\n  - System.Workflow.Activities.EventHandlersActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.EventHandlersActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)\n  langs:\n  - csharp\n  name: EventHandlersActivity\n  nameWithType: EventHandlersActivity\n  fullName: System.Workflow.Activities.EventHandlersActivity\n  type: Class\n  summary: A composite activity that contains a collection of event handlers. It is typically used where a collection of events must be handled. Each event is handled by one <xref href=\"System.Workflow.Activities.EventDrivenActivity\"></xref>, which is part of EventHandlersActivity.\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n The EventHandlersActivity activity holds a set of <xref:System.Workflow.Activities.EventDrivenActivity> classes, for use by the associated <xref:System.Workflow.ComponentModel.Activity>.  \\n  \\n An EventHandlersActivity activity can only be associated with an <xref:System.Workflow.Activities.EventHandlingScopeActivity>.  \\n  \\n The EventHandlersActivity activity is a <xref:System.Workflow.ComponentModel.CompositeActivity>, meaning the EventHandlersActivity activity can contain other activities.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.EventHandlersDesigner), typeof(System.ComponentModel.Design.IDesigner))]\n\n      [System.ComponentModel.ToolboxItem(false)]\n\n      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.EventHandlersActivity), \"Resources.events.png\")]\n\n      [System.Obsolete(\"The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*\")]\n\n      [System.Workflow.ComponentModel.AlternateFlowActivity]\n\n      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.EventHandlersValidator))]\n\n      public sealed class EventHandlersActivity : System.Workflow.ComponentModel.CompositeActivity, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>\n  inheritance:\n  - System.Object\n  - System.Workflow.ComponentModel.DependencyObject\n  - System.Workflow.ComponentModel.Activity\n  - System.Workflow.ComponentModel.CompositeActivity\n  implements:\n  - System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>\n  inheritedMembers:\n  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty\n  - System.Workflow.ComponentModel.Activity.Canceling\n  - System.Workflow.ComponentModel.Activity.CancelingEvent\n  - System.Workflow.ComponentModel.Activity.Clone\n  - System.Workflow.ComponentModel.Activity.Closed\n  - System.Workflow.ComponentModel.Activity.ClosedEvent\n  - System.Workflow.ComponentModel.Activity.Compensating\n  - System.Workflow.ComponentModel.Activity.CompensatingEvent\n  - System.Workflow.ComponentModel.Activity.Description\n  - System.Workflow.ComponentModel.Activity.Enabled\n  - System.Workflow.ComponentModel.Activity.Executing\n  - System.Workflow.ComponentModel.Activity.ExecutingEvent\n  - System.Workflow.ComponentModel.Activity.ExecutionResult\n  - System.Workflow.ComponentModel.Activity.ExecutionStatus\n  - System.Workflow.ComponentModel.Activity.Faulting\n  - System.Workflow.ComponentModel.Activity.FaultingEvent\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)\n  - System.Workflow.ComponentModel.Activity.IsDynamicActivity\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.Name\n  - System.Workflow.ComponentModel.Activity.Parent\n  - System.Workflow.ComponentModel.Activity.QualifiedName\n  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)\n  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)\n  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.StatusChanged\n  - System.Workflow.ComponentModel.Activity.StatusChangedEvent\n  - System.Workflow.ComponentModel.Activity.ToString\n  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)\n  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)\n  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId\n  - System.Workflow.ComponentModel.CompositeActivity.Activities\n  - System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)\n  - System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities\n  - System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)\n  - System.Workflow.ComponentModel.CompositeActivity.EnabledActivities\n  - System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  - System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  - System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.DesignMode\n  - System.Workflow.ComponentModel.DependencyObject.Dispose\n  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)\n  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties\n  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)\n  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject\n  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)\n  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.Site\n  - System.Workflow.ComponentModel.DependencyObject.UserData\n  platform:\n  - net462\n- uid: System.Workflow.Activities.EventHandlersActivity.#ctor\n  id: '#ctor'\n  parent: System.Workflow.Activities.EventHandlersActivity\n  langs:\n  - csharp\n  name: EventHandlersActivity()\n  nameWithType: EventHandlersActivity.EventHandlersActivity()\n  fullName: System.Workflow.Activities.EventHandlersActivity.EventHandlersActivity()\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.EventHandlersActivity\"></xref> class.\n  syntax:\n    content: public EventHandlersActivity ();\n    parameters: []\n  overload: System.Workflow.Activities.EventHandlersActivity.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.EventHandlersActivity.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Workflow.Activities.EventHandlersActivity\n  langs:\n  - csharp\n  name: EventHandlersActivity(String)\n  nameWithType: EventHandlersActivity.EventHandlersActivity(String)\n  fullName: System.Workflow.Activities.EventHandlersActivity.EventHandlersActivity(String)\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.EventHandlersActivity\"></xref> class by using the name of the activity.\n  syntax:\n    content: public EventHandlersActivity (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The user-defined name of the activity.\n  overload: System.Workflow.Activities.EventHandlersActivity.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.EventHandlersActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  id: Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.EventHandlersActivity\n  langs:\n  - csharp\n  name: Cancel(ActivityExecutionContext)\n  nameWithType: EventHandlersActivity.Cancel(ActivityExecutionContext)\n  fullName: System.Workflow.Activities.EventHandlersActivity.Cancel(ActivityExecutionContext)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  syntax:\n    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: To be added.\n    return:\n      type: System.Workflow.ComponentModel.ActivityExecutionStatus\n      description: To be added.\n  overload: System.Workflow.Activities.EventHandlersActivity.Cancel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.EventHandlersActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.EventHandlersActivity\n  langs:\n  - csharp\n  name: Execute(ActivityExecutionContext)\n  nameWithType: EventHandlersActivity.Execute(ActivityExecutionContext)\n  fullName: System.Workflow.Activities.EventHandlersActivity.Execute(ActivityExecutionContext)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  syntax:\n    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: To be added.\n    return:\n      type: System.Workflow.ComponentModel.ActivityExecutionStatus\n      description: To be added.\n  overload: System.Workflow.Activities.EventHandlersActivity.Execute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.EventHandlersActivity.GetDynamicActivity(System.String)\n  id: GetDynamicActivity(System.String)\n  parent: System.Workflow.Activities.EventHandlersActivity\n  langs:\n  - csharp\n  name: GetDynamicActivity(String)\n  nameWithType: EventHandlersActivity.GetDynamicActivity(String)\n  fullName: System.Workflow.Activities.EventHandlersActivity.GetDynamicActivity(String)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets the currently executing instance of the <xref href=\"System.Workflow.Activities.EventDrivenActivity\"></xref>.\n  syntax:\n    content: public System.Workflow.ComponentModel.Activity GetDynamicActivity (string childActivityName);\n    parameters:\n    - id: childActivityName\n      type: System.String\n      description: The name of the child <xref href=\"System.Workflow.Activities.EventDrivenActivity\"></xref>.\n    return:\n      type: System.Workflow.ComponentModel.Activity\n      description: The currently executing instance of the <xref href=\"System.Workflow.Activities.EventDrivenActivity\"></xref>.\n  overload: System.Workflow.Activities.EventHandlersActivity.GetDynamicActivity*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>childactivity</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The executable activities do not contain the <code>childactivity</code>.\n  platform:\n  - net462\n- uid: System.Workflow.Activities.EventHandlersActivity.Initialize(System.IServiceProvider)\n  id: Initialize(System.IServiceProvider)\n  parent: System.Workflow.Activities.EventHandlersActivity\n  langs:\n  - csharp\n  name: Initialize(IServiceProvider)\n  nameWithType: EventHandlersActivity.Initialize(IServiceProvider)\n  fullName: System.Workflow.Activities.EventHandlersActivity.Initialize(IServiceProvider)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  syntax:\n    content: protected override void Initialize (IServiceProvider provider);\n    parameters:\n    - id: provider\n      type: System.IServiceProvider\n      description: To be added.\n  overload: System.Workflow.Activities.EventHandlersActivity.Initialize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.EventHandlersActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  id: OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.Activities.EventHandlersActivity\n  langs:\n  - csharp\n  name: OnActivityChangeAdd(ActivityExecutionContext,Activity)\n  nameWithType: EventHandlersActivity.OnActivityChangeAdd(ActivityExecutionContext,Activity)\n  fullName: System.Workflow.Activities.EventHandlersActivity.OnActivityChangeAdd(ActivityExecutionContext,Activity)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  syntax:\n    content: protected override void OnActivityChangeAdd (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, System.Workflow.ComponentModel.Activity addedActivity);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: To be added.\n    - id: addedActivity\n      type: System.Workflow.ComponentModel.Activity\n      description: To be added.\n  overload: System.Workflow.Activities.EventHandlersActivity.OnActivityChangeAdd*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.EventHandlersActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  id: OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.Activities.EventHandlersActivity\n  langs:\n  - csharp\n  name: OnActivityChangeRemove(ActivityExecutionContext,Activity)\n  nameWithType: EventHandlersActivity.OnActivityChangeRemove(ActivityExecutionContext,Activity)\n  fullName: System.Workflow.Activities.EventHandlersActivity.OnActivityChangeRemove(ActivityExecutionContext,Activity)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  syntax:\n    content: protected override void OnActivityChangeRemove (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, System.Workflow.ComponentModel.Activity removedActivity);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: To be added.\n    - id: removedActivity\n      type: System.Workflow.ComponentModel.Activity\n      description: To be added.\n  overload: System.Workflow.Activities.EventHandlersActivity.OnActivityChangeRemove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.EventHandlersActivity.OnClosed(System.IServiceProvider)\n  id: OnClosed(System.IServiceProvider)\n  parent: System.Workflow.Activities.EventHandlersActivity\n  langs:\n  - csharp\n  name: OnClosed(IServiceProvider)\n  nameWithType: EventHandlersActivity.OnClosed(IServiceProvider)\n  fullName: System.Workflow.Activities.EventHandlersActivity.OnClosed(IServiceProvider)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  syntax:\n    content: protected override void OnClosed (IServiceProvider provider);\n    parameters:\n    - id: provider\n      type: System.IServiceProvider\n      description: To be added.\n  overload: System.Workflow.Activities.EventHandlersActivity.OnClosed*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.EventHandlersActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  id: OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.EventHandlersActivity\n  langs:\n  - csharp\n  name: OnWorkflowChangesCompleted(ActivityExecutionContext)\n  nameWithType: EventHandlersActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)\n  fullName: System.Workflow.Activities.EventHandlersActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  syntax:\n    content: protected override void OnWorkflowChangesCompleted (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: To be added.\n  overload: System.Workflow.Activities.EventHandlersActivity.OnWorkflowChangesCompleted*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.EventHandlersActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)\n  id: System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)\n  isEii: true\n  parent: System.Workflow.Activities.EventHandlersActivity\n  langs:\n  - csharp\n  name: System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)\n  nameWithType: EventHandlersActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)\n  fullName: System.Workflow.Activities.EventHandlersActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  syntax:\n    content: void IActivityEventListener<ActivityExecutionStatusChangedEventArgs>.OnEvent (object sender, System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs e);\n    parameters:\n    - id: sender\n      type: System.Object\n      description: To be added.\n    - id: e\n      type: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs\n      description: To be added.\n  overload: System.Workflow.Activities.EventHandlersActivity.System#Workflow#ComponentModel#IActivityEventListener<System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs>#OnEvent*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: System.Workflow.ComponentModel.CompositeActivity\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Workflow.Activities.EventHandlersActivity.#ctor\n  parent: System.Workflow.Activities.EventHandlersActivity\n  isExternal: false\n  name: EventHandlersActivity()\n  nameWithType: EventHandlersActivity.EventHandlersActivity()\n  fullName: System.Workflow.Activities.EventHandlersActivity.EventHandlersActivity()\n- uid: System.Workflow.Activities.EventHandlersActivity.#ctor(System.String)\n  parent: System.Workflow.Activities.EventHandlersActivity\n  isExternal: false\n  name: EventHandlersActivity(String)\n  nameWithType: EventHandlersActivity.EventHandlersActivity(String)\n  fullName: System.Workflow.Activities.EventHandlersActivity.EventHandlersActivity(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Workflow.Activities.EventHandlersActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.EventHandlersActivity\n  isExternal: false\n  name: Cancel(ActivityExecutionContext)\n  nameWithType: EventHandlersActivity.Cancel(ActivityExecutionContext)\n  fullName: System.Workflow.Activities.EventHandlersActivity.Cancel(ActivityExecutionContext)\n- uid: System.Workflow.ComponentModel.ActivityExecutionStatus\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionStatus\n  nameWithType: ActivityExecutionStatus\n  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus\n- uid: System.Workflow.ComponentModel.ActivityExecutionContext\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionContext\n  nameWithType: ActivityExecutionContext\n  fullName: System.Workflow.ComponentModel.ActivityExecutionContext\n- uid: System.Workflow.Activities.EventHandlersActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.EventHandlersActivity\n  isExternal: false\n  name: Execute(ActivityExecutionContext)\n  nameWithType: EventHandlersActivity.Execute(ActivityExecutionContext)\n  fullName: System.Workflow.Activities.EventHandlersActivity.Execute(ActivityExecutionContext)\n- uid: System.Workflow.Activities.EventHandlersActivity.GetDynamicActivity(System.String)\n  parent: System.Workflow.Activities.EventHandlersActivity\n  isExternal: false\n  name: GetDynamicActivity(String)\n  nameWithType: EventHandlersActivity.GetDynamicActivity(String)\n  fullName: System.Workflow.Activities.EventHandlersActivity.GetDynamicActivity(String)\n- uid: System.Workflow.ComponentModel.Activity\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Workflow.ComponentModel.Activity\n- uid: System.Workflow.Activities.EventHandlersActivity.Initialize(System.IServiceProvider)\n  parent: System.Workflow.Activities.EventHandlersActivity\n  isExternal: false\n  name: Initialize(IServiceProvider)\n  nameWithType: EventHandlersActivity.Initialize(IServiceProvider)\n  fullName: System.Workflow.Activities.EventHandlersActivity.Initialize(IServiceProvider)\n- uid: System.IServiceProvider\n  parent: System\n  isExternal: true\n  name: IServiceProvider\n  nameWithType: IServiceProvider\n  fullName: System.IServiceProvider\n- uid: System.Workflow.Activities.EventHandlersActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.Activities.EventHandlersActivity\n  isExternal: false\n  name: OnActivityChangeAdd(ActivityExecutionContext,Activity)\n  nameWithType: EventHandlersActivity.OnActivityChangeAdd(ActivityExecutionContext,Activity)\n  fullName: System.Workflow.Activities.EventHandlersActivity.OnActivityChangeAdd(ActivityExecutionContext,Activity)\n- uid: System.Workflow.Activities.EventHandlersActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.Activities.EventHandlersActivity\n  isExternal: false\n  name: OnActivityChangeRemove(ActivityExecutionContext,Activity)\n  nameWithType: EventHandlersActivity.OnActivityChangeRemove(ActivityExecutionContext,Activity)\n  fullName: System.Workflow.Activities.EventHandlersActivity.OnActivityChangeRemove(ActivityExecutionContext,Activity)\n- uid: System.Workflow.Activities.EventHandlersActivity.OnClosed(System.IServiceProvider)\n  parent: System.Workflow.Activities.EventHandlersActivity\n  isExternal: false\n  name: OnClosed(IServiceProvider)\n  nameWithType: EventHandlersActivity.OnClosed(IServiceProvider)\n  fullName: System.Workflow.Activities.EventHandlersActivity.OnClosed(IServiceProvider)\n- uid: System.Workflow.Activities.EventHandlersActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.EventHandlersActivity\n  isExternal: false\n  name: OnWorkflowChangesCompleted(ActivityExecutionContext)\n  nameWithType: EventHandlersActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)\n  fullName: System.Workflow.Activities.EventHandlersActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)\n- uid: System.Workflow.Activities.EventHandlersActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)\n  parent: System.Workflow.Activities.EventHandlersActivity\n  isExternal: false\n  name: System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)\n  nameWithType: EventHandlersActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)\n  fullName: System.Workflow.Activities.EventHandlersActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionStatusChangedEventArgs\n  nameWithType: ActivityExecutionStatusChangedEventArgs\n  fullName: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs\n- uid: System.Workflow.Activities.EventHandlersActivity.#ctor*\n  parent: System.Workflow.Activities.EventHandlersActivity\n  isExternal: false\n  name: EventHandlersActivity\n  nameWithType: EventHandlersActivity.EventHandlersActivity\n- uid: System.Workflow.Activities.EventHandlersActivity.Cancel*\n  parent: System.Workflow.Activities.EventHandlersActivity\n  isExternal: false\n  name: Cancel\n  nameWithType: EventHandlersActivity.Cancel\n- uid: System.Workflow.Activities.EventHandlersActivity.Execute*\n  parent: System.Workflow.Activities.EventHandlersActivity\n  isExternal: false\n  name: Execute\n  nameWithType: EventHandlersActivity.Execute\n- uid: System.Workflow.Activities.EventHandlersActivity.GetDynamicActivity*\n  parent: System.Workflow.Activities.EventHandlersActivity\n  isExternal: false\n  name: GetDynamicActivity\n  nameWithType: EventHandlersActivity.GetDynamicActivity\n- uid: System.Workflow.Activities.EventHandlersActivity.Initialize*\n  parent: System.Workflow.Activities.EventHandlersActivity\n  isExternal: false\n  name: Initialize\n  nameWithType: EventHandlersActivity.Initialize\n- uid: System.Workflow.Activities.EventHandlersActivity.OnActivityChangeAdd*\n  parent: System.Workflow.Activities.EventHandlersActivity\n  isExternal: false\n  name: OnActivityChangeAdd\n  nameWithType: EventHandlersActivity.OnActivityChangeAdd\n- uid: System.Workflow.Activities.EventHandlersActivity.OnActivityChangeRemove*\n  parent: System.Workflow.Activities.EventHandlersActivity\n  isExternal: false\n  name: OnActivityChangeRemove\n  nameWithType: EventHandlersActivity.OnActivityChangeRemove\n- uid: System.Workflow.Activities.EventHandlersActivity.OnClosed*\n  parent: System.Workflow.Activities.EventHandlersActivity\n  isExternal: false\n  name: OnClosed\n  nameWithType: EventHandlersActivity.OnClosed\n- uid: System.Workflow.Activities.EventHandlersActivity.OnWorkflowChangesCompleted*\n  parent: System.Workflow.Activities.EventHandlersActivity\n  isExternal: false\n  name: OnWorkflowChangesCompleted\n  nameWithType: EventHandlersActivity.OnWorkflowChangesCompleted\n- uid: System.Workflow.Activities.EventHandlersActivity.System#Workflow#ComponentModel#IActivityEventListener<System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs>#OnEvent*\n  parent: System.Workflow.Activities.EventHandlersActivity\n  isExternal: false\n  name: System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>.OnEvent\n  nameWithType: EventHandlersActivity.System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>.OnEvent\n"}