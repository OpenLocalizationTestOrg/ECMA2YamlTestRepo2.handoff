{"nodes":[{"pos":[1002,1108],"content":"Contains configuration elements for the NetTcpPortSharing sharing service. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains configuration elements for the NetTcpPortSharing sharing service. This class cannot be inherited.","pos":[0,106],"nodes":[{"content":"Contains configuration elements for the NetTcpPortSharing sharing service.","pos":[0,74]},{"content":"This class cannot be inherited.","pos":[75,106]}]}]},{"pos":[1120,1266],"content":"The NET.TCP Port Sharing Service allows multiple processes to share the same TCP port. This class contains properties that configure this service.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The NET.TCP Port Sharing Service allows multiple processes to share the same TCP port. This class contains properties that configure this service.","pos":[0,146],"nodes":[{"content":"The NET.TCP Port Sharing Service allows multiple processes to share the same TCP port.","pos":[0,86]},{"content":"This class contains properties that configure this service.","pos":[87,146]}]}]},{"pos":[5555,5675],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Activation.Configuration.NetTcpSection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Activation.Configuration.NetTcpSection\"></xref> class."},{"pos":[6325,6497],"content":"Gets the user accounts for processes that host <ph id=\"ph1\">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> services and are granted connection access to the sharing service.","needQuote":true,"needEscape":true,"source":"Gets the user accounts for processes that host [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] services and are granted connection access to the sharing service."},{"pos":[6756,7111],"content":"A <xref href=\"System.ServiceModel.Activation.Configuration.SecurityIdentifierElementCollection\"></xref> that contains user accounts for processes that host [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] services and are granted connection access to the sharing service. The default values returned are LocalSystem, Admin, NS, LS, and IIS_USRS.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Activation.Configuration.SecurityIdentifierElementCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains user accounts for processes that host <ph id=\"ph1\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> services and are granted connection access to the sharing service.","pos":[0,281],"source":"A <xref href=\"System.ServiceModel.Activation.Configuration.SecurityIdentifierElementCollection\"></xref> that contains user accounts for processes that host [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] services and are granted connection access to the sharing service."},{"content":"The default values returned are LocalSystem, Admin, NS, LS, and IIS_USRS.","pos":[282,355]}]},{"pos":[8397,8590],"content":"Gets or sets the maximum outstanding connections that are accepted from the shared connection, but are not yet dispatched to <ph id=\"ph1\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> services.","needQuote":true,"needEscape":true,"source":"Gets or sets the maximum outstanding connections that are accepted from the shared connection, but are not yet dispatched to [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] services."},{"pos":[8709,8899],"content":"The maximum outstanding connections that are accepted from the shared connection, but are not yet dispatched to [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]. The default is 10.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum outstanding connections that are accepted from the shared connection, but are not yet dispatched to <ph id=\"ph1\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph>.","pos":[0,171],"source":"The maximum outstanding connections that are accepted from the shared connection, but are not yet dispatched to [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]."},{"content":"The default is 10.","pos":[172,190]}]},{"pos":[9510,9626],"content":"Gets or sets the maximum outstanding concurrent accepting threads on the listening endpoint for the sharing service.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the maximum outstanding concurrent accepting threads on the listening endpoint for the sharing service.","pos":[0,116]}]},{"pos":[9749,9870],"content":"The maximum outstanding concurrent accepting threads on the listening endpoint for the sharing service. The default is 2.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum outstanding concurrent accepting threads on the listening endpoint for the sharing service. The default is 2.","pos":[0,121],"nodes":[{"content":"The maximum outstanding concurrent accepting threads on the listening endpoint for the sharing service.","pos":[0,103]},{"content":"The default is 2.","pos":[104,121]}]}]},{"pos":[10505,10585],"content":"Gets or sets the maximum number of pending connections for this sharing service.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the maximum number of pending connections for this sharing service.","pos":[0,80]}]},{"pos":[10597,10622],"content":"The default value is 100.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default value is 100.","pos":[0,25]}]},{"pos":[10749,10816],"content":"The maximum number of pending connections for this sharing service.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum number of pending connections for this sharing service.","pos":[0,67]}]},{"pos":[11600,11612],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12205,12272],"content":"Gets or sets the timeout for the NetTcpPortSharing sharing service.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the timeout for the NetTcpPortSharing sharing service.","pos":[0,67]}]},{"pos":[12284,12419],"content":"This property specifies the timeout for reading the framing data and performing connection dispatching from the underlying connections.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property specifies the timeout for reading the framing data and performing connection dispatching from the underlying connections.","pos":[0,135]}]},{"pos":[12547,12573],"content":"The default is 10 seconds.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default is 10 seconds.","pos":[0,26]}]},{"pos":[13165,13376],"content":"Gets or sets a Boolean value that indicates whether the port sharing service uses Microsoft Teredo service to listen on TCP ports on behalf of <ph id=\"ph1\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> services.","needQuote":true,"needEscape":true,"source":"Gets or sets a Boolean value that indicates whether the port sharing service uses Microsoft Teredo service to listen on TCP ports on behalf of [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] services."},{"pos":[13498,13875],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the port sharing service uses Microsoft Teredo service to listen on TCP ports on behalf of [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] services; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the port sharing service uses Microsoft Teredo service to listen on TCP ports on behalf of <ph id=\"ph1\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> services; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,298],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the port sharing service uses Microsoft Teredo service to listen on TCP ports on behalf of [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] services; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[299,377],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Activation.Configuration.NetTcpSection\n  id: NetTcpSection\n  children:\n  - System.ServiceModel.Activation.Configuration.NetTcpSection.#ctor\n  - System.ServiceModel.Activation.Configuration.NetTcpSection.AllowAccounts\n  - System.ServiceModel.Activation.Configuration.NetTcpSection.InitializeDefault\n  - System.ServiceModel.Activation.Configuration.NetTcpSection.ListenBacklog\n  - System.ServiceModel.Activation.Configuration.NetTcpSection.MaxPendingAccepts\n  - System.ServiceModel.Activation.Configuration.NetTcpSection.MaxPendingConnections\n  - System.ServiceModel.Activation.Configuration.NetTcpSection.Properties\n  - System.ServiceModel.Activation.Configuration.NetTcpSection.ReceiveTimeout\n  - System.ServiceModel.Activation.Configuration.NetTcpSection.TeredoEnabled\n  langs:\n  - csharp\n  name: NetTcpSection\n  nameWithType: NetTcpSection\n  fullName: System.ServiceModel.Activation.Configuration.NetTcpSection\n  type: Class\n  summary: Contains configuration elements for the NetTcpPortSharing sharing service. This class cannot be inherited.\n  remarks: The NET.TCP Port Sharing Service allows multiple processes to share the same TCP port. This class contains properties that configure this service.\n  syntax:\n    content: 'public sealed class NetTcpSection : System.Configuration.ConfigurationSection'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  - System.Configuration.ConfigurationSection\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  - System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)\n  - System.Configuration.ConfigurationSection.GetRuntimeObject\n  - System.Configuration.ConfigurationSection.IsModified\n  - System.Configuration.ConfigurationSection.ResetModified\n  - System.Configuration.ConfigurationSection.SectionInformation\n  - System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)\n  - System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)\n  - System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)\n  platform:\n  - net462\n- uid: System.ServiceModel.Activation.Configuration.NetTcpSection.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Activation.Configuration.NetTcpSection\n  langs:\n  - csharp\n  name: NetTcpSection()\n  nameWithType: NetTcpSection.NetTcpSection()\n  fullName: System.ServiceModel.Activation.Configuration.NetTcpSection.NetTcpSection()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Activation.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Activation.Configuration.NetTcpSection\"></xref> class.\n  syntax:\n    content: public NetTcpSection ();\n    parameters: []\n  overload: System.ServiceModel.Activation.Configuration.NetTcpSection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Activation.Configuration.NetTcpSection.AllowAccounts\n  id: AllowAccounts\n  parent: System.ServiceModel.Activation.Configuration.NetTcpSection\n  langs:\n  - csharp\n  name: AllowAccounts\n  nameWithType: NetTcpSection.AllowAccounts\n  fullName: System.ServiceModel.Activation.Configuration.NetTcpSection.AllowAccounts\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Activation.Configuration\n  summary: Gets the user accounts for processes that host [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] services and are granted connection access to the sharing service.\n  syntax:\n    content: public System.ServiceModel.Activation.Configuration.SecurityIdentifierElementCollection AllowAccounts { get; }\n    return:\n      type: System.ServiceModel.Activation.Configuration.SecurityIdentifierElementCollection\n      description: A <xref href=\"System.ServiceModel.Activation.Configuration.SecurityIdentifierElementCollection\"></xref> that contains user accounts for processes that host [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] services and are granted connection access to the sharing service. The default values returned are LocalSystem, Admin, NS, LS, and IIS_USRS.\n  overload: System.ServiceModel.Activation.Configuration.NetTcpSection.AllowAccounts*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Activation.Configuration.NetTcpSection.InitializeDefault\n  id: InitializeDefault\n  parent: System.ServiceModel.Activation.Configuration.NetTcpSection\n  langs:\n  - csharp\n  name: InitializeDefault()\n  nameWithType: NetTcpSection.InitializeDefault()\n  fullName: System.ServiceModel.Activation.Configuration.NetTcpSection.InitializeDefault()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Activation.Configuration\n  syntax:\n    content: protected override void InitializeDefault ();\n    parameters: []\n  overload: System.ServiceModel.Activation.Configuration.NetTcpSection.InitializeDefault*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Activation.Configuration.NetTcpSection.ListenBacklog\n  id: ListenBacklog\n  parent: System.ServiceModel.Activation.Configuration.NetTcpSection\n  langs:\n  - csharp\n  name: ListenBacklog\n  nameWithType: NetTcpSection.ListenBacklog\n  fullName: System.ServiceModel.Activation.Configuration.NetTcpSection.ListenBacklog\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Activation.Configuration\n  summary: Gets or sets the maximum outstanding connections that are accepted from the shared connection, but are not yet dispatched to [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] services.\n  syntax:\n    content: public int ListenBacklog { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum outstanding connections that are accepted from the shared connection, but are not yet dispatched to [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]. The default is 10.\n  overload: System.ServiceModel.Activation.Configuration.NetTcpSection.ListenBacklog*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Activation.Configuration.NetTcpSection.MaxPendingAccepts\n  id: MaxPendingAccepts\n  parent: System.ServiceModel.Activation.Configuration.NetTcpSection\n  langs:\n  - csharp\n  name: MaxPendingAccepts\n  nameWithType: NetTcpSection.MaxPendingAccepts\n  fullName: System.ServiceModel.Activation.Configuration.NetTcpSection.MaxPendingAccepts\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Activation.Configuration\n  summary: Gets or sets the maximum outstanding concurrent accepting threads on the listening endpoint for the sharing service.\n  syntax:\n    content: public int MaxPendingAccepts { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum outstanding concurrent accepting threads on the listening endpoint for the sharing service. The default is 2.\n  overload: System.ServiceModel.Activation.Configuration.NetTcpSection.MaxPendingAccepts*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Activation.Configuration.NetTcpSection.MaxPendingConnections\n  id: MaxPendingConnections\n  parent: System.ServiceModel.Activation.Configuration.NetTcpSection\n  langs:\n  - csharp\n  name: MaxPendingConnections\n  nameWithType: NetTcpSection.MaxPendingConnections\n  fullName: System.ServiceModel.Activation.Configuration.NetTcpSection.MaxPendingConnections\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Activation.Configuration\n  summary: Gets or sets the maximum number of pending connections for this sharing service.\n  remarks: The default value is 100.\n  syntax:\n    content: public int MaxPendingConnections { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum number of pending connections for this sharing service.\n  overload: System.ServiceModel.Activation.Configuration.NetTcpSection.MaxPendingConnections*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Activation.Configuration.NetTcpSection.Properties\n  id: Properties\n  parent: System.ServiceModel.Activation.Configuration.NetTcpSection\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: NetTcpSection.Properties\n  fullName: System.ServiceModel.Activation.Configuration.NetTcpSection.Properties\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Activation.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: To be added.\n  overload: System.ServiceModel.Activation.Configuration.NetTcpSection.Properties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Activation.Configuration.NetTcpSection.ReceiveTimeout\n  id: ReceiveTimeout\n  parent: System.ServiceModel.Activation.Configuration.NetTcpSection\n  langs:\n  - csharp\n  name: ReceiveTimeout\n  nameWithType: NetTcpSection.ReceiveTimeout\n  fullName: System.ServiceModel.Activation.Configuration.NetTcpSection.ReceiveTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Activation.Configuration\n  summary: Gets or sets the timeout for the NetTcpPortSharing sharing service.\n  remarks: This property specifies the timeout for reading the framing data and performing connection dispatching from the underlying connections.\n  syntax:\n    content: public TimeSpan ReceiveTimeout { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The default is 10 seconds.\n  overload: System.ServiceModel.Activation.Configuration.NetTcpSection.ReceiveTimeout*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Activation.Configuration.NetTcpSection.TeredoEnabled\n  id: TeredoEnabled\n  parent: System.ServiceModel.Activation.Configuration.NetTcpSection\n  langs:\n  - csharp\n  name: TeredoEnabled\n  nameWithType: NetTcpSection.TeredoEnabled\n  fullName: System.ServiceModel.Activation.Configuration.NetTcpSection.TeredoEnabled\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Activation.Configuration\n  summary: Gets or sets a Boolean value that indicates whether the port sharing service uses Microsoft Teredo service to listen on TCP ports on behalf of [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] services.\n  syntax:\n    content: public bool TeredoEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the port sharing service uses Microsoft Teredo service to listen on TCP ports on behalf of [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] services; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Activation.Configuration.NetTcpSection.TeredoEnabled*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: System.Configuration.ConfigurationSection\n- uid: System.ServiceModel.Activation.Configuration.NetTcpSection.#ctor\n  parent: System.ServiceModel.Activation.Configuration.NetTcpSection\n  isExternal: false\n  name: NetTcpSection()\n  nameWithType: NetTcpSection.NetTcpSection()\n  fullName: System.ServiceModel.Activation.Configuration.NetTcpSection.NetTcpSection()\n- uid: System.ServiceModel.Activation.Configuration.NetTcpSection.AllowAccounts\n  parent: System.ServiceModel.Activation.Configuration.NetTcpSection\n  isExternal: false\n  name: AllowAccounts\n  nameWithType: NetTcpSection.AllowAccounts\n  fullName: System.ServiceModel.Activation.Configuration.NetTcpSection.AllowAccounts\n- uid: System.ServiceModel.Activation.Configuration.SecurityIdentifierElementCollection\n  parent: System.ServiceModel.Activation.Configuration\n  isExternal: false\n  name: SecurityIdentifierElementCollection\n  nameWithType: SecurityIdentifierElementCollection\n  fullName: System.ServiceModel.Activation.Configuration.SecurityIdentifierElementCollection\n- uid: System.ServiceModel.Activation.Configuration.NetTcpSection.InitializeDefault\n  parent: System.ServiceModel.Activation.Configuration.NetTcpSection\n  isExternal: false\n  name: InitializeDefault()\n  nameWithType: NetTcpSection.InitializeDefault()\n  fullName: System.ServiceModel.Activation.Configuration.NetTcpSection.InitializeDefault()\n- uid: System.ServiceModel.Activation.Configuration.NetTcpSection.ListenBacklog\n  parent: System.ServiceModel.Activation.Configuration.NetTcpSection\n  isExternal: false\n  name: ListenBacklog\n  nameWithType: NetTcpSection.ListenBacklog\n  fullName: System.ServiceModel.Activation.Configuration.NetTcpSection.ListenBacklog\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceModel.Activation.Configuration.NetTcpSection.MaxPendingAccepts\n  parent: System.ServiceModel.Activation.Configuration.NetTcpSection\n  isExternal: false\n  name: MaxPendingAccepts\n  nameWithType: NetTcpSection.MaxPendingAccepts\n  fullName: System.ServiceModel.Activation.Configuration.NetTcpSection.MaxPendingAccepts\n- uid: System.ServiceModel.Activation.Configuration.NetTcpSection.MaxPendingConnections\n  parent: System.ServiceModel.Activation.Configuration.NetTcpSection\n  isExternal: false\n  name: MaxPendingConnections\n  nameWithType: NetTcpSection.MaxPendingConnections\n  fullName: System.ServiceModel.Activation.Configuration.NetTcpSection.MaxPendingConnections\n- uid: System.ServiceModel.Activation.Configuration.NetTcpSection.Properties\n  parent: System.ServiceModel.Activation.Configuration.NetTcpSection\n  isExternal: false\n  name: Properties\n  nameWithType: NetTcpSection.Properties\n  fullName: System.ServiceModel.Activation.Configuration.NetTcpSection.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.ServiceModel.Activation.Configuration.NetTcpSection.ReceiveTimeout\n  parent: System.ServiceModel.Activation.Configuration.NetTcpSection\n  isExternal: false\n  name: ReceiveTimeout\n  nameWithType: NetTcpSection.ReceiveTimeout\n  fullName: System.ServiceModel.Activation.Configuration.NetTcpSection.ReceiveTimeout\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.ServiceModel.Activation.Configuration.NetTcpSection.TeredoEnabled\n  parent: System.ServiceModel.Activation.Configuration.NetTcpSection\n  isExternal: false\n  name: TeredoEnabled\n  nameWithType: NetTcpSection.TeredoEnabled\n  fullName: System.ServiceModel.Activation.Configuration.NetTcpSection.TeredoEnabled\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Activation.Configuration.NetTcpSection.#ctor*\n  parent: System.ServiceModel.Activation.Configuration.NetTcpSection\n  isExternal: false\n  name: NetTcpSection\n  nameWithType: NetTcpSection.NetTcpSection\n- uid: System.ServiceModel.Activation.Configuration.NetTcpSection.AllowAccounts*\n  parent: System.ServiceModel.Activation.Configuration.NetTcpSection\n  isExternal: false\n  name: AllowAccounts\n  nameWithType: NetTcpSection.AllowAccounts\n- uid: System.ServiceModel.Activation.Configuration.NetTcpSection.InitializeDefault*\n  parent: System.ServiceModel.Activation.Configuration.NetTcpSection\n  isExternal: false\n  name: InitializeDefault\n  nameWithType: NetTcpSection.InitializeDefault\n- uid: System.ServiceModel.Activation.Configuration.NetTcpSection.ListenBacklog*\n  parent: System.ServiceModel.Activation.Configuration.NetTcpSection\n  isExternal: false\n  name: ListenBacklog\n  nameWithType: NetTcpSection.ListenBacklog\n- uid: System.ServiceModel.Activation.Configuration.NetTcpSection.MaxPendingAccepts*\n  parent: System.ServiceModel.Activation.Configuration.NetTcpSection\n  isExternal: false\n  name: MaxPendingAccepts\n  nameWithType: NetTcpSection.MaxPendingAccepts\n- uid: System.ServiceModel.Activation.Configuration.NetTcpSection.MaxPendingConnections*\n  parent: System.ServiceModel.Activation.Configuration.NetTcpSection\n  isExternal: false\n  name: MaxPendingConnections\n  nameWithType: NetTcpSection.MaxPendingConnections\n- uid: System.ServiceModel.Activation.Configuration.NetTcpSection.Properties*\n  parent: System.ServiceModel.Activation.Configuration.NetTcpSection\n  isExternal: false\n  name: Properties\n  nameWithType: NetTcpSection.Properties\n- uid: System.ServiceModel.Activation.Configuration.NetTcpSection.ReceiveTimeout*\n  parent: System.ServiceModel.Activation.Configuration.NetTcpSection\n  isExternal: false\n  name: ReceiveTimeout\n  nameWithType: NetTcpSection.ReceiveTimeout\n- uid: System.ServiceModel.Activation.Configuration.NetTcpSection.TeredoEnabled*\n  parent: System.ServiceModel.Activation.Configuration.NetTcpSection\n  isExternal: false\n  name: TeredoEnabled\n  nameWithType: NetTcpSection.TeredoEnabled\n"}