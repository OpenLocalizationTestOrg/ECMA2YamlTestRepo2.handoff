{"nodes":[{"pos":[426,485],"content":"Describes a command on the designer, such as copy or paste.","needQuote":true,"needEscape":true,"nodes":[{"content":"Describes a command on the designer, such as copy or paste.","pos":[0,59]}]},{"pos":[1050,1110],"content":"A unique identifier that represents some behavior or action.","needQuote":true,"needEscape":true,"nodes":[{"content":"A unique identifier that represents some behavior or action.","pos":[0,60]}]},{"pos":[1122,1175],"content":"A few examples of commands are copy, paste, and undo.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A few examples of commands are copy, paste, and undo.","pos":[0,53]}]},{"pos":[1326,1371],"content":"Returns <xref:System.Windows.Input.ICommand>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns &lt;xref:System.Windows.Input.ICommand&gt;.","pos":[0,45],"source":"Returns <xref:System.Windows.Input.ICommand>."}]},{"pos":[1992,2072],"content":"Determines whether binding is enabled in the designer for the specified command.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether binding is enabled in the designer for the specified command.","pos":[0,80]}]},{"pos":[2207,2407],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if binding is enabled in the designer for the specified command; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if binding is enabled in the designer for the specified command; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Presentation.Hosting.CommandInfo\n  id: CommandInfo\n  children:\n  - System.Activities.Presentation.Hosting.CommandInfo.Command\n  - System.Activities.Presentation.Hosting.CommandInfo.IsBindingEnabledInDesigner\n  langs:\n  - csharp\n  name: CommandInfo\n  nameWithType: CommandInfo\n  fullName: System.Activities.Presentation.Hosting.CommandInfo\n  type: Class\n  summary: Describes a command on the designer, such as copy or paste.\n  syntax:\n    content: public sealed class CommandInfo\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Hosting.CommandInfo.Command\n  id: Command\n  parent: System.Activities.Presentation.Hosting.CommandInfo\n  langs:\n  - csharp\n  name: Command\n  nameWithType: CommandInfo.Command\n  fullName: System.Activities.Presentation.Hosting.CommandInfo.Command\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Hosting\n  summary: A unique identifier that represents some behavior or action.\n  remarks: A few examples of commands are copy, paste, and undo.\n  syntax:\n    content: public System.Windows.Input.ICommand Command { get; }\n    return:\n      type: System.Windows.Input.ICommand\n      description: Returns <xref:System.Windows.Input.ICommand>.\n  overload: System.Activities.Presentation.Hosting.CommandInfo.Command*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Hosting.CommandInfo.IsBindingEnabledInDesigner\n  id: IsBindingEnabledInDesigner\n  parent: System.Activities.Presentation.Hosting.CommandInfo\n  langs:\n  - csharp\n  name: IsBindingEnabledInDesigner\n  nameWithType: CommandInfo.IsBindingEnabledInDesigner\n  fullName: System.Activities.Presentation.Hosting.CommandInfo.IsBindingEnabledInDesigner\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Hosting\n  summary: Determines whether binding is enabled in the designer for the specified command.\n  syntax:\n    content: public bool IsBindingEnabledInDesigner { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if binding is enabled in the designer for the specified command; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Presentation.Hosting.CommandInfo.IsBindingEnabledInDesigner*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Activities.Presentation.Hosting.CommandInfo.Command\n  parent: System.Activities.Presentation.Hosting.CommandInfo\n  isExternal: false\n  name: Command\n  nameWithType: CommandInfo.Command\n  fullName: System.Activities.Presentation.Hosting.CommandInfo.Command\n- uid: System.Windows.Input.ICommand\n  parent: System.Windows.Input\n  isExternal: true\n  name: ICommand\n  nameWithType: ICommand\n  fullName: System.Windows.Input.ICommand\n- uid: System.Activities.Presentation.Hosting.CommandInfo.IsBindingEnabledInDesigner\n  parent: System.Activities.Presentation.Hosting.CommandInfo\n  isExternal: false\n  name: IsBindingEnabledInDesigner\n  nameWithType: CommandInfo.IsBindingEnabledInDesigner\n  fullName: System.Activities.Presentation.Hosting.CommandInfo.IsBindingEnabledInDesigner\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.Presentation.Hosting.CommandInfo.Command*\n  parent: System.Activities.Presentation.Hosting.CommandInfo\n  isExternal: false\n  name: Command\n  nameWithType: CommandInfo.Command\n- uid: System.Activities.Presentation.Hosting.CommandInfo.IsBindingEnabledInDesigner*\n  parent: System.Activities.Presentation.Hosting.CommandInfo\n  isExternal: false\n  name: IsBindingEnabledInDesigner\n  nameWithType: CommandInfo.IsBindingEnabledInDesigner\n"}