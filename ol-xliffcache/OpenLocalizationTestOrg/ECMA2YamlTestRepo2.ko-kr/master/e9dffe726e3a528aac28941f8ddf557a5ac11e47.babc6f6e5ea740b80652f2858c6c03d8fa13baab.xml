{"nodes":[{"pos":[1462,1528],"content":"Contains helper methods called from dynamically generated methods.","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains helper methods called from dynamically generated methods.","pos":[0,66]}]},{"pos":[2274,2355],"content":"Creates an interface that can be used to modify closed over variables at runtime.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an interface that can be used to modify closed over variables at runtime.","pos":[0,81]}]},{"pos":[2582,2615],"content":"An interface to access variables.","needQuote":true,"needEscape":true,"nodes":[{"content":"An interface to access variables.","pos":[0,33]}]},{"pos":[3288,3369],"content":"Creates an interface that can be used to modify closed over variables at runtime.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an interface that can be used to modify closed over variables at runtime.","pos":[0,81]}]},{"pos":[3591,3609],"content":"The closure array.","needQuote":true,"needEscape":true,"nodes":[{"content":"The closure array.","pos":[0,18]}]},{"pos":[3674,3744],"content":"An array of indicies into the closure array where variables are found.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of indicies into the closure array where variables are found.","pos":[0,70]}]},{"pos":[3838,3871],"content":"An interface to access variables.","needQuote":true,"needEscape":true,"nodes":[{"content":"An interface to access variables.","pos":[0,33]}]},{"pos":[4565,4606],"content":"Checks the version of the Expando object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Checks the version of the Expando object.","pos":[0,41]}]},{"pos":[4819,4838],"content":"The Expando object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Expando object.","pos":[0,19]}]},{"pos":[4902,4923],"content":"The version to check.","needQuote":true,"needEscape":true,"nodes":[{"content":"The version to check.","pos":[0,21]}]},{"pos":[4982,5037],"content":"Returns true if the version is equal; otherwise, false.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns true if the version is equal; otherwise, false.","pos":[0,55]}]},{"pos":[5777,5834],"content":"Promotes an Expando object from one class to a new class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Promotes an Expando object from one class to a new class.","pos":[0,57]}]},{"pos":[6065,6084],"content":"The Expando object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Expando object.","pos":[0,19]}]},{"pos":[6149,6185],"content":"The old class of the Expando object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The old class of the Expando object.","pos":[0,36]}]},{"pos":[6250,6286],"content":"The new class of the Expando object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new class of the Expando object.","pos":[0,36]}]},{"pos":[7134,7184],"content":"Deletes the value of an item in an expando object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Deletes the value of an item in an expando object.","pos":[0,50]}]},{"pos":[7443,7462],"content":"The expando object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The expando object.","pos":[0,19]}]},{"pos":[7529,7561],"content":"The class of the expando object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The class of the expando object.","pos":[0,32]}]},{"pos":[7622,7646],"content":"The index of the member.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the member.","pos":[0,24]}]},{"pos":[7707,7730],"content":"The name of the member.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the member.","pos":[0,23]}]},{"pos":[7798,7864],"content":"true if the name should be matched ignoring case; false otherwise.","needQuote":true,"needEscape":true,"nodes":[{"content":"true if the name should be matched ignoring case; false otherwise.","pos":[0,66]}]},{"pos":[7923,7983],"content":"true if the item was successfully removed; otherwise, false.","needQuote":true,"needEscape":true,"nodes":[{"content":"true if the item was successfully removed; otherwise, false.","pos":[0,60]}]},{"pos":[8869,8916],"content":"Gets the value of an item in an expando object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of an item in an expando object.","pos":[0,47]}]},{"pos":[9190,9209],"content":"The expando object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The expando object.","pos":[0,19]}]},{"pos":[9276,9308],"content":"The class of the expando object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The class of the expando object.","pos":[0,32]}]},{"pos":[9369,9393],"content":"The index of the member.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the member.","pos":[0,24]}]},{"pos":[9454,9477],"content":"The name of the member.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the member.","pos":[0,23]}]},{"pos":[9545,9611],"content":"true if the name should be matched ignoring case; false otherwise.","needQuote":true,"needEscape":true,"nodes":[{"content":"true if the name should be matched ignoring case; false otherwise.","pos":[0,66]}]},{"pos":[9673,9726],"content":"The out parameter containing the value of the member.","needQuote":true,"needEscape":true,"nodes":[{"content":"The out parameter containing the value of the member.","pos":[0,53]}]},{"pos":[9785,9850],"content":"True if the member exists in the expando object, otherwise false.","needQuote":true,"needEscape":true,"nodes":[{"content":"True if the member exists in the expando object, otherwise false.","pos":[0,65]}]},{"pos":[10731,10778],"content":"Sets the value of an item in an expando object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the value of an item in an expando object.","pos":[0,47]}]},{"pos":[11050,11069],"content":"The expando object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The expando object.","pos":[0,19]}]},{"pos":[11136,11168],"content":"The class of the expando object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The class of the expando object.","pos":[0,32]}]},{"pos":[11229,11253],"content":"The index of the member.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the member.","pos":[0,24]}]},{"pos":[11315,11339],"content":"The value of the member.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the member.","pos":[0,24]}]},{"pos":[11400,11423],"content":"The name of the member.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the member.","pos":[0,23]}]},{"pos":[11491,11557],"content":"true if the name should be matched ignoring case; false otherwise.","needQuote":true,"needEscape":true,"nodes":[{"content":"true if the name should be matched ignoring case; false otherwise.","pos":[0,66]}]},{"pos":[11615,11652],"content":"Returns the index for the set member.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the index for the set member.","pos":[0,37]}]},{"pos":[12565,12624],"content":"Combines two runtime variable lists and returns a new list.","needQuote":true,"needEscape":true,"nodes":[{"content":"Combines two runtime variable lists and returns a new list.","pos":[0,59]}]},{"pos":[12979,12994],"content":"The first list.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first list.","pos":[0,15]}]},{"pos":[13093,13109],"content":"The second list.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second list.","pos":[0,16]}]},{"pos":[13174,13234],"content":"The index array indicating which list to get variables from.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index array indicating which list to get variables from.","pos":[0,60]}]},{"pos":[13328,13357],"content":"The merged runtime variables.","needQuote":true,"needEscape":true,"nodes":[{"content":"The merged runtime variables.","pos":[0,29]}]},{"pos":[14042,14078],"content":"Quotes the provided expression tree.","needQuote":true,"needEscape":true,"nodes":[{"content":"Quotes the provided expression tree.","pos":[0,36]}]},{"pos":[14348,14372],"content":"The expression to quote.","needQuote":true,"needEscape":true,"nodes":[{"content":"The expression to quote.","pos":[0,24]}]},{"pos":[14442,14491],"content":"The hoisted local state provided by the compiler.","needQuote":true,"needEscape":true,"nodes":[{"content":"The hoisted local state provided by the compiler.","pos":[0,49]}]},{"pos":[14556,14588],"content":"The actual hoisted local values.","needQuote":true,"needEscape":true,"nodes":[{"content":"The actual hoisted local values.","pos":[0,32]}]},{"pos":[14667,14689],"content":"The quoted expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"The quoted expression.","pos":[0,22]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.CompilerServices.RuntimeOps\n  id: RuntimeOps\n  children:\n  - System.Runtime.CompilerServices.RuntimeOps.CreateRuntimeVariables\n  - System.Runtime.CompilerServices.RuntimeOps.CreateRuntimeVariables(System.Object[],System.Int64[])\n  - System.Runtime.CompilerServices.RuntimeOps.ExpandoCheckVersion(System.Dynamic.ExpandoObject,System.Object)\n  - System.Runtime.CompilerServices.RuntimeOps.ExpandoPromoteClass(System.Dynamic.ExpandoObject,System.Object,System.Object)\n  - System.Runtime.CompilerServices.RuntimeOps.ExpandoTryDeleteValue(System.Dynamic.ExpandoObject,System.Object,System.Int32,System.String,System.Boolean)\n  - System.Runtime.CompilerServices.RuntimeOps.ExpandoTryGetValue(System.Dynamic.ExpandoObject,System.Object,System.Int32,System.String,System.Boolean,System.Object@)\n  - System.Runtime.CompilerServices.RuntimeOps.ExpandoTrySetValue(System.Dynamic.ExpandoObject,System.Object,System.Int32,System.Object,System.String,System.Boolean)\n  - System.Runtime.CompilerServices.RuntimeOps.MergeRuntimeVariables(System.Runtime.CompilerServices.IRuntimeVariables,System.Runtime.CompilerServices.IRuntimeVariables,System.Int32[])\n  - System.Runtime.CompilerServices.RuntimeOps.Quote(System.Linq.Expressions.Expression,System.Object,System.Object[])\n  langs:\n  - csharp\n  name: RuntimeOps\n  nameWithType: RuntimeOps\n  fullName: System.Runtime.CompilerServices.RuntimeOps\n  type: Class\n  summary: Contains helper methods called from dynamically generated methods.\n  syntax:\n    content: >-\n      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]\n\n      [System.Diagnostics.DebuggerStepThrough]\n\n      public static class RuntimeOps\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Runtime.CompilerServices.RuntimeOps.CreateRuntimeVariables\n  id: CreateRuntimeVariables\n  parent: System.Runtime.CompilerServices.RuntimeOps\n  langs:\n  - csharp\n  name: CreateRuntimeVariables()\n  nameWithType: RuntimeOps.CreateRuntimeVariables()\n  fullName: System.Runtime.CompilerServices.RuntimeOps.CreateRuntimeVariables()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  summary: Creates an interface that can be used to modify closed over variables at runtime.\n  syntax:\n    content: public static System.Runtime.CompilerServices.IRuntimeVariables CreateRuntimeVariables ();\n    parameters: []\n    return:\n      type: System.Runtime.CompilerServices.IRuntimeVariables\n      description: An interface to access variables.\n  overload: System.Runtime.CompilerServices.RuntimeOps.CreateRuntimeVariables*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.CompilerServices.RuntimeOps.CreateRuntimeVariables(System.Object[],System.Int64[])\n  id: CreateRuntimeVariables(System.Object[],System.Int64[])\n  parent: System.Runtime.CompilerServices.RuntimeOps\n  langs:\n  - csharp\n  name: CreateRuntimeVariables(Object[],Int64[])\n  nameWithType: RuntimeOps.CreateRuntimeVariables(Object[],Int64[])\n  fullName: System.Runtime.CompilerServices.RuntimeOps.CreateRuntimeVariables(Object[],Int64[])\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  summary: Creates an interface that can be used to modify closed over variables at runtime.\n  syntax:\n    content: public static System.Runtime.CompilerServices.IRuntimeVariables CreateRuntimeVariables (object[] data, long[] indexes);\n    parameters:\n    - id: data\n      type: System.Object[]\n      description: The closure array.\n    - id: indexes\n      type: System.Int64[]\n      description: An array of indicies into the closure array where variables are found.\n    return:\n      type: System.Runtime.CompilerServices.IRuntimeVariables\n      description: An interface to access variables.\n  overload: System.Runtime.CompilerServices.RuntimeOps.CreateRuntimeVariables*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.CompilerServices.RuntimeOps.ExpandoCheckVersion(System.Dynamic.ExpandoObject,System.Object)\n  id: ExpandoCheckVersion(System.Dynamic.ExpandoObject,System.Object)\n  parent: System.Runtime.CompilerServices.RuntimeOps\n  langs:\n  - csharp\n  name: ExpandoCheckVersion(ExpandoObject,Object)\n  nameWithType: RuntimeOps.ExpandoCheckVersion(ExpandoObject,Object)\n  fullName: System.Runtime.CompilerServices.RuntimeOps.ExpandoCheckVersion(ExpandoObject,Object)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  summary: Checks the version of the Expando object.\n  syntax:\n    content: public static bool ExpandoCheckVersion (System.Dynamic.ExpandoObject expando, object version);\n    parameters:\n    - id: expando\n      type: System.Dynamic.ExpandoObject\n      description: The Expando object.\n    - id: version\n      type: System.Object\n      description: The version to check.\n    return:\n      type: System.Boolean\n      description: Returns true if the version is equal; otherwise, false.\n  overload: System.Runtime.CompilerServices.RuntimeOps.ExpandoCheckVersion*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.CompilerServices.RuntimeOps.ExpandoPromoteClass(System.Dynamic.ExpandoObject,System.Object,System.Object)\n  id: ExpandoPromoteClass(System.Dynamic.ExpandoObject,System.Object,System.Object)\n  parent: System.Runtime.CompilerServices.RuntimeOps\n  langs:\n  - csharp\n  name: ExpandoPromoteClass(ExpandoObject,Object,Object)\n  nameWithType: RuntimeOps.ExpandoPromoteClass(ExpandoObject,Object,Object)\n  fullName: System.Runtime.CompilerServices.RuntimeOps.ExpandoPromoteClass(ExpandoObject,Object,Object)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  summary: Promotes an Expando object from one class to a new class.\n  syntax:\n    content: public static void ExpandoPromoteClass (System.Dynamic.ExpandoObject expando, object oldClass, object newClass);\n    parameters:\n    - id: expando\n      type: System.Dynamic.ExpandoObject\n      description: The Expando object.\n    - id: oldClass\n      type: System.Object\n      description: The old class of the Expando object.\n    - id: newClass\n      type: System.Object\n      description: The new class of the Expando object.\n  overload: System.Runtime.CompilerServices.RuntimeOps.ExpandoPromoteClass*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.CompilerServices.RuntimeOps.ExpandoTryDeleteValue(System.Dynamic.ExpandoObject,System.Object,System.Int32,System.String,System.Boolean)\n  id: ExpandoTryDeleteValue(System.Dynamic.ExpandoObject,System.Object,System.Int32,System.String,System.Boolean)\n  parent: System.Runtime.CompilerServices.RuntimeOps\n  langs:\n  - csharp\n  name: ExpandoTryDeleteValue(ExpandoObject,Object,Int32,String,Boolean)\n  nameWithType: RuntimeOps.ExpandoTryDeleteValue(ExpandoObject,Object,Int32,String,Boolean)\n  fullName: System.Runtime.CompilerServices.RuntimeOps.ExpandoTryDeleteValue(ExpandoObject,Object,Int32,String,Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  summary: Deletes the value of an item in an expando object.\n  syntax:\n    content: public static bool ExpandoTryDeleteValue (System.Dynamic.ExpandoObject expando, object indexClass, int index, string name, bool ignoreCase);\n    parameters:\n    - id: expando\n      type: System.Dynamic.ExpandoObject\n      description: The expando object.\n    - id: indexClass\n      type: System.Object\n      description: The class of the expando object.\n    - id: index\n      type: System.Int32\n      description: The index of the member.\n    - id: name\n      type: System.String\n      description: The name of the member.\n    - id: ignoreCase\n      type: System.Boolean\n      description: true if the name should be matched ignoring case; false otherwise.\n    return:\n      type: System.Boolean\n      description: true if the item was successfully removed; otherwise, false.\n  overload: System.Runtime.CompilerServices.RuntimeOps.ExpandoTryDeleteValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.CompilerServices.RuntimeOps.ExpandoTryGetValue(System.Dynamic.ExpandoObject,System.Object,System.Int32,System.String,System.Boolean,System.Object@)\n  id: ExpandoTryGetValue(System.Dynamic.ExpandoObject,System.Object,System.Int32,System.String,System.Boolean,System.Object@)\n  parent: System.Runtime.CompilerServices.RuntimeOps\n  langs:\n  - csharp\n  name: ExpandoTryGetValue(ExpandoObject,Object,Int32,String,Boolean,Object)\n  nameWithType: RuntimeOps.ExpandoTryGetValue(ExpandoObject,Object,Int32,String,Boolean,Object)\n  fullName: System.Runtime.CompilerServices.RuntimeOps.ExpandoTryGetValue(ExpandoObject,Object,Int32,String,Boolean,Object)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  summary: Gets the value of an item in an expando object.\n  syntax:\n    content: public static bool ExpandoTryGetValue (System.Dynamic.ExpandoObject expando, object indexClass, int index, string name, bool ignoreCase, out object value);\n    parameters:\n    - id: expando\n      type: System.Dynamic.ExpandoObject\n      description: The expando object.\n    - id: indexClass\n      type: System.Object\n      description: The class of the expando object.\n    - id: index\n      type: System.Int32\n      description: The index of the member.\n    - id: name\n      type: System.String\n      description: The name of the member.\n    - id: ignoreCase\n      type: System.Boolean\n      description: true if the name should be matched ignoring case; false otherwise.\n    - id: value\n      type: System.Object\n      description: The out parameter containing the value of the member.\n    return:\n      type: System.Boolean\n      description: True if the member exists in the expando object, otherwise false.\n  overload: System.Runtime.CompilerServices.RuntimeOps.ExpandoTryGetValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.CompilerServices.RuntimeOps.ExpandoTrySetValue(System.Dynamic.ExpandoObject,System.Object,System.Int32,System.Object,System.String,System.Boolean)\n  id: ExpandoTrySetValue(System.Dynamic.ExpandoObject,System.Object,System.Int32,System.Object,System.String,System.Boolean)\n  parent: System.Runtime.CompilerServices.RuntimeOps\n  langs:\n  - csharp\n  name: ExpandoTrySetValue(ExpandoObject,Object,Int32,Object,String,Boolean)\n  nameWithType: RuntimeOps.ExpandoTrySetValue(ExpandoObject,Object,Int32,Object,String,Boolean)\n  fullName: System.Runtime.CompilerServices.RuntimeOps.ExpandoTrySetValue(ExpandoObject,Object,Int32,Object,String,Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  summary: Sets the value of an item in an expando object.\n  syntax:\n    content: public static object ExpandoTrySetValue (System.Dynamic.ExpandoObject expando, object indexClass, int index, object value, string name, bool ignoreCase);\n    parameters:\n    - id: expando\n      type: System.Dynamic.ExpandoObject\n      description: The expando object.\n    - id: indexClass\n      type: System.Object\n      description: The class of the expando object.\n    - id: index\n      type: System.Int32\n      description: The index of the member.\n    - id: value\n      type: System.Object\n      description: The value of the member.\n    - id: name\n      type: System.String\n      description: The name of the member.\n    - id: ignoreCase\n      type: System.Boolean\n      description: true if the name should be matched ignoring case; false otherwise.\n    return:\n      type: System.Object\n      description: Returns the index for the set member.\n  overload: System.Runtime.CompilerServices.RuntimeOps.ExpandoTrySetValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.CompilerServices.RuntimeOps.MergeRuntimeVariables(System.Runtime.CompilerServices.IRuntimeVariables,System.Runtime.CompilerServices.IRuntimeVariables,System.Int32[])\n  id: MergeRuntimeVariables(System.Runtime.CompilerServices.IRuntimeVariables,System.Runtime.CompilerServices.IRuntimeVariables,System.Int32[])\n  parent: System.Runtime.CompilerServices.RuntimeOps\n  langs:\n  - csharp\n  name: MergeRuntimeVariables(IRuntimeVariables,IRuntimeVariables,Int32[])\n  nameWithType: RuntimeOps.MergeRuntimeVariables(IRuntimeVariables,IRuntimeVariables,Int32[])\n  fullName: System.Runtime.CompilerServices.RuntimeOps.MergeRuntimeVariables(IRuntimeVariables,IRuntimeVariables,Int32[])\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  summary: Combines two runtime variable lists and returns a new list.\n  syntax:\n    content: public static System.Runtime.CompilerServices.IRuntimeVariables MergeRuntimeVariables (System.Runtime.CompilerServices.IRuntimeVariables first, System.Runtime.CompilerServices.IRuntimeVariables second, int[] indexes);\n    parameters:\n    - id: first\n      type: System.Runtime.CompilerServices.IRuntimeVariables\n      description: The first list.\n    - id: second\n      type: System.Runtime.CompilerServices.IRuntimeVariables\n      description: The second list.\n    - id: indexes\n      type: System.Int32[]\n      description: The index array indicating which list to get variables from.\n    return:\n      type: System.Runtime.CompilerServices.IRuntimeVariables\n      description: The merged runtime variables.\n  overload: System.Runtime.CompilerServices.RuntimeOps.MergeRuntimeVariables*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.CompilerServices.RuntimeOps.Quote(System.Linq.Expressions.Expression,System.Object,System.Object[])\n  id: Quote(System.Linq.Expressions.Expression,System.Object,System.Object[])\n  parent: System.Runtime.CompilerServices.RuntimeOps\n  langs:\n  - csharp\n  name: Quote(Expression,Object,Object[])\n  nameWithType: RuntimeOps.Quote(Expression,Object,Object[])\n  fullName: System.Runtime.CompilerServices.RuntimeOps.Quote(Expression,Object,Object[])\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  summary: Quotes the provided expression tree.\n  syntax:\n    content: public static System.Linq.Expressions.Expression Quote (System.Linq.Expressions.Expression expression, object hoistedLocals, object[] locals);\n    parameters:\n    - id: expression\n      type: System.Linq.Expressions.Expression\n      description: The expression to quote.\n    - id: hoistedLocals\n      type: System.Object\n      description: The hoisted local state provided by the compiler.\n    - id: locals\n      type: System.Object[]\n      description: The actual hoisted local values.\n    return:\n      type: System.Linq.Expressions.Expression\n      description: The quoted expression.\n  overload: System.Runtime.CompilerServices.RuntimeOps.Quote*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Runtime.CompilerServices.RuntimeOps.CreateRuntimeVariables\n  parent: System.Runtime.CompilerServices.RuntimeOps\n  isExternal: false\n  name: CreateRuntimeVariables()\n  nameWithType: RuntimeOps.CreateRuntimeVariables()\n  fullName: System.Runtime.CompilerServices.RuntimeOps.CreateRuntimeVariables()\n- uid: System.Runtime.CompilerServices.IRuntimeVariables\n  parent: System.Runtime.CompilerServices\n  isExternal: false\n  name: IRuntimeVariables\n  nameWithType: IRuntimeVariables\n  fullName: System.Runtime.CompilerServices.IRuntimeVariables\n- uid: System.Runtime.CompilerServices.RuntimeOps.CreateRuntimeVariables(System.Object[],System.Int64[])\n  parent: System.Runtime.CompilerServices.RuntimeOps\n  isExternal: false\n  name: CreateRuntimeVariables(Object[],Int64[])\n  nameWithType: RuntimeOps.CreateRuntimeVariables(Object[],Int64[])\n  fullName: System.Runtime.CompilerServices.RuntimeOps.CreateRuntimeVariables(Object[],Int64[])\n- uid: System.Object[]\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int64[]\n  parent: System\n  isExternal: true\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64[]\n  spec.csharp:\n  - uid: System.Int64\n    name: Int64\n    nameWithType: Int64\n    fullName: Int64[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.CompilerServices.RuntimeOps.ExpandoCheckVersion(System.Dynamic.ExpandoObject,System.Object)\n  parent: System.Runtime.CompilerServices.RuntimeOps\n  isExternal: false\n  name: ExpandoCheckVersion(ExpandoObject,Object)\n  nameWithType: RuntimeOps.ExpandoCheckVersion(ExpandoObject,Object)\n  fullName: System.Runtime.CompilerServices.RuntimeOps.ExpandoCheckVersion(ExpandoObject,Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Dynamic.ExpandoObject\n  parent: System.Dynamic\n  isExternal: true\n  name: ExpandoObject\n  nameWithType: ExpandoObject\n  fullName: System.Dynamic.ExpandoObject\n- uid: System.Runtime.CompilerServices.RuntimeOps.ExpandoPromoteClass(System.Dynamic.ExpandoObject,System.Object,System.Object)\n  parent: System.Runtime.CompilerServices.RuntimeOps\n  isExternal: false\n  name: ExpandoPromoteClass(ExpandoObject,Object,Object)\n  nameWithType: RuntimeOps.ExpandoPromoteClass(ExpandoObject,Object,Object)\n  fullName: System.Runtime.CompilerServices.RuntimeOps.ExpandoPromoteClass(ExpandoObject,Object,Object)\n- uid: System.Runtime.CompilerServices.RuntimeOps.ExpandoTryDeleteValue(System.Dynamic.ExpandoObject,System.Object,System.Int32,System.String,System.Boolean)\n  parent: System.Runtime.CompilerServices.RuntimeOps\n  isExternal: false\n  name: ExpandoTryDeleteValue(ExpandoObject,Object,Int32,String,Boolean)\n  nameWithType: RuntimeOps.ExpandoTryDeleteValue(ExpandoObject,Object,Int32,String,Boolean)\n  fullName: System.Runtime.CompilerServices.RuntimeOps.ExpandoTryDeleteValue(ExpandoObject,Object,Int32,String,Boolean)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.CompilerServices.RuntimeOps.ExpandoTryGetValue(System.Dynamic.ExpandoObject,System.Object,System.Int32,System.String,System.Boolean,System.Object@)\n  parent: System.Runtime.CompilerServices.RuntimeOps\n  isExternal: false\n  name: ExpandoTryGetValue(ExpandoObject,Object,Int32,String,Boolean,Object)\n  nameWithType: RuntimeOps.ExpandoTryGetValue(ExpandoObject,Object,Int32,String,Boolean,Object)\n  fullName: System.Runtime.CompilerServices.RuntimeOps.ExpandoTryGetValue(ExpandoObject,Object,Int32,String,Boolean,Object)\n- uid: System.Runtime.CompilerServices.RuntimeOps.ExpandoTrySetValue(System.Dynamic.ExpandoObject,System.Object,System.Int32,System.Object,System.String,System.Boolean)\n  parent: System.Runtime.CompilerServices.RuntimeOps\n  isExternal: false\n  name: ExpandoTrySetValue(ExpandoObject,Object,Int32,Object,String,Boolean)\n  nameWithType: RuntimeOps.ExpandoTrySetValue(ExpandoObject,Object,Int32,Object,String,Boolean)\n  fullName: System.Runtime.CompilerServices.RuntimeOps.ExpandoTrySetValue(ExpandoObject,Object,Int32,Object,String,Boolean)\n- uid: System.Runtime.CompilerServices.RuntimeOps.MergeRuntimeVariables(System.Runtime.CompilerServices.IRuntimeVariables,System.Runtime.CompilerServices.IRuntimeVariables,System.Int32[])\n  parent: System.Runtime.CompilerServices.RuntimeOps\n  isExternal: false\n  name: MergeRuntimeVariables(IRuntimeVariables,IRuntimeVariables,Int32[])\n  nameWithType: RuntimeOps.MergeRuntimeVariables(IRuntimeVariables,IRuntimeVariables,Int32[])\n  fullName: System.Runtime.CompilerServices.RuntimeOps.MergeRuntimeVariables(IRuntimeVariables,IRuntimeVariables,Int32[])\n- uid: System.Int32[]\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32[]\n  spec.csharp:\n  - uid: System.Int32\n    name: Int32\n    nameWithType: Int32\n    fullName: Int32[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.CompilerServices.RuntimeOps.Quote(System.Linq.Expressions.Expression,System.Object,System.Object[])\n  parent: System.Runtime.CompilerServices.RuntimeOps\n  isExternal: false\n  name: Quote(Expression,Object,Object[])\n  nameWithType: RuntimeOps.Quote(Expression,Object,Object[])\n  fullName: System.Runtime.CompilerServices.RuntimeOps.Quote(Expression,Object,Object[])\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: true\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Runtime.CompilerServices.RuntimeOps.CreateRuntimeVariables*\n  parent: System.Runtime.CompilerServices.RuntimeOps\n  isExternal: false\n  name: CreateRuntimeVariables\n  nameWithType: RuntimeOps.CreateRuntimeVariables\n- uid: System.Runtime.CompilerServices.RuntimeOps.ExpandoCheckVersion*\n  parent: System.Runtime.CompilerServices.RuntimeOps\n  isExternal: false\n  name: ExpandoCheckVersion\n  nameWithType: RuntimeOps.ExpandoCheckVersion\n- uid: System.Runtime.CompilerServices.RuntimeOps.ExpandoPromoteClass*\n  parent: System.Runtime.CompilerServices.RuntimeOps\n  isExternal: false\n  name: ExpandoPromoteClass\n  nameWithType: RuntimeOps.ExpandoPromoteClass\n- uid: System.Runtime.CompilerServices.RuntimeOps.ExpandoTryDeleteValue*\n  parent: System.Runtime.CompilerServices.RuntimeOps\n  isExternal: false\n  name: ExpandoTryDeleteValue\n  nameWithType: RuntimeOps.ExpandoTryDeleteValue\n- uid: System.Runtime.CompilerServices.RuntimeOps.ExpandoTryGetValue*\n  parent: System.Runtime.CompilerServices.RuntimeOps\n  isExternal: false\n  name: ExpandoTryGetValue\n  nameWithType: RuntimeOps.ExpandoTryGetValue\n- uid: System.Runtime.CompilerServices.RuntimeOps.ExpandoTrySetValue*\n  parent: System.Runtime.CompilerServices.RuntimeOps\n  isExternal: false\n  name: ExpandoTrySetValue\n  nameWithType: RuntimeOps.ExpandoTrySetValue\n- uid: System.Runtime.CompilerServices.RuntimeOps.MergeRuntimeVariables*\n  parent: System.Runtime.CompilerServices.RuntimeOps\n  isExternal: false\n  name: MergeRuntimeVariables\n  nameWithType: RuntimeOps.MergeRuntimeVariables\n- uid: System.Runtime.CompilerServices.RuntimeOps.Quote*\n  parent: System.Runtime.CompilerServices.RuntimeOps\n  isExternal: false\n  name: Quote\n  nameWithType: RuntimeOps.Quote\n"}