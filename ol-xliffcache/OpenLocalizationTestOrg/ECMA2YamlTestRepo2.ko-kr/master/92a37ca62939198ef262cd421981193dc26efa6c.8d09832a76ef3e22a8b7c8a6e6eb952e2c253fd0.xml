{"nodes":[{"pos":[1409,1780],"content":"A section of workflow which demarcates a transaction boundary. A new <xref href=\"System.Transactions.Transaction\"></xref> is started when this <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> begins executing and the transaction commits when the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> closes successfully. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"A section of workflow which demarcates a transaction boundary.","pos":[0,62]},{"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Transactions.Transaction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is started when this <bpt id=\"p2\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> begins executing and the transaction commits when the <bpt id=\"p3\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> closes successfully.","pos":[63,339],"source":" A new <xref href=\"System.Transactions.Transaction\"></xref> is started when this <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> begins executing and the transaction commits when the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> closes successfully."},{"content":"This class cannot be inherited.","pos":[340,371]}]},{"pos":[1793,2310],"content":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       A TransactionScopeActivity cannot be nested in another TransactionScopeActivity.       The workflow instance is always persisted when a TransactionScopeActivity completes its execution successfully.       A TransactionScopeActivity cannot have a <xref:System.Workflow.ComponentModel.FaultHandlersActivity>.       A TransactionScopeActivity cannot have a <xref:System.Workflow.ComponentModel.CancellationHandlerActivity>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">&gt; [!NOTE]</ph><ph id=\"ph2\"> &gt;  </ph><ph id=\"ph3\">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>       A TransactionScopeActivity cannot be nested in another TransactionScopeActivity.","pos":[0,168],"source":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       A TransactionScopeActivity cannot be nested in another TransactionScopeActivity."},{"content":"The workflow instance is always persisted when a TransactionScopeActivity completes its execution successfully.","pos":[175,286]},{"content":"A TransactionScopeActivity cannot have a &lt;xref:System.Workflow.ComponentModel.FaultHandlersActivity&gt;.","pos":[293,394],"source":"       A TransactionScopeActivity cannot have a <xref:System.Workflow.ComponentModel.FaultHandlersActivity>."},{"content":"A TransactionScopeActivity cannot have a &lt;xref:System.Workflow.ComponentModel.CancellationHandlerActivity&gt;.","pos":[401,508],"source":"       A TransactionScopeActivity cannot have a <xref:System.Workflow.ComponentModel.CancellationHandlerActivity>."}]},{"pos":[10942,11059],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.TransactionScopeActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.TransactionScopeActivity\"></xref> class."},{"pos":[11792,11940],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.TransactionScopeActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the name of the activity.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.TransactionScopeActivity\"></xref> class using the name of the activity."},{"pos":[12087,12125],"content":"The user-defined name of the activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user-defined name of the activity.","pos":[0,38]}]},{"pos":[13158,13170],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13269,13281],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14321,14333],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14432,14444],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15689,15701],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15799,15811],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16931,16943],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18489,18501],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18616,18628],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19360,19478],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.WorkflowTransactionOptions\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> associated with this instance.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Workflow.ComponentModel.WorkflowTransactionOptions\"></xref> associated with this instance."},{"pos":[19701,19814],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.WorkflowTransactionOptions\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> associated with this instance.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.ComponentModel.WorkflowTransactionOptions\"></xref> associated with this instance."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.ComponentModel.TransactionScopeActivity\n  id: TransactionScopeActivity\n  children:\n  - System.Workflow.ComponentModel.TransactionScopeActivity.#ctor\n  - System.Workflow.ComponentModel.TransactionScopeActivity.#ctor(System.String)\n  - System.Workflow.ComponentModel.TransactionScopeActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.ComponentModel.TransactionScopeActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.ComponentModel.TransactionScopeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.TransactionScopeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.ComponentModel.TransactionScopeActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)\n  - System.Workflow.ComponentModel.TransactionScopeActivity.TransactionOptions\n  langs:\n  - csharp\n  name: TransactionScopeActivity\n  nameWithType: TransactionScopeActivity\n  fullName: System.Workflow.ComponentModel.TransactionScopeActivity\n  type: Class\n  summary: A section of workflow which demarcates a transaction boundary. A new <xref href=\"System.Transactions.Transaction\"></xref> is started when this <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> begins executing and the transaction commits when the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> closes successfully. This class cannot be inherited.\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n A TransactionScopeActivity cannot be nested in another TransactionScopeActivity.  \\n  \\n The workflow instance is always persisted when a TransactionScopeActivity completes its execution successfully.  \\n  \\n A TransactionScopeActivity cannot have a <xref:System.Workflow.ComponentModel.FaultHandlersActivity>.  \\n  \\n A TransactionScopeActivity cannot have a <xref:System.Workflow.ComponentModel.CancellationHandlerActivity>.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Designer(typeof(System.Workflow.ComponentModel.Design.TransactionScopeActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))]\n\n      [System.ComponentModel.ToolboxItem(typeof(System.Workflow.ComponentModel.Design.ActivityToolboxItem))]\n\n      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.ComponentModel.TransactionScopeActivity), \"Resources.Sequence.png\")]\n\n      [System.Obsolete(\"The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*\")]\n\n      [System.Workflow.ComponentModel.PersistOnClose]\n\n      public sealed class TransactionScopeActivity : System.Workflow.ComponentModel.CompositeActivity, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>\n  inheritance:\n  - System.Object\n  - System.Workflow.ComponentModel.DependencyObject\n  - System.Workflow.ComponentModel.Activity\n  - System.Workflow.ComponentModel.CompositeActivity\n  implements:\n  - System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>\n  inheritedMembers:\n  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty\n  - System.Workflow.ComponentModel.Activity.Canceling\n  - System.Workflow.ComponentModel.Activity.CancelingEvent\n  - System.Workflow.ComponentModel.Activity.Clone\n  - System.Workflow.ComponentModel.Activity.Closed\n  - System.Workflow.ComponentModel.Activity.ClosedEvent\n  - System.Workflow.ComponentModel.Activity.Compensating\n  - System.Workflow.ComponentModel.Activity.CompensatingEvent\n  - System.Workflow.ComponentModel.Activity.Description\n  - System.Workflow.ComponentModel.Activity.Enabled\n  - System.Workflow.ComponentModel.Activity.Executing\n  - System.Workflow.ComponentModel.Activity.ExecutingEvent\n  - System.Workflow.ComponentModel.Activity.ExecutionResult\n  - System.Workflow.ComponentModel.Activity.ExecutionStatus\n  - System.Workflow.ComponentModel.Activity.Faulting\n  - System.Workflow.ComponentModel.Activity.FaultingEvent\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)\n  - System.Workflow.ComponentModel.Activity.IsDynamicActivity\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.Name\n  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Activity.Parent\n  - System.Workflow.ComponentModel.Activity.QualifiedName\n  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)\n  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)\n  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.StatusChanged\n  - System.Workflow.ComponentModel.Activity.StatusChangedEvent\n  - System.Workflow.ComponentModel.Activity.ToString\n  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)\n  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)\n  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId\n  - System.Workflow.ComponentModel.CompositeActivity.Activities\n  - System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)\n  - System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities\n  - System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)\n  - System.Workflow.ComponentModel.CompositeActivity.EnabledActivities\n  - System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  - System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  - System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  - System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.DesignMode\n  - System.Workflow.ComponentModel.DependencyObject.Dispose\n  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)\n  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties\n  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)\n  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject\n  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)\n  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.Site\n  - System.Workflow.ComponentModel.DependencyObject.UserData\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.TransactionScopeActivity.#ctor\n  id: '#ctor'\n  parent: System.Workflow.ComponentModel.TransactionScopeActivity\n  langs:\n  - csharp\n  name: TransactionScopeActivity()\n  nameWithType: TransactionScopeActivity.TransactionScopeActivity()\n  fullName: System.Workflow.ComponentModel.TransactionScopeActivity.TransactionScopeActivity()\n  type: Constructor\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.TransactionScopeActivity\"></xref> class.\n  syntax:\n    content: public TransactionScopeActivity ();\n    parameters: []\n  overload: System.Workflow.ComponentModel.TransactionScopeActivity.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.TransactionScopeActivity.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Workflow.ComponentModel.TransactionScopeActivity\n  langs:\n  - csharp\n  name: TransactionScopeActivity(String)\n  nameWithType: TransactionScopeActivity.TransactionScopeActivity(String)\n  fullName: System.Workflow.ComponentModel.TransactionScopeActivity.TransactionScopeActivity(String)\n  type: Constructor\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.TransactionScopeActivity\"></xref> class using the name of the activity.\n  syntax:\n    content: public TransactionScopeActivity (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The user-defined name of the activity.\n  overload: System.Workflow.ComponentModel.TransactionScopeActivity.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.TransactionScopeActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  id: Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.ComponentModel.TransactionScopeActivity\n  langs:\n  - csharp\n  name: Cancel(ActivityExecutionContext)\n  nameWithType: TransactionScopeActivity.Cancel(ActivityExecutionContext)\n  fullName: System.Workflow.ComponentModel.TransactionScopeActivity.Cancel(ActivityExecutionContext)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  syntax:\n    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: To be added.\n    return:\n      type: System.Workflow.ComponentModel.ActivityExecutionStatus\n      description: To be added.\n  overload: System.Workflow.ComponentModel.TransactionScopeActivity.Cancel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.TransactionScopeActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.ComponentModel.TransactionScopeActivity\n  langs:\n  - csharp\n  name: Execute(ActivityExecutionContext)\n  nameWithType: TransactionScopeActivity.Execute(ActivityExecutionContext)\n  fullName: System.Workflow.ComponentModel.TransactionScopeActivity.Execute(ActivityExecutionContext)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  syntax:\n    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: To be added.\n    return:\n      type: System.Workflow.ComponentModel.ActivityExecutionStatus\n      description: To be added.\n  overload: System.Workflow.ComponentModel.TransactionScopeActivity.Execute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.TransactionScopeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  id: OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.TransactionScopeActivity\n  langs:\n  - csharp\n  name: OnActivityChangeRemove(ActivityExecutionContext,Activity)\n  nameWithType: TransactionScopeActivity.OnActivityChangeRemove(ActivityExecutionContext,Activity)\n  fullName: System.Workflow.ComponentModel.TransactionScopeActivity.OnActivityChangeRemove(ActivityExecutionContext,Activity)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  syntax:\n    content: protected override void OnActivityChangeRemove (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, System.Workflow.ComponentModel.Activity removedActivity);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: To be added.\n    - id: removedActivity\n      type: System.Workflow.ComponentModel.Activity\n      description: To be added.\n  overload: System.Workflow.ComponentModel.TransactionScopeActivity.OnActivityChangeRemove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.TransactionScopeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  id: OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.ComponentModel.TransactionScopeActivity\n  langs:\n  - csharp\n  name: OnWorkflowChangesCompleted(ActivityExecutionContext)\n  nameWithType: TransactionScopeActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)\n  fullName: System.Workflow.ComponentModel.TransactionScopeActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  syntax:\n    content: protected override void OnWorkflowChangesCompleted (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: To be added.\n  overload: System.Workflow.ComponentModel.TransactionScopeActivity.OnWorkflowChangesCompleted*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.TransactionScopeActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)\n  id: System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)\n  isEii: true\n  parent: System.Workflow.ComponentModel.TransactionScopeActivity\n  langs:\n  - csharp\n  name: System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)\n  nameWithType: TransactionScopeActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)\n  fullName: System.Workflow.ComponentModel.TransactionScopeActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  syntax:\n    content: void IActivityEventListener<ActivityExecutionStatusChangedEventArgs>.OnEvent (object sender, System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs e);\n    parameters:\n    - id: sender\n      type: System.Object\n      description: To be added.\n    - id: e\n      type: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs\n      description: To be added.\n  overload: System.Workflow.ComponentModel.TransactionScopeActivity.System#Workflow#ComponentModel#IActivityEventListener<System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs>#OnEvent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.TransactionScopeActivity.TransactionOptions\n  id: TransactionOptions\n  parent: System.Workflow.ComponentModel.TransactionScopeActivity\n  langs:\n  - csharp\n  name: TransactionOptions\n  nameWithType: TransactionScopeActivity.TransactionOptions\n  fullName: System.Workflow.ComponentModel.TransactionScopeActivity.TransactionOptions\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Gets the <xref href=\"System.Workflow.ComponentModel.WorkflowTransactionOptions\"></xref> associated with this instance.\n  syntax:\n    content: public System.Workflow.ComponentModel.WorkflowTransactionOptions TransactionOptions { get; set; }\n    return:\n      type: System.Workflow.ComponentModel.WorkflowTransactionOptions\n      description: The <xref href=\"System.Workflow.ComponentModel.WorkflowTransactionOptions\"></xref> associated with this instance.\n  overload: System.Workflow.ComponentModel.TransactionScopeActivity.TransactionOptions*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: System.Workflow.ComponentModel.CompositeActivity\n- uid: System.Workflow.ComponentModel.TransactionScopeActivity.#ctor\n  parent: System.Workflow.ComponentModel.TransactionScopeActivity\n  isExternal: false\n  name: TransactionScopeActivity()\n  nameWithType: TransactionScopeActivity.TransactionScopeActivity()\n  fullName: System.Workflow.ComponentModel.TransactionScopeActivity.TransactionScopeActivity()\n- uid: System.Workflow.ComponentModel.TransactionScopeActivity.#ctor(System.String)\n  parent: System.Workflow.ComponentModel.TransactionScopeActivity\n  isExternal: false\n  name: TransactionScopeActivity(String)\n  nameWithType: TransactionScopeActivity.TransactionScopeActivity(String)\n  fullName: System.Workflow.ComponentModel.TransactionScopeActivity.TransactionScopeActivity(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Workflow.ComponentModel.TransactionScopeActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.ComponentModel.TransactionScopeActivity\n  isExternal: false\n  name: Cancel(ActivityExecutionContext)\n  nameWithType: TransactionScopeActivity.Cancel(ActivityExecutionContext)\n  fullName: System.Workflow.ComponentModel.TransactionScopeActivity.Cancel(ActivityExecutionContext)\n- uid: System.Workflow.ComponentModel.ActivityExecutionStatus\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionStatus\n  nameWithType: ActivityExecutionStatus\n  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus\n- uid: System.Workflow.ComponentModel.ActivityExecutionContext\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionContext\n  nameWithType: ActivityExecutionContext\n  fullName: System.Workflow.ComponentModel.ActivityExecutionContext\n- uid: System.Workflow.ComponentModel.TransactionScopeActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.ComponentModel.TransactionScopeActivity\n  isExternal: false\n  name: Execute(ActivityExecutionContext)\n  nameWithType: TransactionScopeActivity.Execute(ActivityExecutionContext)\n  fullName: System.Workflow.ComponentModel.TransactionScopeActivity.Execute(ActivityExecutionContext)\n- uid: System.Workflow.ComponentModel.TransactionScopeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.TransactionScopeActivity\n  isExternal: false\n  name: OnActivityChangeRemove(ActivityExecutionContext,Activity)\n  nameWithType: TransactionScopeActivity.OnActivityChangeRemove(ActivityExecutionContext,Activity)\n  fullName: System.Workflow.ComponentModel.TransactionScopeActivity.OnActivityChangeRemove(ActivityExecutionContext,Activity)\n- uid: System.Workflow.ComponentModel.Activity\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Workflow.ComponentModel.Activity\n- uid: System.Workflow.ComponentModel.TransactionScopeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.ComponentModel.TransactionScopeActivity\n  isExternal: false\n  name: OnWorkflowChangesCompleted(ActivityExecutionContext)\n  nameWithType: TransactionScopeActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)\n  fullName: System.Workflow.ComponentModel.TransactionScopeActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)\n- uid: System.Workflow.ComponentModel.TransactionScopeActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)\n  parent: System.Workflow.ComponentModel.TransactionScopeActivity\n  isExternal: false\n  name: System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)\n  nameWithType: TransactionScopeActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)\n  fullName: System.Workflow.ComponentModel.TransactionScopeActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionStatusChangedEventArgs\n  nameWithType: ActivityExecutionStatusChangedEventArgs\n  fullName: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs\n- uid: System.Workflow.ComponentModel.TransactionScopeActivity.TransactionOptions\n  parent: System.Workflow.ComponentModel.TransactionScopeActivity\n  isExternal: false\n  name: TransactionOptions\n  nameWithType: TransactionScopeActivity.TransactionOptions\n  fullName: System.Workflow.ComponentModel.TransactionScopeActivity.TransactionOptions\n- uid: System.Workflow.ComponentModel.WorkflowTransactionOptions\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: WorkflowTransactionOptions\n  nameWithType: WorkflowTransactionOptions\n  fullName: System.Workflow.ComponentModel.WorkflowTransactionOptions\n- uid: System.Workflow.ComponentModel.TransactionScopeActivity.#ctor*\n  parent: System.Workflow.ComponentModel.TransactionScopeActivity\n  isExternal: false\n  name: TransactionScopeActivity\n  nameWithType: TransactionScopeActivity.TransactionScopeActivity\n- uid: System.Workflow.ComponentModel.TransactionScopeActivity.Cancel*\n  parent: System.Workflow.ComponentModel.TransactionScopeActivity\n  isExternal: false\n  name: Cancel\n  nameWithType: TransactionScopeActivity.Cancel\n- uid: System.Workflow.ComponentModel.TransactionScopeActivity.Execute*\n  parent: System.Workflow.ComponentModel.TransactionScopeActivity\n  isExternal: false\n  name: Execute\n  nameWithType: TransactionScopeActivity.Execute\n- uid: System.Workflow.ComponentModel.TransactionScopeActivity.OnActivityChangeRemove*\n  parent: System.Workflow.ComponentModel.TransactionScopeActivity\n  isExternal: false\n  name: OnActivityChangeRemove\n  nameWithType: TransactionScopeActivity.OnActivityChangeRemove\n- uid: System.Workflow.ComponentModel.TransactionScopeActivity.OnWorkflowChangesCompleted*\n  parent: System.Workflow.ComponentModel.TransactionScopeActivity\n  isExternal: false\n  name: OnWorkflowChangesCompleted\n  nameWithType: TransactionScopeActivity.OnWorkflowChangesCompleted\n- uid: System.Workflow.ComponentModel.TransactionScopeActivity.System#Workflow#ComponentModel#IActivityEventListener<System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs>#OnEvent*\n  parent: System.Workflow.ComponentModel.TransactionScopeActivity\n  isExternal: false\n  name: System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>.OnEvent\n  nameWithType: TransactionScopeActivity.System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>.OnEvent\n- uid: System.Workflow.ComponentModel.TransactionScopeActivity.TransactionOptions*\n  parent: System.Workflow.ComponentModel.TransactionScopeActivity\n  isExternal: false\n  name: TransactionOptions\n  nameWithType: TransactionScopeActivity.TransactionOptions\n"}