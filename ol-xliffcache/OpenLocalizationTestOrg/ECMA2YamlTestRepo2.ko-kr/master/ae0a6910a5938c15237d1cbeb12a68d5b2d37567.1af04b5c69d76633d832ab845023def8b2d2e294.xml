{"nodes":[{"pos":[536,919],"content":"Used in conjunction with signaling the <xref href=\"System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged\"></xref> event.  It is signaled whenever a <xref href=\"System.Net.PeerToPeer.PeerNameRecord\"></xref> object is found in response to a <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*> operation on a specific <xref href=\"System.Net.PeerToPeer.PeerName\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Used in conjunction with signaling the <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","pos":[0,128],"source":"Used in conjunction with signaling the <xref href=\"System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged\"></xref> event."},{"content":"It is signaled whenever a <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRecord\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is found in response to a &lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*&gt; operation on a specific <bpt id=\"p2\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[130,383],"source":"  It is signaled whenever a <xref href=\"System.Net.PeerToPeer.PeerNameRecord\"></xref> object is found in response to a <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*> operation on a specific <xref href=\"System.Net.PeerToPeer.PeerName\"></xref>."}]},{"pos":[932,1625],"content":"If multiple peer name record objects exist in the cloud(s) being queried, this event is signaled once for each record object found. The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event is raised only once when all endpoints have been found.       Normal process completion implies that either the Resolver object has reached the end of the cloud(s) to query for peer names, or it has reached the maximum number of record entries for the peer name record collection it is constructing.       All references to this instance of the Resolver are coordinated with the token userState <xref:System.Object>, which is a unique identifier for this asynchronous resolve request.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If multiple peer name record objects exist in the cloud(s) being queried, this event is signaled once for each record object found. The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event is raised only once when all endpoints have been found.       Normal process completion implies that either the Resolver object has reached the end of the cloud(s) to query for peer names, or it has reached the maximum number of record entries for the peer name record collection it is constructing.       All references to this instance of the Resolver are coordinated with the token userState <xref:System.Object>, which is a unique identifier for this asynchronous resolve request.","pos":[0,689],"nodes":[{"content":"If multiple peer name record objects exist in the cloud(s) being queried, this event is signaled once for each record object found.","pos":[0,131]},{"content":"The &lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt; event is raised only once when all endpoints have been found.","pos":[132,260],"source":" The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event is raised only once when all endpoints have been found."},{"content":"Normal process completion implies that either the Resolver object has reached the end of the cloud(s) to query for peer names, or it has reached the maximum number of record entries for the peer name record collection it is constructing.","pos":[267,504]},{"content":"All references to this instance of the Resolver are coordinated with the token userState &lt;xref:System.Object&gt;, which is a unique identifier for this asynchronous resolve request.","pos":[511,689],"source":"       All references to this instance of the Resolver are coordinated with the token userState <xref:System.Object>, which is a unique identifier for this asynchronous resolve request."}]}]},{"pos":[2526,2641],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.ResolveProgressChangedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Net.PeerToPeer.ResolveProgressChangedEventArgs\"></xref> class."},{"pos":[2654,2859],"content":"The resolved peer name is accessible via the <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> property.       The user state is inherited from <xref:System.ComponentModel.AsyncCompletedEventArgs>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The resolved peer name is accessible via the <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> property.       The user state is inherited from <xref:System.ComponentModel.AsyncCompletedEventArgs>.","pos":[0,203],"nodes":[{"content":"The resolved peer name is accessible via the &lt;xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A&gt; property.","pos":[0,110],"source":"The resolved peer name is accessible via the <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> property."},{"content":"The user state is inherited from &lt;xref:System.ComponentModel.AsyncCompletedEventArgs&gt;.","pos":[117,203],"source":"       The user state is inherited from <xref:System.ComponentModel.AsyncCompletedEventArgs>."}]}]},{"pos":[3105,3186],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRecord\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to be found.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Net.PeerToPeer.PeerNameRecord\"></xref> object to be found."},{"pos":[3252,3379],"content":"The unique user state object supplied when a <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*> operation was started.","needQuote":true,"needEscape":true,"nodes":[{"content":"The unique user state object supplied when a &lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*&gt; operation was started.","pos":[0,127],"source":"The unique user state object supplied when a <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*> operation was started."}]},{"pos":[3933,4018],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRecord\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to resolve.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Net.PeerToPeer.PeerNameRecord\"></xref> object to resolve."},{"pos":[4030,4492],"content":"Unsecured peer names can be registered simultaneously by different users in the same <xref:System.Net.PeerToPeer.Cloud>, and associated with different endpoints. Consequently, the <xref:System.Net.PeerToPeer.PeerNameResolver> class is used to resolve peer names to clouds or peer names to peer name records. The event to report progress is raised each time a peer name is found while the Resolver is querying clouds for the <xref:System.Net.PeerToPeer.PeerName>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Unsecured peer names can be registered simultaneously by different users in the same <xref:System.Net.PeerToPeer.Cloud>, and associated with different endpoints. Consequently, the <xref:System.Net.PeerToPeer.PeerNameResolver> class is used to resolve peer names to clouds or peer names to peer name records. The event to report progress is raised each time a peer name is found while the Resolver is querying clouds for the <xref:System.Net.PeerToPeer.PeerName>.","pos":[0,462],"nodes":[{"content":"Unsecured peer names can be registered simultaneously by different users in the same &lt;xref:System.Net.PeerToPeer.Cloud&gt;, and associated with different endpoints.","pos":[0,161],"source":"Unsecured peer names can be registered simultaneously by different users in the same <xref:System.Net.PeerToPeer.Cloud>, and associated with different endpoints."},{"content":"Consequently, the &lt;xref:System.Net.PeerToPeer.PeerNameResolver&gt; class is used to resolve peer names to clouds or peer names to peer name records.","pos":[162,307],"source":" Consequently, the <xref:System.Net.PeerToPeer.PeerNameResolver> class is used to resolve peer names to clouds or peer names to peer name records."},{"content":"The event to report progress is raised each time a peer name is found while the Resolver is querying clouds for the &lt;xref:System.Net.PeerToPeer.PeerName&gt;.","pos":[308,462],"source":" The event to report progress is raised each time a peer name is found while the Resolver is querying clouds for the <xref:System.Net.PeerToPeer.PeerName>."}]}]},{"pos":[4665,5120],"content":"The peer name record object found in response to a <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*> operation on a specific <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>.       Unless explicitly specified, the default value for all properties is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> for reference types and zero (0) for properties of type <xref uid=\"langword_csharp_int\" name=\"int\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The peer name record object found in response to a &lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync<bpt id=\"p1\">*</bpt>&gt; operation on a specific &lt;xref:System.Net.PeerToPeer.PeerNameRecord.PeerName<ept id=\"p1\">*</ept>&gt;.","pos":[0,189],"source":"The peer name record object found in response to a <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*> operation on a specific <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>."},{"content":"Unless explicitly specified, the default value for all properties is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for reference types and zero (0) for properties of type <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_int\" name=\"int\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[196,441],"source":"       Unless explicitly specified, the default value for all properties is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> for reference types and zero (0) for properties of type <xref uid=\"langword_csharp_int\" name=\"int\" href=\"\"></xref>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.PeerToPeer.ResolveProgressChangedEventArgs\n  id: ResolveProgressChangedEventArgs\n  children:\n  - System.Net.PeerToPeer.ResolveProgressChangedEventArgs.#ctor(System.Net.PeerToPeer.PeerNameRecord,System.Object)\n  - System.Net.PeerToPeer.ResolveProgressChangedEventArgs.PeerNameRecord\n  langs:\n  - csharp\n  name: ResolveProgressChangedEventArgs\n  nameWithType: ResolveProgressChangedEventArgs\n  fullName: System.Net.PeerToPeer.ResolveProgressChangedEventArgs\n  type: Class\n  summary: Used in conjunction with signaling the <xref href=\"System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged\"></xref> event.  It is signaled whenever a <xref href=\"System.Net.PeerToPeer.PeerNameRecord\"></xref> object is found in response to a <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*> operation on a specific <xref href=\"System.Net.PeerToPeer.PeerName\"></xref>.\n  remarks: \"If multiple peer name record objects exist in the cloud(s) being queried, this event is signaled once for each record object found. The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event is raised only once when all endpoints have been found.  \\n  \\n Normal process completion implies that either the Resolver object has reached the end of the cloud(s) to query for peer names, or it has reached the maximum number of record entries for the peer name record collection it is constructing.  \\n  \\n All references to this instance of the Resolver are coordinated with the token userState <xref:System.Object>, which is a unique identifier for this asynchronous resolve request.\"\n  syntax:\n    content: 'public class ResolveProgressChangedEventArgs : System.ComponentModel.ProgressChangedEventArgs'\n  inheritance:\n  - System.ComponentModel.ProgressChangedEventArgs\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Net.PeerToPeer.ResolveProgressChangedEventArgs.#ctor(System.Net.PeerToPeer.PeerNameRecord,System.Object)\n  id: '#ctor(System.Net.PeerToPeer.PeerNameRecord,System.Object)'\n  parent: System.Net.PeerToPeer.ResolveProgressChangedEventArgs\n  langs:\n  - csharp\n  name: ResolveProgressChangedEventArgs(PeerNameRecord,Object)\n  nameWithType: ResolveProgressChangedEventArgs.ResolveProgressChangedEventArgs(PeerNameRecord,Object)\n  fullName: System.Net.PeerToPeer.ResolveProgressChangedEventArgs.ResolveProgressChangedEventArgs(PeerNameRecord,Object)\n  type: Constructor\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Initializes a new instance of the <xref href=\"System.Net.PeerToPeer.ResolveProgressChangedEventArgs\"></xref> class.\n  remarks: \"The resolved peer name is accessible via the <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> property.  \\n  \\n The user state is inherited from <xref:System.ComponentModel.AsyncCompletedEventArgs>.\"\n  syntax:\n    content: public ResolveProgressChangedEventArgs (System.Net.PeerToPeer.PeerNameRecord peerNameRecord, object userToken);\n    parameters:\n    - id: peerNameRecord\n      type: System.Net.PeerToPeer.PeerNameRecord\n      description: The <xref href=\"System.Net.PeerToPeer.PeerNameRecord\"></xref> object to be found.\n    - id: userToken\n      type: System.Object\n      description: The unique user state object supplied when a <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*> operation was started.\n  overload: System.Net.PeerToPeer.ResolveProgressChangedEventArgs.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.PeerToPeer.ResolveProgressChangedEventArgs.PeerNameRecord\n  id: PeerNameRecord\n  parent: System.Net.PeerToPeer.ResolveProgressChangedEventArgs\n  langs:\n  - csharp\n  name: PeerNameRecord\n  nameWithType: ResolveProgressChangedEventArgs.PeerNameRecord\n  fullName: System.Net.PeerToPeer.ResolveProgressChangedEventArgs.PeerNameRecord\n  type: Property\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Gets the <xref href=\"System.Net.PeerToPeer.PeerNameRecord\"></xref> object to resolve.\n  remarks: Unsecured peer names can be registered simultaneously by different users in the same <xref:System.Net.PeerToPeer.Cloud>, and associated with different endpoints. Consequently, the <xref:System.Net.PeerToPeer.PeerNameResolver> class is used to resolve peer names to clouds or peer names to peer name records. The event to report progress is raised each time a peer name is found while the Resolver is querying clouds for the <xref:System.Net.PeerToPeer.PeerName>.\n  syntax:\n    content: public System.Net.PeerToPeer.PeerNameRecord PeerNameRecord { get; }\n    return:\n      type: System.Net.PeerToPeer.PeerNameRecord\n      description: \"The peer name record object found in response to a <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*> operation on a specific <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>.  \\n  \\n Unless explicitly specified, the default value for all properties is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> for reference types and zero (0) for properties of type <xref uid=\\\"langword_csharp_int\\\" name=\\\"int\\\" href=\\\"\\\"></xref>.\"\n  overload: System.Net.PeerToPeer.ResolveProgressChangedEventArgs.PeerNameRecord*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.ProgressChangedEventArgs\n  isExternal: false\n  name: System.ComponentModel.ProgressChangedEventArgs\n- uid: System.Net.PeerToPeer.ResolveProgressChangedEventArgs.#ctor(System.Net.PeerToPeer.PeerNameRecord,System.Object)\n  parent: System.Net.PeerToPeer.ResolveProgressChangedEventArgs\n  isExternal: false\n  name: ResolveProgressChangedEventArgs(PeerNameRecord,Object)\n  nameWithType: ResolveProgressChangedEventArgs.ResolveProgressChangedEventArgs(PeerNameRecord,Object)\n  fullName: System.Net.PeerToPeer.ResolveProgressChangedEventArgs.ResolveProgressChangedEventArgs(PeerNameRecord,Object)\n- uid: System.Net.PeerToPeer.PeerNameRecord\n  parent: System.Net.PeerToPeer\n  isExternal: false\n  name: PeerNameRecord\n  nameWithType: PeerNameRecord\n  fullName: System.Net.PeerToPeer.PeerNameRecord\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Net.PeerToPeer.ResolveProgressChangedEventArgs.PeerNameRecord\n  parent: System.Net.PeerToPeer.ResolveProgressChangedEventArgs\n  isExternal: false\n  name: PeerNameRecord\n  nameWithType: ResolveProgressChangedEventArgs.PeerNameRecord\n  fullName: System.Net.PeerToPeer.ResolveProgressChangedEventArgs.PeerNameRecord\n- uid: System.Net.PeerToPeer.ResolveProgressChangedEventArgs.#ctor*\n  parent: System.Net.PeerToPeer.ResolveProgressChangedEventArgs\n  isExternal: false\n  name: ResolveProgressChangedEventArgs\n  nameWithType: ResolveProgressChangedEventArgs.ResolveProgressChangedEventArgs\n- uid: System.Net.PeerToPeer.ResolveProgressChangedEventArgs.PeerNameRecord*\n  parent: System.Net.PeerToPeer.ResolveProgressChangedEventArgs\n  isExternal: false\n  name: PeerNameRecord\n  nameWithType: ResolveProgressChangedEventArgs.PeerNameRecord\n"}