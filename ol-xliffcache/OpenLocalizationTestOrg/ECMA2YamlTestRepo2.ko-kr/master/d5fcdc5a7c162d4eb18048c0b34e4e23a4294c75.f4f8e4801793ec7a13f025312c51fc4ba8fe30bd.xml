{"nodes":[{"pos":[725,880],"content":"Represents a configuration element that specifies the settings for a Windows credential to be used to represent the client. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a configuration element that specifies the settings for a Windows credential to be used to represent the client. This class cannot be inherited.","pos":[0,155],"nodes":[{"content":"Represents a configuration element that specifies the settings for a Windows credential to be used to represent the client.","pos":[0,123]},{"content":"This class cannot be inherited.","pos":[124,155]}]}]},{"pos":[4290,4406],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Configuration.WindowsClientElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.WindowsClientElement\"></xref> class."},{"pos":[5103,5152],"content":"Gets or sets the permissible impersonation level.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the permissible impersonation level.","pos":[0,49]}]},{"pos":[5164,5262],"content":"See <xref:System.Security.Principal.TokenImpersonationLevel> for a description of the enumeration.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"See &lt;xref:System.Security.Principal.TokenImpersonationLevel&gt; for a description of the enumeration.","pos":[0,98],"source":"See <xref:System.Security.Principal.TokenImpersonationLevel> for a description of the enumeration."}]},{"pos":[5476,5671],"content":"A valid <xref:System.Security.Principal.TokenImpersonationLevel> value that specifies the permissible impersonation level. The default is <xref:System.Security.Principal.TokenImpersonationLevel>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A valid <xref:System.Security.Principal.TokenImpersonationLevel> value that specifies the permissible impersonation level. The default is <xref:System.Security.Principal.TokenImpersonationLevel>.","pos":[0,195],"nodes":[{"content":"A valid &lt;xref:System.Security.Principal.TokenImpersonationLevel&gt; value that specifies the permissible impersonation level.","pos":[0,122],"source":"A valid <xref:System.Security.Principal.TokenImpersonationLevel> value that specifies the permissible impersonation level."},{"content":"The default is &lt;xref:System.Security.Principal.TokenImpersonationLevel&gt;.","pos":[123,195],"source":" The default is <xref:System.Security.Principal.TokenImpersonationLevel>."}]}]},{"pos":[6234,6317],"content":"Gets or sets a boolean value that specifies whether NTLM authentication is allowed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a boolean value that specifies whether NTLM authentication is allowed.","pos":[0,83]}]},{"pos":[6329,6484],"content":"When this property is set to `true`, Windows security is enabled at the workgroup level. Otherwise, Windows security is only supported at the domain level.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When this property is set to <ph id=\"ph1\">`true`</ph>, Windows security is enabled at the workgroup level.","pos":[0,88],"source":"When this property is set to `true`, Windows security is enabled at the workgroup level."},{"content":"Otherwise, Windows security is only supported at the domain level.","pos":[89,155]}]},{"pos":[6602,6874],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if Windows security is enabled in the workgroup scenario; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if Windows security is enabled in the workgroup scenario; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,193],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if Windows security is enabled in the workgroup scenario; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[194,272],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[7572,7660],"content":"Copies the content of the specified configuration element to this configuration element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies the content of the specified configuration element to this configuration element.","pos":[0,88]}]},{"pos":[7881,7920],"content":"The configuration element to be copied.","needQuote":true,"needEscape":true,"nodes":[{"content":"The configuration element to be copied.","pos":[0,39]}]},{"pos":[8110,8192],"content":"<ph id=\"ph1\">&lt;code&gt;from&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>from</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[8337,8373],"content":"The configuration file is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"The configuration file is read-only.","pos":[0,36]}]},{"pos":[9030,9042],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Configuration.WindowsClientElement\n  id: WindowsClientElement\n  children:\n  - System.ServiceModel.Configuration.WindowsClientElement.#ctor\n  - System.ServiceModel.Configuration.WindowsClientElement.AllowedImpersonationLevel\n  - System.ServiceModel.Configuration.WindowsClientElement.AllowNtlm\n  - System.ServiceModel.Configuration.WindowsClientElement.Copy(System.ServiceModel.Configuration.WindowsClientElement)\n  - System.ServiceModel.Configuration.WindowsClientElement.Properties\n  langs:\n  - csharp\n  name: WindowsClientElement\n  nameWithType: WindowsClientElement\n  fullName: System.ServiceModel.Configuration.WindowsClientElement\n  type: Class\n  summary: Represents a configuration element that specifies the settings for a Windows credential to be used to represent the client. This class cannot be inherited.\n  syntax:\n    content: 'public sealed class WindowsClientElement : System.Configuration.ConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.WindowsClientElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Configuration.WindowsClientElement\n  langs:\n  - csharp\n  name: WindowsClientElement()\n  nameWithType: WindowsClientElement.WindowsClientElement()\n  fullName: System.ServiceModel.Configuration.WindowsClientElement.WindowsClientElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.WindowsClientElement\"></xref> class.\n  syntax:\n    content: public WindowsClientElement ();\n    parameters: []\n  overload: System.ServiceModel.Configuration.WindowsClientElement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.WindowsClientElement.AllowedImpersonationLevel\n  id: AllowedImpersonationLevel\n  parent: System.ServiceModel.Configuration.WindowsClientElement\n  langs:\n  - csharp\n  name: AllowedImpersonationLevel\n  nameWithType: WindowsClientElement.AllowedImpersonationLevel\n  fullName: System.ServiceModel.Configuration.WindowsClientElement.AllowedImpersonationLevel\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the permissible impersonation level.\n  remarks: See <xref:System.Security.Principal.TokenImpersonationLevel> for a description of the enumeration.\n  syntax:\n    content: public System.Security.Principal.TokenImpersonationLevel AllowedImpersonationLevel { get; set; }\n    return:\n      type: System.Security.Principal.TokenImpersonationLevel\n      description: A valid <xref:System.Security.Principal.TokenImpersonationLevel> value that specifies the permissible impersonation level. The default is <xref:System.Security.Principal.TokenImpersonationLevel>.\n  overload: System.ServiceModel.Configuration.WindowsClientElement.AllowedImpersonationLevel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.WindowsClientElement.AllowNtlm\n  id: AllowNtlm\n  parent: System.ServiceModel.Configuration.WindowsClientElement\n  langs:\n  - csharp\n  name: AllowNtlm\n  nameWithType: WindowsClientElement.AllowNtlm\n  fullName: System.ServiceModel.Configuration.WindowsClientElement.AllowNtlm\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a boolean value that specifies whether NTLM authentication is allowed.\n  remarks: When this property is set to `true`, Windows security is enabled at the workgroup level. Otherwise, Windows security is only supported at the domain level.\n  syntax:\n    content: public bool AllowNtlm { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if Windows security is enabled in the workgroup scenario; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Configuration.WindowsClientElement.AllowNtlm*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.WindowsClientElement.Copy(System.ServiceModel.Configuration.WindowsClientElement)\n  id: Copy(System.ServiceModel.Configuration.WindowsClientElement)\n  parent: System.ServiceModel.Configuration.WindowsClientElement\n  langs:\n  - csharp\n  name: Copy(WindowsClientElement)\n  nameWithType: WindowsClientElement.Copy(WindowsClientElement)\n  fullName: System.ServiceModel.Configuration.WindowsClientElement.Copy(WindowsClientElement)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Copies the content of the specified configuration element to this configuration element.\n  syntax:\n    content: public void Copy (System.ServiceModel.Configuration.WindowsClientElement from);\n    parameters:\n    - id: from\n      type: System.ServiceModel.Configuration.WindowsClientElement\n      description: The configuration element to be copied.\n  overload: System.ServiceModel.Configuration.WindowsClientElement.Copy*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>from</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Configuration.ConfigurationErrorsException\n    commentId: T:System.Configuration.ConfigurationErrorsException\n    description: The configuration file is read-only.\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.WindowsClientElement.Properties\n  id: Properties\n  parent: System.ServiceModel.Configuration.WindowsClientElement\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: WindowsClientElement.Properties\n  fullName: System.ServiceModel.Configuration.WindowsClientElement.Properties\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: To be added.\n  overload: System.ServiceModel.Configuration.WindowsClientElement.Properties*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: System.Configuration.ConfigurationElement\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Configuration.ConfigurationErrorsException\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationErrorsException\n  nameWithType: ConfigurationErrorsException\n  fullName: System.Configuration.ConfigurationErrorsException\n- uid: System.ServiceModel.Configuration.WindowsClientElement.#ctor\n  parent: System.ServiceModel.Configuration.WindowsClientElement\n  isExternal: false\n  name: WindowsClientElement()\n  nameWithType: WindowsClientElement.WindowsClientElement()\n  fullName: System.ServiceModel.Configuration.WindowsClientElement.WindowsClientElement()\n- uid: System.ServiceModel.Configuration.WindowsClientElement.AllowedImpersonationLevel\n  parent: System.ServiceModel.Configuration.WindowsClientElement\n  isExternal: false\n  name: AllowedImpersonationLevel\n  nameWithType: WindowsClientElement.AllowedImpersonationLevel\n  fullName: System.ServiceModel.Configuration.WindowsClientElement.AllowedImpersonationLevel\n- uid: System.Security.Principal.TokenImpersonationLevel\n  parent: System.Security.Principal\n  isExternal: true\n  name: TokenImpersonationLevel\n  nameWithType: TokenImpersonationLevel\n  fullName: System.Security.Principal.TokenImpersonationLevel\n- uid: System.ServiceModel.Configuration.WindowsClientElement.AllowNtlm\n  parent: System.ServiceModel.Configuration.WindowsClientElement\n  isExternal: false\n  name: AllowNtlm\n  nameWithType: WindowsClientElement.AllowNtlm\n  fullName: System.ServiceModel.Configuration.WindowsClientElement.AllowNtlm\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Configuration.WindowsClientElement.Copy(System.ServiceModel.Configuration.WindowsClientElement)\n  parent: System.ServiceModel.Configuration.WindowsClientElement\n  isExternal: false\n  name: Copy(WindowsClientElement)\n  nameWithType: WindowsClientElement.Copy(WindowsClientElement)\n  fullName: System.ServiceModel.Configuration.WindowsClientElement.Copy(WindowsClientElement)\n- uid: System.ServiceModel.Configuration.WindowsClientElement\n  parent: System.ServiceModel.Configuration\n  isExternal: false\n  name: WindowsClientElement\n  nameWithType: WindowsClientElement\n  fullName: System.ServiceModel.Configuration.WindowsClientElement\n- uid: System.ServiceModel.Configuration.WindowsClientElement.Properties\n  parent: System.ServiceModel.Configuration.WindowsClientElement\n  isExternal: false\n  name: Properties\n  nameWithType: WindowsClientElement.Properties\n  fullName: System.ServiceModel.Configuration.WindowsClientElement.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.ServiceModel.Configuration.WindowsClientElement.#ctor*\n  parent: System.ServiceModel.Configuration.WindowsClientElement\n  isExternal: false\n  name: WindowsClientElement\n  nameWithType: WindowsClientElement.WindowsClientElement\n- uid: System.ServiceModel.Configuration.WindowsClientElement.AllowedImpersonationLevel*\n  parent: System.ServiceModel.Configuration.WindowsClientElement\n  isExternal: false\n  name: AllowedImpersonationLevel\n  nameWithType: WindowsClientElement.AllowedImpersonationLevel\n- uid: System.ServiceModel.Configuration.WindowsClientElement.AllowNtlm*\n  parent: System.ServiceModel.Configuration.WindowsClientElement\n  isExternal: false\n  name: AllowNtlm\n  nameWithType: WindowsClientElement.AllowNtlm\n- uid: System.ServiceModel.Configuration.WindowsClientElement.Copy*\n  parent: System.ServiceModel.Configuration.WindowsClientElement\n  isExternal: false\n  name: Copy\n  nameWithType: WindowsClientElement.Copy\n- uid: System.ServiceModel.Configuration.WindowsClientElement.Properties*\n  parent: System.ServiceModel.Configuration.WindowsClientElement\n  isExternal: false\n  name: Properties\n  nameWithType: WindowsClientElement.Properties\n"}