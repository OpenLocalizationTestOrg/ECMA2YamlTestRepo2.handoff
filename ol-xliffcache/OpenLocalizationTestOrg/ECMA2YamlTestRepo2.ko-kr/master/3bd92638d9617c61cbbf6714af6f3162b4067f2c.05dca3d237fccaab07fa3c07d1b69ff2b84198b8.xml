{"nodes":[{"pos":[585,639],"content":"Represents an abstraction of a database table or view.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents an abstraction of a database table or view.","pos":[0,54]}]},{"pos":[1139,1235],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.Linq.Mapping.MetaTable\"></xref> class."},{"pos":[1756,1864],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.DataContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> method that is used to perform delete operations.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Data.Linq.DataContext\"></xref> method that is used to perform delete operations."},{"pos":[2027,2125],"content":"The <xref:System.Reflection.MethodInfo> that corresponds to the method used for delete operations.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Reflection.MethodInfo&gt; that corresponds to the method used for delete operations.","pos":[0,98],"source":"The <xref:System.Reflection.MethodInfo> that corresponds to the method used for delete operations."}]},{"pos":[2587,2695],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.DataContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> method that is used to perform insert operations.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Data.Linq.DataContext\"></xref> method that is used to perform insert operations."},{"pos":[2858,2956],"content":"The <xref:System.Reflection.MethodInfo> that corresponds to the method used for insert operations.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Reflection.MethodInfo&gt; that corresponds to the method used for insert operations.","pos":[0,98],"source":"The <xref:System.Reflection.MethodInfo> that corresponds to the method used for insert operations."}]},{"pos":[3383,3523],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaModel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains this <bpt id=\"p2\">&lt;xref href=\"System.Data.Linq.Mapping.MetaTable\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Data.Linq.Mapping.MetaModel\"></xref> that contains this <xref href=\"System.Data.Linq.Mapping.MetaTable\"></xref>."},{"pos":[3691,3780],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaModel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that includes this MetaTable.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Data.Linq.Mapping.MetaModel\"></xref> that includes this MetaTable."},{"pos":[4210,4323],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that describes the type of the rows of the table.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref> that describes the type of the rows of the table."},{"pos":[4491,4521],"content":"The type of rows in the table.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of rows in the table.","pos":[0,30]}]},{"pos":[4963,5017],"content":"Gets the name of the table as defined by the database.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the table as defined by the database.","pos":[0,54]}]},{"pos":[5140,5242],"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> representing the name of the table.","needQuote":true,"needEscape":true,"source":"A <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref> representing the name of the table."},{"pos":[5701,5809],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.DataContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> method that is used to perform update operations.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Data.Linq.DataContext\"></xref> method that is used to perform update operations."},{"pos":[5972,6070],"content":"The <xref:System.Reflection.MethodInfo> that corresponds to the method used for update operations.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Reflection.MethodInfo&gt; that corresponds to the method used for update operations.","pos":[0,98],"source":"The <xref:System.Reflection.MethodInfo> that corresponds to the method used for update operations."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Linq.Mapping.MetaTable\n  id: MetaTable\n  children:\n  - System.Data.Linq.Mapping.MetaTable.#ctor\n  - System.Data.Linq.Mapping.MetaTable.DeleteMethod\n  - System.Data.Linq.Mapping.MetaTable.InsertMethod\n  - System.Data.Linq.Mapping.MetaTable.Model\n  - System.Data.Linq.Mapping.MetaTable.RowType\n  - System.Data.Linq.Mapping.MetaTable.TableName\n  - System.Data.Linq.Mapping.MetaTable.UpdateMethod\n  langs:\n  - csharp\n  name: MetaTable\n  nameWithType: MetaTable\n  fullName: System.Data.Linq.Mapping.MetaTable\n  type: Class\n  summary: Represents an abstraction of a database table or view.\n  syntax:\n    content: public abstract class MetaTable\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaTable.#ctor\n  id: '#ctor'\n  parent: System.Data.Linq.Mapping.MetaTable\n  langs:\n  - csharp\n  name: MetaTable()\n  nameWithType: MetaTable.MetaTable()\n  fullName: System.Data.Linq.Mapping.MetaTable.MetaTable()\n  type: Constructor\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Initializes a new instance of the <xref href=\"System.Data.Linq.Mapping.MetaTable\"></xref> class.\n  syntax:\n    content: protected MetaTable ();\n    parameters: []\n  overload: System.Data.Linq.Mapping.MetaTable.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaTable.DeleteMethod\n  id: DeleteMethod\n  parent: System.Data.Linq.Mapping.MetaTable\n  langs:\n  - csharp\n  name: DeleteMethod\n  nameWithType: MetaTable.DeleteMethod\n  fullName: System.Data.Linq.Mapping.MetaTable.DeleteMethod\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the <xref href=\"System.Data.Linq.DataContext\"></xref> method that is used to perform delete operations.\n  syntax:\n    content: public abstract System.Reflection.MethodInfo DeleteMethod { get; }\n    return:\n      type: System.Reflection.MethodInfo\n      description: The <xref:System.Reflection.MethodInfo> that corresponds to the method used for delete operations.\n  overload: System.Data.Linq.Mapping.MetaTable.DeleteMethod*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaTable.InsertMethod\n  id: InsertMethod\n  parent: System.Data.Linq.Mapping.MetaTable\n  langs:\n  - csharp\n  name: InsertMethod\n  nameWithType: MetaTable.InsertMethod\n  fullName: System.Data.Linq.Mapping.MetaTable.InsertMethod\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the <xref href=\"System.Data.Linq.DataContext\"></xref> method that is used to perform insert operations.\n  syntax:\n    content: public abstract System.Reflection.MethodInfo InsertMethod { get; }\n    return:\n      type: System.Reflection.MethodInfo\n      description: The <xref:System.Reflection.MethodInfo> that corresponds to the method used for insert operations.\n  overload: System.Data.Linq.Mapping.MetaTable.InsertMethod*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaTable.Model\n  id: Model\n  parent: System.Data.Linq.Mapping.MetaTable\n  langs:\n  - csharp\n  name: Model\n  nameWithType: MetaTable.Model\n  fullName: System.Data.Linq.Mapping.MetaTable.Model\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the <xref href=\"System.Data.Linq.Mapping.MetaModel\"></xref> that contains this <xref href=\"System.Data.Linq.Mapping.MetaTable\"></xref>.\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.MetaModel Model { get; }\n    return:\n      type: System.Data.Linq.Mapping.MetaModel\n      description: The <xref href=\"System.Data.Linq.Mapping.MetaModel\"></xref> that includes this MetaTable.\n  overload: System.Data.Linq.Mapping.MetaTable.Model*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaTable.RowType\n  id: RowType\n  parent: System.Data.Linq.Mapping.MetaTable\n  langs:\n  - csharp\n  name: RowType\n  nameWithType: MetaTable.RowType\n  fullName: System.Data.Linq.Mapping.MetaTable.RowType\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref> that describes the type of the rows of the table.\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.MetaType RowType { get; }\n    return:\n      type: System.Data.Linq.Mapping.MetaType\n      description: The type of rows in the table.\n  overload: System.Data.Linq.Mapping.MetaTable.RowType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaTable.TableName\n  id: TableName\n  parent: System.Data.Linq.Mapping.MetaTable\n  langs:\n  - csharp\n  name: TableName\n  nameWithType: MetaTable.TableName\n  fullName: System.Data.Linq.Mapping.MetaTable.TableName\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the name of the table as defined by the database.\n  syntax:\n    content: public abstract string TableName { get; }\n    return:\n      type: System.String\n      description: A <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref> representing the name of the table.\n  overload: System.Data.Linq.Mapping.MetaTable.TableName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaTable.UpdateMethod\n  id: UpdateMethod\n  parent: System.Data.Linq.Mapping.MetaTable\n  langs:\n  - csharp\n  name: UpdateMethod\n  nameWithType: MetaTable.UpdateMethod\n  fullName: System.Data.Linq.Mapping.MetaTable.UpdateMethod\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the <xref href=\"System.Data.Linq.DataContext\"></xref> method that is used to perform update operations.\n  syntax:\n    content: public abstract System.Reflection.MethodInfo UpdateMethod { get; }\n    return:\n      type: System.Reflection.MethodInfo\n      description: The <xref:System.Reflection.MethodInfo> that corresponds to the method used for update operations.\n  overload: System.Data.Linq.Mapping.MetaTable.UpdateMethod*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Data.Linq.Mapping.MetaTable.#ctor\n  parent: System.Data.Linq.Mapping.MetaTable\n  isExternal: false\n  name: MetaTable()\n  nameWithType: MetaTable.MetaTable()\n  fullName: System.Data.Linq.Mapping.MetaTable.MetaTable()\n- uid: System.Data.Linq.Mapping.MetaTable.DeleteMethod\n  parent: System.Data.Linq.Mapping.MetaTable\n  isExternal: false\n  name: DeleteMethod\n  nameWithType: MetaTable.DeleteMethod\n  fullName: System.Data.Linq.Mapping.MetaTable.DeleteMethod\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: true\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.Data.Linq.Mapping.MetaTable.InsertMethod\n  parent: System.Data.Linq.Mapping.MetaTable\n  isExternal: false\n  name: InsertMethod\n  nameWithType: MetaTable.InsertMethod\n  fullName: System.Data.Linq.Mapping.MetaTable.InsertMethod\n- uid: System.Data.Linq.Mapping.MetaTable.Model\n  parent: System.Data.Linq.Mapping.MetaTable\n  isExternal: false\n  name: Model\n  nameWithType: MetaTable.Model\n  fullName: System.Data.Linq.Mapping.MetaTable.Model\n- uid: System.Data.Linq.Mapping.MetaModel\n  parent: System.Data.Linq.Mapping\n  isExternal: false\n  name: MetaModel\n  nameWithType: MetaModel\n  fullName: System.Data.Linq.Mapping.MetaModel\n- uid: System.Data.Linq.Mapping.MetaTable.RowType\n  parent: System.Data.Linq.Mapping.MetaTable\n  isExternal: false\n  name: RowType\n  nameWithType: MetaTable.RowType\n  fullName: System.Data.Linq.Mapping.MetaTable.RowType\n- uid: System.Data.Linq.Mapping.MetaType\n  parent: System.Data.Linq.Mapping\n  isExternal: false\n  name: MetaType\n  nameWithType: MetaType\n  fullName: System.Data.Linq.Mapping.MetaType\n- uid: System.Data.Linq.Mapping.MetaTable.TableName\n  parent: System.Data.Linq.Mapping.MetaTable\n  isExternal: false\n  name: TableName\n  nameWithType: MetaTable.TableName\n  fullName: System.Data.Linq.Mapping.MetaTable.TableName\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Linq.Mapping.MetaTable.UpdateMethod\n  parent: System.Data.Linq.Mapping.MetaTable\n  isExternal: false\n  name: UpdateMethod\n  nameWithType: MetaTable.UpdateMethod\n  fullName: System.Data.Linq.Mapping.MetaTable.UpdateMethod\n- uid: System.Data.Linq.Mapping.MetaTable.#ctor*\n  parent: System.Data.Linq.Mapping.MetaTable\n  isExternal: false\n  name: MetaTable\n  nameWithType: MetaTable.MetaTable\n- uid: System.Data.Linq.Mapping.MetaTable.DeleteMethod*\n  parent: System.Data.Linq.Mapping.MetaTable\n  isExternal: false\n  name: DeleteMethod\n  nameWithType: MetaTable.DeleteMethod\n- uid: System.Data.Linq.Mapping.MetaTable.InsertMethod*\n  parent: System.Data.Linq.Mapping.MetaTable\n  isExternal: false\n  name: InsertMethod\n  nameWithType: MetaTable.InsertMethod\n- uid: System.Data.Linq.Mapping.MetaTable.Model*\n  parent: System.Data.Linq.Mapping.MetaTable\n  isExternal: false\n  name: Model\n  nameWithType: MetaTable.Model\n- uid: System.Data.Linq.Mapping.MetaTable.RowType*\n  parent: System.Data.Linq.Mapping.MetaTable\n  isExternal: false\n  name: RowType\n  nameWithType: MetaTable.RowType\n- uid: System.Data.Linq.Mapping.MetaTable.TableName*\n  parent: System.Data.Linq.Mapping.MetaTable\n  isExternal: false\n  name: TableName\n  nameWithType: MetaTable.TableName\n- uid: System.Data.Linq.Mapping.MetaTable.UpdateMethod*\n  parent: System.Data.Linq.Mapping.MetaTable\n  isExternal: false\n  name: UpdateMethod\n  nameWithType: MetaTable.UpdateMethod\n"}