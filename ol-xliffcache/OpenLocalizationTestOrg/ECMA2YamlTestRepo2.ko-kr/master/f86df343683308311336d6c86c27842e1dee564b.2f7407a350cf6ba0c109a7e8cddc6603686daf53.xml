{"nodes":[{"pos":[2409,2748],"content":"Provides a simple implementation of the <xref href=\"System.Web.HttpWorkerRequest\"></xref> abstract class that can be used to host ASP.NET applications outside an Internet Information Services (IIS) application. You can employ <xref uid=\"langword_csharp_SimpleWorkerRequest\" name=\"SimpleWorkerRequest\" href=\"\"></xref> directly or extend it.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a simple implementation of the <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpWorkerRequest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> abstract class that can be used to host ASP.NET applications outside an Internet Information Services (IIS) application.","pos":[0,210],"source":"Provides a simple implementation of the <xref href=\"System.Web.HttpWorkerRequest\"></xref> abstract class that can be used to host ASP.NET applications outside an Internet Information Services (IIS) application."},{"content":"You can employ <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_SimpleWorkerRequest\" name=\"SimpleWorkerRequest\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> directly or extend it.","pos":[211,339],"source":" You can employ <xref uid=\"langword_csharp_SimpleWorkerRequest\" name=\"SimpleWorkerRequest\" href=\"\"></xref> directly or extend it."}]},{"pos":[2760,3171],"content":"This simple implementation of `HttpWorkerRequest` provides the request URL and the query string and captures the body of the output into a <xref:System.IO.TextWriter>. To achieve richer functionality, such as providing posted content and headers and capturing the response headers or response body as binary data, you should extend `SimpleWorkerRequest` and override the appropriate `HttpWorkerRequest` methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This simple implementation of <ph id=\"ph1\">`HttpWorkerRequest`</ph> provides the request URL and the query string and captures the body of the output into a &lt;xref:System.IO.TextWriter&gt;.","pos":[0,167],"source":"This simple implementation of `HttpWorkerRequest` provides the request URL and the query string and captures the body of the output into a <xref:System.IO.TextWriter>."},{"content":"To achieve richer functionality, such as providing posted content and headers and capturing the response headers or response body as binary data, you should extend <ph id=\"ph1\">`SimpleWorkerRequest`</ph> and override the appropriate <ph id=\"ph2\">`HttpWorkerRequest`</ph> methods.","pos":[168,411],"source":" To achieve richer functionality, such as providing posted content and headers and capturing the response headers or response body as binary data, you should extend `SimpleWorkerRequest` and override the appropriate `HttpWorkerRequest` methods."}]},{"pos":[9905,10139],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Hosting.SimpleWorkerRequest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class when the target application domain has been created using the &lt;xref:System.Web.Hosting.ApplicationHost.CreateApplicationHost*&gt; method.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Hosting.SimpleWorkerRequest\"></xref> class when the target application domain has been created using the <xref:System.Web.Hosting.ApplicationHost.CreateApplicationHost*> method."},{"pos":[10324,10422],"content":"The page to be requested (or the virtual path to the page, relative to the application directory).","needQuote":true,"needEscape":true,"nodes":[{"content":"The page to be requested (or the virtual path to the page, relative to the application directory).","pos":[0,98]}]},{"pos":[10484,10513],"content":"The text of the query string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The text of the query string.","pos":[0,29]}]},{"pos":[10583,10651],"content":"A <xref:System.IO.TextWriter> that captures output from the response","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.IO.TextWriter&gt; that captures output from the response","pos":[0,68],"source":"A <xref:System.IO.TextWriter> that captures output from the response"}]},{"pos":[11408,11840],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Hosting.SimpleWorkerRequest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class for use in an arbitrary application domain, when the user code creates an <bpt id=\"p2\">&lt;xref href=\"System.Web.HttpContext\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> (passing the <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_SimpleWorkerRequest\" name=\"SimpleWorkerRequest\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> as an argument to the <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_HttpContext\" name=\"HttpContext\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> constructor).","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Hosting.SimpleWorkerRequest\"></xref> class for use in an arbitrary application domain, when the user code creates an <xref href=\"System.Web.HttpContext\"></xref> (passing the <xref uid=\"langword_csharp_SimpleWorkerRequest\" name=\"SimpleWorkerRequest\" href=\"\"></xref> as an argument to the <xref uid=\"langword_csharp_HttpContext\" name=\"HttpContext\" href=\"\"></xref> constructor)."},{"pos":[12079,12146],"content":"The virtual path to the application directory; for example, \"/app\".","needQuote":true,"needEscape":true,"nodes":[{"content":"The virtual path to the application directory; for example, \"/app\".","pos":[0,67]}]},{"pos":[12217,12287],"content":"The physical path to the application directory; for example, \"c:\\app\".","needQuote":true,"needEscape":true,"nodes":[{"content":"The physical path to the application directory; for example, \"c:\\app\".","pos":[0,70]}]},{"pos":[12348,12421],"content":"The virtual path for the request (relative to the application directory).","needQuote":true,"needEscape":true,"nodes":[{"content":"The virtual path for the request (relative to the application directory).","pos":[0,73]}]},{"pos":[12483,12512],"content":"The text of the query string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The text of the query string.","pos":[0,29]}]},{"pos":[12582,12655],"content":"A <xref:System.IO.TextWriter> that captures the output from the response.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.IO.TextWriter&gt; that captures the output from the response.","pos":[0,73],"source":"A <xref:System.IO.TextWriter> that captures the output from the response."}]},{"pos":[12822,12900],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">appVirtualDir</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter cannot be overridden in this context.","needQuote":true,"needEscape":true,"source":"The <code>appVirtualDir</code> parameter cannot be overridden in this context."},{"pos":[13298,13421],"content":"Notifies the <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpWorkerRequest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that request processing for the current request is complete.","needQuote":true,"needEscape":true,"source":"Notifies the <xref href=\"System.Web.HttpWorkerRequest\"></xref> that request processing for the current request is complete."},{"pos":[14039,14085],"content":"Sends all pending response data to the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sends all pending response data to the client.","pos":[0,46]}]},{"pos":[14246,14437],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this is the last time response data will be flushed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this is the last time response data will be flushed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[14908,14979],"content":"Returns the virtual path to the currently executing server application.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the virtual path to the currently executing server application.","pos":[0,71]}]},{"pos":[15117,15161],"content":"The virtual path of the current application.","needQuote":true,"needEscape":true,"nodes":[{"content":"The virtual path of the current application.","pos":[0,44]}]},{"pos":[15679,15757],"content":"Returns the UNC-translated path to the currently executing server application.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the UNC-translated path to the currently executing server application.","pos":[0,78]}]},{"pos":[15905,15950],"content":"The physical path of the current application.","needQuote":true,"needEscape":true,"nodes":[{"content":"The physical path of the current application.","pos":[0,45]}]},{"pos":[16433,16480],"content":"Returns the physical path to the requested URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the physical path to the requested URI.","pos":[0,47]}]},{"pos":[16619,16658],"content":"The physical path to the requested URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"The physical path to the requested URI.","pos":[0,39]}]},{"pos":[17183,17344],"content":"Returns the physical file path to the requested URI (and translates it from virtual path to physical path: for example, \"/proj1/page.aspx\" to \"c:\\dir\\page.aspx\")","needQuote":false,"needEscape":true,"nodes":[{"content":"Returns the physical file path to the requested URI (and translates it from virtual path to physical path: for example, \"/proj1/page.aspx\" to \"c:\\dir\\page.aspx\")","pos":[0,161]}]},{"pos":[17494,17549],"content":"The translated physical file path to the requested URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"The translated physical file path to the requested URI.","pos":[0,55]}]},{"pos":[18053,18083],"content":"Returns the HTTP request verb.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the HTTP request verb.","pos":[0,30]}]},{"pos":[18226,18257],"content":"The HTTP verb for this request.","needQuote":true,"needEscape":true,"nodes":[{"content":"The HTTP verb for this request.","pos":[0,31]}]},{"pos":[18750,18823],"content":"Returns the HTTP version string of the request (for example, \"HTTP/1.1\").","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the HTTP version string of the request (for example, \"HTTP/1.1\").","pos":[0,73]}]},{"pos":[18965,19020],"content":"The HTTP version string returned in the request header.","needQuote":true,"needEscape":true,"nodes":[{"content":"The HTTP version string returned in the request header.","pos":[0,55]}]},{"pos":[19517,19598],"content":"Returns the server IP address of the interface on which the request was received.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the server IP address of the interface on which the request was received.","pos":[0,81]}]},{"pos":[19741,19814],"content":"The server IP address of the interface on which the request was received.","needQuote":true,"needEscape":true,"nodes":[{"content":"The server IP address of the interface on which the request was received.","pos":[0,73]}]},{"pos":[20297,20355],"content":"Returns the port number on which the request was received.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the port number on which the request was received.","pos":[0,58]}]},{"pos":[20491,20548],"content":"The server port number on which the request was received.","needQuote":true,"needEscape":true,"nodes":[{"content":"The server port number on which the request was received.","pos":[0,57]}]},{"pos":[21023,21168],"content":"Returns additional path information for a resource with a URL extension. That is, for the path /virdir/page.html/tail, the return value is /tail.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns additional path information for a resource with a URL extension. That is, for the path /virdir/page.html/tail, the return value is /tail.","pos":[0,145],"nodes":[{"content":"Returns additional path information for a resource with a URL extension.","pos":[0,72]},{"content":"That is, for the path /virdir/page.html/tail, the return value is /tail.","pos":[73,145]}]}]},{"pos":[21307,21350],"content":"Additional path information for a resource.","needQuote":true,"needEscape":true,"nodes":[{"content":"Additional path information for a resource.","pos":[0,43]}]},{"pos":[21839,21893],"content":"Returns the query string specified in the request URL.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the query string specified in the request URL.","pos":[0,54]}]},{"pos":[22035,22060],"content":"The request query string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The request query string.","pos":[0,25]}]},{"pos":[22527,22603],"content":"Returns the URL path contained in the header with the query string appended.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the URL path contained in the header with the query string appended.","pos":[0,76]}]},{"pos":[22741,23009],"content":"The raw URL path of the request header.       <div class=\"alert NOTE\">    The returned URL is not normalized. Using the URL for access control, or security-sensitive decisions can expose your application to canonicalization security vulnerabilities.      </div>","needQuote":false,"needEscape":true,"nodes":[{"content":"The raw URL path of the request header.","pos":[0,39]},{"content":"The returned URL is not normalized. Using the URL for access control, or security-sensitive decisions can expose your application to canonicalization security vulnerabilities.","pos":[74,249],"nodes":[{"content":"The returned URL is not normalized.","pos":[0,35]},{"content":"Using the URL for access control, or security-sensitive decisions can expose your application to canonicalization security vulnerabilities.","pos":[36,175]}]}]},{"pos":[23507,23544],"content":"Returns the IP address of the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the IP address of the client.","pos":[0,37]}]},{"pos":[23688,23712],"content":"The client's IP address.","needQuote":true,"needEscape":true,"nodes":[{"content":"The client's IP address.","pos":[0,24]}]},{"pos":[24201,24234],"content":"Returns the client's port number.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the client's port number.","pos":[0,33]}]},{"pos":[24371,24396],"content":"The client's port number.","needQuote":true,"needEscape":true,"nodes":[{"content":"The client's port number.","pos":[0,25]}]},{"pos":[24950,25049],"content":"Returns a single server variable from a dictionary of server variables associated with the request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a single server variable from a dictionary of server variables associated with the request.","pos":[0,99]}]},{"pos":[25205,25247],"content":"The name of the requested server variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the requested server variable.","pos":[0,42]}]},{"pos":[25305,25335],"content":"The requested server variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The requested server variable.","pos":[0,30]}]},{"pos":[25810,25856],"content":"Returns the virtual path to the requested URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the virtual path to the requested URI.","pos":[0,46]}]},{"pos":[25994,26024],"content":"The path to the requested URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path to the requested URI.","pos":[0,30]}]},{"pos":[26502,26543],"content":"Returns the client's impersonation token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the client's impersonation token.","pos":[0,41]}]},{"pos":[26683,26774],"content":"A value representing the client's impersonation token. The default is <xref:System.IntPtr>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value representing the client's impersonation token. The default is <xref:System.IntPtr>.","pos":[0,91],"nodes":[{"content":"A value representing the client's impersonation token.","pos":[0,54]},{"content":"The default is &lt;xref:System.IntPtr&gt;.","pos":[55,91],"source":" The default is <xref:System.IntPtr>."}]}]},{"pos":[27275,27330],"content":"Gets the full physical path to the Machine.config file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the full physical path to the Machine.config file.","pos":[0,55]}]},{"pos":[27461,27506],"content":"The physical path to the Machine.config file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The physical path to the Machine.config file.","pos":[0,45]}]},{"pos":[28042,28123],"content":"Gets the physical path to the directory where the ASP.NET binaries are installed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the physical path to the directory where the ASP.NET binaries are installed.","pos":[0,81]}]},{"pos":[28260,28311],"content":"The physical directory to the ASP.NET binary files.","needQuote":true,"needEscape":true,"nodes":[{"content":"The physical directory to the ASP.NET binary files.","pos":[0,51]}]},{"pos":[28825,28895],"content":"Returns the physical path corresponding to the specified virtual path.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the physical path corresponding to the specified virtual path.","pos":[0,70]}]},{"pos":[29041,29058],"content":"The virtual path.","needQuote":true,"needEscape":true,"nodes":[{"content":"The virtual path.","pos":[0,17]}]},{"pos":[29116,29216],"content":"The physical path that corresponds to the virtual path specified in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"The physical path that corresponds to the virtual path specified in the <code>path</code> parameter."},{"pos":[29712,29768],"content":"Gets the full physical path to the root Web.config file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the full physical path to the root Web.config file.","pos":[0,56]}]},{"pos":[29899,29945],"content":"The physical path to the root Web.config file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The physical path to the root Web.config file.","pos":[0,46]}]},{"pos":[30577,30621],"content":"Adds a standard HTTP header to the response.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a standard HTTP header to the response.","pos":[0,44]}]},{"pos":[30793,30894],"content":"The header index. For example, <xref href=\"System.Web.HttpWorkerRequest.HeaderContentLength\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The header index.","pos":[0,17]},{"content":"For example, <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpWorkerRequest.HeaderContentLength\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[18,101],"source":" For example, <xref href=\"System.Web.HttpWorkerRequest.HeaderContentLength\"></xref>."}]},{"pos":[30956,30973],"content":"The header value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The header value.","pos":[0,17]}]},{"pos":[31640,31792],"content":"Adds the contents of the file with the specified handle to the response and specifies the starting position in the file and the number of bytes to send.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the contents of the file with the specified handle to the response and specifies the starting position in the file and the number of bytes to send.","pos":[0,152]}]},{"pos":[31979,32010],"content":"The handle of the file to send.","needQuote":true,"needEscape":true,"nodes":[{"content":"The handle of the file to send.","pos":[0,31]}]},{"pos":[32072,32106],"content":"The starting position in the file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The starting position in the file.","pos":[0,34]}]},{"pos":[32168,32196],"content":"The number of bytes to send.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of bytes to send.","pos":[0,28]}]},{"pos":[32860,33010],"content":"Adds the contents of the file with the specified name to the response and specifies the starting position in the file and the number of bytes to send.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the contents of the file with the specified name to the response and specifies the starting position in the file and the number of bytes to send.","pos":[0,150]}]},{"pos":[33201,33230],"content":"The name of the file to send.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the file to send.","pos":[0,29]}]},{"pos":[33292,33326],"content":"The starting position in the file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The starting position in the file.","pos":[0,34]}]},{"pos":[33388,33416],"content":"The number of bytes to send.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of bytes to send.","pos":[0,28]}]},{"pos":[34046,34138],"content":"Adds the contents of a byte array to the response and specifies the number of bytes to send.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the contents of a byte array to the response and specifies the number of bytes to send.","pos":[0,92]}]},{"pos":[34309,34332],"content":"The byte array to send.","needQuote":true,"needEscape":true,"nodes":[{"content":"The byte array to send.","pos":[0,23]}]},{"pos":[34394,34422],"content":"The number of bytes to send.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of bytes to send.","pos":[0,28]}]},{"pos":[34994,35100],"content":"Specifies the HTTP status code and status description of the response; for example, SendStatus(200, \"Ok\").","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the HTTP status code and status description of the response; for example, SendStatus(200, \"Ok\").","pos":[0,106]}]},{"pos":[35281,35304],"content":"The status code to send","needQuote":true,"needEscape":true,"nodes":[{"content":"The status code to send","pos":[0,23]}]},{"pos":[35378,35409],"content":"The status description to send.","needQuote":true,"needEscape":true,"nodes":[{"content":"The status description to send.","pos":[0,31]}]},{"pos":[36049,36096],"content":"Adds a nonstandard HTTP header to the response.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a nonstandard HTTP header to the response.","pos":[0,47]}]},{"pos":[36272,36303],"content":"The name of the header to send.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the header to send.","pos":[0,31]}]},{"pos":[36365,36389],"content":"The value of the header.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the header.","pos":[0,24]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Hosting.SimpleWorkerRequest\n  id: SimpleWorkerRequest\n  children:\n  - System.Web.Hosting.SimpleWorkerRequest.#ctor(System.String,System.String,System.IO.TextWriter)\n  - System.Web.Hosting.SimpleWorkerRequest.#ctor(System.String,System.String,System.String,System.String,System.IO.TextWriter)\n  - System.Web.Hosting.SimpleWorkerRequest.EndOfRequest\n  - System.Web.Hosting.SimpleWorkerRequest.FlushResponse(System.Boolean)\n  - System.Web.Hosting.SimpleWorkerRequest.GetAppPath\n  - System.Web.Hosting.SimpleWorkerRequest.GetAppPathTranslated\n  - System.Web.Hosting.SimpleWorkerRequest.GetFilePath\n  - System.Web.Hosting.SimpleWorkerRequest.GetFilePathTranslated\n  - System.Web.Hosting.SimpleWorkerRequest.GetHttpVerbName\n  - System.Web.Hosting.SimpleWorkerRequest.GetHttpVersion\n  - System.Web.Hosting.SimpleWorkerRequest.GetLocalAddress\n  - System.Web.Hosting.SimpleWorkerRequest.GetLocalPort\n  - System.Web.Hosting.SimpleWorkerRequest.GetPathInfo\n  - System.Web.Hosting.SimpleWorkerRequest.GetQueryString\n  - System.Web.Hosting.SimpleWorkerRequest.GetRawUrl\n  - System.Web.Hosting.SimpleWorkerRequest.GetRemoteAddress\n  - System.Web.Hosting.SimpleWorkerRequest.GetRemotePort\n  - System.Web.Hosting.SimpleWorkerRequest.GetServerVariable(System.String)\n  - System.Web.Hosting.SimpleWorkerRequest.GetUriPath\n  - System.Web.Hosting.SimpleWorkerRequest.GetUserToken\n  - System.Web.Hosting.SimpleWorkerRequest.MachineConfigPath\n  - System.Web.Hosting.SimpleWorkerRequest.MachineInstallDirectory\n  - System.Web.Hosting.SimpleWorkerRequest.MapPath(System.String)\n  - System.Web.Hosting.SimpleWorkerRequest.RootWebConfigPath\n  - System.Web.Hosting.SimpleWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)\n  - System.Web.Hosting.SimpleWorkerRequest.SendResponseFromFile(System.IntPtr,System.Int64,System.Int64)\n  - System.Web.Hosting.SimpleWorkerRequest.SendResponseFromFile(System.String,System.Int64,System.Int64)\n  - System.Web.Hosting.SimpleWorkerRequest.SendResponseFromMemory(System.Byte[],System.Int32)\n  - System.Web.Hosting.SimpleWorkerRequest.SendStatus(System.Int32,System.String)\n  - System.Web.Hosting.SimpleWorkerRequest.SendUnknownResponseHeader(System.String,System.String)\n  langs:\n  - csharp\n  name: SimpleWorkerRequest\n  nameWithType: SimpleWorkerRequest\n  fullName: System.Web.Hosting.SimpleWorkerRequest\n  type: Class\n  summary: Provides a simple implementation of the <xref href=\"System.Web.HttpWorkerRequest\"></xref> abstract class that can be used to host ASP.NET applications outside an Internet Information Services (IIS) application. You can employ <xref uid=\"langword_csharp_SimpleWorkerRequest\" name=\"SimpleWorkerRequest\" href=\"\"></xref> directly or extend it.\n  remarks: This simple implementation of `HttpWorkerRequest` provides the request URL and the query string and captures the body of the output into a <xref:System.IO.TextWriter>. To achieve richer functionality, such as providing posted content and headers and capturing the response headers or response body as binary data, you should extend `SimpleWorkerRequest` and override the appropriate `HttpWorkerRequest` methods.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public class SimpleWorkerRequest : System.Web.HttpWorkerRequest\n  inheritance:\n  - System.Object\n  - System.Web.HttpWorkerRequest\n  implements: []\n  inheritedMembers:\n  - System.Web.HttpWorkerRequest.BeginFlush(System.AsyncCallback,System.Object)\n  - System.Web.HttpWorkerRequest.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.Web.HttpWorkerRequest.CloseConnection\n  - System.Web.HttpWorkerRequest.EndFlush(System.IAsyncResult)\n  - System.Web.HttpWorkerRequest.EndRead(System.IAsyncResult)\n  - System.Web.HttpWorkerRequest.GetAppPoolID\n  - System.Web.HttpWorkerRequest.GetBytesRead\n  - System.Web.HttpWorkerRequest.GetClientCertificate\n  - System.Web.HttpWorkerRequest.GetClientCertificateBinaryIssuer\n  - System.Web.HttpWorkerRequest.GetClientCertificateEncoding\n  - System.Web.HttpWorkerRequest.GetClientCertificatePublicKey\n  - System.Web.HttpWorkerRequest.GetClientCertificateValidFrom\n  - System.Web.HttpWorkerRequest.GetClientCertificateValidUntil\n  - System.Web.HttpWorkerRequest.GetConnectionID\n  - System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)\n  - System.Web.HttpWorkerRequest.GetKnownRequestHeaderIndex(System.String)\n  - System.Web.HttpWorkerRequest.GetKnownRequestHeaderName(System.Int32)\n  - System.Web.HttpWorkerRequest.GetKnownResponseHeaderIndex(System.String)\n  - System.Web.HttpWorkerRequest.GetKnownResponseHeaderName(System.Int32)\n  - System.Web.HttpWorkerRequest.GetPreloadedEntityBody\n  - System.Web.HttpWorkerRequest.GetPreloadedEntityBody(System.Byte[],System.Int32)\n  - System.Web.HttpWorkerRequest.GetPreloadedEntityBodyLength\n  - System.Web.HttpWorkerRequest.GetProtocol\n  - System.Web.HttpWorkerRequest.GetQueryStringRawBytes\n  - System.Web.HttpWorkerRequest.GetRemoteName\n  - System.Web.HttpWorkerRequest.GetRequestReason\n  - System.Web.HttpWorkerRequest.GetServerName\n  - System.Web.HttpWorkerRequest.GetStatusDescription(System.Int32)\n  - System.Web.HttpWorkerRequest.GetTotalEntityBodyLength\n  - System.Web.HttpWorkerRequest.GetUnknownRequestHeader(System.String)\n  - System.Web.HttpWorkerRequest.GetUnknownRequestHeaders\n  - System.Web.HttpWorkerRequest.GetUrlContextID\n  - System.Web.HttpWorkerRequest.GetVirtualPathToken\n  - System.Web.HttpWorkerRequest.HasEntityBody\n  - System.Web.HttpWorkerRequest.HeaderAccept\n  - System.Web.HttpWorkerRequest.HeaderAcceptCharset\n  - System.Web.HttpWorkerRequest.HeaderAcceptEncoding\n  - System.Web.HttpWorkerRequest.HeaderAcceptLanguage\n  - System.Web.HttpWorkerRequest.HeaderAcceptRanges\n  - System.Web.HttpWorkerRequest.HeaderAge\n  - System.Web.HttpWorkerRequest.HeaderAllow\n  - System.Web.HttpWorkerRequest.HeaderAuthorization\n  - System.Web.HttpWorkerRequest.HeaderCacheControl\n  - System.Web.HttpWorkerRequest.HeaderConnection\n  - System.Web.HttpWorkerRequest.HeaderContentEncoding\n  - System.Web.HttpWorkerRequest.HeaderContentLanguage\n  - System.Web.HttpWorkerRequest.HeaderContentLength\n  - System.Web.HttpWorkerRequest.HeaderContentLocation\n  - System.Web.HttpWorkerRequest.HeaderContentMd5\n  - System.Web.HttpWorkerRequest.HeaderContentRange\n  - System.Web.HttpWorkerRequest.HeaderContentType\n  - System.Web.HttpWorkerRequest.HeaderCookie\n  - System.Web.HttpWorkerRequest.HeaderDate\n  - System.Web.HttpWorkerRequest.HeaderEtag\n  - System.Web.HttpWorkerRequest.HeaderExpect\n  - System.Web.HttpWorkerRequest.HeaderExpires\n  - System.Web.HttpWorkerRequest.HeaderFrom\n  - System.Web.HttpWorkerRequest.HeaderHost\n  - System.Web.HttpWorkerRequest.HeaderIfMatch\n  - System.Web.HttpWorkerRequest.HeaderIfModifiedSince\n  - System.Web.HttpWorkerRequest.HeaderIfNoneMatch\n  - System.Web.HttpWorkerRequest.HeaderIfRange\n  - System.Web.HttpWorkerRequest.HeaderIfUnmodifiedSince\n  - System.Web.HttpWorkerRequest.HeaderKeepAlive\n  - System.Web.HttpWorkerRequest.HeaderLastModified\n  - System.Web.HttpWorkerRequest.HeaderLocation\n  - System.Web.HttpWorkerRequest.HeaderMaxForwards\n  - System.Web.HttpWorkerRequest.HeaderPragma\n  - System.Web.HttpWorkerRequest.HeaderProxyAuthenticate\n  - System.Web.HttpWorkerRequest.HeaderProxyAuthorization\n  - System.Web.HttpWorkerRequest.HeaderRange\n  - System.Web.HttpWorkerRequest.HeaderReferer\n  - System.Web.HttpWorkerRequest.HeaderRetryAfter\n  - System.Web.HttpWorkerRequest.HeaderServer\n  - System.Web.HttpWorkerRequest.HeaderSetCookie\n  - System.Web.HttpWorkerRequest.HeadersSent\n  - System.Web.HttpWorkerRequest.HeaderTe\n  - System.Web.HttpWorkerRequest.HeaderTrailer\n  - System.Web.HttpWorkerRequest.HeaderTransferEncoding\n  - System.Web.HttpWorkerRequest.HeaderUpgrade\n  - System.Web.HttpWorkerRequest.HeaderUserAgent\n  - System.Web.HttpWorkerRequest.HeaderVary\n  - System.Web.HttpWorkerRequest.HeaderVia\n  - System.Web.HttpWorkerRequest.HeaderWarning\n  - System.Web.HttpWorkerRequest.HeaderWwwAuthenticate\n  - System.Web.HttpWorkerRequest.IsClientConnected\n  - System.Web.HttpWorkerRequest.IsEntireEntityBodyIsPreloaded\n  - System.Web.HttpWorkerRequest.IsSecure\n  - System.Web.HttpWorkerRequest.ReadEntityBody(System.Byte[],System.Int32)\n  - System.Web.HttpWorkerRequest.ReadEntityBody(System.Byte[],System.Int32,System.Int32)\n  - System.Web.HttpWorkerRequest.ReasonCachePolicy\n  - System.Web.HttpWorkerRequest.ReasonCacheSecurity\n  - System.Web.HttpWorkerRequest.ReasonClientDisconnect\n  - System.Web.HttpWorkerRequest.ReasonDefault\n  - System.Web.HttpWorkerRequest.ReasonFileHandleCacheMiss\n  - System.Web.HttpWorkerRequest.ReasonResponseCacheMiss\n  - System.Web.HttpWorkerRequest.RequestHeaderMaximum\n  - System.Web.HttpWorkerRequest.RequestTraceIdentifier\n  - System.Web.HttpWorkerRequest.ResponseHeaderMaximum\n  - System.Web.HttpWorkerRequest.SendCalculatedContentLength(System.Int32)\n  - System.Web.HttpWorkerRequest.SendCalculatedContentLength(System.Int64)\n  - System.Web.HttpWorkerRequest.SendResponseFromMemory(System.IntPtr,System.Int32)\n  - System.Web.HttpWorkerRequest.SetEndOfSendNotification(System.Web.HttpWorkerRequest.EndOfSendNotification,System.Object)\n  - System.Web.HttpWorkerRequest.SupportsAsyncFlush\n  - System.Web.HttpWorkerRequest.SupportsAsyncRead\n  platform:\n  - net462\n- uid: System.Web.Hosting.SimpleWorkerRequest.#ctor(System.String,System.String,System.IO.TextWriter)\n  id: '#ctor(System.String,System.String,System.IO.TextWriter)'\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  langs:\n  - csharp\n  name: SimpleWorkerRequest(String,String,TextWriter)\n  nameWithType: SimpleWorkerRequest.SimpleWorkerRequest(String,String,TextWriter)\n  fullName: System.Web.Hosting.SimpleWorkerRequest.SimpleWorkerRequest(String,String,TextWriter)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Initializes a new instance of the <xref href=\"System.Web.Hosting.SimpleWorkerRequest\"></xref> class when the target application domain has been created using the <xref:System.Web.Hosting.ApplicationHost.CreateApplicationHost*> method.\n  syntax:\n    content: public SimpleWorkerRequest (string page, string query, System.IO.TextWriter output);\n    parameters:\n    - id: page\n      type: System.String\n      description: The page to be requested (or the virtual path to the page, relative to the application directory).\n    - id: query\n      type: System.String\n      description: The text of the query string.\n    - id: output\n      type: System.IO.TextWriter\n      description: A <xref:System.IO.TextWriter> that captures output from the response\n  overload: System.Web.Hosting.SimpleWorkerRequest.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Hosting.SimpleWorkerRequest.#ctor(System.String,System.String,System.String,System.String,System.IO.TextWriter)\n  id: '#ctor(System.String,System.String,System.String,System.String,System.IO.TextWriter)'\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  langs:\n  - csharp\n  name: SimpleWorkerRequest(String,String,String,String,TextWriter)\n  nameWithType: SimpleWorkerRequest.SimpleWorkerRequest(String,String,String,String,TextWriter)\n  fullName: System.Web.Hosting.SimpleWorkerRequest.SimpleWorkerRequest(String,String,String,String,TextWriter)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Initializes a new instance of the <xref href=\"System.Web.Hosting.SimpleWorkerRequest\"></xref> class for use in an arbitrary application domain, when the user code creates an <xref href=\"System.Web.HttpContext\"></xref> (passing the <xref uid=\"langword_csharp_SimpleWorkerRequest\" name=\"SimpleWorkerRequest\" href=\"\"></xref> as an argument to the <xref uid=\"langword_csharp_HttpContext\" name=\"HttpContext\" href=\"\"></xref> constructor).\n  syntax:\n    content: public SimpleWorkerRequest (string appVirtualDir, string appPhysicalDir, string page, string query, System.IO.TextWriter output);\n    parameters:\n    - id: appVirtualDir\n      type: System.String\n      description: The virtual path to the application directory; for example, \"/app\".\n    - id: appPhysicalDir\n      type: System.String\n      description: The physical path to the application directory; for example, \"c:\\app\".\n    - id: page\n      type: System.String\n      description: The virtual path for the request (relative to the application directory).\n    - id: query\n      type: System.String\n      description: The text of the query string.\n    - id: output\n      type: System.IO.TextWriter\n      description: A <xref:System.IO.TextWriter> that captures the output from the response.\n  overload: System.Web.Hosting.SimpleWorkerRequest.#ctor*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: The <code>appVirtualDir</code> parameter cannot be overridden in this context.\n  platform:\n  - net462\n- uid: System.Web.Hosting.SimpleWorkerRequest.EndOfRequest\n  id: EndOfRequest\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  langs:\n  - csharp\n  name: EndOfRequest()\n  nameWithType: SimpleWorkerRequest.EndOfRequest()\n  fullName: System.Web.Hosting.SimpleWorkerRequest.EndOfRequest()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Notifies the <xref href=\"System.Web.HttpWorkerRequest\"></xref> that request processing for the current request is complete.\n  syntax:\n    content: public override void EndOfRequest ();\n    parameters: []\n  overload: System.Web.Hosting.SimpleWorkerRequest.EndOfRequest*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Hosting.SimpleWorkerRequest.FlushResponse(System.Boolean)\n  id: FlushResponse(System.Boolean)\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  langs:\n  - csharp\n  name: FlushResponse(Boolean)\n  nameWithType: SimpleWorkerRequest.FlushResponse(Boolean)\n  fullName: System.Web.Hosting.SimpleWorkerRequest.FlushResponse(Boolean)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Sends all pending response data to the client.\n  syntax:\n    content: public override void FlushResponse (bool finalFlush);\n    parameters:\n    - id: finalFlush\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this is the last time response data will be flushed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.Hosting.SimpleWorkerRequest.FlushResponse*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetAppPath\n  id: GetAppPath\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  langs:\n  - csharp\n  name: GetAppPath()\n  nameWithType: SimpleWorkerRequest.GetAppPath()\n  fullName: System.Web.Hosting.SimpleWorkerRequest.GetAppPath()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Returns the virtual path to the currently executing server application.\n  syntax:\n    content: public override string GetAppPath ();\n    parameters: []\n    return:\n      type: System.String\n      description: The virtual path of the current application.\n  overload: System.Web.Hosting.SimpleWorkerRequest.GetAppPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetAppPathTranslated\n  id: GetAppPathTranslated\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  langs:\n  - csharp\n  name: GetAppPathTranslated()\n  nameWithType: SimpleWorkerRequest.GetAppPathTranslated()\n  fullName: System.Web.Hosting.SimpleWorkerRequest.GetAppPathTranslated()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Returns the UNC-translated path to the currently executing server application.\n  syntax:\n    content: public override string GetAppPathTranslated ();\n    parameters: []\n    return:\n      type: System.String\n      description: The physical path of the current application.\n  overload: System.Web.Hosting.SimpleWorkerRequest.GetAppPathTranslated*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetFilePath\n  id: GetFilePath\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  langs:\n  - csharp\n  name: GetFilePath()\n  nameWithType: SimpleWorkerRequest.GetFilePath()\n  fullName: System.Web.Hosting.SimpleWorkerRequest.GetFilePath()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Returns the physical path to the requested URI.\n  syntax:\n    content: public override string GetFilePath ();\n    parameters: []\n    return:\n      type: System.String\n      description: The physical path to the requested URI.\n  overload: System.Web.Hosting.SimpleWorkerRequest.GetFilePath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetFilePathTranslated\n  id: GetFilePathTranslated\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  langs:\n  - csharp\n  name: GetFilePathTranslated()\n  nameWithType: SimpleWorkerRequest.GetFilePathTranslated()\n  fullName: System.Web.Hosting.SimpleWorkerRequest.GetFilePathTranslated()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: 'Returns the physical file path to the requested URI (and translates it from virtual path to physical path: for example, \"/proj1/page.aspx\" to \"c:\\dir\\page.aspx\")'\n  syntax:\n    content: public override string GetFilePathTranslated ();\n    parameters: []\n    return:\n      type: System.String\n      description: The translated physical file path to the requested URI.\n  overload: System.Web.Hosting.SimpleWorkerRequest.GetFilePathTranslated*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetHttpVerbName\n  id: GetHttpVerbName\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  langs:\n  - csharp\n  name: GetHttpVerbName()\n  nameWithType: SimpleWorkerRequest.GetHttpVerbName()\n  fullName: System.Web.Hosting.SimpleWorkerRequest.GetHttpVerbName()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Returns the HTTP request verb.\n  syntax:\n    content: public override string GetHttpVerbName ();\n    parameters: []\n    return:\n      type: System.String\n      description: The HTTP verb for this request.\n  overload: System.Web.Hosting.SimpleWorkerRequest.GetHttpVerbName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetHttpVersion\n  id: GetHttpVersion\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  langs:\n  - csharp\n  name: GetHttpVersion()\n  nameWithType: SimpleWorkerRequest.GetHttpVersion()\n  fullName: System.Web.Hosting.SimpleWorkerRequest.GetHttpVersion()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Returns the HTTP version string of the request (for example, \"HTTP/1.1\").\n  syntax:\n    content: public override string GetHttpVersion ();\n    parameters: []\n    return:\n      type: System.String\n      description: The HTTP version string returned in the request header.\n  overload: System.Web.Hosting.SimpleWorkerRequest.GetHttpVersion*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetLocalAddress\n  id: GetLocalAddress\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  langs:\n  - csharp\n  name: GetLocalAddress()\n  nameWithType: SimpleWorkerRequest.GetLocalAddress()\n  fullName: System.Web.Hosting.SimpleWorkerRequest.GetLocalAddress()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Returns the server IP address of the interface on which the request was received.\n  syntax:\n    content: public override string GetLocalAddress ();\n    parameters: []\n    return:\n      type: System.String\n      description: The server IP address of the interface on which the request was received.\n  overload: System.Web.Hosting.SimpleWorkerRequest.GetLocalAddress*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetLocalPort\n  id: GetLocalPort\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  langs:\n  - csharp\n  name: GetLocalPort()\n  nameWithType: SimpleWorkerRequest.GetLocalPort()\n  fullName: System.Web.Hosting.SimpleWorkerRequest.GetLocalPort()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Returns the port number on which the request was received.\n  syntax:\n    content: public override int GetLocalPort ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The server port number on which the request was received.\n  overload: System.Web.Hosting.SimpleWorkerRequest.GetLocalPort*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetPathInfo\n  id: GetPathInfo\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  langs:\n  - csharp\n  name: GetPathInfo()\n  nameWithType: SimpleWorkerRequest.GetPathInfo()\n  fullName: System.Web.Hosting.SimpleWorkerRequest.GetPathInfo()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Returns additional path information for a resource with a URL extension. That is, for the path /virdir/page.html/tail, the return value is /tail.\n  syntax:\n    content: public override string GetPathInfo ();\n    parameters: []\n    return:\n      type: System.String\n      description: Additional path information for a resource.\n  overload: System.Web.Hosting.SimpleWorkerRequest.GetPathInfo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetQueryString\n  id: GetQueryString\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  langs:\n  - csharp\n  name: GetQueryString()\n  nameWithType: SimpleWorkerRequest.GetQueryString()\n  fullName: System.Web.Hosting.SimpleWorkerRequest.GetQueryString()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Returns the query string specified in the request URL.\n  syntax:\n    content: public override string GetQueryString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The request query string.\n  overload: System.Web.Hosting.SimpleWorkerRequest.GetQueryString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetRawUrl\n  id: GetRawUrl\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  langs:\n  - csharp\n  name: GetRawUrl()\n  nameWithType: SimpleWorkerRequest.GetRawUrl()\n  fullName: System.Web.Hosting.SimpleWorkerRequest.GetRawUrl()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Returns the URL path contained in the header with the query string appended.\n  syntax:\n    content: public override string GetRawUrl ();\n    parameters: []\n    return:\n      type: System.String\n      description: \"The raw URL path of the request header.  \\n  \\n <div class=\\\"alert NOTE\\\">  \\n The returned URL is not normalized. Using the URL for access control, or security-sensitive decisions can expose your application to canonicalization security vulnerabilities.  \\n  \\n</div>\"\n  overload: System.Web.Hosting.SimpleWorkerRequest.GetRawUrl*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetRemoteAddress\n  id: GetRemoteAddress\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  langs:\n  - csharp\n  name: GetRemoteAddress()\n  nameWithType: SimpleWorkerRequest.GetRemoteAddress()\n  fullName: System.Web.Hosting.SimpleWorkerRequest.GetRemoteAddress()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Returns the IP address of the client.\n  syntax:\n    content: public override string GetRemoteAddress ();\n    parameters: []\n    return:\n      type: System.String\n      description: The client's IP address.\n  overload: System.Web.Hosting.SimpleWorkerRequest.GetRemoteAddress*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetRemotePort\n  id: GetRemotePort\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  langs:\n  - csharp\n  name: GetRemotePort()\n  nameWithType: SimpleWorkerRequest.GetRemotePort()\n  fullName: System.Web.Hosting.SimpleWorkerRequest.GetRemotePort()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Returns the client's port number.\n  syntax:\n    content: public override int GetRemotePort ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The client's port number.\n  overload: System.Web.Hosting.SimpleWorkerRequest.GetRemotePort*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetServerVariable(System.String)\n  id: GetServerVariable(System.String)\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  langs:\n  - csharp\n  name: GetServerVariable(String)\n  nameWithType: SimpleWorkerRequest.GetServerVariable(String)\n  fullName: System.Web.Hosting.SimpleWorkerRequest.GetServerVariable(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Returns a single server variable from a dictionary of server variables associated with the request.\n  syntax:\n    content: public override string GetServerVariable (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the requested server variable.\n    return:\n      type: System.String\n      description: The requested server variable.\n  overload: System.Web.Hosting.SimpleWorkerRequest.GetServerVariable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetUriPath\n  id: GetUriPath\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  langs:\n  - csharp\n  name: GetUriPath()\n  nameWithType: SimpleWorkerRequest.GetUriPath()\n  fullName: System.Web.Hosting.SimpleWorkerRequest.GetUriPath()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Returns the virtual path to the requested URI.\n  syntax:\n    content: public override string GetUriPath ();\n    parameters: []\n    return:\n      type: System.String\n      description: The path to the requested URI.\n  overload: System.Web.Hosting.SimpleWorkerRequest.GetUriPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetUserToken\n  id: GetUserToken\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  langs:\n  - csharp\n  name: GetUserToken()\n  nameWithType: SimpleWorkerRequest.GetUserToken()\n  fullName: System.Web.Hosting.SimpleWorkerRequest.GetUserToken()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Returns the client's impersonation token.\n  syntax:\n    content: public override IntPtr GetUserToken ();\n    parameters: []\n    return:\n      type: System.IntPtr\n      description: A value representing the client's impersonation token. The default is <xref:System.IntPtr>.\n  overload: System.Web.Hosting.SimpleWorkerRequest.GetUserToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Hosting.SimpleWorkerRequest.MachineConfigPath\n  id: MachineConfigPath\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  langs:\n  - csharp\n  name: MachineConfigPath\n  nameWithType: SimpleWorkerRequest.MachineConfigPath\n  fullName: System.Web.Hosting.SimpleWorkerRequest.MachineConfigPath\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Gets the full physical path to the Machine.config file.\n  syntax:\n    content: public override string MachineConfigPath { get; }\n    return:\n      type: System.String\n      description: The physical path to the Machine.config file.\n  overload: System.Web.Hosting.SimpleWorkerRequest.MachineConfigPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Hosting.SimpleWorkerRequest.MachineInstallDirectory\n  id: MachineInstallDirectory\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  langs:\n  - csharp\n  name: MachineInstallDirectory\n  nameWithType: SimpleWorkerRequest.MachineInstallDirectory\n  fullName: System.Web.Hosting.SimpleWorkerRequest.MachineInstallDirectory\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Gets the physical path to the directory where the ASP.NET binaries are installed.\n  syntax:\n    content: public override string MachineInstallDirectory { get; }\n    return:\n      type: System.String\n      description: The physical directory to the ASP.NET binary files.\n  overload: System.Web.Hosting.SimpleWorkerRequest.MachineInstallDirectory*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Hosting.SimpleWorkerRequest.MapPath(System.String)\n  id: MapPath(System.String)\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  langs:\n  - csharp\n  name: MapPath(String)\n  nameWithType: SimpleWorkerRequest.MapPath(String)\n  fullName: System.Web.Hosting.SimpleWorkerRequest.MapPath(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Returns the physical path corresponding to the specified virtual path.\n  syntax:\n    content: public override string MapPath (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: The virtual path.\n    return:\n      type: System.String\n      description: The physical path that corresponds to the virtual path specified in the <code>path</code> parameter.\n  overload: System.Web.Hosting.SimpleWorkerRequest.MapPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Hosting.SimpleWorkerRequest.RootWebConfigPath\n  id: RootWebConfigPath\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  langs:\n  - csharp\n  name: RootWebConfigPath\n  nameWithType: SimpleWorkerRequest.RootWebConfigPath\n  fullName: System.Web.Hosting.SimpleWorkerRequest.RootWebConfigPath\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Gets the full physical path to the root Web.config file.\n  syntax:\n    content: public override string RootWebConfigPath { get; }\n    return:\n      type: System.String\n      description: The physical path to the root Web.config file.\n  overload: System.Web.Hosting.SimpleWorkerRequest.RootWebConfigPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Hosting.SimpleWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)\n  id: SendKnownResponseHeader(System.Int32,System.String)\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  langs:\n  - csharp\n  name: SendKnownResponseHeader(Int32,String)\n  nameWithType: SimpleWorkerRequest.SendKnownResponseHeader(Int32,String)\n  fullName: System.Web.Hosting.SimpleWorkerRequest.SendKnownResponseHeader(Int32,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Adds a standard HTTP header to the response.\n  syntax:\n    content: public override void SendKnownResponseHeader (int index, string value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The header index. For example, <xref href=\"System.Web.HttpWorkerRequest.HeaderContentLength\"></xref>.\n    - id: value\n      type: System.String\n      description: The header value.\n  overload: System.Web.Hosting.SimpleWorkerRequest.SendKnownResponseHeader*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Hosting.SimpleWorkerRequest.SendResponseFromFile(System.IntPtr,System.Int64,System.Int64)\n  id: SendResponseFromFile(System.IntPtr,System.Int64,System.Int64)\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  langs:\n  - csharp\n  name: SendResponseFromFile(IntPtr,Int64,Int64)\n  nameWithType: SimpleWorkerRequest.SendResponseFromFile(IntPtr,Int64,Int64)\n  fullName: System.Web.Hosting.SimpleWorkerRequest.SendResponseFromFile(IntPtr,Int64,Int64)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Adds the contents of the file with the specified handle to the response and specifies the starting position in the file and the number of bytes to send.\n  syntax:\n    content: public override void SendResponseFromFile (IntPtr handle, long offset, long length);\n    parameters:\n    - id: handle\n      type: System.IntPtr\n      description: The handle of the file to send.\n    - id: offset\n      type: System.Int64\n      description: The starting position in the file.\n    - id: length\n      type: System.Int64\n      description: The number of bytes to send.\n  overload: System.Web.Hosting.SimpleWorkerRequest.SendResponseFromFile*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Hosting.SimpleWorkerRequest.SendResponseFromFile(System.String,System.Int64,System.Int64)\n  id: SendResponseFromFile(System.String,System.Int64,System.Int64)\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  langs:\n  - csharp\n  name: SendResponseFromFile(String,Int64,Int64)\n  nameWithType: SimpleWorkerRequest.SendResponseFromFile(String,Int64,Int64)\n  fullName: System.Web.Hosting.SimpleWorkerRequest.SendResponseFromFile(String,Int64,Int64)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Adds the contents of the file with the specified name to the response and specifies the starting position in the file and the number of bytes to send.\n  syntax:\n    content: public override void SendResponseFromFile (string filename, long offset, long length);\n    parameters:\n    - id: filename\n      type: System.String\n      description: The name of the file to send.\n    - id: offset\n      type: System.Int64\n      description: The starting position in the file.\n    - id: length\n      type: System.Int64\n      description: The number of bytes to send.\n  overload: System.Web.Hosting.SimpleWorkerRequest.SendResponseFromFile*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Hosting.SimpleWorkerRequest.SendResponseFromMemory(System.Byte[],System.Int32)\n  id: SendResponseFromMemory(System.Byte[],System.Int32)\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  langs:\n  - csharp\n  name: SendResponseFromMemory(Byte[],Int32)\n  nameWithType: SimpleWorkerRequest.SendResponseFromMemory(Byte[],Int32)\n  fullName: System.Web.Hosting.SimpleWorkerRequest.SendResponseFromMemory(Byte[],Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Adds the contents of a byte array to the response and specifies the number of bytes to send.\n  syntax:\n    content: public override void SendResponseFromMemory (byte[] data, int length);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: The byte array to send.\n    - id: length\n      type: System.Int32\n      description: The number of bytes to send.\n  overload: System.Web.Hosting.SimpleWorkerRequest.SendResponseFromMemory*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Hosting.SimpleWorkerRequest.SendStatus(System.Int32,System.String)\n  id: SendStatus(System.Int32,System.String)\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  langs:\n  - csharp\n  name: SendStatus(Int32,String)\n  nameWithType: SimpleWorkerRequest.SendStatus(Int32,String)\n  fullName: System.Web.Hosting.SimpleWorkerRequest.SendStatus(Int32,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Specifies the HTTP status code and status description of the response; for example, SendStatus(200, \"Ok\").\n  syntax:\n    content: public override void SendStatus (int statusCode, string statusDescription);\n    parameters:\n    - id: statusCode\n      type: System.Int32\n      description: The status code to send\n    - id: statusDescription\n      type: System.String\n      description: The status description to send.\n  overload: System.Web.Hosting.SimpleWorkerRequest.SendStatus*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Hosting.SimpleWorkerRequest.SendUnknownResponseHeader(System.String,System.String)\n  id: SendUnknownResponseHeader(System.String,System.String)\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  langs:\n  - csharp\n  name: SendUnknownResponseHeader(String,String)\n  nameWithType: SimpleWorkerRequest.SendUnknownResponseHeader(String,String)\n  fullName: System.Web.Hosting.SimpleWorkerRequest.SendUnknownResponseHeader(String,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Adds a nonstandard HTTP header to the response.\n  syntax:\n    content: public override void SendUnknownResponseHeader (string name, string value);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the header to send.\n    - id: value\n      type: System.String\n      description: The value of the header.\n  overload: System.Web.Hosting.SimpleWorkerRequest.SendUnknownResponseHeader*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.HttpWorkerRequest\n  isExternal: false\n  name: System.Web.HttpWorkerRequest\n- uid: System.Web.HttpException\n  parent: System.Web\n  isExternal: false\n  name: HttpException\n  nameWithType: HttpException\n  fullName: System.Web.HttpException\n- uid: System.Web.Hosting.SimpleWorkerRequest.#ctor(System.String,System.String,System.IO.TextWriter)\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: SimpleWorkerRequest(String,String,TextWriter)\n  nameWithType: SimpleWorkerRequest.SimpleWorkerRequest(String,String,TextWriter)\n  fullName: System.Web.Hosting.SimpleWorkerRequest.SimpleWorkerRequest(String,String,TextWriter)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IO.TextWriter\n  parent: System.IO\n  isExternal: true\n  name: TextWriter\n  nameWithType: TextWriter\n  fullName: System.IO.TextWriter\n- uid: System.Web.Hosting.SimpleWorkerRequest.#ctor(System.String,System.String,System.String,System.String,System.IO.TextWriter)\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: SimpleWorkerRequest(String,String,String,String,TextWriter)\n  nameWithType: SimpleWorkerRequest.SimpleWorkerRequest(String,String,String,String,TextWriter)\n  fullName: System.Web.Hosting.SimpleWorkerRequest.SimpleWorkerRequest(String,String,String,String,TextWriter)\n- uid: System.Web.Hosting.SimpleWorkerRequest.EndOfRequest\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: EndOfRequest()\n  nameWithType: SimpleWorkerRequest.EndOfRequest()\n  fullName: System.Web.Hosting.SimpleWorkerRequest.EndOfRequest()\n- uid: System.Web.Hosting.SimpleWorkerRequest.FlushResponse(System.Boolean)\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: FlushResponse(Boolean)\n  nameWithType: SimpleWorkerRequest.FlushResponse(Boolean)\n  fullName: System.Web.Hosting.SimpleWorkerRequest.FlushResponse(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetAppPath\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: GetAppPath()\n  nameWithType: SimpleWorkerRequest.GetAppPath()\n  fullName: System.Web.Hosting.SimpleWorkerRequest.GetAppPath()\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetAppPathTranslated\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: GetAppPathTranslated()\n  nameWithType: SimpleWorkerRequest.GetAppPathTranslated()\n  fullName: System.Web.Hosting.SimpleWorkerRequest.GetAppPathTranslated()\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetFilePath\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: GetFilePath()\n  nameWithType: SimpleWorkerRequest.GetFilePath()\n  fullName: System.Web.Hosting.SimpleWorkerRequest.GetFilePath()\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetFilePathTranslated\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: GetFilePathTranslated()\n  nameWithType: SimpleWorkerRequest.GetFilePathTranslated()\n  fullName: System.Web.Hosting.SimpleWorkerRequest.GetFilePathTranslated()\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetHttpVerbName\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: GetHttpVerbName()\n  nameWithType: SimpleWorkerRequest.GetHttpVerbName()\n  fullName: System.Web.Hosting.SimpleWorkerRequest.GetHttpVerbName()\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetHttpVersion\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: GetHttpVersion()\n  nameWithType: SimpleWorkerRequest.GetHttpVersion()\n  fullName: System.Web.Hosting.SimpleWorkerRequest.GetHttpVersion()\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetLocalAddress\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: GetLocalAddress()\n  nameWithType: SimpleWorkerRequest.GetLocalAddress()\n  fullName: System.Web.Hosting.SimpleWorkerRequest.GetLocalAddress()\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetLocalPort\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: GetLocalPort()\n  nameWithType: SimpleWorkerRequest.GetLocalPort()\n  fullName: System.Web.Hosting.SimpleWorkerRequest.GetLocalPort()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetPathInfo\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: GetPathInfo()\n  nameWithType: SimpleWorkerRequest.GetPathInfo()\n  fullName: System.Web.Hosting.SimpleWorkerRequest.GetPathInfo()\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetQueryString\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: GetQueryString()\n  nameWithType: SimpleWorkerRequest.GetQueryString()\n  fullName: System.Web.Hosting.SimpleWorkerRequest.GetQueryString()\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetRawUrl\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: GetRawUrl()\n  nameWithType: SimpleWorkerRequest.GetRawUrl()\n  fullName: System.Web.Hosting.SimpleWorkerRequest.GetRawUrl()\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetRemoteAddress\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: GetRemoteAddress()\n  nameWithType: SimpleWorkerRequest.GetRemoteAddress()\n  fullName: System.Web.Hosting.SimpleWorkerRequest.GetRemoteAddress()\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetRemotePort\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: GetRemotePort()\n  nameWithType: SimpleWorkerRequest.GetRemotePort()\n  fullName: System.Web.Hosting.SimpleWorkerRequest.GetRemotePort()\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetServerVariable(System.String)\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: GetServerVariable(String)\n  nameWithType: SimpleWorkerRequest.GetServerVariable(String)\n  fullName: System.Web.Hosting.SimpleWorkerRequest.GetServerVariable(String)\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetUriPath\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: GetUriPath()\n  nameWithType: SimpleWorkerRequest.GetUriPath()\n  fullName: System.Web.Hosting.SimpleWorkerRequest.GetUriPath()\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetUserToken\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: GetUserToken()\n  nameWithType: SimpleWorkerRequest.GetUserToken()\n  fullName: System.Web.Hosting.SimpleWorkerRequest.GetUserToken()\n- uid: System.IntPtr\n  parent: System\n  isExternal: true\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Web.Hosting.SimpleWorkerRequest.MachineConfigPath\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: MachineConfigPath\n  nameWithType: SimpleWorkerRequest.MachineConfigPath\n  fullName: System.Web.Hosting.SimpleWorkerRequest.MachineConfigPath\n- uid: System.Web.Hosting.SimpleWorkerRequest.MachineInstallDirectory\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: MachineInstallDirectory\n  nameWithType: SimpleWorkerRequest.MachineInstallDirectory\n  fullName: System.Web.Hosting.SimpleWorkerRequest.MachineInstallDirectory\n- uid: System.Web.Hosting.SimpleWorkerRequest.MapPath(System.String)\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: MapPath(String)\n  nameWithType: SimpleWorkerRequest.MapPath(String)\n  fullName: System.Web.Hosting.SimpleWorkerRequest.MapPath(String)\n- uid: System.Web.Hosting.SimpleWorkerRequest.RootWebConfigPath\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: RootWebConfigPath\n  nameWithType: SimpleWorkerRequest.RootWebConfigPath\n  fullName: System.Web.Hosting.SimpleWorkerRequest.RootWebConfigPath\n- uid: System.Web.Hosting.SimpleWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: SendKnownResponseHeader(Int32,String)\n  nameWithType: SimpleWorkerRequest.SendKnownResponseHeader(Int32,String)\n  fullName: System.Web.Hosting.SimpleWorkerRequest.SendKnownResponseHeader(Int32,String)\n- uid: System.Web.Hosting.SimpleWorkerRequest.SendResponseFromFile(System.IntPtr,System.Int64,System.Int64)\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: SendResponseFromFile(IntPtr,Int64,Int64)\n  nameWithType: SimpleWorkerRequest.SendResponseFromFile(IntPtr,Int64,Int64)\n  fullName: System.Web.Hosting.SimpleWorkerRequest.SendResponseFromFile(IntPtr,Int64,Int64)\n- uid: System.Int64\n  parent: System\n  isExternal: true\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Web.Hosting.SimpleWorkerRequest.SendResponseFromFile(System.String,System.Int64,System.Int64)\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: SendResponseFromFile(String,Int64,Int64)\n  nameWithType: SimpleWorkerRequest.SendResponseFromFile(String,Int64,Int64)\n  fullName: System.Web.Hosting.SimpleWorkerRequest.SendResponseFromFile(String,Int64,Int64)\n- uid: System.Web.Hosting.SimpleWorkerRequest.SendResponseFromMemory(System.Byte[],System.Int32)\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: SendResponseFromMemory(Byte[],Int32)\n  nameWithType: SimpleWorkerRequest.SendResponseFromMemory(Byte[],Int32)\n  fullName: System.Web.Hosting.SimpleWorkerRequest.SendResponseFromMemory(Byte[],Int32)\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Web.Hosting.SimpleWorkerRequest.SendStatus(System.Int32,System.String)\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: SendStatus(Int32,String)\n  nameWithType: SimpleWorkerRequest.SendStatus(Int32,String)\n  fullName: System.Web.Hosting.SimpleWorkerRequest.SendStatus(Int32,String)\n- uid: System.Web.Hosting.SimpleWorkerRequest.SendUnknownResponseHeader(System.String,System.String)\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: SendUnknownResponseHeader(String,String)\n  nameWithType: SimpleWorkerRequest.SendUnknownResponseHeader(String,String)\n  fullName: System.Web.Hosting.SimpleWorkerRequest.SendUnknownResponseHeader(String,String)\n- uid: System.Web.Hosting.SimpleWorkerRequest.#ctor*\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: SimpleWorkerRequest\n  nameWithType: SimpleWorkerRequest.SimpleWorkerRequest\n- uid: System.Web.Hosting.SimpleWorkerRequest.EndOfRequest*\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: EndOfRequest\n  nameWithType: SimpleWorkerRequest.EndOfRequest\n- uid: System.Web.Hosting.SimpleWorkerRequest.FlushResponse*\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: FlushResponse\n  nameWithType: SimpleWorkerRequest.FlushResponse\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetAppPath*\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: GetAppPath\n  nameWithType: SimpleWorkerRequest.GetAppPath\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetAppPathTranslated*\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: GetAppPathTranslated\n  nameWithType: SimpleWorkerRequest.GetAppPathTranslated\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetFilePath*\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: GetFilePath\n  nameWithType: SimpleWorkerRequest.GetFilePath\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetFilePathTranslated*\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: GetFilePathTranslated\n  nameWithType: SimpleWorkerRequest.GetFilePathTranslated\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetHttpVerbName*\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: GetHttpVerbName\n  nameWithType: SimpleWorkerRequest.GetHttpVerbName\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetHttpVersion*\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: GetHttpVersion\n  nameWithType: SimpleWorkerRequest.GetHttpVersion\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetLocalAddress*\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: GetLocalAddress\n  nameWithType: SimpleWorkerRequest.GetLocalAddress\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetLocalPort*\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: GetLocalPort\n  nameWithType: SimpleWorkerRequest.GetLocalPort\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetPathInfo*\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: GetPathInfo\n  nameWithType: SimpleWorkerRequest.GetPathInfo\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetQueryString*\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: GetQueryString\n  nameWithType: SimpleWorkerRequest.GetQueryString\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetRawUrl*\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: GetRawUrl\n  nameWithType: SimpleWorkerRequest.GetRawUrl\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetRemoteAddress*\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: GetRemoteAddress\n  nameWithType: SimpleWorkerRequest.GetRemoteAddress\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetRemotePort*\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: GetRemotePort\n  nameWithType: SimpleWorkerRequest.GetRemotePort\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetServerVariable*\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: GetServerVariable\n  nameWithType: SimpleWorkerRequest.GetServerVariable\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetUriPath*\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: GetUriPath\n  nameWithType: SimpleWorkerRequest.GetUriPath\n- uid: System.Web.Hosting.SimpleWorkerRequest.GetUserToken*\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: GetUserToken\n  nameWithType: SimpleWorkerRequest.GetUserToken\n- uid: System.Web.Hosting.SimpleWorkerRequest.MachineConfigPath*\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: MachineConfigPath\n  nameWithType: SimpleWorkerRequest.MachineConfigPath\n- uid: System.Web.Hosting.SimpleWorkerRequest.MachineInstallDirectory*\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: MachineInstallDirectory\n  nameWithType: SimpleWorkerRequest.MachineInstallDirectory\n- uid: System.Web.Hosting.SimpleWorkerRequest.MapPath*\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: MapPath\n  nameWithType: SimpleWorkerRequest.MapPath\n- uid: System.Web.Hosting.SimpleWorkerRequest.RootWebConfigPath*\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: RootWebConfigPath\n  nameWithType: SimpleWorkerRequest.RootWebConfigPath\n- uid: System.Web.Hosting.SimpleWorkerRequest.SendKnownResponseHeader*\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: SendKnownResponseHeader\n  nameWithType: SimpleWorkerRequest.SendKnownResponseHeader\n- uid: System.Web.Hosting.SimpleWorkerRequest.SendResponseFromFile*\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: SendResponseFromFile\n  nameWithType: SimpleWorkerRequest.SendResponseFromFile\n- uid: System.Web.Hosting.SimpleWorkerRequest.SendResponseFromMemory*\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: SendResponseFromMemory\n  nameWithType: SimpleWorkerRequest.SendResponseFromMemory\n- uid: System.Web.Hosting.SimpleWorkerRequest.SendStatus*\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: SendStatus\n  nameWithType: SimpleWorkerRequest.SendStatus\n- uid: System.Web.Hosting.SimpleWorkerRequest.SendUnknownResponseHeader*\n  parent: System.Web.Hosting.SimpleWorkerRequest\n  isExternal: false\n  name: SendUnknownResponseHeader\n  nameWithType: SimpleWorkerRequest.SendUnknownResponseHeader\n"}