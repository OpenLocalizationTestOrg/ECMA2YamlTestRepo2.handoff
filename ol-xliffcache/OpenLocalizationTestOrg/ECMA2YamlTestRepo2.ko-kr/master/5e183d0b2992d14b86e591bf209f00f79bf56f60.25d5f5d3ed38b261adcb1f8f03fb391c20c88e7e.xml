{"nodes":[{"pos":[637,708],"content":"Provides information about the state of a thread in an ASP.NET process.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides information about the state of a thread in an ASP.NET process.","pos":[0,71]}]},{"pos":[721,1851],"content":"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.       Instances of the WebThreadInformation class contain information that is obtained using either the <xref:System.Web.Management.WebErrorEvent> type or the <xref:System.Web.Management.WebRequestErrorEvent> type.       Your application needs the appropriate permissions to access protected information provided by this type.      > [!NOTE] >  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers. For an example of creating a custom event class, see the example provided in this topic.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications.","pos":[0,101]},{"content":"The &lt;xref:System.Web.Management&gt; namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data.","pos":[102,294],"source":" The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data."},{"content":"It also contains supporting types that help during the management of health events.","pos":[295,378]},{"content":"Instances of the WebThreadInformation class contain information that is obtained using either the &lt;xref:System.Web.Management.WebErrorEvent&gt; type or the &lt;xref:System.Web.Management.WebRequestErrorEvent&gt; type.","pos":[385,593],"source":"       Instances of the WebThreadInformation class contain information that is obtained using either the <xref:System.Web.Management.WebErrorEvent> type or the <xref:System.Web.Management.WebRequestErrorEvent> type."},{"content":"Your application needs the appropriate permissions to access protected information provided by this type.","pos":[600,705]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the <ph id=\"ph2\">`healthMonitoring`</ph> configuration section.","pos":[711,933],"source":"      > [!NOTE] >  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section."},{"content":"You can also derive from the health-monitoring types to create your own custom events and providers.","pos":[934,1034]},{"content":"For an example of creating a custom event class, see the example provided in this topic.","pos":[1035,1123]}]},{"pos":[4005,4040],"content":"Formats thread-related information.","needQuote":true,"needEscape":true,"nodes":[{"content":"Formats thread-related information.","pos":[0,35]}]},{"pos":[4052,4332],"content":"The FormatToString method provides a uniform format for event information, which is useful if the event data must be logged and later presented to the user. It is called internally when the provider invokes one of the <xref:System.Web.Management.WebBaseEvent.ToString%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The FormatToString method provides a uniform format for event information, which is useful if the event data must be logged and later presented to the user. It is called internally when the provider invokes one of the <xref:System.Web.Management.WebBaseEvent.ToString%2A> methods.","pos":[0,280],"nodes":[{"content":"The FormatToString method provides a uniform format for event information, which is useful if the event data must be logged and later presented to the user.","pos":[0,156]},{"content":"It is called internally when the provider invokes one of the &lt;xref:System.Web.Management.WebBaseEvent.ToString%2A&gt; methods.","pos":[157,280],"source":" It is called internally when the provider invokes one of the <xref:System.Web.Management.WebBaseEvent.ToString%2A> methods."}]}]},{"pos":[4868,5028],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.Management.WebEventFormatter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the tab and indentation settings used to format the Web health event information.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.Management.WebEventFormatter\"></xref> that contains the tab and indentation settings used to format the Web health event information."},{"pos":[5541,5584],"content":"Gets the current thread-impersonation mode.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the current thread-impersonation mode.","pos":[0,43]}]},{"pos":[6056,6241],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the thread is executing in impersonation mode; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the thread is executing in impersonation mode; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6730,6774],"content":"Gets the current thread-managed stack trace.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the current thread-managed stack trace.","pos":[0,44]}]},{"pos":[7235,7266],"content":"The thread-managed stack trace.","needQuote":true,"needEscape":true,"nodes":[{"content":"The thread-managed stack trace.","pos":[0,31]}]},{"pos":[7785,7814],"content":"Gets the thread account name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the thread account name.","pos":[0,29]}]},{"pos":[7826,7932],"content":"The account returned by this property might be arbitrary if the thread is executing in impersonation mode.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The account returned by this property might be arbitrary if the thread is executing in impersonation mode.","pos":[0,106]}]},{"pos":[8385,8409],"content":"The thread account name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The thread account name.","pos":[0,24]}]},{"pos":[8890,8925],"content":"Gets the current thread identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the current thread identifier.","pos":[0,35]}]},{"pos":[8937,9110],"content":"Even if managed threads might not have direct mapping to the OS threads, for debugging purposes, it is always useful to isolate a specific thread where problems might exist.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Even if managed threads might not have direct mapping to the OS threads, for debugging purposes, it is always useful to isolate a specific thread where problems might exist.","pos":[0,173]}]},{"pos":[9550,9580],"content":"The current thread identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current thread identifier.","pos":[0,30]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Management.WebThreadInformation\n  id: WebThreadInformation\n  children:\n  - System.Web.Management.WebThreadInformation.FormatToString(System.Web.Management.WebEventFormatter)\n  - System.Web.Management.WebThreadInformation.IsImpersonating\n  - System.Web.Management.WebThreadInformation.StackTrace\n  - System.Web.Management.WebThreadInformation.ThreadAccountName\n  - System.Web.Management.WebThreadInformation.ThreadID\n  langs:\n  - csharp\n  name: WebThreadInformation\n  nameWithType: WebThreadInformation\n  fullName: System.Web.Management.WebThreadInformation\n  type: Class\n  summary: Provides information about the state of a thread in an ASP.NET process.\n  remarks: \"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.  \\n  \\n Instances of the WebThreadInformation class contain information that is obtained using either the <xref:System.Web.Management.WebErrorEvent> type or the <xref:System.Web.Management.WebRequestErrorEvent> type.  \\n  \\n Your application needs the appropriate permissions to access protected information provided by this type.  \\n  \\n> [!NOTE]\\n>  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers. For an example of creating a custom event class, see the example provided in this topic.\"\n  example:\n  - \"The following code example has two parts. The first is an excerpt of a configuration file that enables ASP.NET to use a custom event that uses the WebThreadInformation type. The second shows how to implement the custom event that uses the WebThreadInformation type.  \\n  \\n Ensure that your custom event is raised at the proper time, that is, when the equivalent system health event it replaces would be raised.  \\n  \\n```  \\n<healthMonitoring  \\n    heartBeatInterval=\\\"0\\\" enabled=\\\"true\\\">  \\n  \\n  <profiles>  \\n    <add name=\\\"Custom\\\"   \\n      minInstances=\\\"1\\\"   \\n      maxLimit=\\\"Infinite\\\"   \\n      minInterval=\\\"00:00:00\\\" />  \\n  </profiles>  \\n  \\n  <eventMappings>  \\n  \\n    <add   \\n      name=\\\"SampleWebThreadInformation\\\"   \\ntype=\\\"SamplesAspNet.SampleWebThreadInformation,webthreadinformation, Version=1.0.1782.29648, Culture=neutral, PublicKeyToken=b3283a2de7dd3f27, processorArchitecture=MSIL\\\" />  \\n  \\n  </eventMappings>  \\n  \\n  <rules>  \\n  \\n    <add name=\\\"Custom Web Thread Info Event\\\"   \\n      eventName=\\\"SampleWebThreadInformation\\\"   \\n      provider=\\\"EventLogProvider\\\"  \\n      profile=\\\"Custom\\\" />  \\n  \\n  </rules>  \\n  \\n</healthMonitoring>  \\n```  \\n  \\n [!code-cs[System.Web.Management.WebThreadInformation#1](~/add/codesnippet/csharp/t-system.web.management._17_1.cs)]\\n [!code-vb[System.Web.Management.WebThreadInformation#1](~/add/codesnippet/visualbasic/t-system.web.management._17_1.vb)]\"\n  syntax:\n    content: public sealed class WebThreadInformation\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.Management.WebThreadInformation.FormatToString(System.Web.Management.WebEventFormatter)\n  id: FormatToString(System.Web.Management.WebEventFormatter)\n  parent: System.Web.Management.WebThreadInformation\n  langs:\n  - csharp\n  name: FormatToString(WebEventFormatter)\n  nameWithType: WebThreadInformation.FormatToString(WebEventFormatter)\n  fullName: System.Web.Management.WebThreadInformation.FormatToString(WebEventFormatter)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Formats thread-related information.\n  remarks: The FormatToString method provides a uniform format for event information, which is useful if the event data must be logged and later presented to the user. It is called internally when the provider invokes one of the <xref:System.Web.Management.WebBaseEvent.ToString%2A> methods.\n  example:\n  - \"The following code example shows how to format custom information.  \\n  \\n [!code-cs[System.Web.Management.WebThreadInformation#8](~/add/codesnippet/csharp/3f4138bf-4e4f-4608-8d65-_1.cs)]\\n [!code-vb[System.Web.Management.WebThreadInformation#8](~/add/codesnippet/visualbasic/3f4138bf-4e4f-4608-8d65-_1.vb)]\"\n  syntax:\n    content: public void FormatToString (System.Web.Management.WebEventFormatter formatter);\n    parameters:\n    - id: formatter\n      type: System.Web.Management.WebEventFormatter\n      description: The <xref href=\"System.Web.Management.WebEventFormatter\"></xref> that contains the tab and indentation settings used to format the Web health event information.\n  overload: System.Web.Management.WebThreadInformation.FormatToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Management.WebThreadInformation.IsImpersonating\n  id: IsImpersonating\n  parent: System.Web.Management.WebThreadInformation\n  langs:\n  - csharp\n  name: IsImpersonating\n  nameWithType: WebThreadInformation.IsImpersonating\n  fullName: System.Web.Management.WebThreadInformation.IsImpersonating\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Gets the current thread-impersonation mode.\n  remarks: ''\n  example:\n  - \"The following code example shows how to get the thread-impersonation mode.  \\n  \\n [!code-cs[System.Web.Management.WebThreadInformation#4](~/add/codesnippet/csharp/p-system.web.management._11_1.cs)]\\n [!code-vb[System.Web.Management.WebThreadInformation#4](~/add/codesnippet/visualbasic/p-system.web.management._11_1.vb)]\"\n  syntax:\n    content: public bool IsImpersonating { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the thread is executing in impersonation mode; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.Management.WebThreadInformation.IsImpersonating*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Management.WebThreadInformation.StackTrace\n  id: StackTrace\n  parent: System.Web.Management.WebThreadInformation\n  langs:\n  - csharp\n  name: StackTrace\n  nameWithType: WebThreadInformation.StackTrace\n  fullName: System.Web.Management.WebThreadInformation.StackTrace\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Gets the current thread-managed stack trace.\n  remarks: ''\n  example:\n  - \"The following code example shows how to get the thread stack trace.  \\n  \\n [!code-cs[System.Web.Management.WebThreadInformation#5](~/add/codesnippet/csharp/p-system.web.management._22_1.cs)]\\n [!code-vb[System.Web.Management.WebThreadInformation#5](~/add/codesnippet/visualbasic/p-system.web.management._22_1.vb)]\"\n  syntax:\n    content: public string StackTrace { get; }\n    return:\n      type: System.String\n      description: The thread-managed stack trace.\n  overload: System.Web.Management.WebThreadInformation.StackTrace*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Management.WebThreadInformation.ThreadAccountName\n  id: ThreadAccountName\n  parent: System.Web.Management.WebThreadInformation\n  langs:\n  - csharp\n  name: ThreadAccountName\n  nameWithType: WebThreadInformation.ThreadAccountName\n  fullName: System.Web.Management.WebThreadInformation.ThreadAccountName\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Gets the thread account name.\n  remarks: The account returned by this property might be arbitrary if the thread is executing in impersonation mode.\n  example:\n  - \"The following code example shows how to get the thread account name.  \\n  \\n [!code-cs[System.Web.Management.WebThreadInformation#6](~/add/codesnippet/csharp/p-system.web.management._9_1.cs)]\\n [!code-vb[System.Web.Management.WebThreadInformation#6](~/add/codesnippet/visualbasic/p-system.web.management._9_1.vb)]\"\n  syntax:\n    content: public string ThreadAccountName { get; }\n    return:\n      type: System.String\n      description: The thread account name.\n  overload: System.Web.Management.WebThreadInformation.ThreadAccountName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Management.WebThreadInformation.ThreadID\n  id: ThreadID\n  parent: System.Web.Management.WebThreadInformation\n  langs:\n  - csharp\n  name: ThreadID\n  nameWithType: WebThreadInformation.ThreadID\n  fullName: System.Web.Management.WebThreadInformation.ThreadID\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Gets the current thread identifier.\n  remarks: Even if managed threads might not have direct mapping to the OS threads, for debugging purposes, it is always useful to isolate a specific thread where problems might exist.\n  example:\n  - \"The following code example shows how to get the thread identifier.  \\n  \\n [!code-cs[System.Web.Management.WebThreadInformation#7](~/add/codesnippet/csharp/p-system.web.management._54_1.cs)]\\n [!code-vb[System.Web.Management.WebThreadInformation#7](~/add/codesnippet/visualbasic/p-system.web.management._54_1.vb)]\"\n  syntax:\n    content: public int ThreadID { get; }\n    return:\n      type: System.Int32\n      description: The current thread identifier.\n  overload: System.Web.Management.WebThreadInformation.ThreadID*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Web.Management.WebThreadInformation.FormatToString(System.Web.Management.WebEventFormatter)\n  parent: System.Web.Management.WebThreadInformation\n  isExternal: false\n  name: FormatToString(WebEventFormatter)\n  nameWithType: WebThreadInformation.FormatToString(WebEventFormatter)\n  fullName: System.Web.Management.WebThreadInformation.FormatToString(WebEventFormatter)\n- uid: System.Web.Management.WebEventFormatter\n  parent: System.Web.Management\n  isExternal: false\n  name: WebEventFormatter\n  nameWithType: WebEventFormatter\n  fullName: System.Web.Management.WebEventFormatter\n- uid: System.Web.Management.WebThreadInformation.IsImpersonating\n  parent: System.Web.Management.WebThreadInformation\n  isExternal: false\n  name: IsImpersonating\n  nameWithType: WebThreadInformation.IsImpersonating\n  fullName: System.Web.Management.WebThreadInformation.IsImpersonating\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.Management.WebThreadInformation.StackTrace\n  parent: System.Web.Management.WebThreadInformation\n  isExternal: false\n  name: StackTrace\n  nameWithType: WebThreadInformation.StackTrace\n  fullName: System.Web.Management.WebThreadInformation.StackTrace\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.Management.WebThreadInformation.ThreadAccountName\n  parent: System.Web.Management.WebThreadInformation\n  isExternal: false\n  name: ThreadAccountName\n  nameWithType: WebThreadInformation.ThreadAccountName\n  fullName: System.Web.Management.WebThreadInformation.ThreadAccountName\n- uid: System.Web.Management.WebThreadInformation.ThreadID\n  parent: System.Web.Management.WebThreadInformation\n  isExternal: false\n  name: ThreadID\n  nameWithType: WebThreadInformation.ThreadID\n  fullName: System.Web.Management.WebThreadInformation.ThreadID\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.Management.WebThreadInformation.FormatToString*\n  parent: System.Web.Management.WebThreadInformation\n  isExternal: false\n  name: FormatToString\n  nameWithType: WebThreadInformation.FormatToString\n- uid: System.Web.Management.WebThreadInformation.IsImpersonating*\n  parent: System.Web.Management.WebThreadInformation\n  isExternal: false\n  name: IsImpersonating\n  nameWithType: WebThreadInformation.IsImpersonating\n- uid: System.Web.Management.WebThreadInformation.StackTrace*\n  parent: System.Web.Management.WebThreadInformation\n  isExternal: false\n  name: StackTrace\n  nameWithType: WebThreadInformation.StackTrace\n- uid: System.Web.Management.WebThreadInformation.ThreadAccountName*\n  parent: System.Web.Management.WebThreadInformation\n  isExternal: false\n  name: ThreadAccountName\n  nameWithType: WebThreadInformation.ThreadAccountName\n- uid: System.Web.Management.WebThreadInformation.ThreadID*\n  parent: System.Web.Management.WebThreadInformation\n  isExternal: false\n  name: ThreadID\n  nameWithType: WebThreadInformation.ThreadID\n"}