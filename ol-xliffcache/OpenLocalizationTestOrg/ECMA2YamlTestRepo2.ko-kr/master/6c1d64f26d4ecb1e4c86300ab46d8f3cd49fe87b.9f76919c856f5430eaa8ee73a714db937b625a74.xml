{"nodes":[{"pos":[907,1051],"content":"Provides URL encoding functionality for writers of out-going request parameters for Web service clients implemented using HTTP but without SOAP.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides URL encoding functionality for writers of out-going request parameters for Web service clients implemented using HTTP but without SOAP.","pos":[0,144]}]},{"pos":[1064,2502],"content":"UrlEncodedParameterWriter and other classes in the <xref:System.Web.Services.Protocols> namespace support the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations. Web service writers and readers serialize and deserialize, respectively, between the parameters or return objects of Web methods and the HTTP request or response streams. Web service writers and readers use HTTP for transport but don't exchange messages using the SOAP standard.       The abstract UrlEncodedParameterWriter class inherits from the abstract <xref:System.Web.Services.Protocols.MimeParameterWriter> class, adding URL encoding functionality for client-side writing of Web method parameters into HTTP request streams.       You typically will not need to use UrlEncodedParameterWriter or its descendant classes directly. Instead, when the Wsdl.exe tool generates client proxy code according to the HTTP-GET or HTTP-POST implementations, it applies the <xref:System.Web.Services.Protocols.HttpMethodAttribute> to each Web method and sets the attribute's <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> property to the appropriate type.      > [!NOTE] >  The Hypertext Transfer Protocol--HTTP/1.1 specifies the use of a variation on Multipurpose Internet Mail Extensions (MIME) message format, which itself allows e-mail messages to specify different content types, both text and binary.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"UrlEncodedParameterWriter and other classes in the &lt;xref:System.Web.Services.Protocols&gt; namespace support the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations.","pos":[0,201],"source":"UrlEncodedParameterWriter and other classes in the <xref:System.Web.Services.Protocols> namespace support the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations."},{"content":"Web service writers and readers serialize and deserialize, respectively, between the parameters or return objects of Web methods and the HTTP request or response streams.","pos":[202,372]},{"content":"Web service writers and readers use HTTP for transport but don't exchange messages using the SOAP standard.","pos":[373,480]},{"content":"The abstract UrlEncodedParameterWriter class inherits from the abstract &lt;xref:System.Web.Services.Protocols.MimeParameterWriter&gt; class, adding URL encoding functionality for client-side writing of Web method parameters into HTTP request streams.","pos":[487,732],"source":"       The abstract UrlEncodedParameterWriter class inherits from the abstract <xref:System.Web.Services.Protocols.MimeParameterWriter> class, adding URL encoding functionality for client-side writing of Web method parameters into HTTP request streams."},{"content":"You typically will not need to use UrlEncodedParameterWriter or its descendant classes directly.","pos":[739,835]},{"content":"Instead, when the Wsdl.exe tool generates client proxy code according to the HTTP-GET or HTTP-POST implementations, it applies the &lt;xref:System.Web.Services.Protocols.HttpMethodAttribute&gt; to each Web method and sets the attribute's &lt;xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A&gt; property to the appropriate type.","pos":[836,1180],"source":" Instead, when the Wsdl.exe tool generates client proxy code according to the HTTP-GET or HTTP-POST implementations, it applies the <xref:System.Web.Services.Protocols.HttpMethodAttribute> to each Web method and sets the attribute's <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> property to the appropriate type."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The Hypertext Transfer Protocol--HTTP/1.1 specifies the use of a variation on Multipurpose Internet Mail Extensions (MIME) message format, which itself allows e-mail messages to specify different content types, both text and binary.","pos":[1186,1431],"source":"      > [!NOTE] >  The Hypertext Transfer Protocol--HTTP/1.1 specifies the use of a variation on Multipurpose Internet Mail Extensions (MIME) message format, which itself allows e-mail messages to specify different content types, both text and binary."}]},{"pos":[4145,4262],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Services.Protocols.UrlEncodedParameterWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Services.Protocols.UrlEncodedParameterWriter\"></xref> class."},{"pos":[5014,5104],"content":"Encodes all the parameter values for a Web method and writes them to the specified writer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Encodes all the parameter values for a Web method and writes them to the specified writer.","pos":[0,90]}]},{"pos":[5116,5322],"content":"This overload of the Encode method calls the other overload, <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A>, for each of the parameter values, including individual items in arrays.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This overload of the Encode method calls the other overload, &lt;xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A&gt;, for each of the parameter values, including individual items in arrays.","pos":[0,206],"source":"This overload of the Encode method calls the other overload, <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A>, for each of the parameter values, including individual items in arrays."}]},{"pos":[5501,5580],"content":"A <xref:System.IO.TextWriter> object that does the writing to the HTTP request.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.IO.TextWriter&gt; object that does the writing to the HTTP request.","pos":[0,79],"source":"A <xref:System.IO.TextWriter> object that does the writing to the HTTP request."}]},{"pos":[5645,5677],"content":"The Web method parameter values.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Web method parameter values.","pos":[0,32]}]},{"pos":[6387,6461],"content":"Encodes a specified parameter value and writes it to the specified writer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Encodes a specified parameter value and writes it to the specified writer.","pos":[0,74]}]},{"pos":[6473,6739],"content":"The other signature of the Encode method, <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A>, which is called for each Web method, calls this signature of the Encode method for each of the parameter values, including individual items in arrays.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The other signature of the Encode method, &lt;xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A&gt;, which is called for each Web method, calls this signature of the Encode method for each of the parameter values, including individual items in arrays.","pos":[0,266],"source":"The other signature of the Encode method, <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A>, which is called for each Web method, calls this signature of the Encode method for each of the parameter values, including individual items in arrays."}]},{"pos":[6928,7007],"content":"A <xref:System.IO.TextWriter> object that does the writing to the HTTP request.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.IO.TextWriter&gt; object that does the writing to the HTTP request.","pos":[0,79],"source":"A <xref:System.IO.TextWriter> object that does the writing to the HTTP request."}]},{"pos":[7068,7115],"content":"The name of the parameter that will be encoded.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the parameter that will be encoded.","pos":[0,47]}]},{"pos":[7177,7225],"content":"The value of the parameter that will be encoded.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the parameter that will be encoded.","pos":[0,48]}]},{"pos":[7952,8000],"content":"Returns an initializer for the specified method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an initializer for the specified method.","pos":[0,48]}]},{"pos":[8012,8851],"content":"An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize%2A> method. For the <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter> class, the initializer is the value of the <xref:System.Web.Services.Protocols.LogicalMethodInfo.InParameters%2A> property of the input <xref:System.Web.Services.Protocols.LogicalMethodInfo> object. The property is a <xref:System.Reflection.ParameterInfo> array.The GetInitializer method is invoked during service initialization. Later, at the time a request is populated, the initializer object is passed to the <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize%2A> method of another <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter> instance. The other object performs the actual writing.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize%2A> method. For the <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter> class, the initializer is the value of the <xref:System.Web.Services.Protocols.LogicalMethodInfo.InParameters%2A> property of the input <xref:System.Web.Services.Protocols.LogicalMethodInfo> object. The property is a <xref:System.Reflection.ParameterInfo> array.The GetInitializer method is invoked during service initialization. Later, at the time a request is populated, the initializer object is passed to the <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize%2A> method of another <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter> instance. The other object performs the actual writing.","pos":[0,839],"nodes":[{"content":"An initializer is an object passed as a parameter to the &lt;xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize%2A&gt; method.","pos":[0,141],"source":"An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize%2A> method."},{"content":"For the &lt;xref:System.Web.Services.Protocols.UrlEncodedParameterWriter&gt; class, the initializer is the value of the &lt;xref:System.Web.Services.Protocols.LogicalMethodInfo.InParameters%2A&gt; property of the input &lt;xref:System.Web.Services.Protocols.LogicalMethodInfo&gt; object.","pos":[142,411],"source":" For the <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter> class, the initializer is the value of the <xref:System.Web.Services.Protocols.LogicalMethodInfo.InParameters%2A> property of the input <xref:System.Web.Services.Protocols.LogicalMethodInfo> object."},{"content":"The property is a &lt;xref:System.Reflection.ParameterInfo&gt; array.The GetInitializer method is invoked during service initialization.","pos":[412,542],"source":" The property is a <xref:System.Reflection.ParameterInfo> array.The GetInitializer method is invoked during service initialization."},{"content":"Later, at the time a request is populated, the initializer object is passed to the &lt;xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize%2A&gt; method of another &lt;xref:System.Web.Services.Protocols.UrlEncodedParameterWriter&gt; instance.","pos":[543,793],"source":" Later, at the time a request is populated, the initializer object is passed to the <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize%2A> method of another <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter> instance."},{"content":"The other object performs the actual writing.","pos":[794,839]}]}]},{"pos":[9091,9230],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.Services.Protocols.LogicalMethodInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the Web method for which the initializer is obtained.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.Services.Protocols.LogicalMethodInfo\"></xref> that specifies the Web method for which the initializer is obtained."},{"pos":[9288,9367],"content":"An <xref:System.Object> that contains the initializer for the specified method.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Object&gt; that contains the initializer for the specified method.","pos":[0,79],"source":"An <xref:System.Object> that contains the initializer for the specified method."}]},{"pos":[9981,10005],"content":"Initializes an instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes an instance.","pos":[0,24]}]},{"pos":[10018,10295],"content":"The Initialize method is invoked at the time a request is populated.       The input parameter, `initializer`, is obtained by calling the <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.GetInitializer%2A> method on another instance during client initialization.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Initialize method is invoked at the time a request is populated.","pos":[0,68]},{"content":"The input parameter, <ph id=\"ph1\">`initializer`</ph>, is obtained by calling the &lt;xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.GetInitializer%2A&gt; method on another instance during client initialization.","pos":[75,275],"source":"       The input parameter, `initializer`, is obtained by calling the <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.GetInitializer%2A> method on another instance during client initialization."}]},{"pos":[10457,10685],"content":"A &lt;xref:System.Reflection.ParameterInfo&gt; array obtained through the &lt;xref:System.Web.Services.Protocols.LogicalMethodInfo.InParameters*&gt; property of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Services.Protocols.LogicalMethodInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"A <xref:System.Reflection.ParameterInfo> array obtained through the <xref:System.Web.Services.Protocols.LogicalMethodInfo.InParameters*> property of the <xref href=\"System.Web.Services.Protocols.LogicalMethodInfo\"></xref> class."},{"pos":[11268,11339],"content":"Gets or sets the encoding used to write parameters to the HTTP request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the encoding used to write parameters to the HTTP request.","pos":[0,71]}]},{"pos":[11351,11482],"content":"An encoding, as represented by the <xref:System.Text.Encoding> class, defines how to transform characters into a sequence of bytes.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"An encoding, as represented by the &lt;xref:System.Text.Encoding&gt; class, defines how to transform characters into a sequence of bytes.","pos":[0,131],"source":"An encoding, as represented by the <xref:System.Text.Encoding> class, defines how to transform characters into a sequence of bytes."}]},{"pos":[11637,11695],"content":"The encoding used to write parameters to the HTTP request.","needQuote":true,"needEscape":true,"nodes":[{"content":"The encoding used to write parameters to the HTTP request.","pos":[0,58]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Services.Protocols.UrlEncodedParameterWriter\n  id: UrlEncodedParameterWriter\n  children:\n  - System.Web.Services.Protocols.UrlEncodedParameterWriter.#ctor\n  - System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode(System.IO.TextWriter,System.Object[])\n  - System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode(System.IO.TextWriter,System.String,System.Object)\n  - System.Web.Services.Protocols.UrlEncodedParameterWriter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)\n  - System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize(System.Object)\n  - System.Web.Services.Protocols.UrlEncodedParameterWriter.RequestEncoding\n  langs:\n  - csharp\n  name: UrlEncodedParameterWriter\n  nameWithType: UrlEncodedParameterWriter\n  fullName: System.Web.Services.Protocols.UrlEncodedParameterWriter\n  type: Class\n  summary: Provides URL encoding functionality for writers of out-going request parameters for Web service clients implemented using HTTP but without SOAP.\n  remarks: \"UrlEncodedParameterWriter and other classes in the <xref:System.Web.Services.Protocols> namespace support the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations. Web service writers and readers serialize and deserialize, respectively, between the parameters or return objects of Web methods and the HTTP request or response streams. Web service writers and readers use HTTP for transport but don't exchange messages using the SOAP standard.  \\n  \\n The abstract UrlEncodedParameterWriter class inherits from the abstract <xref:System.Web.Services.Protocols.MimeParameterWriter> class, adding URL encoding functionality for client-side writing of Web method parameters into HTTP request streams.  \\n  \\n You typically will not need to use UrlEncodedParameterWriter or its descendant classes directly. Instead, when the Wsdl.exe tool generates client proxy code according to the HTTP-GET or HTTP-POST implementations, it applies the <xref:System.Web.Services.Protocols.HttpMethodAttribute> to each Web method and sets the attribute's <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> property to the appropriate type.  \\n  \\n> [!NOTE]\\n>  The Hypertext Transfer Protocol--HTTP/1.1 specifies the use of a variation on Multipurpose Internet Mail Extensions (MIME) message format, which itself allows e-mail messages to specify different content types, both text and binary.\"\n  syntax:\n    content: 'public abstract class UrlEncodedParameterWriter : System.Web.Services.Protocols.MimeParameterWriter'\n  inheritance:\n  - System.Object\n  - System.Web.Services.Protocols.MimeFormatter\n  - System.Web.Services.Protocols.MimeParameterWriter\n  implements: []\n  inheritedMembers:\n  - System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)\n  - System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)\n  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])\n  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])\n  - System.Web.Services.Protocols.MimeParameterWriter.GetRequestUrl(System.String,System.Object[])\n  - System.Web.Services.Protocols.MimeParameterWriter.InitializeRequest(System.Net.WebRequest,System.Object[])\n  - System.Web.Services.Protocols.MimeParameterWriter.UsesWriteRequest\n  - System.Web.Services.Protocols.MimeParameterWriter.WriteRequest(System.IO.Stream,System.Object[])\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.UrlEncodedParameterWriter.#ctor\n  id: '#ctor'\n  parent: System.Web.Services.Protocols.UrlEncodedParameterWriter\n  langs:\n  - csharp\n  name: UrlEncodedParameterWriter()\n  nameWithType: UrlEncodedParameterWriter.UrlEncodedParameterWriter()\n  fullName: System.Web.Services.Protocols.UrlEncodedParameterWriter.UrlEncodedParameterWriter()\n  type: Constructor\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Initializes a new instance of the <xref href=\"System.Web.Services.Protocols.UrlEncodedParameterWriter\"></xref> class.\n  syntax:\n    content: protected UrlEncodedParameterWriter ();\n    parameters: []\n  overload: System.Web.Services.Protocols.UrlEncodedParameterWriter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode(System.IO.TextWriter,System.Object[])\n  id: Encode(System.IO.TextWriter,System.Object[])\n  parent: System.Web.Services.Protocols.UrlEncodedParameterWriter\n  langs:\n  - csharp\n  name: Encode(TextWriter,Object[])\n  nameWithType: UrlEncodedParameterWriter.Encode(TextWriter,Object[])\n  fullName: System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode(TextWriter,Object[])\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Encodes all the parameter values for a Web method and writes them to the specified writer.\n  remarks: This overload of the Encode method calls the other overload, <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A>, for each of the parameter values, including individual items in arrays.\n  syntax:\n    content: protected void Encode (System.IO.TextWriter writer, object[] values);\n    parameters:\n    - id: writer\n      type: System.IO.TextWriter\n      description: A <xref:System.IO.TextWriter> object that does the writing to the HTTP request.\n    - id: values\n      type: System.Object[]\n      description: The Web method parameter values.\n  overload: System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode(System.IO.TextWriter,System.String,System.Object)\n  id: Encode(System.IO.TextWriter,System.String,System.Object)\n  parent: System.Web.Services.Protocols.UrlEncodedParameterWriter\n  langs:\n  - csharp\n  name: Encode(TextWriter,String,Object)\n  nameWithType: UrlEncodedParameterWriter.Encode(TextWriter,String,Object)\n  fullName: System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode(TextWriter,String,Object)\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Encodes a specified parameter value and writes it to the specified writer.\n  remarks: The other signature of the Encode method, <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A>, which is called for each Web method, calls this signature of the Encode method for each of the parameter values, including individual items in arrays.\n  syntax:\n    content: protected void Encode (System.IO.TextWriter writer, string name, object value);\n    parameters:\n    - id: writer\n      type: System.IO.TextWriter\n      description: A <xref:System.IO.TextWriter> object that does the writing to the HTTP request.\n    - id: name\n      type: System.String\n      description: The name of the parameter that will be encoded.\n    - id: value\n      type: System.Object\n      description: The value of the parameter that will be encoded.\n  overload: System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.UrlEncodedParameterWriter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)\n  id: GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)\n  parent: System.Web.Services.Protocols.UrlEncodedParameterWriter\n  langs:\n  - csharp\n  name: GetInitializer(LogicalMethodInfo)\n  nameWithType: UrlEncodedParameterWriter.GetInitializer(LogicalMethodInfo)\n  fullName: System.Web.Services.Protocols.UrlEncodedParameterWriter.GetInitializer(LogicalMethodInfo)\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Returns an initializer for the specified method.\n  remarks: An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize%2A> method. For the <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter> class, the initializer is the value of the <xref:System.Web.Services.Protocols.LogicalMethodInfo.InParameters%2A> property of the input <xref:System.Web.Services.Protocols.LogicalMethodInfo> object. The property is a <xref:System.Reflection.ParameterInfo> array.The GetInitializer method is invoked during service initialization. Later, at the time a request is populated, the initializer object is passed to the <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize%2A> method of another <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter> instance. The other object performs the actual writing.\n  syntax:\n    content: public override object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);\n    parameters:\n    - id: methodInfo\n      type: System.Web.Services.Protocols.LogicalMethodInfo\n      description: A <xref href=\"System.Web.Services.Protocols.LogicalMethodInfo\"></xref> that specifies the Web method for which the initializer is obtained.\n    return:\n      type: System.Object\n      description: An <xref:System.Object> that contains the initializer for the specified method.\n  overload: System.Web.Services.Protocols.UrlEncodedParameterWriter.GetInitializer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize(System.Object)\n  id: Initialize(System.Object)\n  parent: System.Web.Services.Protocols.UrlEncodedParameterWriter\n  langs:\n  - csharp\n  name: Initialize(Object)\n  nameWithType: UrlEncodedParameterWriter.Initialize(Object)\n  fullName: System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize(Object)\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Initializes an instance.\n  remarks: \"The Initialize method is invoked at the time a request is populated.  \\n  \\n The input parameter, `initializer`, is obtained by calling the <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.GetInitializer%2A> method on another instance during client initialization.\"\n  syntax:\n    content: public override void Initialize (object initializer);\n    parameters:\n    - id: initializer\n      type: System.Object\n      description: A <xref:System.Reflection.ParameterInfo> array obtained through the <xref:System.Web.Services.Protocols.LogicalMethodInfo.InParameters*> property of the <xref href=\"System.Web.Services.Protocols.LogicalMethodInfo\"></xref> class.\n  overload: System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.UrlEncodedParameterWriter.RequestEncoding\n  id: RequestEncoding\n  parent: System.Web.Services.Protocols.UrlEncodedParameterWriter\n  langs:\n  - csharp\n  name: RequestEncoding\n  nameWithType: UrlEncodedParameterWriter.RequestEncoding\n  fullName: System.Web.Services.Protocols.UrlEncodedParameterWriter.RequestEncoding\n  type: Property\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Gets or sets the encoding used to write parameters to the HTTP request.\n  remarks: An encoding, as represented by the <xref:System.Text.Encoding> class, defines how to transform characters into a sequence of bytes.\n  syntax:\n    content: public override System.Text.Encoding RequestEncoding { get; set; }\n    return:\n      type: System.Text.Encoding\n      description: The encoding used to write parameters to the HTTP request.\n  overload: System.Web.Services.Protocols.UrlEncodedParameterWriter.RequestEncoding*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.Services.Protocols.MimeParameterWriter\n  isExternal: false\n  name: System.Web.Services.Protocols.MimeParameterWriter\n- uid: System.Web.Services.Protocols.UrlEncodedParameterWriter.#ctor\n  parent: System.Web.Services.Protocols.UrlEncodedParameterWriter\n  isExternal: false\n  name: UrlEncodedParameterWriter()\n  nameWithType: UrlEncodedParameterWriter.UrlEncodedParameterWriter()\n  fullName: System.Web.Services.Protocols.UrlEncodedParameterWriter.UrlEncodedParameterWriter()\n- uid: System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode(System.IO.TextWriter,System.Object[])\n  parent: System.Web.Services.Protocols.UrlEncodedParameterWriter\n  isExternal: false\n  name: Encode(TextWriter,Object[])\n  nameWithType: UrlEncodedParameterWriter.Encode(TextWriter,Object[])\n  fullName: System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode(TextWriter,Object[])\n- uid: System.IO.TextWriter\n  parent: System.IO\n  isExternal: true\n  name: TextWriter\n  nameWithType: TextWriter\n  fullName: System.IO.TextWriter\n- uid: System.Object[]\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode(System.IO.TextWriter,System.String,System.Object)\n  parent: System.Web.Services.Protocols.UrlEncodedParameterWriter\n  isExternal: false\n  name: Encode(TextWriter,String,Object)\n  nameWithType: UrlEncodedParameterWriter.Encode(TextWriter,String,Object)\n  fullName: System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode(TextWriter,String,Object)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.Services.Protocols.UrlEncodedParameterWriter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)\n  parent: System.Web.Services.Protocols.UrlEncodedParameterWriter\n  isExternal: false\n  name: GetInitializer(LogicalMethodInfo)\n  nameWithType: UrlEncodedParameterWriter.GetInitializer(LogicalMethodInfo)\n  fullName: System.Web.Services.Protocols.UrlEncodedParameterWriter.GetInitializer(LogicalMethodInfo)\n- uid: System.Web.Services.Protocols.LogicalMethodInfo\n  parent: System.Web.Services.Protocols\n  isExternal: false\n  name: LogicalMethodInfo\n  nameWithType: LogicalMethodInfo\n  fullName: System.Web.Services.Protocols.LogicalMethodInfo\n- uid: System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize(System.Object)\n  parent: System.Web.Services.Protocols.UrlEncodedParameterWriter\n  isExternal: false\n  name: Initialize(Object)\n  nameWithType: UrlEncodedParameterWriter.Initialize(Object)\n  fullName: System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize(Object)\n- uid: System.Web.Services.Protocols.UrlEncodedParameterWriter.RequestEncoding\n  parent: System.Web.Services.Protocols.UrlEncodedParameterWriter\n  isExternal: false\n  name: RequestEncoding\n  nameWithType: UrlEncodedParameterWriter.RequestEncoding\n  fullName: System.Web.Services.Protocols.UrlEncodedParameterWriter.RequestEncoding\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: true\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.Web.Services.Protocols.UrlEncodedParameterWriter.#ctor*\n  parent: System.Web.Services.Protocols.UrlEncodedParameterWriter\n  isExternal: false\n  name: UrlEncodedParameterWriter\n  nameWithType: UrlEncodedParameterWriter.UrlEncodedParameterWriter\n- uid: System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode*\n  parent: System.Web.Services.Protocols.UrlEncodedParameterWriter\n  isExternal: false\n  name: Encode\n  nameWithType: UrlEncodedParameterWriter.Encode\n- uid: System.Web.Services.Protocols.UrlEncodedParameterWriter.GetInitializer*\n  parent: System.Web.Services.Protocols.UrlEncodedParameterWriter\n  isExternal: false\n  name: GetInitializer\n  nameWithType: UrlEncodedParameterWriter.GetInitializer\n- uid: System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize*\n  parent: System.Web.Services.Protocols.UrlEncodedParameterWriter\n  isExternal: false\n  name: Initialize\n  nameWithType: UrlEncodedParameterWriter.Initialize\n- uid: System.Web.Services.Protocols.UrlEncodedParameterWriter.RequestEncoding*\n  parent: System.Web.Services.Protocols.UrlEncodedParameterWriter\n  isExternal: false\n  name: RequestEncoding\n  nameWithType: UrlEncodedParameterWriter.RequestEncoding\n"}