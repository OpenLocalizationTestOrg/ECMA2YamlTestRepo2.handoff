{"nodes":[{"pos":[4382,4480],"content":"The abstract base class that defines the properties and methods of a security token service (STS).","needQuote":true,"needEscape":true,"nodes":[{"content":"The abstract base class that defines the properties and methods of a security token service (STS).","pos":[0,98]}]},{"pos":[4493,8704],"content":"To create an STS you must derive from the SecurityTokenService class. In your custom class you must, at a minimum, override the <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> and <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> methods. With these overrides, the STS created using the default implementation of all the other methods defined in the class is capable of issuing security tokens in response to security token requests (RST). That is, the Issue binding defined in the WS-Trust specification is implemented. This binding is implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method. None of the other WS-Trust bindings (Renew, Cancel, and Validate) are implemented in the default case and an appropriate fault is returned to the caller if an RST that corresponds to one of these bindings is encountered. You can, of course, override the appropriate methods (<xref:System.IdentityModel.SecurityTokenService.Renew%2A>, <xref:System.IdentityModel.SecurityTokenService.Cancel%2A>, and <xref:System.IdentityModel.SecurityTokenService.Validate%2A>) to implement these bindings in your STS.      > [!IMPORTANT] >  Implementing a production-ready STS entails careful planning and considerable resources to mitigate the potential security risks inherent in exposing such a service. Most developers using Windows Identity Foundation (WIF) will be developing applications that outsource identity management to an STS, rather than developing an STS itself. WIF provides a Visual Studio extension, the Identity and Access Tool for Visual Studio 2012, to help developers test solutions in the development environment. This tool includes an STS, `LocalSTS`, that you can configure to serve specific claims to the application that you are developing. For more information about the Identity and Access tool, see [Identity and Access Tool for Visual Studio 2012](~/add/includes/ajax-current-ext-md.md). In some scenarios, `LocalSTS` may not provide the functionality necessary to adequately test your application; for example, in a scenario that involves developing a custom token handler for use by an application. In these cases, you can derive from SecurityTokenService to create one or more simple STSs that can be deployed in your development environment and that can be used to test such features in your application. The rest of this section focuses on the methods exposed by the SecurityTokenService class that enable you to implement a simple STS and extend the token issuance pipeline.       The following list provides a brief overview of the methods of primary importance to the developer for use in a test or development environment.      -   The <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method. This method returns a <xref:System.IdentityModel.Scope> object that contains information about the RP. This object is used in the rest of the token issuance pipeline and includes information about the signing and encrypting credentials to use in the response, as well as the `AppliesTo` and `ReplyTo` (if required) addresses. You must override this method.      -   The <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> method. This method returns an <xref:System.Security.Claims.ClaimsIdentity> object that contains the claims to return to the RP. You must override this method.      -   The <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method. This method implements the token request pipeline, which processes an incoming security token request (RST) and returns a response (RSTR) to the caller that contains a token that can be used to authenticate with an RP. Many of the other methods defined in the SecurityTokenService class are called from this method, including the <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> and <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> methods. You do not have to override this method, but an understanding of the token request pipeline it implements may be helpful.       An STS is configured through the <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration> class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"To create an STS you must derive from the SecurityTokenService class.","pos":[0,69]},{"content":"In your custom class you must, at a minimum, override the &lt;xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt; and &lt;xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A&gt; methods.","pos":[70,277],"source":" In your custom class you must, at a minimum, override the <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> and <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> methods."},{"content":"With these overrides, the STS created using the default implementation of all the other methods defined in the class is capable of issuing security tokens in response to security token requests (RST).","pos":[278,478]},{"content":"That is, the Issue binding defined in the WS-Trust specification is implemented.","pos":[479,559]},{"content":"This binding is implemented in the &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt; method.","pos":[560,660],"source":" This binding is implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method."},{"content":"None of the other WS-Trust bindings (Renew, Cancel, and Validate) are implemented in the default case and an appropriate fault is returned to the caller if an RST that corresponds to one of these bindings is encountered.","pos":[661,881]},{"content":"You can, of course, override the appropriate methods (&lt;xref:System.IdentityModel.SecurityTokenService.Renew%2A&gt;, &lt;xref:System.IdentityModel.SecurityTokenService.Cancel%2A&gt;, and &lt;xref:System.IdentityModel.SecurityTokenService.Validate%2A&gt;) to implement these bindings in your STS.","pos":[882,1161],"source":" You can, of course, override the appropriate methods (<xref:System.IdentityModel.SecurityTokenService.Renew%2A>, <xref:System.IdentityModel.SecurityTokenService.Cancel%2A>, and <xref:System.IdentityModel.SecurityTokenService.Validate%2A>) to implement these bindings in your STS."},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  Implementing a production-ready STS entails careful planning and considerable resources to mitigate the potential security risks inherent in exposing such a service.","pos":[1167,1350],"source":"      > [!IMPORTANT] >  Implementing a production-ready STS entails careful planning and considerable resources to mitigate the potential security risks inherent in exposing such a service."},{"content":"Most developers using Windows Identity Foundation (WIF) will be developing applications that outsource identity management to an STS, rather than developing an STS itself.","pos":[1351,1522]},{"content":"WIF provides a Visual Studio extension, the Identity and Access Tool for Visual Studio 2012, to help developers test solutions in the development environment.","pos":[1523,1681]},{"content":"This tool includes an STS, <ph id=\"ph1\">`LocalSTS`</ph>, that you can configure to serve specific claims to the application that you are developing.","pos":[1682,1812],"source":" This tool includes an STS, `LocalSTS`, that you can configure to serve specific claims to the application that you are developing."},{"content":"For more information about the Identity and Access tool, see <bpt id=\"p1\">[</bpt>Identity and Access Tool for Visual Studio 2012<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1813,1963],"source":" For more information about the Identity and Access tool, see [Identity and Access Tool for Visual Studio 2012](~/add/includes/ajax-current-ext-md.md)."},{"content":"In some scenarios, <ph id=\"ph1\">`LocalSTS`</ph> may not provide the functionality necessary to adequately test your application; for example, in a scenario that involves developing a custom token handler for use by an application.","pos":[1964,2176],"source":" In some scenarios, `LocalSTS` may not provide the functionality necessary to adequately test your application; for example, in a scenario that involves developing a custom token handler for use by an application."},{"content":"In these cases, you can derive from SecurityTokenService to create one or more simple STSs that can be deployed in your development environment and that can be used to test such features in your application.","pos":[2177,2384]},{"content":"The rest of this section focuses on the methods exposed by the SecurityTokenService class that enable you to implement a simple STS and extend the token issuance pipeline.","pos":[2385,2556]},{"content":"The following list provides a brief overview of the methods of primary importance to the developer for use in a test or development environment.","pos":[2563,2707]},{"content":"-   The &lt;xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt; method.","pos":[2713,2789],"source":"      -   The <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method."},{"content":"This method returns a &lt;xref:System.IdentityModel.Scope&gt; object that contains information about the RP.","pos":[2790,2892],"source":" This method returns a <xref:System.IdentityModel.Scope> object that contains information about the RP."},{"content":"This object is used in the rest of the token issuance pipeline and includes information about the signing and encrypting credentials to use in the response, as well as the <ph id=\"ph1\">`AppliesTo`</ph> and <ph id=\"ph2\">`ReplyTo`</ph> (if required) addresses.","pos":[2893,3115],"source":" This object is used in the rest of the token issuance pipeline and includes information about the signing and encrypting credentials to use in the response, as well as the `AppliesTo` and `ReplyTo` (if required) addresses."},{"content":"You must override this method.","pos":[3116,3146]},{"content":"-   The &lt;xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A&gt; method.","pos":[3152,3243],"source":"      -   The <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> method."},{"content":"This method returns an &lt;xref:System.Security.Claims.ClaimsIdentity&gt; object that contains the claims to return to the RP.","pos":[3244,3364],"source":" This method returns an <xref:System.Security.Claims.ClaimsIdentity> object that contains the claims to return to the RP."},{"content":"You must override this method.","pos":[3365,3395]},{"content":"-   The &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt; method.","pos":[3401,3474],"source":"      -   The <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method."},{"content":"This method implements the token request pipeline, which processes an incoming security token request (RST) and returns a response (RSTR) to the caller that contains a token that can be used to authenticate with an RP.","pos":[3475,3693]},{"content":"Many of the other methods defined in the SecurityTokenService class are called from this method, including the &lt;xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt; and &lt;xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A&gt; methods.","pos":[3694,3954],"source":" Many of the other methods defined in the SecurityTokenService class are called from this method, including the <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> and <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> methods."},{"content":"You do not have to override this method, but an understanding of the token request pipeline it implements may be helpful.","pos":[3955,4076]},{"content":"An STS is configured through the &lt;xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration&gt; class.","pos":[4083,4198],"source":"       An STS is configured through the <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration> class."}]},{"pos":[10837,10995],"content":"Called from derived classes to initialize the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.SecurityTokenService\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified configuration settings.","needQuote":true,"needEscape":true,"source":"Called from derived classes to initialize the <xref href=\"System.IdentityModel.SecurityTokenService\"></xref> class using the specified configuration settings."},{"pos":[11007,11086],"content":"Use this constructor to initialize scope provider and token issuer certificate.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this constructor to initialize scope provider and token issuer certificate.","pos":[0,79]}]},{"pos":[11407,11538],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Configuration.SecurityTokenServiceConfiguration\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the settings for the STS.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Configuration.SecurityTokenServiceConfiguration\"></xref> that contains the settings for the STS."},{"pos":[11716,11827],"content":"<ph id=\"ph1\">&lt;code&gt;securityTokenServiceConfiguration&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>securityTokenServiceConfiguration</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[12683,12766],"content":"When overridden in a derived class, begins an asynchronous WS-Trust Cancel request.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, begins an asynchronous WS-Trust Cancel request.","pos":[0,83]}]},{"pos":[12778,12900],"content":"The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default implementation of this method throws an &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.","pos":[0,122],"source":"The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>."}]},{"pos":[13229,13343],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.Claims.ClaimsPrincipal\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the identity of the token requestor.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.Claims.ClaimsPrincipal\"></xref> that represents the identity of the token requestor."},{"pos":[13453,13688],"content":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the security token request. This includes the request message as well as other client related information such as authorization context.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the security token request.","pos":[0,126],"source":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the security token request."},{"content":"This includes the request message as well as other client related information such as authorization context.","pos":[127,235]}]},{"pos":[13760,13883],"content":"The <xref:System.AsyncCallback> delegate that receives notification of the completion of the asynchronous cancel operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.AsyncCallback&gt; delegate that receives notification of the completion of the asynchronous cancel operation.","pos":[0,123],"source":"The <xref:System.AsyncCallback> delegate that receives notification of the completion of the asynchronous cancel operation."}]},{"pos":[13945,14037],"content":"An object that contains state information associated with the asynchronous cancel operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that contains state information associated with the asynchronous cancel operation.","pos":[0,92]}]},{"pos":[14101,14182],"content":"The <xref:System.IAsyncResult> that references the asynchronous cancel operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; that references the asynchronous cancel operation.","pos":[0,81],"source":"The <xref:System.IAsyncResult> that references the asynchronous cancel operation."}]},{"pos":[15279,15431],"content":"When overridden in a derived class, begins an asynchronous call to the <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, begins an asynchronous call to the &lt;xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity*&gt; method.","pos":[0,152],"source":"When overridden in a derived class, begins an asynchronous call to the <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity*> method."}]},{"pos":[15443,15532],"content":"The default implementation of this method throws a <xref:System.NotImplementedException>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default implementation of this method throws a &lt;xref:System.NotImplementedException&gt;.","pos":[0,89],"source":"The default implementation of this method throws a <xref:System.NotImplementedException>."}]},{"pos":[15915,16029],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.Claims.ClaimsPrincipal\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the identity of the token requestor.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.Claims.ClaimsPrincipal\"></xref> that represents the identity of the token requestor."},{"pos":[16139,16374],"content":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the security token request. This includes the request message as well as other client related information such as authorization context.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the security token request.","pos":[0,126],"source":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the security token request."},{"content":"This includes the request message as well as other client related information such as authorization context.","pos":[127,235]}]},{"pos":[16449,16579],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Scope\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains information about the relying party associated with the request.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Scope\"></xref> that contains information about the relying party associated with the request."},{"pos":[16651,16767],"content":"The <xref:System.AsyncCallback> delegate that receives notification of the completion of the asynchronous operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.AsyncCallback&gt; delegate that receives notification of the completion of the asynchronous operation.","pos":[0,116],"source":"The <xref:System.AsyncCallback> delegate that receives notification of the completion of the asynchronous operation."}]},{"pos":[16829,16914],"content":"An object that contains state information associated with the asynchronous operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that contains state information associated with the asynchronous operation.","pos":[0,85]}]},{"pos":[16978,17052],"content":"The <xref:System.IAsyncResult> that references the asynchronous operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; that references the asynchronous operation.","pos":[0,74],"source":"The <xref:System.IAsyncResult> that references the asynchronous operation."}]},{"pos":[18019,18157],"content":"When overridden in a derived class, begins an asynchronous call for the <xref:System.IdentityModel.SecurityTokenService.GetScope*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, begins an asynchronous call for the &lt;xref:System.IdentityModel.SecurityTokenService.GetScope*&gt; method.","pos":[0,138],"source":"When overridden in a derived class, begins an asynchronous call for the <xref:System.IdentityModel.SecurityTokenService.GetScope*> method."}]},{"pos":[18169,18258],"content":"The default implementation of this method throws a <xref:System.NotImplementedException>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default implementation of this method throws a &lt;xref:System.NotImplementedException&gt;.","pos":[0,89],"source":"The default implementation of this method throws a <xref:System.NotImplementedException>."}]},{"pos":[18592,18706],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.Claims.ClaimsPrincipal\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the identity of the token requestor.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.Claims.ClaimsPrincipal\"></xref> that represents the identity of the token requestor."},{"pos":[18816,19051],"content":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the security token request. This includes the request message as well as other client related information such as authorization context.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the security token request.","pos":[0,126],"source":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the security token request."},{"content":"This includes the request message as well as other client related information such as authorization context.","pos":[127,235]}]},{"pos":[19123,19239],"content":"The <xref:System.AsyncCallback> delegate that receives notification of the completion of the asynchronous operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.AsyncCallback&gt; delegate that receives notification of the completion of the asynchronous operation.","pos":[0,116],"source":"The <xref:System.AsyncCallback> delegate that receives notification of the completion of the asynchronous operation."}]},{"pos":[19301,19386],"content":"An object that contains state information associated with the asynchronous operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that contains state information associated with the asynchronous operation.","pos":[0,85]}]},{"pos":[19450,19531],"content":"The <xref:System.IAsyncResult> that references the asynchronous cancel operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; that references the asynchronous cancel operation.","pos":[0,81],"source":"The <xref:System.IAsyncResult> that references the asynchronous cancel operation."}]},{"pos":[20468,20550],"content":"When overridden in a derived class, begins an asynchronous WS-Trust Issue request.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, begins an asynchronous WS-Trust Issue request.","pos":[0,82]}]},{"pos":[20562,20684],"content":"The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default implementation of this method throws an &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.","pos":[0,122],"source":"The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>."}]},{"pos":[21012,21126],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.Claims.ClaimsPrincipal\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the identity of the token requestor.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.Claims.ClaimsPrincipal\"></xref> that represents the identity of the token requestor."},{"pos":[21236,21471],"content":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the security token request. This includes the request message as well as other client related information such as authorization context.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the security token request.","pos":[0,126],"source":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the security token request."},{"content":"This includes the request message as well as other client related information such as authorization context.","pos":[127,235]}]},{"pos":[21543,21665],"content":"The <xref:System.AsyncCallback> delegate that receives notification of the completion of the asynchronous issue operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.AsyncCallback&gt; delegate that receives notification of the completion of the asynchronous issue operation.","pos":[0,122],"source":"The <xref:System.AsyncCallback> delegate that receives notification of the completion of the asynchronous issue operation."}]},{"pos":[21727,21818],"content":"An object that contains state information associated with the asynchronous issue operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that contains state information associated with the asynchronous issue operation.","pos":[0,91]}]},{"pos":[21882,21962],"content":"The <xref:System.IAsyncResult> that references the asynchronous issue operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; that references the asynchronous issue operation.","pos":[0,80],"source":"The <xref:System.IAsyncResult> that references the asynchronous issue operation."}]},{"pos":[22896,22978],"content":"When overridden in a derived class, begins an asynchronous WS-Trust Renew request.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, begins an asynchronous WS-Trust Renew request.","pos":[0,82]}]},{"pos":[22990,23112],"content":"The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default implementation of this method throws an &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.","pos":[0,122],"source":"The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>."}]},{"pos":[23440,23554],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.Claims.ClaimsPrincipal\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the identity of the token requestor.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.Claims.ClaimsPrincipal\"></xref> that represents the identity of the token requestor."},{"pos":[23664,23899],"content":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the security token request. This includes the request message as well as other client related information such as authorization context.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the security token request.","pos":[0,126],"source":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the security token request."},{"content":"This includes the request message as well as other client related information such as authorization context.","pos":[127,235]}]},{"pos":[23971,24093],"content":"The <xref:System.AsyncCallback> delegate that receives notification of the completion of the asynchronous renew operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.AsyncCallback&gt; delegate that receives notification of the completion of the asynchronous renew operation.","pos":[0,122],"source":"The <xref:System.AsyncCallback> delegate that receives notification of the completion of the asynchronous renew operation."}]},{"pos":[24155,24246],"content":"An object that contains state information associated with the asynchronous renew operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that contains state information associated with the asynchronous renew operation.","pos":[0,91]}]},{"pos":[24310,24390],"content":"The <xref:System.IAsyncResult> that references the asynchronous renew operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; that references the asynchronous renew operation.","pos":[0,80],"source":"The <xref:System.IAsyncResult> that references the asynchronous renew operation."}]},{"pos":[25339,25424],"content":"When overridden in a derived class, begins an asynchronous WS-Trust Validate request.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, begins an asynchronous WS-Trust Validate request.","pos":[0,85]}]},{"pos":[25436,25558],"content":"The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default implementation of this method throws an &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.","pos":[0,122],"source":"The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>."}]},{"pos":[25889,26003],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.Claims.ClaimsPrincipal\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the identity of the token requestor.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.Claims.ClaimsPrincipal\"></xref> that represents the identity of the token requestor."},{"pos":[26113,26348],"content":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the security token request. This includes the request message as well as other client related information such as authorization context.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the security token request.","pos":[0,126],"source":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the security token request."},{"content":"This includes the request message as well as other client related information such as authorization context.","pos":[127,235]}]},{"pos":[26420,26545],"content":"The <xref:System.AsyncCallback> delegate that receives notification of the completion of the asynchronous validate operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.AsyncCallback&gt; delegate that receives notification of the completion of the asynchronous validate operation.","pos":[0,125],"source":"The <xref:System.AsyncCallback> delegate that receives notification of the completion of the asynchronous validate operation."}]},{"pos":[26607,26701],"content":"An object that contains state information associated with the asynchronous validate operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that contains state information associated with the asynchronous validate operation.","pos":[0,94]}]},{"pos":[26765,26848],"content":"The <xref:System.IAsyncResult> that references the asynchronous validate operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; that references the asynchronous validate operation.","pos":[0,83],"source":"The <xref:System.IAsyncResult> that references the asynchronous validate operation."}]},{"pos":[27632,27704],"content":"When overridden in a derived class, processes a WS-Trust Cancel request.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, processes a WS-Trust Cancel request.","pos":[0,72]}]},{"pos":[27716,27838],"content":"The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default implementation of this method throws an &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.","pos":[0,122],"source":"The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>."}]},{"pos":[28179,28293],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.Claims.ClaimsPrincipal\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the identity of the token requestor.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.Claims.ClaimsPrincipal\"></xref> that represents the identity of the token requestor."},{"pos":[28403,28638],"content":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the security token request. This includes the request message as well as other client related information such as authorization context.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the security token request.","pos":[0,126],"source":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the security token request."},{"content":"This includes the request message as well as other client related information such as authorization context.","pos":[127,235]}]},{"pos":[28750,28890],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the RSTR to return to the caller.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\"></xref> that represents the RSTR to return to the caller."},{"pos":[29728,29827],"content":"Creates an instance of a <xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an instance of a &lt;xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*&gt;.","pos":[0,99],"source":"Creates an instance of a <xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*>."}]},{"pos":[29839,29936],"content":"Invoked during token issuance after <xref:System.IdentityModel.SecurityTokenService.GetScope%2A>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Invoked during token issuance after &lt;xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt;.","pos":[0,97],"source":"Invoked during token issuance after <xref:System.IdentityModel.SecurityTokenService.GetScope%2A>."}]},{"pos":[30290,30317],"content":"The incoming token request.","needQuote":true,"needEscape":true,"nodes":[{"content":"The incoming token request.","pos":[0,27]}]},{"pos":[30392,30532],"content":"The &lt;xref:System.IdentityModel.SecurityTokenService.Scope<bpt id=\"p1\">*</bpt>&gt; object returned from &lt;xref:System.IdentityModel.SecurityTokenService.GetScope<ept id=\"p1\">*</ept>&gt;.","needQuote":true,"needEscape":true,"source":"The <xref:System.IdentityModel.SecurityTokenService.Scope*> object returned from <xref:System.IdentityModel.SecurityTokenService.GetScope*>."},{"pos":[30628,30706],"content":"The <xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*&gt;.","pos":[0,78],"source":"The <xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*>."}]},{"pos":[30909,31111],"content":"<code>request</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>scope</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;request&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,85],"source":"<code>request</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;scope&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[92,186],"source":"       -or-       <code>scope</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[31595,31682],"content":"When overridden in a derived class, completes the asynchronous WS-Trust Cancel request.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, completes the asynchronous WS-Trust Cancel request.","pos":[0,87]}]},{"pos":[31694,31816],"content":"The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default implementation of this method throws an &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.","pos":[0,122],"source":"The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>."}]},{"pos":[32040,32174],"content":"The <xref:System.IAsyncResult> that is returned by a call to the <xref:System.IdentityModel.SecurityTokenService.BeginCancel*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; that is returned by a call to the &lt;xref:System.IdentityModel.SecurityTokenService.BeginCancel*&gt; method.","pos":[0,134],"source":"The <xref:System.IAsyncResult> that is returned by a call to the <xref:System.IdentityModel.SecurityTokenService.BeginCancel*> method."}]},{"pos":[32286,32426],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the RSTR to return to the caller.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\"></xref> that represents the RSTR to return to the caller."},{"pos":[33076,33237],"content":"When overridden in a derived class, completes the asynchronous call to the <xref:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, completes the asynchronous call to the &lt;xref:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*&gt; method.","pos":[0,161],"source":"When overridden in a derived class, completes the asynchronous call to the <xref:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*> method."}]},{"pos":[33249,33338],"content":"The default implementation of this method throws a <xref:System.NotImplementedException>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default implementation of this method throws a &lt;xref:System.NotImplementedException&gt;.","pos":[0,89],"source":"The default implementation of this method throws a <xref:System.NotImplementedException>."}]},{"pos":[33552,33703],"content":"The <xref:System.IAsyncResult> that is returned by a call to the <xref:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; that is returned by a call to the &lt;xref:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*&gt; method.","pos":[0,151],"source":"The <xref:System.IAsyncResult> that is returned by a call to the <xref:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*> method."}]},{"pos":[33785,33934],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.Claims.ClaimsIdentity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the collection of claims that will be placed in the issued security token.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.Claims.ClaimsIdentity\"></xref> that contains the collection of claims that will be placed in the issued security token."},{"pos":[34526,34672],"content":"When overridden in a derived class, completes the asynchronous call to the <xref:System.IdentityModel.SecurityTokenService.BeginGetScope*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, completes the asynchronous call to the &lt;xref:System.IdentityModel.SecurityTokenService.BeginGetScope*&gt; method.","pos":[0,146],"source":"When overridden in a derived class, completes the asynchronous call to the <xref:System.IdentityModel.SecurityTokenService.BeginGetScope*> method."}]},{"pos":[34684,34773],"content":"The default implementation of this method throws a <xref:System.NotImplementedException>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default implementation of this method throws a &lt;xref:System.NotImplementedException&gt;.","pos":[0,89],"source":"The default implementation of this method throws a <xref:System.NotImplementedException>."}]},{"pos":[34961,35097],"content":"The <xref:System.IAsyncResult> that is returned by a call to the <xref:System.IdentityModel.SecurityTokenService.BeginGetScope*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; that is returned by a call to the &lt;xref:System.IdentityModel.SecurityTokenService.BeginGetScope*&gt; method.","pos":[0,136],"source":"The <xref:System.IAsyncResult> that is returned by a call to the <xref:System.IdentityModel.SecurityTokenService.BeginGetScope*> method."}]},{"pos":[35168,35405],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Scope\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that encapsulates the relying party (RP) information associated with the request (RST) specified in the call to the &lt;xref:System.IdentityModel.SecurityTokenService.BeginGetScope*&gt; method.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Scope\"></xref> that encapsulates the relying party (RP) information associated with the request (RST) specified in the call to the <xref:System.IdentityModel.SecurityTokenService.BeginGetScope*> method."},{"pos":[35967,36053],"content":"When overridden in a derived class, completes the asynchronous WS-Trust Issue request.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, completes the asynchronous WS-Trust Issue request.","pos":[0,86]}]},{"pos":[36065,36187],"content":"The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default implementation of this method throws an &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.","pos":[0,122],"source":"The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>."}]},{"pos":[36410,36543],"content":"The <xref:System.IAsyncResult> that is returned by a call to the <xref:System.IdentityModel.SecurityTokenService.BeginIssue*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; that is returned by a call to the &lt;xref:System.IdentityModel.SecurityTokenService.BeginIssue*&gt; method.","pos":[0,133],"source":"The <xref:System.IAsyncResult> that is returned by a call to the <xref:System.IdentityModel.SecurityTokenService.BeginIssue*> method."}]},{"pos":[36655,36795],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the RSTR to return to the caller.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\"></xref> that represents the RSTR to return to the caller."},{"pos":[37354,37440],"content":"When overridden in a derived class, completes the asynchronous WS-Trust Renew request.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, completes the asynchronous WS-Trust Renew request.","pos":[0,86]}]},{"pos":[37452,37574],"content":"The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default implementation of this method throws an &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.","pos":[0,122],"source":"The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>."}]},{"pos":[37797,37930],"content":"The <xref:System.IAsyncResult> that is returned by a call to the <xref:System.IdentityModel.SecurityTokenService.BeginRenew*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; that is returned by a call to the &lt;xref:System.IdentityModel.SecurityTokenService.BeginRenew*&gt; method.","pos":[0,133],"source":"The <xref:System.IAsyncResult> that is returned by a call to the <xref:System.IdentityModel.SecurityTokenService.BeginRenew*> method."}]},{"pos":[38042,38182],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the RSTR to return to the caller.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\"></xref> that represents the RSTR to return to the caller."},{"pos":[38756,38845],"content":"When overridden in a derived class, completes the asynchronous WS-Trust Validate request.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, completes the asynchronous WS-Trust Validate request.","pos":[0,89]}]},{"pos":[38857,38979],"content":"The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default implementation of this method throws an &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.","pos":[0,122],"source":"The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>."}]},{"pos":[39205,39341],"content":"The <xref:System.IAsyncResult> that is returned by a call to the <xref:System.IdentityModel.SecurityTokenService.BeginValidate*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; that is returned by a call to the &lt;xref:System.IdentityModel.SecurityTokenService.BeginValidate*&gt; method.","pos":[0,136],"source":"The <xref:System.IAsyncResult> that is returned by a call to the <xref:System.IdentityModel.SecurityTokenService.BeginValidate*> method."}]},{"pos":[39453,39593],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the RSTR to return to the caller.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\"></xref> that represents the RSTR to return to the caller."},{"pos":[40102,40152],"content":"Gets the name of the security token service (STS).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the security token service (STS).","pos":[0,50]}]},{"pos":[40165,40599],"content":"This method is called from the default token issuance pipeline implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.       The default implementation returns the <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> property from configuration accessed through the <xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A> property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is called from the default token issuance pipeline implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.       The default implementation returns the <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> property from configuration accessed through the <xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A> property.","pos":[0,432],"nodes":[{"content":"This method is called from the default token issuance pipeline implemented in the &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt; method.","pos":[0,147],"source":"This method is called from the default token issuance pipeline implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method."},{"content":"The default implementation returns the &lt;xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A&gt; property from configuration accessed through the &lt;xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A&gt; property.","pos":[154,432],"source":"       The default implementation returns the <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> property from configuration accessed through the <xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A> property."}]}]},{"pos":[40743,40759],"content":"The issuer name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The issuer name.","pos":[0,16]}]},{"pos":[41700,41823],"content":"When overridden in a derived class, this method returns a collection of output subjects to be included in the issued token.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, this method returns a collection of output subjects to be included in the issued token.","pos":[0,123]}]},{"pos":[41836,43690],"content":"The GetOutputClaimsIdentity method is called from the token issuance pipeline, which is implemented by the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method. It returns an <xref:System.Security.Claims.ClaimsIdentity> that contains the claims to include in the issued security token based on the requestor of the token (the `principal` parameter), the incoming RST (the `request` parameter), and the relying party for which the token is intended (the `scope` parameter). The logic in this method is primarily concerned with answering the following questions:      -   **Which claim types should be included in the response based on the RP for which it is intended?** Typically this is decided on a per-RP basis from lists of claim types required for each RP or on a per-request basis by examining the <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Claims%2A> property of the request. However, the logic and details for determining the claims to include in the response is completely up to your implementation.      -   **Which claim values should be assigned to the claims in the response?** For an Identity Provider (IP-STS) this typically means using one or more claims in the requestor’s <xref:System.Security.Claims.ClaimsPrincipal> (provided by the `principal` parameter) to access a store (or other entity) to return values for the required claim types. For a Federation Provider (R-STS) this typically means performing some kind of processing on the requestor’s incoming claims to fulfill the request; perhaps performing filtering or transformation on some claims presented by the requestor, while passing others through unmodified. Of course, as in the case of deciding which claims to include in the response, the details and logic of how to determine the values of these claims is up to your implementation.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetOutputClaimsIdentity method is called from the token issuance pipeline, which is implemented by the &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt; method.","pos":[0,172],"source":"The GetOutputClaimsIdentity method is called from the token issuance pipeline, which is implemented by the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method."},{"content":"It returns an &lt;xref:System.Security.Claims.ClaimsIdentity&gt; that contains the claims to include in the issued security token based on the requestor of the token (the <ph id=\"ph1\">`principal`</ph> parameter), the incoming RST (the <ph id=\"ph2\">`request`</ph> parameter), and the relying party for which the token is intended (the <ph id=\"ph3\">`scope`</ph> parameter).","pos":[173,484],"source":" It returns an <xref:System.Security.Claims.ClaimsIdentity> that contains the claims to include in the issued security token based on the requestor of the token (the `principal` parameter), the incoming RST (the `request` parameter), and the relying party for which the token is intended (the `scope` parameter)."},{"content":"The logic in this method is primarily concerned with answering the following questions:      -   <bpt id=\"p1\">**</bpt>Which claim types should be included in the response based on the RP for which it is intended?<ept id=\"p1\">**</ept>","pos":[485,680],"source":" The logic in this method is primarily concerned with answering the following questions:      -   **Which claim types should be included in the response based on the RP for which it is intended?**"},{"content":"Typically this is decided on a per-RP basis from lists of claim types required for each RP or on a per-request basis by examining the &lt;xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Claims%2A&gt; property of the request.","pos":[681,916],"source":" Typically this is decided on a per-RP basis from lists of claim types required for each RP or on a per-request basis by examining the <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Claims%2A> property of the request."},{"content":"However, the logic and details for determining the claims to include in the response is completely up to your implementation.","pos":[917,1042]},{"content":"-   <bpt id=\"p1\">**</bpt>Which claim values should be assigned to the claims in the response?<ept id=\"p1\">**</ept>","pos":[1048,1124],"source":"      -   **Which claim values should be assigned to the claims in the response?**"},{"content":"For an Identity Provider (IP-STS) this typically means using one or more claims in the requestor’s &lt;xref:System.Security.Claims.ClaimsPrincipal&gt; (provided by the <ph id=\"ph1\">`principal`</ph> parameter) to access a store (or other entity) to return values for the required claim types.","pos":[1125,1392],"source":" For an Identity Provider (IP-STS) this typically means using one or more claims in the requestor’s <xref:System.Security.Claims.ClaimsPrincipal> (provided by the `principal` parameter) to access a store (or other entity) to return values for the required claim types."},{"content":"For a Federation Provider (R-STS) this typically means performing some kind of processing on the requestor’s incoming claims to fulfill the request; perhaps performing filtering or transformation on some claims presented by the requestor, while passing others through unmodified.","pos":[1393,1672]},{"content":"Of course, as in the case of deciding which claims to include in the response, the details and logic of how to determine the values of these claims is up to your implementation.","pos":[1673,1850]}]},{"pos":[44978,45092],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.Claims.ClaimsPrincipal\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the identity of the token requestor.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.Claims.ClaimsPrincipal\"></xref> that represents the identity of the token requestor."},{"pos":[45202,45437],"content":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the security token request. This includes the request message as well as other client related information such as authorization context.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the security token request.","pos":[0,126],"source":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the security token request."},{"content":"This includes the request message as well as other client related information such as authorization context.","pos":[127,235]}]},{"pos":[45512,45801],"content":"The <xref href=\"System.IdentityModel.Scope\"></xref> that contains information about the relying party associated with the request. This is the <xref href=\"System.IdentityModel.Scope\"></xref> object that was returned by the <xref:System.IdentityModel.SecurityTokenService.GetScope*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Scope\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains information about the relying party associated with the request.","pos":[0,130],"source":"The <xref href=\"System.IdentityModel.Scope\"></xref> that contains information about the relying party associated with the request."},{"content":"This is the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Scope\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that was returned by the &lt;xref:System.IdentityModel.SecurityTokenService.GetScope*&gt; method.","pos":[131,289],"source":" This is the <xref href=\"System.IdentityModel.Scope\"></xref> object that was returned by the <xref:System.IdentityModel.SecurityTokenService.GetScope*> method."}]},{"pos":[45883,46032],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.Claims.ClaimsIdentity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the collection of claims that will be placed in the issued security token.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.Claims.ClaimsIdentity\"></xref> that contains the collection of claims that will be placed in the issued security token."},{"pos":[46807,46866],"content":"Gets the proof token to be included in the response (RSTR).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the proof token to be included in the response (RSTR).","pos":[0,59]}]},{"pos":[46879,47124],"content":"This method is called from the default token issuance pipeline implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.       The default implementation returns a proof descriptor or throws an appropriate exception.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is called from the default token issuance pipeline implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.       The default implementation returns a proof descriptor or throws an appropriate exception.","pos":[0,243],"nodes":[{"content":"This method is called from the default token issuance pipeline implemented in the &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt; method.","pos":[0,147],"source":"This method is called from the default token issuance pipeline implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method."},{"content":"The default implementation returns a proof descriptor or throws an appropriate exception.","pos":[154,243]}]}]},{"pos":[47455,47587],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the incoming token request (RST).","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the incoming token request (RST)."},{"pos":[47662,47777],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Scope\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance that encapsulates information about the relying party.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Scope\"></xref> instance that encapsulates information about the relying party."},{"pos":[47865,48163],"content":"A <xref href=\"System.IdentityModel.Tokens.ProofDescriptor\"></xref> that represents the newly created proof descriptor. The proof descriptor can be an asymmetric proof descriptor, a symmetric proof descriptor, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> in the bearer token case.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.ProofDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the newly created proof descriptor.","pos":[0,118],"source":"A <xref href=\"System.IdentityModel.Tokens.ProofDescriptor\"></xref> that represents the newly created proof descriptor."},{"content":"The proof descriptor can be an asymmetric proof descriptor, a symmetric proof descriptor, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in the bearer token case.","pos":[119,298],"source":" The proof descriptor can be an asymmetric proof descriptor, a symmetric proof descriptor, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> in the bearer token case."}]},{"pos":[48350,48552],"content":"<code>request</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>scope</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;request&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,85],"source":"<code>request</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;scope&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[92,186],"source":"       -or-       <code>scope</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[49285,49335],"content":"Gets the requestor's proof encrypting credentials.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the requestor's proof encrypting credentials.","pos":[0,50]}]},{"pos":[49348,50010],"content":"This method is called from the <xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A> method.       The default implementation does the following. Returns `null` if there is no encryption token specified in the request (the <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ProofEncryption%2A?displayProperty=fullName> property is `null`). Otherwise, if it can get the token as an <xref:System.IdentityModel.Tokens.X509SecurityToken>, it returns credentials based on that token. If it cannot resolve the token as an <xref:System.IdentityModel.Tokens.X509SecurityToken>, a <xref:System.IdentityModel.RequestFailedException> is thrown.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is called from the &lt;xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A&gt; method.","pos":[0,104],"source":"This method is called from the <xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A> method."},{"content":"The default implementation does the following.","pos":[111,157]},{"content":"Returns <ph id=\"ph1\">`null`</ph> if there is no encryption token specified in the request (the &lt;xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ProofEncryption%2A?displayProperty=fullName&gt; property is <ph id=\"ph2\">`null`</ph>).","pos":[158,366],"source":" Returns `null` if there is no encryption token specified in the request (the <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ProofEncryption%2A?displayProperty=fullName> property is `null`)."},{"content":"Otherwise, if it can get the token as an &lt;xref:System.IdentityModel.Tokens.X509SecurityToken&gt;, it returns credentials based on that token.","pos":[367,505],"source":" Otherwise, if it can get the token as an <xref:System.IdentityModel.Tokens.X509SecurityToken>, it returns credentials based on that token."},{"content":"If it cannot resolve the token as an &lt;xref:System.IdentityModel.Tokens.X509SecurityToken&gt;, a &lt;xref:System.IdentityModel.RequestFailedException&gt; is thrown.","pos":[506,660],"source":" If it cannot resolve the token as an <xref:System.IdentityModel.Tokens.X509SecurityToken>, a <xref:System.IdentityModel.RequestFailedException> is thrown."}]},{"pos":[50338,50470],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the incoming token request (RST).","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the incoming token request (RST)."},{"pos":[50564,50700],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptingCredentials\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the requestor’s encrypting credentials.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.IdentityModel.Tokens.EncryptingCredentials\"></xref> object that represents the requestor’s encrypting credentials."},{"pos":[50911,50996],"content":"<ph id=\"ph1\">&lt;code&gt;request&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>request</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[51769,51895],"content":"Creates the response (RSTR) that contains the issued token by using the specified request (RST) and security token descriptor.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates the response (RSTR) that contains the issued token by using the specified request (RST) and security token descriptor.","pos":[0,126]}]},{"pos":[51908,53780],"content":"The GetResponse method is called as the last step from the token issuance pipeline, which is implemented by the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method. It creates and returns the response (RSTR) by using the original incoming request (RST) and the token descriptor that was built up during previous steps in the token issuance pipeline.       The default implementation creates the RSTR by passing the RST specified in the request parameter to the <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.%23ctor%28System.IdentityModel.Protocols.WSTrust.WSTrustMessage%29?displayProperty=fullName> constructor, invoking the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.ApplyTo%2A?displayProperty=fullName> method on the token descriptor passed into GetResponse to apply its properties to the newly created RSTR, setting the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo%2A> property on the RSTR by using the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A> property on the token descriptor, and finally setting the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A> property on the RSTR according to the following table:      |`RST.ReplyTo` property|<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=fullName> property.|`RSTR.ReplyTo` property|   |----------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------|   |Set|Not Set|Not Set|   |Set|Set|<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=fullName>|   |Not Set|Set|Not Set|   |Not Set|Not Set|Not Set|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetResponse method is called as the last step from the token issuance pipeline, which is implemented by the &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt; method.","pos":[0,177],"source":"The GetResponse method is called as the last step from the token issuance pipeline, which is implemented by the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method."},{"content":"It creates and returns the response (RSTR) by using the original incoming request (RST) and the token descriptor that was built up during previous steps in the token issuance pipeline.","pos":[178,362]},{"content":"The default implementation creates the RSTR by passing the RST specified in the request parameter to the &lt;xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.%23ctor%28System.IdentityModel.Protocols.WSTrust.WSTrustMessage%29?displayProperty=fullName&gt; constructor, invoking the &lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.ApplyTo%2A?displayProperty=fullName&gt; method on the token descriptor passed into GetResponse to apply its properties to the newly created RSTR, setting the &lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo%2A&gt; property on the RSTR by using the &lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A&gt; property on the token descriptor, and finally setting the &lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A&gt; property on the RSTR according to the following table:      |<ph id=\"ph1\">`RST.ReplyTo`</ph> property|&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=fullName&gt; property.|<ph id=\"ph2\">`RSTR.ReplyTo`</ph> property|   |----------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------|   |Set|Not Set|Not Set|   |Set|Set|&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=fullName&gt;|   |Not Set|Set|Not Set|   |Not Set|Not Set|Not Set|","pos":[369,1863],"source":"       The default implementation creates the RSTR by passing the RST specified in the request parameter to the <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.%23ctor%28System.IdentityModel.Protocols.WSTrust.WSTrustMessage%29?displayProperty=fullName> constructor, invoking the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.ApplyTo%2A?displayProperty=fullName> method on the token descriptor passed into GetResponse to apply its properties to the newly created RSTR, setting the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo%2A> property on the RSTR by using the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A> property on the token descriptor, and finally setting the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A> property on the RSTR according to the following table:      |`RST.ReplyTo` property|<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=fullName> property.|`RSTR.ReplyTo` property|   |----------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------|   |Set|Not Set|Not Set|   |Set|Set|<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=fullName>|   |Not Set|Set|Not Set|   |Not Set|Not Set|Not Set|"}]},{"pos":[54168,54208],"content":"The RST that contains the token request.","needQuote":true,"needEscape":true,"nodes":[{"content":"The RST that contains the token request.","pos":[0,40]}]},{"pos":[54318,54397],"content":"The token descriptor that contains the information to use for the issued token.","needQuote":true,"needEscape":true,"nodes":[{"content":"The token descriptor that contains the information to use for the issued token.","pos":[0,79]}]},{"pos":[54509,54880],"content":"The response (RSTR) or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if a response cannot be created from the specified request and token descriptor. The default implementation returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the <code>tokenDescriptor</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The response (RSTR) or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a response cannot be created from the specified request and token descriptor.","pos":[0,164],"source":"The response (RSTR) or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if a response cannot be created from the specified request and token descriptor."},{"content":"The default implementation returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">tokenDescriptor</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[165,371],"source":" The default implementation returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the <code>tokenDescriptor</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[55672,55963],"content":"Gets a <xref href=\"System.IdentityModel.Scope\"></xref> object that contains information about the relying party (RP) associated with the specified request (RST). You must override this method in your implementation of the <xref href=\"System.IdentityModel.SecurityTokenService\"></xref> class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Scope\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains information about the relying party (RP) associated with the specified request (RST).","pos":[0,161],"source":"Gets a <xref href=\"System.IdentityModel.Scope\"></xref> object that contains information about the relying party (RP) associated with the specified request (RST)."},{"content":"You must override this method in your implementation of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.SecurityTokenService\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","pos":[162,291],"source":" You must override this method in your implementation of the <xref href=\"System.IdentityModel.SecurityTokenService\"></xref> class."}]},{"pos":[55976,58133],"content":"The GetScope method is called from the token issuance pipeline after the <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> method and should return a <xref:System.IdentityModel.Scope> object configured for the incoming request. (The token issuance pipeline is implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.) The <xref:System.IdentityModel.Scope> object encapsulates information about the RP associated with the security token request (RST). This includes information about the encrypting and signing credentials to be used with the RP and whether or not to encrypt any issued tokens and/or symmetric keys in the response. Some typical tasks performed in the GetScope method are:      -   Determine whether the RP for which the token is intended is a recognized RP. How this is accomplished depends on your implementation. If the intended RP is not a valid RP for this STS, then the method should throw an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.      -   Determine the signing credentials to be used in the response (RSTR) and set the <xref:System.IdentityModel.Scope.SigningCredentials%2A> property accordingly.      -   Determine whether the response and/or any included symmetrical keys should be encrypted and the credentials to be used for encryption. Set the <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>, <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>, and <xref:System.IdentityModel.Scope.EncryptingCredentials%2A> properties accordingly.          > [!IMPORTANT]     >  By default, the <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A> and <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A> properties are set `true` to prevent the STS from issuing tokens that are not secure. It is recommended that these properties never be set to `false` in a production environment.      -   Determine the address to which the response should be returned. Set either the <xref:System.IdentityModel.Scope.AppliesToAddress%2A> or <xref:System.IdentityModel.Scope.ReplyToAddress%2A> property accordingly.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetScope method is called from the token issuance pipeline after the &lt;xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A&gt; method and should return a &lt;xref:System.IdentityModel.Scope&gt; object configured for the incoming request.","pos":[0,245],"source":"The GetScope method is called from the token issuance pipeline after the <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> method and should return a <xref:System.IdentityModel.Scope> object configured for the incoming request."},{"content":"(The token issuance pipeline is implemented in the &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt; method.) The &lt;xref:System.IdentityModel.Scope&gt; object encapsulates information about the RP associated with the security token request (RST).","pos":[246,496],"source":" (The token issuance pipeline is implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.) The <xref:System.IdentityModel.Scope> object encapsulates information about the RP associated with the security token request (RST)."},{"content":"This includes information about the encrypting and signing credentials to be used with the RP and whether or not to encrypt any issued tokens and/or symmetric keys in the response.","pos":[497,677]},{"content":"Some typical tasks performed in the GetScope method are:      -   Determine whether the RP for which the token is intended is a recognized RP.","pos":[678,820]},{"content":"How this is accomplished depends on your implementation.","pos":[821,877]},{"content":"If the intended RP is not a valid RP for this STS, then the method should throw an &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.","pos":[878,1031],"source":" If the intended RP is not a valid RP for this STS, then the method should throw an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>."},{"content":"-   Determine the signing credentials to be used in the response (RSTR) and set the &lt;xref:System.IdentityModel.Scope.SigningCredentials%2A&gt; property accordingly.","pos":[1037,1198],"source":"      -   Determine the signing credentials to be used in the response (RSTR) and set the <xref:System.IdentityModel.Scope.SigningCredentials%2A> property accordingly."},{"content":"-   Determine whether the response and/or any included symmetrical keys should be encrypted and the credentials to be used for encryption.","pos":[1204,1342]},{"content":"Set the &lt;xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A&gt;, &lt;xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A&gt;, and &lt;xref:System.IdentityModel.Scope.EncryptingCredentials%2A&gt; properties accordingly.","pos":[1343,1568],"source":" Set the <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>, <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>, and <xref:System.IdentityModel.Scope.EncryptingCredentials%2A> properties accordingly."},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph>     &gt;  By default, the &lt;xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A&gt; and &lt;xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A&gt; properties are set <ph id=\"ph2\">`true`</ph> to prevent the STS from issuing tokens that are not secure.","pos":[1578,1834],"source":"          > [!IMPORTANT]     >  By default, the <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A> and <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A> properties are set `true` to prevent the STS from issuing tokens that are not secure."},{"content":"It is recommended that these properties never be set to <ph id=\"ph1\">`false`</ph> in a production environment.","pos":[1835,1927],"source":" It is recommended that these properties never be set to `false` in a production environment."},{"content":"-   Determine the address to which the response should be returned.","pos":[1933,2000]},{"content":"Set either the &lt;xref:System.IdentityModel.Scope.AppliesToAddress%2A&gt; or &lt;xref:System.IdentityModel.Scope.ReplyToAddress%2A&gt; property accordingly.","pos":[2001,2146],"source":" Set either the <xref:System.IdentityModel.Scope.AppliesToAddress%2A> or <xref:System.IdentityModel.Scope.ReplyToAddress%2A> property accordingly."}]},{"pos":[59800,59908],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.Claims.ClaimsPrincipal\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the client making the request.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.Claims.ClaimsPrincipal\"></xref> that represents the client making the request."},{"pos":[60018,60144],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the incoming request (RST).","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the incoming request (RST)."},{"pos":[60215,60330],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Scope\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that encapsulates the RP information associated with the request.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Scope\"></xref> that encapsulates the RP information associated with the request."},{"pos":[60934,61029],"content":"Gets the appropriate security token handler for issuing a security token of the specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the appropriate security token handler for issuing a security token of the specified type.","pos":[0,95]}]},{"pos":[61042,61611],"content":"In the default implementation if `requestedTokenType` is `null` or an empty string, the default token type from configuration is used. This is specified by the <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenType%2A> property of the STS configuration object accessed through the <xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A> property.       This method is called from the default token issuance pipeline implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"In the default implementation if <ph id=\"ph1\">`requestedTokenType`</ph> is <ph id=\"ph2\">`null`</ph> or an empty string, the default token type from configuration is used.","pos":[0,134],"source":"In the default implementation if `requestedTokenType` is `null` or an empty string, the default token type from configuration is used."},{"content":"This is specified by the &lt;xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenType%2A&gt; property of the STS configuration object accessed through the &lt;xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A&gt; property.","pos":[135,413],"source":" This is specified by the <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenType%2A> property of the STS configuration object accessed through the <xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A> property."},{"content":"This method is called from the default token issuance pipeline implemented in the &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt; method.","pos":[420,567],"source":"       This method is called from the default token issuance pipeline implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method."}]},{"pos":[61846,61898],"content":"A string that contains the requested token type URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains the requested token type URI.","pos":[0,52]}]},{"pos":[61991,62324],"content":"A <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler\"></xref> that represents the token handler to be used for creating the issued security token. Returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the requested token type is not supported (there is no handler configured for the specified token type).","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the token handler to be used for creating the issued security token.","pos":[0,156],"source":"A <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler\"></xref> that represents the token handler to be used for creating the issued security token."},{"content":"Returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the requested token type is not supported (there is no handler configured for the specified token type).","pos":[157,333],"source":" Returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the requested token type is not supported (there is no handler configured for the specified token type)."}]},{"pos":[62982,63021],"content":"Gets the lifetime for the issued token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the lifetime for the issued token.","pos":[0,39]}]},{"pos":[63034,64007],"content":"This method is normally called with the lifetime that arrived in the RST. In the default implementation, the token lifetime is calculated according to the following table.      |Created (in)|Expires (in)|Created (in)|Expires (out)|   |--------------------|--------------------|--------------------|---------------------|   |`null`|`null`|<xref:System.DateTime.UtcNow%2A?displayProperty=fullName>|<xref:System.DateTime.UtcNow%2A?displayProperty=fullName> + <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=fullName>|   |C|`null`|C|C + <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=fullName>|   |`null`|E|<xref:System.DateTime.UtcNow%2A?displayProperty=fullName>|E|   |C|E|C|E|       This method is called from the default token issuance pipeline implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is normally called with the lifetime that arrived in the RST.","pos":[0,73]},{"content":"In the default implementation, the token lifetime is calculated according to the following table.","pos":[74,171]},{"content":"|Created (in)|Expires (in)|Created (in)|Expires (out)|   |--------------------|--------------------|--------------------|---------------------|   |<ph id=\"ph1\">`null`</ph><ph id=\"ph2\">|</ph><ph id=\"ph3\">`null`</ph>|&lt;xref:System.DateTime.UtcNow%2A?displayProperty=fullName&gt;|&lt;xref:System.DateTime.UtcNow%2A?displayProperty=fullName&gt; + &lt;xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=fullName&gt;|   |C|<ph id=\"ph4\">`null`</ph>|C|C + &lt;xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=fullName&gt;|   |<ph id=\"ph5\">`null`</ph>|E|&lt;xref:System.DateTime.UtcNow%2A?displayProperty=fullName&gt;|E|   |C|E|C|E|       This method is called from the default token issuance pipeline implemented in the &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt; method.","pos":[177,964],"source":"      |Created (in)|Expires (in)|Created (in)|Expires (out)|   |--------------------|--------------------|--------------------|---------------------|   |`null`|`null`|<xref:System.DateTime.UtcNow%2A?displayProperty=fullName>|<xref:System.DateTime.UtcNow%2A?displayProperty=fullName> + <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=fullName>|   |C|`null`|C|C + <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=fullName>|   |`null`|E|<xref:System.DateTime.UtcNow%2A?displayProperty=fullName>|E|   |C|E|C|E|       This method is called from the default token issuance pipeline implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method."}]},{"pos":[64303,64413],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.Lifetime\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the requested lifetime.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.Lifetime\"></xref> that represents the requested lifetime."},{"pos":[64505,64613],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.Lifetime\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the granted lifetime.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.Lifetime\"></xref> that represents the granted lifetime."},{"pos":[65395,65419],"content":"Issues a security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Issues a security token.","pos":[0,24]}]},{"pos":[65432,69842],"content":"This method implements the Issue binding defined in the WS-Trust specification. The default implementation of the Issue method processes the incoming request (RST) through a token issuance (claims issuance) pipeline and returns either a response (RSTR) that contains a security token with the appropriate claims to authenticate the requestor with the RP or an appropriate exception. The token issuance pipeline in the default implementation consists of calls to the following methods (of the <xref:System.IdentityModel.SecurityTokenService> class).      1.  The <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> method to validate the request (RST).      2.  The <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method to get a <xref:System.IdentityModel.Scope> object that contains information about the relying party (RP) associated with the request. You must override this method. If <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> returns `null`, a <xref:System.InvalidOperationException> is thrown.      3.  The <xref:System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor%2A> method to return a security token descriptor based on the RST and the <xref:System.IdentityModel.Scope> object returned in the previous step. The security token descriptor (<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor>) contains information about the request in a form that can be used by a token handler. The <xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor%2A?displayProperty=fullName> property is set to the descriptor returned by the call. If `null` is returned or if the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A> property of the descriptor is `null`, an <xref:System.InvalidOperationException> is thrown. The exception is also thrown if the <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A?displayProperty=fullName> property is `true` but the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A> property on the returned descriptor is `null`.      4.  The <xref:System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler%2A> method to get the appropriate token handler based on the kind of token requested. If `null` is returned, a <xref:System.NotImplementedException> is thrown.      5.  The <xref:System.IdentityModel.SecurityTokenService.GetIssuerName%2A> method to get the issuer name for the token. Throws an <xref:System.InvalidOperationException> if the name is `null` or empty; otherwise sets the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName%2A> property on the descriptor.      6.  The <xref:System.IdentityModel.SecurityTokenService.GetTokenLifetime%2A> method to get the lifetime for the token and sets the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A> property on the descriptor.      7.  The <xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A> method to get the proof token to include in the issued token and sets the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Proof%2A> property on the descriptor.      8.  The <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> method to get the claims to include in the issued token and sets the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A> property on the descriptor. You must override this method.      9. The <xref:System.IdentityModel.SecurityTokenService.GetResponse%2A> method to create a response (RSTR) that contains the issued token.       You can override the Issue method to implement a custom token issuance pipeline; however this is typically not necessary in the development and test environments for which most custom implementations of the <xref:System.IdentityModel.SecurityTokenService> class are intended. In many of these cases you override the <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> and <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> methods and optionally override the <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> method  to provide a serviceable STS for your environment. If further customization is necessary you can often provide it by overriding the methods that implement each stage of the default token issuance pipeline listed above.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method implements the Issue binding defined in the WS-Trust specification.","pos":[0,79]},{"content":"The default implementation of the Issue method processes the incoming request (RST) through a token issuance (claims issuance) pipeline and returns either a response (RSTR) that contains a security token with the appropriate claims to authenticate the requestor with the RP or an appropriate exception.","pos":[80,382]},{"content":"The token issuance pipeline in the default implementation consists of calls to the following methods (of the &lt;xref:System.IdentityModel.SecurityTokenService&gt; class).","pos":[383,548],"source":" The token issuance pipeline in the default implementation consists of calls to the following methods (of the <xref:System.IdentityModel.SecurityTokenService> class)."},{"content":"1.","pos":[554,556]},{"content":"The &lt;xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A&gt; method to validate the request (RST).","pos":[558,667],"source":"  The <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> method to validate the request (RST)."},{"content":"2.","pos":[673,675]},{"content":"The &lt;xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt; method to get a &lt;xref:System.IdentityModel.Scope&gt; object that contains information about the relying party (RP) associated with the request.","pos":[677,882],"source":"  The <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method to get a <xref:System.IdentityModel.Scope> object that contains information about the relying party (RP) associated with the request."},{"content":"You must override this method.","pos":[883,913]},{"content":"If &lt;xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt; returns <ph id=\"ph1\">`null`</ph>, a &lt;xref:System.InvalidOperationException&gt; is thrown.","pos":[914,1046],"source":" If <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> returns `null`, a <xref:System.InvalidOperationException> is thrown."},{"content":"3.","pos":[1052,1054]},{"content":"The &lt;xref:System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor%2A&gt; method to return a security token descriptor based on the RST and the &lt;xref:System.IdentityModel.Scope&gt; object returned in the previous step.","pos":[1056,1283],"source":"  The <xref:System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor%2A> method to return a security token descriptor based on the RST and the <xref:System.IdentityModel.Scope> object returned in the previous step."},{"content":"The security token descriptor (&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor&gt;) contains information about the request in a form that can be used by a token handler.","pos":[1284,1460],"source":" The security token descriptor (<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor>) contains information about the request in a form that can be used by a token handler."},{"content":"The &lt;xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor%2A?displayProperty=fullName&gt; property is set to the descriptor returned by the call.","pos":[1461,1621],"source":" The <xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor%2A?displayProperty=fullName> property is set to the descriptor returned by the call."},{"content":"If <ph id=\"ph1\">`null`</ph> is returned or if the &lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A&gt; property of the descriptor is <ph id=\"ph2\">`null`</ph>, an &lt;xref:System.InvalidOperationException&gt; is thrown.","pos":[1622,1826],"source":" If `null` is returned or if the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A> property of the descriptor is `null`, an <xref:System.InvalidOperationException> is thrown."},{"content":"The exception is also thrown if the &lt;xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A?displayProperty=fullName&gt; property is <ph id=\"ph1\">`true`</ph> but the &lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A&gt; property on the returned descriptor is <ph id=\"ph2\">`null`</ph>.","pos":[1827,2106],"source":" The exception is also thrown if the <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A?displayProperty=fullName> property is `true` but the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A> property on the returned descriptor is `null`."},{"content":"4.","pos":[2112,2114]},{"content":"The &lt;xref:System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler%2A&gt; method to get the appropriate token handler based on the kind of token requested.","pos":[2116,2277],"source":"  The <xref:System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler%2A> method to get the appropriate token handler based on the kind of token requested."},{"content":"If <ph id=\"ph1\">`null`</ph> is returned, a &lt;xref:System.NotImplementedException&gt; is thrown.","pos":[2278,2351],"source":" If `null` is returned, a <xref:System.NotImplementedException> is thrown."},{"content":"5.","pos":[2357,2359]},{"content":"The &lt;xref:System.IdentityModel.SecurityTokenService.GetIssuerName%2A&gt; method to get the issuer name for the token.","pos":[2361,2475],"source":"  The <xref:System.IdentityModel.SecurityTokenService.GetIssuerName%2A> method to get the issuer name for the token."},{"content":"Throws an &lt;xref:System.InvalidOperationException&gt; if the name is <ph id=\"ph1\">`null`</ph> or empty; otherwise sets the &lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName%2A&gt; property on the descriptor.","pos":[2476,2682],"source":" Throws an <xref:System.InvalidOperationException> if the name is `null` or empty; otherwise sets the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName%2A> property on the descriptor."},{"content":"6.","pos":[2688,2690]},{"content":"The &lt;xref:System.IdentityModel.SecurityTokenService.GetTokenLifetime%2A&gt; method to get the lifetime for the token and sets the &lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A&gt; property on the descriptor.","pos":[2692,2917],"source":"  The <xref:System.IdentityModel.SecurityTokenService.GetTokenLifetime%2A> method to get the lifetime for the token and sets the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A> property on the descriptor."},{"content":"7.","pos":[2923,2925]},{"content":"The &lt;xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A&gt; method to get the proof token to include in the issued token and sets the &lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Proof%2A&gt; property on the descriptor.","pos":[2927,3166],"source":"  The <xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A> method to get the proof token to include in the issued token and sets the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Proof%2A> property on the descriptor."},{"content":"8.","pos":[3172,3174]},{"content":"The &lt;xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A&gt; method to get the claims to include in the issued token and sets the &lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A&gt; property on the descriptor.","pos":[3176,3422],"source":"  The <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> method to get the claims to include in the issued token and sets the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A> property on the descriptor."},{"content":"You must override this method.","pos":[3423,3453]},{"content":"9.","pos":[3459,3461]},{"content":"The &lt;xref:System.IdentityModel.SecurityTokenService.GetResponse%2A&gt; method to create a response (RSTR) that contains the issued token.","pos":[3462,3596],"source":" The <xref:System.IdentityModel.SecurityTokenService.GetResponse%2A> method to create a response (RSTR) that contains the issued token."},{"content":"You can override the Issue method to implement a custom token issuance pipeline; however this is typically not necessary in the development and test environments for which most custom implementations of the &lt;xref:System.IdentityModel.SecurityTokenService&gt; class are intended.","pos":[3603,3878],"source":"       You can override the Issue method to implement a custom token issuance pipeline; however this is typically not necessary in the development and test environments for which most custom implementations of the <xref:System.IdentityModel.SecurityTokenService> class are intended."},{"content":"In many of these cases you override the &lt;xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A&gt; and &lt;xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt; methods and optionally override the &lt;xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A&gt; method  to provide a serviceable STS for your environment.","pos":[3879,4222],"source":" In many of these cases you override the <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> and <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> methods and optionally override the <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> method  to provide a serviceable STS for your environment."},{"content":"If further customization is necessary you can often provide it by overriding the methods that implement each stage of the default token issuance pipeline listed above.","pos":[4223,4390]}]},{"pos":[70183,70297],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.Claims.ClaimsPrincipal\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the identity of the token requestor.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.Claims.ClaimsPrincipal\"></xref> that represents the identity of the token requestor."},{"pos":[70407,70642],"content":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the security token request. This includes the request message as well as other client related information such as authorization context.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the security token request.","pos":[0,126],"source":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the security token request."},{"content":"This includes the request message as well as other client related information such as authorization context.","pos":[127,235]}]},{"pos":[70754,70885],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the issued security token.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\"></xref> that contains the issued security token."},{"pos":[71364,71428],"content":"Gets or sets the principal associated with the current instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the principal associated with the current instance.","pos":[0,64]}]},{"pos":[71604,71704],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.Claims.ClaimsPrincipal\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the current principal.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.Claims.ClaimsPrincipal\"></xref> that represents the current principal."},{"pos":[72479,72550],"content":"When overridden in a derived class, processes a WS-Trust Renew request.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, processes a WS-Trust Renew request.","pos":[0,71]}]},{"pos":[72562,72684],"content":"The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default implementation of this method throws an &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.","pos":[0,122],"source":"The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>."}]},{"pos":[73024,73138],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.Claims.ClaimsPrincipal\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the identity of the token requestor.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.Claims.ClaimsPrincipal\"></xref> that represents the identity of the token requestor."},{"pos":[73248,73483],"content":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the security token request. This includes the request message as well as other client related information such as authorization context.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the security token request.","pos":[0,126],"source":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the security token request."},{"content":"This includes the request message as well as other client related information such as authorization context.","pos":[127,235]}]},{"pos":[73595,73735],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the RSTR to return to the caller.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\"></xref> that represents the RSTR to return to the caller."},{"pos":[74204,74287],"content":"Gets or sets the security token request (RST) associated with the current instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the security token request (RST) associated with the current instance.","pos":[0,83]}]},{"pos":[74503,74612],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the request.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that contains the request."},{"pos":[75073,75133],"content":"Gets or sets the scope associated with the current instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the scope associated with the current instance.","pos":[0,60]}]},{"pos":[75281,75396],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Scope\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the configuration for the token issuance request.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Scope\"></xref> that represents the configuration for the token issuance request."},{"pos":[75945,76072],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> associated with the current instance.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.IdentityModel.Tokens.SecurityTokenDescriptor\"></xref> associated with the current instance."},{"pos":[76291,76366],"content":"The security token descriptor that is associated with the current instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The security token descriptor that is associated with the current instance.","pos":[0,75]}]},{"pos":[76562,76664],"content":"An attempt to set the property to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> occurs.","needQuote":true,"needEscape":true,"source":"An attempt to set the property to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> occurs."},{"pos":[77185,77223],"content":"Gets the owner configuration instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the owner configuration instance.","pos":[0,38]}]},{"pos":[77478,77627],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Configuration.SecurityTokenServiceConfiguration\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the configuration for the current instance.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Configuration.SecurityTokenServiceConfiguration\"></xref> that contains the configuration for the current instance."},{"pos":[78441,78515],"content":"When overridden in a derived class, processes a WS-Trust Validate request.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, processes a WS-Trust Validate request.","pos":[0,74]}]},{"pos":[78527,78649],"content":"The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default implementation of this method throws an &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.","pos":[0,122],"source":"The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>."}]},{"pos":[78992,79106],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.Claims.ClaimsPrincipal\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the identity of the token requestor.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.Claims.ClaimsPrincipal\"></xref> that represents the identity of the token requestor."},{"pos":[79216,79451],"content":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the security token request. This includes the request message as well as other client related information such as authorization context.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the security token request.","pos":[0,126],"source":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the security token request."},{"content":"This includes the request message as well as other client related information such as authorization context.","pos":[127,235]}]},{"pos":[79563,79703],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the RSTR to return to the caller.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\"></xref> that represents the RSTR to return to the caller."},{"pos":[80401,80474],"content":"Validates the security token request (RST) encapsulated by this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Validates the security token request (RST) encapsulated by this instance.","pos":[0,73]}]},{"pos":[80487,81403],"content":"The ValidateRequest method is called from the token issuance pipeline (the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method) to validate the incoming RST. The RST is validated against the requirements (policy) of the STS and an appropriate exception is thrown if it is not valid.       The default implementation of the <xref:System.IdentityModel.SecurityTokenService> class supports only the RST-RSTR pattern and only the Issue binding of the WS-Trust specification (the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType%2A> property of the request must be set to <xref:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue?displayProperty=fullName>). The default implementation of this method enforces these requirements (and others noted in the exceptions section). You can override this method if you must enforce different validation requirements for your custom STS.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ValidateRequest method is called from the token issuance pipeline (the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method) to validate the incoming RST. The RST is validated against the requirements (policy) of the STS and an appropriate exception is thrown if it is not valid.       The default implementation of the <xref:System.IdentityModel.SecurityTokenService> class supports only the RST-RSTR pattern and only the Issue binding of the WS-Trust specification (the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType%2A> property of the request must be set to <xref:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue?displayProperty=fullName>). The default implementation of this method enforces these requirements (and others noted in the exceptions section). You can override this method if you must enforce different validation requirements for your custom STS.","pos":[0,914],"nodes":[{"content":"The ValidateRequest method is called from the token issuance pipeline (the &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt; method) to validate the incoming RST.","pos":[0,170],"source":"The ValidateRequest method is called from the token issuance pipeline (the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method) to validate the incoming RST."},{"content":"The RST is validated against the requirements (policy) of the STS and an appropriate exception is thrown if it is not valid.","pos":[171,295]},{"content":"The default implementation of the &lt;xref:System.IdentityModel.SecurityTokenService&gt; class supports only the RST-RSTR pattern and only the Issue binding of the WS-Trust specification (the &lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType%2A&gt; property of the request must be set to &lt;xref:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue?displayProperty=fullName&gt;).","pos":[302,694],"source":"       The default implementation of the <xref:System.IdentityModel.SecurityTokenService> class supports only the RST-RSTR pattern and only the Issue binding of the WS-Trust specification (the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType%2A> property of the request must be set to <xref:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue?displayProperty=fullName>)."},{"content":"The default implementation of this method enforces these requirements (and others noted in the exceptions section).","pos":[695,810]},{"content":"You can override this method if you must enforce different validation requirements for your custom STS.","pos":[811,914]}]}]},{"pos":[81663,81774],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the request.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the request."},{"pos":[82031,82979],"content":"<code>request</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       The <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType*> property of the request is not set to <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue\"></xref>.       -or-       The <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType*> property of the request is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or one of the constants defined in the <xref href=\"System.IdentityModel.Protocols.WSTrust.KeyTypes\"></xref> class.       -or-       The <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType*> of the request is <xref href=\"System.IdentityModel.Protocols.WSTrust.KeyTypes.Bearer\"></xref> and the <xref uid=\"langword_csharp_KeySize\" name=\"KeySize\" href=\"\"></xref> element is present, but its value is not equal to zero.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;request&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,85],"source":"<code>request</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType*&gt;</ph> property of the request is not set to <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[92,298],"source":"       -or-       The <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType*> property of the request is not set to <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue\"></xref>."},{"content":"-or-       The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType*&gt;</ph> property of the request is not <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or one of the constants defined in the <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.KeyTypes\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> class.","pos":[305,596],"source":"       -or-       The <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType*> property of the request is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or one of the constants defined in the <xref href=\"System.IdentityModel.Protocols.WSTrust.KeyTypes\"></xref> class."},{"content":"-or-       The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType*&gt;</ph> of the request is <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.KeyTypes.Bearer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_KeySize\" name=\"KeySize\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> element is present, but its value is not equal to zero.","pos":[603,912],"source":"       -or-       The <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType*> of the request is <xref href=\"System.IdentityModel.Protocols.WSTrust.KeyTypes.Bearer\"></xref> and the <xref uid=\"langword_csharp_KeySize\" name=\"KeySize\" href=\"\"></xref> element is present, but its value is not equal to zero."}]},{"pos":[83147,83319],"content":"The STS does not support the request token type (based on the value of the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType*> property of the request).","needQuote":true,"needEscape":true,"nodes":[{"content":"The STS does not support the request token type (based on the value of the &lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType*&gt; property of the request).","pos":[0,172],"source":"The STS does not support the request token type (based on the value of the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType*> property of the request)."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.SecurityTokenService\n  id: SecurityTokenService\n  children:\n  - System.IdentityModel.SecurityTokenService.#ctor(System.IdentityModel.Configuration.SecurityTokenServiceConfiguration)\n  - System.IdentityModel.SecurityTokenService.BeginCancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)\n  - System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)\n  - System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)\n  - System.IdentityModel.SecurityTokenService.BeginIssue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)\n  - System.IdentityModel.SecurityTokenService.BeginRenew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)\n  - System.IdentityModel.SecurityTokenService.BeginValidate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)\n  - System.IdentityModel.SecurityTokenService.Cancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)\n  - System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)\n  - System.IdentityModel.SecurityTokenService.EndCancel(System.IAsyncResult)\n  - System.IdentityModel.SecurityTokenService.EndGetOutputClaimsIdentity(System.IAsyncResult)\n  - System.IdentityModel.SecurityTokenService.EndGetScope(System.IAsyncResult)\n  - System.IdentityModel.SecurityTokenService.EndIssue(System.IAsyncResult)\n  - System.IdentityModel.SecurityTokenService.EndRenew(System.IAsyncResult)\n  - System.IdentityModel.SecurityTokenService.EndValidate(System.IAsyncResult)\n  - System.IdentityModel.SecurityTokenService.GetIssuerName\n  - System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)\n  - System.IdentityModel.SecurityTokenService.GetProofToken(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)\n  - System.IdentityModel.SecurityTokenService.GetRequestorProofEncryptingCredentials(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)\n  - System.IdentityModel.SecurityTokenService.GetResponse(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Tokens.SecurityTokenDescriptor)\n  - System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)\n  - System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler(System.String)\n  - System.IdentityModel.SecurityTokenService.GetTokenLifetime(System.IdentityModel.Protocols.WSTrust.Lifetime)\n  - System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)\n  - System.IdentityModel.SecurityTokenService.Principal\n  - System.IdentityModel.SecurityTokenService.Renew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)\n  - System.IdentityModel.SecurityTokenService.Request\n  - System.IdentityModel.SecurityTokenService.Scope\n  - System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor\n  - System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration\n  - System.IdentityModel.SecurityTokenService.Validate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)\n  - System.IdentityModel.SecurityTokenService.ValidateRequest(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)\n  langs:\n  - csharp\n  name: SecurityTokenService\n  nameWithType: SecurityTokenService\n  fullName: System.IdentityModel.SecurityTokenService\n  type: Class\n  summary: The abstract base class that defines the properties and methods of a security token service (STS).\n  remarks: \"To create an STS you must derive from the SecurityTokenService class. In your custom class you must, at a minimum, override the <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> and <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> methods. With these overrides, the STS created using the default implementation of all the other methods defined in the class is capable of issuing security tokens in response to security token requests (RST). That is, the Issue binding defined in the WS-Trust specification is implemented. This binding is implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method. None of the other WS-Trust bindings (Renew, Cancel, and Validate) are implemented in the default case and an appropriate fault is returned to the caller if an RST that corresponds to one of these bindings is encountered. You can, of course, override the appropriate methods (<xref:System.IdentityModel.SecurityTokenService.Renew%2A>, <xref:System.IdentityModel.SecurityTokenService.Cancel%2A>, and <xref:System.IdentityModel.SecurityTokenService.Validate%2A>) to implement these bindings in your STS.  \\n  \\n> [!IMPORTANT]\\n>  Implementing a production-ready STS entails careful planning and considerable resources to mitigate the potential security risks inherent in exposing such a service. Most developers using Windows Identity Foundation (WIF) will be developing applications that outsource identity management to an STS, rather than developing an STS itself. WIF provides a Visual Studio extension, the Identity and Access Tool for Visual Studio 2012, to help developers test solutions in the development environment. This tool includes an STS, `LocalSTS`, that you can configure to serve specific claims to the application that you are developing. For more information about the Identity and Access tool, see [Identity and Access Tool for Visual Studio 2012](~/add/includes/ajax-current-ext-md.md). In some scenarios, `LocalSTS` may not provide the functionality necessary to adequately test your application; for example, in a scenario that involves developing a custom token handler for use by an application. In these cases, you can derive from SecurityTokenService to create one or more simple STSs that can be deployed in your development environment and that can be used to test such features in your application. The rest of this section focuses on the methods exposed by the SecurityTokenService class that enable you to implement a simple STS and extend the token issuance pipeline.  \\n  \\n The following list provides a brief overview of the methods of primary importance to the developer for use in a test or development environment.  \\n  \\n-   The <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method. This method returns a <xref:System.IdentityModel.Scope> object that contains information about the RP. This object is used in the rest of the token issuance pipeline and includes information about the signing and encrypting credentials to use in the response, as well as the `AppliesTo` and `ReplyTo` (if required) addresses. You must override this method.  \\n  \\n-   The <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> method. This method returns an <xref:System.Security.Claims.ClaimsIdentity> object that contains the claims to return to the RP. You must override this method.  \\n  \\n-   The <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method. This method implements the token request pipeline, which processes an incoming security token request (RST) and returns a response (RSTR) to the caller that contains a token that can be used to authenticate with an RP. Many of the other methods defined in the SecurityTokenService class are called from this method, including the <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> and <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> methods. You do not have to override this method, but an understanding of the token request pipeline it implements may be helpful.  \\n  \\n An STS is configured through the <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration> class.\"\n  example:\n  - \"The code examples that are used in the SecurityTokenService topics are taken from the `Custom Token` sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT) and it includes an implementation of a passive STS that is capable of serving an SWT token. For an example of how to implement an active STS, you can see the `Federation Metadata` sample. For information about these samples and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/add/includes/ajax-current-ext-md.md). The following code shows the implementation of a passive STS using the SecurityTokenService class.  \\n  \\n [!code-cs[WIFCustomTokenSTS#3](~/add/codesnippet/csharp/passivests/customsecuritytokenservice.cs#3)]  \\n  \\n The following code shows how to invoke a custom passive STS to process a WS-Federation request by calling the <xref:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest%28System.Web.HttpRequest%2CSystem.Security.Claims.ClaimsPrincipal%2CSystem.IdentityModel.SecurityTokenService%2CSystem.Web.HttpResponse%29?displayProperty=fullName> method from the code behind in the `default.aspx.cs` file.  \\n  \\n [!code-cs[WIFCustomTokenSTS#1](~/add/codesnippet/csharp/passivests/default.aspx.cs#1)]\"\n  syntax:\n    content: public abstract class SecurityTokenService\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IdentityModel.SecurityTokenService.#ctor(System.IdentityModel.Configuration.SecurityTokenServiceConfiguration)\n  id: '#ctor(System.IdentityModel.Configuration.SecurityTokenServiceConfiguration)'\n  parent: System.IdentityModel.SecurityTokenService\n  langs:\n  - csharp\n  name: SecurityTokenService(SecurityTokenServiceConfiguration)\n  nameWithType: SecurityTokenService.SecurityTokenService(SecurityTokenServiceConfiguration)\n  fullName: System.IdentityModel.SecurityTokenService.SecurityTokenService(SecurityTokenServiceConfiguration)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Called from derived classes to initialize the <xref href=\"System.IdentityModel.SecurityTokenService\"></xref> class using the specified configuration settings.\n  remarks: Use this constructor to initialize scope provider and token issuer certificate.\n  syntax:\n    content: protected SecurityTokenService (System.IdentityModel.Configuration.SecurityTokenServiceConfiguration securityTokenServiceConfiguration);\n    parameters:\n    - id: securityTokenServiceConfiguration\n      type: System.IdentityModel.Configuration.SecurityTokenServiceConfiguration\n      description: A <xref href=\"System.IdentityModel.Configuration.SecurityTokenServiceConfiguration\"></xref> that contains the settings for the STS.\n  overload: System.IdentityModel.SecurityTokenService.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>securityTokenServiceConfiguration</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.SecurityTokenService.BeginCancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)\n  id: BeginCancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)\n  parent: System.IdentityModel.SecurityTokenService\n  langs:\n  - csharp\n  name: BeginCancel(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)\n  nameWithType: SecurityTokenService.BeginCancel(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)\n  fullName: System.IdentityModel.SecurityTokenService.BeginCancel(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: When overridden in a derived class, begins an asynchronous WS-Trust Cancel request.\n  remarks: The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.\n  syntax:\n    content: public virtual IAsyncResult BeginCancel (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);\n    parameters:\n    - id: principal\n      type: System.Security.Claims.ClaimsPrincipal\n      description: A <xref href=\"System.Security.Claims.ClaimsPrincipal\"></xref> that represents the identity of the token requestor.\n    - id: request\n      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\n      description: A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the security token request. This includes the request message as well as other client related information such as authorization context.\n    - id: callback\n      type: System.AsyncCallback\n      description: The <xref:System.AsyncCallback> delegate that receives notification of the completion of the asynchronous cancel operation.\n    - id: state\n      type: System.Object\n      description: An object that contains state information associated with the asynchronous cancel operation.\n    return:\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> that references the asynchronous cancel operation.\n  overload: System.IdentityModel.SecurityTokenService.BeginCancel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)\n  id: BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)\n  parent: System.IdentityModel.SecurityTokenService\n  langs:\n  - csharp\n  name: BeginGetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope,AsyncCallback,Object)\n  nameWithType: SecurityTokenService.BeginGetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope,AsyncCallback,Object)\n  fullName: System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: When overridden in a derived class, begins an asynchronous call to the <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity*> method.\n  remarks: The default implementation of this method throws a <xref:System.NotImplementedException>.\n  syntax:\n    content: protected virtual IAsyncResult BeginGetOutputClaimsIdentity (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope, AsyncCallback callback, object state);\n    parameters:\n    - id: principal\n      type: System.Security.Claims.ClaimsPrincipal\n      description: A <xref href=\"System.Security.Claims.ClaimsPrincipal\"></xref> that represents the identity of the token requestor.\n    - id: request\n      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\n      description: A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the security token request. This includes the request message as well as other client related information such as authorization context.\n    - id: scope\n      type: System.IdentityModel.Scope\n      description: The <xref href=\"System.IdentityModel.Scope\"></xref> that contains information about the relying party associated with the request.\n    - id: callback\n      type: System.AsyncCallback\n      description: The <xref:System.AsyncCallback> delegate that receives notification of the completion of the asynchronous operation.\n    - id: state\n      type: System.Object\n      description: An object that contains state information associated with the asynchronous operation.\n    return:\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> that references the asynchronous operation.\n  overload: System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)\n  id: BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)\n  parent: System.IdentityModel.SecurityTokenService\n  langs:\n  - csharp\n  name: BeginGetScope(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)\n  nameWithType: SecurityTokenService.BeginGetScope(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)\n  fullName: System.IdentityModel.SecurityTokenService.BeginGetScope(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: When overridden in a derived class, begins an asynchronous call for the <xref:System.IdentityModel.SecurityTokenService.GetScope*> method.\n  remarks: The default implementation of this method throws a <xref:System.NotImplementedException>.\n  syntax:\n    content: protected virtual IAsyncResult BeginGetScope (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);\n    parameters:\n    - id: principal\n      type: System.Security.Claims.ClaimsPrincipal\n      description: A <xref href=\"System.Security.Claims.ClaimsPrincipal\"></xref> that represents the identity of the token requestor.\n    - id: request\n      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\n      description: A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the security token request. This includes the request message as well as other client related information such as authorization context.\n    - id: callback\n      type: System.AsyncCallback\n      description: The <xref:System.AsyncCallback> delegate that receives notification of the completion of the asynchronous operation.\n    - id: state\n      type: System.Object\n      description: An object that contains state information associated with the asynchronous operation.\n    return:\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> that references the asynchronous cancel operation.\n  overload: System.IdentityModel.SecurityTokenService.BeginGetScope*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.SecurityTokenService.BeginIssue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)\n  id: BeginIssue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)\n  parent: System.IdentityModel.SecurityTokenService\n  langs:\n  - csharp\n  name: BeginIssue(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)\n  nameWithType: SecurityTokenService.BeginIssue(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)\n  fullName: System.IdentityModel.SecurityTokenService.BeginIssue(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: When overridden in a derived class, begins an asynchronous WS-Trust Issue request.\n  remarks: The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.\n  syntax:\n    content: public virtual IAsyncResult BeginIssue (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);\n    parameters:\n    - id: principal\n      type: System.Security.Claims.ClaimsPrincipal\n      description: A <xref href=\"System.Security.Claims.ClaimsPrincipal\"></xref> that represents the identity of the token requestor.\n    - id: request\n      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\n      description: A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the security token request. This includes the request message as well as other client related information such as authorization context.\n    - id: callback\n      type: System.AsyncCallback\n      description: The <xref:System.AsyncCallback> delegate that receives notification of the completion of the asynchronous issue operation.\n    - id: state\n      type: System.Object\n      description: An object that contains state information associated with the asynchronous issue operation.\n    return:\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> that references the asynchronous issue operation.\n  overload: System.IdentityModel.SecurityTokenService.BeginIssue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.SecurityTokenService.BeginRenew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)\n  id: BeginRenew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)\n  parent: System.IdentityModel.SecurityTokenService\n  langs:\n  - csharp\n  name: BeginRenew(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)\n  nameWithType: SecurityTokenService.BeginRenew(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)\n  fullName: System.IdentityModel.SecurityTokenService.BeginRenew(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: When overridden in a derived class, begins an asynchronous WS-Trust Renew request.\n  remarks: The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.\n  syntax:\n    content: public virtual IAsyncResult BeginRenew (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);\n    parameters:\n    - id: principal\n      type: System.Security.Claims.ClaimsPrincipal\n      description: A <xref href=\"System.Security.Claims.ClaimsPrincipal\"></xref> that represents the identity of the token requestor.\n    - id: request\n      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\n      description: A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the security token request. This includes the request message as well as other client related information such as authorization context.\n    - id: callback\n      type: System.AsyncCallback\n      description: The <xref:System.AsyncCallback> delegate that receives notification of the completion of the asynchronous renew operation.\n    - id: state\n      type: System.Object\n      description: An object that contains state information associated with the asynchronous renew operation.\n    return:\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> that references the asynchronous renew operation.\n  overload: System.IdentityModel.SecurityTokenService.BeginRenew*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.SecurityTokenService.BeginValidate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)\n  id: BeginValidate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)\n  parent: System.IdentityModel.SecurityTokenService\n  langs:\n  - csharp\n  name: BeginValidate(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)\n  nameWithType: SecurityTokenService.BeginValidate(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)\n  fullName: System.IdentityModel.SecurityTokenService.BeginValidate(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: When overridden in a derived class, begins an asynchronous WS-Trust Validate request.\n  remarks: The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.\n  syntax:\n    content: public virtual IAsyncResult BeginValidate (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);\n    parameters:\n    - id: principal\n      type: System.Security.Claims.ClaimsPrincipal\n      description: A <xref href=\"System.Security.Claims.ClaimsPrincipal\"></xref> that represents the identity of the token requestor.\n    - id: request\n      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\n      description: A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the security token request. This includes the request message as well as other client related information such as authorization context.\n    - id: callback\n      type: System.AsyncCallback\n      description: The <xref:System.AsyncCallback> delegate that receives notification of the completion of the asynchronous validate operation.\n    - id: state\n      type: System.Object\n      description: An object that contains state information associated with the asynchronous validate operation.\n    return:\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> that references the asynchronous validate operation.\n  overload: System.IdentityModel.SecurityTokenService.BeginValidate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.SecurityTokenService.Cancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)\n  id: Cancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)\n  parent: System.IdentityModel.SecurityTokenService\n  langs:\n  - csharp\n  name: Cancel(ClaimsPrincipal,RequestSecurityToken)\n  nameWithType: SecurityTokenService.Cancel(ClaimsPrincipal,RequestSecurityToken)\n  fullName: System.IdentityModel.SecurityTokenService.Cancel(ClaimsPrincipal,RequestSecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: When overridden in a derived class, processes a WS-Trust Cancel request.\n  remarks: The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.\n  syntax:\n    content: public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Cancel (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);\n    parameters:\n    - id: principal\n      type: System.Security.Claims.ClaimsPrincipal\n      description: A <xref href=\"System.Security.Claims.ClaimsPrincipal\"></xref> that represents the identity of the token requestor.\n    - id: request\n      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\n      description: A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the security token request. This includes the request message as well as other client related information such as authorization context.\n    return:\n      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n      description: A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\"></xref> that represents the RSTR to return to the caller.\n  overload: System.IdentityModel.SecurityTokenService.Cancel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)\n  id: CreateSecurityTokenDescriptor(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)\n  parent: System.IdentityModel.SecurityTokenService\n  langs:\n  - csharp\n  name: CreateSecurityTokenDescriptor(RequestSecurityToken,Scope)\n  nameWithType: SecurityTokenService.CreateSecurityTokenDescriptor(RequestSecurityToken,Scope)\n  fullName: System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor(RequestSecurityToken,Scope)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Creates an instance of a <xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*>.\n  remarks: Invoked during token issuance after <xref:System.IdentityModel.SecurityTokenService.GetScope%2A>.\n  syntax:\n    content: protected virtual System.IdentityModel.Tokens.SecurityTokenDescriptor CreateSecurityTokenDescriptor (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope);\n    parameters:\n    - id: request\n      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\n      description: The incoming token request.\n    - id: scope\n      type: System.IdentityModel.Scope\n      description: The <xref:System.IdentityModel.SecurityTokenService.Scope*> object returned from <xref:System.IdentityModel.SecurityTokenService.GetScope*>.\n    return:\n      type: System.IdentityModel.Tokens.SecurityTokenDescriptor\n      description: The <xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*>.\n  overload: System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>request</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>scope</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.IdentityModel.SecurityTokenService.EndCancel(System.IAsyncResult)\n  id: EndCancel(System.IAsyncResult)\n  parent: System.IdentityModel.SecurityTokenService\n  langs:\n  - csharp\n  name: EndCancel(IAsyncResult)\n  nameWithType: SecurityTokenService.EndCancel(IAsyncResult)\n  fullName: System.IdentityModel.SecurityTokenService.EndCancel(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: When overridden in a derived class, completes the asynchronous WS-Trust Cancel request.\n  remarks: The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.\n  syntax:\n    content: public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndCancel (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> that is returned by a call to the <xref:System.IdentityModel.SecurityTokenService.BeginCancel*> method.\n    return:\n      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n      description: A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\"></xref> that represents the RSTR to return to the caller.\n  overload: System.IdentityModel.SecurityTokenService.EndCancel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.SecurityTokenService.EndGetOutputClaimsIdentity(System.IAsyncResult)\n  id: EndGetOutputClaimsIdentity(System.IAsyncResult)\n  parent: System.IdentityModel.SecurityTokenService\n  langs:\n  - csharp\n  name: EndGetOutputClaimsIdentity(IAsyncResult)\n  nameWithType: SecurityTokenService.EndGetOutputClaimsIdentity(IAsyncResult)\n  fullName: System.IdentityModel.SecurityTokenService.EndGetOutputClaimsIdentity(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: When overridden in a derived class, completes the asynchronous call to the <xref:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*> method.\n  remarks: The default implementation of this method throws a <xref:System.NotImplementedException>.\n  syntax:\n    content: protected virtual System.Security.Claims.ClaimsIdentity EndGetOutputClaimsIdentity (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> that is returned by a call to the <xref:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*> method.\n    return:\n      type: System.Security.Claims.ClaimsIdentity\n      description: A <xref href=\"System.Security.Claims.ClaimsIdentity\"></xref> that contains the collection of claims that will be placed in the issued security token.\n  overload: System.IdentityModel.SecurityTokenService.EndGetOutputClaimsIdentity*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.SecurityTokenService.EndGetScope(System.IAsyncResult)\n  id: EndGetScope(System.IAsyncResult)\n  parent: System.IdentityModel.SecurityTokenService\n  langs:\n  - csharp\n  name: EndGetScope(IAsyncResult)\n  nameWithType: SecurityTokenService.EndGetScope(IAsyncResult)\n  fullName: System.IdentityModel.SecurityTokenService.EndGetScope(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: When overridden in a derived class, completes the asynchronous call to the <xref:System.IdentityModel.SecurityTokenService.BeginGetScope*> method.\n  remarks: The default implementation of this method throws a <xref:System.NotImplementedException>.\n  syntax:\n    content: protected virtual System.IdentityModel.Scope EndGetScope (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> that is returned by a call to the <xref:System.IdentityModel.SecurityTokenService.BeginGetScope*> method.\n    return:\n      type: System.IdentityModel.Scope\n      description: A <xref href=\"System.IdentityModel.Scope\"></xref> that encapsulates the relying party (RP) information associated with the request (RST) specified in the call to the <xref:System.IdentityModel.SecurityTokenService.BeginGetScope*> method.\n  overload: System.IdentityModel.SecurityTokenService.EndGetScope*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.SecurityTokenService.EndIssue(System.IAsyncResult)\n  id: EndIssue(System.IAsyncResult)\n  parent: System.IdentityModel.SecurityTokenService\n  langs:\n  - csharp\n  name: EndIssue(IAsyncResult)\n  nameWithType: SecurityTokenService.EndIssue(IAsyncResult)\n  fullName: System.IdentityModel.SecurityTokenService.EndIssue(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: When overridden in a derived class, completes the asynchronous WS-Trust Issue request.\n  remarks: The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.\n  syntax:\n    content: public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndIssue (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> that is returned by a call to the <xref:System.IdentityModel.SecurityTokenService.BeginIssue*> method.\n    return:\n      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n      description: A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\"></xref> that represents the RSTR to return to the caller.\n  overload: System.IdentityModel.SecurityTokenService.EndIssue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.SecurityTokenService.EndRenew(System.IAsyncResult)\n  id: EndRenew(System.IAsyncResult)\n  parent: System.IdentityModel.SecurityTokenService\n  langs:\n  - csharp\n  name: EndRenew(IAsyncResult)\n  nameWithType: SecurityTokenService.EndRenew(IAsyncResult)\n  fullName: System.IdentityModel.SecurityTokenService.EndRenew(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: When overridden in a derived class, completes the asynchronous WS-Trust Renew request.\n  remarks: The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.\n  syntax:\n    content: public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndRenew (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> that is returned by a call to the <xref:System.IdentityModel.SecurityTokenService.BeginRenew*> method.\n    return:\n      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n      description: A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\"></xref> that represents the RSTR to return to the caller.\n  overload: System.IdentityModel.SecurityTokenService.EndRenew*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.SecurityTokenService.EndValidate(System.IAsyncResult)\n  id: EndValidate(System.IAsyncResult)\n  parent: System.IdentityModel.SecurityTokenService\n  langs:\n  - csharp\n  name: EndValidate(IAsyncResult)\n  nameWithType: SecurityTokenService.EndValidate(IAsyncResult)\n  fullName: System.IdentityModel.SecurityTokenService.EndValidate(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: When overridden in a derived class, completes the asynchronous WS-Trust Validate request.\n  remarks: The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.\n  syntax:\n    content: public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndValidate (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> that is returned by a call to the <xref:System.IdentityModel.SecurityTokenService.BeginValidate*> method.\n    return:\n      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n      description: A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\"></xref> that represents the RSTR to return to the caller.\n  overload: System.IdentityModel.SecurityTokenService.EndValidate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.SecurityTokenService.GetIssuerName\n  id: GetIssuerName\n  parent: System.IdentityModel.SecurityTokenService\n  langs:\n  - csharp\n  name: GetIssuerName()\n  nameWithType: SecurityTokenService.GetIssuerName()\n  fullName: System.IdentityModel.SecurityTokenService.GetIssuerName()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Gets the name of the security token service (STS).\n  remarks: \"This method is called from the default token issuance pipeline implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.  \\n  \\n The default implementation returns the <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> property from configuration accessed through the <xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A> property.\"\n  syntax:\n    content: protected virtual string GetIssuerName ();\n    parameters: []\n    return:\n      type: System.String\n      description: The issuer name.\n  overload: System.IdentityModel.SecurityTokenService.GetIssuerName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)\n  id: GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)\n  parent: System.IdentityModel.SecurityTokenService\n  langs:\n  - csharp\n  name: GetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope)\n  nameWithType: SecurityTokenService.GetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope)\n  fullName: System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: When overridden in a derived class, this method returns a collection of output subjects to be included in the issued token.\n  remarks: \"The GetOutputClaimsIdentity method is called from the token issuance pipeline, which is implemented by the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method. It returns an <xref:System.Security.Claims.ClaimsIdentity> that contains the claims to include in the issued security token based on the requestor of the token (the `principal` parameter), the incoming RST (the `request` parameter), and the relying party for which the token is intended (the `scope` parameter). The logic in this method is primarily concerned with answering the following questions:  \\n  \\n-   **Which claim types should be included in the response based on the RP for which it is intended?** Typically this is decided on a per-RP basis from lists of claim types required for each RP or on a per-request basis by examining the <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Claims%2A> property of the request. However, the logic and details for determining the claims to include in the response is completely up to your implementation.  \\n  \\n-   **Which claim values should be assigned to the claims in the response?** For an Identity Provider (IP-STS) this typically means using one or more claims in the requestor’s <xref:System.Security.Claims.ClaimsPrincipal> (provided by the `principal` parameter) to access a store (or other entity) to return values for the required claim types. For a Federation Provider (R-STS) this typically means performing some kind of processing on the requestor’s incoming claims to fulfill the request; perhaps performing filtering or transformation on some claims presented by the requestor, while passing others through unmodified. Of course, as in the case of deciding which claims to include in the response, the details and logic of how to determine the values of these claims is up to your implementation.\"\n  example:\n  - \"The code example that is used in this topic is taken from the `Custom Token` sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT) and it includes an implementation of a passive STS that is capable of serving an SWT token. For an example of how to implement an active STS, you can see the `Federation Metadata` sample. For information about these samples and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/add/includes/ajax-current-ext-md.md). The following code shows how to override the GetOutputClaimsIdentity method to return claims for your STS. In this example, the Request Security Token (RST) message is ignored and a collection of claims based on the user as authenticated at the STS is returned.  \\n  \\n [!code-cs[WIFCustomTokenSTS#6](~/add/codesnippet/csharp/passivests/customsecuritytokenservice.cs#6)]\"\n  syntax:\n    content: protected abstract System.Security.Claims.ClaimsIdentity GetOutputClaimsIdentity (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope);\n    parameters:\n    - id: principal\n      type: System.Security.Claims.ClaimsPrincipal\n      description: A <xref href=\"System.Security.Claims.ClaimsPrincipal\"></xref> that represents the identity of the token requestor.\n    - id: request\n      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\n      description: A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the security token request. This includes the request message as well as other client related information such as authorization context.\n    - id: scope\n      type: System.IdentityModel.Scope\n      description: The <xref href=\"System.IdentityModel.Scope\"></xref> that contains information about the relying party associated with the request. This is the <xref href=\"System.IdentityModel.Scope\"></xref> object that was returned by the <xref:System.IdentityModel.SecurityTokenService.GetScope*> method.\n    return:\n      type: System.Security.Claims.ClaimsIdentity\n      description: A <xref href=\"System.Security.Claims.ClaimsIdentity\"></xref> that contains the collection of claims that will be placed in the issued security token.\n  overload: System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.SecurityTokenService.GetProofToken(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)\n  id: GetProofToken(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)\n  parent: System.IdentityModel.SecurityTokenService\n  langs:\n  - csharp\n  name: GetProofToken(RequestSecurityToken,Scope)\n  nameWithType: SecurityTokenService.GetProofToken(RequestSecurityToken,Scope)\n  fullName: System.IdentityModel.SecurityTokenService.GetProofToken(RequestSecurityToken,Scope)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Gets the proof token to be included in the response (RSTR).\n  remarks: \"This method is called from the default token issuance pipeline implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.  \\n  \\n The default implementation returns a proof descriptor or throws an appropriate exception.\"\n  syntax:\n    content: protected virtual System.IdentityModel.Tokens.ProofDescriptor GetProofToken (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope);\n    parameters:\n    - id: request\n      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\n      description: A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the incoming token request (RST).\n    - id: scope\n      type: System.IdentityModel.Scope\n      description: The <xref href=\"System.IdentityModel.Scope\"></xref> instance that encapsulates information about the relying party.\n    return:\n      type: System.IdentityModel.Tokens.ProofDescriptor\n      description: A <xref href=\"System.IdentityModel.Tokens.ProofDescriptor\"></xref> that represents the newly created proof descriptor. The proof descriptor can be an asymmetric proof descriptor, a symmetric proof descriptor, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> in the bearer token case.\n  overload: System.IdentityModel.SecurityTokenService.GetProofToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>request</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>scope</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.IdentityModel.SecurityTokenService.GetRequestorProofEncryptingCredentials(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)\n  id: GetRequestorProofEncryptingCredentials(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)\n  parent: System.IdentityModel.SecurityTokenService\n  langs:\n  - csharp\n  name: GetRequestorProofEncryptingCredentials(RequestSecurityToken)\n  nameWithType: SecurityTokenService.GetRequestorProofEncryptingCredentials(RequestSecurityToken)\n  fullName: System.IdentityModel.SecurityTokenService.GetRequestorProofEncryptingCredentials(RequestSecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Gets the requestor's proof encrypting credentials.\n  remarks: \"This method is called from the <xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A> method.  \\n  \\n The default implementation does the following. Returns `null` if there is no encryption token specified in the request (the <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ProofEncryption%2A?displayProperty=fullName> property is `null`). Otherwise, if it can get the token as an <xref:System.IdentityModel.Tokens.X509SecurityToken>, it returns credentials based on that token. If it cannot resolve the token as an <xref:System.IdentityModel.Tokens.X509SecurityToken>, a <xref:System.IdentityModel.RequestFailedException> is thrown.\"\n  syntax:\n    content: protected virtual System.IdentityModel.Tokens.EncryptingCredentials GetRequestorProofEncryptingCredentials (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);\n    parameters:\n    - id: request\n      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\n      description: A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the incoming token request (RST).\n    return:\n      type: System.IdentityModel.Tokens.EncryptingCredentials\n      description: An <xref href=\"System.IdentityModel.Tokens.EncryptingCredentials\"></xref> object that represents the requestor’s encrypting credentials.\n  overload: System.IdentityModel.SecurityTokenService.GetRequestorProofEncryptingCredentials*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>request</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.SecurityTokenService.GetResponse(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Tokens.SecurityTokenDescriptor)\n  id: GetResponse(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Tokens.SecurityTokenDescriptor)\n  parent: System.IdentityModel.SecurityTokenService\n  langs:\n  - csharp\n  name: GetResponse(RequestSecurityToken,SecurityTokenDescriptor)\n  nameWithType: SecurityTokenService.GetResponse(RequestSecurityToken,SecurityTokenDescriptor)\n  fullName: System.IdentityModel.SecurityTokenService.GetResponse(RequestSecurityToken,SecurityTokenDescriptor)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Creates the response (RSTR) that contains the issued token by using the specified request (RST) and security token descriptor.\n  remarks: \"The GetResponse method is called as the last step from the token issuance pipeline, which is implemented by the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method. It creates and returns the response (RSTR) by using the original incoming request (RST) and the token descriptor that was built up during previous steps in the token issuance pipeline.  \\n  \\n The default implementation creates the RSTR by passing the RST specified in the request parameter to the <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.%23ctor%28System.IdentityModel.Protocols.WSTrust.WSTrustMessage%29?displayProperty=fullName> constructor, invoking the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.ApplyTo%2A?displayProperty=fullName> method on the token descriptor passed into GetResponse to apply its properties to the newly created RSTR, setting the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo%2A> property on the RSTR by using the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A> property on the token descriptor, and finally setting the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A> property on the RSTR according to the following table:  \\n  \\n|`RST.ReplyTo` property|<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=fullName> property.|`RSTR.ReplyTo` property|  \\n|----------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------|  \\n|Set|Not Set|Not Set|  \\n|Set|Set|<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=fullName>|  \\n|Not Set|Set|Not Set|  \\n|Not Set|Not Set|Not Set|\"\n  syntax:\n    content: protected virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse GetResponse (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);\n    parameters:\n    - id: request\n      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\n      description: The RST that contains the token request.\n    - id: tokenDescriptor\n      type: System.IdentityModel.Tokens.SecurityTokenDescriptor\n      description: The token descriptor that contains the information to use for the issued token.\n    return:\n      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n      description: The response (RSTR) or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if a response cannot be created from the specified request and token descriptor. The default implementation returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the <code>tokenDescriptor</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.IdentityModel.SecurityTokenService.GetResponse*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)\n  id: GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)\n  parent: System.IdentityModel.SecurityTokenService\n  langs:\n  - csharp\n  name: GetScope(ClaimsPrincipal,RequestSecurityToken)\n  nameWithType: SecurityTokenService.GetScope(ClaimsPrincipal,RequestSecurityToken)\n  fullName: System.IdentityModel.SecurityTokenService.GetScope(ClaimsPrincipal,RequestSecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Gets a <xref href=\"System.IdentityModel.Scope\"></xref> object that contains information about the relying party (RP) associated with the specified request (RST). You must override this method in your implementation of the <xref href=\"System.IdentityModel.SecurityTokenService\"></xref> class.\n  remarks: \"The GetScope method is called from the token issuance pipeline after the <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> method and should return a <xref:System.IdentityModel.Scope> object configured for the incoming request. (The token issuance pipeline is implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.) The <xref:System.IdentityModel.Scope> object encapsulates information about the RP associated with the security token request (RST). This includes information about the encrypting and signing credentials to be used with the RP and whether or not to encrypt any issued tokens and/or symmetric keys in the response. Some typical tasks performed in the GetScope method are:  \\n  \\n-   Determine whether the RP for which the token is intended is a recognized RP. How this is accomplished depends on your implementation. If the intended RP is not a valid RP for this STS, then the method should throw an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.  \\n  \\n-   Determine the signing credentials to be used in the response (RSTR) and set the <xref:System.IdentityModel.Scope.SigningCredentials%2A> property accordingly.  \\n  \\n-   Determine whether the response and/or any included symmetrical keys should be encrypted and the credentials to be used for encryption. Set the <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>, <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>, and <xref:System.IdentityModel.Scope.EncryptingCredentials%2A> properties accordingly.  \\n  \\n    > [!IMPORTANT]\\n    >  By default, the <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A> and <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A> properties are set `true` to prevent the STS from issuing tokens that are not secure. It is recommended that these properties never be set to `false` in a production environment.  \\n  \\n-   Determine the address to which the response should be returned. Set either the <xref:System.IdentityModel.Scope.AppliesToAddress%2A> or <xref:System.IdentityModel.Scope.ReplyToAddress%2A> property accordingly.\"\n  example:\n  - \"The code example that is used in this topic is taken from the `Custom Token` sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT) and it includes an implementation of a passive STS that is capable of serving an SWT token. For an example of how to implement an active STS, you can see the `Federation Metadata` sample. For information about these samples and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The following code example shows an implementation of the GetScope method. This implementation verifies that the RP is recognized by the STS, validates the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A> address in the request and sets the <xref:System.IdentityModel.Scope.ReplyToAddress%2A?displayProperty=fullName> property accordingly, and sets the signing and encrypting credentials to use with the RP based on certificates that are hard-coded in the file.  \\n  \\n [!code-cs[WIFCustomTokenSTS#4](~/add/codesnippet/csharp/passivests/customsecuritytokenservice.cs#4)]  \\n[!code-cs[WIFCustomTokenSTS#5](~/add/codesnippet/csharp/passivests/customsecuritytokenservice.cs#5)]  \\n[!code-cs[WIFCustomTokenSTS#7](~/add/codesnippet/csharp/passivests/customsecuritytokenservice.cs#7)]\"\n  syntax:\n    content: protected abstract System.IdentityModel.Scope GetScope (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);\n    parameters:\n    - id: principal\n      type: System.Security.Claims.ClaimsPrincipal\n      description: A <xref href=\"System.Security.Claims.ClaimsPrincipal\"></xref> that represents the client making the request.\n    - id: request\n      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\n      description: A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the incoming request (RST).\n    return:\n      type: System.IdentityModel.Scope\n      description: A <xref href=\"System.IdentityModel.Scope\"></xref> that encapsulates the RP information associated with the request.\n  overload: System.IdentityModel.SecurityTokenService.GetScope*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler(System.String)\n  id: GetSecurityTokenHandler(System.String)\n  parent: System.IdentityModel.SecurityTokenService\n  langs:\n  - csharp\n  name: GetSecurityTokenHandler(String)\n  nameWithType: SecurityTokenService.GetSecurityTokenHandler(String)\n  fullName: System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler(String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Gets the appropriate security token handler for issuing a security token of the specified type.\n  remarks: \"In the default implementation if `requestedTokenType` is `null` or an empty string, the default token type from configuration is used. This is specified by the <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenType%2A> property of the STS configuration object accessed through the <xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A> property.  \\n  \\n This method is called from the default token issuance pipeline implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.\"\n  syntax:\n    content: protected virtual System.IdentityModel.Tokens.SecurityTokenHandler GetSecurityTokenHandler (string requestedTokenType);\n    parameters:\n    - id: requestedTokenType\n      type: System.String\n      description: A string that contains the requested token type URI.\n    return:\n      type: System.IdentityModel.Tokens.SecurityTokenHandler\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler\"></xref> that represents the token handler to be used for creating the issued security token. Returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the requested token type is not supported (there is no handler configured for the specified token type).\n  overload: System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.SecurityTokenService.GetTokenLifetime(System.IdentityModel.Protocols.WSTrust.Lifetime)\n  id: GetTokenLifetime(System.IdentityModel.Protocols.WSTrust.Lifetime)\n  parent: System.IdentityModel.SecurityTokenService\n  langs:\n  - csharp\n  name: GetTokenLifetime(Lifetime)\n  nameWithType: SecurityTokenService.GetTokenLifetime(Lifetime)\n  fullName: System.IdentityModel.SecurityTokenService.GetTokenLifetime(Lifetime)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Gets the lifetime for the issued token.\n  remarks: \"This method is normally called with the lifetime that arrived in the RST. In the default implementation, the token lifetime is calculated according to the following table.  \\n  \\n|Created (in)|Expires (in)|Created (in)|Expires (out)|  \\n|--------------------|--------------------|--------------------|---------------------|  \\n|`null`|`null`|<xref:System.DateTime.UtcNow%2A?displayProperty=fullName>|<xref:System.DateTime.UtcNow%2A?displayProperty=fullName> + <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=fullName>|  \\n|C|`null`|C|C + <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=fullName>|  \\n|`null`|E|<xref:System.DateTime.UtcNow%2A?displayProperty=fullName>|E|  \\n|C|E|C|E|  \\n  \\n This method is called from the default token issuance pipeline implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.\"\n  syntax:\n    content: protected virtual System.IdentityModel.Protocols.WSTrust.Lifetime GetTokenLifetime (System.IdentityModel.Protocols.WSTrust.Lifetime requestLifetime);\n    parameters:\n    - id: requestLifetime\n      type: System.IdentityModel.Protocols.WSTrust.Lifetime\n      description: A <xref href=\"System.IdentityModel.Protocols.WSTrust.Lifetime\"></xref> that represents the requested lifetime.\n    return:\n      type: System.IdentityModel.Protocols.WSTrust.Lifetime\n      description: A <xref href=\"System.IdentityModel.Protocols.WSTrust.Lifetime\"></xref> that represents the granted lifetime.\n  overload: System.IdentityModel.SecurityTokenService.GetTokenLifetime*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)\n  id: Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)\n  parent: System.IdentityModel.SecurityTokenService\n  langs:\n  - csharp\n  name: Issue(ClaimsPrincipal,RequestSecurityToken)\n  nameWithType: SecurityTokenService.Issue(ClaimsPrincipal,RequestSecurityToken)\n  fullName: System.IdentityModel.SecurityTokenService.Issue(ClaimsPrincipal,RequestSecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Issues a security token.\n  remarks: \"This method implements the Issue binding defined in the WS-Trust specification. The default implementation of the Issue method processes the incoming request (RST) through a token issuance (claims issuance) pipeline and returns either a response (RSTR) that contains a security token with the appropriate claims to authenticate the requestor with the RP or an appropriate exception. The token issuance pipeline in the default implementation consists of calls to the following methods (of the <xref:System.IdentityModel.SecurityTokenService> class).  \\n  \\n1.  The <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> method to validate the request (RST).  \\n  \\n2.  The <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method to get a <xref:System.IdentityModel.Scope> object that contains information about the relying party (RP) associated with the request. You must override this method. If <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> returns `null`, a <xref:System.InvalidOperationException> is thrown.  \\n  \\n3.  The <xref:System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor%2A> method to return a security token descriptor based on the RST and the <xref:System.IdentityModel.Scope> object returned in the previous step. The security token descriptor (<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor>) contains information about the request in a form that can be used by a token handler. The <xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor%2A?displayProperty=fullName> property is set to the descriptor returned by the call. If `null` is returned or if the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A> property of the descriptor is `null`, an <xref:System.InvalidOperationException> is thrown. The exception is also thrown if the <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A?displayProperty=fullName> property is `true` but the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A> property on the returned descriptor is `null`.  \\n  \\n4.  The <xref:System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler%2A> method to get the appropriate token handler based on the kind of token requested. If `null` is returned, a <xref:System.NotImplementedException> is thrown.  \\n  \\n5.  The <xref:System.IdentityModel.SecurityTokenService.GetIssuerName%2A> method to get the issuer name for the token. Throws an <xref:System.InvalidOperationException> if the name is `null` or empty; otherwise sets the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName%2A> property on the descriptor.  \\n  \\n6.  The <xref:System.IdentityModel.SecurityTokenService.GetTokenLifetime%2A> method to get the lifetime for the token and sets the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A> property on the descriptor.  \\n  \\n7.  The <xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A> method to get the proof token to include in the issued token and sets the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Proof%2A> property on the descriptor.  \\n  \\n8.  The <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> method to get the claims to include in the issued token and sets the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A> property on the descriptor. You must override this method.  \\n  \\n9. The <xref:System.IdentityModel.SecurityTokenService.GetResponse%2A> method to create a response (RSTR) that contains the issued token.  \\n  \\n You can override the Issue method to implement a custom token issuance pipeline; however this is typically not necessary in the development and test environments for which most custom implementations of the <xref:System.IdentityModel.SecurityTokenService> class are intended. In many of these cases you override the <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> and <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> methods and optionally override the <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> method  to provide a serviceable STS for your environment. If further customization is necessary you can often provide it by overriding the methods that implement each stage of the default token issuance pipeline listed above.\"\n  syntax:\n    content: public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Issue (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);\n    parameters:\n    - id: principal\n      type: System.Security.Claims.ClaimsPrincipal\n      description: A <xref href=\"System.Security.Claims.ClaimsPrincipal\"></xref> that represents the identity of the token requestor.\n    - id: request\n      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\n      description: A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the security token request. This includes the request message as well as other client related information such as authorization context.\n    return:\n      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n      description: A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\"></xref> that contains the issued security token.\n  overload: System.IdentityModel.SecurityTokenService.Issue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.SecurityTokenService.Principal\n  id: Principal\n  parent: System.IdentityModel.SecurityTokenService\n  langs:\n  - csharp\n  name: Principal\n  nameWithType: SecurityTokenService.Principal\n  fullName: System.IdentityModel.SecurityTokenService.Principal\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Gets or sets the principal associated with the current instance.\n  syntax:\n    content: public System.Security.Claims.ClaimsPrincipal Principal { get; set; }\n    return:\n      type: System.Security.Claims.ClaimsPrincipal\n      description: A <xref href=\"System.Security.Claims.ClaimsPrincipal\"></xref> that represents the current principal.\n  overload: System.IdentityModel.SecurityTokenService.Principal*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.SecurityTokenService.Renew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)\n  id: Renew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)\n  parent: System.IdentityModel.SecurityTokenService\n  langs:\n  - csharp\n  name: Renew(ClaimsPrincipal,RequestSecurityToken)\n  nameWithType: SecurityTokenService.Renew(ClaimsPrincipal,RequestSecurityToken)\n  fullName: System.IdentityModel.SecurityTokenService.Renew(ClaimsPrincipal,RequestSecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: When overridden in a derived class, processes a WS-Trust Renew request.\n  remarks: The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.\n  syntax:\n    content: public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Renew (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);\n    parameters:\n    - id: principal\n      type: System.Security.Claims.ClaimsPrincipal\n      description: A <xref href=\"System.Security.Claims.ClaimsPrincipal\"></xref> that represents the identity of the token requestor.\n    - id: request\n      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\n      description: A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the security token request. This includes the request message as well as other client related information such as authorization context.\n    return:\n      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n      description: A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\"></xref> that represents the RSTR to return to the caller.\n  overload: System.IdentityModel.SecurityTokenService.Renew*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.SecurityTokenService.Request\n  id: Request\n  parent: System.IdentityModel.SecurityTokenService\n  langs:\n  - csharp\n  name: Request\n  nameWithType: SecurityTokenService.Request\n  fullName: System.IdentityModel.SecurityTokenService.Request\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Gets or sets the security token request (RST) associated with the current instance.\n  syntax:\n    content: public System.IdentityModel.Protocols.WSTrust.RequestSecurityToken Request { get; set; }\n    return:\n      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\n      description: A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that contains the request.\n  overload: System.IdentityModel.SecurityTokenService.Request*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.SecurityTokenService.Scope\n  id: Scope\n  parent: System.IdentityModel.SecurityTokenService\n  langs:\n  - csharp\n  name: Scope\n  nameWithType: SecurityTokenService.Scope\n  fullName: System.IdentityModel.SecurityTokenService.Scope\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Gets or sets the scope associated with the current instance.\n  syntax:\n    content: public System.IdentityModel.Scope Scope { get; set; }\n    return:\n      type: System.IdentityModel.Scope\n      description: A <xref href=\"System.IdentityModel.Scope\"></xref> that represents the configuration for the token issuance request.\n  overload: System.IdentityModel.SecurityTokenService.Scope*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor\n  id: SecurityTokenDescriptor\n  parent: System.IdentityModel.SecurityTokenService\n  langs:\n  - csharp\n  name: SecurityTokenDescriptor\n  nameWithType: SecurityTokenService.SecurityTokenDescriptor\n  fullName: System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Gets or sets the <xref href=\"System.IdentityModel.Tokens.SecurityTokenDescriptor\"></xref> associated with the current instance.\n  syntax:\n    content: protected System.IdentityModel.Tokens.SecurityTokenDescriptor SecurityTokenDescriptor { get; set; }\n    return:\n      type: System.IdentityModel.Tokens.SecurityTokenDescriptor\n      description: The security token descriptor that is associated with the current instance.\n  overload: System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: An attempt to set the property to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> occurs.\n  platform:\n  - net462\n- uid: System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration\n  id: SecurityTokenServiceConfiguration\n  parent: System.IdentityModel.SecurityTokenService\n  langs:\n  - csharp\n  name: SecurityTokenServiceConfiguration\n  nameWithType: SecurityTokenService.SecurityTokenServiceConfiguration\n  fullName: System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Gets the owner configuration instance.\n  syntax:\n    content: public System.IdentityModel.Configuration.SecurityTokenServiceConfiguration SecurityTokenServiceConfiguration { get; }\n    return:\n      type: System.IdentityModel.Configuration.SecurityTokenServiceConfiguration\n      description: A <xref href=\"System.IdentityModel.Configuration.SecurityTokenServiceConfiguration\"></xref> that contains the configuration for the current instance.\n  overload: System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.SecurityTokenService.Validate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)\n  id: Validate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)\n  parent: System.IdentityModel.SecurityTokenService\n  langs:\n  - csharp\n  name: Validate(ClaimsPrincipal,RequestSecurityToken)\n  nameWithType: SecurityTokenService.Validate(ClaimsPrincipal,RequestSecurityToken)\n  fullName: System.IdentityModel.SecurityTokenService.Validate(ClaimsPrincipal,RequestSecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: When overridden in a derived class, processes a WS-Trust Validate request.\n  remarks: The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.\n  syntax:\n    content: public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Validate (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);\n    parameters:\n    - id: principal\n      type: System.Security.Claims.ClaimsPrincipal\n      description: A <xref href=\"System.Security.Claims.ClaimsPrincipal\"></xref> that represents the identity of the token requestor.\n    - id: request\n      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\n      description: A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the security token request. This includes the request message as well as other client related information such as authorization context.\n    return:\n      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n      description: A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\"></xref> that represents the RSTR to return to the caller.\n  overload: System.IdentityModel.SecurityTokenService.Validate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.SecurityTokenService.ValidateRequest(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)\n  id: ValidateRequest(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)\n  parent: System.IdentityModel.SecurityTokenService\n  langs:\n  - csharp\n  name: ValidateRequest(RequestSecurityToken)\n  nameWithType: SecurityTokenService.ValidateRequest(RequestSecurityToken)\n  fullName: System.IdentityModel.SecurityTokenService.ValidateRequest(RequestSecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Validates the security token request (RST) encapsulated by this instance.\n  remarks: \"The ValidateRequest method is called from the token issuance pipeline (the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method) to validate the incoming RST. The RST is validated against the requirements (policy) of the STS and an appropriate exception is thrown if it is not valid.  \\n  \\n The default implementation of the <xref:System.IdentityModel.SecurityTokenService> class supports only the RST-RSTR pattern and only the Issue binding of the WS-Trust specification (the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType%2A> property of the request must be set to <xref:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue?displayProperty=fullName>). The default implementation of this method enforces these requirements (and others noted in the exceptions section). You can override this method if you must enforce different validation requirements for your custom STS.\"\n  syntax:\n    content: protected virtual void ValidateRequest (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);\n    parameters:\n    - id: request\n      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\n      description: A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\"></xref> that represents the request.\n  overload: System.IdentityModel.SecurityTokenService.ValidateRequest*\n  exceptions:\n  - type: System.IdentityModel.Protocols.WSTrust.InvalidRequestException\n    commentId: T:System.IdentityModel.Protocols.WSTrust.InvalidRequestException\n    description: \"<code>request</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n The <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType*> property of the request is not set to <xref href=\\\"System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue\\\"></xref>.  \\n  \\n -or-  \\n  \\n The <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType*> property of the request is not <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> or one of the constants defined in the <xref href=\\\"System.IdentityModel.Protocols.WSTrust.KeyTypes\\\"></xref> class.  \\n  \\n -or-  \\n  \\n The <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType*> of the request is <xref href=\\\"System.IdentityModel.Protocols.WSTrust.KeyTypes.Bearer\\\"></xref> and the <xref uid=\\\"langword_csharp_KeySize\\\" name=\\\"KeySize\\\" href=\\\"\\\"></xref> element is present, but its value is not equal to zero.\"\n  - type: System.IdentityModel.UnsupportedTokenTypeBadRequestException\n    commentId: T:System.IdentityModel.UnsupportedTokenTypeBadRequestException\n    description: The STS does not support the request token type (based on the value of the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType*> property of the request).\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.IdentityModel.Protocols.WSTrust.InvalidRequestException\n  parent: System.IdentityModel.Protocols.WSTrust\n  isExternal: false\n  name: InvalidRequestException\n  nameWithType: InvalidRequestException\n  fullName: System.IdentityModel.Protocols.WSTrust.InvalidRequestException\n- uid: System.IdentityModel.UnsupportedTokenTypeBadRequestException\n  parent: System.IdentityModel\n  isExternal: false\n  name: UnsupportedTokenTypeBadRequestException\n  nameWithType: UnsupportedTokenTypeBadRequestException\n  fullName: System.IdentityModel.UnsupportedTokenTypeBadRequestException\n- uid: System.IdentityModel.SecurityTokenService.#ctor(System.IdentityModel.Configuration.SecurityTokenServiceConfiguration)\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: SecurityTokenService(SecurityTokenServiceConfiguration)\n  nameWithType: SecurityTokenService.SecurityTokenService(SecurityTokenServiceConfiguration)\n  fullName: System.IdentityModel.SecurityTokenService.SecurityTokenService(SecurityTokenServiceConfiguration)\n- uid: System.IdentityModel.Configuration.SecurityTokenServiceConfiguration\n  parent: System.IdentityModel.Configuration\n  isExternal: false\n  name: SecurityTokenServiceConfiguration\n  nameWithType: SecurityTokenServiceConfiguration\n  fullName: System.IdentityModel.Configuration.SecurityTokenServiceConfiguration\n- uid: System.IdentityModel.SecurityTokenService.BeginCancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: BeginCancel(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)\n  nameWithType: SecurityTokenService.BeginCancel(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)\n  fullName: System.IdentityModel.SecurityTokenService.BeginCancel(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: true\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.Security.Claims.ClaimsPrincipal\n  parent: System.Security.Claims\n  isExternal: false\n  name: ClaimsPrincipal\n  nameWithType: ClaimsPrincipal\n  fullName: System.Security.Claims.ClaimsPrincipal\n- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\n  parent: System.IdentityModel.Protocols.WSTrust\n  isExternal: false\n  name: RequestSecurityToken\n  nameWithType: RequestSecurityToken\n  fullName: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: true\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: BeginGetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope,AsyncCallback,Object)\n  nameWithType: SecurityTokenService.BeginGetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope,AsyncCallback,Object)\n  fullName: System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope,AsyncCallback,Object)\n- uid: System.IdentityModel.Scope\n  parent: System.IdentityModel\n  isExternal: false\n  name: Scope\n  nameWithType: Scope\n  fullName: System.IdentityModel.Scope\n- uid: System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: BeginGetScope(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)\n  nameWithType: SecurityTokenService.BeginGetScope(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)\n  fullName: System.IdentityModel.SecurityTokenService.BeginGetScope(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)\n- uid: System.IdentityModel.SecurityTokenService.BeginIssue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: BeginIssue(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)\n  nameWithType: SecurityTokenService.BeginIssue(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)\n  fullName: System.IdentityModel.SecurityTokenService.BeginIssue(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)\n- uid: System.IdentityModel.SecurityTokenService.BeginRenew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: BeginRenew(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)\n  nameWithType: SecurityTokenService.BeginRenew(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)\n  fullName: System.IdentityModel.SecurityTokenService.BeginRenew(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)\n- uid: System.IdentityModel.SecurityTokenService.BeginValidate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: BeginValidate(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)\n  nameWithType: SecurityTokenService.BeginValidate(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)\n  fullName: System.IdentityModel.SecurityTokenService.BeginValidate(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)\n- uid: System.IdentityModel.SecurityTokenService.Cancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: Cancel(ClaimsPrincipal,RequestSecurityToken)\n  nameWithType: SecurityTokenService.Cancel(ClaimsPrincipal,RequestSecurityToken)\n  fullName: System.IdentityModel.SecurityTokenService.Cancel(ClaimsPrincipal,RequestSecurityToken)\n- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n  parent: System.IdentityModel.Protocols.WSTrust\n  isExternal: false\n  name: RequestSecurityTokenResponse\n  nameWithType: RequestSecurityTokenResponse\n  fullName: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n- uid: System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: CreateSecurityTokenDescriptor(RequestSecurityToken,Scope)\n  nameWithType: SecurityTokenService.CreateSecurityTokenDescriptor(RequestSecurityToken,Scope)\n  fullName: System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor(RequestSecurityToken,Scope)\n- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityTokenDescriptor\n  nameWithType: SecurityTokenDescriptor\n  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor\n- uid: System.IdentityModel.SecurityTokenService.EndCancel(System.IAsyncResult)\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: EndCancel(IAsyncResult)\n  nameWithType: SecurityTokenService.EndCancel(IAsyncResult)\n  fullName: System.IdentityModel.SecurityTokenService.EndCancel(IAsyncResult)\n- uid: System.IdentityModel.SecurityTokenService.EndGetOutputClaimsIdentity(System.IAsyncResult)\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: EndGetOutputClaimsIdentity(IAsyncResult)\n  nameWithType: SecurityTokenService.EndGetOutputClaimsIdentity(IAsyncResult)\n  fullName: System.IdentityModel.SecurityTokenService.EndGetOutputClaimsIdentity(IAsyncResult)\n- uid: System.Security.Claims.ClaimsIdentity\n  parent: System.Security.Claims\n  isExternal: false\n  name: ClaimsIdentity\n  nameWithType: ClaimsIdentity\n  fullName: System.Security.Claims.ClaimsIdentity\n- uid: System.IdentityModel.SecurityTokenService.EndGetScope(System.IAsyncResult)\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: EndGetScope(IAsyncResult)\n  nameWithType: SecurityTokenService.EndGetScope(IAsyncResult)\n  fullName: System.IdentityModel.SecurityTokenService.EndGetScope(IAsyncResult)\n- uid: System.IdentityModel.SecurityTokenService.EndIssue(System.IAsyncResult)\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: EndIssue(IAsyncResult)\n  nameWithType: SecurityTokenService.EndIssue(IAsyncResult)\n  fullName: System.IdentityModel.SecurityTokenService.EndIssue(IAsyncResult)\n- uid: System.IdentityModel.SecurityTokenService.EndRenew(System.IAsyncResult)\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: EndRenew(IAsyncResult)\n  nameWithType: SecurityTokenService.EndRenew(IAsyncResult)\n  fullName: System.IdentityModel.SecurityTokenService.EndRenew(IAsyncResult)\n- uid: System.IdentityModel.SecurityTokenService.EndValidate(System.IAsyncResult)\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: EndValidate(IAsyncResult)\n  nameWithType: SecurityTokenService.EndValidate(IAsyncResult)\n  fullName: System.IdentityModel.SecurityTokenService.EndValidate(IAsyncResult)\n- uid: System.IdentityModel.SecurityTokenService.GetIssuerName\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: GetIssuerName()\n  nameWithType: SecurityTokenService.GetIssuerName()\n  fullName: System.IdentityModel.SecurityTokenService.GetIssuerName()\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: GetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope)\n  nameWithType: SecurityTokenService.GetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope)\n  fullName: System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope)\n- uid: System.IdentityModel.SecurityTokenService.GetProofToken(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: GetProofToken(RequestSecurityToken,Scope)\n  nameWithType: SecurityTokenService.GetProofToken(RequestSecurityToken,Scope)\n  fullName: System.IdentityModel.SecurityTokenService.GetProofToken(RequestSecurityToken,Scope)\n- uid: System.IdentityModel.Tokens.ProofDescriptor\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: ProofDescriptor\n  nameWithType: ProofDescriptor\n  fullName: System.IdentityModel.Tokens.ProofDescriptor\n- uid: System.IdentityModel.SecurityTokenService.GetRequestorProofEncryptingCredentials(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: GetRequestorProofEncryptingCredentials(RequestSecurityToken)\n  nameWithType: SecurityTokenService.GetRequestorProofEncryptingCredentials(RequestSecurityToken)\n  fullName: System.IdentityModel.SecurityTokenService.GetRequestorProofEncryptingCredentials(RequestSecurityToken)\n- uid: System.IdentityModel.Tokens.EncryptingCredentials\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: EncryptingCredentials\n  nameWithType: EncryptingCredentials\n  fullName: System.IdentityModel.Tokens.EncryptingCredentials\n- uid: System.IdentityModel.SecurityTokenService.GetResponse(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Tokens.SecurityTokenDescriptor)\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: GetResponse(RequestSecurityToken,SecurityTokenDescriptor)\n  nameWithType: SecurityTokenService.GetResponse(RequestSecurityToken,SecurityTokenDescriptor)\n  fullName: System.IdentityModel.SecurityTokenService.GetResponse(RequestSecurityToken,SecurityTokenDescriptor)\n- uid: System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: GetScope(ClaimsPrincipal,RequestSecurityToken)\n  nameWithType: SecurityTokenService.GetScope(ClaimsPrincipal,RequestSecurityToken)\n  fullName: System.IdentityModel.SecurityTokenService.GetScope(ClaimsPrincipal,RequestSecurityToken)\n- uid: System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler(System.String)\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: GetSecurityTokenHandler(String)\n  nameWithType: SecurityTokenService.GetSecurityTokenHandler(String)\n  fullName: System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler(String)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityTokenHandler\n  nameWithType: SecurityTokenHandler\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandler\n- uid: System.IdentityModel.SecurityTokenService.GetTokenLifetime(System.IdentityModel.Protocols.WSTrust.Lifetime)\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: GetTokenLifetime(Lifetime)\n  nameWithType: SecurityTokenService.GetTokenLifetime(Lifetime)\n  fullName: System.IdentityModel.SecurityTokenService.GetTokenLifetime(Lifetime)\n- uid: System.IdentityModel.Protocols.WSTrust.Lifetime\n  parent: System.IdentityModel.Protocols.WSTrust\n  isExternal: false\n  name: Lifetime\n  nameWithType: Lifetime\n  fullName: System.IdentityModel.Protocols.WSTrust.Lifetime\n- uid: System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: Issue(ClaimsPrincipal,RequestSecurityToken)\n  nameWithType: SecurityTokenService.Issue(ClaimsPrincipal,RequestSecurityToken)\n  fullName: System.IdentityModel.SecurityTokenService.Issue(ClaimsPrincipal,RequestSecurityToken)\n- uid: System.IdentityModel.SecurityTokenService.Principal\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: Principal\n  nameWithType: SecurityTokenService.Principal\n  fullName: System.IdentityModel.SecurityTokenService.Principal\n- uid: System.IdentityModel.SecurityTokenService.Renew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: Renew(ClaimsPrincipal,RequestSecurityToken)\n  nameWithType: SecurityTokenService.Renew(ClaimsPrincipal,RequestSecurityToken)\n  fullName: System.IdentityModel.SecurityTokenService.Renew(ClaimsPrincipal,RequestSecurityToken)\n- uid: System.IdentityModel.SecurityTokenService.Request\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: Request\n  nameWithType: SecurityTokenService.Request\n  fullName: System.IdentityModel.SecurityTokenService.Request\n- uid: System.IdentityModel.SecurityTokenService.Scope\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: Scope\n  nameWithType: SecurityTokenService.Scope\n  fullName: System.IdentityModel.SecurityTokenService.Scope\n- uid: System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: SecurityTokenDescriptor\n  nameWithType: SecurityTokenService.SecurityTokenDescriptor\n  fullName: System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor\n- uid: System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: SecurityTokenServiceConfiguration\n  nameWithType: SecurityTokenService.SecurityTokenServiceConfiguration\n  fullName: System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration\n- uid: System.IdentityModel.SecurityTokenService.Validate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: Validate(ClaimsPrincipal,RequestSecurityToken)\n  nameWithType: SecurityTokenService.Validate(ClaimsPrincipal,RequestSecurityToken)\n  fullName: System.IdentityModel.SecurityTokenService.Validate(ClaimsPrincipal,RequestSecurityToken)\n- uid: System.IdentityModel.SecurityTokenService.ValidateRequest(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: ValidateRequest(RequestSecurityToken)\n  nameWithType: SecurityTokenService.ValidateRequest(RequestSecurityToken)\n  fullName: System.IdentityModel.SecurityTokenService.ValidateRequest(RequestSecurityToken)\n- uid: System.IdentityModel.SecurityTokenService.#ctor*\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: SecurityTokenService\n  nameWithType: SecurityTokenService.SecurityTokenService\n- uid: System.IdentityModel.SecurityTokenService.BeginCancel*\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: BeginCancel\n  nameWithType: SecurityTokenService.BeginCancel\n- uid: System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: BeginGetOutputClaimsIdentity\n  nameWithType: SecurityTokenService.BeginGetOutputClaimsIdentity\n- uid: System.IdentityModel.SecurityTokenService.BeginGetScope*\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: BeginGetScope\n  nameWithType: SecurityTokenService.BeginGetScope\n- uid: System.IdentityModel.SecurityTokenService.BeginIssue*\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: BeginIssue\n  nameWithType: SecurityTokenService.BeginIssue\n- uid: System.IdentityModel.SecurityTokenService.BeginRenew*\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: BeginRenew\n  nameWithType: SecurityTokenService.BeginRenew\n- uid: System.IdentityModel.SecurityTokenService.BeginValidate*\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: BeginValidate\n  nameWithType: SecurityTokenService.BeginValidate\n- uid: System.IdentityModel.SecurityTokenService.Cancel*\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: Cancel\n  nameWithType: SecurityTokenService.Cancel\n- uid: System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor*\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: CreateSecurityTokenDescriptor\n  nameWithType: SecurityTokenService.CreateSecurityTokenDescriptor\n- uid: System.IdentityModel.SecurityTokenService.EndCancel*\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: EndCancel\n  nameWithType: SecurityTokenService.EndCancel\n- uid: System.IdentityModel.SecurityTokenService.EndGetOutputClaimsIdentity*\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: EndGetOutputClaimsIdentity\n  nameWithType: SecurityTokenService.EndGetOutputClaimsIdentity\n- uid: System.IdentityModel.SecurityTokenService.EndGetScope*\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: EndGetScope\n  nameWithType: SecurityTokenService.EndGetScope\n- uid: System.IdentityModel.SecurityTokenService.EndIssue*\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: EndIssue\n  nameWithType: SecurityTokenService.EndIssue\n- uid: System.IdentityModel.SecurityTokenService.EndRenew*\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: EndRenew\n  nameWithType: SecurityTokenService.EndRenew\n- uid: System.IdentityModel.SecurityTokenService.EndValidate*\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: EndValidate\n  nameWithType: SecurityTokenService.EndValidate\n- uid: System.IdentityModel.SecurityTokenService.GetIssuerName*\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: GetIssuerName\n  nameWithType: SecurityTokenService.GetIssuerName\n- uid: System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity*\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: GetOutputClaimsIdentity\n  nameWithType: SecurityTokenService.GetOutputClaimsIdentity\n- uid: System.IdentityModel.SecurityTokenService.GetProofToken*\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: GetProofToken\n  nameWithType: SecurityTokenService.GetProofToken\n- uid: System.IdentityModel.SecurityTokenService.GetRequestorProofEncryptingCredentials*\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: GetRequestorProofEncryptingCredentials\n  nameWithType: SecurityTokenService.GetRequestorProofEncryptingCredentials\n- uid: System.IdentityModel.SecurityTokenService.GetResponse*\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: GetResponse\n  nameWithType: SecurityTokenService.GetResponse\n- uid: System.IdentityModel.SecurityTokenService.GetScope*\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: GetScope\n  nameWithType: SecurityTokenService.GetScope\n- uid: System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler*\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: GetSecurityTokenHandler\n  nameWithType: SecurityTokenService.GetSecurityTokenHandler\n- uid: System.IdentityModel.SecurityTokenService.GetTokenLifetime*\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: GetTokenLifetime\n  nameWithType: SecurityTokenService.GetTokenLifetime\n- uid: System.IdentityModel.SecurityTokenService.Issue*\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: Issue\n  nameWithType: SecurityTokenService.Issue\n- uid: System.IdentityModel.SecurityTokenService.Principal*\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: Principal\n  nameWithType: SecurityTokenService.Principal\n- uid: System.IdentityModel.SecurityTokenService.Renew*\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: Renew\n  nameWithType: SecurityTokenService.Renew\n- uid: System.IdentityModel.SecurityTokenService.Request*\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: Request\n  nameWithType: SecurityTokenService.Request\n- uid: System.IdentityModel.SecurityTokenService.Scope*\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: Scope\n  nameWithType: SecurityTokenService.Scope\n- uid: System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: SecurityTokenDescriptor\n  nameWithType: SecurityTokenService.SecurityTokenDescriptor\n- uid: System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration*\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: SecurityTokenServiceConfiguration\n  nameWithType: SecurityTokenService.SecurityTokenServiceConfiguration\n- uid: System.IdentityModel.SecurityTokenService.Validate*\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: Validate\n  nameWithType: SecurityTokenService.Validate\n- uid: System.IdentityModel.SecurityTokenService.ValidateRequest*\n  parent: System.IdentityModel.SecurityTokenService\n  isExternal: false\n  name: ValidateRequest\n  nameWithType: SecurityTokenService.ValidateRequest\n"}