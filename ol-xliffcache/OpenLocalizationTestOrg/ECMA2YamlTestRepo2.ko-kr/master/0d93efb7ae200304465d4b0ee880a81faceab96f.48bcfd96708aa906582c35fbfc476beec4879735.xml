{"nodes":[{"pos":[830,883],"content":"Performs user-defined validation on an input control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs user-defined validation on an input control.","pos":[0,53]}]},{"pos":[19275,19378],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.CustomValidator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.CustomValidator\"></xref> class."},{"pos":[20082,20229],"content":"Adds the properties of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.CustomValidator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control to the output stream for rendering on the client.","needQuote":true,"needEscape":true,"source":"Adds the properties of the <xref href=\"System.Web.UI.WebControls.CustomValidator\"></xref> control to the output stream for rendering on the client."},{"pos":[21464,21576],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.HtmlTextWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the output stream for rendering on the client.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> that contains the output stream for rendering on the client."},{"pos":[22136,22220],"content":"Gets or sets the name of the custom client-side script function used for validation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the custom client-side script function used for validation.","pos":[0,84]}]},{"pos":[22233,22712],"content":"Set this property to the name of the function that performs the client-side validation.       Because the client validation function runs on the target browser, the function must be written using a scripting language supported by the browser, such as JScript or VBScript.       This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Set this property to the name of the function that performs the client-side validation.","pos":[0,87]},{"content":"Because the client validation function runs on the target browser, the function must be written using a scripting language supported by the browser, such as JScript or VBScript.","pos":[94,271]},{"content":"This property cannot be set by themes or style sheet themes.","pos":[278,338]},{"content":"For more information, see &lt;xref:System.Web.UI.ThemeableAttribute&gt; and <bpt id=\"p1\">[</bpt>ASP.NET Themes and Skins<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[339,475],"source":" For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[23718,24026],"content":"The name of the custom client script function used for validation. The default value is &lt;xref:System.String?displayProperty=fullName&gt;, which indicates that this property is not set.       <div class=\"alert NOTE\">    The function name should not include any parentheses or parameters.      </div>","needQuote":false,"needEscape":true,"nodes":[{"content":"The name of the custom client script function used for validation. The default value is &lt;xref:System.String?displayProperty=fullName&gt;, which indicates that this property is not set.","pos":[0,187],"nodes":[{"content":"The name of the custom client script function used for validation.","pos":[0,66]},{"content":"The default value is <ph id=\"ph1\">&amp;lt;</ph>xref:System.String?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>, which indicates that this property is not set.","pos":[67,187],"source":" The default value is &lt;xref:System.String?displayProperty=fullName&gt;, which indicates that this property is not set."}]},{"content":"The function name should not include any parentheses or parameters.","pos":[222,289]}]},{"pos":[24584,24638],"content":"Checks the properties of the control for valid values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Checks the properties of the control for valid values.","pos":[0,54]}]},{"pos":[25706,25878],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the control properties are valid; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the control properties are valid; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[26398,26519],"content":"Overrides the &lt;xref:System.Web.UI.MobileControls.BaseValidator.EvaluateIsValid%2A?displayProperty=fullName&gt; method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Overrides the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Web.UI.MobileControls.BaseValidator.EvaluateIsValid%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> method.","pos":[0,121],"source":"Overrides the &lt;xref:System.Web.UI.MobileControls.BaseValidator.EvaluateIsValid%2A?displayProperty=fullName&gt; method."}]},{"pos":[27581,27760],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the value in the input control is valid; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value in the input control is valid; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[28326,28500],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.CustomValidator.ServerValidate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event for the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.CustomValidator\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.WebControls.CustomValidator.ServerValidate\"></xref> event for the <xref href=\"System.Web.UI.WebControls.CustomValidator\"></xref> control."},{"pos":[28513,29025],"content":"The <xref:System.Web.UI.WebControls.CustomValidator.ServerValidate> event is raised when validation is performed on the server.       Raising an event invokes the event handler through a delegate. For more information, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).       The OnServerValidate method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.UI.WebControls.CustomValidator.ServerValidate&gt; event is raised when validation is performed on the server.","pos":[0,127],"source":"The <xref:System.Web.UI.WebControls.CustomValidator.ServerValidate> event is raised when validation is performed on the server."},{"content":"Raising an event invokes the event handler through a delegate.","pos":[134,196]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Events and Delegates<ept id=\"p1\">](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)</ept>.","pos":[197,321],"source":" For more information, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)."},{"content":"The OnServerValidate method also allows derived classes to handle the event without attaching a delegate.","pos":[328,433]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[434,508]}]},{"pos":[29882,29904],"content":"The value to validate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to validate.","pos":[0,22]}]},{"pos":[29963,30176],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the value specified by the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter passes validation; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value specified by the <code>value</code> parameter passes validation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[30678,30728],"content":"Occurs when validation is performed on the server.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when validation is performed on the server.","pos":[0,50]}]},{"pos":[30741,31114],"content":"The ServerValidate event is raised when validation is performed on the server. This event is used to provide a custom validation routine for an input control, such as a <xref:System.Web.UI.WebControls.TextBox> control.       For more information about handling events, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ServerValidate event is raised when validation is performed on the server.","pos":[0,78]},{"content":"This event is used to provide a custom validation routine for an input control, such as a &lt;xref:System.Web.UI.WebControls.TextBox&gt; control.","pos":[79,218],"source":" This event is used to provide a custom validation routine for an input control, such as a <xref:System.Web.UI.WebControls.TextBox> control."},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Events and Delegates<ept id=\"p1\">](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)</ept>.","pos":[225,371],"source":"       For more information about handling events, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)."}]},{"pos":[32200,32212],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32660,32739],"content":"Gets or sets a Boolean value indicating whether empty text should be validated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a Boolean value indicating whether empty text should be validated.","pos":[0,79]}]},{"pos":[32752,33903],"content":"Each validator can be associated with a targeted control. In previous versions of the .NET Framework, if the targeted control had an empty string value, such as a  <xref:System.Web.UI.WebControls.TextBox.Text%2A> property having a value of <xref:System.String.Empty?displayProperty=fullName>, the validator (except for the <xref:System.Web.UI.WebControls.RequiredFieldValidator> validator) would not evaluate the targeted control and would simply return that the validation passed.       The ValidateEmptyText property is new for the .NET Framework version 2.0.  If ValidateEmptyText is set to `true`, the validator evaluates the control's value (using the criteria specified to the <xref:System.Web.UI.WebControls.CustomValidator> control) and returns the validation results. This property allows developers to evaluate the results of a <xref:System.Web.UI.WebControls.CustomValidator> control regardless of the value of the targeted control.       This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Each validator can be associated with a targeted control.","pos":[0,57]},{"content":"In previous versions of the .NET Framework, if the targeted control had an empty string value, such as a  &lt;xref:System.Web.UI.WebControls.TextBox.Text%2A&gt; property having a value of &lt;xref:System.String.Empty?displayProperty=fullName&gt;, the validator (except for the &lt;xref:System.Web.UI.WebControls.RequiredFieldValidator&gt; validator) would not evaluate the targeted control and would simply return that the validation passed.","pos":[58,481],"source":" In previous versions of the .NET Framework, if the targeted control had an empty string value, such as a  <xref:System.Web.UI.WebControls.TextBox.Text%2A> property having a value of <xref:System.String.Empty?displayProperty=fullName>, the validator (except for the <xref:System.Web.UI.WebControls.RequiredFieldValidator> validator) would not evaluate the targeted control and would simply return that the validation passed."},{"content":"The ValidateEmptyText property is new for the .NET Framework version 2.0.","pos":[488,561]},{"content":"If ValidateEmptyText is set to <ph id=\"ph1\">`true`</ph>, the validator evaluates the control's value (using the criteria specified to the &lt;xref:System.Web.UI.WebControls.CustomValidator&gt; control) and returns the validation results.","pos":[563,776],"source":"  If ValidateEmptyText is set to `true`, the validator evaluates the control's value (using the criteria specified to the <xref:System.Web.UI.WebControls.CustomValidator> control) and returns the validation results."},{"content":"This property allows developers to evaluate the results of a &lt;xref:System.Web.UI.WebControls.CustomValidator&gt; control regardless of the value of the targeted control.","pos":[777,943],"source":" This property allows developers to evaluate the results of a <xref:System.Web.UI.WebControls.CustomValidator> control regardless of the value of the targeted control."},{"content":"This property cannot be set by themes or style sheet themes.","pos":[950,1010]},{"content":"For more information, see &lt;xref:System.Web.UI.ThemeableAttribute&gt; and <bpt id=\"p1\">[</bpt>ASP.NET Themes and Skins<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1011,1147],"source":" For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[34030,34200],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if empty text should be validated; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if empty text should be validated; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.WebControls.CustomValidator\n  id: CustomValidator\n  children:\n  - System.Web.UI.WebControls.CustomValidator.#ctor\n  - System.Web.UI.WebControls.CustomValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.CustomValidator.ClientValidationFunction\n  - System.Web.UI.WebControls.CustomValidator.ControlPropertiesValid\n  - System.Web.UI.WebControls.CustomValidator.EvaluateIsValid\n  - System.Web.UI.WebControls.CustomValidator.OnServerValidate(System.String)\n  - System.Web.UI.WebControls.CustomValidator.ServerValidate\n  - System.Web.UI.WebControls.CustomValidator.ValidateEmptyText\n  langs:\n  - csharp\n  name: CustomValidator\n  nameWithType: CustomValidator\n  fullName: System.Web.UI.WebControls.CustomValidator\n  type: Class\n  summary: Performs user-defined validation on an input control.\n  remarks: \"Use the CustomValidator control to provide a user-defined validation function for an input control. The CustomValidator control is a separate control from the input control it validates, which allows you to control where the validation message is displayed.  \\n  \\n Validation controls always perform validation on the server. They also have complete client-side implementation that allows script-enabled browsers (such as Microsoft Internet Explorer 4.0 and later) to perform validation on the client. Client-side validation enhances the validation process by checking user input before it is sent to the server. This allows errors to be detected on the client before the form is submitted, thus avoiding the round trip of information necessary for server-side validation.  \\n  \\n To create a server-side validation function, provide a handler for the <xref:System.Web.UI.WebControls.CustomValidator.ServerValidate> event that performs the validation. The string from the input control to validate can be accessed by using the <xref:System.Web.UI.WebControls.ServerValidateEventArgs.Value%2A> property of the <xref:System.Web.UI.WebControls.ServerValidateEventArgs> object passed into the event handler as a parameter. The result of the validation is then stored in the <xref:System.Web.UI.WebControls.ServerValidateEventArgs.IsValid%2A> property of the <xref:System.Web.UI.WebControls.ServerValidateEventArgs> object.  \\n  \\n To create a client-side validation function, first add the server-side validation function described earlier. Next, add the client-side validation script function to the ASP.NET (.aspx) page.  \\n  \\n If you are using Visual Basic Scripting Edition (VBScript), the function must be in this form:  \\n  \\n```  \\nSub ValidationFunctionName(source, arguments)  \\n```  \\n  \\n If you are using JScript, the function must be in this form:  \\n  \\n```  \\nfunction ValidationFunctionName(source, arguments)  \\n```  \\n  \\n The `source` parameter is a reference to the \\\\<span> element rendered for the CustomValidator control. This allows you to programmatically control the \\\\<span> tag, such as modifying the <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> attribute. The `arguments` parameter is an object with two properties: Value and IsValid. This parameter allows you to get the value of the control to validate and to indicate whether the value is valid based on your custom validation routine.  \\n  \\n Use the <xref:System.Web.UI.WebControls.CustomValidator.ClientValidationFunction%2A> property to specify the name of the client-side validation script function associated with the CustomValidator control. Because the script function is executed on the client, the function must be in a language that the target browser supports, such as VBScript or JScript.  \\n  \\n> [!NOTE]\\n>  When you use the CustomValidator control inside an <xref:System.Web.UI.UpdatePanel> control, make sure that the validator control and the control it is associated with are in the same panel. For more information about using the <xref:System.Web.UI.UpdatePanel> control for partial-page updates, see [Partial-Page Rendering Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n Like server-side validation, the string from the input control to validate is accessed by using the <xref:System.Web.UI.WebControls.ServerValidateEventArgs.Value%2A> property of the `arguments` parameter. Return the result of the validation by setting the <xref:System.Web.UI.WebControls.ServerValidateEventArgs.IsValid%2A> property of the `arguments` parameter.  \\n  \\n> [!CAUTION]\\n>  When using validator controls, you should always check the results of server-side validation before performing any processing. After a postback but before your event methods are called, the page calls the validator controls and aggregates their results into the <xref:System.Web.UI.Page.IsValid%2A?displayProperty=fullName> property. (You can also call the validator controls explicitly using the `Validate` method.) In your own code, you should check that the <xref:System.Web.UI.Page.IsValid%2A?displayProperty=fullName> property returns `true` before processing input. Even though script-enabled browsers might prevent a postback from occurring on the client if a validation check has failed, you should always also check <xref:System.Web.UI.Page.IsValid%2A?displayProperty=fullName> in server code before processing validated data.  \\n  \\n Multiple validation controls can be used with an individual input control to validate different criteria. For example, you can apply multiple validation controls on a <xref:System.Web.UI.WebControls.TextBox> control that allows the user to enter the quantity of items to add to a shopping cart. You can use a CustomValidator control to ensure that the value specified is less than the amount in inventory and a <xref:System.Web.UI.WebControls.RequiredFieldValidator> control to ensure that the user enters a value into the <xref:System.Web.UI.WebControls.TextBox> control.  \\n  \\n> [!NOTE]\\n>  If the input control is empty, no validation functions are called and validation succeeds. Use a <xref:System.Web.UI.WebControls.RequiredFieldValidator> control to require the user to enter data in the input control.  \\n  \\n It is possible to use a CustomValidator control without setting the <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> property. This is commonly done when you are validating multiple input controls or validating input controls that cannot be used with validation controls, such as the <xref:System.Web.UI.WebControls.CheckBox> control. In this case, the <xref:System.Web.UI.WebControls.ServerValidateEventArgs.Value%2A> property of the `arguments` parameter passed to the event handler for the <xref:System.Web.UI.WebControls.CustomValidator.ServerValidate> event and to the client-side validation function always contains an empty string (\\\"\\\"). However, these validation functions are still called, where appropriate, to determine validity on both the server and client. To access the value to validate, you must programmatically reference the input control you want to validate and then retrieve the value from the appropriate property. For example, to validate a <xref:System.Web.UI.WebControls.CheckBox> control on the server, do not set the <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> property of the validation control and use the following code for the handler for the <xref:System.Web.UI.WebControls.CustomValidator.ServerValidate> event.  \\n  \\n```vb#  \\nSub ServerValidation (source As object, args As ServerValidateEventArgs)  \\n    args.IsValid = (CheckBox1.Checked = True)  \\n End Sub  \\n```  \\n  \\n```c#  \\nvoid ServerValidation (object source, ServerValidateEventArgs args)  \\n {  \\n    args.IsValid = (CheckBox1.Checked == true);  \\n }  \\n```  \\n  \\n For more information on validation controls, see <xref:System.Web.UI.WebControls.BaseValidator>.  \\n  \\n## Accessibility  \\n For information about how to configure this control so that it generates markup that conforms to accessibility standards, see [Accessibility in Visual Studio and ASP.NET](~/add/includes/ajax-current-ext-md.md) and [ASP.NET Controls and Accessibility](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following code example demonstrates how to create a server-side CustomValidator control.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[CustomValidatorServerValidate#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_96_1.aspx)]\\n [!code-vb[CustomValidatorServerValidate#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_96_1.aspx)]  \\n  \\n The following code example demonstrates how to create a client-side CustomValidator control.  \\n  \\n [!code-vb[CustomValidatorClient#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_96_2.aspx)]\\n [!code-cs[CustomValidatorClient#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_96_2.aspx)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.DefaultEvent(\"ServerValidate\")]\n\n      [System.Web.UI.ToolboxData(\"<{0}:CustomValidator runat=\"server\" ErrorMessage=\"CustomValidator\"></{0}:CustomValidator>\")]\n\n      public class CustomValidator : System.Web.UI.WebControls.BaseValidator\n  inheritance:\n  - System.Object\n  - System.Web.UI.Control\n  - System.Web.UI.WebControls.WebControl\n  - System.Web.UI.WebControls.Label\n  - System.Web.UI.WebControls.BaseValidator\n  implements: []\n  inheritedMembers:\n  - System.Web.UI.Control.Adapter\n  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)\n  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)\n  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory\n  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)\n  - System.Web.UI.Control.BindingContainer\n  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)\n  - System.Web.UI.Control.ChildControlsCreated\n  - System.Web.UI.Control.ClearCachedClientID\n  - System.Web.UI.Control.ClearChildControlState\n  - System.Web.UI.Control.ClearChildState\n  - System.Web.UI.Control.ClearChildViewState\n  - System.Web.UI.Control.ClearEffectiveClientIDMode\n  - System.Web.UI.Control.ClientID\n  - System.Web.UI.Control.ClientIDMode\n  - System.Web.UI.Control.ClientIDSeparator\n  - System.Web.UI.Control.Context\n  - System.Web.UI.Control.Controls\n  - System.Web.UI.Control.CreateChildControls\n  - System.Web.UI.Control.CreateControlCollection\n  - System.Web.UI.Control.DataBind\n  - System.Web.UI.Control.DataBind(System.Boolean)\n  - System.Web.UI.Control.DataBindChildren\n  - System.Web.UI.Control.DataBinding\n  - System.Web.UI.Control.DataItemContainer\n  - System.Web.UI.Control.DataKeysContainer\n  - System.Web.UI.Control.DesignMode\n  - System.Web.UI.Control.Dispose\n  - System.Web.UI.Control.Disposed\n  - System.Web.UI.Control.EnableViewState\n  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)\n  - System.Web.UI.Control.EnsureChildControls\n  - System.Web.UI.Control.EnsureID\n  - System.Web.UI.Control.Events\n  - System.Web.UI.Control.FindControl(System.String)\n  - System.Web.UI.Control.FindControl(System.String,System.Int32)\n  - System.Web.UI.Control.Focus\n  - System.Web.UI.Control.GetDesignModeState\n  - System.Web.UI.Control.GetRouteUrl(System.Object)\n  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)\n  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)\n  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)\n  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)\n  - System.Web.UI.Control.HasChildViewState\n  - System.Web.UI.Control.HasControls\n  - System.Web.UI.Control.HasEvents\n  - System.Web.UI.Control.ID\n  - System.Web.UI.Control.IdSeparator\n  - System.Web.UI.Control.Init\n  - System.Web.UI.Control.IsChildControlStateCleared\n  - System.Web.UI.Control.IsLiteralContent\n  - System.Web.UI.Control.IsTrackingViewState\n  - System.Web.UI.Control.IsViewStateEnabled\n  - System.Web.UI.Control.Load\n  - System.Web.UI.Control.LoadControlState(System.Object)\n  - System.Web.UI.Control.LoadViewStateByID\n  - System.Web.UI.Control.MapPathSecure(System.String)\n  - System.Web.UI.Control.NamingContainer\n  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)\n  - System.Web.UI.Control.OnDataBinding(System.EventArgs)\n  - System.Web.UI.Control.OnLoad(System.EventArgs)\n  - System.Web.UI.Control.OpenFile(System.String)\n  - System.Web.UI.Control.Page\n  - System.Web.UI.Control.Parent\n  - System.Web.UI.Control.PreRender\n  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)\n  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)\n  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)\n  - System.Web.UI.Control.RenderingCompatibility\n  - System.Web.UI.Control.ResolveAdapter\n  - System.Web.UI.Control.ResolveClientUrl(System.String)\n  - System.Web.UI.Control.ResolveUrl(System.String)\n  - System.Web.UI.Control.SaveControlState\n  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)\n  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)\n  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)\n  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)\n  - System.Web.UI.Control.Site\n  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData\n  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings\n  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings\n  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions\n  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions\n  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)\n  - System.Web.UI.Control.TemplateControl\n  - System.Web.UI.Control.TemplateSourceDirectory\n  - System.Web.UI.Control.UniqueID\n  - System.Web.UI.Control.Unload\n  - System.Web.UI.Control.ValidateRequestMode\n  - System.Web.UI.Control.ViewState\n  - System.Web.UI.Control.ViewStateIgnoresCase\n  - System.Web.UI.Control.ViewStateMode\n  - System.Web.UI.Control.Visible\n  - System.Web.UI.WebControls.BaseValidator.AssociatedControlID\n  - System.Web.UI.WebControls.BaseValidator.CheckControlValidationProperty(System.String,System.String)\n  - System.Web.UI.WebControls.BaseValidator.ControlToValidate\n  - System.Web.UI.WebControls.BaseValidator.DetermineRenderUplevel\n  - System.Web.UI.WebControls.BaseValidator.Display\n  - System.Web.UI.WebControls.BaseValidator.EnableClientScript\n  - System.Web.UI.WebControls.BaseValidator.Enabled\n  - System.Web.UI.WebControls.BaseValidator.ErrorMessage\n  - System.Web.UI.WebControls.BaseValidator.ForeColor\n  - System.Web.UI.WebControls.BaseValidator.GetControlRenderID(System.String)\n  - System.Web.UI.WebControls.BaseValidator.GetControlValidationValue(System.String)\n  - System.Web.UI.WebControls.BaseValidator.GetValidationProperty(System.Object)\n  - System.Web.UI.WebControls.BaseValidator.IsUnobtrusive\n  - System.Web.UI.WebControls.BaseValidator.IsValid\n  - System.Web.UI.WebControls.BaseValidator.OnInit(System.EventArgs)\n  - System.Web.UI.WebControls.BaseValidator.OnPreRender(System.EventArgs)\n  - System.Web.UI.WebControls.BaseValidator.OnUnload(System.EventArgs)\n  - System.Web.UI.WebControls.BaseValidator.PropertiesValid\n  - System.Web.UI.WebControls.BaseValidator.RegisterValidatorCommonScript\n  - System.Web.UI.WebControls.BaseValidator.RegisterValidatorDeclaration\n  - System.Web.UI.WebControls.BaseValidator.Render(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.BaseValidator.RenderUplevel\n  - System.Web.UI.WebControls.BaseValidator.SetFocusOnError\n  - System.Web.UI.WebControls.BaseValidator.Text\n  - System.Web.UI.WebControls.BaseValidator.Validate\n  - System.Web.UI.WebControls.BaseValidator.ValidationGroup\n  - System.Web.UI.WebControls.Label.AddParsedSubObject(System.Object)\n  - System.Web.UI.WebControls.Label.LoadViewState(System.Object)\n  - System.Web.UI.WebControls.Label.RenderContents(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.Label.SupportsDisabledAttribute\n  - System.Web.UI.WebControls.Label.TagKey\n  - System.Web.UI.WebControls.WebControl.AccessKey\n  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)\n  - System.Web.UI.WebControls.WebControl.Attributes\n  - System.Web.UI.WebControls.WebControl.BackColor\n  - System.Web.UI.WebControls.WebControl.BorderColor\n  - System.Web.UI.WebControls.WebControl.BorderStyle\n  - System.Web.UI.WebControls.WebControl.BorderWidth\n  - System.Web.UI.WebControls.WebControl.ControlStyle\n  - System.Web.UI.WebControls.WebControl.ControlStyleCreated\n  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)\n  - System.Web.UI.WebControls.WebControl.CreateControlStyle\n  - System.Web.UI.WebControls.WebControl.CssClass\n  - System.Web.UI.WebControls.WebControl.DisabledCssClass\n  - System.Web.UI.WebControls.WebControl.EnableTheming\n  - System.Web.UI.WebControls.WebControl.Font\n  - System.Web.UI.WebControls.WebControl.HasAttributes\n  - System.Web.UI.WebControls.WebControl.Height\n  - System.Web.UI.WebControls.WebControl.IsEnabled\n  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)\n  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.WebControl.SaveViewState\n  - System.Web.UI.WebControls.WebControl.SkinID\n  - System.Web.UI.WebControls.WebControl.Style\n  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)\n  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)\n  - System.Web.UI.WebControls.WebControl.TabIndex\n  - System.Web.UI.WebControls.WebControl.TagName\n  - System.Web.UI.WebControls.WebControl.ToolTip\n  - System.Web.UI.WebControls.WebControl.TrackViewState\n  - System.Web.UI.WebControls.WebControl.Width\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.CustomValidator.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.WebControls.CustomValidator\n  langs:\n  - csharp\n  name: CustomValidator()\n  nameWithType: CustomValidator.CustomValidator()\n  fullName: System.Web.UI.WebControls.CustomValidator.CustomValidator()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.CustomValidator\"></xref> class.\n  syntax:\n    content: public CustomValidator ();\n    parameters: []\n  overload: System.Web.UI.WebControls.CustomValidator.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.CustomValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)\n  id: AddAttributesToRender(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.UI.WebControls.CustomValidator\n  langs:\n  - csharp\n  name: AddAttributesToRender(HtmlTextWriter)\n  nameWithType: CustomValidator.AddAttributesToRender(HtmlTextWriter)\n  fullName: System.Web.UI.WebControls.CustomValidator.AddAttributesToRender(HtmlTextWriter)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Adds the properties of the <xref href=\"System.Web.UI.WebControls.CustomValidator\"></xref> control to the output stream for rendering on the client.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to override the AddAttributesToRender method in a custom server control so that the <xref:System.Web.UI.WebControls.CustomValidator> error message always appears in bold.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[CustomCustomValidatorAddAttributesToRender#1](~/add/codesnippet/csharp/2358eecf-be1b-433c-8762-_1.aspx)]\\n [!code-vb[CustomCustomValidatorAddAttributesToRender#1](~/add/codesnippet/visualbasic/2358eecf-be1b-433c-8762-_1.aspx)]  \\n[!code-cs[CustomCustomValidatorAddAttributesToRender#2](~/add/codesnippet/csharp/2358eecf-be1b-433c-8762-_2.cs)]\\n[!code-vb[CustomCustomValidatorAddAttributesToRender#2](~/add/codesnippet/visualbasic/2358eecf-be1b-433c-8762-_2.vb)]\"\n  syntax:\n    content: protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);\n    parameters:\n    - id: writer\n      type: System.Web.UI.HtmlTextWriter\n      description: A <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> that contains the output stream for rendering on the client.\n  overload: System.Web.UI.WebControls.CustomValidator.AddAttributesToRender*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.CustomValidator.ClientValidationFunction\n  id: ClientValidationFunction\n  parent: System.Web.UI.WebControls.CustomValidator\n  langs:\n  - csharp\n  name: ClientValidationFunction\n  nameWithType: CustomValidator.ClientValidationFunction\n  fullName: System.Web.UI.WebControls.CustomValidator.ClientValidationFunction\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the name of the custom client-side script function used for validation.\n  remarks: \"Set this property to the name of the function that performs the client-side validation.  \\n  \\n Because the client validation function runs on the target browser, the function must be written using a scripting language supported by the browser, such as JScript or VBScript.  \\n  \\n This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following code example demonstrates how to use the ClientValidationFunction property to specify the name of the function that performs client-side validation. The validation function checks for even numbers. For a description of the function parameters, see the Remarks section of <xref:System.Web.UI.WebControls.CustomValidator>.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-vb[CustomValidatorClient#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_927_1.aspx)]\\n [!code-cs[CustomValidatorClient#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_927_1.aspx)]\"\n  syntax:\n    content: public string ClientValidationFunction { get; set; }\n    return:\n      type: System.String\n      description: \"The name of the custom client script function used for validation. The default value is &lt;xref:System.String?displayProperty=fullName&gt;, which indicates that this property is not set.  \\n  \\n <div class=\\\"alert NOTE\\\">  \\n The function name should not include any parentheses or parameters.  \\n  \\n</div>\"\n  overload: System.Web.UI.WebControls.CustomValidator.ClientValidationFunction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.CustomValidator.ControlPropertiesValid\n  id: ControlPropertiesValid\n  parent: System.Web.UI.WebControls.CustomValidator\n  langs:\n  - csharp\n  name: ControlPropertiesValid()\n  nameWithType: CustomValidator.ControlPropertiesValid()\n  fullName: System.Web.UI.WebControls.CustomValidator.ControlPropertiesValid()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Checks the properties of the control for valid values.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to override the ControlPropertiesValid method in a custom server control so that it always returns the value of the visible property, as long as the <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> property of the <xref:System.Web.UI.WebControls.CustomValidator> control is on the page and contains validation properties.  \\n  \\n [!code-cs[CustomCustomValidatorControlPropertiesValid#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_202_1.aspx)]\\n [!code-vb[CustomCustomValidatorControlPropertiesValid#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_202_1.aspx)]  \\n[!code-cs[CustomCustomValidatorControlPropertiesValid#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_202_2.cs)]\\n[!code-vb[CustomCustomValidatorControlPropertiesValid#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_202_2.vb)]\"\n  syntax:\n    content: protected override bool ControlPropertiesValid ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the control properties are valid; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.CustomValidator.ControlPropertiesValid*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.CustomValidator.EvaluateIsValid\n  id: EvaluateIsValid\n  parent: System.Web.UI.WebControls.CustomValidator\n  langs:\n  - csharp\n  name: EvaluateIsValid()\n  nameWithType: CustomValidator.EvaluateIsValid()\n  fullName: System.Web.UI.WebControls.CustomValidator.EvaluateIsValid()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Overrides the &lt;xref:System.Web.UI.MobileControls.BaseValidator.EvaluateIsValid%2A?displayProperty=fullName&gt; method.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to override the EvaluateIsValid method in a custom server control.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[CustomCustomValidatorEvaluateIsValid#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_13_1.aspx)]\\n [!code-vb[CustomCustomValidatorEvaluateIsValid#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_13_1.aspx)]  \\n[!code-cs[CustomCustomValidatorEvaluateIsValid#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_13_2.cs)]\\n[!code-vb[CustomCustomValidatorEvaluateIsValid#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_13_2.vb)]\"\n  syntax:\n    content: protected override bool EvaluateIsValid ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value in the input control is valid; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.CustomValidator.EvaluateIsValid*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.CustomValidator.OnServerValidate(System.String)\n  id: OnServerValidate(System.String)\n  parent: System.Web.UI.WebControls.CustomValidator\n  langs:\n  - csharp\n  name: OnServerValidate(String)\n  nameWithType: CustomValidator.OnServerValidate(String)\n  fullName: System.Web.UI.WebControls.CustomValidator.OnServerValidate(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Raises the <xref href=\"System.Web.UI.WebControls.CustomValidator.ServerValidate\"></xref> event for the <xref href=\"System.Web.UI.WebControls.CustomValidator\"></xref> control.\n  remarks: \"The <xref:System.Web.UI.WebControls.CustomValidator.ServerValidate> event is raised when validation is performed on the server.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).  \\n  \\n The OnServerValidate method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example demonstrates how to specify and code a handler for a server-side <xref:System.Web.UI.WebControls.CustomValidator> control.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[CustomValidatorServerValidate#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_99_1.aspx)]\\n [!code-vb[CustomValidatorServerValidate#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_99_1.aspx)]\"\n  syntax:\n    content: protected virtual bool OnServerValidate (string value);\n    parameters:\n    - id: value\n      type: System.String\n      description: The value to validate.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value specified by the <code>value</code> parameter passes validation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.CustomValidator.OnServerValidate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.CustomValidator.ServerValidate\n  id: ServerValidate\n  parent: System.Web.UI.WebControls.CustomValidator\n  langs:\n  - csharp\n  name: ServerValidate\n  nameWithType: CustomValidator.ServerValidate\n  fullName: System.Web.UI.WebControls.CustomValidator.ServerValidate\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Occurs when validation is performed on the server.\n  remarks: \"The ServerValidate event is raised when validation is performed on the server. This event is used to provide a custom validation routine for an input control, such as a <xref:System.Web.UI.WebControls.TextBox> control.  \\n  \\n For more information about handling events, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).\"\n  example:\n  - \"The following code example demonstrates how to specify and code a handler for a server-side <xref:System.Web.UI.WebControls.CustomValidator> control. It creates a custom validation routine, validates the value of a <xref:System.Web.UI.WebControls.TextBox> control for an even number, and then displays the result of the validation.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[CustomValidatorServerValidate#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_119_1.aspx)]\\n [!code-vb[CustomValidatorServerValidate#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_119_1.aspx)]\"\n  syntax:\n    content: public event System.Web.UI.WebControls.ServerValidateEventHandler ServerValidate;\n    return:\n      type: System.Web.UI.WebControls.ServerValidateEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.CustomValidator.ValidateEmptyText\n  id: ValidateEmptyText\n  parent: System.Web.UI.WebControls.CustomValidator\n  langs:\n  - csharp\n  name: ValidateEmptyText\n  nameWithType: CustomValidator.ValidateEmptyText\n  fullName: System.Web.UI.WebControls.CustomValidator.ValidateEmptyText\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a Boolean value indicating whether empty text should be validated.\n  remarks: \"Each validator can be associated with a targeted control. In previous versions of the .NET Framework, if the targeted control had an empty string value, such as a  <xref:System.Web.UI.WebControls.TextBox.Text%2A> property having a value of <xref:System.String.Empty?displayProperty=fullName>, the validator (except for the <xref:System.Web.UI.WebControls.RequiredFieldValidator> validator) would not evaluate the targeted control and would simply return that the validation passed.  \\n  \\n The ValidateEmptyText property is new for the .NET Framework version 2.0.  If ValidateEmptyText is set to `true`, the validator evaluates the control's value (using the criteria specified to the <xref:System.Web.UI.WebControls.CustomValidator> control) and returns the validation results. This property allows developers to evaluate the results of a <xref:System.Web.UI.WebControls.CustomValidator> control regardless of the value of the targeted control.  \\n  \\n This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public bool ValidateEmptyText { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if empty text should be validated; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.CustomValidator.ValidateEmptyText*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.UI.WebControls.BaseValidator\n  isExternal: false\n  name: System.Web.UI.WebControls.BaseValidator\n- uid: System.Web.UI.WebControls.CustomValidator.#ctor\n  parent: System.Web.UI.WebControls.CustomValidator\n  isExternal: false\n  name: CustomValidator()\n  nameWithType: CustomValidator.CustomValidator()\n  fullName: System.Web.UI.WebControls.CustomValidator.CustomValidator()\n- uid: System.Web.UI.WebControls.CustomValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.UI.WebControls.CustomValidator\n  isExternal: false\n  name: AddAttributesToRender(HtmlTextWriter)\n  nameWithType: CustomValidator.AddAttributesToRender(HtmlTextWriter)\n  fullName: System.Web.UI.WebControls.CustomValidator.AddAttributesToRender(HtmlTextWriter)\n- uid: System.Web.UI.HtmlTextWriter\n  parent: System.Web.UI\n  isExternal: false\n  name: HtmlTextWriter\n  nameWithType: HtmlTextWriter\n  fullName: System.Web.UI.HtmlTextWriter\n- uid: System.Web.UI.WebControls.CustomValidator.ClientValidationFunction\n  parent: System.Web.UI.WebControls.CustomValidator\n  isExternal: false\n  name: ClientValidationFunction\n  nameWithType: CustomValidator.ClientValidationFunction\n  fullName: System.Web.UI.WebControls.CustomValidator.ClientValidationFunction\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.WebControls.CustomValidator.ControlPropertiesValid\n  parent: System.Web.UI.WebControls.CustomValidator\n  isExternal: false\n  name: ControlPropertiesValid()\n  nameWithType: CustomValidator.ControlPropertiesValid()\n  fullName: System.Web.UI.WebControls.CustomValidator.ControlPropertiesValid()\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.UI.WebControls.CustomValidator.EvaluateIsValid\n  parent: System.Web.UI.WebControls.CustomValidator\n  isExternal: false\n  name: EvaluateIsValid()\n  nameWithType: CustomValidator.EvaluateIsValid()\n  fullName: System.Web.UI.WebControls.CustomValidator.EvaluateIsValid()\n- uid: System.Web.UI.WebControls.CustomValidator.OnServerValidate(System.String)\n  parent: System.Web.UI.WebControls.CustomValidator\n  isExternal: false\n  name: OnServerValidate(String)\n  nameWithType: CustomValidator.OnServerValidate(String)\n  fullName: System.Web.UI.WebControls.CustomValidator.OnServerValidate(String)\n- uid: System.Web.UI.WebControls.CustomValidator.ServerValidate\n  parent: System.Web.UI.WebControls.CustomValidator\n  isExternal: false\n  name: ServerValidate\n  nameWithType: CustomValidator.ServerValidate\n  fullName: System.Web.UI.WebControls.CustomValidator.ServerValidate\n- uid: System.Web.UI.WebControls.ServerValidateEventHandler\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: ServerValidateEventHandler\n  nameWithType: ServerValidateEventHandler\n  fullName: System.Web.UI.WebControls.ServerValidateEventHandler\n- uid: System.Web.UI.WebControls.CustomValidator.ValidateEmptyText\n  parent: System.Web.UI.WebControls.CustomValidator\n  isExternal: false\n  name: ValidateEmptyText\n  nameWithType: CustomValidator.ValidateEmptyText\n  fullName: System.Web.UI.WebControls.CustomValidator.ValidateEmptyText\n- uid: System.Web.UI.WebControls.CustomValidator.#ctor*\n  parent: System.Web.UI.WebControls.CustomValidator\n  isExternal: false\n  name: CustomValidator\n  nameWithType: CustomValidator.CustomValidator\n- uid: System.Web.UI.WebControls.CustomValidator.AddAttributesToRender*\n  parent: System.Web.UI.WebControls.CustomValidator\n  isExternal: false\n  name: AddAttributesToRender\n  nameWithType: CustomValidator.AddAttributesToRender\n- uid: System.Web.UI.WebControls.CustomValidator.ClientValidationFunction*\n  parent: System.Web.UI.WebControls.CustomValidator\n  isExternal: false\n  name: ClientValidationFunction\n  nameWithType: CustomValidator.ClientValidationFunction\n- uid: System.Web.UI.WebControls.CustomValidator.ControlPropertiesValid*\n  parent: System.Web.UI.WebControls.CustomValidator\n  isExternal: false\n  name: ControlPropertiesValid\n  nameWithType: CustomValidator.ControlPropertiesValid\n- uid: System.Web.UI.WebControls.CustomValidator.EvaluateIsValid*\n  parent: System.Web.UI.WebControls.CustomValidator\n  isExternal: false\n  name: EvaluateIsValid\n  nameWithType: CustomValidator.EvaluateIsValid\n- uid: System.Web.UI.WebControls.CustomValidator.OnServerValidate*\n  parent: System.Web.UI.WebControls.CustomValidator\n  isExternal: false\n  name: OnServerValidate\n  nameWithType: CustomValidator.OnServerValidate\n- uid: System.Web.UI.WebControls.CustomValidator.ValidateEmptyText*\n  parent: System.Web.UI.WebControls.CustomValidator\n  isExternal: false\n  name: ValidateEmptyText\n  nameWithType: CustomValidator.ValidateEmptyText\n"}