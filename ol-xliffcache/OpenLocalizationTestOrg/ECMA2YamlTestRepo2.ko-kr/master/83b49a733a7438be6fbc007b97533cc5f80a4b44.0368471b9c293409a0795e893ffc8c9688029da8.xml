{"nodes":[{"pos":[1246,1258],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3833,3845],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4725,4737],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5611,5623],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5703,5715],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6364,6376],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7112,7124],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7742,7754],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8428,8440],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.CSharp.Activities.CSharpReference`1\n  id: CSharpReference`1\n  children:\n  - Microsoft.CSharp.Activities.CSharpReference`1.#ctor\n  - Microsoft.CSharp.Activities.CSharpReference`1.#ctor(System.String)\n  - Microsoft.CSharp.Activities.CSharpReference`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  - Microsoft.CSharp.Activities.CSharpReference`1.Execute(System.Activities.CodeActivityContext)\n  - Microsoft.CSharp.Activities.CSharpReference`1.ExpressionText\n  - Microsoft.CSharp.Activities.CSharpReference`1.GetExpressionTree\n  - Microsoft.CSharp.Activities.CSharpReference`1.Language\n  - Microsoft.CSharp.Activities.CSharpReference`1.RequiresCompilation\n  langs:\n  - csharp\n  name: CSharpReference<TResult>\n  nameWithType: CSharpReference<TResult>\n  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>\n  type: Class\n  syntax:\n    content: >-\n      [System.Diagnostics.DebuggerStepThrough]\n\n      [System.Windows.Markup.ContentProperty(\"ExpressionText\")]\n\n      public class CSharpReference<TResult> : System.Activities.CodeActivity<System.Activities.Location<TResult>>, System.Activities.Expressions.ITextExpression\n    typeParameters:\n    - id: TResult\n      description: To be added.\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.ActivityWithResult\n  - System.Activities.Activity`1\n  - System.Activities.CodeActivity`1\n  implements:\n  - System.Activities.Expressions.ITextExpression\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.Activity`1.FromValue(`0)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})\n  - System.Activities.Activity`1.op_Implicit(`0)\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable)\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable{`0})\n  - System.Activities.Activity`1.Result\n  - System.Activities.ActivityWithResult.ResultType\n  - System.Activities.CodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.CodeActivity`1.Implementation\n  - System.Activities.CodeActivity`1.ImplementationVersion\n  - System.Activities.CodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  platform:\n  - net462\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.#ctor\n  id: '#ctor'\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  langs:\n  - csharp\n  name: CSharpReference()\n  nameWithType: CSharpReference<TResult>.CSharpReference()\n  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.CSharpReference()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: Microsoft.CSharp.Activities\n  syntax:\n    content: public CSharpReference ();\n    parameters: []\n  overload: Microsoft.CSharp.Activities.CSharpReference`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  langs:\n  - csharp\n  name: CSharpReference(String)\n  nameWithType: CSharpReference<TResult>.CSharpReference(String)\n  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.CSharpReference(String)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: Microsoft.CSharp.Activities\n  syntax:\n    content: public CSharpReference (string expressionText);\n    parameters:\n    - id: expressionText\n      type: System.String\n      description: To be added.\n  overload: Microsoft.CSharp.Activities.CSharpReference`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  id: CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  langs:\n  - csharp\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: CSharpReference<TResult>.CacheMetadata(CodeActivityMetadata)\n  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.CacheMetadata(CodeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: Microsoft.CSharp.Activities\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.CodeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.CodeActivityMetadata\n      description: To be added.\n  overload: Microsoft.CSharp.Activities.CSharpReference`1.CacheMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.Execute(System.Activities.CodeActivityContext)\n  id: Execute(System.Activities.CodeActivityContext)\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  langs:\n  - csharp\n  name: Execute(CodeActivityContext)\n  nameWithType: CSharpReference<TResult>.Execute(CodeActivityContext)\n  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.Execute(CodeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: Microsoft.CSharp.Activities\n  syntax:\n    content: protected override System.Activities.Location<TResult> Execute (System.Activities.CodeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.CodeActivityContext\n      description: To be added.\n    return:\n      type: System.Activities.Location{TResult}\n      description: To be added.\n  overload: Microsoft.CSharp.Activities.CSharpReference`1.Execute*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.ExpressionText\n  id: ExpressionText\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  langs:\n  - csharp\n  name: ExpressionText\n  nameWithType: CSharpReference<TResult>.ExpressionText\n  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.ExpressionText\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: Microsoft.CSharp.Activities\n  syntax:\n    content: public string ExpressionText { get; set; }\n    return:\n      type: System.String\n      description: To be added.\n  overload: Microsoft.CSharp.Activities.CSharpReference`1.ExpressionText*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.GetExpressionTree\n  id: GetExpressionTree\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  langs:\n  - csharp\n  name: GetExpressionTree()\n  nameWithType: CSharpReference<TResult>.GetExpressionTree()\n  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.GetExpressionTree()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: Microsoft.CSharp.Activities\n  syntax:\n    content: public System.Linq.Expressions.Expression GetExpressionTree ();\n    parameters: []\n    return:\n      type: System.Linq.Expressions.Expression\n      description: To be added.\n  overload: Microsoft.CSharp.Activities.CSharpReference`1.GetExpressionTree*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.Language\n  id: Language\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  langs:\n  - csharp\n  name: Language\n  nameWithType: CSharpReference<TResult>.Language\n  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.Language\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: Microsoft.CSharp.Activities\n  syntax:\n    content: public string Language { get; }\n    return:\n      type: System.String\n      description: To be added.\n  overload: Microsoft.CSharp.Activities.CSharpReference`1.Language*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.RequiresCompilation\n  id: RequiresCompilation\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  langs:\n  - csharp\n  name: RequiresCompilation\n  nameWithType: CSharpReference<TResult>.RequiresCompilation\n  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.RequiresCompilation\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: Microsoft.CSharp.Activities\n  syntax:\n    content: public bool RequiresCompilation { get; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.CSharp.Activities.CSharpReference`1.RequiresCompilation*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.CodeActivity`1\n  isExternal: false\n  name: System.Activities.CodeActivity<System.Activities.Location<TResult>>\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.#ctor\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  isExternal: false\n  name: CSharpReference()\n  nameWithType: CSharpReference<TResult>.CSharpReference()\n  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.CSharpReference()\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.#ctor(System.String)\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  isExternal: false\n  name: CSharpReference(String)\n  nameWithType: CSharpReference<TResult>.CSharpReference(String)\n  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.CSharpReference(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  isExternal: false\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: CSharpReference<TResult>.CacheMetadata(CodeActivityMetadata)\n  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.CacheMetadata(CodeActivityMetadata)\n- uid: System.Activities.CodeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityMetadata\n  nameWithType: CodeActivityMetadata\n  fullName: System.Activities.CodeActivityMetadata\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.Execute(System.Activities.CodeActivityContext)\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  isExternal: false\n  name: Execute(CodeActivityContext)\n  nameWithType: CSharpReference<TResult>.Execute(CodeActivityContext)\n  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.Execute(CodeActivityContext)\n- uid: System.Activities.Location{TResult}\n  parent: System.Activities\n  isExternal: false\n  name: Location<TResult>\n  nameWithType: Location<TResult>\n  fullName: System.Activities.Location<TResult>\n  spec.csharp:\n  - uid: System.Activities.Location`1\n    name: Location\n    nameWithType: Location\n    fullName: Location<TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.CodeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityContext\n  nameWithType: CodeActivityContext\n  fullName: System.Activities.CodeActivityContext\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.ExpressionText\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  isExternal: false\n  name: ExpressionText\n  nameWithType: CSharpReference<TResult>.ExpressionText\n  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.ExpressionText\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.GetExpressionTree\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  isExternal: false\n  name: GetExpressionTree()\n  nameWithType: CSharpReference<TResult>.GetExpressionTree()\n  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.GetExpressionTree()\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: true\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.Language\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  isExternal: false\n  name: Language\n  nameWithType: CSharpReference<TResult>.Language\n  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.Language\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.RequiresCompilation\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  isExternal: false\n  name: RequiresCompilation\n  nameWithType: CSharpReference<TResult>.RequiresCompilation\n  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.RequiresCompilation\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.#ctor*\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  isExternal: false\n  name: CSharpReference<TResult>\n  nameWithType: CSharpReference<TResult>.CSharpReference<TResult>\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.CacheMetadata*\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: CSharpReference<TResult>.CacheMetadata\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.Execute*\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  isExternal: false\n  name: Execute\n  nameWithType: CSharpReference<TResult>.Execute\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.ExpressionText*\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  isExternal: false\n  name: ExpressionText\n  nameWithType: CSharpReference<TResult>.ExpressionText\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.GetExpressionTree*\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  isExternal: false\n  name: GetExpressionTree\n  nameWithType: CSharpReference<TResult>.GetExpressionTree\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.Language*\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  isExternal: false\n  name: Language\n  nameWithType: CSharpReference<TResult>.Language\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.RequiresCompilation*\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  isExternal: false\n  name: RequiresCompilation\n  nameWithType: CSharpReference<TResult>.RequiresCompilation\n"}