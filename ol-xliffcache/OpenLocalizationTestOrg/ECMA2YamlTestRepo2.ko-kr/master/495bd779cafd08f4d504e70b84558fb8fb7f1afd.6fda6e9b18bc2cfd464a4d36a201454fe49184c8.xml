{"nodes":[{"pos":[395,464],"content":"Provides support when creating directive IntelliSense at design time.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides support when creating directive IntelliSense at design time.","pos":[0,69]}]},{"pos":[1150,1279],"content":"Returns a collection of directives based on the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">frameworkVersion</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter and the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">extension</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"Returns a collection of directives based on the <code>frameworkVersion</code> parameter and the <code>extension</code> parameter."},{"pos":[1522,1549],"content":"The .NET Framework version.","needQuote":true,"needEscape":true,"nodes":[{"content":"The .NET Framework version.","pos":[0,27]}]},{"pos":[1615,1639],"content":"The file name extension.","needQuote":true,"needEscape":true,"nodes":[{"content":"The file name extension.","pos":[0,24]}]},{"pos":[1746,1769],"content":"A read only collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"A read only collection.","pos":[0,23]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.Design.Directives.DirectiveRegistry\n  id: DirectiveRegistry\n  children:\n  - System.Web.UI.Design.Directives.DirectiveRegistry.GetDirectives(System.Version,System.String)\n  langs:\n  - csharp\n  name: DirectiveRegistry\n  nameWithType: DirectiveRegistry\n  fullName: System.Web.UI.Design.Directives.DirectiveRegistry\n  type: Class\n  summary: Provides support when creating directive IntelliSense at design time.\n  syntax:\n    content: public static class DirectiveRegistry\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.UI.Design.Directives.DirectiveRegistry.GetDirectives(System.Version,System.String)\n  id: GetDirectives(System.Version,System.String)\n  parent: System.Web.UI.Design.Directives.DirectiveRegistry\n  langs:\n  - csharp\n  name: GetDirectives(Version,String)\n  nameWithType: DirectiveRegistry.GetDirectives(Version,String)\n  fullName: System.Web.UI.Design.Directives.DirectiveRegistry.GetDirectives(Version,String)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.Web.UI.Design.Directives\n  summary: Returns a collection of directives based on the <code>frameworkVersion</code> parameter and the <code>extension</code> parameter.\n  syntax:\n    content: public static System.Collections.ObjectModel.ReadOnlyCollection<Type> GetDirectives (Version frameworkVersion, string extension);\n    parameters:\n    - id: frameworkVersion\n      type: System.Version\n      description: The .NET Framework version.\n    - id: extension\n      type: System.String\n      description: The file name extension.\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Type}\n      description: A read only collection.\n  overload: System.Web.UI.Design.Directives.DirectiveRegistry.GetDirectives*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Web.UI.Design.Directives.DirectiveRegistry.GetDirectives(System.Version,System.String)\n  parent: System.Web.UI.Design.Directives.DirectiveRegistry\n  isExternal: false\n  name: GetDirectives(Version,String)\n  nameWithType: DirectiveRegistry.GetDirectives(Version,String)\n  fullName: System.Web.UI.Design.Directives.DirectiveRegistry.GetDirectives(Version,String)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Type}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<Type>\n  nameWithType: ReadOnlyCollection<Type>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Type>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.Type>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: Type\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Version\n  parent: System\n  isExternal: true\n  name: Version\n  nameWithType: Version\n  fullName: System.Version\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.Design.Directives.DirectiveRegistry.GetDirectives*\n  parent: System.Web.UI.Design.Directives.DirectiveRegistry\n  isExternal: false\n  name: GetDirectives\n  nameWithType: DirectiveRegistry.GetDirectives\n"}