{"nodes":[{"pos":[1412,1560],"content":"Defines static methods for creating Federation Metadata documents and for updating application configuration based on Federation Metadata documents.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines static methods for creating Federation Metadata documents and for updating application configuration based on Federation Metadata documents.","pos":[0,148]}]},{"pos":[1573,1839],"content":"For more information about Federation Metadata documents, see section three of the following specification: <bpt id=\"p1\">[</bpt>Web Services Federation Language (WS-Federation) Version 1.2<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=210152)</ept> (http://go.microsoft.com/fwlink/?LinkID=210152).","needQuote":false,"needEscape":true,"extradata":"MT","source":"For more information about Federation Metadata documents, see section three of the following specification: [Web Services Federation Language (WS-Federation) Version 1.2](http://go.microsoft.com/fwlink/?LinkID=210152) (http://go.microsoft.com/fwlink/?LinkID=210152)."},{"pos":[3310,3368],"content":"Creates an XML document that contains Federation Metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an XML document that contains Federation Metadata.","pos":[0,58]}]},{"pos":[3870,3890],"content":"The application URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"The application URI.","pos":[0,20]}]},{"pos":[4007,4057],"content":"The X.509 certificate to use to sign the metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"The X.509 certificate to use to sign the metadata.","pos":[0,50]}]},{"pos":[4200,4239],"content":"The claims required by the application.","needQuote":true,"needEscape":true,"nodes":[{"content":"The claims required by the application.","pos":[0,39]}]},{"pos":[4343,4546],"content":"One of the <xref href=\"System.IdentityModel.Services.ApplicationType\"></xref> values that specifies the type of application that the metadata describes. This is used to determine the endpoints to create.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Services.ApplicationType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the type of application that the metadata describes.","pos":[0,152],"source":"One of the <xref href=\"System.IdentityModel.Services.ApplicationType\"></xref> values that specifies the type of application that the metadata describes."},{"content":"This is used to determine the endpoints to create.","pos":[153,203]}]},{"pos":[4655,4727],"content":"The collection of acceptable URIs that can be used for this application.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection of acceptable URIs that can be used for this application.","pos":[0,72]}]},{"pos":[4792,4883],"content":"An XML reader that contains the metadata document that was created by using the parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML reader that contains the metadata document that was created by using the parameters.","pos":[0,91]}]},{"pos":[5757,5946],"content":"Updates the specified application configuration, if needed, based on the specified Federation Metadata document and a value that specifies whether the claims offered list should be updated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Updates the specified application configuration, if needed, based on the specified Federation Metadata document and a value that specifies whether the claims offered list should be updated.","pos":[0,189]}]},{"pos":[6236,6286],"content":"An XML reader that contains the metadata document.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML reader that contains the metadata document.","pos":[0,50]}]},{"pos":[6368,6414],"content":"An XML reader that contains the configuration.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML reader that contains the configuration.","pos":[0,46]}]},{"pos":[6491,6672],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the claims offered list should be updated; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the claims offered list should be updated; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6737,6897],"content":"An XML reader that contains the updated configuration or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the configuration could not be updated.","needQuote":true,"needEscape":true,"source":"An XML reader that contains the updated configuration or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the configuration could not be updated."},{"pos":[7111,7333],"content":"<code>metadataReader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>inputConfiguration</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;metadataReader&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,92],"source":"<code>metadataReader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;inputConfiguration&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[99,206],"source":"       -or-       <code>inputConfiguration</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[8246,8530],"content":"Updates the specified application configuration, if needed, based on the specified Federation Metadata document and a value that specifies whether the claims offered list should be updated. The serializer with which to read the security token service (STS) metadata is also specified.","needQuote":true,"needEscape":true,"nodes":[{"content":"Updates the specified application configuration, if needed, based on the specified Federation Metadata document and a value that specifies whether the claims offered list should be updated. The serializer with which to read the security token service (STS) metadata is also specified.","pos":[0,284],"nodes":[{"content":"Updates the specified application configuration, if needed, based on the specified Federation Metadata document and a value that specifies whether the claims offered list should be updated.","pos":[0,189]},{"content":"The serializer with which to read the security token service (STS) metadata is also specified.","pos":[190,284]}]}]},{"pos":[8889,8939],"content":"An XML reader that contains the metadata document.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML reader that contains the metadata document.","pos":[0,50]}]},{"pos":[9021,9067],"content":"An XML reader that contains the configuration.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML reader that contains the configuration.","pos":[0,46]}]},{"pos":[9144,9325],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the claims offered list should be updated; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the claims offered list should be updated; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9435,9486],"content":"The serializer with which to read the STS metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"The serializer with which to read the STS metadata.","pos":[0,51]}]},{"pos":[9551,9711],"content":"An XML reader that contains the updated configuration or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the configuration could not be updated.","needQuote":true,"needEscape":true,"source":"An XML reader that contains the updated configuration or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the configuration could not be updated."},{"pos":[9925,10271],"content":"<code>metadataReader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>inputConfiguration</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>metadataSerializer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;metadataReader&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,92],"source":"<code>metadataReader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;inputConfiguration&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[99,206],"source":"       -or-       <code>inputConfiguration</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;metadataSerializer&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[213,320],"source":"       -or-       <code>metadataSerializer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[11163,11448],"content":"Updates the specified application configuration, if needed, based on the specified Federation Metadata document. Returns the configuration elements for the issuer name registry, as well as the configuration elements for the updated list of claims types offered, if it has been updated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Updates the specified application configuration, if needed, based on the specified Federation Metadata document. Returns the configuration elements for the issuer name registry, as well as the configuration elements for the updated list of claims types offered, if it has been updated.","pos":[0,285],"nodes":[{"content":"Updates the specified application configuration, if needed, based on the specified Federation Metadata document.","pos":[0,112]},{"content":"Returns the configuration elements for the issuer name registry, as well as the configuration elements for the updated list of claims types offered, if it has been updated.","pos":[113,285]}]}]},{"pos":[11796,11846],"content":"An XML reader that contains the metadata document.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML reader that contains the metadata document.","pos":[0,50]}]},{"pos":[11928,11974],"content":"An XML reader that contains the configuration.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML reader that contains the configuration.","pos":[0,46]}]},{"pos":[12063,12338],"content":"When this method returns, contains an XML node reader that contains the elements that specify the issuer name registry. <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there are is no issuer name registry specified. This parameter is treated as uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains an XML node reader that contains the elements that specify the issuer name registry.","pos":[0,119]},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if there are is no issuer name registry specified.","pos":[120,231],"source":"<xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there are is no issuer name registry specified."},{"content":"This parameter is treated as uninitialized.","pos":[232,275]}]},{"pos":[12423,12723],"content":"When this method returns, if the list of claim types offered has been changed, contains an XML node reader that contains elements that specify new list. If the list has not been changed, returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>. This parameter is treated as uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, if the list of claim types offered has been changed, contains an XML node reader that contains elements that specify new list.","pos":[0,152]},{"content":"If the list has not been changed, returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[153,256],"source":" If the list has not been changed, returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"This parameter is treated as uninitialized.","pos":[257,300]}]},{"pos":[12937,13186],"content":"<code>metadataReader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>inputConfiguration</code><code>metadataReader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;metadataReader&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,92],"source":"<code>metadataReader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;inputConfiguration&lt;/code&gt;</ph><ph id=\"ph2\">&lt;code&gt;metadataReader&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[99,233],"source":"       -or-       <code>inputConfiguration</code><code>metadataReader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[14233,14609],"content":"Updates the specified application configuration, if needed, based on the specified Federation Metadata document. Returns configuration elements for the issuer name registry, as well as the configuration elements for the updated list of claims types offered, if it has been updated. The serializer with which to read the security token service (STS) metadata is also specified.","needQuote":true,"needEscape":true,"nodes":[{"content":"Updates the specified application configuration, if needed, based on the specified Federation Metadata document. Returns configuration elements for the issuer name registry, as well as the configuration elements for the updated list of claims types offered, if it has been updated. The serializer with which to read the security token service (STS) metadata is also specified.","pos":[0,376],"nodes":[{"content":"Updates the specified application configuration, if needed, based on the specified Federation Metadata document.","pos":[0,112]},{"content":"Returns configuration elements for the issuer name registry, as well as the configuration elements for the updated list of claims types offered, if it has been updated.","pos":[113,281]},{"content":"The serializer with which to read the security token service (STS) metadata is also specified.","pos":[282,376]}]}]},{"pos":[15026,15076],"content":"An XML reader that contains the metadata document.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML reader that contains the metadata document.","pos":[0,50]}]},{"pos":[15158,15204],"content":"An XML reader that contains the configuration.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML reader that contains the configuration.","pos":[0,46]}]},{"pos":[15293,15568],"content":"When this method returns, contains an XML node reader that contains the elements that specify the issuer name registry. <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there are is no issuer name registry specified. This parameter is treated as uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains an XML node reader that contains the elements that specify the issuer name registry.","pos":[0,119]},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if there are is no issuer name registry specified.","pos":[120,231],"source":"<xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there are is no issuer name registry specified."},{"content":"This parameter is treated as uninitialized.","pos":[232,275]}]},{"pos":[15653,15953],"content":"When this method returns, if the list of claim types offered has been changed, contains an XML node reader that contains elements that specify new list. If the list has not been changed, returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>. This parameter is treated as uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, if the list of claim types offered has been changed, contains an XML node reader that contains elements that specify new list.","pos":[0,152]},{"content":"If the list has not been changed, returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[153,256],"source":" If the list has not been changed, returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"This parameter is treated as uninitialized.","pos":[257,300]}]},{"pos":[16063,16114],"content":"The serializer with which to read the STS metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"The serializer with which to read the STS metadata.","pos":[0,51]}]},{"pos":[16328,16674],"content":"<code>metadataReader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>inputConfiguration</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>metadataSerializer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;metadataReader&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,92],"source":"<code>metadataReader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;inputConfiguration&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[99,206],"source":"       -or-       <code>inputConfiguration</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;metadataSerializer&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[213,320],"source":"       -or-       <code>metadataSerializer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Services.FederationManagement\n  id: FederationManagement\n  children:\n  - System.IdentityModel.Services.FederationManagement.CreateApplicationFederationMetadata(System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Collections.ObjectModel.Collection{System.IdentityModel.Metadata.DisplayClaim},System.IdentityModel.Services.ApplicationType,System.Collections.ObjectModel.Collection{System.Uri})\n  - System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Boolean)\n  - System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Boolean,System.IdentityModel.Metadata.MetadataSerializer)\n  - System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Xml.XmlNodeReader@,System.Xml.XmlNodeReader@)\n  - System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Xml.XmlNodeReader@,System.Xml.XmlNodeReader@,System.IdentityModel.Metadata.MetadataSerializer)\n  langs:\n  - csharp\n  name: FederationManagement\n  nameWithType: FederationManagement\n  fullName: System.IdentityModel.Services.FederationManagement\n  type: Class\n  summary: Defines static methods for creating Federation Metadata documents and for updating application configuration based on Federation Metadata documents.\n  remarks: 'For more information about Federation Metadata documents, see section three of the following specification: [Web Services Federation Language (WS-Federation) Version 1.2](http://go.microsoft.com/fwlink/?LinkID=210152) (http://go.microsoft.com/fwlink/?LinkID=210152).'\n  syntax:\n    content: public static class FederationManagement\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Services.FederationManagement.CreateApplicationFederationMetadata(System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Collections.ObjectModel.Collection{System.IdentityModel.Metadata.DisplayClaim},System.IdentityModel.Services.ApplicationType,System.Collections.ObjectModel.Collection{System.Uri})\n  id: CreateApplicationFederationMetadata(System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Collections.ObjectModel.Collection{System.IdentityModel.Metadata.DisplayClaim},System.IdentityModel.Services.ApplicationType,System.Collections.ObjectModel.Collection{System.Uri})\n  parent: System.IdentityModel.Services.FederationManagement\n  langs:\n  - csharp\n  name: CreateApplicationFederationMetadata(Uri,X509Certificate2,Collection<DisplayClaim>,ApplicationType,Collection<Uri>)\n  nameWithType: FederationManagement.CreateApplicationFederationMetadata(Uri,X509Certificate2,Collection<DisplayClaim>,ApplicationType,Collection<Uri>)\n  fullName: System.IdentityModel.Services.FederationManagement.CreateApplicationFederationMetadata(Uri,X509Certificate2,Collection<DisplayClaim>,ApplicationType,Collection<Uri>)\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Creates an XML document that contains Federation Metadata.\n  syntax:\n    content: public static System.Xml.XmlReader CreateApplicationFederationMetadata (Uri applicationUri, System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, System.Collections.ObjectModel.Collection<System.IdentityModel.Metadata.DisplayClaim> claimsRequired, System.IdentityModel.Services.ApplicationType applicationType, System.Collections.ObjectModel.Collection<Uri> audienceUris);\n    parameters:\n    - id: applicationUri\n      type: System.Uri\n      description: The application URI.\n    - id: certificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: The X.509 certificate to use to sign the metadata.\n    - id: claimsRequired\n      type: System.Collections.ObjectModel.Collection{System.IdentityModel.Metadata.DisplayClaim}\n      description: The claims required by the application.\n    - id: applicationType\n      type: System.IdentityModel.Services.ApplicationType\n      description: One of the <xref href=\"System.IdentityModel.Services.ApplicationType\"></xref> values that specifies the type of application that the metadata describes. This is used to determine the endpoints to create.\n    - id: audienceUris\n      type: System.Collections.ObjectModel.Collection{System.Uri}\n      description: The collection of acceptable URIs that can be used for this application.\n    return:\n      type: System.Xml.XmlReader\n      description: An XML reader that contains the metadata document that was created by using the parameters.\n  overload: System.IdentityModel.Services.FederationManagement.CreateApplicationFederationMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Boolean)\n  id: UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Boolean)\n  parent: System.IdentityModel.Services.FederationManagement\n  langs:\n  - csharp\n  name: UpdateIdentityProviderTrustInfo(XmlReader,XmlReader,Boolean)\n  nameWithType: FederationManagement.UpdateIdentityProviderTrustInfo(XmlReader,XmlReader,Boolean)\n  fullName: System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(XmlReader,XmlReader,Boolean)\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Updates the specified application configuration, if needed, based on the specified Federation Metadata document and a value that specifies whether the claims offered list should be updated.\n  syntax:\n    content: public static System.Xml.XmlReader UpdateIdentityProviderTrustInfo (System.Xml.XmlReader metadataReader, System.Xml.XmlReader inputConfiguration, bool claimsOfferedUpdate);\n    parameters:\n    - id: metadataReader\n      type: System.Xml.XmlReader\n      description: An XML reader that contains the metadata document.\n    - id: inputConfiguration\n      type: System.Xml.XmlReader\n      description: An XML reader that contains the configuration.\n    - id: claimsOfferedUpdate\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the claims offered list should be updated; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Xml.XmlReader\n      description: An XML reader that contains the updated configuration or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the configuration could not be updated.\n  overload: System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>metadataReader</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>inputConfiguration</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Boolean,System.IdentityModel.Metadata.MetadataSerializer)\n  id: UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Boolean,System.IdentityModel.Metadata.MetadataSerializer)\n  parent: System.IdentityModel.Services.FederationManagement\n  langs:\n  - csharp\n  name: UpdateIdentityProviderTrustInfo(XmlReader,XmlReader,Boolean,MetadataSerializer)\n  nameWithType: FederationManagement.UpdateIdentityProviderTrustInfo(XmlReader,XmlReader,Boolean,MetadataSerializer)\n  fullName: System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(XmlReader,XmlReader,Boolean,MetadataSerializer)\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Updates the specified application configuration, if needed, based on the specified Federation Metadata document and a value that specifies whether the claims offered list should be updated. The serializer with which to read the security token service (STS) metadata is also specified.\n  syntax:\n    content: public static System.Xml.XmlReader UpdateIdentityProviderTrustInfo (System.Xml.XmlReader metadataReader, System.Xml.XmlReader inputConfiguration, bool claimsOfferedUpdate, System.IdentityModel.Metadata.MetadataSerializer metadataSerializer);\n    parameters:\n    - id: metadataReader\n      type: System.Xml.XmlReader\n      description: An XML reader that contains the metadata document.\n    - id: inputConfiguration\n      type: System.Xml.XmlReader\n      description: An XML reader that contains the configuration.\n    - id: claimsOfferedUpdate\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the claims offered list should be updated; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: metadataSerializer\n      type: System.IdentityModel.Metadata.MetadataSerializer\n      description: The serializer with which to read the STS metadata.\n    return:\n      type: System.Xml.XmlReader\n      description: An XML reader that contains the updated configuration or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the configuration could not be updated.\n  overload: System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>metadataReader</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>inputConfiguration</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>metadataSerializer</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Xml.XmlNodeReader@,System.Xml.XmlNodeReader@)\n  id: UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Xml.XmlNodeReader@,System.Xml.XmlNodeReader@)\n  parent: System.IdentityModel.Services.FederationManagement\n  langs:\n  - csharp\n  name: UpdateIdentityProviderTrustInfo(XmlReader,XmlReader,XmlNodeReader,XmlNodeReader)\n  nameWithType: FederationManagement.UpdateIdentityProviderTrustInfo(XmlReader,XmlReader,XmlNodeReader,XmlNodeReader)\n  fullName: System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(XmlReader,XmlReader,XmlNodeReader,XmlNodeReader)\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Updates the specified application configuration, if needed, based on the specified Federation Metadata document. Returns the configuration elements for the issuer name registry, as well as the configuration elements for the updated list of claims types offered, if it has been updated.\n  syntax:\n    content: public static void UpdateIdentityProviderTrustInfo (System.Xml.XmlReader metadataReader, System.Xml.XmlReader inputConfiguration, out System.Xml.XmlNodeReader newIssuerNameRegistry, out System.Xml.XmlNodeReader claimTypesOffered);\n    parameters:\n    - id: metadataReader\n      type: System.Xml.XmlReader\n      description: An XML reader that contains the metadata document.\n    - id: inputConfiguration\n      type: System.Xml.XmlReader\n      description: An XML reader that contains the configuration.\n    - id: newIssuerNameRegistry\n      type: System.Xml.XmlNodeReader\n      description: When this method returns, contains an XML node reader that contains the elements that specify the issuer name registry. <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there are is no issuer name registry specified. This parameter is treated as uninitialized.\n    - id: claimTypesOffered\n      type: System.Xml.XmlNodeReader\n      description: When this method returns, if the list of claim types offered has been changed, contains an XML node reader that contains elements that specify new list. If the list has not been changed, returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>. This parameter is treated as uninitialized.\n  overload: System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>metadataReader</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>inputConfiguration</code><code>metadataReader</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Xml.XmlNodeReader@,System.Xml.XmlNodeReader@,System.IdentityModel.Metadata.MetadataSerializer)\n  id: UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Xml.XmlNodeReader@,System.Xml.XmlNodeReader@,System.IdentityModel.Metadata.MetadataSerializer)\n  parent: System.IdentityModel.Services.FederationManagement\n  langs:\n  - csharp\n  name: UpdateIdentityProviderTrustInfo(XmlReader,XmlReader,XmlNodeReader,XmlNodeReader,MetadataSerializer)\n  nameWithType: FederationManagement.UpdateIdentityProviderTrustInfo(XmlReader,XmlReader,XmlNodeReader,XmlNodeReader,MetadataSerializer)\n  fullName: System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(XmlReader,XmlReader,XmlNodeReader,XmlNodeReader,MetadataSerializer)\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Updates the specified application configuration, if needed, based on the specified Federation Metadata document. Returns configuration elements for the issuer name registry, as well as the configuration elements for the updated list of claims types offered, if it has been updated. The serializer with which to read the security token service (STS) metadata is also specified.\n  syntax:\n    content: public static void UpdateIdentityProviderTrustInfo (System.Xml.XmlReader metadataReader, System.Xml.XmlReader inputConfiguration, out System.Xml.XmlNodeReader newIssuerNameRegistry, out System.Xml.XmlNodeReader claimTypesOffered, System.IdentityModel.Metadata.MetadataSerializer metadataSerializer);\n    parameters:\n    - id: metadataReader\n      type: System.Xml.XmlReader\n      description: An XML reader that contains the metadata document.\n    - id: inputConfiguration\n      type: System.Xml.XmlReader\n      description: An XML reader that contains the configuration.\n    - id: newIssuerNameRegistry\n      type: System.Xml.XmlNodeReader\n      description: When this method returns, contains an XML node reader that contains the elements that specify the issuer name registry. <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there are is no issuer name registry specified. This parameter is treated as uninitialized.\n    - id: claimTypesOffered\n      type: System.Xml.XmlNodeReader\n      description: When this method returns, if the list of claim types offered has been changed, contains an XML node reader that contains elements that specify new list. If the list has not been changed, returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>. This parameter is treated as uninitialized.\n    - id: metadataSerializer\n      type: System.IdentityModel.Metadata.MetadataSerializer\n      description: The serializer with which to read the STS metadata.\n  overload: System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>metadataReader</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>inputConfiguration</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>metadataSerializer</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.IdentityModel.Services.FederationManagement.CreateApplicationFederationMetadata(System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Collections.ObjectModel.Collection{System.IdentityModel.Metadata.DisplayClaim},System.IdentityModel.Services.ApplicationType,System.Collections.ObjectModel.Collection{System.Uri})\n  parent: System.IdentityModel.Services.FederationManagement\n  isExternal: false\n  name: CreateApplicationFederationMetadata(Uri,X509Certificate2,Collection<DisplayClaim>,ApplicationType,Collection<Uri>)\n  nameWithType: FederationManagement.CreateApplicationFederationMetadata(Uri,X509Certificate2,Collection<DisplayClaim>,ApplicationType,Collection<Uri>)\n  fullName: System.IdentityModel.Services.FederationManagement.CreateApplicationFederationMetadata(Uri,X509Certificate2,Collection<DisplayClaim>,ApplicationType,Collection<Uri>)\n- uid: System.Xml.XmlReader\n  parent: System.Xml\n  isExternal: true\n  name: XmlReader\n  nameWithType: XmlReader\n  fullName: System.Xml.XmlReader\n- uid: System.Uri\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate2\n  nameWithType: X509Certificate2\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2\n- uid: System.Collections.ObjectModel.Collection{System.IdentityModel.Metadata.DisplayClaim}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: Collection<DisplayClaim>\n  nameWithType: Collection<DisplayClaim>\n  fullName: System.Collections.ObjectModel.Collection<System.IdentityModel.Metadata.DisplayClaim>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: Collection<System.IdentityModel.Metadata.DisplayClaim>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IdentityModel.Metadata.DisplayClaim\n    name: DisplayClaim\n    nameWithType: DisplayClaim\n    fullName: DisplayClaim\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Services.ApplicationType\n  parent: System.IdentityModel.Services\n  isExternal: false\n  name: ApplicationType\n  nameWithType: ApplicationType\n  fullName: System.IdentityModel.Services.ApplicationType\n- uid: System.Collections.ObjectModel.Collection{System.Uri}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: Collection<Uri>\n  nameWithType: Collection<Uri>\n  fullName: System.Collections.ObjectModel.Collection<System.Uri>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: Collection<System.Uri>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Uri\n    name: Uri\n    nameWithType: Uri\n    fullName: Uri\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Boolean)\n  parent: System.IdentityModel.Services.FederationManagement\n  isExternal: false\n  name: UpdateIdentityProviderTrustInfo(XmlReader,XmlReader,Boolean)\n  nameWithType: FederationManagement.UpdateIdentityProviderTrustInfo(XmlReader,XmlReader,Boolean)\n  fullName: System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(XmlReader,XmlReader,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Boolean,System.IdentityModel.Metadata.MetadataSerializer)\n  parent: System.IdentityModel.Services.FederationManagement\n  isExternal: false\n  name: UpdateIdentityProviderTrustInfo(XmlReader,XmlReader,Boolean,MetadataSerializer)\n  nameWithType: FederationManagement.UpdateIdentityProviderTrustInfo(XmlReader,XmlReader,Boolean,MetadataSerializer)\n  fullName: System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(XmlReader,XmlReader,Boolean,MetadataSerializer)\n- uid: System.IdentityModel.Metadata.MetadataSerializer\n  parent: System.IdentityModel.Metadata\n  isExternal: false\n  name: MetadataSerializer\n  nameWithType: MetadataSerializer\n  fullName: System.IdentityModel.Metadata.MetadataSerializer\n- uid: System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Xml.XmlNodeReader@,System.Xml.XmlNodeReader@)\n  parent: System.IdentityModel.Services.FederationManagement\n  isExternal: false\n  name: UpdateIdentityProviderTrustInfo(XmlReader,XmlReader,XmlNodeReader,XmlNodeReader)\n  nameWithType: FederationManagement.UpdateIdentityProviderTrustInfo(XmlReader,XmlReader,XmlNodeReader,XmlNodeReader)\n  fullName: System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(XmlReader,XmlReader,XmlNodeReader,XmlNodeReader)\n- uid: System.Xml.XmlNodeReader\n  parent: System.Xml\n  isExternal: false\n  name: XmlNodeReader\n  nameWithType: XmlNodeReader\n  fullName: System.Xml.XmlNodeReader\n- uid: System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Xml.XmlNodeReader@,System.Xml.XmlNodeReader@,System.IdentityModel.Metadata.MetadataSerializer)\n  parent: System.IdentityModel.Services.FederationManagement\n  isExternal: false\n  name: UpdateIdentityProviderTrustInfo(XmlReader,XmlReader,XmlNodeReader,XmlNodeReader,MetadataSerializer)\n  nameWithType: FederationManagement.UpdateIdentityProviderTrustInfo(XmlReader,XmlReader,XmlNodeReader,XmlNodeReader,MetadataSerializer)\n  fullName: System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(XmlReader,XmlReader,XmlNodeReader,XmlNodeReader,MetadataSerializer)\n- uid: System.IdentityModel.Services.FederationManagement.CreateApplicationFederationMetadata*\n  parent: System.IdentityModel.Services.FederationManagement\n  isExternal: false\n  name: CreateApplicationFederationMetadata\n  nameWithType: FederationManagement.CreateApplicationFederationMetadata\n- uid: System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo*\n  parent: System.IdentityModel.Services.FederationManagement\n  isExternal: false\n  name: UpdateIdentityProviderTrustInfo\n  nameWithType: FederationManagement.UpdateIdentityProviderTrustInfo\n"}