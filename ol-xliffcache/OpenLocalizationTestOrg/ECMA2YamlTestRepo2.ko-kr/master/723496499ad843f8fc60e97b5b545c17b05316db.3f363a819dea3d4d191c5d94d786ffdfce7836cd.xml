{"nodes":[{"pos":[828,916],"content":"Defines the contract for the collection used by ASP.NET session state to manage session.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines the contract for the collection used by ASP.NET session state to manage session.","pos":[0,88]}]},{"pos":[929,2026],"content":"The ISessionStateItemCollection interface defines the collection of session items exposed to application code by the <xref:System.Web.SessionState.HttpSessionStateContainer> class.       The ASP.NET implementation of the ISessionStateItemCollection interface is the <xref:System.Web.SessionState.SessionStateItemCollection> class.       If you create a class derived from the <xref:System.Web.SessionState.SessionStateStoreProviderBase> class to store session data, you can either use the <xref:System.Web.SessionState.SessionStateItemCollection> class to manage the stored objects or implement the ISessionStateItemCollection interface on your own collection manager.       If you implement the ISessionStateItemCollection interface, you must also create a class that inherits the <xref:System.Web.SessionState.SessionStateStoreProviderBase> class in order to make use of your ISessionStateItemCollection implementation to manage session variables.       An ISessionStateItemCollection implementation must also implement the members of the <xref:System.Collections.ICollection> interface.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ISessionStateItemCollection interface defines the collection of session items exposed to application code by the <xref:System.Web.SessionState.HttpSessionStateContainer> class.       The ASP.NET implementation of the ISessionStateItemCollection interface is the <xref:System.Web.SessionState.SessionStateItemCollection> class.       If you create a class derived from the <xref:System.Web.SessionState.SessionStateStoreProviderBase> class to store session data, you can either use the <xref:System.Web.SessionState.SessionStateItemCollection> class to manage the stored objects or implement the ISessionStateItemCollection interface on your own collection manager.       If you implement the ISessionStateItemCollection interface, you must also create a class that inherits the <xref:System.Web.SessionState.SessionStateStoreProviderBase> class in order to make use of your ISessionStateItemCollection implementation to manage session variables.       An ISessionStateItemCollection implementation must also implement the members of the <xref:System.Collections.ICollection> interface.","pos":[0,1089],"nodes":[{"content":"The ISessionStateItemCollection interface defines the collection of session items exposed to application code by the &lt;xref:System.Web.SessionState.HttpSessionStateContainer&gt; class.","pos":[0,180],"source":"The ISessionStateItemCollection interface defines the collection of session items exposed to application code by the <xref:System.Web.SessionState.HttpSessionStateContainer> class."},{"content":"The ASP.NET implementation of the ISessionStateItemCollection interface is the &lt;xref:System.Web.SessionState.SessionStateItemCollection&gt; class.","pos":[187,330],"source":"       The ASP.NET implementation of the ISessionStateItemCollection interface is the <xref:System.Web.SessionState.SessionStateItemCollection> class."},{"content":"If you create a class derived from the &lt;xref:System.Web.SessionState.SessionStateStoreProviderBase&gt; class to store session data, you can either use the &lt;xref:System.Web.SessionState.SessionStateItemCollection&gt; class to manage the stored objects or implement the ISessionStateItemCollection interface on your own collection manager.","pos":[337,668],"source":"       If you create a class derived from the <xref:System.Web.SessionState.SessionStateStoreProviderBase> class to store session data, you can either use the <xref:System.Web.SessionState.SessionStateItemCollection> class to manage the stored objects or implement the ISessionStateItemCollection interface on your own collection manager."},{"content":"If you implement the ISessionStateItemCollection interface, you must also create a class that inherits the &lt;xref:System.Web.SessionState.SessionStateStoreProviderBase&gt; class in order to make use of your ISessionStateItemCollection implementation to manage session variables.","pos":[675,949],"source":"       If you implement the ISessionStateItemCollection interface, you must also create a class that inherits the <xref:System.Web.SessionState.SessionStateStoreProviderBase> class in order to make use of your ISessionStateItemCollection implementation to manage session variables."},{"content":"An ISessionStateItemCollection implementation must also implement the members of the &lt;xref:System.Collections.ICollection&gt; interface.","pos":[956,1089],"source":"       An ISessionStateItemCollection implementation must also implement the members of the <xref:System.Collections.ICollection> interface."}]}]},{"pos":[3050,3112],"content":"Removes all values and keys from the session-state collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes all values and keys from the session-state collection.","pos":[0,62]}]},{"pos":[3124,3386],"content":"In implementing the Clear method, you should set the &lt;xref:System.Web.SessionState.ISessionStateItemCollection.Dirty%2A&gt; property to <ph id=\"ph1\">`true`</ph> to indicatethatvalues in the &lt;xref:System.Web.SessionState.ISessionStateItemCollection&gt; implementation have been modified.","needQuote":true,"needEscape":true,"extradata":"MT","source":"In implementing the Clear method, you should set the <xref:System.Web.SessionState.ISessionStateItemCollection.Dirty%2A> property to `true` to indicatethatvalues in the <xref:System.Web.SessionState.ISessionStateItemCollection> implementation have been modified."},{"pos":[4534,4616],"content":"Gets or sets a value indicating whether the collection has been marked as changed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the collection has been marked as changed.","pos":[0,82]}]},{"pos":[4629,5344],"content":"The Dirty property is used by the <xref:System.Web.SessionState.SessionStateModule> to determine whether the values in an <xref:System.Web.SessionState.ISessionStateItemCollection> implementation have been modified.       In implementing the <xref:System.Web.SessionState.ISessionStateItemCollection> interface, you should initialize the Dirty property as `false` and set the <xref:System.Web.SessionState.SessionStateItemCollection.Dirty%2A> property to `true` in the implementations of the <xref:System.Web.SessionState.ISessionStateItemCollection.Remove%2A>, <xref:System.Web.SessionState.ISessionStateItemCollection.RemoveAt%2A>, or <xref:System.Web.SessionState.ISessionStateItemCollection.Clear%2A> methods.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Dirty property is used by the &lt;xref:System.Web.SessionState.SessionStateModule&gt; to determine whether the values in an &lt;xref:System.Web.SessionState.ISessionStateItemCollection&gt; implementation have been modified.","pos":[0,215],"source":"The Dirty property is used by the <xref:System.Web.SessionState.SessionStateModule> to determine whether the values in an <xref:System.Web.SessionState.ISessionStateItemCollection> implementation have been modified."},{"content":"In implementing the &lt;xref:System.Web.SessionState.ISessionStateItemCollection&gt; interface, you should initialize the Dirty property as <ph id=\"ph1\">`false`</ph> and set the &lt;xref:System.Web.SessionState.SessionStateItemCollection.Dirty%2A&gt; property to <ph id=\"ph2\">`true`</ph> in the implementations of the &lt;xref:System.Web.SessionState.ISessionStateItemCollection.Remove%2A&gt;, &lt;xref:System.Web.SessionState.ISessionStateItemCollection.RemoveAt%2A&gt;, or &lt;xref:System.Web.SessionState.ISessionStateItemCollection.Clear%2A&gt; methods.","pos":[222,713],"source":"       In implementing the <xref:System.Web.SessionState.ISessionStateItemCollection> interface, you should initialize the Dirty property as `false` and set the <xref:System.Web.SessionState.SessionStateItemCollection.Dirty%2A> property to `true` in the implementations of the <xref:System.Web.SessionState.ISessionStateItemCollection.Remove%2A>, <xref:System.Web.SessionState.ISessionStateItemCollection.RemoveAt%2A>, or <xref:System.Web.SessionState.ISessionStateItemCollection.Clear%2A> methods."}]},{"pos":[6048,6290],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Web.SessionState.SessionStateItemCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> contents have been changed; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Web.SessionState.SessionStateItemCollection\"></xref> contents have been changed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6833,6891],"content":"Gets or sets a value in the collection by numerical index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value in the collection by numerical index.","pos":[0,58]}]},{"pos":[7726,7777],"content":"The numerical index of the value in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The numerical index of the value in the collection.","pos":[0,51]}]},{"pos":[7835,7893],"content":"The value in the collection stored at the specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value in the collection stored at the specified index.","pos":[0,58]}]},{"pos":[8440,8487],"content":"Gets or sets a value in the collection by name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value in the collection by name.","pos":[0,47]}]},{"pos":[9326,9370],"content":"The key name of the value in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key name of the value in the collection.","pos":[0,44]}]},{"pos":[9428,9480],"content":"The value in the collection with the specified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value in the collection with the specified name.","pos":[0,52]}]},{"pos":[9973,10053],"content":"Gets a collection of the variable names for all values stored in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of the variable names for all values stored in the collection.","pos":[0,80]}]},{"pos":[10976,11096],"content":"The <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> that contains all the collection keys.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection&gt; that contains all the collection keys.","pos":[0,120],"source":"The <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> that contains all the collection keys."}]},{"pos":[11651,11687],"content":"Deletes an item from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Deletes an item from the collection.","pos":[0,36]}]},{"pos":[11700,12170],"content":"In implementing the Remove method, you should set the <xref:System.Web.SessionState.ISessionStateItemCollection.Dirty%2A> property to `true` to indicatevalues in the <xref:System.Web.SessionState.ISessionStateItemCollection> implementation have been modified.       If the <xref:System.Web.SessionState.ISessionStateItemCollection> implementation does not contain an element with the specified `name`, the collection should remain unchanged and no exception be thrown.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"In implementing the Remove method, you should set the &lt;xref:System.Web.SessionState.ISessionStateItemCollection.Dirty%2A&gt; property to <ph id=\"ph1\">`true`</ph> to indicatevalues in the &lt;xref:System.Web.SessionState.ISessionStateItemCollection&gt; implementation have been modified.","pos":[0,259],"source":"In implementing the Remove method, you should set the <xref:System.Web.SessionState.ISessionStateItemCollection.Dirty%2A> property to `true` to indicatevalues in the <xref:System.Web.SessionState.ISessionStateItemCollection> implementation have been modified."},{"content":"If the &lt;xref:System.Web.SessionState.ISessionStateItemCollection&gt; implementation does not contain an element with the specified <ph id=\"ph1\">`name`</ph>, the collection should remain unchanged and no exception be thrown.","pos":[266,468],"source":"       If the <xref:System.Web.SessionState.ISessionStateItemCollection> implementation does not contain an element with the specified `name`, the collection should remain unchanged and no exception be thrown."}]},{"pos":[12890,12941],"content":"The name of the item to delete from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the item to delete from the collection.","pos":[0,51]}]},{"pos":[13503,13560],"content":"Deletes an item at a specified index from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Deletes an item at a specified index from the collection.","pos":[0,57]}]},{"pos":[13573,14086],"content":"In implementing the RemoveAt method, you should set the <xref:System.Web.SessionState.ISessionStateItemCollection.Dirty%2A> property to `true` to indicatevalues in the <xref:System.Web.SessionState.ISessionStateItemCollection> implementation have been modified.       Your implementation of the RemoveAt method should throw an <xref:System.ArgumentOutOfRangeException> exception if `index` is less than zero or is equal to or greater than <xref:System.Collections.ICollection.Count%2A?displayProperty=fullName>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"In implementing the RemoveAt method, you should set the &lt;xref:System.Web.SessionState.ISessionStateItemCollection.Dirty%2A&gt; property to <ph id=\"ph1\">`true`</ph> to indicatevalues in the &lt;xref:System.Web.SessionState.ISessionStateItemCollection&gt; implementation have been modified.","pos":[0,261],"source":"In implementing the RemoveAt method, you should set the <xref:System.Web.SessionState.ISessionStateItemCollection.Dirty%2A> property to `true` to indicatevalues in the <xref:System.Web.SessionState.ISessionStateItemCollection> implementation have been modified."},{"content":"Your implementation of the RemoveAt method should throw an &lt;xref:System.ArgumentOutOfRangeException&gt; exception if <ph id=\"ph1\">`index`</ph> is less than zero or is equal to or greater than &lt;xref:System.Collections.ICollection.Count%2A?displayProperty=fullName&gt;.","pos":[268,511],"source":"       Your implementation of the RemoveAt method should throw an <xref:System.ArgumentOutOfRangeException> exception if `index` is less than zero or is equal to or greater than <xref:System.Collections.ICollection.Count%2A?displayProperty=fullName>."}]},{"pos":[14808,14860],"content":"The index of the item to remove from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the item to remove from the collection.","pos":[0,52]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.SessionState.ISessionStateItemCollection\n  id: ISessionStateItemCollection\n  children:\n  - System.Web.SessionState.ISessionStateItemCollection.Clear\n  - System.Web.SessionState.ISessionStateItemCollection.Dirty\n  - System.Web.SessionState.ISessionStateItemCollection.Item(System.Int32)\n  - System.Web.SessionState.ISessionStateItemCollection.Item(System.String)\n  - System.Web.SessionState.ISessionStateItemCollection.Keys\n  - System.Web.SessionState.ISessionStateItemCollection.Remove(System.String)\n  - System.Web.SessionState.ISessionStateItemCollection.RemoveAt(System.Int32)\n  langs:\n  - csharp\n  name: ISessionStateItemCollection\n  nameWithType: ISessionStateItemCollection\n  fullName: System.Web.SessionState.ISessionStateItemCollection\n  type: Interface\n  summary: Defines the contract for the collection used by ASP.NET session state to manage session.\n  remarks: \"The ISessionStateItemCollection interface defines the collection of session items exposed to application code by the <xref:System.Web.SessionState.HttpSessionStateContainer> class.  \\n  \\n The ASP.NET implementation of the ISessionStateItemCollection interface is the <xref:System.Web.SessionState.SessionStateItemCollection> class.  \\n  \\n If you create a class derived from the <xref:System.Web.SessionState.SessionStateStoreProviderBase> class to store session data, you can either use the <xref:System.Web.SessionState.SessionStateItemCollection> class to manage the stored objects or implement the ISessionStateItemCollection interface on your own collection manager.  \\n  \\n If you implement the ISessionStateItemCollection interface, you must also create a class that inherits the <xref:System.Web.SessionState.SessionStateStoreProviderBase> class in order to make use of your ISessionStateItemCollection implementation to manage session variables.  \\n  \\n An ISessionStateItemCollection implementation must also implement the members of the <xref:System.Collections.ICollection> interface.\"\n  example:\n  - \"The following code example implements the ISessionStateItemCollection and uses the <xref:System.Collections.SortedList> class to store session-state variable names and values.  \\n  \\n [!code-cs[System.Web.SessionState.ISessionStateItemCollection#1](~/add/codesnippet/csharp/t-system.web.sessionstat_2_1.cs)]\\n [!code-vb[System.Web.SessionState.ISessionStateItemCollection#1](~/add/codesnippet/visualbasic/t-system.web.sessionstat_2_1.vb)]\"\n  syntax:\n    content: 'public interface ISessionStateItemCollection : System.Collections.ICollection'\n  implements:\n  - System.Collections.ICollection\n  platform:\n  - net462\n- uid: System.Web.SessionState.ISessionStateItemCollection.Clear\n  id: Clear\n  parent: System.Web.SessionState.ISessionStateItemCollection\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: ISessionStateItemCollection.Clear()\n  fullName: System.Web.SessionState.ISessionStateItemCollection.Clear()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Removes all values and keys from the session-state collection.\n  remarks: In implementing the Clear method, you should set the <xref:System.Web.SessionState.ISessionStateItemCollection.Dirty%2A> property to `true` to indicatethatvalues in the <xref:System.Web.SessionState.ISessionStateItemCollection> implementation have been modified.\n  example:\n  - \"The following code example shows an implementation of the Clear method. For an example of a complete implementation of the <xref:System.Web.SessionState.ISessionStateItemCollection> interface, see the example provided for the <xref:System.Web.SessionState.ISessionStateItemCollection> interface overview.  \\n  \\n [!code-cs[System.Web.SessionState.ISessionStateItemCollection#6](~/add/codesnippet/csharp/m-system.web.sessionstat_2_1.cs)]\\n [!code-vb[System.Web.SessionState.ISessionStateItemCollection#6](~/add/codesnippet/visualbasic/m-system.web.sessionstat_2_1.vb)]\"\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Web.SessionState.ISessionStateItemCollection.Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.ISessionStateItemCollection.Dirty\n  id: Dirty\n  parent: System.Web.SessionState.ISessionStateItemCollection\n  langs:\n  - csharp\n  name: Dirty\n  nameWithType: ISessionStateItemCollection.Dirty\n  fullName: System.Web.SessionState.ISessionStateItemCollection.Dirty\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Gets or sets a value indicating whether the collection has been marked as changed.\n  remarks: \"The Dirty property is used by the <xref:System.Web.SessionState.SessionStateModule> to determine whether the values in an <xref:System.Web.SessionState.ISessionStateItemCollection> implementation have been modified.  \\n  \\n In implementing the <xref:System.Web.SessionState.ISessionStateItemCollection> interface, you should initialize the Dirty property as `false` and set the <xref:System.Web.SessionState.SessionStateItemCollection.Dirty%2A> property to `true` in the implementations of the <xref:System.Web.SessionState.ISessionStateItemCollection.Remove%2A>, <xref:System.Web.SessionState.ISessionStateItemCollection.RemoveAt%2A>, or <xref:System.Web.SessionState.ISessionStateItemCollection.Clear%2A> methods.\"\n  example:\n  - \"The following code example shows an implementation of the Dirty property. For an example of a complete implementation of the <xref:System.Web.SessionState.ISessionStateItemCollection> interface, see the example provided for the <xref:System.Web.SessionState.ISessionStateItemCollection> interface overview.  \\n  \\n [!code-cs[System.Web.SessionState.ISessionStateItemCollection#2](~/add/codesnippet/csharp/p-system.web.sessionstat_14_1.cs)]\\n [!code-vb[System.Web.SessionState.ISessionStateItemCollection#2](~/add/codesnippet/visualbasic/p-system.web.sessionstat_14_1.vb)]\"\n  syntax:\n    content: public bool Dirty { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Web.SessionState.SessionStateItemCollection\"></xref> contents have been changed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.SessionState.ISessionStateItemCollection.Dirty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.ISessionStateItemCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Web.SessionState.ISessionStateItemCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: ISessionStateItemCollection.Item(Int32)\n  fullName: System.Web.SessionState.ISessionStateItemCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Gets or sets a value in the collection by numerical index.\n  remarks: ''\n  example:\n  - \"The following code example shows an implementation of the Item property that uses a <xref:System.Collections.SortedList> to store session-variable names and values. For an example of a complete implementation of the <xref:System.Web.SessionState.ISessionStateItemCollection> interface, see the example provided in the <xref:System.Web.SessionState.ISessionStateItemCollection> interface overview.  \\n  \\n [!code-cs[System.Web.SessionState.ISessionStateItemCollection#3](~/add/codesnippet/csharp/p-system.web.sessionstat_3_1.cs)]\\n [!code-vb[System.Web.SessionState.ISessionStateItemCollection#3](~/add/codesnippet/visualbasic/p-system.web.sessionstat_3_1.vb)]\"\n  syntax:\n    content: public object this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The numerical index of the value in the collection.\n    return:\n      type: System.Object\n      description: The value in the collection stored at the specified index.\n  overload: System.Web.SessionState.ISessionStateItemCollection.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.ISessionStateItemCollection.Item(System.String)\n  id: Item(System.String)\n  parent: System.Web.SessionState.ISessionStateItemCollection\n  langs:\n  - csharp\n  name: Item(String)\n  nameWithType: ISessionStateItemCollection.Item(String)\n  fullName: System.Web.SessionState.ISessionStateItemCollection.Item(String)\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Gets or sets a value in the collection by name.\n  remarks: ''\n  example:\n  - \"The following code example shows an implementation of the Item property that uses a <xref:System.Collections.SortedList> to store session-variable names and values. For an example of a complete implementation of the <xref:System.Web.SessionState.ISessionStateItemCollection> interface, see the example provided in the <xref:System.Web.SessionState.ISessionStateItemCollection> interface overview.  \\n  \\n [!code-cs[System.Web.SessionState.ISessionStateItemCollection#4](~/add/codesnippet/csharp/p-system.web.sessionstat_18_1.cs)]\\n [!code-vb[System.Web.SessionState.ISessionStateItemCollection#4](~/add/codesnippet/visualbasic/p-system.web.sessionstat_18_1.vb)]\"\n  syntax:\n    content: public object this[string name] { get; set; }\n    parameters:\n    - id: name\n      type: System.String\n      description: The key name of the value in the collection.\n    return:\n      type: System.Object\n      description: The value in the collection with the specified name.\n  overload: System.Web.SessionState.ISessionStateItemCollection.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.ISessionStateItemCollection.Keys\n  id: Keys\n  parent: System.Web.SessionState.ISessionStateItemCollection\n  langs:\n  - csharp\n  name: Keys\n  nameWithType: ISessionStateItemCollection.Keys\n  fullName: System.Web.SessionState.ISessionStateItemCollection.Keys\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Gets a collection of the variable names for all values stored in the collection.\n  remarks: ''\n  example:\n  - \"The following code example shows an implementation of the Keys property that uses a <xref:System.Collections.SortedList> to store session-variable names and values. For an example of a complete implementation of the <xref:System.Web.SessionState.ISessionStateItemCollection> interface, see the example provided in the <xref:System.Web.SessionState.ISessionStateItemCollection> interface overview.  \\n  \\n [!code-cs[System.Web.SessionState.ISessionStateItemCollection#5](~/add/codesnippet/csharp/p-system.web.sessionstat_21_1.cs)]\\n [!code-vb[System.Web.SessionState.ISessionStateItemCollection#5](~/add/codesnippet/visualbasic/p-system.web.sessionstat_21_1.vb)]\"\n  syntax:\n    content: public System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get; }\n    return:\n      type: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\n      description: The <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> that contains all the collection keys.\n  overload: System.Web.SessionState.ISessionStateItemCollection.Keys*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.ISessionStateItemCollection.Remove(System.String)\n  id: Remove(System.String)\n  parent: System.Web.SessionState.ISessionStateItemCollection\n  langs:\n  - csharp\n  name: Remove(String)\n  nameWithType: ISessionStateItemCollection.Remove(String)\n  fullName: System.Web.SessionState.ISessionStateItemCollection.Remove(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Deletes an item from the collection.\n  remarks: \"In implementing the Remove method, you should set the <xref:System.Web.SessionState.ISessionStateItemCollection.Dirty%2A> property to `true` to indicatevalues in the <xref:System.Web.SessionState.ISessionStateItemCollection> implementation have been modified.  \\n  \\n If the <xref:System.Web.SessionState.ISessionStateItemCollection> implementation does not contain an element with the specified `name`, the collection should remain unchanged and no exception be thrown.\"\n  example:\n  - \"The following code example shows an implementation of the Remove method. For an example of a complete implementation of the <xref:System.Web.SessionState.ISessionStateItemCollection> interface, see the example provided in the <xref:System.Web.SessionState.ISessionStateItemCollection> interface overview.  \\n  \\n [!code-cs[System.Web.SessionState.ISessionStateItemCollection#7](~/add/codesnippet/csharp/m-system.web.sessionstat_3_1.cs)]\\n [!code-vb[System.Web.SessionState.ISessionStateItemCollection#7](~/add/codesnippet/visualbasic/m-system.web.sessionstat_3_1.vb)]\"\n  syntax:\n    content: public void Remove (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the item to delete from the collection.\n  overload: System.Web.SessionState.ISessionStateItemCollection.Remove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.SessionState.ISessionStateItemCollection.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Web.SessionState.ISessionStateItemCollection\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: ISessionStateItemCollection.RemoveAt(Int32)\n  fullName: System.Web.SessionState.ISessionStateItemCollection.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Deletes an item at a specified index from the collection.\n  remarks: \"In implementing the RemoveAt method, you should set the <xref:System.Web.SessionState.ISessionStateItemCollection.Dirty%2A> property to `true` to indicatevalues in the <xref:System.Web.SessionState.ISessionStateItemCollection> implementation have been modified.  \\n  \\n Your implementation of the RemoveAt method should throw an <xref:System.ArgumentOutOfRangeException> exception if `index` is less than zero or is equal to or greater than <xref:System.Collections.ICollection.Count%2A?displayProperty=fullName>.\"\n  example:\n  - \"The following code example shows an implementation of the RemoveAt method. For an example of a complete implementation of the <xref:System.Web.SessionState.ISessionStateItemCollection> interface, see the example provided in the <xref:System.Web.SessionState.ISessionStateItemCollection> interface overview.  \\n  \\n [!code-cs[System.Web.SessionState.ISessionStateItemCollection#8](~/add/codesnippet/csharp/m-system.web.sessionstat_9_1.cs)]\\n [!code-vb[System.Web.SessionState.ISessionStateItemCollection#8](~/add/codesnippet/visualbasic/m-system.web.sessionstat_9_1.vb)]\"\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index of the item to remove from the collection.\n  overload: System.Web.SessionState.ISessionStateItemCollection.RemoveAt*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.SessionState.ISessionStateItemCollection.Clear\n  parent: System.Web.SessionState.ISessionStateItemCollection\n  isExternal: false\n  name: Clear()\n  nameWithType: ISessionStateItemCollection.Clear()\n  fullName: System.Web.SessionState.ISessionStateItemCollection.Clear()\n- uid: System.Web.SessionState.ISessionStateItemCollection.Dirty\n  parent: System.Web.SessionState.ISessionStateItemCollection\n  isExternal: false\n  name: Dirty\n  nameWithType: ISessionStateItemCollection.Dirty\n  fullName: System.Web.SessionState.ISessionStateItemCollection.Dirty\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.SessionState.ISessionStateItemCollection.Item(System.Int32)\n  parent: System.Web.SessionState.ISessionStateItemCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: ISessionStateItemCollection.Item(Int32)\n  fullName: System.Web.SessionState.ISessionStateItemCollection.Item(Int32)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.SessionState.ISessionStateItemCollection.Item(System.String)\n  parent: System.Web.SessionState.ISessionStateItemCollection\n  isExternal: false\n  name: Item(String)\n  nameWithType: ISessionStateItemCollection.Item(String)\n  fullName: System.Web.SessionState.ISessionStateItemCollection.Item(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.SessionState.ISessionStateItemCollection.Keys\n  parent: System.Web.SessionState.ISessionStateItemCollection\n  isExternal: false\n  name: Keys\n  nameWithType: ISessionStateItemCollection.Keys\n  fullName: System.Web.SessionState.ISessionStateItemCollection.Keys\n- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: NameObjectCollectionBase+KeysCollection\n  nameWithType: NameObjectCollectionBase+KeysCollection\n  fullName: System.Collections.Specialized.NameObjectCollectionBase+KeysCollection\n- uid: System.Web.SessionState.ISessionStateItemCollection.Remove(System.String)\n  parent: System.Web.SessionState.ISessionStateItemCollection\n  isExternal: false\n  name: Remove(String)\n  nameWithType: ISessionStateItemCollection.Remove(String)\n  fullName: System.Web.SessionState.ISessionStateItemCollection.Remove(String)\n- uid: System.Web.SessionState.ISessionStateItemCollection.RemoveAt(System.Int32)\n  parent: System.Web.SessionState.ISessionStateItemCollection\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: ISessionStateItemCollection.RemoveAt(Int32)\n  fullName: System.Web.SessionState.ISessionStateItemCollection.RemoveAt(Int32)\n- uid: System.Web.SessionState.ISessionStateItemCollection.Clear*\n  parent: System.Web.SessionState.ISessionStateItemCollection\n  isExternal: false\n  name: Clear\n  nameWithType: ISessionStateItemCollection.Clear\n- uid: System.Web.SessionState.ISessionStateItemCollection.Dirty*\n  parent: System.Web.SessionState.ISessionStateItemCollection\n  isExternal: false\n  name: Dirty\n  nameWithType: ISessionStateItemCollection.Dirty\n- uid: System.Web.SessionState.ISessionStateItemCollection.Item*\n  parent: System.Web.SessionState.ISessionStateItemCollection\n  isExternal: false\n  name: Item\n  nameWithType: ISessionStateItemCollection.Item\n- uid: System.Web.SessionState.ISessionStateItemCollection.Keys*\n  parent: System.Web.SessionState.ISessionStateItemCollection\n  isExternal: false\n  name: Keys\n  nameWithType: ISessionStateItemCollection.Keys\n- uid: System.Web.SessionState.ISessionStateItemCollection.Remove*\n  parent: System.Web.SessionState.ISessionStateItemCollection\n  isExternal: false\n  name: Remove\n  nameWithType: ISessionStateItemCollection.Remove\n- uid: System.Web.SessionState.ISessionStateItemCollection.RemoveAt*\n  parent: System.Web.SessionState.ISessionStateItemCollection\n  isExternal: false\n  name: RemoveAt\n  nameWithType: ISessionStateItemCollection.RemoveAt\n"}