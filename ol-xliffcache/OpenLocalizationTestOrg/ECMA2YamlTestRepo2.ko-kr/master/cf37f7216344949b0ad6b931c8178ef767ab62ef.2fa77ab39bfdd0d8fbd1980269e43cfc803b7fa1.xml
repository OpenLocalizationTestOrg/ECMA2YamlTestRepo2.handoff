{"nodes":[{"pos":[611,714],"content":"Specifies the Active Directory Lightweight Directory (AD LDS) Services replication authentication mode.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the Active Directory Lightweight Directory (AD LDS) Services replication authentication mode.","pos":[0,103]}]},{"pos":[1358,1505],"content":"Kerberos authentication, using service principal names (SPNs), required. If Kerberos authentication fails, the AD LDS instances will not replicate.","needQuote":true,"needEscape":true,"nodes":[{"content":"Kerberos authentication, using service principal names (SPNs), required. If Kerberos authentication fails, the AD LDS instances will not replicate.","pos":[0,147],"nodes":[{"content":"Kerberos authentication, using service principal names (SPNs), required.","pos":[0,72]},{"content":"If Kerberos authentication fails, the AD LDS instances will not replicate.","pos":[73,147]}]}]},{"pos":[1659,1671],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2186,2351],"content":"Kerberos authentication (using SPNs) is attempted first. If Kerberos fails, NTLM authentication is attempted. If NTLM fails, the AD LDS instances will not replicate.","needQuote":true,"needEscape":true,"nodes":[{"content":"Kerberos authentication (using SPNs) is attempted first. If Kerberos fails, NTLM authentication is attempted. If NTLM fails, the AD LDS instances will not replicate.","pos":[0,165],"nodes":[{"content":"Kerberos authentication (using SPNs) is attempted first.","pos":[0,56]},{"content":"If Kerberos fails, NTLM authentication is attempted.","pos":[57,109]},{"content":"If NTLM fails, the AD LDS instances will not replicate.","pos":[110,165]}]}]},{"pos":[2494,2506],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3076,3195],"content":"All AD LDS instances in the configuration set use an identical account name and password as the AD LDS service account.","needQuote":true,"needEscape":true,"nodes":[{"content":"All AD LDS instances in the configuration set use an identical account name and password as the AD LDS service account.","pos":[0,119]}]},{"pos":[3349,3361],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel\n  id: ReplicationSecurityLevel\n  children:\n  - System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.MutualAuthentication\n  - System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.Negotiate\n  - System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.NegotiatePassThrough\n  langs:\n  - csharp\n  name: ReplicationSecurityLevel\n  nameWithType: ReplicationSecurityLevel\n  fullName: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel\n  type: Enum\n  summary: Specifies the Active Directory Lightweight Directory (AD LDS) Services replication authentication mode.\n  syntax:\n    content: public enum ReplicationSecurityLevel\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.MutualAuthentication\n  id: MutualAuthentication\n  parent: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel\n  langs:\n  - csharp\n  name: MutualAuthentication\n  nameWithType: ReplicationSecurityLevel.MutualAuthentication\n  fullName: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.MutualAuthentication\n  type: Field\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Kerberos authentication, using service principal names (SPNs), required. If Kerberos authentication fails, the AD LDS instances will not replicate.\n  syntax:\n    content: MutualAuthentication\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.Negotiate\n  id: Negotiate\n  parent: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel\n  langs:\n  - csharp\n  name: Negotiate\n  nameWithType: ReplicationSecurityLevel.Negotiate\n  fullName: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.Negotiate\n  type: Field\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Kerberos authentication (using SPNs) is attempted first. If Kerberos fails, NTLM authentication is attempted. If NTLM fails, the AD LDS instances will not replicate.\n  syntax:\n    content: Negotiate\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.NegotiatePassThrough\n  id: NegotiatePassThrough\n  parent: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel\n  langs:\n  - csharp\n  name: NegotiatePassThrough\n  nameWithType: ReplicationSecurityLevel.NegotiatePassThrough\n  fullName: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.NegotiatePassThrough\n  type: Field\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: All AD LDS instances in the configuration set use an identical account name and password as the AD LDS service account.\n  syntax:\n    content: NegotiatePassThrough\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.MutualAuthentication\n  parent: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel\n  isExternal: false\n  name: MutualAuthentication\n  nameWithType: ReplicationSecurityLevel.MutualAuthentication\n  fullName: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.MutualAuthentication\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ReplicationSecurityLevel\n  nameWithType: ReplicationSecurityLevel\n  fullName: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.Negotiate\n  parent: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel\n  isExternal: false\n  name: Negotiate\n  nameWithType: ReplicationSecurityLevel.Negotiate\n  fullName: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.Negotiate\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.NegotiatePassThrough\n  parent: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel\n  isExternal: false\n  name: NegotiatePassThrough\n  nameWithType: ReplicationSecurityLevel.NegotiatePassThrough\n  fullName: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.NegotiatePassThrough\n"}