{"nodes":[{"pos":[1900,2006],"content":"Represents a data field that is displayed in a data-bound control that uses ASP.NET Dynamic Data features.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a data field that is displayed in a data-bound control that uses ASP.NET Dynamic Data features.","pos":[0,106]}]},{"pos":[2019,8811],"content":"In this topic:      -   [Introduction](#introduction)      -   [Declarative Syntax](#declarative_syntax)      <a name=\"introduction\"></a>    ## Introduction    The DynamicField class is used by data-bound controls, such as the <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls, to display a field value that uses ASP.NET Dynamic Data features in custom pages.       The DynamicField class provides functionality that resembles that of the <xref:System.Web.UI.WebControls.BoundField> class. However, because a DynamicField object is used in Dynamic Data applications, you can take advantage of the following Dynamic Data features:      -   Automatically rendering the proper control for a field by using field templates, based on the data type. The field templates can be globally modified for the entire application.      -   Providing built-in data validation based on the database schema. You can also add validation types by customizing the data model.      -   Customizing data rendering for individual fields by using attributes in the data model or by using the <xref:System.Web.DynamicData.DynamicField.UIHint%2A> property.       The DynamicField object renders each field by using a `DynamicControl` control. To specify the data field to display in a DynamicField object, set the <xref:System.Web.DynamicData.DynamicField.DataField%2A> property to the field name. You can apply a custom formatting string to the field value by setting the <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> property. By default the formatting string is applied to field values only when the data-bound control is in read-only mode. To apply the formatting string to values displayed while the data-bound control is in edit mode, set the <xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A> property to `true`. If a field value is `null`, you can display a custom caption by setting the <xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A> property. The DynamicField object can also automatically convert empty string (\"\") field values to null values by setting the <xref:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull%2A> property to `true`.      <a name=\"declarative_syntax\"></a>    ## Declarative Syntax      ```   <asp:DynamicField        AccessibleHeaderText=\"string\"            ApplyFormatInEditMode=\"true|false\"         ControlStyle-BackColor=\"color name|#dddddd\"        ControlStyle-BorderColor=\"color name|#dddddd\"        ControlStyle-BorderStyle=\"NotSet|None|Dotted|Dashed|Solid|Double|Groove|          Ridge|Inset|Outset\"         ControlStyle-BorderWidth=\"size\"         ControlStyle-CssClass=\"string\"        ControlStyle-Font-Bold=\"true|false\"        ControlStyle-Font-Italic=\"true|false\"        ControlStyle-Font-Names=\"string\"        ControlStyle-Font-Overline=\"true|false\"         ControlStyle-Font-Size=\"string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large\"        ControlStyle-Font-Strikeout=\"true|false\"          ControlStyle-Font-Underline=\"true|false\"          ControlStyle-ForeColor=\"color name|#dddddd\"          ControlStyle-Height=\"size\"        ControlStyle-Width=\"size\"        ConvertEmptyStringToNull=\"true|false\"         DataField=\"string\"        DataFormatString=\"string\"          FooterStyle-BackColor=\"color name|#dddddd\"        FooterStyle-BorderColor=\"color name|#dddddd\"        FooterStyle-BorderStyle=\"NotSet|None|Dotted|Dashed|Solid|Double|Groove|          Ridge|Inset|Outset\"         FooterStyle-BorderWidth=\"size\"         FooterStyle-CssClass=\"string\"        FooterStyle-Font-Bold=\"true|false\"        FooterStyle-Font-Italic=\"true|false\"        FooterStyle-Font-Names=\"string\"        FooterStyle-Font-Overline=\"true|false\"         FooterStyle-Font-Size=\"string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large\"        FooterStyle-Font-Strikeout=\"true|false\"          FooterStyle-Font-Underline=\"true|false\"          FooterStyle-ForeColor=\"color name|#dddddd\"          FooterStyle-Height=\"size\"        FooterStyle-Width=\"size\"        FooterStyle-HorizontalAlign=\"Center|Justify|Left|NotSet|Right\"        FooterStyle-VerticalAlign=\"Bottom|Middle|NotSet|Top\"        FooterStyle-Wrap=\"true|false\"          HeaderImageUrl=\"uri\"       HeaderStyle-BackColor=\"color name|#dddddd\"        HeaderStyle-BorderColor=\"color name|#dddddd\"        HeaderStyle-BorderStyle=\"NotSet|None|Dotted|Dashed|Solid|Double|Groove|          Ridge|Inset|Outset\"         HeaderStyle-BorderWidth=\"size\"         HeaderStyle-CssClass=\"string\"        HeaderStyle-Font-Bold=\"true|false\"        HeaderStyle-Font-Italic=\"true|false\"        HeaderStyle-Font-Names=\"string\"        HeaderStyle-Font-Overline=\"true|false\"         HeaderStyle-Font-Size=\"string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large\"        HeaderStyle-Font-Strikeout=\"true|false\"          HeaderStyle-Font-Underline=\"true|false\"          HeaderStyle-ForeColor=\"color name|#dddddd\"          HeaderStyle-Height=\"size\"        HeaderStyle-Width=\"size\"        HeaderStyle-HorizontalAlign=\"Center|Justify|Left|NotSet|Right\"        HeaderStyle-VerticalAlign=\"Bottom|Middle|NotSet|Top\"        HeaderStyle-Wrap=\"true|false\"          HeaderText=\"string\"       InsertVisible=\"true|false\"           ItemStyle-BackColor=\"color name|#dddddd\"        ItemStyle-BorderColor=\"color name|#dddddd\"        ItemStyle-BorderStyle=\"NotSet|None|Dotted|Dashed|Solid|Double|Groove|          Ridge|Inset|Outset\"         ItemStyle-BorderWidth=\"size\"         ItemStyle-CssClass=\"string\"        ItemStyle-Font-Bold=\"true|false\"        ItemStyle-Font-Italic=\"true|false\"        ItemStyle-Font-Names=\"string\"        ItemStyle-Font-Overline=\"true|false\"         ItemStyle-Font-Size=\"string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large\"        ItemStyle-Font-Strikeout=\"true|false\"          ItemStyle-Font-Underline=\"true|false\"          ItemStyle-ForeColor=\"color name|#dddddd\"          ItemStyle-Height=\"size\"        ItemStyle-Width=\"size\"        ItemStyle-HorizontalAlign=\"Center|Justify|Left|NotSet|Right\"        ItemStyle-VerticalAlign=\"Bottom|Middle|NotSet|Top\"        ItemStyle-Wrap=\"true|false\"          NullDisplayText=\"string\"        ReadOnly=\"true|false\"         ShowHeader=\"true|false\"         SortExpression=\"string\"        UIHint=\"string\"        ValidationGroup=\"string\"        Visible=\"true|false\"        />   <asp:DynamicField />   ```","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"In this topic:      -   <bpt id=\"p1\">[</bpt>Introduction<ept id=\"p1\">](#introduction)</ept><ph id=\"ph1\">      -   </ph><bpt id=\"p2\">[</bpt>Declarative Syntax<ept id=\"p2\">](#declarative_syntax)</ept>      <bpt id=\"p3\">&lt;a name=\"introduction\"&gt;</bpt><ept id=\"p3\">&lt;/a&gt;</ept>    ## Introduction    The DynamicField class is used by data-bound controls, such as the &lt;xref:System.Web.UI.WebControls.GridView&gt; and &lt;xref:System.Web.UI.WebControls.DetailsView&gt; controls, to display a field value that uses ASP.NET Dynamic Data features in custom pages.","pos":[0,409],"source":"In this topic:      -   [Introduction](#introduction)      -   [Declarative Syntax](#declarative_syntax)      <a name=\"introduction\"></a>    ## Introduction    The DynamicField class is used by data-bound controls, such as the <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls, to display a field value that uses ASP.NET Dynamic Data features in custom pages."},{"content":"The DynamicField class provides functionality that resembles that of the &lt;xref:System.Web.UI.WebControls.BoundField&gt; class.","pos":[416,539],"source":"       The DynamicField class provides functionality that resembles that of the <xref:System.Web.UI.WebControls.BoundField> class."},{"content":"However, because a DynamicField object is used in Dynamic Data applications, you can take advantage of the following Dynamic Data features:      -   Automatically rendering the proper control for a field by using field templates, based on the data type.","pos":[540,793]},{"content":"The field templates can be globally modified for the entire application.","pos":[794,866]},{"content":"-   Providing built-in data validation based on the database schema.","pos":[872,940]},{"content":"You can also add validation types by customizing the data model.","pos":[941,1005]},{"content":"-   Customizing data rendering for individual fields by using attributes in the data model or by using the &lt;xref:System.Web.DynamicData.DynamicField.UIHint%2A&gt; property.","pos":[1011,1180],"source":"      -   Customizing data rendering for individual fields by using attributes in the data model or by using the <xref:System.Web.DynamicData.DynamicField.UIHint%2A> property."},{"content":"The DynamicField object renders each field by using a <ph id=\"ph1\">`DynamicControl`</ph> control.","pos":[1187,1266],"source":"       The DynamicField object renders each field by using a `DynamicControl` control."},{"content":"To specify the data field to display in a DynamicField object, set the &lt;xref:System.Web.DynamicData.DynamicField.DataField%2A&gt; property to the field name.","pos":[1267,1421],"source":" To specify the data field to display in a DynamicField object, set the <xref:System.Web.DynamicData.DynamicField.DataField%2A> property to the field name."},{"content":"You can apply a custom formatting string to the field value by setting the &lt;xref:System.Web.DynamicData.DynamicField.DataFormatString%2A&gt; property.","pos":[1422,1569],"source":" You can apply a custom formatting string to the field value by setting the <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> property."},{"content":"By default the formatting string is applied to field values only when the data-bound control is in read-only mode.","pos":[1570,1684]},{"content":"To apply the formatting string to values displayed while the data-bound control is in edit mode, set the &lt;xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A&gt; property to <ph id=\"ph1\">`true`</ph>.","pos":[1685,1877],"source":" To apply the formatting string to values displayed while the data-bound control is in edit mode, set the <xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A> property to `true`."},{"content":"If a field value is <ph id=\"ph1\">`null`</ph>, you can display a custom caption by setting the &lt;xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A&gt; property.","pos":[1878,2025],"source":" If a field value is `null`, you can display a custom caption by setting the <xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A> property."},{"content":"The DynamicField object can also automatically convert empty string (\"\") field values to null values by setting the &lt;xref:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull%2A&gt; property to <ph id=\"ph1\">`true`</ph>.","pos":[2026,2232],"source":" The DynamicField object can also automatically convert empty string (\"\") field values to null values by setting the <xref:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull%2A> property to `true`."},{"content":"<bpt id=\"p1\">&lt;a name=\"declarative_syntax\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Declarative Syntax      <ph id=\"ph1\">```   &lt;asp:DynamicField        AccessibleHeaderText=\"string\"            ApplyFormatInEditMode=\"true|false\"         ControlStyle-BackColor=\"color name|#dddddd\"        ControlStyle-BorderColor=\"color name|#dddddd\"        ControlStyle-BorderStyle=\"NotSet|None|Dotted|Dashed|Solid|Double|Groove|          Ridge|Inset|Outset\"         ControlStyle-BorderWidth=\"size\"         ControlStyle-CssClass=\"string\"        ControlStyle-Font-Bold=\"true|false\"        ControlStyle-Font-Italic=\"true|false\"        ControlStyle-Font-Names=\"string\"        ControlStyle-Font-Overline=\"true|false\"         ControlStyle-Font-Size=\"string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large\"        ControlStyle-Font-Strikeout=\"true|false\"          ControlStyle-Font-Underline=\"true|false\"          ControlStyle-ForeColor=\"color name|#dddddd\"          ControlStyle-Height=\"size\"        ControlStyle-Width=\"size\"        ConvertEmptyStringToNull=\"true|false\"         DataField=\"string\"        DataFormatString=\"string\"          FooterStyle-BackColor=\"color name|#dddddd\"        FooterStyle-BorderColor=\"color name|#dddddd\"        FooterStyle-BorderStyle=\"NotSet|None|Dotted|Dashed|Solid|Double|Groove|          Ridge|Inset|Outset\"         FooterStyle-BorderWidth=\"size\"         FooterStyle-CssClass=\"string\"        FooterStyle-Font-Bold=\"true|false\"        FooterStyle-Font-Italic=\"true|false\"        FooterStyle-Font-Names=\"string\"        FooterStyle-Font-Overline=\"true|false\"         FooterStyle-Font-Size=\"string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large\"        FooterStyle-Font-Strikeout=\"true|false\"          FooterStyle-Font-Underline=\"true|false\"          FooterStyle-ForeColor=\"color name|#dddddd\"          FooterStyle-Height=\"size\"        FooterStyle-Width=\"size\"        FooterStyle-HorizontalAlign=\"Center|Justify|Left|NotSet|Right\"        FooterStyle-VerticalAlign=\"Bottom|Middle|NotSet|Top\"        FooterStyle-Wrap=\"true|false\"          HeaderImageUrl=\"uri\"       HeaderStyle-BackColor=\"color name|#dddddd\"        HeaderStyle-BorderColor=\"color name|#dddddd\"        HeaderStyle-BorderStyle=\"NotSet|None|Dotted|Dashed|Solid|Double|Groove|          Ridge|Inset|Outset\"         HeaderStyle-BorderWidth=\"size\"         HeaderStyle-CssClass=\"string\"        HeaderStyle-Font-Bold=\"true|false\"        HeaderStyle-Font-Italic=\"true|false\"        HeaderStyle-Font-Names=\"string\"        HeaderStyle-Font-Overline=\"true|false\"         HeaderStyle-Font-Size=\"string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large\"        HeaderStyle-Font-Strikeout=\"true|false\"          HeaderStyle-Font-Underline=\"true|false\"          HeaderStyle-ForeColor=\"color name|#dddddd\"          HeaderStyle-Height=\"size\"        HeaderStyle-Width=\"size\"        HeaderStyle-HorizontalAlign=\"Center|Justify|Left|NotSet|Right\"        HeaderStyle-VerticalAlign=\"Bottom|Middle|NotSet|Top\"        HeaderStyle-Wrap=\"true|false\"          HeaderText=\"string\"       InsertVisible=\"true|false\"           ItemStyle-BackColor=\"color name|#dddddd\"        ItemStyle-BorderColor=\"color name|#dddddd\"        ItemStyle-BorderStyle=\"NotSet|None|Dotted|Dashed|Solid|Double|Groove|          Ridge|Inset|Outset\"         ItemStyle-BorderWidth=\"size\"         ItemStyle-CssClass=\"string\"        ItemStyle-Font-Bold=\"true|false\"        ItemStyle-Font-Italic=\"true|false\"        ItemStyle-Font-Names=\"string\"        ItemStyle-Font-Overline=\"true|false\"         ItemStyle-Font-Size=\"string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large\"        ItemStyle-Font-Strikeout=\"true|false\"          ItemStyle-Font-Underline=\"true|false\"          ItemStyle-ForeColor=\"color name|#dddddd\"          ItemStyle-Height=\"size\"        ItemStyle-Width=\"size\"        ItemStyle-HorizontalAlign=\"Center|Justify|Left|NotSet|Right\"        ItemStyle-VerticalAlign=\"Bottom|Middle|NotSet|Top\"        ItemStyle-Wrap=\"true|false\"          NullDisplayText=\"string\"        ReadOnly=\"true|false\"         ShowHeader=\"true|false\"         SortExpression=\"string\"        UIHint=\"string\"        ValidationGroup=\"string\"        Visible=\"true|false\"        /&gt;   &lt;asp:DynamicField /&gt;   ```</ph>","pos":[2238,6499],"source":"<a name=\"declarative_syntax\"></a>    ## Declarative Syntax      ```   <asp:DynamicField        AccessibleHeaderText=\"string\"            ApplyFormatInEditMode=\"true|false\"         ControlStyle-BackColor=\"color name|#dddddd\"        ControlStyle-BorderColor=\"color name|#dddddd\"        ControlStyle-BorderStyle=\"NotSet|None|Dotted|Dashed|Solid|Double|Groove|          Ridge|Inset|Outset\"         ControlStyle-BorderWidth=\"size\"         ControlStyle-CssClass=\"string\"        ControlStyle-Font-Bold=\"true|false\"        ControlStyle-Font-Italic=\"true|false\"        ControlStyle-Font-Names=\"string\"        ControlStyle-Font-Overline=\"true|false\"         ControlStyle-Font-Size=\"string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large\"        ControlStyle-Font-Strikeout=\"true|false\"          ControlStyle-Font-Underline=\"true|false\"          ControlStyle-ForeColor=\"color name|#dddddd\"          ControlStyle-Height=\"size\"        ControlStyle-Width=\"size\"        ConvertEmptyStringToNull=\"true|false\"         DataField=\"string\"        DataFormatString=\"string\"          FooterStyle-BackColor=\"color name|#dddddd\"        FooterStyle-BorderColor=\"color name|#dddddd\"        FooterStyle-BorderStyle=\"NotSet|None|Dotted|Dashed|Solid|Double|Groove|          Ridge|Inset|Outset\"         FooterStyle-BorderWidth=\"size\"         FooterStyle-CssClass=\"string\"        FooterStyle-Font-Bold=\"true|false\"        FooterStyle-Font-Italic=\"true|false\"        FooterStyle-Font-Names=\"string\"        FooterStyle-Font-Overline=\"true|false\"         FooterStyle-Font-Size=\"string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large\"        FooterStyle-Font-Strikeout=\"true|false\"          FooterStyle-Font-Underline=\"true|false\"          FooterStyle-ForeColor=\"color name|#dddddd\"          FooterStyle-Height=\"size\"        FooterStyle-Width=\"size\"        FooterStyle-HorizontalAlign=\"Center|Justify|Left|NotSet|Right\"        FooterStyle-VerticalAlign=\"Bottom|Middle|NotSet|Top\"        FooterStyle-Wrap=\"true|false\"          HeaderImageUrl=\"uri\"       HeaderStyle-BackColor=\"color name|#dddddd\"        HeaderStyle-BorderColor=\"color name|#dddddd\"        HeaderStyle-BorderStyle=\"NotSet|None|Dotted|Dashed|Solid|Double|Groove|          Ridge|Inset|Outset\"         HeaderStyle-BorderWidth=\"size\"         HeaderStyle-CssClass=\"string\"        HeaderStyle-Font-Bold=\"true|false\"        HeaderStyle-Font-Italic=\"true|false\"        HeaderStyle-Font-Names=\"string\"        HeaderStyle-Font-Overline=\"true|false\"         HeaderStyle-Font-Size=\"string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large\"        HeaderStyle-Font-Strikeout=\"true|false\"          HeaderStyle-Font-Underline=\"true|false\"          HeaderStyle-ForeColor=\"color name|#dddddd\"          HeaderStyle-Height=\"size\"        HeaderStyle-Width=\"size\"        HeaderStyle-HorizontalAlign=\"Center|Justify|Left|NotSet|Right\"        HeaderStyle-VerticalAlign=\"Bottom|Middle|NotSet|Top\"        HeaderStyle-Wrap=\"true|false\"          HeaderText=\"string\"       InsertVisible=\"true|false\"           ItemStyle-BackColor=\"color name|#dddddd\"        ItemStyle-BorderColor=\"color name|#dddddd\"        ItemStyle-BorderStyle=\"NotSet|None|Dotted|Dashed|Solid|Double|Groove|          Ridge|Inset|Outset\"         ItemStyle-BorderWidth=\"size\"         ItemStyle-CssClass=\"string\"        ItemStyle-Font-Bold=\"true|false\"        ItemStyle-Font-Italic=\"true|false\"        ItemStyle-Font-Names=\"string\"        ItemStyle-Font-Overline=\"true|false\"         ItemStyle-Font-Size=\"string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large\"        ItemStyle-Font-Strikeout=\"true|false\"          ItemStyle-Font-Underline=\"true|false\"          ItemStyle-ForeColor=\"color name|#dddddd\"          ItemStyle-Height=\"size\"        ItemStyle-Width=\"size\"        ItemStyle-HorizontalAlign=\"Center|Justify|Left|NotSet|Right\"        ItemStyle-VerticalAlign=\"Bottom|Middle|NotSet|Top\"        ItemStyle-Wrap=\"true|false\"          NullDisplayText=\"string\"        ReadOnly=\"true|false\"         ShowHeader=\"true|false\"         SortExpression=\"string\"        UIHint=\"string\"        ValidationGroup=\"string\"        Visible=\"true|false\"        />   <asp:DynamicField />   ```"}]},{"pos":[12224,12321],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.DynamicField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.DynamicData.DynamicField\"></xref> class."},{"pos":[12334,13303],"content":"Use this constructor to initialize a new instance of the <xref:System.Web.DynamicData.DynamicField> class. This constructor is commonly used when adding fields to a dynamically created data-bound control.       To dynamically add a <xref:System.Web.DynamicData.DynamicField> object to a data-bound control, create a new <xref:System.Web.DynamicData.DynamicField> object, set its properties, and then add it to the data-bound control's field collection. For example, if you are using the <xref:System.Web.UI.WebControls.GridView> control, add the <xref:System.Web.DynamicData.DynamicField> object to the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection.      > [!NOTE] >  Although you can dynamically add fields to a data-bound control, it is strongly recommended that fields be statically declared and then shown or hidden, as appropriate. Statically declaring all of your fields reduces the size of the view state for the parent data-bound control.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this constructor to initialize a new instance of the &lt;xref:System.Web.DynamicData.DynamicField&gt; class.","pos":[0,106],"source":"Use this constructor to initialize a new instance of the <xref:System.Web.DynamicData.DynamicField> class."},{"content":"This constructor is commonly used when adding fields to a dynamically created data-bound control.","pos":[107,204]},{"content":"To dynamically add a &lt;xref:System.Web.DynamicData.DynamicField&gt; object to a data-bound control, create a new &lt;xref:System.Web.DynamicData.DynamicField&gt; object, set its properties, and then add it to the data-bound control's field collection.","pos":[211,452],"source":"       To dynamically add a <xref:System.Web.DynamicData.DynamicField> object to a data-bound control, create a new <xref:System.Web.DynamicData.DynamicField> object, set its properties, and then add it to the data-bound control's field collection."},{"content":"For example, if you are using the &lt;xref:System.Web.UI.WebControls.GridView&gt; control, add the &lt;xref:System.Web.DynamicData.DynamicField&gt; object to the &lt;xref:System.Web.UI.WebControls.GridView.Columns%2A&gt; collection.","pos":[453,667],"source":" For example, if you are using the <xref:System.Web.UI.WebControls.GridView> control, add the <xref:System.Web.DynamicData.DynamicField> object to the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Although you can dynamically add fields to a data-bound control, it is strongly recommended that fields be statically declared and then shown or hidden, as appropriate.","pos":[673,854],"source":"      > [!NOTE] >  Although you can dynamically add fields to a data-bound control, it is strongly recommended that fields be statically declared and then shown or hidden, as appropriate."},{"content":"Statically declaring all of your fields reduces the size of the view state for the parent data-bound control.","pos":[855,964]}]},{"pos":[13881,14103],"content":"Gets or sets a value that indicates whether the formatted string that is specified by the <xref:System.Web.DynamicData.DynamicField.DataFormatString*> property is applied to field value when the data field is in edit mode.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the formatted string that is specified by the &lt;xref:System.Web.DynamicData.DynamicField.DataFormatString*&gt; property is applied to field value when the data field is in edit mode.","pos":[0,222],"source":"Gets or sets a value that indicates whether the formatted string that is specified by the <xref:System.Web.DynamicData.DynamicField.DataFormatString*> property is applied to field value when the data field is in edit mode."}]},{"pos":[14116,14956],"content":"Data-bound controls (such as <xref:System.Web.UI.WebControls.DetailsView>, and <xref:System.Web.UI.WebControls.GridView>) have different display modes that allow the user to read, edit, or insert records. By default, the formatting string specified by the <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> property is applied to field values only when the data-bound control is in read-only mode. To apply the formatting string to values displayed while the data-bound control is in edit mode, set the ApplyFormatInEditMode property to `true`.      > [!NOTE] >  A <xref:System.Web.DynamicData.DynamicField> object does not automatically remove the formatting when the field is updated in the data source. If you do not want the formatting as part of the value stored, you will need to remove the formatting programmatically.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Data-bound controls (such as &lt;xref:System.Web.UI.WebControls.DetailsView&gt;, and &lt;xref:System.Web.UI.WebControls.GridView&gt;) have different display modes that allow the user to read, edit, or insert records.","pos":[0,204],"source":"Data-bound controls (such as <xref:System.Web.UI.WebControls.DetailsView>, and <xref:System.Web.UI.WebControls.GridView>) have different display modes that allow the user to read, edit, or insert records."},{"content":"By default, the formatting string specified by the &lt;xref:System.Web.DynamicData.DynamicField.DataFormatString%2A&gt; property is applied to field values only when the data-bound control is in read-only mode.","pos":[205,409],"source":" By default, the formatting string specified by the <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> property is applied to field values only when the data-bound control is in read-only mode."},{"content":"To apply the formatting string to values displayed while the data-bound control is in edit mode, set the ApplyFormatInEditMode property to <ph id=\"ph1\">`true`</ph>.","pos":[410,556],"source":" To apply the formatting string to values displayed while the data-bound control is in edit mode, set the ApplyFormatInEditMode property to `true`."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  A &lt;xref:System.Web.DynamicData.DynamicField&gt; object does not automatically remove the formatting when the field is updated in the data source.","pos":[562,717],"source":"      > [!NOTE] >  A <xref:System.Web.DynamicData.DynamicField> object does not automatically remove the formatting when the field is updated in the data source."},{"content":"If you do not want the formatting as part of the value stored, you will need to remove the formatting programmatically.","pos":[718,837]}]},{"pos":[15087,15398],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Web.DynamicData.DynamicField\"></xref> applies formatting in edit mode; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Web.DynamicData.DynamicField\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> applies formatting in edit mode; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,232],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Web.DynamicData.DynamicField\"></xref> applies formatting in edit mode; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[233,311],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[15850,16014],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.MetaColumn\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that this <bpt id=\"p2\">&lt;xref href=\"System.Web.DynamicData.DynamicField\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object is associated with.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Web.DynamicData.MetaColumn\"></xref> object that this <xref href=\"System.Web.DynamicData.DynamicField\"></xref> object is associated with."},{"pos":[16175,16191],"content":"The meta column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The meta column.","pos":[0,16]}]},{"pos":[16837,17026],"content":"Provides a mechanism to modify a <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.DynamicControl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that was created by the &lt;xref:System.Web.DynamicData.DynamicField.InitializeCell*&gt; method.","needQuote":true,"needEscape":true,"source":"Provides a mechanism to modify a <xref href=\"System.Web.DynamicData.DynamicControl\"></xref> object that was created by the <xref:System.Web.DynamicData.DynamicField.InitializeCell*> method."},{"pos":[17249,17271],"content":"The control to modify.","needQuote":true,"needEscape":true,"nodes":[{"content":"The control to modify.","pos":[0,22]}]},{"pos":[17815,17977],"content":"Gets or sets a value that indicates whether empty string values (\"\") are automatically converted to null values when the data field is updated in the data source.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether empty string values (\"\") are automatically converted to null values when the data field is updated in the data source.","pos":[0,162]}]},{"pos":[17990,18890],"content":"Sometimes the user might enter an empty string for a field value when updating or inserting records. Use the ConvertEmptyStringToNull property to specify whether an empty string value is automatically converted to null when the data field is updated in the data source.       By default, a <xref:System.Web.DynamicData.DynamicField> object displays null values as empty strings. To display a different value, set the <xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A> property.      > [!NOTE] >  The <xref:System.Web.UI.WebControls.Parameter> object of the data source control that the parent control of <xref:System.Web.DynamicData.DynamicField> object is bound to also has a property named <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=fullName>. This property performs the same function. Make sure that both properties are set appropriately.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Sometimes the user might enter an empty string for a field value when updating or inserting records.","pos":[0,100]},{"content":"Use the ConvertEmptyStringToNull property to specify whether an empty string value is automatically converted to null when the data field is updated in the data source.","pos":[101,269]},{"content":"By default, a &lt;xref:System.Web.DynamicData.DynamicField&gt; object displays null values as empty strings.","pos":[276,378],"source":"       By default, a <xref:System.Web.DynamicData.DynamicField> object displays null values as empty strings."},{"content":"To display a different value, set the &lt;xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A&gt; property.","pos":[379,488],"source":" To display a different value, set the <xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A> property."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The &lt;xref:System.Web.UI.WebControls.Parameter&gt; object of the data source control that the parent control of &lt;xref:System.Web.DynamicData.DynamicField&gt; object is bound to also has a property named &lt;xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=fullName&gt;.","pos":[494,799],"source":"      > [!NOTE] >  The <xref:System.Web.UI.WebControls.Parameter> object of the data source control that the parent control of <xref:System.Web.DynamicData.DynamicField> object is bound to also has a property named <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=fullName>."},{"content":"This property performs the same function.","pos":[800,841]},{"content":"Make sure that both properties are set appropriately.","pos":[842,895]}]},{"pos":[19024,19299],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to automatically convert empty string values to null values; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to automatically convert empty string values to null values; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,196],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to automatically convert empty string values to null values; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[197,275],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[19934,20123],"content":"Copies the properties of the current <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.DynamicField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to the specified <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.DataControlField\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Copies the properties of the current <xref href=\"System.Web.DynamicData.DynamicField\"></xref> object to the specified <xref href=\"System.Web.UI.WebControls.DataControlField\"></xref> object."},{"pos":[20135,20458],"content":"The CopyProperties method is a helper method. It is used by the <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A> method to copy the properties of the current <xref:System.Web.DynamicData.DynamicField> object to the <xref:System.Web.DynamicData.DynamicField> object that is passed in the `newField` parameter.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The CopyProperties method is a helper method.","pos":[0,45]},{"content":"It is used by the &lt;xref:System.Web.UI.WebControls.DataControlField.CloneField%2A&gt; method to copy the properties of the current &lt;xref:System.Web.DynamicData.DynamicField&gt; object to the &lt;xref:System.Web.DynamicData.DynamicField&gt; object that is passed in the <ph id=\"ph1\">`newField`</ph> parameter.","pos":[46,323],"source":" It is used by the <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A> method to copy the properties of the current <xref:System.Web.DynamicData.DynamicField> object to the <xref:System.Web.DynamicData.DynamicField> object that is passed in the `newField` parameter."}]},{"pos":[20685,20851],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.DataControlField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to copy the properties of the current <bpt id=\"p2\">&lt;xref href=\"System.Web.DynamicData.DynamicField\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.WebControls.DataControlField\"></xref> to copy the properties of the current <xref href=\"System.Web.DynamicData.DynamicField\"></xref> to."},{"pos":[21370,21572],"content":"Provides a mechanism for classes that derive from <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.DynamicField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to override how a <bpt id=\"p2\">&lt;xref href=\"System.Web.DynamicData.DynamicControl\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object is created.","needQuote":true,"needEscape":true,"source":"Provides a mechanism for classes that derive from <xref href=\"System.Web.DynamicData.DynamicField\"></xref> to override how a <xref href=\"System.Web.DynamicData.DynamicControl\"></xref> object is created."},{"pos":[21777,21799],"content":"A new dynamic control.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new dynamic control.","pos":[0,22]}]},{"pos":[22279,22384],"content":"Creates and returns a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.DynamicField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Creates and returns a new instance of the <xref href=\"System.Web.DynamicData.DynamicField\"></xref> class."},{"pos":[22396,22597],"content":"The CreateField method is a helper method. It is used by the <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A> method to create an empty <xref:System.Web.DynamicData.DynamicField> object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The CreateField method is a helper method. It is used by the <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A> method to create an empty <xref:System.Web.DynamicData.DynamicField> object.","pos":[0,201],"nodes":[{"content":"The CreateField method is a helper method.","pos":[0,42]},{"content":"It is used by the &lt;xref:System.Web.UI.WebControls.DataControlField.CloneField%2A&gt; method to create an empty &lt;xref:System.Web.DynamicData.DynamicField&gt; object.","pos":[43,201],"source":" It is used by the <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A> method to create an empty <xref:System.Web.DynamicData.DynamicField> object."}]}]},{"pos":[22804,22889],"content":"A new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.DynamicField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"A new instance of the <xref href=\"System.Web.DynamicData.DynamicField\"></xref> class."},{"pos":[23346,23465],"content":"Gets or sets the name of the data field to bind the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.DynamicField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to.","needQuote":true,"needEscape":true,"source":"Gets or sets the name of the data field to bind the <xref href=\"System.Web.DynamicData.DynamicField\"></xref> object to."},{"pos":[23478,24912],"content":"Use the DataField property to specify the data field to bind to the <xref:System.Web.DynamicData.DynamicField> object. The data field can be the column name or, for foreign key columns, the relationship name.       By default, the specified data field is displayed by the <xref:System.Web.DynamicData.DynamicField> object using the field template that is associated with the field data type. You can change the field template that is rendered for the data field by setting the <xref:System.Web.DynamicData.DynamicField.UIHint%2A> property. You can also format the displayed text by setting the <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> property. If a field value is `null`, an empty string (\"\") is displayed for the value by default. To specify an alternate caption, set the <xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A> property.       **Note** If you want to change the display and behavior of a data field globally, you must apply attributes to your data model instead of setting this in a particular instance of the <xref:System.Web.DynamicData.DynamicField> object. For more information, see [ASP.NET Dynamic Data](~/add/includes/ajax-current-ext-md.md).       The <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A> method is called to raise a state change event when the DataField property is set.       The value of the DataField property is stored in view state.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the DataField property to specify the data field to bind to the &lt;xref:System.Web.DynamicData.DynamicField&gt; object.","pos":[0,118],"source":"Use the DataField property to specify the data field to bind to the <xref:System.Web.DynamicData.DynamicField> object."},{"content":"The data field can be the column name or, for foreign key columns, the relationship name.","pos":[119,208]},{"content":"By default, the specified data field is displayed by the &lt;xref:System.Web.DynamicData.DynamicField&gt; object using the field template that is associated with the field data type.","pos":[215,391],"source":"       By default, the specified data field is displayed by the <xref:System.Web.DynamicData.DynamicField> object using the field template that is associated with the field data type."},{"content":"You can change the field template that is rendered for the data field by setting the &lt;xref:System.Web.DynamicData.DynamicField.UIHint%2A&gt; property.","pos":[392,539],"source":" You can change the field template that is rendered for the data field by setting the <xref:System.Web.DynamicData.DynamicField.UIHint%2A> property."},{"content":"You can also format the displayed text by setting the &lt;xref:System.Web.DynamicData.DynamicField.DataFormatString%2A&gt; property.","pos":[540,666],"source":" You can also format the displayed text by setting the <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> property."},{"content":"If a field value is <ph id=\"ph1\">`null`</ph>, an empty string (\"\") is displayed for the value by default.","pos":[667,754],"source":" If a field value is `null`, an empty string (\"\") is displayed for the value by default."},{"content":"To specify an alternate caption, set the &lt;xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A&gt; property.","pos":[755,867],"source":" To specify an alternate caption, set the <xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A> property."},{"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept> If you want to change the display and behavior of a data field globally, you must apply attributes to your data model instead of setting this in a particular instance of the &lt;xref:System.Web.DynamicData.DynamicField&gt; object.","pos":[874,1107],"source":"**Note** If you want to change the display and behavior of a data field globally, you must apply attributes to your data model instead of setting this in a particular instance of the <xref:System.Web.DynamicData.DynamicField> object."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>ASP.NET Dynamic Data<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1108,1196],"source":" For more information, see [ASP.NET Dynamic Data](~/add/includes/ajax-current-ext-md.md)."},{"content":"The &lt;xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A&gt; method is called to raise a state change event when the DataField property is set.","pos":[1203,1357],"source":"       The <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A> method is called to raise a state change event when the DataField property is set."},{"content":"The value of the DataField property is stored in view state.","pos":[1364,1424]}]},{"pos":[25040,25152],"content":"The name of the data field that the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.DynamicField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is bound to.","needQuote":true,"needEscape":true,"source":"The name of the data field that the <xref href=\"System.Web.DynamicData.DynamicField\"></xref> object is bound to."},{"pos":[25642,25732],"content":"Gets or sets the string that specifies the display format for the value of the data field.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the string that specifies the display format for the value of the data field.","pos":[0,90]}]},{"pos":[25745,26972],"content":"Use the DataFormatString property to specify a custom display format for the values displayed in the <xref:System.Web.DynamicData.DynamicField> object. If the DataFormatString property is not set, the field value is displayed without any special formatting.       By default, the formatting string is applied to the field value only when the data-bound control that contains the <xref:System.Web.DynamicData.DynamicField> object is in read-only mode. To apply the formatting string to the field value while in edit mode, set the <xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A> property to `true`.       The display format that you specify using the DataFormatString property is specific to this instance of the <xref:System.Web.DynamicData.DynamicField> class. You can also change the display format for a data field across the entire application by applying the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> to your data model and setting the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=fullName> named parameter in the constructor. For more information, see [ASP.NET Dynamic Data](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the DataFormatString property to specify a custom display format for the values displayed in the &lt;xref:System.Web.DynamicData.DynamicField&gt; object.","pos":[0,151],"source":"Use the DataFormatString property to specify a custom display format for the values displayed in the <xref:System.Web.DynamicData.DynamicField> object."},{"content":"If the DataFormatString property is not set, the field value is displayed without any special formatting.","pos":[152,257]},{"content":"By default, the formatting string is applied to the field value only when the data-bound control that contains the &lt;xref:System.Web.DynamicData.DynamicField&gt; object is in read-only mode.","pos":[264,450],"source":"       By default, the formatting string is applied to the field value only when the data-bound control that contains the <xref:System.Web.DynamicData.DynamicField> object is in read-only mode."},{"content":"To apply the formatting string to the field value while in edit mode, set the &lt;xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A&gt; property to <ph id=\"ph1\">`true`</ph>.","pos":[451,616],"source":" To apply the formatting string to the field value while in edit mode, set the <xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A> property to `true`."},{"content":"The display format that you specify using the DataFormatString property is specific to this instance of the &lt;xref:System.Web.DynamicData.DynamicField&gt; class.","pos":[623,780],"source":"       The display format that you specify using the DataFormatString property is specific to this instance of the <xref:System.Web.DynamicData.DynamicField> class."},{"content":"You can also change the display format for a data field across the entire application by applying the &lt;xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute&gt; to your data model and setting the &lt;xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=fullName&gt; named parameter in the constructor.","pos":[781,1134],"source":" You can also change the display format for a data field across the entire application by applying the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> to your data model and setting the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=fullName> named parameter in the constructor."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>ASP.NET Dynamic Data<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1135,1223],"source":" For more information, see [ASP.NET Dynamic Data](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[27099,27290],"content":"A formatting string that specifies the display format for the value of the data field. The default is an empty string (\"\"), which indicates that no special formatting is applied to the value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A formatting string that specifies the display format for the value of the data field. The default is an empty string (\"\"), which indicates that no special formatting is applied to the value.","pos":[0,191],"nodes":[{"content":"A formatting string that specifies the display format for the value of the data field.","pos":[0,86]},{"content":"The default is an empty string (\"\"), which indicates that no special formatting is applied to the value.","pos":[87,191]}]}]},{"pos":[28335,28447],"content":"Extracts the value of the data field from the current table cell and adds the value to the specified dictionary.","needQuote":true,"needEscape":true,"nodes":[{"content":"Extracts the value of the data field from the current table cell and adds the value to the specified dictionary.","pos":[0,112]}]},{"pos":[28827,28873],"content":"The dictionary that will hold the cell values.","needQuote":true,"needEscape":true,"nodes":[{"content":"The dictionary that will hold the cell values.","pos":[0,46]}]},{"pos":[28967,29082],"content":"The cell that contains the text or controls of the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.DynamicField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The cell that contains the text or controls of the <xref href=\"System.Web.DynamicData.DynamicField\"></xref> object."},{"pos":[29179,29238],"content":"One of the enumeration values that specifies the row state.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values that specifies the row state.","pos":[0,59]}]},{"pos":[29311,29505],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to include the values of read-only fields in <ph id=\"ph1\">`dictionary`</ph>; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to include the values of read-only fields in `dictionary`; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[30039,30079],"content":"Retrieves the specified attribute value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the specified attribute value.","pos":[0,40]}]},{"pos":[30219,30251],"content":"The key of the attribute to get.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key of the attribute to get.","pos":[0,32]}]},{"pos":[30309,30336],"content":"The value of the attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the attribute.","pos":[0,27]}]},{"pos":[30799,30961],"content":"Gets or sets the text that is displayed in the header of the data-bound control that contains the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.DynamicField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets or sets the text that is displayed in the header of the data-bound control that contains the <xref href=\"System.Web.DynamicData.DynamicField\"></xref> object."},{"pos":[30974,31586],"content":"Use the HeaderText property to identify a field in a data-bound control with a friendly name. The most common application of the HeaderText property is to provide meaningful column names to data fields in a <xref:System.Web.UI.WebControls.GridView> or <xref:System.Web.UI.WebControls.DetailsView> control.       By default, the HeaderText property uses the display name set for the data field by using the <xref:System.ComponentModel.DisplayNameAttribute> attribute. If the display name is not set, the HeaderText property uses the value of the <xref:System.Web.DynamicData.DynamicField.DataField%2A> property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the HeaderText property to identify a field in a data-bound control with a friendly name. The most common application of the HeaderText property is to provide meaningful column names to data fields in a <xref:System.Web.UI.WebControls.GridView> or <xref:System.Web.UI.WebControls.DetailsView> control.       By default, the HeaderText property uses the display name set for the data field by using the <xref:System.ComponentModel.DisplayNameAttribute> attribute. If the display name is not set, the HeaderText property uses the value of the <xref:System.Web.DynamicData.DynamicField.DataField%2A> property.","pos":[0,610],"nodes":[{"content":"Use the HeaderText property to identify a field in a data-bound control with a friendly name.","pos":[0,93]},{"content":"The most common application of the HeaderText property is to provide meaningful column names to data fields in a &lt;xref:System.Web.UI.WebControls.GridView&gt; or &lt;xref:System.Web.UI.WebControls.DetailsView&gt; control.","pos":[94,305],"source":" The most common application of the HeaderText property is to provide meaningful column names to data fields in a <xref:System.Web.UI.WebControls.GridView> or <xref:System.Web.UI.WebControls.DetailsView> control."},{"content":"By default, the HeaderText property uses the display name set for the data field by using the &lt;xref:System.ComponentModel.DisplayNameAttribute&gt; attribute.","pos":[312,466],"source":"       By default, the HeaderText property uses the display name set for the data field by using the <xref:System.ComponentModel.DisplayNameAttribute> attribute."},{"content":"If the display name is not set, the HeaderText property uses the value of the &lt;xref:System.Web.DynamicData.DynamicField.DataField%2A&gt; property.","pos":[467,610],"source":" If the display name is not set, the HeaderText property uses the value of the <xref:System.Web.DynamicData.DynamicField.DataField%2A> property."}]}]},{"pos":[31716,31865],"content":"The text that is displayed in the header of the data-bound control that contains the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.DynamicField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The text that is displayed in the header of the data-bound control that contains the <xref href=\"System.Web.DynamicData.DynamicField\"></xref> object."},{"pos":[32050,32285],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.DynamicField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is inside a data-bound control that is not bound to a data source control that implements the <bpt id=\"p2\">&lt;xref href=\"System.Web.DynamicData.IDynamicDataSource\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> interface.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.DynamicData.DynamicField\"></xref> object is inside a data-bound control that is not bound to a data source control that implements the <xref href=\"System.Web.DynamicData.IDynamicDataSource\"></xref> interface."},{"pos":[32669,32843],"content":"Gets or sets a value that indicates whether data field values are HTML-encoded before they are displayed in a <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.DynamicField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that indicates whether data field values are HTML-encoded before they are displayed in a <xref href=\"System.Web.DynamicData.DynamicField\"></xref> object."},{"pos":[32856,33284],"content":"Use the HtmlEncode property to specify whether field values are HTML-encoded to their respective string representations before they are displayed.      > [!NOTE] >  HTML-encoding field values helps to prevent cross-site scripting attacks and malicious content from being displayed. This property should be enabled whenever possible. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the HtmlEncode property to specify whether field values are HTML-encoded to their respective string representations before they are displayed.","pos":[0,146]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  HTML-encoding field values helps to prevent cross-site scripting attacks and malicious content from being displayed.","pos":[152,281],"source":"      > [!NOTE] >  HTML-encoding field values helps to prevent cross-site scripting attacks and malicious content from being displayed."},{"content":"This property should be enabled whenever possible.","pos":[282,332]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Script Exploits Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[333,425],"source":" For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[33404,33676],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if field values are HTML-encoded before they are displayed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if field values are HTML-encoded before they are displayed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,195],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if field values are HTML-encoded before they are displayed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[196,272],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[34665,34709],"content":"Adds text or controls to the specified cell.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds text or controls to the specified cell.","pos":[0,44]}]},{"pos":[35059,35176],"content":"The object that contains the text or controls of the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.DynamicField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The object that contains the text or controls of the <xref href=\"System.Web.DynamicData.DynamicField\"></xref> object."},{"pos":[35273,35352],"content":"One of the enumeration values that specifies the function of the <ph id=\"ph1\">`cell`</ph> object.","needQuote":true,"needEscape":true,"source":"One of the enumeration values that specifies the function of the `cell` object."},{"pos":[35449,35508],"content":"One of the enumeration values that specifies the row state.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values that specifies the row state.","pos":[0,59]}]},{"pos":[35572,35632],"content":"The index of the row that the <ph id=\"ph1\">`cell`</ph> object is contained in.","needQuote":true,"needEscape":true,"source":"The index of the row that the `cell` object is contained in."},{"pos":[36122,36267],"content":"Gets or sets the caption that is displayed for a data field when the field value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the caption that is displayed for a data field when the field value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[36279,36548],"content":"Sometimes a field value is stored as null in the data source. You can specify a custom caption to display for data fields that have a null value by setting the NullDisplayText property. If this property is not set, null field values are displayed as empty strings (\"\").","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Sometimes a field value is stored as null in the data source. You can specify a custom caption to display for data fields that have a null value by setting the NullDisplayText property. If this property is not set, null field values are displayed as empty strings (\"\").","pos":[0,269],"nodes":[{"content":"Sometimes a field value is stored as null in the data source.","pos":[0,61]},{"content":"You can specify a custom caption to display for data fields that have a null value by setting the NullDisplayText property.","pos":[62,185]},{"content":"If this property is not set, null field values are displayed as empty strings (\"\").","pos":[186,269]}]}]},{"pos":[36673,36889],"content":"The caption that is displayed for a data field when the field value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>. The default is an empty string (\"\"), which indicates that this property is not set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The caption that is displayed for a data field when the field value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,132],"source":"The caption that is displayed for a data field when the field value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"The default is an empty string (\"\"), which indicates that this property is not set.","pos":[133,216]}]},{"pos":[37345,37391],"content":"Gets the read-only state of the dynamic field.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the read-only state of the dynamic field.","pos":[0,46]}]},{"pos":[37403,37572],"content":"If the ReadOnly property is `true`, the <xref:System.Web.DynamicData.DynamicField> control loads a read-only template. This property requires that view state be enabled.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the ReadOnly property is <ph id=\"ph1\">`true`</ph>, the &lt;xref:System.Web.DynamicData.DynamicField&gt; control loads a read-only template.","pos":[0,118],"source":"If the ReadOnly property is `true`, the <xref:System.Web.DynamicData.DynamicField> control loads a read-only template."},{"content":"This property requires that view state be enabled.","pos":[119,169]}]},{"pos":[37697,37738],"content":"The read-only state of the dynamic field.","needQuote":true,"needEscape":true,"nodes":[{"content":"The read-only state of the dynamic field.","pos":[0,41]}]},{"pos":[38308,38418],"content":"Sets an attribute that is associated with the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.DynamicField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Sets an attribute that is associated with the <xref href=\"System.Web.DynamicData.DynamicField\"></xref> object."},{"pos":[38570,38606],"content":"The name of the attribute to be set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the attribute to be set.","pos":[0,36]}]},{"pos":[38668,38688],"content":"The attribute value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The attribute value.","pos":[0,20]}]},{"pos":[39171,39272],"content":"Gets or sets the sort expression that is used when the data field is used to sort the data source by.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the sort expression that is used when the data field is used to sort the data source by.","pos":[0,101]}]},{"pos":[39285,39857],"content":"The SortExpression property tries to use the value of the <xref:System.Web.DynamicData.MetaColumn.SortExpression%2A?displayProperty=fullName> property of the column object that is associated with the <xref:System.Web.DynamicData.DynamicField> object by setting the <xref:System.Web.DynamicData.DynamicField.DataField%2A> property.       The <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A> method is called to raise a state change event when the SortExpression property is set.       The value of the SortExpression property is stored in view state.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The SortExpression property tries to use the value of the <xref:System.Web.DynamicData.MetaColumn.SortExpression%2A?displayProperty=fullName> property of the column object that is associated with the <xref:System.Web.DynamicData.DynamicField> object by setting the <xref:System.Web.DynamicData.DynamicField.DataField%2A> property.       The <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A> method is called to raise a state change event when the SortExpression property is set.       The value of the SortExpression property is stored in view state.","pos":[0,568],"nodes":[{"content":"The SortExpression property tries to use the value of the &lt;xref:System.Web.DynamicData.MetaColumn.SortExpression%2A?displayProperty=fullName&gt; property of the column object that is associated with the &lt;xref:System.Web.DynamicData.DynamicField&gt; object by setting the &lt;xref:System.Web.DynamicData.DynamicField.DataField%2A&gt; property.","pos":[0,330],"source":"The SortExpression property tries to use the value of the <xref:System.Web.DynamicData.MetaColumn.SortExpression%2A?displayProperty=fullName> property of the column object that is associated with the <xref:System.Web.DynamicData.DynamicField> object by setting the <xref:System.Web.DynamicData.DynamicField.DataField%2A> property."},{"content":"The &lt;xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A&gt; method is called to raise a state change event when the SortExpression property is set.","pos":[337,496],"source":"       The <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A> method is called to raise a state change event when the SortExpression property is set."},{"content":"The value of the SortExpression property is stored in view state.","pos":[503,568]}]}]},{"pos":[39991,40079],"content":"The sort expression that is used when the data field is used to sort the data source by.","needQuote":true,"needEscape":true,"nodes":[{"content":"The sort expression that is used when the data field is used to sort the data source by.","pos":[0,88]}]},{"pos":[40268,40503],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.DynamicField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is inside a data-bound control that is not bound to a data source control that implements the <bpt id=\"p2\">&lt;xref href=\"System.Web.DynamicData.IDynamicDataSource\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> interface.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.DynamicData.DynamicField\"></xref> object is inside a data-bound control that is not bound to a data source control that implements the <xref href=\"System.Web.DynamicData.IDynamicDataSource\"></xref> interface."},{"pos":[40867,40936],"content":"Gets or sets the field template to use for displaying the data field.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the field template to use for displaying the data field.","pos":[0,69]}]},{"pos":[40949,42434],"content":"Use the UIHint property to specify the field template to use to display the UI for a data field. Field templates by default are user controls and their names contain a suffix to identify field templates that are used for edit operations and insert operations. The suffixes are _edit and _insert, respectively. When you set a value to the UIHint property, you set the name without the suffixes. Dynamic Data will identify the current mode of the data field and will render the correct field template.       If the UIHint property is not set, Dynamic Data by default will render the field template based on the field type. For more information, see [ASP.NET Dynamic Data Scaffolding](~/add/includes/ajax-current-ext-md.md).       The field template that you specify using the UIHint property is specific to this instance of the <xref:System.Web.DynamicData.DynamicField> class. You can also change the field template used by a data field across the entire application by applying the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> to your data model. Setting the UIHint property overrides the metadata applied to the data model. For more information about metadata attributes, see [ASP.NET Dynamic Data](~/add/includes/ajax-current-ext-md.md).       The <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A> method is called to raise a state change event when the UIHint property is set.       The value of the UIHint property is stored in view state.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the UIHint property to specify the field template to use to display the UI for a data field.","pos":[0,96]},{"content":"Field templates by default are user controls and their names contain a suffix to identify field templates that are used for edit operations and insert operations.","pos":[97,259]},{"content":"The suffixes are _edit and _insert, respectively.","pos":[260,309]},{"content":"When you set a value to the UIHint property, you set the name without the suffixes.","pos":[310,393]},{"content":"Dynamic Data will identify the current mode of the data field and will render the correct field template.","pos":[394,499]},{"content":"If the UIHint property is not set, Dynamic Data by default will render the field template based on the field type.","pos":[506,620]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>ASP.NET Dynamic Data Scaffolding<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[621,721],"source":" For more information, see [ASP.NET Dynamic Data Scaffolding](~/add/includes/ajax-current-ext-md.md)."},{"content":"The field template that you specify using the UIHint property is specific to this instance of the &lt;xref:System.Web.DynamicData.DynamicField&gt; class.","pos":[728,875],"source":"       The field template that you specify using the UIHint property is specific to this instance of the <xref:System.Web.DynamicData.DynamicField> class."},{"content":"You can also change the field template used by a data field across the entire application by applying the &lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute&gt; to your data model.","pos":[876,1062],"source":" You can also change the field template used by a data field across the entire application by applying the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> to your data model."},{"content":"Setting the UIHint property overrides the metadata applied to the data model.","pos":[1063,1140]},{"content":"For more information about metadata attributes, see <bpt id=\"p1\">[</bpt>ASP.NET Dynamic Data<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1141,1255],"source":" For more information about metadata attributes, see [ASP.NET Dynamic Data](~/add/includes/ajax-current-ext-md.md)."},{"content":"The &lt;xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A&gt; method is called to raise a state change event when the UIHint property is set.","pos":[1262,1413],"source":"       The <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A> method is called to raise a state change event when the UIHint property is set."},{"content":"The value of the UIHint property is stored in view state.","pos":[1420,1477]}]},{"pos":[42559,42627],"content":"The name of the field template to use for displaying the data field.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the field template to use for displaying the data field.","pos":[0,68]}]},{"pos":[43129,43208],"content":"Gets or sets a value that specifies whether the control validates client input.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that specifies whether the control validates client input.","pos":[0,79]}]},{"pos":[43384,43558],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the control validates client input; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the control validates client input; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[44053,44224],"content":"Gets the &lt;xref:System.Web.DynamicData.DynamicControl.ValidationGroup*&gt; object that this <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.DynamicField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is associated with.","needQuote":true,"needEscape":true,"source":"Gets the <xref:System.Web.DynamicData.DynamicControl.ValidationGroup*> object that this <xref href=\"System.Web.DynamicData.DynamicField\"></xref> object is associated with."},{"pos":[44357,44515],"content":"The name of the validation group to which this validation control belongs. The default is an empty string (\"\"), which indicates that this property is not set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the validation group to which this validation control belongs. The default is an empty string (\"\"), which indicates that this property is not set.","pos":[0,158],"nodes":[{"content":"The name of the validation group to which this validation control belongs.","pos":[0,74]},{"content":"The default is an empty string (\"\"), which indicates that this property is not set.","pos":[75,158]}]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.DynamicData.DynamicField\n  id: DynamicField\n  children:\n  - System.Web.DynamicData.DynamicField.#ctor\n  - System.Web.DynamicData.DynamicField.ApplyFormatInEditMode\n  - System.Web.DynamicData.DynamicField.Column\n  - System.Web.DynamicData.DynamicField.ConfigureDynamicControl(System.Web.DynamicData.DynamicControl)\n  - System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull\n  - System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)\n  - System.Web.DynamicData.DynamicField.CreateDynamicControl\n  - System.Web.DynamicData.DynamicField.CreateField\n  - System.Web.DynamicData.DynamicField.DataField\n  - System.Web.DynamicData.DynamicField.DataFormatString\n  - System.Web.DynamicData.DynamicField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)\n  - System.Web.DynamicData.DynamicField.GetAttribute(System.String)\n  - System.Web.DynamicData.DynamicField.HeaderText\n  - System.Web.DynamicData.DynamicField.HtmlEncode\n  - System.Web.DynamicData.DynamicField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)\n  - System.Web.DynamicData.DynamicField.NullDisplayText\n  - System.Web.DynamicData.DynamicField.ReadOnly\n  - System.Web.DynamicData.DynamicField.SetAttribute(System.String,System.String)\n  - System.Web.DynamicData.DynamicField.SortExpression\n  - System.Web.DynamicData.DynamicField.UIHint\n  - System.Web.DynamicData.DynamicField.ValidateRequestMode\n  - System.Web.DynamicData.DynamicField.ValidationGroup\n  langs:\n  - csharp\n  name: DynamicField\n  nameWithType: DynamicField\n  fullName: System.Web.DynamicData.DynamicField\n  type: Class\n  summary: Represents a data field that is displayed in a data-bound control that uses ASP.NET Dynamic Data features.\n  remarks: \"In this topic:  \\n  \\n-   [Introduction](#introduction)  \\n  \\n-   [Declarative Syntax](#declarative_syntax)  \\n  \\n<a name=\\\"introduction\\\"></a>   \\n## Introduction  \\n The DynamicField class is used by data-bound controls, such as the <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls, to display a field value that uses ASP.NET Dynamic Data features in custom pages.  \\n  \\n The DynamicField class provides functionality that resembles that of the <xref:System.Web.UI.WebControls.BoundField> class. However, because a DynamicField object is used in Dynamic Data applications, you can take advantage of the following Dynamic Data features:  \\n  \\n-   Automatically rendering the proper control for a field by using field templates, based on the data type. The field templates can be globally modified for the entire application.  \\n  \\n-   Providing built-in data validation based on the database schema. You can also add validation types by customizing the data model.  \\n  \\n-   Customizing data rendering for individual fields by using attributes in the data model or by using the <xref:System.Web.DynamicData.DynamicField.UIHint%2A> property.  \\n  \\n The DynamicField object renders each field by using a `DynamicControl` control. To specify the data field to display in a DynamicField object, set the <xref:System.Web.DynamicData.DynamicField.DataField%2A> property to the field name. You can apply a custom formatting string to the field value by setting the <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> property. By default the formatting string is applied to field values only when the data-bound control is in read-only mode. To apply the formatting string to values displayed while the data-bound control is in edit mode, set the <xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A> property to `true`. If a field value is `null`, you can display a custom caption by setting the <xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A> property. The DynamicField object can also automatically convert empty string (\\\"\\\") field values to null values by setting the <xref:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull%2A> property to `true`.  \\n  \\n<a name=\\\"declarative_syntax\\\"></a>   \\n## Declarative Syntax  \\n  \\n```  \\n<asp:DynamicField   \\n    AccessibleHeaderText=\\\"string\\\"       \\n    ApplyFormatInEditMode=\\\"true|false\\\"    \\n    ControlStyle-BackColor=\\\"color name|#dddddd\\\"   \\n    ControlStyle-BorderColor=\\\"color name|#dddddd\\\"   \\n    ControlStyle-BorderStyle=\\\"NotSet|None|Dotted|Dashed|Solid|Double|Groove|  \\n       Ridge|Inset|Outset\\\"    \\n    ControlStyle-BorderWidth=\\\"size\\\"    \\n    ControlStyle-CssClass=\\\"string\\\"   \\n    ControlStyle-Font-Bold=\\\"true|false\\\"   \\n    ControlStyle-Font-Italic=\\\"true|false\\\"   \\n    ControlStyle-Font-Names=\\\"string\\\"   \\n    ControlStyle-Font-Overline=\\\"true|false\\\"    \\n    ControlStyle-Font-Size=\\\"string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  \\n       Large|X-Large|XX-Large\\\"   \\n    ControlStyle-Font-Strikeout=\\\"true|false\\\"     \\n    ControlStyle-Font-Underline=\\\"true|false\\\"     \\n    ControlStyle-ForeColor=\\\"color name|#dddddd\\\"     \\n    ControlStyle-Height=\\\"size\\\"   \\n    ControlStyle-Width=\\\"size\\\"   \\n    ConvertEmptyStringToNull=\\\"true|false\\\"    \\n    DataField=\\\"string\\\"   \\n    DataFormatString=\\\"string\\\"     \\n    FooterStyle-BackColor=\\\"color name|#dddddd\\\"   \\n    FooterStyle-BorderColor=\\\"color name|#dddddd\\\"   \\n    FooterStyle-BorderStyle=\\\"NotSet|None|Dotted|Dashed|Solid|Double|Groove|  \\n       Ridge|Inset|Outset\\\"    \\n    FooterStyle-BorderWidth=\\\"size\\\"    \\n    FooterStyle-CssClass=\\\"string\\\"   \\n    FooterStyle-Font-Bold=\\\"true|false\\\"   \\n    FooterStyle-Font-Italic=\\\"true|false\\\"   \\n    FooterStyle-Font-Names=\\\"string\\\"   \\n    FooterStyle-Font-Overline=\\\"true|false\\\"    \\n    FooterStyle-Font-Size=\\\"string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  \\n       Large|X-Large|XX-Large\\\"   \\n    FooterStyle-Font-Strikeout=\\\"true|false\\\"     \\n    FooterStyle-Font-Underline=\\\"true|false\\\"     \\n    FooterStyle-ForeColor=\\\"color name|#dddddd\\\"     \\n    FooterStyle-Height=\\\"size\\\"   \\n    FooterStyle-Width=\\\"size\\\"   \\n    FooterStyle-HorizontalAlign=\\\"Center|Justify|Left|NotSet|Right\\\"   \\n    FooterStyle-VerticalAlign=\\\"Bottom|Middle|NotSet|Top\\\"   \\n    FooterStyle-Wrap=\\\"true|false\\\"     \\n    HeaderImageUrl=\\\"uri\\\"  \\n    HeaderStyle-BackColor=\\\"color name|#dddddd\\\"   \\n    HeaderStyle-BorderColor=\\\"color name|#dddddd\\\"   \\n    HeaderStyle-BorderStyle=\\\"NotSet|None|Dotted|Dashed|Solid|Double|Groove|  \\n       Ridge|Inset|Outset\\\"    \\n    HeaderStyle-BorderWidth=\\\"size\\\"    \\n    HeaderStyle-CssClass=\\\"string\\\"   \\n    HeaderStyle-Font-Bold=\\\"true|false\\\"   \\n    HeaderStyle-Font-Italic=\\\"true|false\\\"   \\n    HeaderStyle-Font-Names=\\\"string\\\"   \\n    HeaderStyle-Font-Overline=\\\"true|false\\\"    \\n    HeaderStyle-Font-Size=\\\"string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  \\n       Large|X-Large|XX-Large\\\"   \\n    HeaderStyle-Font-Strikeout=\\\"true|false\\\"     \\n    HeaderStyle-Font-Underline=\\\"true|false\\\"     \\n    HeaderStyle-ForeColor=\\\"color name|#dddddd\\\"     \\n    HeaderStyle-Height=\\\"size\\\"   \\n    HeaderStyle-Width=\\\"size\\\"   \\n    HeaderStyle-HorizontalAlign=\\\"Center|Justify|Left|NotSet|Right\\\"   \\n    HeaderStyle-VerticalAlign=\\\"Bottom|Middle|NotSet|Top\\\"   \\n    HeaderStyle-Wrap=\\\"true|false\\\"     \\n    HeaderText=\\\"string\\\"  \\n    InsertVisible=\\\"true|false\\\"      \\n    ItemStyle-BackColor=\\\"color name|#dddddd\\\"   \\n    ItemStyle-BorderColor=\\\"color name|#dddddd\\\"   \\n    ItemStyle-BorderStyle=\\\"NotSet|None|Dotted|Dashed|Solid|Double|Groove|  \\n       Ridge|Inset|Outset\\\"    \\n    ItemStyle-BorderWidth=\\\"size\\\"    \\n    ItemStyle-CssClass=\\\"string\\\"   \\n    ItemStyle-Font-Bold=\\\"true|false\\\"   \\n    ItemStyle-Font-Italic=\\\"true|false\\\"   \\n    ItemStyle-Font-Names=\\\"string\\\"   \\n    ItemStyle-Font-Overline=\\\"true|false\\\"    \\n    ItemStyle-Font-Size=\\\"string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  \\n       Large|X-Large|XX-Large\\\"   \\n    ItemStyle-Font-Strikeout=\\\"true|false\\\"     \\n    ItemStyle-Font-Underline=\\\"true|false\\\"     \\n    ItemStyle-ForeColor=\\\"color name|#dddddd\\\"     \\n    ItemStyle-Height=\\\"size\\\"   \\n    ItemStyle-Width=\\\"size\\\"   \\n    ItemStyle-HorizontalAlign=\\\"Center|Justify|Left|NotSet|Right\\\"   \\n    ItemStyle-VerticalAlign=\\\"Bottom|Middle|NotSet|Top\\\"   \\n    ItemStyle-Wrap=\\\"true|false\\\"     \\n    NullDisplayText=\\\"string\\\"   \\n    ReadOnly=\\\"true|false\\\"    \\n    ShowHeader=\\\"true|false\\\"    \\n    SortExpression=\\\"string\\\"   \\n    UIHint=\\\"string\\\"   \\n    ValidationGroup=\\\"string\\\"   \\n    Visible=\\\"true|false\\\"   \\n    />  \\n<asp:DynamicField />  \\n```\"\n  example:\n  - \"See a run-time code example of this feature: [Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.DynamicField).  \\n  \\n The following example demonstrates how to use the DynamicField object in a <xref:System.Web.UI.WebControls.GridView> control to display and edit values from a database table.  \\n  \\n [!code-vb[System.Web.DynamicData.DynamicField#1](~/add/codesnippet/visualbasic/t-system.web.dynamicdata_1_1.aspx)]\\n [!code-cs[System.Web.DynamicData.DynamicField#1](~/add/codesnippet/csharp/t-system.web.dynamicdata_1_1.aspx)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Designer(\"System.Web.DynamicData.Design.DynamicFieldDesigner, System.Web.DynamicData.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\")]\n\n      public class DynamicField : System.Web.UI.WebControls.DataControlField, System.Web.DynamicData.IFieldFormattingOptions, System.Web.UI.IAttributeAccessor\n  inheritance:\n  - System.Object\n  - System.Web.UI.WebControls.DataControlField\n  implements:\n  - System.Web.DynamicData.IFieldFormattingOptions\n  - System.Web.UI.IAttributeAccessor\n  inheritedMembers:\n  - System.Web.UI.WebControls.DataControlField.AccessibleHeaderText\n  - System.Web.UI.WebControls.DataControlField.CloneField\n  - System.Web.UI.WebControls.DataControlField.Control\n  - System.Web.UI.WebControls.DataControlField.ControlStyle\n  - System.Web.UI.WebControls.DataControlField.DesignMode\n  - System.Web.UI.WebControls.DataControlField.FooterStyle\n  - System.Web.UI.WebControls.DataControlField.FooterText\n  - System.Web.UI.WebControls.DataControlField.HeaderImageUrl\n  - System.Web.UI.WebControls.DataControlField.HeaderStyle\n  - System.Web.UI.WebControls.DataControlField.Initialize(System.Boolean,System.Web.UI.Control)\n  - System.Web.UI.WebControls.DataControlField.InsertVisible\n  - System.Web.UI.WebControls.DataControlField.IsTrackingViewState\n  - System.Web.UI.WebControls.DataControlField.ItemStyle\n  - System.Web.UI.WebControls.DataControlField.LoadViewState(System.Object)\n  - System.Web.UI.WebControls.DataControlField.OnFieldChanged\n  - System.Web.UI.WebControls.DataControlField.SaveViewState\n  - System.Web.UI.WebControls.DataControlField.ShowHeader\n  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema\n  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState\n  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)\n  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState\n  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState\n  - System.Web.UI.WebControls.DataControlField.ToString\n  - System.Web.UI.WebControls.DataControlField.TrackViewState\n  - System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback\n  - System.Web.UI.WebControls.DataControlField.ViewState\n  - System.Web.UI.WebControls.DataControlField.Visible\n  platform:\n  - net462\n- uid: System.Web.DynamicData.DynamicField.#ctor\n  id: '#ctor'\n  parent: System.Web.DynamicData.DynamicField\n  langs:\n  - csharp\n  name: DynamicField()\n  nameWithType: DynamicField.DynamicField()\n  fullName: System.Web.DynamicData.DynamicField.DynamicField()\n  type: Constructor\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Initializes a new instance of the <xref href=\"System.Web.DynamicData.DynamicField\"></xref> class.\n  remarks: \"Use this constructor to initialize a new instance of the <xref:System.Web.DynamicData.DynamicField> class. This constructor is commonly used when adding fields to a dynamically created data-bound control.  \\n  \\n To dynamically add a <xref:System.Web.DynamicData.DynamicField> object to a data-bound control, create a new <xref:System.Web.DynamicData.DynamicField> object, set its properties, and then add it to the data-bound control's field collection. For example, if you are using the <xref:System.Web.UI.WebControls.GridView> control, add the <xref:System.Web.DynamicData.DynamicField> object to the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection.  \\n  \\n> [!NOTE]\\n>  Although you can dynamically add fields to a data-bound control, it is strongly recommended that fields be statically declared and then shown or hidden, as appropriate. Statically declaring all of your fields reduces the size of the view state for the parent data-bound control.\"\n  syntax:\n    content: public DynamicField ();\n    parameters: []\n  overload: System.Web.DynamicData.DynamicField.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode\n  id: ApplyFormatInEditMode\n  parent: System.Web.DynamicData.DynamicField\n  langs:\n  - csharp\n  name: ApplyFormatInEditMode\n  nameWithType: DynamicField.ApplyFormatInEditMode\n  fullName: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets or sets a value that indicates whether the formatted string that is specified by the <xref:System.Web.DynamicData.DynamicField.DataFormatString*> property is applied to field value when the data field is in edit mode.\n  remarks: \"Data-bound controls (such as <xref:System.Web.UI.WebControls.DetailsView>, and <xref:System.Web.UI.WebControls.GridView>) have different display modes that allow the user to read, edit, or insert records. By default, the formatting string specified by the <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> property is applied to field values only when the data-bound control is in read-only mode. To apply the formatting string to values displayed while the data-bound control is in edit mode, set the ApplyFormatInEditMode property to `true`.  \\n  \\n> [!NOTE]\\n>  A <xref:System.Web.DynamicData.DynamicField> object does not automatically remove the formatting when the field is updated in the data source. If you do not want the formatting as part of the value stored, you will need to remove the formatting programmatically.\"\n  syntax:\n    content: public bool ApplyFormatInEditMode { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Web.DynamicData.DynamicField\"></xref> applies formatting in edit mode; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.DynamicField.Column\n  id: Column\n  parent: System.Web.DynamicData.DynamicField\n  langs:\n  - csharp\n  name: Column\n  nameWithType: DynamicField.Column\n  fullName: System.Web.DynamicData.DynamicField.Column\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the <xref href=\"System.Web.DynamicData.MetaColumn\"></xref> object that this <xref href=\"System.Web.DynamicData.DynamicField\"></xref> object is associated with.\n  syntax:\n    content: protected System.Web.DynamicData.MetaColumn Column { get; }\n    return:\n      type: System.Web.DynamicData.MetaColumn\n      description: The meta column.\n  overload: System.Web.DynamicData.DynamicField.Column*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.DynamicField.ConfigureDynamicControl(System.Web.DynamicData.DynamicControl)\n  id: ConfigureDynamicControl(System.Web.DynamicData.DynamicControl)\n  parent: System.Web.DynamicData.DynamicField\n  langs:\n  - csharp\n  name: ConfigureDynamicControl(DynamicControl)\n  nameWithType: DynamicField.ConfigureDynamicControl(DynamicControl)\n  fullName: System.Web.DynamicData.DynamicField.ConfigureDynamicControl(DynamicControl)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Provides a mechanism to modify a <xref href=\"System.Web.DynamicData.DynamicControl\"></xref> object that was created by the <xref:System.Web.DynamicData.DynamicField.InitializeCell*> method.\n  syntax:\n    content: protected virtual void ConfigureDynamicControl (System.Web.DynamicData.DynamicControl control);\n    parameters:\n    - id: control\n      type: System.Web.DynamicData.DynamicControl\n      description: The control to modify.\n  overload: System.Web.DynamicData.DynamicField.ConfigureDynamicControl*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull\n  id: ConvertEmptyStringToNull\n  parent: System.Web.DynamicData.DynamicField\n  langs:\n  - csharp\n  name: ConvertEmptyStringToNull\n  nameWithType: DynamicField.ConvertEmptyStringToNull\n  fullName: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets or sets a value that indicates whether empty string values (\"\") are automatically converted to null values when the data field is updated in the data source.\n  remarks: \"Sometimes the user might enter an empty string for a field value when updating or inserting records. Use the ConvertEmptyStringToNull property to specify whether an empty string value is automatically converted to null when the data field is updated in the data source.  \\n  \\n By default, a <xref:System.Web.DynamicData.DynamicField> object displays null values as empty strings. To display a different value, set the <xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A> property.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Web.UI.WebControls.Parameter> object of the data source control that the parent control of <xref:System.Web.DynamicData.DynamicField> object is bound to also has a property named <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=fullName>. This property performs the same function. Make sure that both properties are set appropriately.\"\n  syntax:\n    content: public bool ConvertEmptyStringToNull { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to automatically convert empty string values to null values; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)\n  id: CopyProperties(System.Web.UI.WebControls.DataControlField)\n  parent: System.Web.DynamicData.DynamicField\n  langs:\n  - csharp\n  name: CopyProperties(DataControlField)\n  nameWithType: DynamicField.CopyProperties(DataControlField)\n  fullName: System.Web.DynamicData.DynamicField.CopyProperties(DataControlField)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Copies the properties of the current <xref href=\"System.Web.DynamicData.DynamicField\"></xref> object to the specified <xref href=\"System.Web.UI.WebControls.DataControlField\"></xref> object.\n  remarks: The CopyProperties method is a helper method. It is used by the <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A> method to copy the properties of the current <xref:System.Web.DynamicData.DynamicField> object to the <xref:System.Web.DynamicData.DynamicField> object that is passed in the `newField` parameter.\n  syntax:\n    content: protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);\n    parameters:\n    - id: newField\n      type: System.Web.UI.WebControls.DataControlField\n      description: The <xref href=\"System.Web.UI.WebControls.DataControlField\"></xref> to copy the properties of the current <xref href=\"System.Web.DynamicData.DynamicField\"></xref> to.\n  overload: System.Web.DynamicData.DynamicField.CopyProperties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.DynamicField.CreateDynamicControl\n  id: CreateDynamicControl\n  parent: System.Web.DynamicData.DynamicField\n  langs:\n  - csharp\n  name: CreateDynamicControl()\n  nameWithType: DynamicField.CreateDynamicControl()\n  fullName: System.Web.DynamicData.DynamicField.CreateDynamicControl()\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Provides a mechanism for classes that derive from <xref href=\"System.Web.DynamicData.DynamicField\"></xref> to override how a <xref href=\"System.Web.DynamicData.DynamicControl\"></xref> object is created.\n  syntax:\n    content: protected virtual System.Web.DynamicData.DynamicControl CreateDynamicControl ();\n    parameters: []\n    return:\n      type: System.Web.DynamicData.DynamicControl\n      description: A new dynamic control.\n  overload: System.Web.DynamicData.DynamicField.CreateDynamicControl*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.DynamicField.CreateField\n  id: CreateField\n  parent: System.Web.DynamicData.DynamicField\n  langs:\n  - csharp\n  name: CreateField()\n  nameWithType: DynamicField.CreateField()\n  fullName: System.Web.DynamicData.DynamicField.CreateField()\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Creates and returns a new instance of the <xref href=\"System.Web.DynamicData.DynamicField\"></xref> class.\n  remarks: The CreateField method is a helper method. It is used by the <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A> method to create an empty <xref:System.Web.DynamicData.DynamicField> object.\n  syntax:\n    content: protected override System.Web.UI.WebControls.DataControlField CreateField ();\n    parameters: []\n    return:\n      type: System.Web.UI.WebControls.DataControlField\n      description: A new instance of the <xref href=\"System.Web.DynamicData.DynamicField\"></xref> class.\n  overload: System.Web.DynamicData.DynamicField.CreateField*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.DynamicField.DataField\n  id: DataField\n  parent: System.Web.DynamicData.DynamicField\n  langs:\n  - csharp\n  name: DataField\n  nameWithType: DynamicField.DataField\n  fullName: System.Web.DynamicData.DynamicField.DataField\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets or sets the name of the data field to bind the <xref href=\"System.Web.DynamicData.DynamicField\"></xref> object to.\n  remarks: \"Use the DataField property to specify the data field to bind to the <xref:System.Web.DynamicData.DynamicField> object. The data field can be the column name or, for foreign key columns, the relationship name.  \\n  \\n By default, the specified data field is displayed by the <xref:System.Web.DynamicData.DynamicField> object using the field template that is associated with the field data type. You can change the field template that is rendered for the data field by setting the <xref:System.Web.DynamicData.DynamicField.UIHint%2A> property. You can also format the displayed text by setting the <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> property. If a field value is `null`, an empty string (\\\"\\\") is displayed for the value by default. To specify an alternate caption, set the <xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A> property.  \\n  \\n **Note** If you want to change the display and behavior of a data field globally, you must apply attributes to your data model instead of setting this in a particular instance of the <xref:System.Web.DynamicData.DynamicField> object. For more information, see [ASP.NET Dynamic Data](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A> method is called to raise a state change event when the DataField property is set.  \\n  \\n The value of the DataField property is stored in view state.\"\n  syntax:\n    content: public virtual string DataField { get; set; }\n    return:\n      type: System.String\n      description: The name of the data field that the <xref href=\"System.Web.DynamicData.DynamicField\"></xref> object is bound to.\n  overload: System.Web.DynamicData.DynamicField.DataField*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.DynamicField.DataFormatString\n  id: DataFormatString\n  parent: System.Web.DynamicData.DynamicField\n  langs:\n  - csharp\n  name: DataFormatString\n  nameWithType: DynamicField.DataFormatString\n  fullName: System.Web.DynamicData.DynamicField.DataFormatString\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets or sets the string that specifies the display format for the value of the data field.\n  remarks: \"Use the DataFormatString property to specify a custom display format for the values displayed in the <xref:System.Web.DynamicData.DynamicField> object. If the DataFormatString property is not set, the field value is displayed without any special formatting.  \\n  \\n By default, the formatting string is applied to the field value only when the data-bound control that contains the <xref:System.Web.DynamicData.DynamicField> object is in read-only mode. To apply the formatting string to the field value while in edit mode, set the <xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A> property to `true`.  \\n  \\n The display format that you specify using the DataFormatString property is specific to this instance of the <xref:System.Web.DynamicData.DynamicField> class. You can also change the display format for a data field across the entire application by applying the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> to your data model and setting the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=fullName> named parameter in the constructor. For more information, see [ASP.NET Dynamic Data](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public string DataFormatString { get; set; }\n    return:\n      type: System.String\n      description: A formatting string that specifies the display format for the value of the data field. The default is an empty string (\"\"), which indicates that no special formatting is applied to the value.\n  overload: System.Web.DynamicData.DynamicField.DataFormatString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.DynamicField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)\n  id: ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)\n  parent: System.Web.DynamicData.DynamicField\n  langs:\n  - csharp\n  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)\n  nameWithType: DynamicField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)\n  fullName: System.Web.DynamicData.DynamicField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Extracts the value of the data field from the current table cell and adds the value to the specified dictionary.\n  syntax:\n    content: public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);\n    parameters:\n    - id: dictionary\n      type: System.Collections.Specialized.IOrderedDictionary\n      description: The dictionary that will hold the cell values.\n    - id: cell\n      type: System.Web.UI.WebControls.DataControlFieldCell\n      description: The cell that contains the text or controls of the <xref href=\"System.Web.DynamicData.DynamicField\"></xref> object.\n    - id: rowState\n      type: System.Web.UI.WebControls.DataControlRowState\n      description: One of the enumeration values that specifies the row state.\n    - id: includeReadOnly\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to include the values of read-only fields in `dictionary`; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.DynamicData.DynamicField.ExtractValuesFromCell*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.DynamicField.GetAttribute(System.String)\n  id: GetAttribute(System.String)\n  parent: System.Web.DynamicData.DynamicField\n  langs:\n  - csharp\n  name: GetAttribute(String)\n  nameWithType: DynamicField.GetAttribute(String)\n  fullName: System.Web.DynamicData.DynamicField.GetAttribute(String)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Retrieves the specified attribute value.\n  syntax:\n    content: public string GetAttribute (string key);\n    parameters:\n    - id: key\n      type: System.String\n      description: The key of the attribute to get.\n    return:\n      type: System.String\n      description: The value of the attribute.\n  overload: System.Web.DynamicData.DynamicField.GetAttribute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.DynamicField.HeaderText\n  id: HeaderText\n  parent: System.Web.DynamicData.DynamicField\n  langs:\n  - csharp\n  name: HeaderText\n  nameWithType: DynamicField.HeaderText\n  fullName: System.Web.DynamicData.DynamicField.HeaderText\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets or sets the text that is displayed in the header of the data-bound control that contains the <xref href=\"System.Web.DynamicData.DynamicField\"></xref> object.\n  remarks: \"Use the HeaderText property to identify a field in a data-bound control with a friendly name. The most common application of the HeaderText property is to provide meaningful column names to data fields in a <xref:System.Web.UI.WebControls.GridView> or <xref:System.Web.UI.WebControls.DetailsView> control.  \\n  \\n By default, the HeaderText property uses the display name set for the data field by using the <xref:System.ComponentModel.DisplayNameAttribute> attribute. If the display name is not set, the HeaderText property uses the value of the <xref:System.Web.DynamicData.DynamicField.DataField%2A> property.\"\n  syntax:\n    content: public override string HeaderText { get; set; }\n    return:\n      type: System.String\n      description: The text that is displayed in the header of the data-bound control that contains the <xref href=\"System.Web.DynamicData.DynamicField\"></xref> object.\n  overload: System.Web.DynamicData.DynamicField.HeaderText*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Web.DynamicData.DynamicField\"></xref> object is inside a data-bound control that is not bound to a data source control that implements the <xref href=\"System.Web.DynamicData.IDynamicDataSource\"></xref> interface.\n  platform:\n  - net462\n- uid: System.Web.DynamicData.DynamicField.HtmlEncode\n  id: HtmlEncode\n  parent: System.Web.DynamicData.DynamicField\n  langs:\n  - csharp\n  name: HtmlEncode\n  nameWithType: DynamicField.HtmlEncode\n  fullName: System.Web.DynamicData.DynamicField.HtmlEncode\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets or sets a value that indicates whether data field values are HTML-encoded before they are displayed in a <xref href=\"System.Web.DynamicData.DynamicField\"></xref> object.\n  remarks: \"Use the HtmlEncode property to specify whether field values are HTML-encoded to their respective string representations before they are displayed.  \\n  \\n> [!NOTE]\\n>  HTML-encoding field values helps to prevent cross-site scripting attacks and malicious content from being displayed. This property should be enabled whenever possible. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public bool HtmlEncode { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if field values are HTML-encoded before they are displayed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Web.DynamicData.DynamicField.HtmlEncode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.DynamicField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)\n  id: InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)\n  parent: System.Web.DynamicData.DynamicField\n  langs:\n  - csharp\n  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)\n  nameWithType: DynamicField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)\n  fullName: System.Web.DynamicData.DynamicField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Adds text or controls to the specified cell.\n  syntax:\n    content: public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);\n    parameters:\n    - id: cell\n      type: System.Web.UI.WebControls.DataControlFieldCell\n      description: The object that contains the text or controls of the <xref href=\"System.Web.DynamicData.DynamicField\"></xref> object.\n    - id: cellType\n      type: System.Web.UI.WebControls.DataControlCellType\n      description: One of the enumeration values that specifies the function of the `cell` object.\n    - id: rowState\n      type: System.Web.UI.WebControls.DataControlRowState\n      description: One of the enumeration values that specifies the row state.\n    - id: rowIndex\n      type: System.Int32\n      description: The index of the row that the `cell` object is contained in.\n  overload: System.Web.DynamicData.DynamicField.InitializeCell*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.DynamicField.NullDisplayText\n  id: NullDisplayText\n  parent: System.Web.DynamicData.DynamicField\n  langs:\n  - csharp\n  name: NullDisplayText\n  nameWithType: DynamicField.NullDisplayText\n  fullName: System.Web.DynamicData.DynamicField.NullDisplayText\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets or sets the caption that is displayed for a data field when the field value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  remarks: Sometimes a field value is stored as null in the data source. You can specify a custom caption to display for data fields that have a null value by setting the NullDisplayText property. If this property is not set, null field values are displayed as empty strings (\"\").\n  syntax:\n    content: public string NullDisplayText { get; set; }\n    return:\n      type: System.String\n      description: The caption that is displayed for a data field when the field value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>. The default is an empty string (\"\"), which indicates that this property is not set.\n  overload: System.Web.DynamicData.DynamicField.NullDisplayText*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.DynamicField.ReadOnly\n  id: ReadOnly\n  parent: System.Web.DynamicData.DynamicField\n  langs:\n  - csharp\n  name: ReadOnly\n  nameWithType: DynamicField.ReadOnly\n  fullName: System.Web.DynamicData.DynamicField.ReadOnly\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the read-only state of the dynamic field.\n  remarks: If the ReadOnly property is `true`, the <xref:System.Web.DynamicData.DynamicField> control loads a read-only template. This property requires that view state be enabled.\n  syntax:\n    content: public virtual bool ReadOnly { get; set; }\n    return:\n      type: System.Boolean\n      description: The read-only state of the dynamic field.\n  overload: System.Web.DynamicData.DynamicField.ReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.DynamicField.SetAttribute(System.String,System.String)\n  id: SetAttribute(System.String,System.String)\n  parent: System.Web.DynamicData.DynamicField\n  langs:\n  - csharp\n  name: SetAttribute(String,String)\n  nameWithType: DynamicField.SetAttribute(String,String)\n  fullName: System.Web.DynamicData.DynamicField.SetAttribute(String,String)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Sets an attribute that is associated with the <xref href=\"System.Web.DynamicData.DynamicField\"></xref> object.\n  syntax:\n    content: public void SetAttribute (string key, string value);\n    parameters:\n    - id: key\n      type: System.String\n      description: The name of the attribute to be set.\n    - id: value\n      type: System.String\n      description: The attribute value.\n  overload: System.Web.DynamicData.DynamicField.SetAttribute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.DynamicField.SortExpression\n  id: SortExpression\n  parent: System.Web.DynamicData.DynamicField\n  langs:\n  - csharp\n  name: SortExpression\n  nameWithType: DynamicField.SortExpression\n  fullName: System.Web.DynamicData.DynamicField.SortExpression\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets or sets the sort expression that is used when the data field is used to sort the data source by.\n  remarks: \"The SortExpression property tries to use the value of the <xref:System.Web.DynamicData.MetaColumn.SortExpression%2A?displayProperty=fullName> property of the column object that is associated with the <xref:System.Web.DynamicData.DynamicField> object by setting the <xref:System.Web.DynamicData.DynamicField.DataField%2A> property.  \\n  \\n The <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A> method is called to raise a state change event when the SortExpression property is set.  \\n  \\n The value of the SortExpression property is stored in view state.\"\n  syntax:\n    content: public override string SortExpression { get; set; }\n    return:\n      type: System.String\n      description: The sort expression that is used when the data field is used to sort the data source by.\n  overload: System.Web.DynamicData.DynamicField.SortExpression*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Web.DynamicData.DynamicField\"></xref> object is inside a data-bound control that is not bound to a data source control that implements the <xref href=\"System.Web.DynamicData.IDynamicDataSource\"></xref> interface.\n  platform:\n  - net462\n- uid: System.Web.DynamicData.DynamicField.UIHint\n  id: UIHint\n  parent: System.Web.DynamicData.DynamicField\n  langs:\n  - csharp\n  name: UIHint\n  nameWithType: DynamicField.UIHint\n  fullName: System.Web.DynamicData.DynamicField.UIHint\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets or sets the field template to use for displaying the data field.\n  remarks: \"Use the UIHint property to specify the field template to use to display the UI for a data field. Field templates by default are user controls and their names contain a suffix to identify field templates that are used for edit operations and insert operations. The suffixes are _edit and _insert, respectively. When you set a value to the UIHint property, you set the name without the suffixes. Dynamic Data will identify the current mode of the data field and will render the correct field template.  \\n  \\n If the UIHint property is not set, Dynamic Data by default will render the field template based on the field type. For more information, see [ASP.NET Dynamic Data Scaffolding](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The field template that you specify using the UIHint property is specific to this instance of the <xref:System.Web.DynamicData.DynamicField> class. You can also change the field template used by a data field across the entire application by applying the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> to your data model. Setting the UIHint property overrides the metadata applied to the data model. For more information about metadata attributes, see [ASP.NET Dynamic Data](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A> method is called to raise a state change event when the UIHint property is set.  \\n  \\n The value of the UIHint property is stored in view state.\"\n  syntax:\n    content: public virtual string UIHint { get; set; }\n    return:\n      type: System.String\n      description: The name of the field template to use for displaying the data field.\n  overload: System.Web.DynamicData.DynamicField.UIHint*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.DynamicField.ValidateRequestMode\n  id: ValidateRequestMode\n  parent: System.Web.DynamicData.DynamicField\n  langs:\n  - csharp\n  name: ValidateRequestMode\n  nameWithType: DynamicField.ValidateRequestMode\n  fullName: System.Web.DynamicData.DynamicField.ValidateRequestMode\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets or sets a value that specifies whether the control validates client input.\n  syntax:\n    content: public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }\n    return:\n      type: System.Web.UI.ValidateRequestMode\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the control validates client input; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.DynamicData.DynamicField.ValidateRequestMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.DynamicField.ValidationGroup\n  id: ValidationGroup\n  parent: System.Web.DynamicData.DynamicField\n  langs:\n  - csharp\n  name: ValidationGroup\n  nameWithType: DynamicField.ValidationGroup\n  fullName: System.Web.DynamicData.DynamicField.ValidationGroup\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the <xref:System.Web.DynamicData.DynamicControl.ValidationGroup*> object that this <xref href=\"System.Web.DynamicData.DynamicField\"></xref> object is associated with.\n  syntax:\n    content: public virtual string ValidationGroup { get; set; }\n    return:\n      type: System.String\n      description: The name of the validation group to which this validation control belongs. The default is an empty string (\"\"), which indicates that this property is not set.\n  overload: System.Web.DynamicData.DynamicField.ValidationGroup*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.UI.WebControls.DataControlField\n  isExternal: false\n  name: System.Web.UI.WebControls.DataControlField\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Web.DynamicData.DynamicField.#ctor\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: DynamicField()\n  nameWithType: DynamicField.DynamicField()\n  fullName: System.Web.DynamicData.DynamicField.DynamicField()\n- uid: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: ApplyFormatInEditMode\n  nameWithType: DynamicField.ApplyFormatInEditMode\n  fullName: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.DynamicData.DynamicField.Column\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: Column\n  nameWithType: DynamicField.Column\n  fullName: System.Web.DynamicData.DynamicField.Column\n- uid: System.Web.DynamicData.MetaColumn\n  parent: System.Web.DynamicData\n  isExternal: false\n  name: MetaColumn\n  nameWithType: MetaColumn\n  fullName: System.Web.DynamicData.MetaColumn\n- uid: System.Web.DynamicData.DynamicField.ConfigureDynamicControl(System.Web.DynamicData.DynamicControl)\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: ConfigureDynamicControl(DynamicControl)\n  nameWithType: DynamicField.ConfigureDynamicControl(DynamicControl)\n  fullName: System.Web.DynamicData.DynamicField.ConfigureDynamicControl(DynamicControl)\n- uid: System.Web.DynamicData.DynamicControl\n  parent: System.Web.DynamicData\n  isExternal: false\n  name: DynamicControl\n  nameWithType: DynamicControl\n  fullName: System.Web.DynamicData.DynamicControl\n- uid: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: ConvertEmptyStringToNull\n  nameWithType: DynamicField.ConvertEmptyStringToNull\n  fullName: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull\n- uid: System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: CopyProperties(DataControlField)\n  nameWithType: DynamicField.CopyProperties(DataControlField)\n  fullName: System.Web.DynamicData.DynamicField.CopyProperties(DataControlField)\n- uid: System.Web.DynamicData.DynamicField.CreateDynamicControl\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: CreateDynamicControl()\n  nameWithType: DynamicField.CreateDynamicControl()\n  fullName: System.Web.DynamicData.DynamicField.CreateDynamicControl()\n- uid: System.Web.DynamicData.DynamicField.CreateField\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: CreateField()\n  nameWithType: DynamicField.CreateField()\n  fullName: System.Web.DynamicData.DynamicField.CreateField()\n- uid: System.Web.DynamicData.DynamicField.DataField\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: DataField\n  nameWithType: DynamicField.DataField\n  fullName: System.Web.DynamicData.DynamicField.DataField\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.DynamicData.DynamicField.DataFormatString\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: DataFormatString\n  nameWithType: DynamicField.DataFormatString\n  fullName: System.Web.DynamicData.DynamicField.DataFormatString\n- uid: System.Web.DynamicData.DynamicField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)\n  nameWithType: DynamicField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)\n  fullName: System.Web.DynamicData.DynamicField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)\n- uid: System.Collections.Specialized.IOrderedDictionary\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: IOrderedDictionary\n  nameWithType: IOrderedDictionary\n  fullName: System.Collections.Specialized.IOrderedDictionary\n- uid: System.Web.UI.WebControls.DataControlFieldCell\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: DataControlFieldCell\n  nameWithType: DataControlFieldCell\n  fullName: System.Web.UI.WebControls.DataControlFieldCell\n- uid: System.Web.UI.WebControls.DataControlRowState\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: DataControlRowState\n  nameWithType: DataControlRowState\n  fullName: System.Web.UI.WebControls.DataControlRowState\n- uid: System.Web.DynamicData.DynamicField.GetAttribute(System.String)\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: GetAttribute(String)\n  nameWithType: DynamicField.GetAttribute(String)\n  fullName: System.Web.DynamicData.DynamicField.GetAttribute(String)\n- uid: System.Web.DynamicData.DynamicField.HeaderText\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: HeaderText\n  nameWithType: DynamicField.HeaderText\n  fullName: System.Web.DynamicData.DynamicField.HeaderText\n- uid: System.Web.DynamicData.DynamicField.HtmlEncode\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: HtmlEncode\n  nameWithType: DynamicField.HtmlEncode\n  fullName: System.Web.DynamicData.DynamicField.HtmlEncode\n- uid: System.Web.DynamicData.DynamicField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)\n  nameWithType: DynamicField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)\n  fullName: System.Web.DynamicData.DynamicField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)\n- uid: System.Web.UI.WebControls.DataControlCellType\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: DataControlCellType\n  nameWithType: DataControlCellType\n  fullName: System.Web.UI.WebControls.DataControlCellType\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.DynamicData.DynamicField.NullDisplayText\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: NullDisplayText\n  nameWithType: DynamicField.NullDisplayText\n  fullName: System.Web.DynamicData.DynamicField.NullDisplayText\n- uid: System.Web.DynamicData.DynamicField.ReadOnly\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: ReadOnly\n  nameWithType: DynamicField.ReadOnly\n  fullName: System.Web.DynamicData.DynamicField.ReadOnly\n- uid: System.Web.DynamicData.DynamicField.SetAttribute(System.String,System.String)\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: SetAttribute(String,String)\n  nameWithType: DynamicField.SetAttribute(String,String)\n  fullName: System.Web.DynamicData.DynamicField.SetAttribute(String,String)\n- uid: System.Web.DynamicData.DynamicField.SortExpression\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: SortExpression\n  nameWithType: DynamicField.SortExpression\n  fullName: System.Web.DynamicData.DynamicField.SortExpression\n- uid: System.Web.DynamicData.DynamicField.UIHint\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: UIHint\n  nameWithType: DynamicField.UIHint\n  fullName: System.Web.DynamicData.DynamicField.UIHint\n- uid: System.Web.DynamicData.DynamicField.ValidateRequestMode\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: ValidateRequestMode\n  nameWithType: DynamicField.ValidateRequestMode\n  fullName: System.Web.DynamicData.DynamicField.ValidateRequestMode\n- uid: System.Web.UI.ValidateRequestMode\n  parent: System.Web.UI\n  isExternal: false\n  name: ValidateRequestMode\n  nameWithType: ValidateRequestMode\n  fullName: System.Web.UI.ValidateRequestMode\n- uid: System.Web.DynamicData.DynamicField.ValidationGroup\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: ValidationGroup\n  nameWithType: DynamicField.ValidationGroup\n  fullName: System.Web.DynamicData.DynamicField.ValidationGroup\n- uid: System.Web.DynamicData.DynamicField.#ctor*\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: DynamicField\n  nameWithType: DynamicField.DynamicField\n- uid: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode*\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: ApplyFormatInEditMode\n  nameWithType: DynamicField.ApplyFormatInEditMode\n- uid: System.Web.DynamicData.DynamicField.Column*\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: Column\n  nameWithType: DynamicField.Column\n- uid: System.Web.DynamicData.DynamicField.ConfigureDynamicControl*\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: ConfigureDynamicControl\n  nameWithType: DynamicField.ConfigureDynamicControl\n- uid: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull*\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: ConvertEmptyStringToNull\n  nameWithType: DynamicField.ConvertEmptyStringToNull\n- uid: System.Web.DynamicData.DynamicField.CopyProperties*\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: CopyProperties\n  nameWithType: DynamicField.CopyProperties\n- uid: System.Web.DynamicData.DynamicField.CreateDynamicControl*\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: CreateDynamicControl\n  nameWithType: DynamicField.CreateDynamicControl\n- uid: System.Web.DynamicData.DynamicField.CreateField*\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: CreateField\n  nameWithType: DynamicField.CreateField\n- uid: System.Web.DynamicData.DynamicField.DataField*\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: DataField\n  nameWithType: DynamicField.DataField\n- uid: System.Web.DynamicData.DynamicField.DataFormatString*\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: DataFormatString\n  nameWithType: DynamicField.DataFormatString\n- uid: System.Web.DynamicData.DynamicField.ExtractValuesFromCell*\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: ExtractValuesFromCell\n  nameWithType: DynamicField.ExtractValuesFromCell\n- uid: System.Web.DynamicData.DynamicField.GetAttribute*\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: GetAttribute\n  nameWithType: DynamicField.GetAttribute\n- uid: System.Web.DynamicData.DynamicField.HeaderText*\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: HeaderText\n  nameWithType: DynamicField.HeaderText\n- uid: System.Web.DynamicData.DynamicField.HtmlEncode*\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: HtmlEncode\n  nameWithType: DynamicField.HtmlEncode\n- uid: System.Web.DynamicData.DynamicField.InitializeCell*\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: InitializeCell\n  nameWithType: DynamicField.InitializeCell\n- uid: System.Web.DynamicData.DynamicField.NullDisplayText*\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: NullDisplayText\n  nameWithType: DynamicField.NullDisplayText\n- uid: System.Web.DynamicData.DynamicField.ReadOnly*\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: ReadOnly\n  nameWithType: DynamicField.ReadOnly\n- uid: System.Web.DynamicData.DynamicField.SetAttribute*\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: SetAttribute\n  nameWithType: DynamicField.SetAttribute\n- uid: System.Web.DynamicData.DynamicField.SortExpression*\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: SortExpression\n  nameWithType: DynamicField.SortExpression\n- uid: System.Web.DynamicData.DynamicField.UIHint*\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: UIHint\n  nameWithType: DynamicField.UIHint\n- uid: System.Web.DynamicData.DynamicField.ValidateRequestMode*\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: ValidateRequestMode\n  nameWithType: DynamicField.ValidateRequestMode\n- uid: System.Web.DynamicData.DynamicField.ValidationGroup*\n  parent: System.Web.DynamicData.DynamicField\n  isExternal: false\n  name: ValidationGroup\n  nameWithType: DynamicField.ValidationGroup\n"}