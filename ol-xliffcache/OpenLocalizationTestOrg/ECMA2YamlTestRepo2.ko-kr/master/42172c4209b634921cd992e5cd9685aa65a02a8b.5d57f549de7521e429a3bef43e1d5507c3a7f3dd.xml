{"nodes":[{"pos":[613,665],"content":"Provides methods for sharing and readapting add-ins.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides methods for sharing and readapting add-ins.","pos":[0,52]}]},{"pos":[678,1217],"content":"You can use this class to share an add-in with another host that does not have the same pipeline to that add-in (particularly, another host that does not have the same host view of the add-in).       If you need to adapt an activated add-in from its host view to the contract, use the <xref:System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter%2A> method.       If you have an instance of the contract and need to convert it to the host view, use the <xref:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter%2A> method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can use this class to share an add-in with another host that does not have the same pipeline to that add-in (particularly, another host that does not have the same host view of the add-in).       If you need to adapt an activated add-in from its host view to the contract, use the <xref:System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter%2A> method.       If you have an instance of the contract and need to convert it to the host view, use the <xref:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter%2A> method.","pos":[0,535],"nodes":[{"content":"You can use this class to share an add-in with another host that does not have the same pipeline to that add-in (particularly, another host that does not have the same host view of the add-in).","pos":[0,193]},{"content":"If you need to adapt an activated add-in from its host view to the contract, use the &lt;xref:System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter%2A&gt; method.","pos":[200,362],"source":"       If you need to adapt an activated add-in from its host view to the contract, use the <xref:System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter%2A> method."},{"content":"If you have an instance of the contract and need to convert it to the host view, use the &lt;xref:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter%2A&gt; method.","pos":[369,535],"source":"       If you have an instance of the contract and need to convert it to the host view, use the <xref:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter%2A> method."}]}]},{"pos":[2333,2345],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2439,2451],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2501,2513],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3458,3470],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3539,3551],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3601,3613],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4199,4269],"content":"Gets the handle to the contract for a provided host view of an add-in.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the handle to the contract for a provided host view of an add-in.","pos":[0,70]}]},{"pos":[4282,4531],"content":"In this scenario, the source entity (a host) has an add-in that wants to be shared by a destination entity (another host).       Use this method to obtain the handle to the contract that was instantiated for the source entity by the add-in system.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"In this scenario, the source entity (a host) has an add-in that wants to be shared by a destination entity (another host).       Use this method to obtain the handle to the contract that was instantiated for the source entity by the add-in system.","pos":[0,247],"nodes":[{"content":"In this scenario, the source entity (a host) has an add-in that wants to be shared by a destination entity (another host).","pos":[0,122]},{"content":"Use this method to obtain the handle to the contract that was instantiated for the source entity by the add-in system.","pos":[129,247]}]}]},{"pos":[4720,4807],"content":"The host view of an add-in activated by the system from the current application domain.","needQuote":true,"needEscape":true,"nodes":[{"content":"The host view of an add-in activated by the system from the current application domain.","pos":[0,87]}]},{"pos":[4888,4913],"content":"A handle to the contract.","needQuote":true,"needEscape":true,"nodes":[{"content":"A handle to the contract.","pos":[0,25]}]},{"pos":[5103,5185],"content":"<ph id=\"ph1\">&lt;code&gt;view&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>view</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.AddIn.Pipeline.ContractAdapter\n  id: ContractAdapter\n  children:\n  - System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.AddIn.Hosting.PipelineStoreLocation)\n  - System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.String)\n  - System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter(System.Object)\n  langs:\n  - csharp\n  name: ContractAdapter\n  nameWithType: ContractAdapter\n  fullName: System.AddIn.Pipeline.ContractAdapter\n  type: Class\n  summary: Provides methods for sharing and readapting add-ins.\n  remarks: \"You can use this class to share an add-in with another host that does not have the same pipeline to that add-in (particularly, another host that does not have the same host view of the add-in).  \\n  \\n If you need to adapt an activated add-in from its host view to the contract, use the <xref:System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter%2A> method.  \\n  \\n If you have an instance of the contract and need to convert it to the host view, use the <xref:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter%2A> method.\"\n  syntax:\n    content: public static class ContractAdapter\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.AddIn.Hosting.PipelineStoreLocation)\n  id: ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.AddIn.Hosting.PipelineStoreLocation)\n  parent: System.AddIn.Pipeline.ContractAdapter\n  langs:\n  - csharp\n  name: ContractToViewAdapter(ContractHandle,PipelineStoreLocation)\n  nameWithType: ContractAdapter.ContractToViewAdapter(ContractHandle,PipelineStoreLocation)\n  fullName: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter(ContractHandle,PipelineStoreLocation)\n  type: Method\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Pipeline\n  syntax:\n    content: public static TView ContractToViewAdapter<TView> (System.AddIn.Pipeline.ContractHandle contract, System.AddIn.Hosting.PipelineStoreLocation location);\n    parameters:\n    - id: contract\n      type: System.AddIn.Pipeline.ContractHandle\n      description: To be added.\n    - id: location\n      type: System.AddIn.Hosting.PipelineStoreLocation\n      description: To be added.\n    return:\n      type: TView\n      description: To be added.\n  overload: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter<TView>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.String)\n  id: ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.String)\n  parent: System.AddIn.Pipeline.ContractAdapter\n  langs:\n  - csharp\n  name: ContractToViewAdapter(ContractHandle,String)\n  nameWithType: ContractAdapter.ContractToViewAdapter(ContractHandle,String)\n  fullName: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter(ContractHandle,String)\n  type: Method\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Pipeline\n  syntax:\n    content: public static TView ContractToViewAdapter<TView> (System.AddIn.Pipeline.ContractHandle contract, string pipelineRoot);\n    parameters:\n    - id: contract\n      type: System.AddIn.Pipeline.ContractHandle\n      description: To be added.\n    - id: pipelineRoot\n      type: System.String\n      description: To be added.\n    return:\n      type: TView\n      description: To be added.\n  overload: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter<TView>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter(System.Object)\n  id: ViewToContractAdapter(System.Object)\n  parent: System.AddIn.Pipeline.ContractAdapter\n  langs:\n  - csharp\n  name: ViewToContractAdapter(Object)\n  nameWithType: ContractAdapter.ViewToContractAdapter(Object)\n  fullName: System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter(Object)\n  type: Method\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Pipeline\n  summary: Gets the handle to the contract for a provided host view of an add-in.\n  remarks: \"In this scenario, the source entity (a host) has an add-in that wants to be shared by a destination entity (another host).  \\n  \\n Use this method to obtain the handle to the contract that was instantiated for the source entity by the add-in system.\"\n  syntax:\n    content: public static System.AddIn.Pipeline.ContractHandle ViewToContractAdapter (object view);\n    parameters:\n    - id: view\n      type: System.Object\n      description: The host view of an add-in activated by the system from the current application domain.\n    return:\n      type: System.AddIn.Pipeline.ContractHandle\n      description: A handle to the contract.\n  overload: System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>view</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.AddIn.Hosting.PipelineStoreLocation)\n  parent: System.AddIn.Pipeline.ContractAdapter\n  isExternal: false\n  name: ContractToViewAdapter(ContractHandle,PipelineStoreLocation)\n  nameWithType: ContractAdapter.ContractToViewAdapter(ContractHandle,PipelineStoreLocation)\n  fullName: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter(ContractHandle,PipelineStoreLocation)\n- uid: TView\n  isExternal: true\n  name: TView\n  nameWithType: TView\n  fullName: TView\n- uid: System.AddIn.Pipeline.ContractHandle\n  parent: System.AddIn.Pipeline\n  isExternal: false\n  name: ContractHandle\n  nameWithType: ContractHandle\n  fullName: System.AddIn.Pipeline.ContractHandle\n- uid: System.AddIn.Hosting.PipelineStoreLocation\n  parent: System.AddIn.Hosting\n  isExternal: false\n  name: PipelineStoreLocation\n  nameWithType: PipelineStoreLocation\n  fullName: System.AddIn.Hosting.PipelineStoreLocation\n- uid: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.String)\n  parent: System.AddIn.Pipeline.ContractAdapter\n  isExternal: false\n  name: ContractToViewAdapter(ContractHandle,String)\n  nameWithType: ContractAdapter.ContractToViewAdapter(ContractHandle,String)\n  fullName: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter(ContractHandle,String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter(System.Object)\n  parent: System.AddIn.Pipeline.ContractAdapter\n  isExternal: false\n  name: ViewToContractAdapter(Object)\n  nameWithType: ContractAdapter.ViewToContractAdapter(Object)\n  fullName: System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter(Object)\n- uid: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter<TView>*\n  parent: System.AddIn.Pipeline.ContractAdapter\n  isExternal: false\n  name: ContractToViewAdapter<TView>\n  nameWithType: ContractAdapter.ContractToViewAdapter<TView>\n- uid: System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter*\n  parent: System.AddIn.Pipeline.ContractAdapter\n  isExternal: false\n  name: ViewToContractAdapter\n  nameWithType: ContractAdapter.ViewToContractAdapter\n"}