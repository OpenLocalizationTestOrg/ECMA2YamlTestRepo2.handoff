{"nodes":[{"pos":[711,802],"content":"Provides an asynchronous <bpt id=\"p1\">&lt;xref href=\"System.Web.Caching.OutputCacheProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Provides an asynchronous <xref href=\"System.Web.Caching.OutputCacheProvider\"></xref> class."},{"pos":[2068,2173],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Caching.OutputCacheProviderAsync\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Caching.OutputCacheProviderAsync\"></xref> class."},{"pos":[2888,2953],"content":"Asynchronously inserts the specified entry into the output cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"Asynchronously inserts the specified entry into the output cache.","pos":[0,65]}]},{"pos":[3161,3191],"content":"A unique identifier for entry.","needQuote":true,"needEscape":true,"nodes":[{"content":"A unique identifier for entry.","pos":[0,30]}]},{"pos":[3253,3292],"content":"The content to add to the output cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"The content to add to the output cache.","pos":[0,39]}]},{"pos":[3360,3412],"content":"The time and date on which the cached entry expires.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time and date on which the cached entry expires.","pos":[0,52]}]},{"pos":[3499,3519],"content":"The specified entry.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified entry.","pos":[0,20]}]},{"pos":[4048,4126],"content":"Asynchronously returns a reference to the specified entry in the output cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"Asynchronously returns a reference to the specified entry in the output cache.","pos":[0,78]}]},{"pos":[4300,4359],"content":"A unique identifier for a cached entry in the output cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"A unique identifier for a cached entry in the output cache.","pos":[0,59]}]},{"pos":[4446,4630],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept> value that identifies the specified entry in the cache, or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the specified entry is not in the cache.","needQuote":true,"needEscape":true,"source":"The <code>key</code> value that identifies the specified entry in the cache, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the specified entry is not in the cache."},{"pos":[5174,5239],"content":"Asynchronously removes the specified entry from the output cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"Asynchronously removes the specified entry from the output cache.","pos":[0,65]}]},{"pos":[5408,5476],"content":"The unique identifier for the entry to remove from the output cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"The unique identifier for the entry to remove from the output cache.","pos":[0,68]}]},{"pos":[5548,5576],"content":"The status of the operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The status of the operation.","pos":[0,28]}]},{"pos":[6216,6328],"content":"Asynchronously Inserts the specified entry into the output cache, overwriting the entry if it is already cached.","needQuote":true,"needEscape":true,"nodes":[{"content":"Asynchronously Inserts the specified entry into the output cache, overwriting the entry if it is already cached.","pos":[0,112]}]},{"pos":[6528,6559],"content":"A unique identifier for <ph id=\"ph1\">`entry`</ph>","needQuote":true,"needEscape":true,"source":"A unique identifier for `entry`"},{"pos":[6621,6660],"content":"The content to add to the output cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"The content to add to the output cache.","pos":[0,39]}]},{"pos":[6728,6782],"content":"The time and date on which the cached <ph id=\"ph1\">`entry`</ph> expires.","needQuote":true,"needEscape":true,"source":"The time and date on which the cached `entry` expires."},{"pos":[6854,6882],"content":"The status of the operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The status of the operation.","pos":[0,28]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Caching.OutputCacheProviderAsync\n  id: OutputCacheProviderAsync\n  children:\n  - System.Web.Caching.OutputCacheProviderAsync.#ctor\n  - System.Web.Caching.OutputCacheProviderAsync.AddAsync(System.String,System.Object,System.DateTime)\n  - System.Web.Caching.OutputCacheProviderAsync.GetAsync(System.String)\n  - System.Web.Caching.OutputCacheProviderAsync.RemoveAsync(System.String)\n  - System.Web.Caching.OutputCacheProviderAsync.SetAsync(System.String,System.Object,System.DateTime)\n  langs:\n  - csharp\n  name: OutputCacheProviderAsync\n  nameWithType: OutputCacheProviderAsync\n  fullName: System.Web.Caching.OutputCacheProviderAsync\n  type: Class\n  summary: Provides an asynchronous <xref href=\"System.Web.Caching.OutputCacheProvider\"></xref> class.\n  syntax:\n    content: 'public abstract class OutputCacheProviderAsync : System.Web.Caching.OutputCacheProvider'\n  inheritance:\n  - System.Object\n  - System.Configuration.Provider.ProviderBase\n  - System.Web.Caching.OutputCacheProvider\n  implements: []\n  inheritedMembers:\n  - System.Configuration.Provider.ProviderBase.Description\n  - System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  - System.Configuration.Provider.ProviderBase.Name\n  - System.Web.Caching.OutputCacheProvider.Add(System.String,System.Object,System.DateTime)\n  - System.Web.Caching.OutputCacheProvider.Get(System.String)\n  - System.Web.Caching.OutputCacheProvider.Remove(System.String)\n  - System.Web.Caching.OutputCacheProvider.Set(System.String,System.Object,System.DateTime)\n  platform:\n  - net462\n- uid: System.Web.Caching.OutputCacheProviderAsync.#ctor\n  id: '#ctor'\n  parent: System.Web.Caching.OutputCacheProviderAsync\n  langs:\n  - csharp\n  name: OutputCacheProviderAsync()\n  nameWithType: OutputCacheProviderAsync.OutputCacheProviderAsync()\n  fullName: System.Web.Caching.OutputCacheProviderAsync.OutputCacheProviderAsync()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Caching\n  summary: Initializes a new instance of the <xref href=\"System.Web.Caching.OutputCacheProviderAsync\"></xref> class.\n  syntax:\n    content: protected OutputCacheProviderAsync ();\n    parameters: []\n  overload: System.Web.Caching.OutputCacheProviderAsync.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Caching.OutputCacheProviderAsync.AddAsync(System.String,System.Object,System.DateTime)\n  id: AddAsync(System.String,System.Object,System.DateTime)\n  parent: System.Web.Caching.OutputCacheProviderAsync\n  langs:\n  - csharp\n  name: AddAsync(String,Object,DateTime)\n  nameWithType: OutputCacheProviderAsync.AddAsync(String,Object,DateTime)\n  fullName: System.Web.Caching.OutputCacheProviderAsync.AddAsync(String,Object,DateTime)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Caching\n  summary: Asynchronously inserts the specified entry into the output cache.\n  syntax:\n    content: public abstract System.Threading.Tasks.Task<object> AddAsync (string key, object entry, DateTime utcExpiry);\n    parameters:\n    - id: key\n      type: System.String\n      description: A unique identifier for entry.\n    - id: entry\n      type: System.Object\n      description: The content to add to the output cache.\n    - id: utcExpiry\n      type: System.DateTime\n      description: The time and date on which the cached entry expires.\n    return:\n      type: System.Threading.Tasks.Task{System.Object}\n      description: The specified entry.\n  overload: System.Web.Caching.OutputCacheProviderAsync.AddAsync*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Caching.OutputCacheProviderAsync.GetAsync(System.String)\n  id: GetAsync(System.String)\n  parent: System.Web.Caching.OutputCacheProviderAsync\n  langs:\n  - csharp\n  name: GetAsync(String)\n  nameWithType: OutputCacheProviderAsync.GetAsync(String)\n  fullName: System.Web.Caching.OutputCacheProviderAsync.GetAsync(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Caching\n  summary: Asynchronously returns a reference to the specified entry in the output cache.\n  syntax:\n    content: public abstract System.Threading.Tasks.Task<object> GetAsync (string key);\n    parameters:\n    - id: key\n      type: System.String\n      description: A unique identifier for a cached entry in the output cache.\n    return:\n      type: System.Threading.Tasks.Task{System.Object}\n      description: The <code>key</code> value that identifies the specified entry in the cache, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the specified entry is not in the cache.\n  overload: System.Web.Caching.OutputCacheProviderAsync.GetAsync*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Caching.OutputCacheProviderAsync.RemoveAsync(System.String)\n  id: RemoveAsync(System.String)\n  parent: System.Web.Caching.OutputCacheProviderAsync\n  langs:\n  - csharp\n  name: RemoveAsync(String)\n  nameWithType: OutputCacheProviderAsync.RemoveAsync(String)\n  fullName: System.Web.Caching.OutputCacheProviderAsync.RemoveAsync(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Caching\n  summary: Asynchronously removes the specified entry from the output cache.\n  syntax:\n    content: public abstract System.Threading.Tasks.Task RemoveAsync (string key);\n    parameters:\n    - id: key\n      type: System.String\n      description: The unique identifier for the entry to remove from the output cache.\n    return:\n      type: System.Threading.Tasks.Task\n      description: The status of the operation.\n  overload: System.Web.Caching.OutputCacheProviderAsync.RemoveAsync*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Caching.OutputCacheProviderAsync.SetAsync(System.String,System.Object,System.DateTime)\n  id: SetAsync(System.String,System.Object,System.DateTime)\n  parent: System.Web.Caching.OutputCacheProviderAsync\n  langs:\n  - csharp\n  name: SetAsync(String,Object,DateTime)\n  nameWithType: OutputCacheProviderAsync.SetAsync(String,Object,DateTime)\n  fullName: System.Web.Caching.OutputCacheProviderAsync.SetAsync(String,Object,DateTime)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Caching\n  summary: Asynchronously Inserts the specified entry into the output cache, overwriting the entry if it is already cached.\n  syntax:\n    content: public abstract System.Threading.Tasks.Task SetAsync (string key, object entry, DateTime utcExpiry);\n    parameters:\n    - id: key\n      type: System.String\n      description: A unique identifier for `entry`\n    - id: entry\n      type: System.Object\n      description: The content to add to the output cache.\n    - id: utcExpiry\n      type: System.DateTime\n      description: The time and date on which the cached `entry` expires.\n    return:\n      type: System.Threading.Tasks.Task\n      description: The status of the operation.\n  overload: System.Web.Caching.OutputCacheProviderAsync.SetAsync*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.Caching.OutputCacheProvider\n  isExternal: false\n  name: System.Web.Caching.OutputCacheProvider\n- uid: System.Web.Caching.OutputCacheProviderAsync.#ctor\n  parent: System.Web.Caching.OutputCacheProviderAsync\n  isExternal: false\n  name: OutputCacheProviderAsync()\n  nameWithType: OutputCacheProviderAsync.OutputCacheProviderAsync()\n  fullName: System.Web.Caching.OutputCacheProviderAsync.OutputCacheProviderAsync()\n- uid: System.Web.Caching.OutputCacheProviderAsync.AddAsync(System.String,System.Object,System.DateTime)\n  parent: System.Web.Caching.OutputCacheProviderAsync\n  isExternal: false\n  name: AddAsync(String,Object,DateTime)\n  nameWithType: OutputCacheProviderAsync.AddAsync(String,Object,DateTime)\n  fullName: System.Web.Caching.OutputCacheProviderAsync.AddAsync(String,Object,DateTime)\n- uid: System.Threading.Tasks.Task{System.Object}\n  parent: System.Threading.Tasks\n  isExternal: true\n  name: Task<Object>\n  nameWithType: Task<Object>\n  fullName: System.Threading.Tasks.Task<System.Object>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: Task<System.Object>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.DateTime\n  parent: System\n  isExternal: true\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.Web.Caching.OutputCacheProviderAsync.GetAsync(System.String)\n  parent: System.Web.Caching.OutputCacheProviderAsync\n  isExternal: false\n  name: GetAsync(String)\n  nameWithType: OutputCacheProviderAsync.GetAsync(String)\n  fullName: System.Web.Caching.OutputCacheProviderAsync.GetAsync(String)\n- uid: System.Web.Caching.OutputCacheProviderAsync.RemoveAsync(System.String)\n  parent: System.Web.Caching.OutputCacheProviderAsync\n  isExternal: false\n  name: RemoveAsync(String)\n  nameWithType: OutputCacheProviderAsync.RemoveAsync(String)\n  fullName: System.Web.Caching.OutputCacheProviderAsync.RemoveAsync(String)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: true\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Web.Caching.OutputCacheProviderAsync.SetAsync(System.String,System.Object,System.DateTime)\n  parent: System.Web.Caching.OutputCacheProviderAsync\n  isExternal: false\n  name: SetAsync(String,Object,DateTime)\n  nameWithType: OutputCacheProviderAsync.SetAsync(String,Object,DateTime)\n  fullName: System.Web.Caching.OutputCacheProviderAsync.SetAsync(String,Object,DateTime)\n- uid: System.Web.Caching.OutputCacheProviderAsync.#ctor*\n  parent: System.Web.Caching.OutputCacheProviderAsync\n  isExternal: false\n  name: OutputCacheProviderAsync\n  nameWithType: OutputCacheProviderAsync.OutputCacheProviderAsync\n- uid: System.Web.Caching.OutputCacheProviderAsync.AddAsync*\n  parent: System.Web.Caching.OutputCacheProviderAsync\n  isExternal: false\n  name: AddAsync\n  nameWithType: OutputCacheProviderAsync.AddAsync\n- uid: System.Web.Caching.OutputCacheProviderAsync.GetAsync*\n  parent: System.Web.Caching.OutputCacheProviderAsync\n  isExternal: false\n  name: GetAsync\n  nameWithType: OutputCacheProviderAsync.GetAsync\n- uid: System.Web.Caching.OutputCacheProviderAsync.RemoveAsync*\n  parent: System.Web.Caching.OutputCacheProviderAsync\n  isExternal: false\n  name: RemoveAsync\n  nameWithType: OutputCacheProviderAsync.RemoveAsync\n- uid: System.Web.Caching.OutputCacheProviderAsync.SetAsync*\n  parent: System.Web.Caching.OutputCacheProviderAsync\n  isExternal: false\n  name: SetAsync\n  nameWithType: OutputCacheProviderAsync.SetAsync\n"}