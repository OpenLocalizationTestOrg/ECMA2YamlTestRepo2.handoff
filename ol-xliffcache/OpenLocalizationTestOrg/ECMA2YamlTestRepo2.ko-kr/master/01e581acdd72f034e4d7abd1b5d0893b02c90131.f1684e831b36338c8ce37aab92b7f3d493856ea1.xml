{"nodes":[{"pos":[939,1037],"content":"Downloads the policy file that an instance of the <xref:System.Net.Sockets.Socket> class will use.","needQuote":true,"needEscape":true,"nodes":[{"content":"Downloads the policy file that an instance of the &lt;xref:System.Net.Sockets.Socket&gt; class will use.","pos":[0,98],"source":"Downloads the policy file that an instance of the <xref:System.Net.Sockets.Socket> class will use."}]},{"pos":[2003,2112],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Net.Sockets.HttpPolicyDownloaderProtocol\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Net.Sockets.HttpPolicyDownloaderProtocol\"></xref> class."},{"pos":[2291,2331],"content":"The URI where the application is hosted.","needQuote":true,"needEscape":true,"nodes":[{"content":"The URI where the application is hosted.","pos":[0,40]}]},{"pos":[2402,2440],"content":"The IP address where the app will run.","needQuote":true,"needEscape":true,"nodes":[{"content":"The IP address where the app will run.","pos":[0,38]}]},{"pos":[2923,2961],"content":"Abort the download of the policy file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Abort the download of the policy file.","pos":[0,38]}]},{"pos":[3700,3738],"content":"Begin the download of the policy file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Begin the download of the policy file.","pos":[0,38]}]},{"pos":[3950,4012],"content":"A callback function used to provide critical security actions.","needQuote":true,"needEscape":true,"nodes":[{"content":"A callback function used to provide critical security actions.","pos":[0,62]}]},{"pos":[4636,4690],"content":"The download callback function to receive the results.","needQuote":true,"needEscape":true,"nodes":[{"content":"The download callback function to receive the results.","pos":[0,54]}]},{"pos":[4842,4938],"content":"The <xref:System.IAsyncResult> to receive the results when the asynchronous operation completes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; to receive the results when the asynchronous operation completes.","pos":[0,96],"source":"The <xref:System.IAsyncResult> to receive the results when the asynchronous operation completes."}]},{"pos":[5545,5596],"content":"The read callback function to read the policy file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The read callback function to read the policy file.","pos":[0,51]}]},{"pos":[5744,5840],"content":"The <xref:System.IAsyncResult> to receive the results when the asynchronous operation completes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; to receive the results when the asynchronous operation completes.","pos":[0,96],"source":"The <xref:System.IAsyncResult> to receive the results when the asynchronous operation completes."}]},{"pos":[6601,6710],"content":"Registers an object to creates an unsafe <xref:System.Net.WebRequest> to a Uniform Resource Identifier (URI).","needQuote":true,"needEscape":true,"nodes":[{"content":"Registers an object to creates an unsafe &lt;xref:System.Net.WebRequest&gt; to a Uniform Resource Identifier (URI).","pos":[0,109],"source":"Registers an object to creates an unsafe <xref:System.Net.WebRequest> to a Uniform Resource Identifier (URI)."}]},{"pos":[6931,6991],"content":"The object to create an unsafe <xref:System.Net.WebRequest>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to create an unsafe &lt;xref:System.Net.WebRequest&gt;.","pos":[0,60],"source":"The object to create an unsafe <xref:System.Net.WebRequest>."}]},{"pos":[7501,7559],"content":"Gets the result of the download of the socket policy file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the result of the download of the socket policy file.","pos":[0,58]}]},{"pos":[7714,7829],"content":"Returns <xref href=\"System.Net.Sockets.SocketPolicy\"></xref>.       The socket policy file that was downloaded.","needQuote":false,"needEscape":true,"nodes":[{"content":"Returns <bpt id=\"p1\">&lt;xref href=\"System.Net.Sockets.SocketPolicy\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,61],"source":"Returns <xref href=\"System.Net.Sockets.SocketPolicy\"></xref>."},{"content":"The socket policy file that was downloaded.","pos":[68,111]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.Sockets.HttpPolicyDownloaderProtocol\n  id: HttpPolicyDownloaderProtocol\n  children:\n  - System.Net.Sockets.HttpPolicyDownloaderProtocol.#ctor(System.Uri,System.Net.IPAddress)\n  - System.Net.Sockets.HttpPolicyDownloaderProtocol.Abort\n  - System.Net.Sockets.HttpPolicyDownloaderProtocol.BeginDownload(System.Net.Sockets.SecurityCriticalAction)\n  - System.Net.Sockets.HttpPolicyDownloaderProtocol.DownloadCallback(System.IAsyncResult)\n  - System.Net.Sockets.HttpPolicyDownloaderProtocol.ReadCallback(System.IAsyncResult)\n  - System.Net.Sockets.HttpPolicyDownloaderProtocol.RegisterUnsafeWebRequestCreator(System.Net.IUnsafeWebRequestCreate)\n  - System.Net.Sockets.HttpPolicyDownloaderProtocol.Result\n  langs:\n  - csharp\n  name: HttpPolicyDownloaderProtocol\n  nameWithType: HttpPolicyDownloaderProtocol\n  fullName: System.Net.Sockets.HttpPolicyDownloaderProtocol\n  type: Class\n  summary: Downloads the policy file that an instance of the <xref:System.Net.Sockets.Socket> class will use.\n  syntax:\n    content: >-\n      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]\n\n      [System.Obsolete(\"This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.\", true)]\n\n      public class HttpPolicyDownloaderProtocol\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Net.Sockets.HttpPolicyDownloaderProtocol.#ctor(System.Uri,System.Net.IPAddress)\n  id: '#ctor(System.Uri,System.Net.IPAddress)'\n  parent: System.Net.Sockets.HttpPolicyDownloaderProtocol\n  langs:\n  - csharp\n  name: HttpPolicyDownloaderProtocol(Uri,IPAddress)\n  nameWithType: HttpPolicyDownloaderProtocol.HttpPolicyDownloaderProtocol(Uri,IPAddress)\n  fullName: System.Net.Sockets.HttpPolicyDownloaderProtocol.HttpPolicyDownloaderProtocol(Uri,IPAddress)\n  type: Constructor\n  assemblies:\n  - System.Net\n  namespace: System.Net.Sockets\n  summary: Initializes a new instance of the <xref href=\"System.Net.Sockets.HttpPolicyDownloaderProtocol\"></xref> class.\n  syntax:\n    content: public HttpPolicyDownloaderProtocol (Uri appUri, System.Net.IPAddress address);\n    parameters:\n    - id: appUri\n      type: System.Uri\n      description: The URI where the application is hosted.\n    - id: address\n      type: System.Net.IPAddress\n      description: The IP address where the app will run.\n  overload: System.Net.Sockets.HttpPolicyDownloaderProtocol.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Sockets.HttpPolicyDownloaderProtocol.Abort\n  id: Abort\n  parent: System.Net.Sockets.HttpPolicyDownloaderProtocol\n  langs:\n  - csharp\n  name: Abort()\n  nameWithType: HttpPolicyDownloaderProtocol.Abort()\n  fullName: System.Net.Sockets.HttpPolicyDownloaderProtocol.Abort()\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.Sockets\n  summary: Abort the download of the policy file.\n  syntax:\n    content: public void Abort ();\n    parameters: []\n  overload: System.Net.Sockets.HttpPolicyDownloaderProtocol.Abort*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Sockets.HttpPolicyDownloaderProtocol.BeginDownload(System.Net.Sockets.SecurityCriticalAction)\n  id: BeginDownload(System.Net.Sockets.SecurityCriticalAction)\n  parent: System.Net.Sockets.HttpPolicyDownloaderProtocol\n  langs:\n  - csharp\n  name: BeginDownload(SecurityCriticalAction)\n  nameWithType: HttpPolicyDownloaderProtocol.BeginDownload(SecurityCriticalAction)\n  fullName: System.Net.Sockets.HttpPolicyDownloaderProtocol.BeginDownload(SecurityCriticalAction)\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.Sockets\n  summary: Begin the download of the policy file.\n  syntax:\n    content: public void BeginDownload (System.Net.Sockets.SecurityCriticalAction callback);\n    parameters:\n    - id: callback\n      type: System.Net.Sockets.SecurityCriticalAction\n      description: A callback function used to provide critical security actions.\n  overload: System.Net.Sockets.HttpPolicyDownloaderProtocol.BeginDownload*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Sockets.HttpPolicyDownloaderProtocol.DownloadCallback(System.IAsyncResult)\n  id: DownloadCallback(System.IAsyncResult)\n  parent: System.Net.Sockets.HttpPolicyDownloaderProtocol\n  langs:\n  - csharp\n  name: DownloadCallback(IAsyncResult)\n  nameWithType: HttpPolicyDownloaderProtocol.DownloadCallback(IAsyncResult)\n  fullName: System.Net.Sockets.HttpPolicyDownloaderProtocol.DownloadCallback(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.Sockets\n  summary: The download callback function to receive the results.\n  syntax:\n    content: public void DownloadCallback (IAsyncResult ar);\n    parameters:\n    - id: ar\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> to receive the results when the asynchronous operation completes.\n  overload: System.Net.Sockets.HttpPolicyDownloaderProtocol.DownloadCallback*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Sockets.HttpPolicyDownloaderProtocol.ReadCallback(System.IAsyncResult)\n  id: ReadCallback(System.IAsyncResult)\n  parent: System.Net.Sockets.HttpPolicyDownloaderProtocol\n  langs:\n  - csharp\n  name: ReadCallback(IAsyncResult)\n  nameWithType: HttpPolicyDownloaderProtocol.ReadCallback(IAsyncResult)\n  fullName: System.Net.Sockets.HttpPolicyDownloaderProtocol.ReadCallback(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.Sockets\n  summary: The read callback function to read the policy file.\n  syntax:\n    content: public void ReadCallback (IAsyncResult ar);\n    parameters:\n    - id: ar\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> to receive the results when the asynchronous operation completes.\n  overload: System.Net.Sockets.HttpPolicyDownloaderProtocol.ReadCallback*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Sockets.HttpPolicyDownloaderProtocol.RegisterUnsafeWebRequestCreator(System.Net.IUnsafeWebRequestCreate)\n  id: RegisterUnsafeWebRequestCreator(System.Net.IUnsafeWebRequestCreate)\n  parent: System.Net.Sockets.HttpPolicyDownloaderProtocol\n  langs:\n  - csharp\n  name: RegisterUnsafeWebRequestCreator(IUnsafeWebRequestCreate)\n  nameWithType: HttpPolicyDownloaderProtocol.RegisterUnsafeWebRequestCreator(IUnsafeWebRequestCreate)\n  fullName: System.Net.Sockets.HttpPolicyDownloaderProtocol.RegisterUnsafeWebRequestCreator(IUnsafeWebRequestCreate)\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.Sockets\n  summary: Registers an object to creates an unsafe <xref:System.Net.WebRequest> to a Uniform Resource Identifier (URI).\n  syntax:\n    content: public static void RegisterUnsafeWebRequestCreator (System.Net.IUnsafeWebRequestCreate creator);\n    parameters:\n    - id: creator\n      type: System.Net.IUnsafeWebRequestCreate\n      description: The object to create an unsafe <xref:System.Net.WebRequest>.\n  overload: System.Net.Sockets.HttpPolicyDownloaderProtocol.RegisterUnsafeWebRequestCreator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Sockets.HttpPolicyDownloaderProtocol.Result\n  id: Result\n  parent: System.Net.Sockets.HttpPolicyDownloaderProtocol\n  langs:\n  - csharp\n  name: Result\n  nameWithType: HttpPolicyDownloaderProtocol.Result\n  fullName: System.Net.Sockets.HttpPolicyDownloaderProtocol.Result\n  type: Property\n  assemblies:\n  - System.Net\n  namespace: System.Net.Sockets\n  summary: Gets the result of the download of the socket policy file.\n  syntax:\n    content: public System.Net.Sockets.SocketPolicy Result { get; }\n    return:\n      type: System.Net.Sockets.SocketPolicy\n      description: \"Returns <xref href=\\\"System.Net.Sockets.SocketPolicy\\\"></xref>.  \\n  \\n The socket policy file that was downloaded.\"\n  overload: System.Net.Sockets.HttpPolicyDownloaderProtocol.Result*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Net.Sockets.HttpPolicyDownloaderProtocol.#ctor(System.Uri,System.Net.IPAddress)\n  parent: System.Net.Sockets.HttpPolicyDownloaderProtocol\n  isExternal: false\n  name: HttpPolicyDownloaderProtocol(Uri,IPAddress)\n  nameWithType: HttpPolicyDownloaderProtocol.HttpPolicyDownloaderProtocol(Uri,IPAddress)\n  fullName: System.Net.Sockets.HttpPolicyDownloaderProtocol.HttpPolicyDownloaderProtocol(Uri,IPAddress)\n- uid: System.Uri\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.Net.IPAddress\n  parent: System.Net\n  isExternal: true\n  name: IPAddress\n  nameWithType: IPAddress\n  fullName: System.Net.IPAddress\n- uid: System.Net.Sockets.HttpPolicyDownloaderProtocol.Abort\n  parent: System.Net.Sockets.HttpPolicyDownloaderProtocol\n  isExternal: false\n  name: Abort()\n  nameWithType: HttpPolicyDownloaderProtocol.Abort()\n  fullName: System.Net.Sockets.HttpPolicyDownloaderProtocol.Abort()\n- uid: System.Net.Sockets.HttpPolicyDownloaderProtocol.BeginDownload(System.Net.Sockets.SecurityCriticalAction)\n  parent: System.Net.Sockets.HttpPolicyDownloaderProtocol\n  isExternal: false\n  name: BeginDownload(SecurityCriticalAction)\n  nameWithType: HttpPolicyDownloaderProtocol.BeginDownload(SecurityCriticalAction)\n  fullName: System.Net.Sockets.HttpPolicyDownloaderProtocol.BeginDownload(SecurityCriticalAction)\n- uid: System.Net.Sockets.SecurityCriticalAction\n  parent: System.Net.Sockets\n  isExternal: false\n  name: SecurityCriticalAction\n  nameWithType: SecurityCriticalAction\n  fullName: System.Net.Sockets.SecurityCriticalAction\n- uid: System.Net.Sockets.HttpPolicyDownloaderProtocol.DownloadCallback(System.IAsyncResult)\n  parent: System.Net.Sockets.HttpPolicyDownloaderProtocol\n  isExternal: false\n  name: DownloadCallback(IAsyncResult)\n  nameWithType: HttpPolicyDownloaderProtocol.DownloadCallback(IAsyncResult)\n  fullName: System.Net.Sockets.HttpPolicyDownloaderProtocol.DownloadCallback(IAsyncResult)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: true\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.Net.Sockets.HttpPolicyDownloaderProtocol.ReadCallback(System.IAsyncResult)\n  parent: System.Net.Sockets.HttpPolicyDownloaderProtocol\n  isExternal: false\n  name: ReadCallback(IAsyncResult)\n  nameWithType: HttpPolicyDownloaderProtocol.ReadCallback(IAsyncResult)\n  fullName: System.Net.Sockets.HttpPolicyDownloaderProtocol.ReadCallback(IAsyncResult)\n- uid: System.Net.Sockets.HttpPolicyDownloaderProtocol.RegisterUnsafeWebRequestCreator(System.Net.IUnsafeWebRequestCreate)\n  parent: System.Net.Sockets.HttpPolicyDownloaderProtocol\n  isExternal: false\n  name: RegisterUnsafeWebRequestCreator(IUnsafeWebRequestCreate)\n  nameWithType: HttpPolicyDownloaderProtocol.RegisterUnsafeWebRequestCreator(IUnsafeWebRequestCreate)\n  fullName: System.Net.Sockets.HttpPolicyDownloaderProtocol.RegisterUnsafeWebRequestCreator(IUnsafeWebRequestCreate)\n- uid: System.Net.IUnsafeWebRequestCreate\n  parent: System.Net\n  isExternal: false\n  name: IUnsafeWebRequestCreate\n  nameWithType: IUnsafeWebRequestCreate\n  fullName: System.Net.IUnsafeWebRequestCreate\n- uid: System.Net.Sockets.HttpPolicyDownloaderProtocol.Result\n  parent: System.Net.Sockets.HttpPolicyDownloaderProtocol\n  isExternal: false\n  name: Result\n  nameWithType: HttpPolicyDownloaderProtocol.Result\n  fullName: System.Net.Sockets.HttpPolicyDownloaderProtocol.Result\n- uid: System.Net.Sockets.SocketPolicy\n  parent: System.Net.Sockets\n  isExternal: false\n  name: SocketPolicy\n  nameWithType: SocketPolicy\n  fullName: System.Net.Sockets.SocketPolicy\n- uid: System.Net.Sockets.HttpPolicyDownloaderProtocol.#ctor*\n  parent: System.Net.Sockets.HttpPolicyDownloaderProtocol\n  isExternal: false\n  name: HttpPolicyDownloaderProtocol\n  nameWithType: HttpPolicyDownloaderProtocol.HttpPolicyDownloaderProtocol\n- uid: System.Net.Sockets.HttpPolicyDownloaderProtocol.Abort*\n  parent: System.Net.Sockets.HttpPolicyDownloaderProtocol\n  isExternal: false\n  name: Abort\n  nameWithType: HttpPolicyDownloaderProtocol.Abort\n- uid: System.Net.Sockets.HttpPolicyDownloaderProtocol.BeginDownload*\n  parent: System.Net.Sockets.HttpPolicyDownloaderProtocol\n  isExternal: false\n  name: BeginDownload\n  nameWithType: HttpPolicyDownloaderProtocol.BeginDownload\n- uid: System.Net.Sockets.HttpPolicyDownloaderProtocol.DownloadCallback*\n  parent: System.Net.Sockets.HttpPolicyDownloaderProtocol\n  isExternal: false\n  name: DownloadCallback\n  nameWithType: HttpPolicyDownloaderProtocol.DownloadCallback\n- uid: System.Net.Sockets.HttpPolicyDownloaderProtocol.ReadCallback*\n  parent: System.Net.Sockets.HttpPolicyDownloaderProtocol\n  isExternal: false\n  name: ReadCallback\n  nameWithType: HttpPolicyDownloaderProtocol.ReadCallback\n- uid: System.Net.Sockets.HttpPolicyDownloaderProtocol.RegisterUnsafeWebRequestCreator*\n  parent: System.Net.Sockets.HttpPolicyDownloaderProtocol\n  isExternal: false\n  name: RegisterUnsafeWebRequestCreator\n  nameWithType: HttpPolicyDownloaderProtocol.RegisterUnsafeWebRequestCreator\n- uid: System.Net.Sockets.HttpPolicyDownloaderProtocol.Result*\n  parent: System.Net.Sockets.HttpPolicyDownloaderProtocol\n  isExternal: false\n  name: Result\n  nameWithType: HttpPolicyDownloaderProtocol.Result\n"}