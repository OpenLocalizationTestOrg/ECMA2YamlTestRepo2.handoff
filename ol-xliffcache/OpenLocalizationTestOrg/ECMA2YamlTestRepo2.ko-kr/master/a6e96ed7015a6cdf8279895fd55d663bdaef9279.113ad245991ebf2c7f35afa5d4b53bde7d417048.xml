{"nodes":[{"pos":[1536,1569],"content":"Creates and caches binding rules.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates and caches binding rules.","pos":[0,33]}]},{"pos":[2618,2630],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2679,2691],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3773,3785],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3876,3888],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3951,3963],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4009,4021],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4620,4670],"content":"Clears the match flag on the matchmaker call site.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears the match flag on the matchmaker call site.","pos":[0,50]}]},{"pos":[4876,4913],"content":"An instance of the dynamic call site.","needQuote":true,"needEscape":true,"nodes":[{"content":"An instance of the dynamic call site.","pos":[0,37]}]},{"pos":[5836,5848],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5936,5948],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6830,6842],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6890,6902],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7501,7541],"content":"Checks whether the executed rule matched","needQuote":true,"needEscape":true,"nodes":[{"content":"Checks whether the executed rule matched","pos":[0,40]}]},{"pos":[7745,7782],"content":"An instance of the dynamic call site.","needQuote":true,"needEscape":true,"nodes":[{"content":"An instance of the dynamic call site.","pos":[0,37]}]},{"pos":[7841,7879],"content":"true if rule matched, false otherwise.","needQuote":true,"needEscape":true,"nodes":[{"content":"true if rule matched, false otherwise.","pos":[0,38]}]},{"pos":[8777,8789],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8877,8889],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9729,9741],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9789,9801],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10713,10725],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10774,10786],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10843,10855],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11473,11517],"content":"Checks if a dynamic site requires an update.","needQuote":true,"needEscape":true,"nodes":[{"content":"Checks if a dynamic site requires an update.","pos":[0,44]}]},{"pos":[11726,11763],"content":"An instance of the dynamic call site.","needQuote":true,"needEscape":true,"nodes":[{"content":"An instance of the dynamic call site.","pos":[0,37]}]},{"pos":[11822,11875],"content":"true if rule does not need updating, false otherwise.","needQuote":true,"needEscape":true,"nodes":[{"content":"true if rule does not need updating, false otherwise.","pos":[0,53]}]},{"pos":[12789,12801],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12864,12876],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.CompilerServices.CallSiteOps\n  id: CallSiteOps\n  children:\n  - System.Runtime.CompilerServices.CallSiteOps.AddRule``1(System.Runtime.CompilerServices.CallSite{``0},``0)\n  - System.Runtime.CompilerServices.CallSiteOps.Bind``1(System.Runtime.CompilerServices.CallSiteBinder,System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n  - System.Runtime.CompilerServices.CallSiteOps.ClearMatch(System.Runtime.CompilerServices.CallSite)\n  - System.Runtime.CompilerServices.CallSiteOps.CreateMatchmaker``1(System.Runtime.CompilerServices.CallSite{``0})\n  - System.Runtime.CompilerServices.CallSiteOps.GetCachedRules``1(System.Runtime.CompilerServices.RuleCache`1)\n  - System.Runtime.CompilerServices.CallSiteOps.GetMatch(System.Runtime.CompilerServices.CallSite)\n  - System.Runtime.CompilerServices.CallSiteOps.GetRuleCache``1(System.Runtime.CompilerServices.CallSite{``0})\n  - System.Runtime.CompilerServices.CallSiteOps.GetRules``1(System.Runtime.CompilerServices.CallSite{``0})\n  - System.Runtime.CompilerServices.CallSiteOps.MoveRule``1(System.Runtime.CompilerServices.RuleCache`1,``0,System.Int32)\n  - System.Runtime.CompilerServices.CallSiteOps.SetNotMatched(System.Runtime.CompilerServices.CallSite)\n  - System.Runtime.CompilerServices.CallSiteOps.UpdateRules``1(System.Runtime.CompilerServices.CallSite{``0},System.Int32)\n  langs:\n  - csharp\n  name: CallSiteOps\n  nameWithType: CallSiteOps\n  fullName: System.Runtime.CompilerServices.CallSiteOps\n  type: Class\n  summary: Creates and caches binding rules.\n  syntax:\n    content: >-\n      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]\n\n      [System.Diagnostics.DebuggerStepThrough]\n\n      public static class CallSiteOps\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Runtime.CompilerServices.CallSiteOps.AddRule``1(System.Runtime.CompilerServices.CallSite{``0},``0)\n  id: AddRule``1(System.Runtime.CompilerServices.CallSite{``0},``0)\n  parent: System.Runtime.CompilerServices.CallSiteOps\n  langs:\n  - csharp\n  name: AddRule(CallSite<T>,T)\n  nameWithType: CallSiteOps.AddRule(CallSite<T>,T)\n  fullName: System.Runtime.CompilerServices.CallSiteOps.AddRule(CallSite<T>,T)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: 'public static void AddRule<T> (System.Runtime.CompilerServices.CallSite<T> site, T rule) where T : class;'\n    parameters:\n    - id: site\n      type: System.Runtime.CompilerServices.CallSite{T}\n      description: To be added.\n    - id: rule\n      type: T\n      description: To be added.\n  overload: System.Runtime.CompilerServices.CallSiteOps.AddRule<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.CompilerServices.CallSiteOps.Bind``1(System.Runtime.CompilerServices.CallSiteBinder,System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n  id: Bind``1(System.Runtime.CompilerServices.CallSiteBinder,System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n  parent: System.Runtime.CompilerServices.CallSiteOps\n  langs:\n  - csharp\n  name: Bind(CallSiteBinder,CallSite<T>,Object[])\n  nameWithType: CallSiteOps.Bind(CallSiteBinder,CallSite<T>,Object[])\n  fullName: System.Runtime.CompilerServices.CallSiteOps.Bind(CallSiteBinder,CallSite<T>,Object[])\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: 'public static T Bind<T> (System.Runtime.CompilerServices.CallSiteBinder binder, System.Runtime.CompilerServices.CallSite<T> site, object[] args) where T : class;'\n    parameters:\n    - id: binder\n      type: System.Runtime.CompilerServices.CallSiteBinder\n      description: To be added.\n    - id: site\n      type: System.Runtime.CompilerServices.CallSite{T}\n      description: To be added.\n    - id: args\n      type: System.Object[]\n      description: To be added.\n    return:\n      type: T\n      description: To be added.\n  overload: System.Runtime.CompilerServices.CallSiteOps.Bind<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.CompilerServices.CallSiteOps.ClearMatch(System.Runtime.CompilerServices.CallSite)\n  id: ClearMatch(System.Runtime.CompilerServices.CallSite)\n  parent: System.Runtime.CompilerServices.CallSiteOps\n  langs:\n  - csharp\n  name: ClearMatch(CallSite)\n  nameWithType: CallSiteOps.ClearMatch(CallSite)\n  fullName: System.Runtime.CompilerServices.CallSiteOps.ClearMatch(CallSite)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  summary: Clears the match flag on the matchmaker call site.\n  syntax:\n    content: public static void ClearMatch (System.Runtime.CompilerServices.CallSite site);\n    parameters:\n    - id: site\n      type: System.Runtime.CompilerServices.CallSite\n      description: An instance of the dynamic call site.\n  overload: System.Runtime.CompilerServices.CallSiteOps.ClearMatch*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.CompilerServices.CallSiteOps.CreateMatchmaker``1(System.Runtime.CompilerServices.CallSite{``0})\n  id: CreateMatchmaker``1(System.Runtime.CompilerServices.CallSite{``0})\n  parent: System.Runtime.CompilerServices.CallSiteOps\n  langs:\n  - csharp\n  name: CreateMatchmaker(CallSite<T>)\n  nameWithType: CallSiteOps.CreateMatchmaker(CallSite<T>)\n  fullName: System.Runtime.CompilerServices.CallSiteOps.CreateMatchmaker(CallSite<T>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: 'public static System.Runtime.CompilerServices.CallSite<T> CreateMatchmaker<T> (System.Runtime.CompilerServices.CallSite<T> site) where T : class;'\n    parameters:\n    - id: site\n      type: System.Runtime.CompilerServices.CallSite{T}\n      description: To be added.\n    return:\n      type: System.Runtime.CompilerServices.CallSite{T}\n      description: To be added.\n  overload: System.Runtime.CompilerServices.CallSiteOps.CreateMatchmaker<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.CompilerServices.CallSiteOps.GetCachedRules``1(System.Runtime.CompilerServices.RuleCache`1)\n  id: GetCachedRules``1(System.Runtime.CompilerServices.RuleCache`1)\n  parent: System.Runtime.CompilerServices.CallSiteOps\n  langs:\n  - csharp\n  name: GetCachedRules(RuleCache<T>)\n  nameWithType: CallSiteOps.GetCachedRules(RuleCache<T>)\n  fullName: System.Runtime.CompilerServices.CallSiteOps.GetCachedRules(RuleCache<T>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: 'public static T[] GetCachedRules<T> (System.Runtime.CompilerServices.RuleCache<T> cache) where T : class;'\n    parameters:\n    - id: cache\n      type: System.Runtime.CompilerServices.RuleCache`1\n      description: To be added.\n    return:\n      type: T[]\n      description: To be added.\n  overload: System.Runtime.CompilerServices.CallSiteOps.GetCachedRules<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.CompilerServices.CallSiteOps.GetMatch(System.Runtime.CompilerServices.CallSite)\n  id: GetMatch(System.Runtime.CompilerServices.CallSite)\n  parent: System.Runtime.CompilerServices.CallSiteOps\n  langs:\n  - csharp\n  name: GetMatch(CallSite)\n  nameWithType: CallSiteOps.GetMatch(CallSite)\n  fullName: System.Runtime.CompilerServices.CallSiteOps.GetMatch(CallSite)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  summary: Checks whether the executed rule matched\n  syntax:\n    content: public static bool GetMatch (System.Runtime.CompilerServices.CallSite site);\n    parameters:\n    - id: site\n      type: System.Runtime.CompilerServices.CallSite\n      description: An instance of the dynamic call site.\n    return:\n      type: System.Boolean\n      description: true if rule matched, false otherwise.\n  overload: System.Runtime.CompilerServices.CallSiteOps.GetMatch*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.CompilerServices.CallSiteOps.GetRuleCache``1(System.Runtime.CompilerServices.CallSite{``0})\n  id: GetRuleCache``1(System.Runtime.CompilerServices.CallSite{``0})\n  parent: System.Runtime.CompilerServices.CallSiteOps\n  langs:\n  - csharp\n  name: GetRuleCache(CallSite<T>)\n  nameWithType: CallSiteOps.GetRuleCache(CallSite<T>)\n  fullName: System.Runtime.CompilerServices.CallSiteOps.GetRuleCache(CallSite<T>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: 'public static System.Runtime.CompilerServices.RuleCache<T> GetRuleCache<T> (System.Runtime.CompilerServices.CallSite<T> site) where T : class;'\n    parameters:\n    - id: site\n      type: System.Runtime.CompilerServices.CallSite{T}\n      description: To be added.\n    return:\n      type: System.Runtime.CompilerServices.RuleCache`1\n      description: To be added.\n  overload: System.Runtime.CompilerServices.CallSiteOps.GetRuleCache<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.CompilerServices.CallSiteOps.GetRules``1(System.Runtime.CompilerServices.CallSite{``0})\n  id: GetRules``1(System.Runtime.CompilerServices.CallSite{``0})\n  parent: System.Runtime.CompilerServices.CallSiteOps\n  langs:\n  - csharp\n  name: GetRules(CallSite<T>)\n  nameWithType: CallSiteOps.GetRules(CallSite<T>)\n  fullName: System.Runtime.CompilerServices.CallSiteOps.GetRules(CallSite<T>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: 'public static T[] GetRules<T> (System.Runtime.CompilerServices.CallSite<T> site) where T : class;'\n    parameters:\n    - id: site\n      type: System.Runtime.CompilerServices.CallSite{T}\n      description: To be added.\n    return:\n      type: T[]\n      description: To be added.\n  overload: System.Runtime.CompilerServices.CallSiteOps.GetRules<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.CompilerServices.CallSiteOps.MoveRule``1(System.Runtime.CompilerServices.RuleCache`1,``0,System.Int32)\n  id: MoveRule``1(System.Runtime.CompilerServices.RuleCache`1,``0,System.Int32)\n  parent: System.Runtime.CompilerServices.CallSiteOps\n  langs:\n  - csharp\n  name: MoveRule(RuleCache<T>,T,Int32)\n  nameWithType: CallSiteOps.MoveRule(RuleCache<T>,T,Int32)\n  fullName: System.Runtime.CompilerServices.CallSiteOps.MoveRule(RuleCache<T>,T,Int32)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: 'public static void MoveRule<T> (System.Runtime.CompilerServices.RuleCache<T> cache, T rule, int i) where T : class;'\n    parameters:\n    - id: cache\n      type: System.Runtime.CompilerServices.RuleCache`1\n      description: To be added.\n    - id: rule\n      type: T\n      description: To be added.\n    - id: i\n      type: System.Int32\n      description: To be added.\n  overload: System.Runtime.CompilerServices.CallSiteOps.MoveRule<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.CompilerServices.CallSiteOps.SetNotMatched(System.Runtime.CompilerServices.CallSite)\n  id: SetNotMatched(System.Runtime.CompilerServices.CallSite)\n  parent: System.Runtime.CompilerServices.CallSiteOps\n  langs:\n  - csharp\n  name: SetNotMatched(CallSite)\n  nameWithType: CallSiteOps.SetNotMatched(CallSite)\n  fullName: System.Runtime.CompilerServices.CallSiteOps.SetNotMatched(CallSite)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  summary: Checks if a dynamic site requires an update.\n  syntax:\n    content: public static bool SetNotMatched (System.Runtime.CompilerServices.CallSite site);\n    parameters:\n    - id: site\n      type: System.Runtime.CompilerServices.CallSite\n      description: An instance of the dynamic call site.\n    return:\n      type: System.Boolean\n      description: true if rule does not need updating, false otherwise.\n  overload: System.Runtime.CompilerServices.CallSiteOps.SetNotMatched*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.CompilerServices.CallSiteOps.UpdateRules``1(System.Runtime.CompilerServices.CallSite{``0},System.Int32)\n  id: UpdateRules``1(System.Runtime.CompilerServices.CallSite{``0},System.Int32)\n  parent: System.Runtime.CompilerServices.CallSiteOps\n  langs:\n  - csharp\n  name: UpdateRules(CallSite<T>,Int32)\n  nameWithType: CallSiteOps.UpdateRules(CallSite<T>,Int32)\n  fullName: System.Runtime.CompilerServices.CallSiteOps.UpdateRules(CallSite<T>,Int32)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: 'public static void UpdateRules<T> (System.Runtime.CompilerServices.CallSite<T> this, int matched) where T : class;'\n    parameters:\n    - id: this\n      type: System.Runtime.CompilerServices.CallSite{T}\n      description: To be added.\n    - id: matched\n      type: System.Int32\n      description: To be added.\n  overload: System.Runtime.CompilerServices.CallSiteOps.UpdateRules<T>*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Runtime.CompilerServices.CallSiteOps.AddRule``1(System.Runtime.CompilerServices.CallSite{``0},``0)\n  parent: System.Runtime.CompilerServices.CallSiteOps\n  isExternal: false\n  name: AddRule(CallSite<T>,T)\n  nameWithType: CallSiteOps.AddRule(CallSite<T>,T)\n  fullName: System.Runtime.CompilerServices.CallSiteOps.AddRule(CallSite<T>,T)\n- uid: System.Runtime.CompilerServices.CallSite{T}\n  parent: System.Runtime.CompilerServices\n  isExternal: true\n  name: CallSite<T>\n  nameWithType: CallSite<T>\n  fullName: System.Runtime.CompilerServices.CallSite<T>\n  spec.csharp:\n  - uid: System.Runtime.CompilerServices.CallSite`1\n    name: CallSite\n    nameWithType: CallSite\n    fullName: CallSite<T>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Runtime.CompilerServices.CallSiteOps.Bind``1(System.Runtime.CompilerServices.CallSiteBinder,System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n  parent: System.Runtime.CompilerServices.CallSiteOps\n  isExternal: false\n  name: Bind(CallSiteBinder,CallSite<T>,Object[])\n  nameWithType: CallSiteOps.Bind(CallSiteBinder,CallSite<T>,Object[])\n  fullName: System.Runtime.CompilerServices.CallSiteOps.Bind(CallSiteBinder,CallSite<T>,Object[])\n- uid: System.Runtime.CompilerServices.CallSiteBinder\n  parent: System.Runtime.CompilerServices\n  isExternal: true\n  name: CallSiteBinder\n  nameWithType: CallSiteBinder\n  fullName: System.Runtime.CompilerServices.CallSiteBinder\n- uid: System.Object[]\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.CompilerServices.CallSiteOps.ClearMatch(System.Runtime.CompilerServices.CallSite)\n  parent: System.Runtime.CompilerServices.CallSiteOps\n  isExternal: false\n  name: ClearMatch(CallSite)\n  nameWithType: CallSiteOps.ClearMatch(CallSite)\n  fullName: System.Runtime.CompilerServices.CallSiteOps.ClearMatch(CallSite)\n- uid: System.Runtime.CompilerServices.CallSite\n  parent: System.Runtime.CompilerServices\n  isExternal: true\n  name: CallSite\n  nameWithType: CallSite\n  fullName: System.Runtime.CompilerServices.CallSite\n- uid: System.Runtime.CompilerServices.CallSiteOps.CreateMatchmaker``1(System.Runtime.CompilerServices.CallSite{``0})\n  parent: System.Runtime.CompilerServices.CallSiteOps\n  isExternal: false\n  name: CreateMatchmaker(CallSite<T>)\n  nameWithType: CallSiteOps.CreateMatchmaker(CallSite<T>)\n  fullName: System.Runtime.CompilerServices.CallSiteOps.CreateMatchmaker(CallSite<T>)\n- uid: System.Runtime.CompilerServices.CallSiteOps.GetCachedRules``1(System.Runtime.CompilerServices.RuleCache`1)\n  parent: System.Runtime.CompilerServices.CallSiteOps\n  isExternal: false\n  name: GetCachedRules(RuleCache<T>)\n  nameWithType: CallSiteOps.GetCachedRules(RuleCache<T>)\n  fullName: System.Runtime.CompilerServices.CallSiteOps.GetCachedRules(RuleCache<T>)\n- uid: T[]\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n  spec.csharp:\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.CompilerServices.RuleCache`1\n  parent: System.Runtime.CompilerServices\n  isExternal: false\n  name: RuleCache<T>\n  nameWithType: RuleCache<T>\n  fullName: System.Runtime.CompilerServices.RuleCache<T>\n- uid: System.Runtime.CompilerServices.CallSiteOps.GetMatch(System.Runtime.CompilerServices.CallSite)\n  parent: System.Runtime.CompilerServices.CallSiteOps\n  isExternal: false\n  name: GetMatch(CallSite)\n  nameWithType: CallSiteOps.GetMatch(CallSite)\n  fullName: System.Runtime.CompilerServices.CallSiteOps.GetMatch(CallSite)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.CompilerServices.CallSiteOps.GetRuleCache``1(System.Runtime.CompilerServices.CallSite{``0})\n  parent: System.Runtime.CompilerServices.CallSiteOps\n  isExternal: false\n  name: GetRuleCache(CallSite<T>)\n  nameWithType: CallSiteOps.GetRuleCache(CallSite<T>)\n  fullName: System.Runtime.CompilerServices.CallSiteOps.GetRuleCache(CallSite<T>)\n- uid: System.Runtime.CompilerServices.CallSiteOps.GetRules``1(System.Runtime.CompilerServices.CallSite{``0})\n  parent: System.Runtime.CompilerServices.CallSiteOps\n  isExternal: false\n  name: GetRules(CallSite<T>)\n  nameWithType: CallSiteOps.GetRules(CallSite<T>)\n  fullName: System.Runtime.CompilerServices.CallSiteOps.GetRules(CallSite<T>)\n- uid: System.Runtime.CompilerServices.CallSiteOps.MoveRule``1(System.Runtime.CompilerServices.RuleCache`1,``0,System.Int32)\n  parent: System.Runtime.CompilerServices.CallSiteOps\n  isExternal: false\n  name: MoveRule(RuleCache<T>,T,Int32)\n  nameWithType: CallSiteOps.MoveRule(RuleCache<T>,T,Int32)\n  fullName: System.Runtime.CompilerServices.CallSiteOps.MoveRule(RuleCache<T>,T,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.CompilerServices.CallSiteOps.SetNotMatched(System.Runtime.CompilerServices.CallSite)\n  parent: System.Runtime.CompilerServices.CallSiteOps\n  isExternal: false\n  name: SetNotMatched(CallSite)\n  nameWithType: CallSiteOps.SetNotMatched(CallSite)\n  fullName: System.Runtime.CompilerServices.CallSiteOps.SetNotMatched(CallSite)\n- uid: System.Runtime.CompilerServices.CallSiteOps.UpdateRules``1(System.Runtime.CompilerServices.CallSite{``0},System.Int32)\n  parent: System.Runtime.CompilerServices.CallSiteOps\n  isExternal: false\n  name: UpdateRules(CallSite<T>,Int32)\n  nameWithType: CallSiteOps.UpdateRules(CallSite<T>,Int32)\n  fullName: System.Runtime.CompilerServices.CallSiteOps.UpdateRules(CallSite<T>,Int32)\n- uid: System.Runtime.CompilerServices.CallSiteOps.AddRule<T>*\n  parent: System.Runtime.CompilerServices.CallSiteOps\n  isExternal: false\n  name: AddRule<T>\n  nameWithType: CallSiteOps.AddRule<T>\n- uid: System.Runtime.CompilerServices.CallSiteOps.Bind<T>*\n  parent: System.Runtime.CompilerServices.CallSiteOps\n  isExternal: false\n  name: Bind<T>\n  nameWithType: CallSiteOps.Bind<T>\n- uid: System.Runtime.CompilerServices.CallSiteOps.ClearMatch*\n  parent: System.Runtime.CompilerServices.CallSiteOps\n  isExternal: false\n  name: ClearMatch\n  nameWithType: CallSiteOps.ClearMatch\n- uid: System.Runtime.CompilerServices.CallSiteOps.CreateMatchmaker<T>*\n  parent: System.Runtime.CompilerServices.CallSiteOps\n  isExternal: false\n  name: CreateMatchmaker<T>\n  nameWithType: CallSiteOps.CreateMatchmaker<T>\n- uid: System.Runtime.CompilerServices.CallSiteOps.GetCachedRules<T>*\n  parent: System.Runtime.CompilerServices.CallSiteOps\n  isExternal: false\n  name: GetCachedRules<T>\n  nameWithType: CallSiteOps.GetCachedRules<T>\n- uid: System.Runtime.CompilerServices.CallSiteOps.GetMatch*\n  parent: System.Runtime.CompilerServices.CallSiteOps\n  isExternal: false\n  name: GetMatch\n  nameWithType: CallSiteOps.GetMatch\n- uid: System.Runtime.CompilerServices.CallSiteOps.GetRuleCache<T>*\n  parent: System.Runtime.CompilerServices.CallSiteOps\n  isExternal: false\n  name: GetRuleCache<T>\n  nameWithType: CallSiteOps.GetRuleCache<T>\n- uid: System.Runtime.CompilerServices.CallSiteOps.GetRules<T>*\n  parent: System.Runtime.CompilerServices.CallSiteOps\n  isExternal: false\n  name: GetRules<T>\n  nameWithType: CallSiteOps.GetRules<T>\n- uid: System.Runtime.CompilerServices.CallSiteOps.MoveRule<T>*\n  parent: System.Runtime.CompilerServices.CallSiteOps\n  isExternal: false\n  name: MoveRule<T>\n  nameWithType: CallSiteOps.MoveRule<T>\n- uid: System.Runtime.CompilerServices.CallSiteOps.SetNotMatched*\n  parent: System.Runtime.CompilerServices.CallSiteOps\n  isExternal: false\n  name: SetNotMatched\n  nameWithType: CallSiteOps.SetNotMatched\n- uid: System.Runtime.CompilerServices.CallSiteOps.UpdateRules<T>*\n  parent: System.Runtime.CompilerServices.CallSiteOps\n  isExternal: false\n  name: UpdateRules<T>\n  nameWithType: CallSiteOps.UpdateRules<T>\n"}