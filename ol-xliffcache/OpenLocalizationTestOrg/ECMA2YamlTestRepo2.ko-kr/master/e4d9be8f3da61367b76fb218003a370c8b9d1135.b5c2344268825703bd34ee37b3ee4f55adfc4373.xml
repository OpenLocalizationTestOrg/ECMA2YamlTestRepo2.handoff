{"nodes":[{"pos":[1471,1591],"content":"Represents a <xref:System.Reflection.MemberInfo> object that does not load assemblies or create objects until requested.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a &lt;xref:System.Reflection.MemberInfo&gt; object that does not load assemblies or create objects until requested.","pos":[0,120],"source":"Represents a <xref:System.Reflection.MemberInfo> object that does not load assemblies or create objects until requested."}]},{"pos":[2310,2471],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, representing the specified member.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\"></xref> class, representing the specified member."},{"pos":[2649,2673],"content":"The member to represent.","needQuote":true,"needEscape":true,"nodes":[{"content":"The member to represent.","pos":[0,24]}]},{"pos":[3532,3722],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class for a member of the specified type with the specified accessors.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\"></xref> class for a member of the specified type with the specified accessors."},{"pos":[3965,4000],"content":"The type of the represented member.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the represented member.","pos":[0,35]}]},{"pos":[4103,4193],"content":"A function whose return value is a collection of the accessors for the represented member.","needQuote":true,"needEscape":true,"nodes":[{"content":"A function whose return value is a collection of the accessors for the represented member.","pos":[0,90]}]},{"pos":[5014,5204],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class for a member of the specified type with the specified accessors.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\"></xref> class for a member of the specified type with the specified accessors."},{"pos":[5434,5469],"content":"The type of the represented member.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the represented member.","pos":[0,35]}]},{"pos":[5552,5605],"content":"An array of the accessors for the represented member.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of the accessors for the represented member.","pos":[0,53]}]},{"pos":[5798,5891],"content":"One or more of the objects in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">accessors</ph><ept id=\"p1\">&lt;/code&gt;</ept> are not valid accessors for this member.","needQuote":true,"needEscape":true,"source":"One or more of the objects in <code>accessors</code> are not valid accessors for this member."},{"pos":[6434,6499],"content":"Indicates whether this instance and a specified object are equal.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates whether this instance and a specified object are equal.","pos":[0,65]}]},{"pos":[6640,6669],"content":"Another object to compare to.","needQuote":true,"needEscape":true,"nodes":[{"content":"Another object to compare to.","pos":[0,29]}]},{"pos":[6728,6949],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p2\">&lt;/code&gt;</ept> and this instance are the same type and represent the same value; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>obj</code> and this instance are the same type and represent the same value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7576,7634],"content":"Gets an array of the accessors for the represented member.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an array of the accessors for the represented member.","pos":[0,58]}]},{"pos":[7806,7859],"content":"An array of the accessors for the represented member.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of the accessors for the represented member.","pos":[0,53]}]},{"pos":[8059,8115],"content":"One or more of the accessors in this object are invalid.","needQuote":true,"needEscape":true,"nodes":[{"content":"One or more of the accessors in this object are invalid.","pos":[0,56]}]},{"pos":[8635,8675],"content":"Returns the hash code for this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]},{"pos":[8810,8874],"content":"A 32-bit signed integer that is the hash code for this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"A 32-bit signed integer that is the hash code for this instance.","pos":[0,64]}]},{"pos":[9492,9532],"content":"Gets the type of the represented member.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the type of the represented member.","pos":[0,40]}]},{"pos":[9686,9721],"content":"The type of the represented member.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the represented member.","pos":[0,35]}]},{"pos":[10698,10839],"content":"Determines whether the two specified <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects are equal.","needQuote":true,"needEscape":true,"source":"Determines whether the two specified <xref href=\"System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\"></xref> objects are equal."},{"pos":[11166,11191],"content":"The first object to test.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first object to test.","pos":[0,25]}]},{"pos":[11304,11330],"content":"The second object to test.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second object to test.","pos":[0,26]}]},{"pos":[11389,11550],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the objects are equal; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the objects are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12538,12683],"content":"Determines whether the two specified <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects are not equal.","needQuote":true,"needEscape":true,"source":"Determines whether the two specified <xref href=\"System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\"></xref> objects are not equal."},{"pos":[13012,13037],"content":"The first object to test.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first object to test.","pos":[0,25]}]},{"pos":[13150,13176],"content":"The second object to test.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second object to test.","pos":[0,26]}]},{"pos":[13235,13396],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the objects are equal; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the objects are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n  id: LazyMemberInfo\n  children:\n  - System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberInfo)\n  - System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberTypes,System.Func{System.Reflection.MemberInfo[]})\n  - System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberTypes,System.Reflection.MemberInfo[])\n  - System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.Equals(System.Object)\n  - System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetAccessors\n  - System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetHashCode\n  - System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.MemberType\n  - System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Equality(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo)\n  - System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Inequality(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo)\n  langs:\n  - csharp\n  name: LazyMemberInfo\n  nameWithType: LazyMemberInfo\n  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n  type: Struct\n  summary: Represents a <xref:System.Reflection.MemberInfo> object that does not load assemblies or create objects until requested.\n  syntax:\n    content: public struct LazyMemberInfo\n  inheritance:\n  - System.ValueType\n  implements: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberInfo)\n  id: '#ctor(System.Reflection.MemberInfo)'\n  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n  langs:\n  - csharp\n  name: LazyMemberInfo(MemberInfo)\n  nameWithType: LazyMemberInfo.LazyMemberInfo(MemberInfo)\n  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.LazyMemberInfo(MemberInfo)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\"></xref> class, representing the specified member.\n  syntax:\n    content: public LazyMemberInfo (System.Reflection.MemberInfo member);\n    parameters:\n    - id: member\n      type: System.Reflection.MemberInfo\n      description: The member to represent.\n  overload: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberTypes,System.Func{System.Reflection.MemberInfo[]})\n  id: '#ctor(System.Reflection.MemberTypes,System.Func{System.Reflection.MemberInfo[]})'\n  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n  langs:\n  - csharp\n  name: LazyMemberInfo(MemberTypes,Func<MemberInfo>)\n  nameWithType: LazyMemberInfo.LazyMemberInfo(MemberTypes,Func<MemberInfo>)\n  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.LazyMemberInfo(MemberTypes,Func<MemberInfo>)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\"></xref> class for a member of the specified type with the specified accessors.\n  syntax:\n    content: public LazyMemberInfo (System.Reflection.MemberTypes memberType, Func<System.Reflection.MemberInfo[]> accessorsCreator);\n    parameters:\n    - id: memberType\n      type: System.Reflection.MemberTypes\n      description: The type of the represented member.\n    - id: accessorsCreator\n      type: System.Func{System.Reflection.MemberInfo[]}\n      description: A function whose return value is a collection of the accessors for the represented member.\n  overload: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberTypes,System.Reflection.MemberInfo[])\n  id: '#ctor(System.Reflection.MemberTypes,System.Reflection.MemberInfo[])'\n  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n  langs:\n  - csharp\n  name: LazyMemberInfo(MemberTypes,MemberInfo[])\n  nameWithType: LazyMemberInfo.LazyMemberInfo(MemberTypes,MemberInfo[])\n  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.LazyMemberInfo(MemberTypes,MemberInfo[])\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\"></xref> class for a member of the specified type with the specified accessors.\n  syntax:\n    content: public LazyMemberInfo (System.Reflection.MemberTypes memberType, System.Reflection.MemberInfo[] accessors);\n    parameters:\n    - id: memberType\n      type: System.Reflection.MemberTypes\n      description: The type of the represented member.\n    - id: accessors\n      type: System.Reflection.MemberInfo[]\n      description: An array of the accessors for the represented member.\n  overload: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: One or more of the objects in <code>accessors</code> are not valid accessors for this member.\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: LazyMemberInfo.Equals(Object)\n  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.Equals(Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Indicates whether this instance and a specified object are equal.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Another object to compare to.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>obj</code> and this instance are the same type and represent the same value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetAccessors\n  id: GetAccessors\n  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n  langs:\n  - csharp\n  name: GetAccessors()\n  nameWithType: LazyMemberInfo.GetAccessors()\n  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetAccessors()\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Gets an array of the accessors for the represented member.\n  syntax:\n    content: public System.Reflection.MemberInfo[] GetAccessors ();\n    parameters: []\n    return:\n      type: System.Reflection.MemberInfo[]\n      description: An array of the accessors for the represented member.\n  overload: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetAccessors*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: One or more of the accessors in this object are invalid.\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetHashCode\n  id: GetHashCode\n  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: LazyMemberInfo.GetHashCode()\n  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetHashCode()\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Returns the hash code for this instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer that is the hash code for this instance.\n  overload: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.MemberType\n  id: MemberType\n  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n  langs:\n  - csharp\n  name: MemberType\n  nameWithType: LazyMemberInfo.MemberType\n  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.MemberType\n  type: Property\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Gets the type of the represented member.\n  syntax:\n    content: public System.Reflection.MemberTypes MemberType { get; }\n    return:\n      type: System.Reflection.MemberTypes\n      description: The type of the represented member.\n  overload: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.MemberType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Equality(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo)\n  id: op_Equality(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo)\n  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n  langs:\n  - csharp\n  name: op_Equality(LazyMemberInfo,LazyMemberInfo)\n  nameWithType: LazyMemberInfo.op_Equality(LazyMemberInfo,LazyMemberInfo)\n  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Equality(LazyMemberInfo,LazyMemberInfo)\n  type: Operator\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Determines whether the two specified <xref href=\"System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\"></xref> objects are equal.\n  syntax:\n    content: public static bool op_Equality (System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo left, System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo right);\n    parameters:\n    - id: left\n      type: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n      description: The first object to test.\n    - id: right\n      type: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n      description: The second object to test.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the objects are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Inequality(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo)\n  id: op_Inequality(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo)\n  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n  langs:\n  - csharp\n  name: op_Inequality(LazyMemberInfo,LazyMemberInfo)\n  nameWithType: LazyMemberInfo.op_Inequality(LazyMemberInfo,LazyMemberInfo)\n  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Inequality(LazyMemberInfo,LazyMemberInfo)\n  type: Operator\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Determines whether the two specified <xref href=\"System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\"></xref> objects are not equal.\n  syntax:\n    content: public static bool op_Inequality (System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo left, System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo right);\n    parameters:\n    - id: left\n      type: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n      description: The first object to test.\n    - id: right\n      type: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n      description: The second object to test.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the objects are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberInfo)\n  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n  isExternal: false\n  name: LazyMemberInfo(MemberInfo)\n  nameWithType: LazyMemberInfo.LazyMemberInfo(MemberInfo)\n  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.LazyMemberInfo(MemberInfo)\n- uid: System.Reflection.MemberInfo\n  parent: System.Reflection\n  isExternal: true\n  name: MemberInfo\n  nameWithType: MemberInfo\n  fullName: System.Reflection.MemberInfo\n- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberTypes,System.Func{System.Reflection.MemberInfo[]})\n  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n  isExternal: false\n  name: LazyMemberInfo(MemberTypes,Func<MemberInfo>)\n  nameWithType: LazyMemberInfo.LazyMemberInfo(MemberTypes,Func<MemberInfo>)\n  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.LazyMemberInfo(MemberTypes,Func<MemberInfo>)\n- uid: System.Reflection.MemberTypes\n  parent: System.Reflection\n  isExternal: false\n  name: MemberTypes\n  nameWithType: MemberTypes\n  fullName: System.Reflection.MemberTypes\n- uid: System.Func{System.Reflection.MemberInfo[]}\n  parent: System\n  isExternal: true\n  name: Func<MemberInfo>\n  nameWithType: Func<MemberInfo>\n  fullName: System.Func<System.Reflection.MemberInfo[]>\n  spec.csharp:\n  - uid: System.Func`1\n    name: Func\n    nameWithType: Func\n    fullName: Func<System.Reflection.MemberInfo[]>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    nameWithType: MemberInfo\n    fullName: MemberInfo[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberTypes,System.Reflection.MemberInfo[])\n  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n  isExternal: false\n  name: LazyMemberInfo(MemberTypes,MemberInfo[])\n  nameWithType: LazyMemberInfo.LazyMemberInfo(MemberTypes,MemberInfo[])\n  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.LazyMemberInfo(MemberTypes,MemberInfo[])\n- uid: System.Reflection.MemberInfo[]\n  parent: System.Reflection\n  isExternal: true\n  name: MemberInfo\n  nameWithType: MemberInfo\n  fullName: System.Reflection.MemberInfo[]\n  spec.csharp:\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    nameWithType: MemberInfo\n    fullName: MemberInfo[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.Equals(System.Object)\n  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: LazyMemberInfo.Equals(Object)\n  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetAccessors\n  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n  isExternal: false\n  name: GetAccessors()\n  nameWithType: LazyMemberInfo.GetAccessors()\n  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetAccessors()\n- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetHashCode\n  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: LazyMemberInfo.GetHashCode()\n  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.MemberType\n  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n  isExternal: false\n  name: MemberType\n  nameWithType: LazyMemberInfo.MemberType\n  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.MemberType\n- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Equality(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo)\n  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n  isExternal: false\n  name: op_Equality(LazyMemberInfo,LazyMemberInfo)\n  nameWithType: LazyMemberInfo.op_Equality(LazyMemberInfo,LazyMemberInfo)\n  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Equality(LazyMemberInfo,LazyMemberInfo)\n- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n  parent: System.ComponentModel.Composition.ReflectionModel\n  isExternal: false\n  name: LazyMemberInfo\n  nameWithType: LazyMemberInfo\n  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Inequality(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo)\n  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n  isExternal: false\n  name: op_Inequality(LazyMemberInfo,LazyMemberInfo)\n  nameWithType: LazyMemberInfo.op_Inequality(LazyMemberInfo,LazyMemberInfo)\n  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Inequality(LazyMemberInfo,LazyMemberInfo)\n- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor*\n  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n  isExternal: false\n  name: LazyMemberInfo\n  nameWithType: LazyMemberInfo.LazyMemberInfo\n- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.Equals*\n  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n  isExternal: false\n  name: Equals\n  nameWithType: LazyMemberInfo.Equals\n- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetAccessors*\n  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n  isExternal: false\n  name: GetAccessors\n  nameWithType: LazyMemberInfo.GetAccessors\n- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetHashCode*\n  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n  isExternal: false\n  name: GetHashCode\n  nameWithType: LazyMemberInfo.GetHashCode\n- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.MemberType*\n  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n  isExternal: false\n  name: MemberType\n  nameWithType: LazyMemberInfo.MemberType\n- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Equality*\n  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n  isExternal: false\n  name: op_Equality\n  nameWithType: LazyMemberInfo.op_Equality\n- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Inequality*\n  parent: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n  isExternal: false\n  name: op_Inequality\n  nameWithType: LazyMemberInfo.op_Inequality\n"}