{"nodes":[{"pos":[1380,1533],"content":"Contains parameters that are passed to the cryptographic service provider (CSP) that performs cryptographic computations. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains parameters that are passed to the cryptographic service provider (CSP) that performs cryptographic computations. This class cannot be inherited.","pos":[0,153],"nodes":[{"content":"Contains parameters that are passed to the cryptographic service provider (CSP) that performs cryptographic computations.","pos":[0,121]},{"content":"This class cannot be inherited.","pos":[122,153]}]}]},{"pos":[1546,2728],"content":"The CspParameters class represents parameters that you can pass to managed cryptography classes that internally use Microsoft Cryptographic Service Providers (CSPs) from the unmanaged Microsoft Cryptography API (CAPI). Classes with names ending in \"CryptoServiceProvider\" are managed code wrappers for the corresponding CSP.       Use the CspParameters class to do the following:      -   Specify a particular CSP by passing the provider type to the <xref:System.Security.Cryptography.CspParameters.ProviderType> or <xref:System.Security.Cryptography.CspParameters.ProviderName> property.  You can also specify a CSP using an overload of the constructor.      -   Create a key container where you can store cryptographic keys.  Key containers provide the most secure way to persist cryptographic keys and keep them secret from malicious third parties.  For more information about creating key containers, see [How to: Store Asymmetric Keys in a Key Container](~/add/includes/ajax-current-ext-md.md).      -   Specify whether to create an asymmetric signature key or an asymmetric exchange key using the <xref:System.Security.Cryptography.CspParameters.KeyNumber> property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The CspParameters class represents parameters that you can pass to managed cryptography classes that internally use Microsoft Cryptographic Service Providers (CSPs) from the unmanaged Microsoft Cryptography API (CAPI).","pos":[0,218]},{"content":"Classes with names ending in \"CryptoServiceProvider\" are managed code wrappers for the corresponding CSP.","pos":[219,324]},{"content":"Use the CspParameters class to do the following:      -   Specify a particular CSP by passing the provider type to the &lt;xref:System.Security.Cryptography.CspParameters.ProviderType&gt; or &lt;xref:System.Security.Cryptography.CspParameters.ProviderName&gt; property.","pos":[331,588],"source":"       Use the CspParameters class to do the following:      -   Specify a particular CSP by passing the provider type to the <xref:System.Security.Cryptography.CspParameters.ProviderType> or <xref:System.Security.Cryptography.CspParameters.ProviderName> property."},{"content":"You can also specify a CSP using an overload of the constructor.","pos":[590,654]},{"content":"-   Create a key container where you can store cryptographic keys.","pos":[660,726]},{"content":"Key containers provide the most secure way to persist cryptographic keys and keep them secret from malicious third parties.","pos":[728,851]},{"content":"For more information about creating key containers, see <bpt id=\"p1\">[</bpt>How to: Store Asymmetric Keys in a Key Container<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[853,999],"source":"  For more information about creating key containers, see [How to: Store Asymmetric Keys in a Key Container](~/add/includes/ajax-current-ext-md.md)."},{"content":"-   Specify whether to create an asymmetric signature key or an asymmetric exchange key using the &lt;xref:System.Security.Cryptography.CspParameters.KeyNumber&gt; property.","pos":[1005,1172],"source":"      -   Specify whether to create an asymmetric signature key or an asymmetric exchange key using the <xref:System.Security.Cryptography.CspParameters.KeyNumber> property."}]},{"pos":[4213,4317],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CspParameters\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.CspParameters\"></xref> class."},{"pos":[4330,4731],"content":"This form of CspParameters initializes the <xref:System.Security.Cryptography.CspParameters.ProviderType> field to a value of `24`, which specifies the PROV_RSA_AES provider.  This default provider is compatible with the <xref:System.Security.Cryptography.Aes> algorithm.       For information about other provider types, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This form of CspParameters initializes the &lt;xref:System.Security.Cryptography.CspParameters.ProviderType&gt; field to a value of <ph id=\"ph1\">`24`</ph>, which specifies the PROV_RSA_AES provider.","pos":[0,174],"source":"This form of CspParameters initializes the <xref:System.Security.Cryptography.CspParameters.ProviderType> field to a value of `24`, which specifies the PROV_RSA_AES provider."},{"content":"This default provider is compatible with the &lt;xref:System.Security.Cryptography.Aes&gt; algorithm.","pos":[176,271],"source":"  This default provider is compatible with the <xref:System.Security.Cryptography.Aes> algorithm."},{"content":"For information about other provider types, see the &lt;xref:System.Security.Cryptography.CspParameters.ProviderType&gt; field.","pos":[278,399],"source":"       For information about other provider types, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field."}]},{"pos":[5761,5903],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CspParameters\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified provider type code.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.CspParameters\"></xref> class with the specified provider type code."},{"pos":[5916,6733],"content":"Use the CspParameters constructor to specify a provider type by passing a numeric value that represents that provider.  The numeric values that represent the default provider types are defined in the WinCrypt.h header file:      -   To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1`to the `dwTypeIn` parameter.      -   To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13`to the `dwTypeIn` parameter.       For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.  For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the CspParameters constructor to specify a provider type by passing a numeric value that represents that provider.","pos":[0,118]},{"content":"The numeric values that represent the default provider types are defined in the WinCrypt.h header file:      -   To specify a provider compatible with the &lt;xref:System.Security.Cryptography.RSA&gt; algorithm, pass a value of <ph id=\"ph1\">`1`</ph>to the <ph id=\"ph2\">`dwTypeIn`</ph> parameter.","pos":[120,373],"source":"  The numeric values that represent the default provider types are defined in the WinCrypt.h header file:      -   To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1`to the `dwTypeIn` parameter."},{"content":"-   To specify a provider compatible with the &lt;xref:System.Security.Cryptography.DSA&gt; algorithm, pass a value of <ph id=\"ph1\">`13`</ph>to the <ph id=\"ph2\">`dwTypeIn`</ph> parameter.","pos":[379,524],"source":"      -   To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13`to the `dwTypeIn` parameter."},{"content":"For information about other provider type values, see the &lt;xref:System.Security.Cryptography.CspParameters.ProviderType&gt; field.","pos":[531,658],"source":"       For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field."},{"content":"For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.","pos":[660,811]}]},{"pos":[7306,7373],"content":"A provider type code that specifies the kind of provider to create.","needQuote":true,"needEscape":true,"nodes":[{"content":"A provider type code that specifies the kind of provider to create.","pos":[0,67]}]},{"pos":[7952,8103],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CspParameters\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified provider type code and name.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.CspParameters\"></xref> class with the specified provider type code and name."},{"pos":[8116,8987],"content":"Use the CspParameters constructor to specify a provider type and name.       Specify a provider type by passing a numeric value that represents the desired provider type.  The numeric values that represent the default provider types are defined in the WinCrypt.h header file:      -   To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1`to the `dwTypeIn` parameter.      -   To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13`to the `dwTypeIn` parameter.       For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.  For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the CspParameters constructor to specify a provider type and name.","pos":[0,70]},{"content":"Specify a provider type by passing a numeric value that represents the desired provider type.","pos":[77,170]},{"content":"The numeric values that represent the default provider types are defined in the WinCrypt.h header file:      -   To specify a provider compatible with the &lt;xref:System.Security.Cryptography.RSA&gt; algorithm, pass a value of <ph id=\"ph1\">`1`</ph>to the <ph id=\"ph2\">`dwTypeIn`</ph> parameter.","pos":[172,425],"source":"  The numeric values that represent the default provider types are defined in the WinCrypt.h header file:      -   To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1`to the `dwTypeIn` parameter."},{"content":"-   To specify a provider compatible with the &lt;xref:System.Security.Cryptography.DSA&gt; algorithm, pass a value of <ph id=\"ph1\">`13`</ph>to the <ph id=\"ph2\">`dwTypeIn`</ph> parameter.","pos":[431,576],"source":"      -   To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13`to the `dwTypeIn` parameter."},{"content":"For information about other provider type values, see the &lt;xref:System.Security.Cryptography.CspParameters.ProviderType&gt; field.","pos":[583,710],"source":"       For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field."},{"content":"For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.","pos":[712,863]}]},{"pos":[9677,9744],"content":"A provider type code that specifies the kind of provider to create.","needQuote":true,"needEscape":true,"nodes":[{"content":"A provider type code that specifies the kind of provider to create.","pos":[0,67]}]},{"pos":[9818,9834],"content":"A provider name.","needQuote":true,"needEscape":true,"nodes":[{"content":"A provider name.","pos":[0,16]}]},{"pos":[10462,10647],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CspParameters\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified provider type code and name, and the specified container name.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.CspParameters\"></xref> class with the specified provider type code and name, and the specified container name."},{"pos":[10660,11641],"content":"Use the CspParameters constructor to specify a provider type, a provider name, and a container name.       You can use the container name to retrieve a key within that container.       Specify a provider type by passing a numeric value that represents the desired provider type.  The numeric values that represent the default provider types are defined in the WinCrypt.h header file:      -   To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1`to the `dwTypeIn` parameter.      -   To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13`to the `dwTypeIn` parameter.       For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.  For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the CspParameters constructor to specify a provider type, a provider name, and a container name.","pos":[0,100]},{"content":"You can use the container name to retrieve a key within that container.","pos":[107,178]},{"content":"Specify a provider type by passing a numeric value that represents the desired provider type.","pos":[185,278]},{"content":"The numeric values that represent the default provider types are defined in the WinCrypt.h header file:      -   To specify a provider compatible with the &lt;xref:System.Security.Cryptography.RSA&gt; algorithm, pass a value of <ph id=\"ph1\">`1`</ph>to the <ph id=\"ph2\">`dwTypeIn`</ph> parameter.","pos":[280,533],"source":"  The numeric values that represent the default provider types are defined in the WinCrypt.h header file:      -   To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1`to the `dwTypeIn` parameter."},{"content":"-   To specify a provider compatible with the &lt;xref:System.Security.Cryptography.DSA&gt; algorithm, pass a value of <ph id=\"ph1\">`13`</ph>to the <ph id=\"ph2\">`dwTypeIn`</ph> parameter.","pos":[539,684],"source":"      -   To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13`to the `dwTypeIn` parameter."},{"content":"For information about other provider type values, see the &lt;xref:System.Security.Cryptography.CspParameters.ProviderType&gt; field.","pos":[691,818],"source":"       For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field."},{"content":"For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.","pos":[820,971]}]},{"pos":[11835,11904],"content":"The provider type code that specifies the kind of provider to create.","needQuote":true,"needEscape":true,"nodes":[{"content":"The provider type code that specifies the kind of provider to create.","pos":[0,69]}]},{"pos":[11978,11994],"content":"A provider name.","needQuote":true,"needEscape":true,"nodes":[{"content":"A provider name.","pos":[0,16]}]},{"pos":[12069,12086],"content":"A container name.","needQuote":true,"needEscape":true,"nodes":[{"content":"A container name.","pos":[0,17]}]},{"pos":[12913,13151],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CspParameters\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using a provider type, a provider name, a container name, access information, and a handle to an unmanaged smart card password dialog.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.CspParameters\"></xref> class using a provider type, a provider name, a container name, access information, and a handle to an unmanaged smart card password dialog."},{"pos":[13164,14036],"content":"You can use the container name to retrieve a key within that container.       Specify a provider type by passing a numeric value that represents the desired provider type.  The numeric values that represent the default provider types are defined in the WinCrypt.h header file:      -   To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1`to the `dwTypeIn` parameter.      -   To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13`to the `dwTypeIn` parameter.       For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.  For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can use the container name to retrieve a key within that container.","pos":[0,71]},{"content":"Specify a provider type by passing a numeric value that represents the desired provider type.","pos":[78,171]},{"content":"The numeric values that represent the default provider types are defined in the WinCrypt.h header file:      -   To specify a provider compatible with the &lt;xref:System.Security.Cryptography.RSA&gt; algorithm, pass a value of <ph id=\"ph1\">`1`</ph>to the <ph id=\"ph2\">`dwTypeIn`</ph> parameter.","pos":[173,426],"source":"  The numeric values that represent the default provider types are defined in the WinCrypt.h header file:      -   To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1`to the `dwTypeIn` parameter."},{"content":"-   To specify a provider compatible with the &lt;xref:System.Security.Cryptography.DSA&gt; algorithm, pass a value of <ph id=\"ph1\">`13`</ph>to the <ph id=\"ph2\">`dwTypeIn`</ph> parameter.","pos":[432,577],"source":"      -   To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13`to the `dwTypeIn` parameter."},{"content":"For information about other provider type values, see the &lt;xref:System.Security.Cryptography.CspParameters.ProviderType&gt; field.","pos":[584,711],"source":"       For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field."},{"content":"For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.","pos":[713,864]}]},{"pos":[14325,14394],"content":"The provider type code that specifies the kind of provider to create.","needQuote":true,"needEscape":true,"nodes":[{"content":"The provider type code that specifies the kind of provider to create.","pos":[0,69]}]},{"pos":[14463,14479],"content":"A provider name.","needQuote":true,"needEscape":true,"nodes":[{"content":"A provider name.","pos":[0,16]}]},{"pos":[14552,14569],"content":"A container name.","needQuote":true,"needEscape":true,"nodes":[{"content":"A container name.","pos":[0,17]}]},{"pos":[14677,14751],"content":"An object that represents access rights and audit rules for the container.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that represents access rights and audit rules for the container.","pos":[0,74]}]},{"pos":[14826,14889],"content":"A handle to the parent window for a smart card password dialog.","needQuote":true,"needEscape":true,"nodes":[{"content":"A handle to the parent window for a smart card password dialog.","pos":[0,63]}]},{"pos":[15764,15994],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CspParameters\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using a provider type, a provider name, a container name, access information, and a password associated with a smart card key.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.CspParameters\"></xref> class using a provider type, a provider name, a container name, access information, and a password associated with a smart card key."},{"pos":[16007,16879],"content":"You can use the container name to retrieve a key within that container.       Specify a provider type by passing a numeric value that represents the desired provider type.  The numeric values that represent the default provider types are defined in the WinCrypt.h header file:      -   To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1`to the `dwTypeIn` parameter.      -   To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13`to the `dwTypeIn` parameter.       For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.  For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can use the container name to retrieve a key within that container.","pos":[0,71]},{"content":"Specify a provider type by passing a numeric value that represents the desired provider type.","pos":[78,171]},{"content":"The numeric values that represent the default provider types are defined in the WinCrypt.h header file:      -   To specify a provider compatible with the &lt;xref:System.Security.Cryptography.RSA&gt; algorithm, pass a value of <ph id=\"ph1\">`1`</ph>to the <ph id=\"ph2\">`dwTypeIn`</ph> parameter.","pos":[173,426],"source":"  The numeric values that represent the default provider types are defined in the WinCrypt.h header file:      -   To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1`to the `dwTypeIn` parameter."},{"content":"-   To specify a provider compatible with the &lt;xref:System.Security.Cryptography.DSA&gt; algorithm, pass a value of <ph id=\"ph1\">`13`</ph>to the <ph id=\"ph2\">`dwTypeIn`</ph> parameter.","pos":[432,577],"source":"      -   To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13`to the `dwTypeIn` parameter."},{"content":"For information about other provider type values, see the &lt;xref:System.Security.Cryptography.CspParameters.ProviderType&gt; field.","pos":[584,711],"source":"       For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field."},{"content":"For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.","pos":[713,864]}]},{"pos":[17183,17252],"content":"The provider type code that specifies the kind of provider to create.","needQuote":true,"needEscape":true,"nodes":[{"content":"The provider type code that specifies the kind of provider to create.","pos":[0,69]}]},{"pos":[17321,17337],"content":"A provider name.","needQuote":true,"needEscape":true,"nodes":[{"content":"A provider name.","pos":[0,16]}]},{"pos":[17410,17427],"content":"A container name.","needQuote":true,"needEscape":true,"nodes":[{"content":"A container name.","pos":[0,17]}]},{"pos":[17535,17607],"content":"An object that represents access rights and audit rules for a container.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that represents access rights and audit rules for a container.","pos":[0,72]}]},{"pos":[17690,17734],"content":"A password associated with a smart card key.","needQuote":true,"needEscape":true,"nodes":[{"content":"A password associated with a smart card key.","pos":[0,44]}]},{"pos":[18246,18399],"content":"Gets or sets a <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CryptoKeySecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents access rights and audit rules for a container.","needQuote":true,"needEscape":true,"source":"Gets or sets a <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object that represents access rights and audit rules for a container."},{"pos":[18411,18649],"content":"Use the CryptoKeySecurity property to specify a <xref:System.Security.AccessControl.CryptoKeySecurity> object that manages the creation of discretionary access control lists (DACLS) and system access control lists (SACLS) for a container.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the CryptoKeySecurity property to specify a &lt;xref:System.Security.AccessControl.CryptoKeySecurity&gt; object that manages the creation of discretionary access control lists (DACLS) and system access control lists (SACLS) for a container.","pos":[0,238],"source":"Use the CryptoKeySecurity property to specify a <xref:System.Security.AccessControl.CryptoKeySecurity> object that manages the creation of discretionary access control lists (DACLS) and system access control lists (SACLS) for a container."}]},{"pos":[18851,18991],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CryptoKeySecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents access rights and audit rules for a container.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object that represents access rights and audit rules for a container."},{"pos":[19455,19613],"content":"Represents the flags for <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CspParameters\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that modify the behavior of the cryptographic service provider (CSP).","needQuote":true,"needEscape":true,"source":"Represents the flags for <xref href=\"System.Security.Cryptography.CspParameters\"></xref> that modify the behavior of the cryptographic service provider (CSP)."},{"pos":[19799,19868],"content":"An enumeration value, or a bitwise combination of enumeration values.","needQuote":true,"needEscape":true,"nodes":[{"content":"An enumeration value, or a bitwise combination of enumeration values.","pos":[0,69]}]},{"pos":[20039,20078],"content":"Value is not a valid enumeration value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Value is not a valid enumeration value.","pos":[0,39]}]},{"pos":[20503,20605],"content":"Represents the key container name for <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CspParameters\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Represents the key container name for <xref href=\"System.Security.Cryptography.CspParameters\"></xref>."},{"pos":[20618,20930],"content":"Use the KeyContainerName field to specify a name for your key container.  You can use the container name to retrieve the persisted key within that container.       For more information about creating key containers, see [How to: Store Asymmetric Keys in a Key Container](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the KeyContainerName field to specify a name for your key container.","pos":[0,72]},{"content":"You can use the container name to retrieve the persisted key within that container.","pos":[74,157]},{"content":"For more information about creating key containers, see <bpt id=\"p1\">[</bpt>How to: Store Asymmetric Keys in a Key Container<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[164,310],"source":"       For more information about creating key containers, see [How to: Store Asymmetric Keys in a Key Container](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[21470,21482],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21889,21974],"content":"Specifies whether an asymmetric key is created as a signature key or an exchange key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies whether an asymmetric key is created as a signature key or an exchange key.","pos":[0,85]}]},{"pos":[21987,22956],"content":"The KeyNumber field initializes the <xref:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber%2A> property when you initialize a <xref:System.Security.Cryptography.CspKeyContainerInfo> object with a <xref:System.Security.Cryptography.CspParameters> object.       An exchange key is an asymmetric key pair used to encrypt session keys so that they can be safely stored and exchanged with other users.  You can use the <xref:System.Security.Cryptography.KeyNumber> value (`1`) to specify an exchange key.  This value corresponds to the `AT_KEYEXCHANGE` value used in the unmanaged Microsoft Cryptographic API (CAPI).       A signature key is an asymmetric key pair used for authenticating digitally signed messages or files.  You can use the <xref:System.Security.Cryptography.KeyNumber> value (`2`) to specify a signature key.  This value corresponds to the `AT_SIGNATURE` value used in CAPI.       By default, the KeyNumber field specifies an exchange key.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The KeyNumber field initializes the &lt;xref:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber%2A&gt; property when you initialize a &lt;xref:System.Security.Cryptography.CspKeyContainerInfo&gt; object with a &lt;xref:System.Security.Cryptography.CspParameters&gt; object.","pos":[0,263],"source":"The KeyNumber field initializes the <xref:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber%2A> property when you initialize a <xref:System.Security.Cryptography.CspKeyContainerInfo> object with a <xref:System.Security.Cryptography.CspParameters> object."},{"content":"An exchange key is an asymmetric key pair used to encrypt session keys so that they can be safely stored and exchanged with other users.","pos":[270,406]},{"content":"You can use the &lt;xref:System.Security.Cryptography.KeyNumber&gt; value (<ph id=\"ph1\">`1`</ph>) to specify an exchange key.","pos":[408,509],"source":"  You can use the <xref:System.Security.Cryptography.KeyNumber> value (`1`) to specify an exchange key."},{"content":"This value corresponds to the <ph id=\"ph1\">`AT_KEYEXCHANGE`</ph> value used in the unmanaged Microsoft Cryptographic API (CAPI).","pos":[511,621],"source":"  This value corresponds to the `AT_KEYEXCHANGE` value used in the unmanaged Microsoft Cryptographic API (CAPI)."},{"content":"A signature key is an asymmetric key pair used for authenticating digitally signed messages or files.","pos":[628,729]},{"content":"You can use the &lt;xref:System.Security.Cryptography.KeyNumber&gt; value (<ph id=\"ph1\">`2`</ph>) to specify a signature key.","pos":[731,832],"source":"  You can use the <xref:System.Security.Cryptography.KeyNumber> value (`2`) to specify a signature key."},{"content":"This value corresponds to the <ph id=\"ph1\">`AT_SIGNATURE`</ph> value used in CAPI.","pos":[834,898],"source":"  This value corresponds to the `AT_SIGNATURE` value used in CAPI."},{"content":"By default, the KeyNumber field specifies an exchange key.","pos":[905,963]}]},{"pos":[23588,23600],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24020,24077],"content":"Gets or sets a password associated with a smart card key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a password associated with a smart card key.","pos":[0,57]}]},{"pos":[24089,24267],"content":"Use the KeyPassword property to supply a password for a smart card key.  When you specify a password using this property, a password dialog box will not be presented to the user.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the KeyPassword property to supply a password for a smart card key.  When you specify a password using this property, a password dialog box will not be presented to the user.","pos":[0,178],"nodes":[{"content":"Use the KeyPassword property to supply a password for a smart card key.","pos":[0,71]},{"content":"When you specify a password using this property, a password dialog box will not be presented to the user.","pos":[73,178]}]}]},{"pos":[24425,24469],"content":"A password associated with a smart card key.","needQuote":true,"needEscape":true,"nodes":[{"content":"A password associated with a smart card key.","pos":[0,44]}]},{"pos":[24992,25082],"content":"Gets or sets a handle to the unmanaged parent window for a smart card password dialog box.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a handle to the unmanaged parent window for a smart card password dialog box.","pos":[0,90]}]},{"pos":[25095,25521],"content":"Use the ParentWindowHandle property to specify a handle to the unmanaged parent window for a smart card password dialog box.  When you specify a handle using this property, a smart card password dialog box will be presented to the user.       You can avoid presenting a smart card password dialog box by explicitly specifying a password by using the <xref:System.Security.Cryptography.CspParameters.KeyPassword%2A> property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the ParentWindowHandle property to specify a handle to the unmanaged parent window for a smart card password dialog box.  When you specify a handle using this property, a smart card password dialog box will be presented to the user.       You can avoid presenting a smart card password dialog box by explicitly specifying a password by using the <xref:System.Security.Cryptography.CspParameters.KeyPassword%2A> property.","pos":[0,424],"nodes":[{"content":"Use the ParentWindowHandle property to specify a handle to the unmanaged parent window for a smart card password dialog box.","pos":[0,124]},{"content":"When you specify a handle using this property, a smart card password dialog box will be presented to the user.","pos":[126,236]},{"content":"You can avoid presenting a smart card password dialog box by explicitly specifying a password by using the &lt;xref:System.Security.Cryptography.CspParameters.KeyPassword%2A&gt; property.","pos":[243,424],"source":"       You can avoid presenting a smart card password dialog box by explicitly specifying a password by using the <xref:System.Security.Cryptography.CspParameters.KeyPassword%2A> property."}]}]},{"pos":[25650,25717],"content":"A handle to the parent window for a smart card password dialog box.","needQuote":true,"needEscape":true,"nodes":[{"content":"A handle to the parent window for a smart card password dialog box.","pos":[0,67]}]},{"pos":[26214,26311],"content":"Represents the provider name for <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CspParameters\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Represents the provider name for <xref href=\"System.Security.Cryptography.CspParameters\"></xref>."},{"pos":[26323,26429],"content":"See the Microsoft Cryptography API (CAPI) documentation in the MSDN library for details on provider names.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"See the Microsoft Cryptography API (CAPI) documentation in the MSDN library for details on provider names.","pos":[0,106]}]},{"pos":[26538,26550],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26972,27074],"content":"Represents the provider type code for <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CspParameters\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Represents the provider type code for <xref href=\"System.Security.Cryptography.CspParameters\"></xref>."},{"pos":[27087,28362],"content":"Use the ProviderType field to specify a provider type by passing a numeric value that represents that provider.  The numeric values that represent the default provider types are defined in the WinCrypt.h header file:      -   To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> class, pass a value of `1`.      -   To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> class, pass a value of `13`.       The following table lists the provider types and their corresponding numeric values defined in the WinCrypt.h header file.      |Provider Type|Numeric Value|   |-------------------|-------------------|   |`PROV_RSA_FULL`|1|   |`PROV_RSA_SIG`|2|   |`PROV_DSS`|3|   |`PROV_FORTEZZA`|4|   |`PROV_MS_EXCHANGE`|5|   |`PROV_SSL`|6|   |`PROV_RSA_SCHANNEL`|12|   |`PROV_DSS_DH`|13|   |`PROV_EC_ECDSA_SIG`|14|   |`PROV_EC_ECNRA_SIG`|15|   |`PROV_EC_ECDSA_FULL`|16|   |`PROV_EC_ECNRA_FULL`|17|   |`PROV_DH_SCHANNEL`|18|   |`PROV_SPYRUS_LYNKS`|20|   |`PROV_RNG`|21|   |`PROV_INTEL_SEC`|22|   |`PROV_REPLACE_OWF`|23|   |`PROV_RSA_AES`|24|       For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the ProviderType field to specify a provider type by passing a numeric value that represents that provider.","pos":[0,111]},{"content":"The numeric values that represent the default provider types are defined in the WinCrypt.h header file:      -   To specify a provider compatible with the &lt;xref:System.Security.Cryptography.RSA&gt; class, pass a value of <ph id=\"ph1\">`1`</ph>.","pos":[113,335],"source":"  The numeric values that represent the default provider types are defined in the WinCrypt.h header file:      -   To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> class, pass a value of `1`."},{"content":"-   To specify a provider compatible with the &lt;xref:System.Security.Cryptography.DSA&gt; class, pass a value of <ph id=\"ph1\">`13`</ph>.","pos":[341,455],"source":"      -   To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> class, pass a value of `13`."},{"content":"The following table lists the provider types and their corresponding numeric values defined in the WinCrypt.h header file.","pos":[462,584]},{"content":"|Provider Type|Numeric Value|   |-------------------|-------------------|   |<ph id=\"ph1\">`PROV_RSA_FULL`</ph>|1|   |<ph id=\"ph2\">`PROV_RSA_SIG`</ph>|2|   |<ph id=\"ph3\">`PROV_DSS`</ph>|3|   |<ph id=\"ph4\">`PROV_FORTEZZA`</ph>|4|   |<ph id=\"ph5\">`PROV_MS_EXCHANGE`</ph>|5|   |<ph id=\"ph6\">`PROV_SSL`</ph>|6|   |<ph id=\"ph7\">`PROV_RSA_SCHANNEL`</ph>|12|   |<ph id=\"ph8\">`PROV_DSS_DH`</ph>|13|   |<ph id=\"ph9\">`PROV_EC_ECDSA_SIG`</ph>|14|   |<ph id=\"ph10\">`PROV_EC_ECNRA_SIG`</ph>|15|   |<ph id=\"ph11\">`PROV_EC_ECDSA_FULL`</ph>|16|   |<ph id=\"ph12\">`PROV_EC_ECNRA_FULL`</ph>|17|   |<ph id=\"ph13\">`PROV_DH_SCHANNEL`</ph>|18|   |<ph id=\"ph14\">`PROV_SPYRUS_LYNKS`</ph>|20|   |<ph id=\"ph15\">`PROV_RNG`</ph>|21|   |<ph id=\"ph16\">`PROV_INTEL_SEC`</ph>|22|   |<ph id=\"ph17\">`PROV_REPLACE_OWF`</ph>|23|   |<ph id=\"ph18\">`PROV_RSA_AES`</ph>|24|       For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.","pos":[590,1246],"source":"      |Provider Type|Numeric Value|   |-------------------|-------------------|   |`PROV_RSA_FULL`|1|   |`PROV_RSA_SIG`|2|   |`PROV_DSS`|3|   |`PROV_FORTEZZA`|4|   |`PROV_MS_EXCHANGE`|5|   |`PROV_SSL`|6|   |`PROV_RSA_SCHANNEL`|12|   |`PROV_DSS_DH`|13|   |`PROV_EC_ECDSA_SIG`|14|   |`PROV_EC_ECNRA_SIG`|15|   |`PROV_EC_ECDSA_FULL`|16|   |`PROV_EC_ECNRA_FULL`|17|   |`PROV_DH_SCHANNEL`|18|   |`PROV_SPYRUS_LYNKS`|20|   |`PROV_RNG`|21|   |`PROV_INTEL_SEC`|22|   |`PROV_REPLACE_OWF`|23|   |`PROV_RSA_AES`|24|       For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library."}]},{"pos":[28468,28480],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.CspParameters\n  id: CspParameters\n  children:\n  - System.Security.Cryptography.CspParameters.#ctor\n  - System.Security.Cryptography.CspParameters.#ctor(System.Int32)\n  - System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String)\n  - System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String)\n  - System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.IntPtr)\n  - System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.Security.SecureString)\n  - System.Security.Cryptography.CspParameters.CryptoKeySecurity\n  - System.Security.Cryptography.CspParameters.Flags\n  - System.Security.Cryptography.CspParameters.KeyContainerName\n  - System.Security.Cryptography.CspParameters.KeyNumber\n  - System.Security.Cryptography.CspParameters.KeyPassword\n  - System.Security.Cryptography.CspParameters.ParentWindowHandle\n  - System.Security.Cryptography.CspParameters.ProviderName\n  - System.Security.Cryptography.CspParameters.ProviderType\n  langs:\n  - csharp\n  name: CspParameters\n  nameWithType: CspParameters\n  fullName: System.Security.Cryptography.CspParameters\n  type: Class\n  summary: Contains parameters that are passed to the cryptographic service provider (CSP) that performs cryptographic computations. This class cannot be inherited.\n  remarks: \"The CspParameters class represents parameters that you can pass to managed cryptography classes that internally use Microsoft Cryptographic Service Providers (CSPs) from the unmanaged Microsoft Cryptography API (CAPI). Classes with names ending in \\\"CryptoServiceProvider\\\" are managed code wrappers for the corresponding CSP.  \\n  \\n Use the CspParameters class to do the following:  \\n  \\n-   Specify a particular CSP by passing the provider type to the <xref:System.Security.Cryptography.CspParameters.ProviderType> or <xref:System.Security.Cryptography.CspParameters.ProviderName> property.  You can also specify a CSP using an overload of the constructor.  \\n  \\n-   Create a key container where you can store cryptographic keys.  Key containers provide the most secure way to persist cryptographic keys and keep them secret from malicious third parties.  For more information about creating key containers, see [How to: Store Asymmetric Keys in a Key Container](~/add/includes/ajax-current-ext-md.md).  \\n  \\n-   Specify whether to create an asymmetric signature key or an asymmetric exchange key using the <xref:System.Security.Cryptography.CspParameters.KeyNumber> property.\"\n  example:\n  - \"The following code example creates a key container using the CspParameters class and saves the key in the container.  \\n  \\n [!code-cpp[capikey#1](~/add/codesnippet/cpp/t-system.security.crypto_47_1.cpp)]\\n [!code-vb[capikey#1](~/add/codesnippet/visualbasic/t-system.security.crypto_47_1.vb)]\\n [!code-cs[capikey#1](~/add/codesnippet/csharp/t-system.security.crypto_47_1.cs)]  \\n  \\n The following code example uses the CspParameters class to select a Smart Card Cryptographic Service Provider.  It then signs and verifies data using the smart card.  \\n  \\n [!code-cs[Cryptography.SmartCardCSP#1](~/add/codesnippet/csharp/t-system.security.crypto_47_2.cs)]\\n [!code-cpp[Cryptography.SmartCardCSP#1](~/add/codesnippet/cpp/t-system.security.crypto_47_2.cpp)]\\n [!code-vb[Cryptography.SmartCardCSP#1](~/add/codesnippet/visualbasic/t-system.security.crypto_47_2.vb)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class CspParameters\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CspParameters.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.CspParameters\n  langs:\n  - csharp\n  name: CspParameters()\n  nameWithType: CspParameters.CspParameters()\n  fullName: System.Security.Cryptography.CspParameters.CspParameters()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.CspParameters\"></xref> class.\n  remarks: \"This form of CspParameters initializes the <xref:System.Security.Cryptography.CspParameters.ProviderType> field to a value of `24`, which specifies the PROV_RSA_AES provider.  This default provider is compatible with the <xref:System.Security.Cryptography.Aes> algorithm.  \\n  \\n For information about other provider types, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.\"\n  example:\n  - \"The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.  \\n  \\n [!code-cpp[capikey#1](~/add/codesnippet/cpp/m-system.security.crypto_108_1.cpp)]\\n [!code-vb[capikey#1](~/add/codesnippet/visualbasic/m-system.security.crypto_108_1.vb)]\\n [!code-cs[capikey#1](~/add/codesnippet/csharp/m-system.security.crypto_108_1.cs)]\"\n  syntax:\n    content: public CspParameters ();\n    parameters: []\n  overload: System.Security.Cryptography.CspParameters.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Security.Cryptography.CspParameters\n  langs:\n  - csharp\n  name: CspParameters(Int32)\n  nameWithType: CspParameters.CspParameters(Int32)\n  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.CspParameters\"></xref> class with the specified provider type code.\n  remarks: \"Use the CspParameters constructor to specify a provider type by passing a numeric value that represents that provider.  The numeric values that represent the default provider types are defined in the WinCrypt.h header file:  \\n  \\n-   To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1`to the `dwTypeIn` parameter.  \\n  \\n-   To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13`to the `dwTypeIn` parameter.  \\n  \\n For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.  For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.\"\n  example:\n  - \"The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.  \\n  \\n [!code-cpp[capikey#1](~/add/codesnippet/cpp/m-system.security.crypto_129_1.cpp)]\\n [!code-vb[capikey#1](~/add/codesnippet/visualbasic/m-system.security.crypto_129_1.vb)]\\n [!code-cs[capikey#1](~/add/codesnippet/csharp/m-system.security.crypto_129_1.cs)]\"\n  syntax:\n    content: public CspParameters (int dwTypeIn);\n    parameters:\n    - id: dwTypeIn\n      type: System.Int32\n      description: A provider type code that specifies the kind of provider to create.\n  overload: System.Security.Cryptography.CspParameters.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String)\n  id: '#ctor(System.Int32,System.String)'\n  parent: System.Security.Cryptography.CspParameters\n  langs:\n  - csharp\n  name: CspParameters(Int32,String)\n  nameWithType: CspParameters.CspParameters(Int32,String)\n  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.CspParameters\"></xref> class with the specified provider type code and name.\n  remarks: \"Use the CspParameters constructor to specify a provider type and name.  \\n  \\n Specify a provider type by passing a numeric value that represents the desired provider type.  The numeric values that represent the default provider types are defined in the WinCrypt.h header file:  \\n  \\n-   To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1`to the `dwTypeIn` parameter.  \\n  \\n-   To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13`to the `dwTypeIn` parameter.  \\n  \\n For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.  For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.\"\n  example:\n  - \"The following code example uses the <xref:System.Security.Cryptography.CspParameters> class to select a Smart Card Cryptographic Service Provider.  It then signs and verifies data using the smart card.  \\n  \\n [!code-cs[Cryptography.SmartCardCSP#1](~/add/codesnippet/csharp/3115faba-ad85-4109-97d8-_1.cs)]\\n [!code-cpp[Cryptography.SmartCardCSP#1](~/add/codesnippet/cpp/3115faba-ad85-4109-97d8-_1.cpp)]\\n [!code-vb[Cryptography.SmartCardCSP#1](~/add/codesnippet/visualbasic/3115faba-ad85-4109-97d8-_1.vb)]\"\n  syntax:\n    content: public CspParameters (int dwTypeIn, string strProviderNameIn);\n    parameters:\n    - id: dwTypeIn\n      type: System.Int32\n      description: A provider type code that specifies the kind of provider to create.\n    - id: strProviderNameIn\n      type: System.String\n      description: A provider name.\n  overload: System.Security.Cryptography.CspParameters.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String)\n  id: '#ctor(System.Int32,System.String,System.String)'\n  parent: System.Security.Cryptography.CspParameters\n  langs:\n  - csharp\n  name: CspParameters(Int32,String,String)\n  nameWithType: CspParameters.CspParameters(Int32,String,String)\n  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String,String)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.CspParameters\"></xref> class with the specified provider type code and name, and the specified container name.\n  remarks: \"Use the CspParameters constructor to specify a provider type, a provider name, and a container name.  \\n  \\n You can use the container name to retrieve a key within that container.  \\n  \\n Specify a provider type by passing a numeric value that represents the desired provider type.  The numeric values that represent the default provider types are defined in the WinCrypt.h header file:  \\n  \\n-   To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1`to the `dwTypeIn` parameter.  \\n  \\n-   To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13`to the `dwTypeIn` parameter.  \\n  \\n For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.  For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.\"\n  syntax:\n    content: public CspParameters (int dwTypeIn, string strProviderNameIn, string strContainerNameIn);\n    parameters:\n    - id: dwTypeIn\n      type: System.Int32\n      description: The provider type code that specifies the kind of provider to create.\n    - id: strProviderNameIn\n      type: System.String\n      description: A provider name.\n    - id: strContainerNameIn\n      type: System.String\n      description: A container name.\n  overload: System.Security.Cryptography.CspParameters.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.IntPtr)\n  id: '#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.IntPtr)'\n  parent: System.Security.Cryptography.CspParameters\n  langs:\n  - csharp\n  name: CspParameters(Int32,String,String,CryptoKeySecurity,IntPtr)\n  nameWithType: CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,IntPtr)\n  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,IntPtr)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.CspParameters\"></xref> class using a provider type, a provider name, a container name, access information, and a handle to an unmanaged smart card password dialog.\n  remarks: \"You can use the container name to retrieve a key within that container.  \\n  \\n Specify a provider type by passing a numeric value that represents the desired provider type.  The numeric values that represent the default provider types are defined in the WinCrypt.h header file:  \\n  \\n-   To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1`to the `dwTypeIn` parameter.  \\n  \\n-   To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13`to the `dwTypeIn` parameter.  \\n  \\n For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.  For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.\"\n  syntax:\n    content: public CspParameters (int providerType, string providerName, string keyContainerName, System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, IntPtr parentWindowHandle);\n    parameters:\n    - id: providerType\n      type: System.Int32\n      description: The provider type code that specifies the kind of provider to create.\n    - id: providerName\n      type: System.String\n      description: A provider name.\n    - id: keyContainerName\n      type: System.String\n      description: A container name.\n    - id: cryptoKeySecurity\n      type: System.Security.AccessControl.CryptoKeySecurity\n      description: An object that represents access rights and audit rules for the container.\n    - id: parentWindowHandle\n      type: System.IntPtr\n      description: A handle to the parent window for a smart card password dialog.\n  overload: System.Security.Cryptography.CspParameters.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.Security.SecureString)\n  id: '#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.Security.SecureString)'\n  parent: System.Security.Cryptography.CspParameters\n  langs:\n  - csharp\n  name: CspParameters(Int32,String,String,CryptoKeySecurity,SecureString)\n  nameWithType: CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,SecureString)\n  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,SecureString)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.CspParameters\"></xref> class using a provider type, a provider name, a container name, access information, and a password associated with a smart card key.\n  remarks: \"You can use the container name to retrieve a key within that container.  \\n  \\n Specify a provider type by passing a numeric value that represents the desired provider type.  The numeric values that represent the default provider types are defined in the WinCrypt.h header file:  \\n  \\n-   To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1`to the `dwTypeIn` parameter.  \\n  \\n-   To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13`to the `dwTypeIn` parameter.  \\n  \\n For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.  For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.\"\n  syntax:\n    content: public CspParameters (int providerType, string providerName, string keyContainerName, System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, System.Security.SecureString keyPassword);\n    parameters:\n    - id: providerType\n      type: System.Int32\n      description: The provider type code that specifies the kind of provider to create.\n    - id: providerName\n      type: System.String\n      description: A provider name.\n    - id: keyContainerName\n      type: System.String\n      description: A container name.\n    - id: cryptoKeySecurity\n      type: System.Security.AccessControl.CryptoKeySecurity\n      description: An object that represents access rights and audit rules for a container.\n    - id: keyPassword\n      type: System.Security.SecureString\n      description: A password associated with a smart card key.\n  overload: System.Security.Cryptography.CspParameters.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CspParameters.CryptoKeySecurity\n  id: CryptoKeySecurity\n  parent: System.Security.Cryptography.CspParameters\n  langs:\n  - csharp\n  name: CryptoKeySecurity\n  nameWithType: CspParameters.CryptoKeySecurity\n  fullName: System.Security.Cryptography.CspParameters.CryptoKeySecurity\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Gets or sets a <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object that represents access rights and audit rules for a container.\n  remarks: Use the CryptoKeySecurity property to specify a <xref:System.Security.AccessControl.CryptoKeySecurity> object that manages the creation of discretionary access control lists (DACLS) and system access control lists (SACLS) for a container.\n  syntax:\n    content: public System.Security.AccessControl.CryptoKeySecurity CryptoKeySecurity { get; set; }\n    return:\n      type: System.Security.AccessControl.CryptoKeySecurity\n      description: A <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object that represents access rights and audit rules for a container.\n  overload: System.Security.Cryptography.CspParameters.CryptoKeySecurity*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CspParameters.Flags\n  id: Flags\n  parent: System.Security.Cryptography.CspParameters\n  langs:\n  - csharp\n  name: Flags\n  nameWithType: CspParameters.Flags\n  fullName: System.Security.Cryptography.CspParameters.Flags\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Represents the flags for <xref href=\"System.Security.Cryptography.CspParameters\"></xref> that modify the behavior of the cryptographic service provider (CSP).\n  syntax:\n    content: public System.Security.Cryptography.CspProviderFlags Flags { get; set; }\n    return:\n      type: System.Security.Cryptography.CspProviderFlags\n      description: An enumeration value, or a bitwise combination of enumeration values.\n  overload: System.Security.Cryptography.CspParameters.Flags*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Value is not a valid enumeration value.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CspParameters.KeyContainerName\n  id: KeyContainerName\n  parent: System.Security.Cryptography.CspParameters\n  langs:\n  - csharp\n  name: KeyContainerName\n  nameWithType: CspParameters.KeyContainerName\n  fullName: System.Security.Cryptography.CspParameters.KeyContainerName\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Represents the key container name for <xref href=\"System.Security.Cryptography.CspParameters\"></xref>.\n  remarks: \"Use the KeyContainerName field to specify a name for your key container.  You can use the container name to retrieve the persisted key within that container.  \\n  \\n For more information about creating key containers, see [How to: Store Asymmetric Keys in a Key Container](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.  \\n  \\n [!code-cpp[capikey#1](~/add/codesnippet/cpp/f-system.security.crypto_6_1.cpp)]\\n [!code-vb[capikey#1](~/add/codesnippet/visualbasic/f-system.security.crypto_6_1.vb)]\\n [!code-cs[capikey#1](~/add/codesnippet/csharp/f-system.security.crypto_6_1.cs)]\"\n  syntax:\n    content: public string KeyContainerName;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CspParameters.KeyNumber\n  id: KeyNumber\n  parent: System.Security.Cryptography.CspParameters\n  langs:\n  - csharp\n  name: KeyNumber\n  nameWithType: CspParameters.KeyNumber\n  fullName: System.Security.Cryptography.CspParameters.KeyNumber\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Specifies whether an asymmetric key is created as a signature key or an exchange key.\n  remarks: \"The KeyNumber field initializes the <xref:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber%2A> property when you initialize a <xref:System.Security.Cryptography.CspKeyContainerInfo> object with a <xref:System.Security.Cryptography.CspParameters> object.  \\n  \\n An exchange key is an asymmetric key pair used to encrypt session keys so that they can be safely stored and exchanged with other users.  You can use the <xref:System.Security.Cryptography.KeyNumber> value (`1`) to specify an exchange key.  This value corresponds to the `AT_KEYEXCHANGE` value used in the unmanaged Microsoft Cryptographic API (CAPI).  \\n  \\n A signature key is an asymmetric key pair used for authenticating digitally signed messages or files.  You can use the <xref:System.Security.Cryptography.KeyNumber> value (`2`) to specify a signature key.  This value corresponds to the `AT_SIGNATURE` value used in CAPI.  \\n  \\n By default, the KeyNumber field specifies an exchange key.\"\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Security.Cryptography.KeyNumber> enumeration to specify a key type for an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object.  \\n  \\n [!code-cs[Cryptography.KeyNumber#1](~/add/codesnippet/csharp/f-system.security.crypto_8_1.cs)]\\n [!code-cpp[Cryptography.KeyNumber#1](~/add/codesnippet/cpp/f-system.security.crypto_8_1.cpp)]\\n [!code-vb[Cryptography.KeyNumber#1](~/add/codesnippet/visualbasic/f-system.security.crypto_8_1.vb)]\"\n  syntax:\n    content: public int KeyNumber;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CspParameters.KeyPassword\n  id: KeyPassword\n  parent: System.Security.Cryptography.CspParameters\n  langs:\n  - csharp\n  name: KeyPassword\n  nameWithType: CspParameters.KeyPassword\n  fullName: System.Security.Cryptography.CspParameters.KeyPassword\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Gets or sets a password associated with a smart card key.\n  remarks: Use the KeyPassword property to supply a password for a smart card key.  When you specify a password using this property, a password dialog box will not be presented to the user.\n  syntax:\n    content: public System.Security.SecureString KeyPassword { get; set; }\n    return:\n      type: System.Security.SecureString\n      description: A password associated with a smart card key.\n  overload: System.Security.Cryptography.CspParameters.KeyPassword*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CspParameters.ParentWindowHandle\n  id: ParentWindowHandle\n  parent: System.Security.Cryptography.CspParameters\n  langs:\n  - csharp\n  name: ParentWindowHandle\n  nameWithType: CspParameters.ParentWindowHandle\n  fullName: System.Security.Cryptography.CspParameters.ParentWindowHandle\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Gets or sets a handle to the unmanaged parent window for a smart card password dialog box.\n  remarks: \"Use the ParentWindowHandle property to specify a handle to the unmanaged parent window for a smart card password dialog box.  When you specify a handle using this property, a smart card password dialog box will be presented to the user.  \\n  \\n You can avoid presenting a smart card password dialog box by explicitly specifying a password by using the <xref:System.Security.Cryptography.CspParameters.KeyPassword%2A> property.\"\n  syntax:\n    content: public IntPtr ParentWindowHandle { get; set; }\n    return:\n      type: System.IntPtr\n      description: A handle to the parent window for a smart card password dialog box.\n  overload: System.Security.Cryptography.CspParameters.ParentWindowHandle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CspParameters.ProviderName\n  id: ProviderName\n  parent: System.Security.Cryptography.CspParameters\n  langs:\n  - csharp\n  name: ProviderName\n  nameWithType: CspParameters.ProviderName\n  fullName: System.Security.Cryptography.CspParameters.ProviderName\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Represents the provider name for <xref href=\"System.Security.Cryptography.CspParameters\"></xref>.\n  remarks: See the Microsoft Cryptography API (CAPI) documentation in the MSDN library for details on provider names.\n  syntax:\n    content: public string ProviderName;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CspParameters.ProviderType\n  id: ProviderType\n  parent: System.Security.Cryptography.CspParameters\n  langs:\n  - csharp\n  name: ProviderType\n  nameWithType: CspParameters.ProviderType\n  fullName: System.Security.Cryptography.CspParameters.ProviderType\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Represents the provider type code for <xref href=\"System.Security.Cryptography.CspParameters\"></xref>.\n  remarks: \"Use the ProviderType field to specify a provider type by passing a numeric value that represents that provider.  The numeric values that represent the default provider types are defined in the WinCrypt.h header file:  \\n  \\n-   To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> class, pass a value of `1`.  \\n  \\n-   To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> class, pass a value of `13`.  \\n  \\n The following table lists the provider types and their corresponding numeric values defined in the WinCrypt.h header file.  \\n  \\n|Provider Type|Numeric Value|  \\n|-------------------|-------------------|  \\n|`PROV_RSA_FULL`|1|  \\n|`PROV_RSA_SIG`|2|  \\n|`PROV_DSS`|3|  \\n|`PROV_FORTEZZA`|4|  \\n|`PROV_MS_EXCHANGE`|5|  \\n|`PROV_SSL`|6|  \\n|`PROV_RSA_SCHANNEL`|12|  \\n|`PROV_DSS_DH`|13|  \\n|`PROV_EC_ECDSA_SIG`|14|  \\n|`PROV_EC_ECNRA_SIG`|15|  \\n|`PROV_EC_ECDSA_FULL`|16|  \\n|`PROV_EC_ECNRA_FULL`|17|  \\n|`PROV_DH_SCHANNEL`|18|  \\n|`PROV_SPYRUS_LYNKS`|20|  \\n|`PROV_RNG`|21|  \\n|`PROV_INTEL_SEC`|22|  \\n|`PROV_REPLACE_OWF`|23|  \\n|`PROV_RSA_AES`|24|  \\n  \\n For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.\"\n  syntax:\n    content: public int ProviderType;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Security.Cryptography.CspParameters.#ctor\n  parent: System.Security.Cryptography.CspParameters\n  isExternal: false\n  name: CspParameters()\n  nameWithType: CspParameters.CspParameters()\n  fullName: System.Security.Cryptography.CspParameters.CspParameters()\n- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32)\n  parent: System.Security.Cryptography.CspParameters\n  isExternal: false\n  name: CspParameters(Int32)\n  nameWithType: CspParameters.CspParameters(Int32)\n  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String)\n  parent: System.Security.Cryptography.CspParameters\n  isExternal: false\n  name: CspParameters(Int32,String)\n  nameWithType: CspParameters.CspParameters(Int32,String)\n  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String)\n  parent: System.Security.Cryptography.CspParameters\n  isExternal: false\n  name: CspParameters(Int32,String,String)\n  nameWithType: CspParameters.CspParameters(Int32,String,String)\n  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String,String)\n- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.IntPtr)\n  parent: System.Security.Cryptography.CspParameters\n  isExternal: false\n  name: CspParameters(Int32,String,String,CryptoKeySecurity,IntPtr)\n  nameWithType: CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,IntPtr)\n  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,IntPtr)\n- uid: System.Security.AccessControl.CryptoKeySecurity\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: CryptoKeySecurity\n  nameWithType: CryptoKeySecurity\n  fullName: System.Security.AccessControl.CryptoKeySecurity\n- uid: System.IntPtr\n  parent: System\n  isExternal: true\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.Security.SecureString)\n  parent: System.Security.Cryptography.CspParameters\n  isExternal: false\n  name: CspParameters(Int32,String,String,CryptoKeySecurity,SecureString)\n  nameWithType: CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,SecureString)\n  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,SecureString)\n- uid: System.Security.SecureString\n  parent: System.Security\n  isExternal: false\n  name: SecureString\n  nameWithType: SecureString\n  fullName: System.Security.SecureString\n- uid: System.Security.Cryptography.CspParameters.CryptoKeySecurity\n  parent: System.Security.Cryptography.CspParameters\n  isExternal: false\n  name: CryptoKeySecurity\n  nameWithType: CspParameters.CryptoKeySecurity\n  fullName: System.Security.Cryptography.CspParameters.CryptoKeySecurity\n- uid: System.Security.Cryptography.CspParameters.Flags\n  parent: System.Security.Cryptography.CspParameters\n  isExternal: false\n  name: Flags\n  nameWithType: CspParameters.Flags\n  fullName: System.Security.Cryptography.CspParameters.Flags\n- uid: System.Security.Cryptography.CspProviderFlags\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CspProviderFlags\n  nameWithType: CspProviderFlags\n  fullName: System.Security.Cryptography.CspProviderFlags\n- uid: System.Security.Cryptography.CspParameters.KeyContainerName\n  parent: System.Security.Cryptography.CspParameters\n  isExternal: false\n  name: KeyContainerName\n  nameWithType: CspParameters.KeyContainerName\n  fullName: System.Security.Cryptography.CspParameters.KeyContainerName\n- uid: System.Security.Cryptography.CspParameters.KeyNumber\n  parent: System.Security.Cryptography.CspParameters\n  isExternal: false\n  name: KeyNumber\n  nameWithType: CspParameters.KeyNumber\n  fullName: System.Security.Cryptography.CspParameters.KeyNumber\n- uid: System.Security.Cryptography.CspParameters.KeyPassword\n  parent: System.Security.Cryptography.CspParameters\n  isExternal: false\n  name: KeyPassword\n  nameWithType: CspParameters.KeyPassword\n  fullName: System.Security.Cryptography.CspParameters.KeyPassword\n- uid: System.Security.Cryptography.CspParameters.ParentWindowHandle\n  parent: System.Security.Cryptography.CspParameters\n  isExternal: false\n  name: ParentWindowHandle\n  nameWithType: CspParameters.ParentWindowHandle\n  fullName: System.Security.Cryptography.CspParameters.ParentWindowHandle\n- uid: System.Security.Cryptography.CspParameters.ProviderName\n  parent: System.Security.Cryptography.CspParameters\n  isExternal: false\n  name: ProviderName\n  nameWithType: CspParameters.ProviderName\n  fullName: System.Security.Cryptography.CspParameters.ProviderName\n- uid: System.Security.Cryptography.CspParameters.ProviderType\n  parent: System.Security.Cryptography.CspParameters\n  isExternal: false\n  name: ProviderType\n  nameWithType: CspParameters.ProviderType\n  fullName: System.Security.Cryptography.CspParameters.ProviderType\n- uid: System.Security.Cryptography.CspParameters.#ctor*\n  parent: System.Security.Cryptography.CspParameters\n  isExternal: false\n  name: CspParameters\n  nameWithType: CspParameters.CspParameters\n- uid: System.Security.Cryptography.CspParameters.CryptoKeySecurity*\n  parent: System.Security.Cryptography.CspParameters\n  isExternal: false\n  name: CryptoKeySecurity\n  nameWithType: CspParameters.CryptoKeySecurity\n- uid: System.Security.Cryptography.CspParameters.Flags*\n  parent: System.Security.Cryptography.CspParameters\n  isExternal: false\n  name: Flags\n  nameWithType: CspParameters.Flags\n- uid: System.Security.Cryptography.CspParameters.KeyPassword*\n  parent: System.Security.Cryptography.CspParameters\n  isExternal: false\n  name: KeyPassword\n  nameWithType: CspParameters.KeyPassword\n- uid: System.Security.Cryptography.CspParameters.ParentWindowHandle*\n  parent: System.Security.Cryptography.CspParameters\n  isExternal: false\n  name: ParentWindowHandle\n  nameWithType: CspParameters.ParentWindowHandle\n"}