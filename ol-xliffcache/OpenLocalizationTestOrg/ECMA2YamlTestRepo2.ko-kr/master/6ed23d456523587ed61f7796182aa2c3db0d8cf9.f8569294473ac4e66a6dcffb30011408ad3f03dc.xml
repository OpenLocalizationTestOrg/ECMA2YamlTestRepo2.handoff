{"nodes":[{"pos":[593,765],"content":"Specifies the visual structure and behavioral aspects of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Control\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that can be shared across multiple instances of the control.","needQuote":true,"needEscape":true,"source":"Specifies the visual structure and behavioral aspects of a <xref href=\"System.Windows.Controls.Control\"></xref> that can be shared across multiple instances of the control."},{"pos":[778,3181],"content":"The ControlTemplate allows you to specify the visual structure of a control. The control author can define the default ControlTemplate and the application author can override the ControlTemplate to reconstruct the visual structure of the control.       Control templating is one of the many features offered by the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] styling and templating model. The styling and templating model provides you with such great flexibility that in many cases you do not need to write your own controls. If you are an application author that wants to change the visualization of your control or to replace the ControlTemplate of an existing control, see the [Styling and Templating](~/add/includes/ajax-current-ext-md.md) topic for examples and an in-depth discussion.       If you are writing your own control, see \"Create a Custom Control\" in the [Control Authoring Overview](~/add/includes/ajax-current-ext-md.md).       A ControlTemplate is intended to be a self-contained unit of implementation detail that is invisible to outside users and objects, including styles. The only way to manipulate the content of the control template is from within the same control template.      <a name=\"xamlObjectElementUsage_VisualTree\"></a>    ## XAML Property Element Usage      ```   <ControlTemplate>     <VisualTreeRootNode > VisualTreeNodeContents     </VisualTreeRootNode >   </ControlTemplate>   ```      <a name=\"xamlValues_VisualTree\"></a>    ## XAML Values    *ControlTemplate*    Object element for ControlTemplate or a derived class.       *VisualTreeRootNode*    A single [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] element as the immediate child of the ControlTemplate (or a derived class). Templates must have a single root node. In order to generate a useful template, the element chosen as *VisualTreeRootNode* is expected to support a content model of its own, often a model that supports multiple child elements.       *VisualTreeNodeContents*    One or more elements that complete the intended template. If the element chosen as *VisualTreeRootNode* only supports a single child, then there can only be one element declared as *VisualTreeNodeContents*. It is also possible (though uncommon) to provide text content if the chosen *VisualTreeRootNode* supports a text content property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ControlTemplate allows you to specify the visual structure of a control.","pos":[0,76]},{"content":"The control author can define the default ControlTemplate and the application author can override the ControlTemplate to reconstruct the visual structure of the control.","pos":[77,246]},{"content":"Control templating is one of the many features offered by the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> styling and templating model.","pos":[253,420],"source":"       Control templating is one of the many features offered by the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] styling and templating model."},{"content":"The styling and templating model provides you with such great flexibility that in many cases you do not need to write your own controls.","pos":[421,557]},{"content":"If you are an application author that wants to change the visualization of your control or to replace the ControlTemplate of an existing control, see the <bpt id=\"p1\">[</bpt>Styling and Templating<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> topic for examples and an in-depth discussion.","pos":[558,822],"source":" If you are an application author that wants to change the visualization of your control or to replace the ControlTemplate of an existing control, see the [Styling and Templating](~/add/includes/ajax-current-ext-md.md) topic for examples and an in-depth discussion."},{"content":"If you are writing your own control, see \"Create a Custom Control\" in the <bpt id=\"p1\">[</bpt>Control Authoring Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[829,971],"source":"       If you are writing your own control, see \"Create a Custom Control\" in the [Control Authoring Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"A ControlTemplate is intended to be a self-contained unit of implementation detail that is invisible to outside users and objects, including styles.","pos":[978,1126]},{"content":"The only way to manipulate the content of the control template is from within the same control template.","pos":[1127,1231]},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlObjectElementUsage_VisualTree\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Property Element Usage      <ph id=\"ph1\">```   &lt;ControlTemplate&gt;     &lt;VisualTreeRootNode &gt; VisualTreeNodeContents     &lt;/VisualTreeRootNode &gt;   &lt;/ControlTemplate&gt;   ```</ph>      <bpt id=\"p2\">&lt;a name=\"xamlValues_VisualTree\"&gt;</bpt><ept id=\"p2\">&lt;/a&gt;</ept>    ## XAML Values    <bpt id=\"p3\">*</bpt>ControlTemplate<ept id=\"p3\">*</ept>    Object element for ControlTemplate or a derived class.","pos":[1237,1590],"source":"<a name=\"xamlObjectElementUsage_VisualTree\"></a>    ## XAML Property Element Usage      ```   <ControlTemplate>     <VisualTreeRootNode > VisualTreeNodeContents     </VisualTreeRootNode >   </ControlTemplate>   ```      <a name=\"xamlValues_VisualTree\"></a>    ## XAML Values    *ControlTemplate*    Object element for ControlTemplate or a derived class."},{"content":"<bpt id=\"p1\">*</bpt>VisualTreeRootNode<ept id=\"p1\">*</ept>    A single <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> element as the immediate child of the ControlTemplate (or a derived class).","pos":[1597,1771],"source":"*VisualTreeRootNode*    A single [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] element as the immediate child of the ControlTemplate (or a derived class)."},{"content":"Templates must have a single root node.","pos":[1772,1811]},{"content":"In order to generate a useful template, the element chosen as <bpt id=\"p1\">*</bpt>VisualTreeRootNode<ept id=\"p1\">*</ept> is expected to support a content model of its own, often a model that supports multiple child elements.","pos":[1812,1998],"source":" In order to generate a useful template, the element chosen as *VisualTreeRootNode* is expected to support a content model of its own, often a model that supports multiple child elements."},{"content":"<bpt id=\"p1\">*</bpt>VisualTreeNodeContents<ept id=\"p1\">*</ept>    One or more elements that complete the intended template.","pos":[2005,2090],"source":"*VisualTreeNodeContents*    One or more elements that complete the intended template."},{"content":"If the element chosen as <bpt id=\"p1\">*</bpt>VisualTreeRootNode<ept id=\"p1\">*</ept> only supports a single child, then there can only be one element declared as <bpt id=\"p2\">*</bpt>VisualTreeNodeContents<ept id=\"p2\">*</ept>.","pos":[2091,2239],"source":" If the element chosen as *VisualTreeRootNode* only supports a single child, then there can only be one element declared as *VisualTreeNodeContents*."},{"content":"It is also possible (though uncommon) to provide text content if the chosen <bpt id=\"p1\">*</bpt>VisualTreeRootNode<ept id=\"p1\">*</ept> supports a text content property.","pos":[2240,2370],"source":" It is also possible (though uncommon) to provide text content if the chosen *VisualTreeRootNode* supports a text content property."}]},{"pos":[6727,6828],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.ControlTemplate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Controls.ControlTemplate\"></xref> class."},{"pos":[7426,7558],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.ControlTemplate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified target type.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Controls.ControlTemplate\"></xref> class with the specified target type."},{"pos":[7704,7743],"content":"The type this template is intended for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type this template is intended for.","pos":[0,39]}]},{"pos":[8218,8328],"content":"Gets or sets the type for which this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.ControlTemplate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is intended.","needQuote":true,"needEscape":true,"source":"Gets or sets the type for which this <xref href=\"System.Windows.Controls.ControlTemplate\"></xref> is intended."},{"pos":[8341,9239],"content":"If you have a standalone <xref:System.Windows.Controls.ControlTemplate> in the resources section with the TargetType property set to a type, the <xref:System.Windows.Controls.ControlTemplate> does not get applied to that type automatically. Instead, you need to specify an `x:Key` and apply the template explicitly.       Also note that the TargetType property is required on a <xref:System.Windows.Controls.ControlTemplate> if the template definition contains a <xref:System.Windows.Controls.ContentPresenter>.      <a name=\"xamlAttributeUsage_TargetType\"></a>    ## XAML Attribute Usage      ```   <object  TargetType=\"typeName\"/>   ```      <a name=\"xamlValues_TargetType\"></a>    ## XAML Values    *typeName*    The type name of the class. To refer to the <xref:System.Type> name of the class, use the [Markup Extensions and WPF XAML](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If you have a standalone &lt;xref:System.Windows.Controls.ControlTemplate&gt; in the resources section with the TargetType property set to a type, the &lt;xref:System.Windows.Controls.ControlTemplate&gt; does not get applied to that type automatically.","pos":[0,240],"source":"If you have a standalone <xref:System.Windows.Controls.ControlTemplate> in the resources section with the TargetType property set to a type, the <xref:System.Windows.Controls.ControlTemplate> does not get applied to that type automatically."},{"content":"Instead, you need to specify an <ph id=\"ph1\">`x:Key`</ph> and apply the template explicitly.","pos":[241,315],"source":" Instead, you need to specify an `x:Key` and apply the template explicitly."},{"content":"Also note that the TargetType property is required on a &lt;xref:System.Windows.Controls.ControlTemplate&gt; if the template definition contains a &lt;xref:System.Windows.Controls.ContentPresenter&gt;.","pos":[322,511],"source":"       Also note that the TargetType property is required on a <xref:System.Windows.Controls.ControlTemplate> if the template definition contains a <xref:System.Windows.Controls.ContentPresenter>."},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlAttributeUsage_TargetType\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id=\"ph1\">```   &lt;object  TargetType=\"typeName\"/&gt;   ```</ph>      <bpt id=\"p2\">&lt;a name=\"xamlValues_TargetType\"&gt;</bpt><ept id=\"p2\">&lt;/a&gt;</ept>    ## XAML Values    <bpt id=\"p3\">*</bpt>typeName<ept id=\"p3\">*</ept>    The type name of the class.","pos":[517,743],"source":"<a name=\"xamlAttributeUsage_TargetType\"></a>    ## XAML Attribute Usage      ```   <object  TargetType=\"typeName\"/>   ```      <a name=\"xamlValues_TargetType\"></a>    ## XAML Values    *typeName*    The type name of the class."},{"content":"To refer to the &lt;xref:System.Type&gt; name of the class, use the <bpt id=\"p1\">[</bpt>Markup Extensions and WPF XAML<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[744,878],"source":" To refer to the <xref:System.Type> name of the class, use the [Markup Extensions and WPF XAML](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[9864,9946],"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[10127,10326],"content":"The TargetType property must not be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the definition of the template has a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.ContentPresenter\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The TargetType property must not be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the definition of the template has a <xref href=\"System.Windows.Controls.ContentPresenter\"></xref>."},{"pos":[10421,10739],"content":"The specified types are not valid. The TargetType of a <xref href=\"System.Windows.Controls.ControlTemplate\"></xref> must be or inherit from a <xref href=\"System.Windows.Controls.Control\"></xref>, a <xref href=\"System.Windows.Controls.Page\"></xref>, or a <xref href=\"System.Windows.Navigation.PageFunctionBase\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified types are not valid.","pos":[0,34]},{"content":"The TargetType of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.ControlTemplate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> must be or inherit from a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.Control\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, a <bpt id=\"p3\">&lt;xref href=\"System.Windows.Controls.Page\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, or a <bpt id=\"p4\">&lt;xref href=\"System.Windows.Navigation.PageFunctionBase\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","pos":[35,318],"source":" The TargetType of a <xref href=\"System.Windows.Controls.ControlTemplate\"></xref> must be or inherit from a <xref href=\"System.Windows.Controls.Control\"></xref>, a <xref href=\"System.Windows.Controls.Page\"></xref>, or a <xref href=\"System.Windows.Navigation.PageFunctionBase\"></xref>."}]},{"pos":[11128,11282],"content":"Gets a collection of <bpt id=\"p1\">&lt;xref href=\"System.Windows.TriggerBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects that apply property changes or perform actions based on specified conditions.","needQuote":true,"needEscape":true,"source":"Gets a collection of <xref href=\"System.Windows.TriggerBase\"></xref> objects that apply property changes or perform actions based on specified conditions."},{"pos":[11295,11693],"content":"<bpt id=\"p1\">&lt;a name=\"xamlPropertyElementUsage_Triggers\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Property Element Usage      <ph id=\"ph1\">```   &lt;object&gt;     &lt;object.Triggers&gt;       oneOrMoreTriggers     &lt;/object.Triggers&gt;   &lt;/object&gt;   ```</ph>      <bpt id=\"p2\">&lt;a name=\"xamlValues_Triggers\"&gt;</bpt><ept id=\"p2\">&lt;/a&gt;</ept>    ## XAML Values    <bpt id=\"p3\">*</bpt>oneOrMoreTriggers<ept id=\"p3\">*</ept>    One or more &lt;xref:System.Windows.TriggerBase&gt; objects (usually these are a &lt;xref:System.Windows.Trigger&gt;).","needQuote":false,"needEscape":true,"extradata":"MT","source":"<a name=\"xamlPropertyElementUsage_Triggers\"></a>    ## XAML Property Element Usage      ```   <object>     <object.Triggers>       oneOrMoreTriggers     </object.Triggers>   </object>   ```      <a name=\"xamlValues_Triggers\"></a>    ## XAML Values    *oneOrMoreTriggers*    One or more <xref:System.Windows.TriggerBase> objects (usually these are a <xref:System.Windows.Trigger>)."},{"pos":[12488,12643],"content":"A collection of <xref href=\"System.Windows.TriggerBase\"></xref> objects. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of <bpt id=\"p1\">&lt;xref href=\"System.Windows.TriggerBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","pos":[0,72],"source":"A collection of <xref href=\"System.Windows.TriggerBase\"></xref> objects."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[73,155],"source":" The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[13304,13355],"content":"Checks the templated parent against a set of rules.","needQuote":true,"needEscape":true,"nodes":[{"content":"Checks the templated parent against a set of rules.","pos":[0,51]}]},{"pos":[13368,13810],"content":"The method uses the following rules:       1. The `templatedParent` cannot be of type <xref:System.Windows.FrameworkContentElement>.       2. The `templatedParent` cannot be of type <xref:System.Windows.FrameworkElement> that is not a <xref:System.Windows.Controls.Control>.       3. The `templatedParent` cannot be a <xref:System.Windows.Controls.Control> that is not associated with the <xref:System.Windows.Controls.ControlTemplate>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The method uses the following rules:       1.","pos":[0,45]},{"content":"The <ph id=\"ph1\">`templatedParent`</ph> cannot be of type &lt;xref:System.Windows.FrameworkContentElement&gt;.","pos":[46,132],"source":" The `templatedParent` cannot be of type <xref:System.Windows.FrameworkContentElement>."},{"content":"2.","pos":[139,141]},{"content":"The <ph id=\"ph1\">`templatedParent`</ph> cannot be of type &lt;xref:System.Windows.FrameworkElement&gt; that is not a &lt;xref:System.Windows.Controls.Control&gt;.","pos":[142,274],"source":" The `templatedParent` cannot be of type <xref:System.Windows.FrameworkElement> that is not a <xref:System.Windows.Controls.Control>."},{"content":"3.","pos":[281,283]},{"content":"The <ph id=\"ph1\">`templatedParent`</ph> cannot be a &lt;xref:System.Windows.Controls.Control&gt; that is not associated with the &lt;xref:System.Windows.Controls.ControlTemplate&gt;.","pos":[284,436],"source":" The `templatedParent` cannot be a <xref:System.Windows.Controls.Control> that is not associated with the <xref:System.Windows.Controls.ControlTemplate>."}]},{"pos":[14039,14079],"content":"The element this template is applied to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element this template is applied to.","pos":[0,40]}]},{"pos":[14273,14379],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">templatedParent</ph><ept id=\"p1\">&lt;/code&gt;</ept> must not be <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>templatedParent</code> must not be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[14474,14862],"content":"You must associate the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.ControlTemplate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.Control\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> by setting the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Controls.Control.Template%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> property before using the <bpt id=\"p3\">&lt;xref href=\"System.Windows.Controls.ControlTemplate\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> on the <bpt id=\"p4\">&lt;xref href=\"System.Windows.Controls.Control\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"You must associate the <xref href=\"System.Windows.Controls.ControlTemplate\"></xref> with a <xref href=\"System.Windows.Controls.Control\"></xref> by setting the &lt;xref:System.Windows.Controls.Control.Template%2A?displayProperty=fullName&gt; property before using the <xref href=\"System.Windows.Controls.ControlTemplate\"></xref> on the <xref href=\"System.Windows.Controls.Control\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Controls.ControlTemplate\n  id: ControlTemplate\n  children:\n  - System.Windows.Controls.ControlTemplate.#ctor\n  - System.Windows.Controls.ControlTemplate.#ctor(System.Type)\n  - System.Windows.Controls.ControlTemplate.TargetType\n  - System.Windows.Controls.ControlTemplate.Triggers\n  - System.Windows.Controls.ControlTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)\n  langs:\n  - csharp\n  name: ControlTemplate\n  nameWithType: ControlTemplate\n  fullName: System.Windows.Controls.ControlTemplate\n  type: Class\n  summary: Specifies the visual structure and behavioral aspects of a <xref href=\"System.Windows.Controls.Control\"></xref> that can be shared across multiple instances of the control.\n  remarks: \"The ControlTemplate allows you to specify the visual structure of a control. The control author can define the default ControlTemplate and the application author can override the ControlTemplate to reconstruct the visual structure of the control.  \\n  \\n Control templating is one of the many features offered by the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] styling and templating model. The styling and templating model provides you with such great flexibility that in many cases you do not need to write your own controls. If you are an application author that wants to change the visualization of your control or to replace the ControlTemplate of an existing control, see the [Styling and Templating](~/add/includes/ajax-current-ext-md.md) topic for examples and an in-depth discussion.  \\n  \\n If you are writing your own control, see \\\"Create a Custom Control\\\" in the [Control Authoring Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n A ControlTemplate is intended to be a self-contained unit of implementation detail that is invisible to outside users and objects, including styles. The only way to manipulate the content of the control template is from within the same control template.  \\n  \\n<a name=\\\"xamlObjectElementUsage_VisualTree\\\"></a>   \\n## XAML Property Element Usage  \\n  \\n```  \\n<ControlTemplate>  \\n  <VisualTreeRootNode > VisualTreeNodeContents  \\n  </VisualTreeRootNode >  \\n</ControlTemplate>  \\n```  \\n  \\n<a name=\\\"xamlValues_VisualTree\\\"></a>   \\n## XAML Values  \\n *ControlTemplate*  \\n Object element for ControlTemplate or a derived class.  \\n  \\n *VisualTreeRootNode*  \\n A single [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] element as the immediate child of the ControlTemplate (or a derived class). Templates must have a single root node. In order to generate a useful template, the element chosen as *VisualTreeRootNode* is expected to support a content model of its own, often a model that supports multiple child elements.  \\n  \\n *VisualTreeNodeContents*  \\n One or more elements that complete the intended template. If the element chosen as *VisualTreeRootNode* only supports a single child, then there can only be one element declared as *VisualTreeNodeContents*. It is also possible (though uncommon) to provide text content if the chosen *VisualTreeRootNode* supports a text content property.\"\n  example:\n  - \"The following shows a <xref:System.Windows.Controls.Button> <xref:System.Windows.Style> that sets the ControlTemplate of a <xref:System.Windows.Controls.Button>:  \\n  \\n [!code-xml[StylingIntroSample_snip#ButtonCT](~/add/codesnippet/xaml/t-system.windows.control_3_1.xaml)]  \\n  \\n When this gets applied, the <xref:System.Windows.Controls.Button> appears as an <xref:System.Windows.Shapes.Ellipse>:  \\n  \\n ![Button ControlTemplate sample](~/add/media/stylingintro-buttoncontroltemplate.png \\\"Button ControlTemplate sample\\\")  \\n  \\n When you set the <xref:System.Windows.Controls.Control.Template%2A> property of a <xref:System.Windows.Controls.Control> to a new ControlTemplate as in the above example, you are replacing the entire template. What the <xref:System.Windows.Controls.Button> looks like when it is in focus or pressed is all part of the default appearance of the button that you are replacing. Therefore, depending on your needs, you may want to put in your definition what your button should look like when it is pressed, and so on, as in the following example:  \\n  \\n [!code-xml[ControlTemplateExamples#1](~/add/codesnippet/xaml/controltemplateexamples/resources/button.xaml#1)]  \\n  \\n Note that this example references resources that are not shown here. For the complete sample, see [Styling with ControlTemplates Sample](http://go.microsoft.com/fwlink/?LinkID=160041). That sample provides examples of control templates for many controls and is the best way for you to get started with creating control templates.\"\n  syntax:\n    content: >-\n      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]\n\n      [System.Windows.Markup.DictionaryKeyProperty(\"TargetType\")]\n\n      public class ControlTemplate : System.Windows.FrameworkTemplate\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.FrameworkTemplate\n  implements: []\n  inheritedMembers:\n  - System.Windows.FrameworkTemplate.FindName(System.String,System.Windows.FrameworkElement)\n  - System.Windows.FrameworkTemplate.HasContent\n  - System.Windows.FrameworkTemplate.IsSealed\n  - System.Windows.FrameworkTemplate.LoadContent\n  - System.Windows.FrameworkTemplate.RegisterName(System.String,System.Object)\n  - System.Windows.FrameworkTemplate.Resources\n  - System.Windows.FrameworkTemplate.Seal\n  - System.Windows.FrameworkTemplate.ShouldSerializeResources(System.Windows.Markup.XamlDesignerSerializationManager)\n  - System.Windows.FrameworkTemplate.ShouldSerializeVisualTree\n  - System.Windows.FrameworkTemplate.System#Windows#Markup#INameScope#FindName(System.String)\n  - System.Windows.FrameworkTemplate.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)\n  - System.Windows.FrameworkTemplate.Template\n  - System.Windows.FrameworkTemplate.UnregisterName(System.String)\n  - System.Windows.FrameworkTemplate.VisualTree\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  platform:\n  - net462\n- uid: System.Windows.Controls.ControlTemplate.#ctor\n  id: '#ctor'\n  parent: System.Windows.Controls.ControlTemplate\n  langs:\n  - csharp\n  name: ControlTemplate()\n  nameWithType: ControlTemplate.ControlTemplate()\n  fullName: System.Windows.Controls.ControlTemplate.ControlTemplate()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Controls.ControlTemplate\"></xref> class.\n  syntax:\n    content: public ControlTemplate ();\n    parameters: []\n  overload: System.Windows.Controls.ControlTemplate.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ControlTemplate.#ctor(System.Type)\n  id: '#ctor(System.Type)'\n  parent: System.Windows.Controls.ControlTemplate\n  langs:\n  - csharp\n  name: ControlTemplate(Type)\n  nameWithType: ControlTemplate.ControlTemplate(Type)\n  fullName: System.Windows.Controls.ControlTemplate.ControlTemplate(Type)\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Controls.ControlTemplate\"></xref> class with the specified target type.\n  syntax:\n    content: public ControlTemplate (Type targetType);\n    parameters:\n    - id: targetType\n      type: System.Type\n      description: The type this template is intended for.\n  overload: System.Windows.Controls.ControlTemplate.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ControlTemplate.TargetType\n  id: TargetType\n  parent: System.Windows.Controls.ControlTemplate\n  langs:\n  - csharp\n  name: TargetType\n  nameWithType: ControlTemplate.TargetType\n  fullName: System.Windows.Controls.ControlTemplate.TargetType\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the type for which this <xref href=\"System.Windows.Controls.ControlTemplate\"></xref> is intended.\n  remarks: \"If you have a standalone <xref:System.Windows.Controls.ControlTemplate> in the resources section with the TargetType property set to a type, the <xref:System.Windows.Controls.ControlTemplate> does not get applied to that type automatically. Instead, you need to specify an `x:Key` and apply the template explicitly.  \\n  \\n Also note that the TargetType property is required on a <xref:System.Windows.Controls.ControlTemplate> if the template definition contains a <xref:System.Windows.Controls.ContentPresenter>.  \\n  \\n<a name=\\\"xamlAttributeUsage_TargetType\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object  TargetType=\\\"typeName\\\"/>  \\n```  \\n  \\n<a name=\\\"xamlValues_TargetType\\\"></a>   \\n## XAML Values  \\n *typeName*  \\n The type name of the class. To refer to the <xref:System.Type> name of the class, use the [Markup Extensions and WPF XAML](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following example demonstrates the use of this property:  \\n  \\n [!code-xml[ControlTemplateExamples#Label](~/add/codesnippet/xaml/controltemplateexamples/resources/label.xaml#label)]  \\n  \\n The above example uses the following resource:  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \\n  \\n For the complete sample, see [Styling with ControlTemplates Sample](http://go.microsoft.com/fwlink/?LinkID=160041).\"\n  syntax:\n    content: public Type TargetType { get; set; }\n    return:\n      type: System.Type\n      description: The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Windows.Controls.ControlTemplate.TargetType*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The TargetType property must not be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the definition of the template has a <xref href=\"System.Windows.Controls.ContentPresenter\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The specified types are not valid. The TargetType of a <xref href=\"System.Windows.Controls.ControlTemplate\"></xref> must be or inherit from a <xref href=\"System.Windows.Controls.Control\"></xref>, a <xref href=\"System.Windows.Controls.Page\"></xref>, or a <xref href=\"System.Windows.Navigation.PageFunctionBase\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Controls.ControlTemplate.Triggers\n  id: Triggers\n  parent: System.Windows.Controls.ControlTemplate\n  langs:\n  - csharp\n  name: Triggers\n  nameWithType: ControlTemplate.Triggers\n  fullName: System.Windows.Controls.ControlTemplate.Triggers\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets a collection of <xref href=\"System.Windows.TriggerBase\"></xref> objects that apply property changes or perform actions based on specified conditions.\n  remarks: \"<a name=\\\"xamlPropertyElementUsage_Triggers\\\"></a>   \\n## XAML Property Element Usage  \\n  \\n```  \\n<object>  \\n  <object.Triggers>  \\n    oneOrMoreTriggers  \\n  </object.Triggers>  \\n</object>  \\n```  \\n  \\n<a name=\\\"xamlValues_Triggers\\\"></a>   \\n## XAML Values  \\n *oneOrMoreTriggers*  \\n One or more <xref:System.Windows.TriggerBase> objects (usually these are a <xref:System.Windows.Trigger>).\"\n  example:\n  - \"The following example demonstrates the use of this property:  \\n  \\n [!code-xml[ControlTemplateExamples#ToolTip](~/add/codesnippet/xaml/controltemplateexamples/resources/tooltip.xaml#tooltip)]  \\n  \\n The above example uses the following resources:  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \\n  \\n For the complete sample, see [Styling with ControlTemplates Sample](http://go.microsoft.com/fwlink/?LinkID=160041).\"\n  syntax:\n    content: public System.Windows.TriggerCollection Triggers { get; }\n    return:\n      type: System.Windows.TriggerCollection\n      description: A collection of <xref href=\"System.Windows.TriggerBase\"></xref> objects. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Windows.Controls.ControlTemplate.Triggers*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.ControlTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)\n  id: ValidateTemplatedParent(System.Windows.FrameworkElement)\n  parent: System.Windows.Controls.ControlTemplate\n  langs:\n  - csharp\n  name: ValidateTemplatedParent(FrameworkElement)\n  nameWithType: ControlTemplate.ValidateTemplatedParent(FrameworkElement)\n  fullName: System.Windows.Controls.ControlTemplate.ValidateTemplatedParent(FrameworkElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Checks the templated parent against a set of rules.\n  remarks: \"The method uses the following rules:  \\n  \\n 1. The `templatedParent` cannot be of type <xref:System.Windows.FrameworkContentElement>.  \\n  \\n 2. The `templatedParent` cannot be of type <xref:System.Windows.FrameworkElement> that is not a <xref:System.Windows.Controls.Control>.  \\n  \\n 3. The `templatedParent` cannot be a <xref:System.Windows.Controls.Control> that is not associated with the <xref:System.Windows.Controls.ControlTemplate>.\"\n  syntax:\n    content: protected override void ValidateTemplatedParent (System.Windows.FrameworkElement templatedParent);\n    parameters:\n    - id: templatedParent\n      type: System.Windows.FrameworkElement\n      description: The element this template is applied to.\n  overload: System.Windows.Controls.ControlTemplate.ValidateTemplatedParent*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>templatedParent</code> must not be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: You must associate the <xref href=\"System.Windows.Controls.ControlTemplate\"></xref> with a <xref href=\"System.Windows.Controls.Control\"></xref> by setting the &lt;xref:System.Windows.Controls.Control.Template%2A?displayProperty=fullName&gt; property before using the <xref href=\"System.Windows.Controls.ControlTemplate\"></xref> on the <xref href=\"System.Windows.Controls.Control\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.FrameworkTemplate\n  isExternal: false\n  name: System.Windows.FrameworkTemplate\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Windows.Controls.ControlTemplate.#ctor\n  parent: System.Windows.Controls.ControlTemplate\n  isExternal: false\n  name: ControlTemplate()\n  nameWithType: ControlTemplate.ControlTemplate()\n  fullName: System.Windows.Controls.ControlTemplate.ControlTemplate()\n- uid: System.Windows.Controls.ControlTemplate.#ctor(System.Type)\n  parent: System.Windows.Controls.ControlTemplate\n  isExternal: false\n  name: ControlTemplate(Type)\n  nameWithType: ControlTemplate.ControlTemplate(Type)\n  fullName: System.Windows.Controls.ControlTemplate.ControlTemplate(Type)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Windows.Controls.ControlTemplate.TargetType\n  parent: System.Windows.Controls.ControlTemplate\n  isExternal: false\n  name: TargetType\n  nameWithType: ControlTemplate.TargetType\n  fullName: System.Windows.Controls.ControlTemplate.TargetType\n- uid: System.Windows.Controls.ControlTemplate.Triggers\n  parent: System.Windows.Controls.ControlTemplate\n  isExternal: false\n  name: Triggers\n  nameWithType: ControlTemplate.Triggers\n  fullName: System.Windows.Controls.ControlTemplate.Triggers\n- uid: System.Windows.TriggerCollection\n  parent: System.Windows\n  isExternal: false\n  name: TriggerCollection\n  nameWithType: TriggerCollection\n  fullName: System.Windows.TriggerCollection\n- uid: System.Windows.Controls.ControlTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)\n  parent: System.Windows.Controls.ControlTemplate\n  isExternal: false\n  name: ValidateTemplatedParent(FrameworkElement)\n  nameWithType: ControlTemplate.ValidateTemplatedParent(FrameworkElement)\n  fullName: System.Windows.Controls.ControlTemplate.ValidateTemplatedParent(FrameworkElement)\n- uid: System.Windows.FrameworkElement\n  parent: System.Windows\n  isExternal: false\n  name: FrameworkElement\n  nameWithType: FrameworkElement\n  fullName: System.Windows.FrameworkElement\n- uid: System.Windows.Controls.ControlTemplate.#ctor*\n  parent: System.Windows.Controls.ControlTemplate\n  isExternal: false\n  name: ControlTemplate\n  nameWithType: ControlTemplate.ControlTemplate\n- uid: System.Windows.Controls.ControlTemplate.TargetType*\n  parent: System.Windows.Controls.ControlTemplate\n  isExternal: false\n  name: TargetType\n  nameWithType: ControlTemplate.TargetType\n- uid: System.Windows.Controls.ControlTemplate.Triggers*\n  parent: System.Windows.Controls.ControlTemplate\n  isExternal: false\n  name: Triggers\n  nameWithType: ControlTemplate.Triggers\n- uid: System.Windows.Controls.ControlTemplate.ValidateTemplatedParent*\n  parent: System.Windows.Controls.ControlTemplate\n  isExternal: false\n  name: ValidateTemplatedParent\n  nameWithType: ControlTemplate.ValidateTemplatedParent\n"}