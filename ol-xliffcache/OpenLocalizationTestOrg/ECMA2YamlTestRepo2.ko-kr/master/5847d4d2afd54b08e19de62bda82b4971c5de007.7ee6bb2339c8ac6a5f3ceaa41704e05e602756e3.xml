{"nodes":[{"pos":[562,613],"content":"Provides operating-system specific feature queries.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides operating-system specific feature queries.","pos":[0,51]}]},{"pos":[626,1168],"content":"Use the `static` instance of this class provided in the <xref:System.Windows.Forms.OSFeature.Feature%2A> property to query for operating system features. You cannot create an instance of this class.       To determine the version of a feature, call the <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> method. To determine if a feature or a specific version is present, call the <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> method and specify the feature to look for with the feature identifiers provided in this class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the <ph id=\"ph1\">`static`</ph> instance of this class provided in the &lt;xref:System.Windows.Forms.OSFeature.Feature%2A&gt; property to query for operating system features.","pos":[0,153],"source":"Use the `static` instance of this class provided in the <xref:System.Windows.Forms.OSFeature.Feature%2A> property to query for operating system features."},{"content":"You cannot create an instance of this class.","pos":[154,198]},{"content":"To determine the version of a feature, call the &lt;xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A&gt; method.","pos":[205,319],"source":"       To determine the version of a feature, call the <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> method."},{"content":"To determine if a feature or a specific version is present, call the &lt;xref:System.Windows.Forms.FeatureSupport.IsPresent%2A&gt; method and specify the feature to look for with the feature identifiers provided in this class.","pos":[320,540],"source":" To determine if a feature or a specific version is present, call the <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> method and specify the feature to look for with the feature identifiers provided in this class."}]},{"pos":[3105,3197],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.OSFeature\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Forms.OSFeature\"></xref> class."},{"pos":[3209,3374],"content":"This class cannot be instantiated. To query for operating system features, use the `static` instance of <xref:System.Windows.Forms.OSFeature> provided in this class.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This class cannot be instantiated.","pos":[0,34]},{"content":"To query for operating system features, use the <ph id=\"ph1\">`static`</ph> instance of &lt;xref:System.Windows.Forms.OSFeature&gt; provided in this class.","pos":[35,165],"source":" To query for operating system features, use the `static` instance of <xref:System.Windows.Forms.OSFeature> provided in this class."}]},{"pos":[3854,4055],"content":"Gets a <xref uid=\"langword_csharp_static\" name=\"static\" href=\"\"></xref> instance of the <xref href=\"System.Windows.Forms.OSFeature\"></xref> class to use for feature queries. This property is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_static\" name=\"static\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance of the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.OSFeature\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> class to use for feature queries.","pos":[0,173],"source":"Gets a <xref uid=\"langword_csharp_static\" name=\"static\" href=\"\"></xref> instance of the <xref href=\"System.Windows.Forms.OSFeature\"></xref> class to use for feature queries."},{"content":"This property is read-only.","pos":[174,201]}]},{"pos":[4068,4523],"content":"Use this `static` property to query for operating system features. You cannot create an instance of this class.       To determine the version of a feature, call the <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> method. To determine if a feature or a specific version is present, call the <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> method and specify the feature to look for with the feature identifiers provided in this class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this <ph id=\"ph1\">`static`</ph> property to query for operating system features.","pos":[0,66],"source":"Use this `static` property to query for operating system features."},{"content":"You cannot create an instance of this class.","pos":[67,111]},{"content":"To determine the version of a feature, call the &lt;xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A&gt; method.","pos":[118,232],"source":"       To determine the version of a feature, call the <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> method."},{"content":"To determine if a feature or a specific version is present, call the &lt;xref:System.Windows.Forms.FeatureSupport.IsPresent%2A&gt; method and specify the feature to look for with the feature identifiers provided in this class.","pos":[233,453],"source":" To determine if a feature or a specific version is present, call the <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> method and specify the feature to look for with the feature identifiers provided in this class."}]},{"pos":[5402,5479],"content":"An instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.OSFeature\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"An instance of the <xref href=\"System.Windows.Forms.OSFeature\"></xref> class."},{"pos":[5997,6078],"content":"Retrieves the version of the specified feature currently available on the system.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the version of the specified feature currently available on the system.","pos":[0,81]}]},{"pos":[6090,6289],"content":"Use the &lt;xref:System.Windows.Forms.OSFeature.Feature%2A&gt; property, the <ph id=\"ph1\">`static`</ph> instance of &lt;xref:System.Windows.Forms.OSFeature&gt; provided in this class, to query for the version number of a feature.","needQuote":true,"needEscape":true,"extradata":"MT","source":"Use the <xref:System.Windows.Forms.OSFeature.Feature%2A> property, the `static` instance of <xref:System.Windows.Forms.OSFeature> provided in this class, to query for the version number of a feature."},{"pos":[7170,7346],"content":"The feature whose version is requested, either <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.OSFeature.LayeredWindows\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.OSFeature.Themes\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The feature whose version is requested, either <xref href=\"System.Windows.Forms.OSFeature.LayeredWindows\"></xref> or <xref href=\"System.Windows.Forms.OSFeature.Themes\"></xref>."},{"pos":[7405,7626],"content":"A &lt;xref:System.Version&gt; representing the version of the specified operating system feature currently available on the system; or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the feature cannot be found.","needQuote":true,"needEscape":true,"source":"A <xref:System.Version> representing the version of the specified operating system feature currently available on the system; or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the feature cannot be found."},{"pos":[8187,8286],"content":"Retrieves a value indicating whether the operating system supports the specified feature or metric.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves a value indicating whether the operating system supports the specified feature or metric.","pos":[0,99]}]},{"pos":[8299,9252],"content":"Typically, you use the IsPresent method to determine if the operating system supports the specific feature or metric identified by `enumValue`. Based upon the value returned from IsPresent, you would perform conditional actions in your code. For example, if calling this method with a parameter value of <xref:System.Windows.Forms.SystemParameter> returns `true`, you could create owner-drawn menus in your application in a flat style.       Accessing some system features or metrics can raise exceptions if they are not available on a specific operating system version. In this case, first use the corresponding <xref:System.Windows.Forms.SystemParameter> enumeration value, along with IsPresent, to determine if the metric is supported. For example, call IsPresent with <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A> before getting the <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=fullName> property value.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Typically, you use the IsPresent method to determine if the operating system supports the specific feature or metric identified by <ph id=\"ph1\">`enumValue`</ph>.","pos":[0,143],"source":"Typically, you use the IsPresent method to determine if the operating system supports the specific feature or metric identified by `enumValue`."},{"content":"Based upon the value returned from IsPresent, you would perform conditional actions in your code.","pos":[144,241]},{"content":"For example, if calling this method with a parameter value of &lt;xref:System.Windows.Forms.SystemParameter&gt; returns <ph id=\"ph1\">`true`</ph>, you could create owner-drawn menus in your application in a flat style.","pos":[242,435],"source":" For example, if calling this method with a parameter value of <xref:System.Windows.Forms.SystemParameter> returns `true`, you could create owner-drawn menus in your application in a flat style."},{"content":"Accessing some system features or metrics can raise exceptions if they are not available on a specific operating system version.","pos":[442,570]},{"content":"In this case, first use the corresponding &lt;xref:System.Windows.Forms.SystemParameter&gt; enumeration value, along with IsPresent, to determine if the metric is supported.","pos":[571,738],"source":" In this case, first use the corresponding <xref:System.Windows.Forms.SystemParameter> enumeration value, along with IsPresent, to determine if the metric is supported."},{"content":"For example, call IsPresent with &lt;xref:System.Windows.Forms.SystemInformation.CaretWidth%2A&gt; before getting the &lt;xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=fullName&gt; property value.","pos":[739,951],"source":" For example, call IsPresent with <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A> before getting the <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=fullName> property value."}]},{"pos":[10508,10607],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.SystemParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> representing the feature to search for.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.SystemParameter\"></xref> representing the feature to search for."},{"pos":[10666,10844],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the feature is available on the system; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the feature is available on the system; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11294,11369],"content":"Represents the layered, top-level windows feature. This field is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the layered, top-level windows feature. This field is read-only.","pos":[0,75],"nodes":[{"content":"Represents the layered, top-level windows feature.","pos":[0,50]},{"content":"This field is read-only.","pos":[51,75]}]}]},{"pos":[11382,12185],"content":"A layered window can be made transparent or translucent by the operating system. Support for layered windows was first introduced in Windows 2000. For more information, see the \"Layered Windows: A New Way to Use Translucency and Transparency Effects in Windows Applications\" in the Platform SDK documentation at http://msdn.microsoft.com.       To determine if the layered windows feature is installed, use the <xref:System.Windows.Forms.OSFeature.Feature%2A> property to call the base class method <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> with LayeredWindows as the feature to look for.       Alternatively, you can check to see if the feature is installed by calling the <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> method with LayeredWindows as the feature to find.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A layered window can be made transparent or translucent by the operating system. Support for layered windows was first introduced in Windows 2000. For more information, see the \"Layered Windows: A New Way to Use Translucency and Transparency Effects in Windows Applications\" in the Platform SDK documentation at http://msdn.microsoft.com.       To determine if the layered windows feature is installed, use the <xref:System.Windows.Forms.OSFeature.Feature%2A> property to call the base class method <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> with LayeredWindows as the feature to look for.       Alternatively, you can check to see if the feature is installed by calling the <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> method with LayeredWindows as the feature to find.","pos":[0,797],"nodes":[{"content":"A layered window can be made transparent or translucent by the operating system.","pos":[0,80]},{"content":"Support for layered windows was first introduced in Windows 2000.","pos":[81,146]},{"content":"For more information, see the \"Layered Windows: A New Way to Use Translucency and Transparency Effects in Windows Applications\" in the Platform SDK documentation at http://msdn.microsoft.com.","pos":[147,338]},{"content":"To determine if the layered windows feature is installed, use the &lt;xref:System.Windows.Forms.OSFeature.Feature%2A&gt; property to call the base class method &lt;xref:System.Windows.Forms.FeatureSupport.IsPresent%2A&gt; with LayeredWindows as the feature to look for.","pos":[345,602],"source":"       To determine if the layered windows feature is installed, use the <xref:System.Windows.Forms.OSFeature.Feature%2A> property to call the base class method <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> with LayeredWindows as the feature to look for."},{"content":"Alternatively, you can check to see if the feature is installed by calling the &lt;xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A&gt; method with LayeredWindows as the feature to find.","pos":[609,797],"source":"       Alternatively, you can check to see if the feature is installed by calling the <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> method with LayeredWindows as the feature to find."}]}]},{"pos":[13013,13025],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13381,13453],"content":"Represents the operating system themes feature. This field is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the operating system themes feature. This field is read-only.","pos":[0,72],"nodes":[{"content":"Represents the operating system themes feature.","pos":[0,47]},{"content":"This field is read-only.","pos":[48,72]}]}]},{"pos":[13466,14334],"content":"A theme is a collection of visual interface settings that include wallpaper, cursors, fonts, sounds, and icons first introduced in Microsoft Plus! for Windows 95. The .NET Framework does not directly support manipulating themes, although it does have extensive support for visual styles in the <xref:System.Windows.Forms.VisualStyles?displayProperty=fullName> namespace. For more information about Windows Themes, see the topics Themes and Visual Styles and Visual Styles Reference in the Win32 SDK.       To determine if the themes feature is installed, call the base class method <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> with Themes as the feature to look for.       Alternatively, you can check to see if the feature is installed by calling the <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> method with Themes as the feature to find.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A theme is a collection of visual interface settings that include wallpaper, cursors, fonts, sounds, and icons first introduced in Microsoft Plus! for Windows 95. The .NET Framework does not directly support manipulating themes, although it does have extensive support for visual styles in the <xref:System.Windows.Forms.VisualStyles?displayProperty=fullName> namespace. For more information about Windows Themes, see the topics Themes and Visual Styles and Visual Styles Reference in the Win32 SDK.       To determine if the themes feature is installed, call the base class method <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> with Themes as the feature to look for.       Alternatively, you can check to see if the feature is installed by calling the <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> method with Themes as the feature to find.","pos":[0,864],"nodes":[{"content":"A theme is a collection of visual interface settings that include wallpaper, cursors, fonts, sounds, and icons first introduced in Microsoft Plus!","pos":[0,146]},{"content":"for Windows 95.","pos":[147,162]},{"content":"The .NET Framework does not directly support manipulating themes, although it does have extensive support for visual styles in the &lt;xref:System.Windows.Forms.VisualStyles?displayProperty=fullName&gt; namespace.","pos":[163,370],"source":" The .NET Framework does not directly support manipulating themes, although it does have extensive support for visual styles in the <xref:System.Windows.Forms.VisualStyles?displayProperty=fullName> namespace."},{"content":"For more information about Windows Themes, see the topics Themes and Visual Styles and Visual Styles Reference in the Win32 SDK.","pos":[371,499]},{"content":"To determine if the themes feature is installed, call the base class method &lt;xref:System.Windows.Forms.FeatureSupport.IsPresent%2A&gt; with Themes as the feature to look for.","pos":[506,677],"source":"       To determine if the themes feature is installed, call the base class method <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> with Themes as the feature to look for."},{"content":"Alternatively, you can check to see if the feature is installed by calling the &lt;xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A&gt; method with Themes as the feature to find.","pos":[684,864],"source":"       Alternatively, you can check to see if the feature is installed by calling the <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> method with Themes as the feature to find."}]}]},{"pos":[14454,14466],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.OSFeature\n  id: OSFeature\n  children:\n  - System.Windows.Forms.OSFeature.#ctor\n  - System.Windows.Forms.OSFeature.Feature\n  - System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)\n  - System.Windows.Forms.OSFeature.IsPresent(System.Windows.Forms.SystemParameter)\n  - System.Windows.Forms.OSFeature.LayeredWindows\n  - System.Windows.Forms.OSFeature.Themes\n  langs:\n  - csharp\n  name: OSFeature\n  nameWithType: OSFeature\n  fullName: System.Windows.Forms.OSFeature\n  type: Class\n  summary: Provides operating-system specific feature queries.\n  remarks: \"Use the `static` instance of this class provided in the <xref:System.Windows.Forms.OSFeature.Feature%2A> property to query for operating system features. You cannot create an instance of this class.  \\n  \\n To determine the version of a feature, call the <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> method. To determine if a feature or a specific version is present, call the <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> method and specify the feature to look for with the feature identifiers provided in this class.\"\n  example:\n  - \"The following example uses OSFeature to query the operating system to determine if the <xref:System.Windows.Forms.OSFeature.LayeredWindows> feature is installed. The example presents two different ways of checking to see whether the feature is present. In the first method, `myVersion` is checked to see if it is `null`. If the version is `null`, the feature is not installed. In the second method, the example calls the base class method <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> to see if the feature is installed. The results are displayed in a text box.  \\n  \\n This code assumes `textBox1` has been created and placed on a form.  \\n  \\n [!code-cs[Classic OSFeature Example#1](~/add/codesnippet/csharp/t-system.windows.forms.o_0_1.cs)]\\n [!code-vb[Classic OSFeature Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.o_0_1.vb)]\\n [!code-cpp[Classic OSFeature Example#1](~/add/codesnippet/cpp/t-system.windows.forms.o_0_1.cpp)]\"\n  syntax:\n    content: 'public class OSFeature : System.Windows.Forms.FeatureSupport'\n  inheritance:\n  - System.Object\n  - System.Windows.Forms.FeatureSupport\n  implements: []\n  inheritedMembers:\n  - System.Windows.Forms.FeatureSupport.GetVersionPresent(System.String,System.String)\n  - System.Windows.Forms.FeatureSupport.IsPresent(System.Object)\n  - System.Windows.Forms.FeatureSupport.IsPresent(System.Object,System.Version)\n  - System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)\n  - System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String,System.Version)\n  platform:\n  - net462\n- uid: System.Windows.Forms.OSFeature.#ctor\n  id: '#ctor'\n  parent: System.Windows.Forms.OSFeature\n  langs:\n  - csharp\n  name: OSFeature()\n  nameWithType: OSFeature.OSFeature()\n  fullName: System.Windows.Forms.OSFeature.OSFeature()\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Forms.OSFeature\"></xref> class.\n  remarks: This class cannot be instantiated. To query for operating system features, use the `static` instance of <xref:System.Windows.Forms.OSFeature> provided in this class.\n  syntax:\n    content: protected OSFeature ();\n    parameters: []\n  overload: System.Windows.Forms.OSFeature.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.OSFeature.Feature\n  id: Feature\n  parent: System.Windows.Forms.OSFeature\n  langs:\n  - csharp\n  name: Feature\n  nameWithType: OSFeature.Feature\n  fullName: System.Windows.Forms.OSFeature.Feature\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a <xref uid=\"langword_csharp_static\" name=\"static\" href=\"\"></xref> instance of the <xref href=\"System.Windows.Forms.OSFeature\"></xref> class to use for feature queries. This property is read-only.\n  remarks: \"Use this `static` property to query for operating system features. You cannot create an instance of this class.  \\n  \\n To determine the version of a feature, call the <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> method. To determine if a feature or a specific version is present, call the <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> method and specify the feature to look for with the feature identifiers provided in this class.\"\n  example:\n  - \"The following example queries <xref:System.Windows.Forms.OSFeature> for the <xref:System.Windows.Forms.OSFeature.LayeredWindows> feature. The version is checked to see if it is `null`, to determine whether the feature is present. The result is displayed in a text box. This code assumes `textBox1` has been created and placed on a form.  \\n  \\n [!code-cpp[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/cpp/p-system.windows.forms.o_3_1.cpp)]\\n [!code-cs[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/csharp/p-system.windows.forms.o_3_1.cs)]\\n [!code-vb[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.o_3_1.vb)]\"\n  syntax:\n    content: public static System.Windows.Forms.OSFeature Feature { get; }\n    return:\n      type: System.Windows.Forms.OSFeature\n      description: An instance of the <xref href=\"System.Windows.Forms.OSFeature\"></xref> class.\n  overload: System.Windows.Forms.OSFeature.Feature*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)\n  id: GetVersionPresent(System.Object)\n  parent: System.Windows.Forms.OSFeature\n  langs:\n  - csharp\n  name: GetVersionPresent(Object)\n  nameWithType: OSFeature.GetVersionPresent(Object)\n  fullName: System.Windows.Forms.OSFeature.GetVersionPresent(Object)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Retrieves the version of the specified feature currently available on the system.\n  remarks: Use the <xref:System.Windows.Forms.OSFeature.Feature%2A> property, the `static` instance of <xref:System.Windows.Forms.OSFeature> provided in this class, to query for the version number of a feature.\n  example:\n  - \"The following example queries <xref:System.Windows.Forms.OSFeature> for the <xref:System.Windows.Forms.OSFeature.LayeredWindows> feature. The version is checked to see if it is `null`, to determine whether the feature is present. The result is displayed in a text box. This code assumes `textBox1` has been created and placed on a form.  \\n  \\n [!code-cpp[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/cpp/m-system.windows.forms.o_2_1.cpp)]\\n [!code-cs[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/csharp/m-system.windows.forms.o_2_1.cs)]\\n [!code-vb[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.o_2_1.vb)]\"\n  syntax:\n    content: public override Version GetVersionPresent (object feature);\n    parameters:\n    - id: feature\n      type: System.Object\n      description: The feature whose version is requested, either <xref href=\"System.Windows.Forms.OSFeature.LayeredWindows\"></xref> or <xref href=\"System.Windows.Forms.OSFeature.Themes\"></xref>.\n    return:\n      type: System.Version\n      description: A <xref:System.Version> representing the version of the specified operating system feature currently available on the system; or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the feature cannot be found.\n  overload: System.Windows.Forms.OSFeature.GetVersionPresent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.OSFeature.IsPresent(System.Windows.Forms.SystemParameter)\n  id: IsPresent(System.Windows.Forms.SystemParameter)\n  parent: System.Windows.Forms.OSFeature\n  langs:\n  - csharp\n  name: IsPresent(SystemParameter)\n  nameWithType: OSFeature.IsPresent(SystemParameter)\n  fullName: System.Windows.Forms.OSFeature.IsPresent(SystemParameter)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Retrieves a value indicating whether the operating system supports the specified feature or metric.\n  remarks: \"Typically, you use the IsPresent method to determine if the operating system supports the specific feature or metric identified by `enumValue`. Based upon the value returned from IsPresent, you would perform conditional actions in your code. For example, if calling this method with a parameter value of <xref:System.Windows.Forms.SystemParameter> returns `true`, you could create owner-drawn menus in your application in a flat style.  \\n  \\n Accessing some system features or metrics can raise exceptions if they are not available on a specific operating system version. In this case, first use the corresponding <xref:System.Windows.Forms.SystemParameter> enumeration value, along with IsPresent, to determine if the metric is supported. For example, call IsPresent with <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A> before getting the <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=fullName> property value.\"\n  example:\n  - \"The following code example demonstrates how to use the IsPresent method with the <xref:System.Windows.Forms.SystemParameter> enumeration. The example determines if the operating system supports the `CaretWidth` metric before calling the <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=fullName> property.  \\n  \\n [!code-cpp[System.Windows.Forms.OSFeature.IsPresent#1](~/add/codesnippet/cpp/m-system.windows.forms.o_0_1.cpp)]\\n [!code-cs[System.Windows.Forms.OSFeature.IsPresent#1](~/add/codesnippet/csharp/m-system.windows.forms.o_0_1.cs)]\\n [!code-vb[System.Windows.Forms.OSFeature.IsPresent#1](~/add/codesnippet/visualbasic/m-system.windows.forms.o_0_1.vb)]  \\n[!code-cpp[System.Windows.Forms.OSFeature.IsPresent#2](~/add/codesnippet/cpp/m-system.windows.forms.o_0_2.cpp)]\\n[!code-cs[System.Windows.Forms.OSFeature.IsPresent#2](~/add/codesnippet/csharp/m-system.windows.forms.o_0_2.cs)]\\n[!code-vb[System.Windows.Forms.OSFeature.IsPresent#2](~/add/codesnippet/visualbasic/m-system.windows.forms.o_0_2.vb)]\"\n  syntax:\n    content: public static bool IsPresent (System.Windows.Forms.SystemParameter enumVal);\n    parameters:\n    - id: enumVal\n      type: System.Windows.Forms.SystemParameter\n      description: A <xref href=\"System.Windows.Forms.SystemParameter\"></xref> representing the feature to search for.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the feature is available on the system; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.OSFeature.IsPresent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.OSFeature.LayeredWindows\n  id: LayeredWindows\n  parent: System.Windows.Forms.OSFeature\n  langs:\n  - csharp\n  name: LayeredWindows\n  nameWithType: OSFeature.LayeredWindows\n  fullName: System.Windows.Forms.OSFeature.LayeredWindows\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Represents the layered, top-level windows feature. This field is read-only.\n  remarks: \"A layered window can be made transparent or translucent by the operating system. Support for layered windows was first introduced in Windows 2000. For more information, see the \\\"Layered Windows: A New Way to Use Translucency and Transparency Effects in Windows Applications\\\" in the Platform SDK documentation at http://msdn.microsoft.com.  \\n  \\n To determine if the layered windows feature is installed, use the <xref:System.Windows.Forms.OSFeature.Feature%2A> property to call the base class method <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> with LayeredWindows as the feature to look for.  \\n  \\n Alternatively, you can check to see if the feature is installed by calling the <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> method with LayeredWindows as the feature to find.\"\n  example:\n  - \"The following example determines whether the current system supports layered windows. The base class method <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> is called with LayeredWindows as the feature to look for. The result is displayed in a text box. This code assumes `textBox1` has been instantiated and placed on a form.  \\n  \\n [!code-vb[Classic OSFeature.LayeredWindows Example#1](~/add/codesnippet/visualbasic/f-system.windows.forms.o_1.vb)]\\n [!code-cpp[Classic OSFeature.LayeredWindows Example#1](~/add/codesnippet/cpp/f-system.windows.forms.o_1.cpp)]\\n [!code-cs[Classic OSFeature.LayeredWindows Example#1](~/add/codesnippet/csharp/f-system.windows.forms.o_1.cs)]\"\n  syntax:\n    content: public static readonly object LayeredWindows;\n    return:\n      type: System.Object\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.OSFeature.Themes\n  id: Themes\n  parent: System.Windows.Forms.OSFeature\n  langs:\n  - csharp\n  name: Themes\n  nameWithType: OSFeature.Themes\n  fullName: System.Windows.Forms.OSFeature.Themes\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Represents the operating system themes feature. This field is read-only.\n  remarks: \"A theme is a collection of visual interface settings that include wallpaper, cursors, fonts, sounds, and icons first introduced in Microsoft Plus! for Windows 95. The .NET Framework does not directly support manipulating themes, although it does have extensive support for visual styles in the <xref:System.Windows.Forms.VisualStyles?displayProperty=fullName> namespace. For more information about Windows Themes, see the topics Themes and Visual Styles and Visual Styles Reference in the Win32 SDK.  \\n  \\n To determine if the themes feature is installed, call the base class method <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> with Themes as the feature to look for.  \\n  \\n Alternatively, you can check to see if the feature is installed by calling the <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> method with Themes as the feature to find.\"\n  syntax:\n    content: public static readonly object Themes;\n    return:\n      type: System.Object\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Forms.FeatureSupport\n  isExternal: false\n  name: System.Windows.Forms.FeatureSupport\n- uid: System.Windows.Forms.OSFeature.#ctor\n  parent: System.Windows.Forms.OSFeature\n  isExternal: false\n  name: OSFeature()\n  nameWithType: OSFeature.OSFeature()\n  fullName: System.Windows.Forms.OSFeature.OSFeature()\n- uid: System.Windows.Forms.OSFeature.Feature\n  parent: System.Windows.Forms.OSFeature\n  isExternal: false\n  name: Feature\n  nameWithType: OSFeature.Feature\n  fullName: System.Windows.Forms.OSFeature.Feature\n- uid: System.Windows.Forms.OSFeature\n  parent: System.Windows.Forms\n  isExternal: false\n  name: OSFeature\n  nameWithType: OSFeature\n  fullName: System.Windows.Forms.OSFeature\n- uid: System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)\n  parent: System.Windows.Forms.OSFeature\n  isExternal: false\n  name: GetVersionPresent(Object)\n  nameWithType: OSFeature.GetVersionPresent(Object)\n  fullName: System.Windows.Forms.OSFeature.GetVersionPresent(Object)\n- uid: System.Version\n  parent: System\n  isExternal: true\n  name: Version\n  nameWithType: Version\n  fullName: System.Version\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Forms.OSFeature.IsPresent(System.Windows.Forms.SystemParameter)\n  parent: System.Windows.Forms.OSFeature\n  isExternal: false\n  name: IsPresent(SystemParameter)\n  nameWithType: OSFeature.IsPresent(SystemParameter)\n  fullName: System.Windows.Forms.OSFeature.IsPresent(SystemParameter)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Forms.SystemParameter\n  parent: System.Windows.Forms\n  isExternal: false\n  name: SystemParameter\n  nameWithType: SystemParameter\n  fullName: System.Windows.Forms.SystemParameter\n- uid: System.Windows.Forms.OSFeature.LayeredWindows\n  parent: System.Windows.Forms.OSFeature\n  isExternal: false\n  name: LayeredWindows\n  nameWithType: OSFeature.LayeredWindows\n  fullName: System.Windows.Forms.OSFeature.LayeredWindows\n- uid: System.Windows.Forms.OSFeature.Themes\n  parent: System.Windows.Forms.OSFeature\n  isExternal: false\n  name: Themes\n  nameWithType: OSFeature.Themes\n  fullName: System.Windows.Forms.OSFeature.Themes\n- uid: System.Windows.Forms.OSFeature.#ctor*\n  parent: System.Windows.Forms.OSFeature\n  isExternal: false\n  name: OSFeature\n  nameWithType: OSFeature.OSFeature\n- uid: System.Windows.Forms.OSFeature.Feature*\n  parent: System.Windows.Forms.OSFeature\n  isExternal: false\n  name: Feature\n  nameWithType: OSFeature.Feature\n- uid: System.Windows.Forms.OSFeature.GetVersionPresent*\n  parent: System.Windows.Forms.OSFeature\n  isExternal: false\n  name: GetVersionPresent\n  nameWithType: OSFeature.GetVersionPresent\n- uid: System.Windows.Forms.OSFeature.IsPresent*\n  parent: System.Windows.Forms.OSFeature\n  isExternal: false\n  name: IsPresent\n  nameWithType: OSFeature.IsPresent\n"}