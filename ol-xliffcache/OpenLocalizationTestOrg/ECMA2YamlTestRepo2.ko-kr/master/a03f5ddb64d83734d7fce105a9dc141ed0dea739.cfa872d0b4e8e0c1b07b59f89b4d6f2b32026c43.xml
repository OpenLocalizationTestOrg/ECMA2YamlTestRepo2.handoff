{"nodes":[{"pos":[1224,1321],"content":"Propagates the current behavior in the expression to child nodes. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Propagates the current behavior in the expression to child nodes. This class cannot be inherited.","pos":[0,97],"nodes":[{"content":"Propagates the current behavior in the expression to child nodes.","pos":[0,65]},{"content":"This class cannot be inherited.","pos":[66,97]}]}]},{"pos":[1333,1460],"content":"This class is used by all <xref:System.Workflow.Activities.Rules.IRuleExpression> methods to propagate behavior to child nodes.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This class is used by all &lt;xref:System.Workflow.Activities.Rules.IRuleExpression&gt; methods to propagate behavior to child nodes.","pos":[0,127],"source":"This class is used by all <xref:System.Workflow.Activities.Rules.IRuleExpression> methods to propagate behavior to child nodes."}]},{"pos":[2570,2738],"content":"Identifies the fields and properties used by an expression and adds these as symbols to the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleAnalysis\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Identifies the fields and properties used by an expression and adds these as symbols to the <xref href=\"System.Workflow.Activities.Rules.RuleAnalysis\"></xref> instance."},{"pos":[3097,3272],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleAnalysis\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance that stores symbols representing the properties and fields used by rule conditions and actions.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.Activities.Rules.RuleAnalysis\"></xref> instance that stores symbols representing the properties and fields used by rule conditions and actions."},{"pos":[3355,3385],"content":"The expression being executed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The expression being executed.","pos":[0,30]}]},{"pos":[3449,3771],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if fields and properties read by a <bpt id=\"p2\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleAction\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> are to be added to <bpt id=\"p3\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleAnalysis\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if fields and properties read by a <xref href=\"System.Workflow.Activities.Rules.RuleAction\"></xref> are to be added to <xref href=\"System.Workflow.Activities.Rules.RuleAnalysis\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[3838,4163],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if fields and properties written by a <bpt id=\"p2\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleAction\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> are to be added to <bpt id=\"p3\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleAnalysis\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if fields and properties written by a <xref href=\"System.Workflow.Activities.Rules.RuleAction\"></xref> are to be added to <xref href=\"System.Workflow.Activities.Rules.RuleAnalysis\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[4266,4326],"content":"The path of a field or property determined up to this point.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path of a field or property determined up to this point.","pos":[0,60]}]},{"pos":[4523,4650],"content":"<ph id=\"ph1\">&lt;code&gt;analysis&lt;/code&gt;</ph> is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"<code>analysis</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[5193,5298],"content":"Creates a deep copy of the child nodes of the current <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates a deep copy of the child nodes of the current <xref href=\"System.CodeDom.CodeExpression\"></xref>."},{"pos":[5530,5572],"content":"The expression that the clone is based on.","needQuote":true,"needEscape":true,"nodes":[{"content":"The expression that the clone is based on.","pos":[0,42]}]},{"pos":[5646,5734],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is identical to this instance.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.CodeExpression\"></xref> that is identical to this instance."},{"pos":[6586,6648],"content":"Decompiles the child nodes of the expression into string form.","needQuote":true,"needEscape":true,"nodes":[{"content":"Decompiles the child nodes of the expression into string form.","pos":[0,62]}]},{"pos":[6931,7015],"content":"The <xref:System.Text.StringBuilder> that contains the mutable string of characters.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Text.StringBuilder&gt; that contains the mutable string of characters.","pos":[0,84],"source":"The <xref:System.Text.StringBuilder> that contains the mutable string of characters."}]},{"pos":[7098,7161],"content":"The current <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The current <xref href=\"System.CodeDom.CodeExpression\"></xref>."},{"pos":[7250,7312],"content":"The parent <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The parent <xref href=\"System.CodeDom.CodeExpression\"></xref>."},{"pos":[8100,8151],"content":"Evaluates the expression and all child expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Evaluates the expression and all child expressions.","pos":[0,51]}]},{"pos":[8468,8566],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleExecution\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to execute the expression.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.Activities.Rules.RuleExecution\"></xref> to execute the expression."},{"pos":[8649,8716],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to evaluate.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.CodeDom.CodeExpression\"></xref> to evaluate."},{"pos":[8814,8948],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleExpressionResult\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that indicates the result of the expression evaluation.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.Activities.Rules.RuleExpressionResult\"></xref> that indicates the result of the expression evaluation."},{"pos":[9141,9269],"content":"<ph id=\"ph1\">&lt;code&gt;execution&lt;/code&gt;</ph> is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"<code>execution</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[9917,10023],"content":"Compares the current expression and child nodes to another expression to determine whether they are equal.","needQuote":true,"needEscape":true,"nodes":[{"content":"Compares the current expression and child nodes to another expression to determine whether they are equal.","pos":[0,106]}]},{"pos":[10272,10351],"content":"The first <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in the comparison.","needQuote":true,"needEscape":true,"source":"The first <xref href=\"System.CodeDom.CodeExpression\"></xref> in the comparison."},{"pos":[10440,10520],"content":"The second <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in the comparison.","needQuote":true,"needEscape":true,"source":"The second <xref href=\"System.CodeDom.CodeExpression\"></xref> in the comparison."},{"pos":[10579,10744],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the expressions are equal; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the expressions are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11587,11675],"content":"Verifies that the expression and child nodes are configured correctly and has no errors.","needQuote":true,"needEscape":true,"nodes":[{"content":"Verifies that the expression and child nodes are configured correctly and has no errors.","pos":[0,88]}]},{"pos":[12010,12116],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleValidation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to manage the validation process.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.Activities.Rules.RuleValidation\"></xref> to manage the validation process."},{"pos":[12199,12266],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to evaluate.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.CodeDom.CodeExpression\"></xref> to evaluate."},{"pos":[12333,12656],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if fields and properties written by a <bpt id=\"p2\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleAction\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> are stored in by <bpt id=\"p3\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleAnalysis\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if fields and properties written by a <xref href=\"System.Workflow.Activities.Rules.RuleAction\"></xref> are stored in by <xref href=\"System.Workflow.Activities.Rules.RuleAnalysis\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12752,12888],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleExpressionInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the <bpt id=\"p2\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.Activities.Rules.RuleExpressionInfo\"></xref> for the <xref href=\"System.CodeDom.CodeExpression\"></xref>."},{"pos":[13081,13210],"content":"<ph id=\"ph1\">&lt;code&gt;validation&lt;/code&gt;</ph> is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"<code>validation</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[13321,13555],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">expression</ph><ept id=\"p1\">&lt;/code&gt;</ept> is null and the errors collection on the <bpt id=\"p2\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleValidation\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object is a null reference (<bpt id=\"p3\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>).","needQuote":true,"needEscape":true,"source":"The <code>expression</code> is null and the errors collection on the <xref href=\"System.Workflow.Activities.Rules.RuleValidation\"></xref> object is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref>)."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.Activities.Rules.RuleExpressionWalker\n  id: RuleExpressionWalker\n  children:\n  - System.Workflow.Activities.Rules.RuleExpressionWalker.AnalyzeUsage(System.Workflow.Activities.Rules.RuleAnalysis,System.CodeDom.CodeExpression,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)\n  - System.Workflow.Activities.Rules.RuleExpressionWalker.Clone(System.CodeDom.CodeExpression)\n  - System.Workflow.Activities.Rules.RuleExpressionWalker.Decompile(System.Text.StringBuilder,System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)\n  - System.Workflow.Activities.Rules.RuleExpressionWalker.Evaluate(System.Workflow.Activities.Rules.RuleExecution,System.CodeDom.CodeExpression)\n  - System.Workflow.Activities.Rules.RuleExpressionWalker.Match(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)\n  - System.Workflow.Activities.Rules.RuleExpressionWalker.Validate(System.Workflow.Activities.Rules.RuleValidation,System.CodeDom.CodeExpression,System.Boolean)\n  langs:\n  - csharp\n  name: RuleExpressionWalker\n  nameWithType: RuleExpressionWalker\n  fullName: System.Workflow.Activities.Rules.RuleExpressionWalker\n  type: Class\n  summary: Propagates the current behavior in the expression to child nodes. This class cannot be inherited.\n  remarks: This class is used by all <xref:System.Workflow.Activities.Rules.IRuleExpression> methods to propagate behavior to child nodes.\n  syntax:\n    content: public static class RuleExpressionWalker\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.AnalyzeUsage(System.Workflow.Activities.Rules.RuleAnalysis,System.CodeDom.CodeExpression,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)\n  id: AnalyzeUsage(System.Workflow.Activities.Rules.RuleAnalysis,System.CodeDom.CodeExpression,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)\n  parent: System.Workflow.Activities.Rules.RuleExpressionWalker\n  langs:\n  - csharp\n  name: AnalyzeUsage(RuleAnalysis,CodeExpression,Boolean,Boolean,RulePathQualifier)\n  nameWithType: RuleExpressionWalker.AnalyzeUsage(RuleAnalysis,CodeExpression,Boolean,Boolean,RulePathQualifier)\n  fullName: System.Workflow.Activities.Rules.RuleExpressionWalker.AnalyzeUsage(RuleAnalysis,CodeExpression,Boolean,Boolean,RulePathQualifier)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: Identifies the fields and properties used by an expression and adds these as symbols to the <xref href=\"System.Workflow.Activities.Rules.RuleAnalysis\"></xref> instance.\n  syntax:\n    content: public static void AnalyzeUsage (System.Workflow.Activities.Rules.RuleAnalysis analysis, System.CodeDom.CodeExpression expression, bool isRead, bool isWritten, System.Workflow.Activities.Rules.RulePathQualifier qualifier);\n    parameters:\n    - id: analysis\n      type: System.Workflow.Activities.Rules.RuleAnalysis\n      description: The <xref href=\"System.Workflow.Activities.Rules.RuleAnalysis\"></xref> instance that stores symbols representing the properties and fields used by rule conditions and actions.\n    - id: expression\n      type: System.CodeDom.CodeExpression\n      description: The expression being executed.\n    - id: isRead\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if fields and properties read by a <xref href=\"System.Workflow.Activities.Rules.RuleAction\"></xref> are to be added to <xref href=\"System.Workflow.Activities.Rules.RuleAnalysis\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: isWritten\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if fields and properties written by a <xref href=\"System.Workflow.Activities.Rules.RuleAction\"></xref> are to be added to <xref href=\"System.Workflow.Activities.Rules.RuleAnalysis\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: qualifier\n      type: System.Workflow.Activities.Rules.RulePathQualifier\n      description: The path of a field or property determined up to this point.\n  overload: System.Workflow.Activities.Rules.RuleExpressionWalker.AnalyzeUsage*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>analysis</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  platform:\n  - net462\n- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Clone(System.CodeDom.CodeExpression)\n  id: Clone(System.CodeDom.CodeExpression)\n  parent: System.Workflow.Activities.Rules.RuleExpressionWalker\n  langs:\n  - csharp\n  name: Clone(CodeExpression)\n  nameWithType: RuleExpressionWalker.Clone(CodeExpression)\n  fullName: System.Workflow.Activities.Rules.RuleExpressionWalker.Clone(CodeExpression)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: Creates a deep copy of the child nodes of the current <xref href=\"System.CodeDom.CodeExpression\"></xref>.\n  syntax:\n    content: public static System.CodeDom.CodeExpression Clone (System.CodeDom.CodeExpression originalExpression);\n    parameters:\n    - id: originalExpression\n      type: System.CodeDom.CodeExpression\n      description: The expression that the clone is based on.\n    return:\n      type: System.CodeDom.CodeExpression\n      description: A <xref href=\"System.CodeDom.CodeExpression\"></xref> that is identical to this instance.\n  overload: System.Workflow.Activities.Rules.RuleExpressionWalker.Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Decompile(System.Text.StringBuilder,System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)\n  id: Decompile(System.Text.StringBuilder,System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)\n  parent: System.Workflow.Activities.Rules.RuleExpressionWalker\n  langs:\n  - csharp\n  name: Decompile(StringBuilder,CodeExpression,CodeExpression)\n  nameWithType: RuleExpressionWalker.Decompile(StringBuilder,CodeExpression,CodeExpression)\n  fullName: System.Workflow.Activities.Rules.RuleExpressionWalker.Decompile(StringBuilder,CodeExpression,CodeExpression)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: Decompiles the child nodes of the expression into string form.\n  syntax:\n    content: public static void Decompile (System.Text.StringBuilder stringBuilder, System.CodeDom.CodeExpression expression, System.CodeDom.CodeExpression parentExpression);\n    parameters:\n    - id: stringBuilder\n      type: System.Text.StringBuilder\n      description: The <xref:System.Text.StringBuilder> that contains the mutable string of characters.\n    - id: expression\n      type: System.CodeDom.CodeExpression\n      description: The current <xref href=\"System.CodeDom.CodeExpression\"></xref>.\n    - id: parentExpression\n      type: System.CodeDom.CodeExpression\n      description: The parent <xref href=\"System.CodeDom.CodeExpression\"></xref>.\n  overload: System.Workflow.Activities.Rules.RuleExpressionWalker.Decompile*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Evaluate(System.Workflow.Activities.Rules.RuleExecution,System.CodeDom.CodeExpression)\n  id: Evaluate(System.Workflow.Activities.Rules.RuleExecution,System.CodeDom.CodeExpression)\n  parent: System.Workflow.Activities.Rules.RuleExpressionWalker\n  langs:\n  - csharp\n  name: Evaluate(RuleExecution,CodeExpression)\n  nameWithType: RuleExpressionWalker.Evaluate(RuleExecution,CodeExpression)\n  fullName: System.Workflow.Activities.Rules.RuleExpressionWalker.Evaluate(RuleExecution,CodeExpression)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: Evaluates the expression and all child expressions.\n  syntax:\n    content: public static System.Workflow.Activities.Rules.RuleExpressionResult Evaluate (System.Workflow.Activities.Rules.RuleExecution execution, System.CodeDom.CodeExpression expression);\n    parameters:\n    - id: execution\n      type: System.Workflow.Activities.Rules.RuleExecution\n      description: The <xref href=\"System.Workflow.Activities.Rules.RuleExecution\"></xref> to execute the expression.\n    - id: expression\n      type: System.CodeDom.CodeExpression\n      description: The <xref href=\"System.CodeDom.CodeExpression\"></xref> to evaluate.\n    return:\n      type: System.Workflow.Activities.Rules.RuleExpressionResult\n      description: The <xref href=\"System.Workflow.Activities.Rules.RuleExpressionResult\"></xref> that indicates the result of the expression evaluation.\n  overload: System.Workflow.Activities.Rules.RuleExpressionWalker.Evaluate*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>execution</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  platform:\n  - net462\n- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Match(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)\n  id: Match(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)\n  parent: System.Workflow.Activities.Rules.RuleExpressionWalker\n  langs:\n  - csharp\n  name: Match(CodeExpression,CodeExpression)\n  nameWithType: RuleExpressionWalker.Match(CodeExpression,CodeExpression)\n  fullName: System.Workflow.Activities.Rules.RuleExpressionWalker.Match(CodeExpression,CodeExpression)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: Compares the current expression and child nodes to another expression to determine whether they are equal.\n  syntax:\n    content: public static bool Match (System.CodeDom.CodeExpression firstExpression, System.CodeDom.CodeExpression secondExpression);\n    parameters:\n    - id: firstExpression\n      type: System.CodeDom.CodeExpression\n      description: The first <xref href=\"System.CodeDom.CodeExpression\"></xref> in the comparison.\n    - id: secondExpression\n      type: System.CodeDom.CodeExpression\n      description: The second <xref href=\"System.CodeDom.CodeExpression\"></xref> in the comparison.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the expressions are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Workflow.Activities.Rules.RuleExpressionWalker.Match*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Validate(System.Workflow.Activities.Rules.RuleValidation,System.CodeDom.CodeExpression,System.Boolean)\n  id: Validate(System.Workflow.Activities.Rules.RuleValidation,System.CodeDom.CodeExpression,System.Boolean)\n  parent: System.Workflow.Activities.Rules.RuleExpressionWalker\n  langs:\n  - csharp\n  name: Validate(RuleValidation,CodeExpression,Boolean)\n  nameWithType: RuleExpressionWalker.Validate(RuleValidation,CodeExpression,Boolean)\n  fullName: System.Workflow.Activities.Rules.RuleExpressionWalker.Validate(RuleValidation,CodeExpression,Boolean)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: Verifies that the expression and child nodes are configured correctly and has no errors.\n  syntax:\n    content: public static System.Workflow.Activities.Rules.RuleExpressionInfo Validate (System.Workflow.Activities.Rules.RuleValidation validation, System.CodeDom.CodeExpression expression, bool isWritten);\n    parameters:\n    - id: validation\n      type: System.Workflow.Activities.Rules.RuleValidation\n      description: The <xref href=\"System.Workflow.Activities.Rules.RuleValidation\"></xref> to manage the validation process.\n    - id: expression\n      type: System.CodeDom.CodeExpression\n      description: The <xref href=\"System.CodeDom.CodeExpression\"></xref> to evaluate.\n    - id: isWritten\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if fields and properties written by a <xref href=\"System.Workflow.Activities.Rules.RuleAction\"></xref> are stored in by <xref href=\"System.Workflow.Activities.Rules.RuleAnalysis\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Workflow.Activities.Rules.RuleExpressionInfo\n      description: The <xref href=\"System.Workflow.Activities.Rules.RuleExpressionInfo\"></xref> for the <xref href=\"System.CodeDom.CodeExpression\"></xref>.\n  overload: System.Workflow.Activities.Rules.RuleExpressionWalker.Validate*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>validation</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <code>expression</code> is null and the errors collection on the <xref href=\"System.Workflow.Activities.Rules.RuleValidation\"></xref> object is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref>).\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.AnalyzeUsage(System.Workflow.Activities.Rules.RuleAnalysis,System.CodeDom.CodeExpression,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)\n  parent: System.Workflow.Activities.Rules.RuleExpressionWalker\n  isExternal: false\n  name: AnalyzeUsage(RuleAnalysis,CodeExpression,Boolean,Boolean,RulePathQualifier)\n  nameWithType: RuleExpressionWalker.AnalyzeUsage(RuleAnalysis,CodeExpression,Boolean,Boolean,RulePathQualifier)\n  fullName: System.Workflow.Activities.Rules.RuleExpressionWalker.AnalyzeUsage(RuleAnalysis,CodeExpression,Boolean,Boolean,RulePathQualifier)\n- uid: System.Workflow.Activities.Rules.RuleAnalysis\n  parent: System.Workflow.Activities.Rules\n  isExternal: false\n  name: RuleAnalysis\n  nameWithType: RuleAnalysis\n  fullName: System.Workflow.Activities.Rules.RuleAnalysis\n- uid: System.CodeDom.CodeExpression\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeExpression\n  nameWithType: CodeExpression\n  fullName: System.CodeDom.CodeExpression\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Workflow.Activities.Rules.RulePathQualifier\n  parent: System.Workflow.Activities.Rules\n  isExternal: false\n  name: RulePathQualifier\n  nameWithType: RulePathQualifier\n  fullName: System.Workflow.Activities.Rules.RulePathQualifier\n- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Clone(System.CodeDom.CodeExpression)\n  parent: System.Workflow.Activities.Rules.RuleExpressionWalker\n  isExternal: false\n  name: Clone(CodeExpression)\n  nameWithType: RuleExpressionWalker.Clone(CodeExpression)\n  fullName: System.Workflow.Activities.Rules.RuleExpressionWalker.Clone(CodeExpression)\n- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Decompile(System.Text.StringBuilder,System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)\n  parent: System.Workflow.Activities.Rules.RuleExpressionWalker\n  isExternal: false\n  name: Decompile(StringBuilder,CodeExpression,CodeExpression)\n  nameWithType: RuleExpressionWalker.Decompile(StringBuilder,CodeExpression,CodeExpression)\n  fullName: System.Workflow.Activities.Rules.RuleExpressionWalker.Decompile(StringBuilder,CodeExpression,CodeExpression)\n- uid: System.Text.StringBuilder\n  parent: System.Text\n  isExternal: true\n  name: StringBuilder\n  nameWithType: StringBuilder\n  fullName: System.Text.StringBuilder\n- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Evaluate(System.Workflow.Activities.Rules.RuleExecution,System.CodeDom.CodeExpression)\n  parent: System.Workflow.Activities.Rules.RuleExpressionWalker\n  isExternal: false\n  name: Evaluate(RuleExecution,CodeExpression)\n  nameWithType: RuleExpressionWalker.Evaluate(RuleExecution,CodeExpression)\n  fullName: System.Workflow.Activities.Rules.RuleExpressionWalker.Evaluate(RuleExecution,CodeExpression)\n- uid: System.Workflow.Activities.Rules.RuleExpressionResult\n  parent: System.Workflow.Activities.Rules\n  isExternal: false\n  name: RuleExpressionResult\n  nameWithType: RuleExpressionResult\n  fullName: System.Workflow.Activities.Rules.RuleExpressionResult\n- uid: System.Workflow.Activities.Rules.RuleExecution\n  parent: System.Workflow.Activities.Rules\n  isExternal: false\n  name: RuleExecution\n  nameWithType: RuleExecution\n  fullName: System.Workflow.Activities.Rules.RuleExecution\n- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Match(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)\n  parent: System.Workflow.Activities.Rules.RuleExpressionWalker\n  isExternal: false\n  name: Match(CodeExpression,CodeExpression)\n  nameWithType: RuleExpressionWalker.Match(CodeExpression,CodeExpression)\n  fullName: System.Workflow.Activities.Rules.RuleExpressionWalker.Match(CodeExpression,CodeExpression)\n- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Validate(System.Workflow.Activities.Rules.RuleValidation,System.CodeDom.CodeExpression,System.Boolean)\n  parent: System.Workflow.Activities.Rules.RuleExpressionWalker\n  isExternal: false\n  name: Validate(RuleValidation,CodeExpression,Boolean)\n  nameWithType: RuleExpressionWalker.Validate(RuleValidation,CodeExpression,Boolean)\n  fullName: System.Workflow.Activities.Rules.RuleExpressionWalker.Validate(RuleValidation,CodeExpression,Boolean)\n- uid: System.Workflow.Activities.Rules.RuleExpressionInfo\n  parent: System.Workflow.Activities.Rules\n  isExternal: false\n  name: RuleExpressionInfo\n  nameWithType: RuleExpressionInfo\n  fullName: System.Workflow.Activities.Rules.RuleExpressionInfo\n- uid: System.Workflow.Activities.Rules.RuleValidation\n  parent: System.Workflow.Activities.Rules\n  isExternal: false\n  name: RuleValidation\n  nameWithType: RuleValidation\n  fullName: System.Workflow.Activities.Rules.RuleValidation\n- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.AnalyzeUsage*\n  parent: System.Workflow.Activities.Rules.RuleExpressionWalker\n  isExternal: false\n  name: AnalyzeUsage\n  nameWithType: RuleExpressionWalker.AnalyzeUsage\n- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Clone*\n  parent: System.Workflow.Activities.Rules.RuleExpressionWalker\n  isExternal: false\n  name: Clone\n  nameWithType: RuleExpressionWalker.Clone\n- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Decompile*\n  parent: System.Workflow.Activities.Rules.RuleExpressionWalker\n  isExternal: false\n  name: Decompile\n  nameWithType: RuleExpressionWalker.Decompile\n- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Evaluate*\n  parent: System.Workflow.Activities.Rules.RuleExpressionWalker\n  isExternal: false\n  name: Evaluate\n  nameWithType: RuleExpressionWalker.Evaluate\n- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Match*\n  parent: System.Workflow.Activities.Rules.RuleExpressionWalker\n  isExternal: false\n  name: Match\n  nameWithType: RuleExpressionWalker.Match\n- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Validate*\n  parent: System.Workflow.Activities.Rules.RuleExpressionWalker\n  isExternal: false\n  name: Validate\n  nameWithType: RuleExpressionWalker.Validate\n"}