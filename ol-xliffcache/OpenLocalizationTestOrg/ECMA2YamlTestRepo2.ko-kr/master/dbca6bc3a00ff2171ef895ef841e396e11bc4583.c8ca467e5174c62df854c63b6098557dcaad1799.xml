{"nodes":[{"pos":[1676,1738],"content":"A stream that represents a spooled print job in a print queue.","needQuote":true,"needEscape":true,"nodes":[{"content":"A stream that represents a spooled print job in a print queue.","pos":[0,62]}]},{"pos":[1751,2812],"content":"Use this class to write device specific information to a spool file that is not automatically included by the [!INCLUDE[TLA#tla_win](~/add/includes/ajax-current-ext-md.md)] spooler. Of course, you need to know whether the spool file is [!INCLUDE[TLA#tla_emf](~/add/includes/tlasharptla-emf-md.md)] or [!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)]. If you prefer working with a <xref:System.Byte> array, you can also use two of the overloads of the <xref:System.Printing.PrintQueue.AddJob%2A> method and the <xref:System.Printing.PrintSystemJobInfo.JobStream%2A> property to write to the spool file.      > [!CAUTION] >  Classes within the <xref:System.Printing> namespace are not supported for use within a Windows service or ASP.NET application or service. Attempting to use these classes from within one of these application types may produce unexpected problems, such as diminished service performance and run-time exceptions.       If you want to print from a Windows Forms application, see the <xref:System.Drawing.Printing> namespace.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this class to write device specific information to a spool file that is not automatically included by the <ph id=\"ph1\">[!INCLUDE[TLA#tla_win](~/add/includes/ajax-current-ext-md.md)]</ph> spooler.","pos":[0,181],"source":"Use this class to write device specific information to a spool file that is not automatically included by the [!INCLUDE[TLA#tla_win](~/add/includes/ajax-current-ext-md.md)] spooler."},{"content":"Of course, you need to know whether the spool file is <ph id=\"ph1\">[!INCLUDE[TLA#tla_emf](~/add/includes/tlasharptla-emf-md.md)]</ph> or <ph id=\"ph2\">[!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)]</ph>.","pos":[182,363],"source":" Of course, you need to know whether the spool file is [!INCLUDE[TLA#tla_emf](~/add/includes/tlasharptla-emf-md.md)] or [!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)]."},{"content":"If you prefer working with a &lt;xref:System.Byte&gt; array, you can also use two of the overloads of the &lt;xref:System.Printing.PrintQueue.AddJob%2A&gt; method and the &lt;xref:System.Printing.PrintSystemJobInfo.JobStream%2A&gt; property to write to the spool file.","pos":[364,614],"source":" If you prefer working with a <xref:System.Byte> array, you can also use two of the overloads of the <xref:System.Printing.PrintQueue.AddJob%2A> method and the <xref:System.Printing.PrintSystemJobInfo.JobStream%2A> property to write to the spool file."},{"content":"&gt; <ph id=\"ph1\">[!CAUTION]</ph> &gt;  Classes within the &lt;xref:System.Printing&gt; namespace are not supported for use within a Windows service or ASP.NET application or service.","pos":[620,773],"source":"      > [!CAUTION] >  Classes within the <xref:System.Printing> namespace are not supported for use within a Windows service or ASP.NET application or service."},{"content":"Attempting to use these classes from within one of these application types may produce unexpected problems, such as diminished service performance and run-time exceptions.","pos":[774,945]},{"content":"If you want to print from a Windows Forms application, see the &lt;xref:System.Drawing.Printing&gt; namespace.","pos":[952,1056],"source":"       If you want to print from a Windows Forms application, see the <xref:System.Drawing.Printing> namespace."}]},{"pos":[3482,3684],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Printing.PrintQueueStream\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class for the specified print job that is hosted in the specified <bpt id=\"p2\">&lt;xref href=\"System.Printing.PrintQueue\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Printing.PrintQueueStream\"></xref> class for the specified print job that is hosted in the specified <xref href=\"System.Printing.PrintQueue\"></xref>."},{"pos":[3889,4006],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Printing.PrintQueue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that hosts the print job that provides the content of the stream.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Printing.PrintQueue\"></xref> that hosts the print job that provides the content of the stream."},{"pos":[4075,4141],"content":"The name of the print job that provides the content of the stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the print job that provides the content of the stream.","pos":[0,66]}]},{"pos":[4783,5128],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Printing.PrintQueueStream\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class for the specified print job that is hosted in the specified <bpt id=\"p2\">&lt;xref href=\"System.Printing.PrintQueue\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, with an indication of whether data in the <bpt id=\"p3\">&lt;xref href=\"System.Printing.PrintQueueStream\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> should be committed when the stream is closed.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Printing.PrintQueueStream\"></xref> class for the specified print job that is hosted in the specified <xref href=\"System.Printing.PrintQueue\"></xref>, with an indication of whether data in the <xref href=\"System.Printing.PrintQueueStream\"></xref> should be committed when the stream is closed."},{"pos":[5357,5474],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Printing.PrintQueue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that hosts the print job that provides the content of the stream.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Printing.PrintQueue\"></xref> that hosts the print job that provides the content of the stream."},{"pos":[5543,5609],"content":"The name of the print job that provides the content of the stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the print job that provides the content of the stream.","pos":[0,66]}]},{"pos":[5684,5970],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to commit data in the <bpt id=\"p2\">&lt;xref href=\"System.Printing.PrintQueueStream\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> when the &lt;xref:System.Printing.PrintQueueStream.Close*&gt; method is called; otherwise,<bpt id=\"p3\">&lt;xref uid=\"langword_csharp_ false\" name=\" false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to commit data in the <xref href=\"System.Printing.PrintQueueStream\"></xref> when the <xref:System.Printing.PrintQueueStream.Close*> method is called; otherwise,<xref uid=\"langword_csharp_ false\" name=\" false\" href=\"\"></xref>."},{"pos":[6704,7076],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Printing.PrintQueueStream\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class for the specified print job that is hosted in the specified <bpt id=\"p2\">&lt;xref href=\"System.Printing.PrintQueue\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, with the specified settings and an indication of whether data in the <bpt id=\"p3\">&lt;xref href=\"System.Printing.PrintQueueStream\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> should be committed when the stream is closed.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Printing.PrintQueueStream\"></xref> class for the specified print job that is hosted in the specified <xref href=\"System.Printing.PrintQueue\"></xref>, with the specified settings and an indication of whether data in the <xref href=\"System.Printing.PrintQueueStream\"></xref> should be committed when the stream is closed."},{"pos":[7346,7463],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Printing.PrintQueue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that hosts the print job that provides the content of the stream.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Printing.PrintQueue\"></xref> that hosts the print job that provides the content of the stream."},{"pos":[7532,7598],"content":"The name of the print job that provides the content of the stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the print job that provides the content of the stream.","pos":[0,66]}]},{"pos":[7673,7959],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to commit data in the <bpt id=\"p2\">&lt;xref href=\"System.Printing.PrintQueueStream\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> when the &lt;xref:System.Printing.PrintQueueStream.Close*&gt; method is called; otherwise,<bpt id=\"p3\">&lt;xref uid=\"langword_csharp_ false\" name=\" false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to commit data in the <xref href=\"System.Printing.PrintQueueStream\"></xref> when the <xref:System.Printing.PrintQueueStream.Close*> method is called; otherwise,<xref uid=\"langword_csharp_ false\" name=\" false\" href=\"\"></xref>."},{"pos":[8041,8071],"content":"The settings of the print job.","needQuote":true,"needEscape":true,"nodes":[{"content":"The settings of the print job.","pos":[0,30]}]},{"pos":[8778,8817],"content":"Begins an asynchronous write operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Begins an asynchronous write operation.","pos":[0,39]}]},{"pos":[9037,9073],"content":"The buffer from which to write data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The buffer from which to write data.","pos":[0,36]}]},{"pos":[9135,9193],"content":"The byte offset in the buffer from which to begin writing.","needQuote":true,"needEscape":true,"nodes":[{"content":"The byte offset in the buffer from which to begin writing.","pos":[0,58]}]},{"pos":[9254,9291],"content":"The maximum number of bytes to write.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum number of bytes to write.","pos":[0,37]}]},{"pos":[9363,9444],"content":"An asynchronous callback, which is called when the writing operation is complete.","needQuote":true,"needEscape":true,"nodes":[{"content":"An asynchronous callback, which is called when the writing operation is complete.","pos":[0,81]}]},{"pos":[9506,9602],"content":"A user-provided object that distinguishes this asynchronous writing request from other requests.","needQuote":true,"needEscape":true,"nodes":[{"content":"A user-provided object that distinguishes this asynchronous writing request from other requests.","pos":[0,96]}]},{"pos":[9666,9765],"content":"An <xref:System.IAsyncResult> that represents the asynchronous write, which might still be pending.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.IAsyncResult&gt; that represents the asynchronous write, which might still be pending.","pos":[0,99],"source":"An <xref:System.IAsyncResult> that represents the asynchronous write, which might still be pending."}]},{"pos":[10189,10253],"content":"Gets a value that indicates whether the stream supports reading.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the stream supports reading.","pos":[0,64]}]},{"pos":[10373,10532],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if reading is supported; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if reading is supported; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10953,11090],"content":"Gets a value that indicates whether the stream supports seeking, which is moving the read/write position to a new position in the stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the stream supports seeking, which is moving the read/write position to a new position in the stream.","pos":[0,137]}]},{"pos":[11210,11369],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if seeking is supported; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if seeking is supported; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11795,11859],"content":"Gets a value that indicates whether the stream supports writing.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the stream supports writing.","pos":[0,64]}]},{"pos":[11980,12139],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if writing is supported; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if writing is supported; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12555,12663],"content":"Closes the stream and releases any resources, such as sockets and file handles, that are associated with it.","needQuote":true,"needEscape":true,"nodes":[{"content":"Closes the stream and releases any resources, such as sockets and file handles, that are associated with it.","pos":[0,108]}]},{"pos":[13212,13366],"content":"Releases the unmanaged resources that are used by the <bpt id=\"p1\">&lt;xref href=\"System.Printing.PrintQueueStream\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and optionally releases the managed resources.","needQuote":true,"needEscape":true,"source":"Releases the unmanaged resources that are used by the <xref href=\"System.Printing.PrintQueueStream\"></xref> and optionally releases the managed resources."},{"pos":[13379,13918],"content":"This method is called by the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the unnamed Boolean parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with the unnamed Boolean parameter set to `false`.       When the unnamed Boolean parameter is `true`, this method releases all resources that are held by any managed objects that this <xref:System.Printing.PrintQueueStream> references. This method invokes the `Dispose()` method of each referenced object.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is called by the &lt;xref:System.Object.Finalize%2A&gt; method.","pos":[0,69],"source":"This method is called by the <xref:System.Object.Finalize%2A> method."},{"content":"<ph id=\"ph1\">`Dispose()`</ph> invokes the protected <ph id=\"ph2\">`Dispose(Boolean)`</ph> method with the unnamed Boolean parameter set to <ph id=\"ph3\">`true`</ph>.","pos":[70,179],"source":"`Dispose()` invokes the protected `Dispose(Boolean)` method with the unnamed Boolean parameter set to `true`."},{"content":"&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id=\"ph1\">`Dispose`</ph> with the unnamed Boolean parameter set to <ph id=\"ph2\">`false`</ph>.","pos":[180,281],"source":" <xref:System.Object.Finalize%2A> invokes `Dispose` with the unnamed Boolean parameter set to `false`."},{"content":"When the unnamed Boolean parameter is <ph id=\"ph1\">`true`</ph>, this method releases all resources that are held by any managed objects that this &lt;xref:System.Printing.PrintQueueStream&gt; references.","pos":[288,467],"source":"       When the unnamed Boolean parameter is `true`, this method releases all resources that are held by any managed objects that this <xref:System.Printing.PrintQueueStream> references."},{"content":"This method invokes the <ph id=\"ph1\">`Dispose()`</ph> method of each referenced object.","pos":[468,537],"source":" This method invokes the `Dispose()` method of each referenced object."}]},{"pos":[14063,14075],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14583,14620],"content":"Ends an asynchronous write operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Ends an asynchronous write operation.","pos":[0,37]}]},{"pos":[14632,14791],"content":"EndWrite must be called exactly once on every <xref:System.IAsyncResult> that is returned from a call to <xref:System.Printing.PrintQueueStream.BeginWrite%2A>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"EndWrite must be called exactly once on every &lt;xref:System.IAsyncResult&gt; that is returned from a call to &lt;xref:System.Printing.PrintQueueStream.BeginWrite%2A&gt;.","pos":[0,159],"source":"EndWrite must be called exactly once on every <xref:System.IAsyncResult> that is returned from a call to <xref:System.Printing.PrintQueueStream.BeginWrite%2A>."}]},{"pos":[14962,15014],"content":"A reference to the pending asynchronous I/O request.","needQuote":true,"needEscape":true,"nodes":[{"content":"A reference to the pending asynchronous I/O request.","pos":[0,52]}]},{"pos":[15445,15675],"content":"Enables a <bpt id=\"p1\">&lt;xref href=\"System.Printing.PrintQueueStream\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to attempt to free resources and perform other cleanup operations before the <bpt id=\"p2\">&lt;xref href=\"System.Printing.PrintQueueStream\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is reclaimed by garbage collection.","needQuote":true,"needEscape":true,"source":"Enables a <xref href=\"System.Printing.PrintQueueStream\"></xref> to attempt to free resources and perform other cleanup operations before the <xref href=\"System.Printing.PrintQueueStream\"></xref> is reclaimed by garbage collection."},{"pos":[15688,16343],"content":"This method overrides <xref:System.Object.Finalize%2A?displayProperty=fullName>. Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.       For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method overrides &lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt;.","pos":[0,80],"source":"This method overrides <xref:System.Object.Finalize%2A?displayProperty=fullName>."},{"content":"Application code should not call this method; an object's <ph id=\"ph1\">`Finalize`</ph> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the &lt;xref:System.GC.SuppressFinalize%2A&gt; method.","pos":[81,333],"source":" Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Finalize Methods and Destructors<ept id=\"p1\">](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id=\"p2\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>, and <bpt id=\"p3\">[</bpt>Overriding the Finalize Method<ept id=\"p3\">](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.","pos":[340,653],"source":"       For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)."}]},{"pos":[16824,16917],"content":"Clears all the buffers for this stream and writes any buffered data to the underlying device.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears all the buffers for this stream and writes any buffered data to the underlying device.","pos":[0,93]}]},{"pos":[17759,17974],"content":"Enables the <bpt id=\"p1\">&lt;xref href=\"System.Printing.PrintQueueStream\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to respond to the packaging progress by handling the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Xps.Serialization.XpsPackagingPolicy.PackagingProgressEvent\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Enables the <xref href=\"System.Printing.PrintQueueStream\"></xref> to respond to the packaging progress by handling the <xref href=\"System.Windows.Xps.Serialization.XpsPackagingPolicy.PackagingProgressEvent\"></xref>."},{"pos":[18193,18217],"content":"The source of the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The source of the event.","pos":[0,24]}]},{"pos":[18317,18332],"content":"The event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event data.","pos":[0,15]}]},{"pos":[18804,18840],"content":"Gets the ID number of the print job.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the ID number of the print job.","pos":[0,36]}]},{"pos":[18954,19006],"content":"An <xref:System.Int32> that represents an ID number.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Int32&gt; that represents an ID number.","pos":[0,52],"source":"An <xref:System.Int32> that represents an ID number."}]},{"pos":[19428,19467],"content":"Gets the length of the stream in bytes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the length of the stream in bytes.","pos":[0,39]}]},{"pos":[19584,19657],"content":"An <xref:System.Int64> that represents the length of the stream in bytes.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Int64&gt; that represents the length of the stream in bytes.","pos":[0,73],"source":"An <xref:System.Int64> that represents the length of the stream in bytes."}]},{"pos":[20082,20141],"content":"Gets or sets the current read/write position in the stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the current read/write position in the stream.","pos":[0,59]}]},{"pos":[20265,20339],"content":"An <xref:System.Int64> that represents the current position in the stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Int64&gt; that represents the current position in the stream.","pos":[0,74],"source":"An <xref:System.Int64> that represents the current position in the stream."}]},{"pos":[20886,21017],"content":"Reads a sequence of bytes from the stream and advances the read/write position in the stream by the number of bytes that were read.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reads a sequence of bytes from the stream and advances the read/write position in the stream by the number of bytes that were read.","pos":[0,131]}]},{"pos":[21030,21418],"content":"The return value can be less than the number of requested bytes if that many bytes are not currently available; or the number can be zero (0) if the read/write position is at the end of the stream.       When this method returns, `buffer` contains the specified byte array and the values between `offset` and (offset + count - 1) are replaced by the bytes that are read from the source.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The return value can be less than the number of requested bytes if that many bytes are not currently available; or the number can be zero (0) if the read/write position is at the end of the stream.","pos":[0,197]},{"content":"When this method returns, <ph id=\"ph1\">`buffer`</ph> contains the specified byte array and the values between <ph id=\"ph2\">`offset`</ph> and (offset + count - 1) are replaced by the bytes that are read from the source.","pos":[204,386],"source":"       When this method returns, `buffer` contains the specified byte array and the values between `offset` and (offset + count - 1) are replaced by the bytes that are read from the source."}]},{"pos":[21586,21604],"content":"An array of bytes.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of bytes.","pos":[0,18]}]},{"pos":[21666,21777],"content":"The zero-based byte offset in the buffer where you want to begin storing the data that is read from the stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based byte offset in the buffer where you want to begin storing the data that is read from the stream.","pos":[0,111]}]},{"pos":[21838,21893],"content":"The maximum number of bytes to be read from the stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum number of bytes to be read from the stream.","pos":[0,55]}]},{"pos":[21950,22040],"content":"An <xref:System.Int32> that holds the total number of bytes that are read into the buffer.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Int32&gt; that holds the total number of bytes that are read into the buffer.","pos":[0,90],"source":"An <xref:System.Int32> that holds the total number of bytes that are read into the buffer."}]},{"pos":[22565,22612],"content":"Sets the read/write position within the stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the read/write position within the stream.","pos":[0,47]}]},{"pos":[22783,22838],"content":"A byte offset that is relative to the origin parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"A byte offset that is relative to the origin parameter.","pos":[0,55]}]},{"pos":[22908,23027],"content":"A value of type <xref:System.IO.SeekOrigin> that indicates the reference point that is used to obtain the new position.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value of type &lt;xref:System.IO.SeekOrigin&gt; that indicates the reference point that is used to obtain the new position.","pos":[0,119],"source":"A value of type <xref:System.IO.SeekOrigin> that indicates the reference point that is used to obtain the new position."}]},{"pos":[23084,23151],"content":"An <xref:System.Int64> that represents the new read/write position.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Int64&gt; that represents the new read/write position.","pos":[0,67],"source":"An <xref:System.Int64> that represents the new read/write position."}]},{"pos":[23626,23656],"content":"Sets the length of the stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the length of the stream.","pos":[0,30]}]},{"pos":[23669,23990],"content":"A stream must support both writing and seeking for SetLength to work.       Use the <xref:System.Printing.PrintQueueStream.CanWrite%2A> property to determine whether the current instance supports writing, and use the <xref:System.Printing.PrintQueueStream.CanSeek%2A> property to determine whether seeking is supported.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A stream must support both writing and seeking for SetLength to work.       Use the <xref:System.Printing.PrintQueueStream.CanWrite%2A> property to determine whether the current instance supports writing, and use the <xref:System.Printing.PrintQueueStream.CanSeek%2A> property to determine whether seeking is supported.","pos":[0,319],"nodes":[{"content":"A stream must support both writing and seeking for SetLength to work.","pos":[0,69]},{"content":"Use the &lt;xref:System.Printing.PrintQueueStream.CanWrite%2A&gt; property to determine whether the current instance supports writing, and use the &lt;xref:System.Printing.PrintQueueStream.CanSeek%2A&gt; property to determine whether seeking is supported.","pos":[76,319],"source":"       Use the <xref:System.Printing.PrintQueueStream.CanWrite%2A> property to determine whether the current instance supports writing, and use the <xref:System.Printing.PrintQueueStream.CanSeek%2A> property to determine whether seeking is supported."}]}]},{"pos":[24136,24187],"content":"The needed length, in bytes, of the current stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"The needed length, in bytes, of the current stream.","pos":[0,51]}]},{"pos":[24740,24872],"content":"Writes a sequence of bytes to the stream and advances the read/write position in the stream by the number of bytes that are written.","needQuote":true,"needEscape":true,"nodes":[{"content":"Writes a sequence of bytes to the stream and advances the read/write position in the stream by the number of bytes that are written.","pos":[0,132]}]},{"pos":[25041,25092],"content":"An array of bytes from which to copy to the stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of bytes from which to copy to the stream.","pos":[0,51]}]},{"pos":[25154,25249],"content":"The zero-based byte offset in the <ph id=\"ph1\">`buffer`</ph> where you want to begin copying bytes to the stream.","needQuote":true,"needEscape":true,"source":"The zero-based byte offset in the `buffer` where you want to begin copying bytes to the stream."},{"pos":[25310,25353],"content":"The number of bytes to write to the stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of bytes to write to the stream.","pos":[0,43]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Printing.PrintQueueStream\n  id: PrintQueueStream\n  children:\n  - System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String)\n  - System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String,System.Boolean)\n  - System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String,System.Boolean,System.Printing.PrintTicket)\n  - System.Printing.PrintQueueStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.Printing.PrintQueueStream.CanRead\n  - System.Printing.PrintQueueStream.CanSeek\n  - System.Printing.PrintQueueStream.CanWrite\n  - System.Printing.PrintQueueStream.Close\n  - System.Printing.PrintQueueStream.Dispose(System.Boolean)\n  - System.Printing.PrintQueueStream.EndWrite(System.IAsyncResult)\n  - System.Printing.PrintQueueStream.Finalize\n  - System.Printing.PrintQueueStream.Flush\n  - System.Printing.PrintQueueStream.HandlePackagingProgressEvent(System.Object,System.Windows.Xps.Packaging.PackagingProgressEventArgs)\n  - System.Printing.PrintQueueStream.JobIdentifier\n  - System.Printing.PrintQueueStream.Length\n  - System.Printing.PrintQueueStream.Position\n  - System.Printing.PrintQueueStream.Read(System.Byte[],System.Int32,System.Int32)\n  - System.Printing.PrintQueueStream.Seek(System.Int64,System.IO.SeekOrigin)\n  - System.Printing.PrintQueueStream.SetLength(System.Int64)\n  - System.Printing.PrintQueueStream.Write(System.Byte[],System.Int32,System.Int32)\n  langs:\n  - csharp\n  name: PrintQueueStream\n  nameWithType: PrintQueueStream\n  fullName: System.Printing.PrintQueueStream\n  type: Class\n  summary: A stream that represents a spooled print job in a print queue.\n  remarks: \"Use this class to write device specific information to a spool file that is not automatically included by the [!INCLUDE[TLA#tla_win](~/add/includes/ajax-current-ext-md.md)] spooler. Of course, you need to know whether the spool file is [!INCLUDE[TLA#tla_emf](~/add/includes/tlasharptla-emf-md.md)] or [!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)]. If you prefer working with a <xref:System.Byte> array, you can also use two of the overloads of the <xref:System.Printing.PrintQueue.AddJob%2A> method and the <xref:System.Printing.PrintSystemJobInfo.JobStream%2A> property to write to the spool file.  \\n  \\n> [!CAUTION]\\n>  Classes within the <xref:System.Printing> namespace are not supported for use within a Windows service or ASP.NET application or service. Attempting to use these classes from within one of these application types may produce unexpected problems, such as diminished service performance and run-time exceptions.  \\n  \\n If you want to print from a Windows Forms application, see the <xref:System.Drawing.Printing> namespace.\"\n  syntax:\n    content: 'public class PrintQueueStream : System.IO.Stream'\n  inheritance:\n  - System.IO.Stream\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String)\n  id: '#ctor(System.Printing.PrintQueue,System.String)'\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: PrintQueueStream(PrintQueue,String)\n  nameWithType: PrintQueueStream.PrintQueueStream(PrintQueue,String)\n  fullName: System.Printing.PrintQueueStream.PrintQueueStream(PrintQueue,String)\n  type: Constructor\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Initializes a new instance of the <xref href=\"System.Printing.PrintQueueStream\"></xref> class for the specified print job that is hosted in the specified <xref href=\"System.Printing.PrintQueue\"></xref>.\n  syntax:\n    content: public PrintQueueStream (System.Printing.PrintQueue printQueue, string printJobName);\n    parameters:\n    - id: printQueue\n      type: System.Printing.PrintQueue\n      description: The <xref href=\"System.Printing.PrintQueue\"></xref> that hosts the print job that provides the content of the stream.\n    - id: printJobName\n      type: System.String\n      description: The name of the print job that provides the content of the stream.\n  overload: System.Printing.PrintQueueStream.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String,System.Boolean)\n  id: '#ctor(System.Printing.PrintQueue,System.String,System.Boolean)'\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: PrintQueueStream(PrintQueue,String,Boolean)\n  nameWithType: PrintQueueStream.PrintQueueStream(PrintQueue,String,Boolean)\n  fullName: System.Printing.PrintQueueStream.PrintQueueStream(PrintQueue,String,Boolean)\n  type: Constructor\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Initializes a new instance of the <xref href=\"System.Printing.PrintQueueStream\"></xref> class for the specified print job that is hosted in the specified <xref href=\"System.Printing.PrintQueue\"></xref>, with an indication of whether data in the <xref href=\"System.Printing.PrintQueueStream\"></xref> should be committed when the stream is closed.\n  syntax:\n    content: public PrintQueueStream (System.Printing.PrintQueue printQueue, string printJobName, bool commitDataOnClose);\n    parameters:\n    - id: printQueue\n      type: System.Printing.PrintQueue\n      description: The <xref href=\"System.Printing.PrintQueue\"></xref> that hosts the print job that provides the content of the stream.\n    - id: printJobName\n      type: System.String\n      description: The name of the print job that provides the content of the stream.\n    - id: commitDataOnClose\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to commit data in the <xref href=\"System.Printing.PrintQueueStream\"></xref> when the <xref:System.Printing.PrintQueueStream.Close*> method is called; otherwise,<xref uid=\"langword_csharp_ false\" name=\" false\" href=\"\"></xref>.\n  overload: System.Printing.PrintQueueStream.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String,System.Boolean,System.Printing.PrintTicket)\n  id: '#ctor(System.Printing.PrintQueue,System.String,System.Boolean,System.Printing.PrintTicket)'\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: PrintQueueStream(PrintQueue,String,Boolean,PrintTicket)\n  nameWithType: PrintQueueStream.PrintQueueStream(PrintQueue,String,Boolean,PrintTicket)\n  fullName: System.Printing.PrintQueueStream.PrintQueueStream(PrintQueue,String,Boolean,PrintTicket)\n  type: Constructor\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Initializes a new instance of the <xref href=\"System.Printing.PrintQueueStream\"></xref> class for the specified print job that is hosted in the specified <xref href=\"System.Printing.PrintQueue\"></xref>, with the specified settings and an indication of whether data in the <xref href=\"System.Printing.PrintQueueStream\"></xref> should be committed when the stream is closed.\n  syntax:\n    content: public PrintQueueStream (System.Printing.PrintQueue printQueue, string printJobName, bool commitDataOnClose, System.Printing.PrintTicket printTicket);\n    parameters:\n    - id: printQueue\n      type: System.Printing.PrintQueue\n      description: The <xref href=\"System.Printing.PrintQueue\"></xref> that hosts the print job that provides the content of the stream.\n    - id: printJobName\n      type: System.String\n      description: The name of the print job that provides the content of the stream.\n    - id: commitDataOnClose\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to commit data in the <xref href=\"System.Printing.PrintQueueStream\"></xref> when the <xref:System.Printing.PrintQueueStream.Close*> method is called; otherwise,<xref uid=\"langword_csharp_ false\" name=\" false\" href=\"\"></xref>.\n    - id: printTicket\n      type: System.Printing.PrintTicket\n      description: The settings of the print job.\n  overload: System.Printing.PrintQueueStream.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Printing.PrintQueueStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)\n  nameWithType: PrintQueueStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)\n  fullName: System.Printing.PrintQueueStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Begins an asynchronous write operation.\n  syntax:\n    content: public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback callback, object state);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: The buffer from which to write data.\n    - id: offset\n      type: System.Int32\n      description: The byte offset in the buffer from which to begin writing.\n    - id: count\n      type: System.Int32\n      description: The maximum number of bytes to write.\n    - id: callback\n      type: System.AsyncCallback\n      description: An asynchronous callback, which is called when the writing operation is complete.\n    - id: state\n      type: System.Object\n      description: A user-provided object that distinguishes this asynchronous writing request from other requests.\n    return:\n      type: System.IAsyncResult\n      description: An <xref:System.IAsyncResult> that represents the asynchronous write, which might still be pending.\n  overload: System.Printing.PrintQueueStream.BeginWrite*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Printing.PrintQueueStream.CanRead\n  id: CanRead\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: CanRead\n  nameWithType: PrintQueueStream.CanRead\n  fullName: System.Printing.PrintQueueStream.CanRead\n  type: Property\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Gets a value that indicates whether the stream supports reading.\n  syntax:\n    content: public override bool CanRead { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if reading is supported; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Printing.PrintQueueStream.CanRead*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Printing.PrintQueueStream.CanSeek\n  id: CanSeek\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: CanSeek\n  nameWithType: PrintQueueStream.CanSeek\n  fullName: System.Printing.PrintQueueStream.CanSeek\n  type: Property\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Gets a value that indicates whether the stream supports seeking, which is moving the read/write position to a new position in the stream.\n  syntax:\n    content: public override bool CanSeek { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if seeking is supported; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Printing.PrintQueueStream.CanSeek*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Printing.PrintQueueStream.CanWrite\n  id: CanWrite\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: CanWrite\n  nameWithType: PrintQueueStream.CanWrite\n  fullName: System.Printing.PrintQueueStream.CanWrite\n  type: Property\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Gets a value that indicates whether the stream supports writing.\n  syntax:\n    content: public override bool CanWrite { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if writing is supported; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Printing.PrintQueueStream.CanWrite*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Printing.PrintQueueStream.Close\n  id: Close\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: PrintQueueStream.Close()\n  fullName: System.Printing.PrintQueueStream.Close()\n  type: Method\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Closes the stream and releases any resources, such as sockets and file handles, that are associated with it.\n  syntax:\n    content: public override void Close ();\n    parameters: []\n  overload: System.Printing.PrintQueueStream.Close*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Printing.PrintQueueStream.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: PrintQueueStream.Dispose(Boolean)\n  fullName: System.Printing.PrintQueueStream.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Releases the unmanaged resources that are used by the <xref href=\"System.Printing.PrintQueueStream\"></xref> and optionally releases the managed resources.\n  remarks: \"This method is called by the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the unnamed Boolean parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with the unnamed Boolean parameter set to `false`.  \\n  \\n When the unnamed Boolean parameter is `true`, this method releases all resources that are held by any managed objects that this <xref:System.Printing.PrintQueueStream> references. This method invokes the `Dispose()` method of each referenced object.\"\n  syntax:\n    content: protected override void Dispose (bool A_0);\n    parameters:\n    - id: A_0\n      type: System.Boolean\n      description: To be added.\n  overload: System.Printing.PrintQueueStream.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Printing.PrintQueueStream.EndWrite(System.IAsyncResult)\n  id: EndWrite(System.IAsyncResult)\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: EndWrite(IAsyncResult)\n  nameWithType: PrintQueueStream.EndWrite(IAsyncResult)\n  fullName: System.Printing.PrintQueueStream.EndWrite(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Ends an asynchronous write operation.\n  remarks: EndWrite must be called exactly once on every <xref:System.IAsyncResult> that is returned from a call to <xref:System.Printing.PrintQueueStream.BeginWrite%2A>.\n  syntax:\n    content: public override void EndWrite (IAsyncResult asyncResult);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: A reference to the pending asynchronous I/O request.\n  overload: System.Printing.PrintQueueStream.EndWrite*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Printing.PrintQueueStream.Finalize\n  id: Finalize\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: PrintQueueStream.Finalize()\n  fullName: System.Printing.PrintQueueStream.Finalize()\n  type: Method\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Enables a <xref href=\"System.Printing.PrintQueueStream\"></xref> to attempt to free resources and perform other cleanup operations before the <xref href=\"System.Printing.PrintQueueStream\"></xref> is reclaimed by garbage collection.\n  remarks: \"This method overrides <xref:System.Object.Finalize%2A?displayProperty=fullName>. Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.  \\n  \\n For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).\"\n  syntax:\n    content: ~PrintQueueStream ();\n    parameters: []\n  overload: System.Printing.PrintQueueStream.Finalize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Printing.PrintQueueStream.Flush\n  id: Flush\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: Flush()\n  nameWithType: PrintQueueStream.Flush()\n  fullName: System.Printing.PrintQueueStream.Flush()\n  type: Method\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Clears all the buffers for this stream and writes any buffered data to the underlying device.\n  syntax:\n    content: public override void Flush ();\n    parameters: []\n  overload: System.Printing.PrintQueueStream.Flush*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Printing.PrintQueueStream.HandlePackagingProgressEvent(System.Object,System.Windows.Xps.Packaging.PackagingProgressEventArgs)\n  id: HandlePackagingProgressEvent(System.Object,System.Windows.Xps.Packaging.PackagingProgressEventArgs)\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: HandlePackagingProgressEvent(Object,PackagingProgressEventArgs)\n  nameWithType: PrintQueueStream.HandlePackagingProgressEvent(Object,PackagingProgressEventArgs)\n  fullName: System.Printing.PrintQueueStream.HandlePackagingProgressEvent(Object,PackagingProgressEventArgs)\n  type: Method\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Enables the <xref href=\"System.Printing.PrintQueueStream\"></xref> to respond to the packaging progress by handling the <xref href=\"System.Windows.Xps.Serialization.XpsPackagingPolicy.PackagingProgressEvent\"></xref>.\n  syntax:\n    content: public void HandlePackagingProgressEvent (object sender, System.Windows.Xps.Packaging.PackagingProgressEventArgs e);\n    parameters:\n    - id: sender\n      type: System.Object\n      description: The source of the event.\n    - id: e\n      type: System.Windows.Xps.Packaging.PackagingProgressEventArgs\n      description: The event data.\n  overload: System.Printing.PrintQueueStream.HandlePackagingProgressEvent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Printing.PrintQueueStream.JobIdentifier\n  id: JobIdentifier\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: JobIdentifier\n  nameWithType: PrintQueueStream.JobIdentifier\n  fullName: System.Printing.PrintQueueStream.JobIdentifier\n  type: Property\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Gets the ID number of the print job.\n  syntax:\n    content: public int JobIdentifier { get; }\n    return:\n      type: System.Int32\n      description: An <xref:System.Int32> that represents an ID number.\n  overload: System.Printing.PrintQueueStream.JobIdentifier*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Printing.PrintQueueStream.Length\n  id: Length\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: Length\n  nameWithType: PrintQueueStream.Length\n  fullName: System.Printing.PrintQueueStream.Length\n  type: Property\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Gets the length of the stream in bytes.\n  syntax:\n    content: public override long Length { get; }\n    return:\n      type: System.Int64\n      description: An <xref:System.Int64> that represents the length of the stream in bytes.\n  overload: System.Printing.PrintQueueStream.Length*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Printing.PrintQueueStream.Position\n  id: Position\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: Position\n  nameWithType: PrintQueueStream.Position\n  fullName: System.Printing.PrintQueueStream.Position\n  type: Property\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Gets or sets the current read/write position in the stream.\n  syntax:\n    content: public override long Position { get; set; }\n    return:\n      type: System.Int64\n      description: An <xref:System.Int64> that represents the current position in the stream.\n  overload: System.Printing.PrintQueueStream.Position*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Printing.PrintQueueStream.Read(System.Byte[],System.Int32,System.Int32)\n  id: Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: Read(Byte[],Int32,Int32)\n  nameWithType: PrintQueueStream.Read(Byte[],Int32,Int32)\n  fullName: System.Printing.PrintQueueStream.Read(Byte[],Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Reads a sequence of bytes from the stream and advances the read/write position in the stream by the number of bytes that were read.\n  remarks: \"The return value can be less than the number of requested bytes if that many bytes are not currently available; or the number can be zero (0) if the read/write position is at the end of the stream.  \\n  \\n When this method returns, `buffer` contains the specified byte array and the values between `offset` and (offset + count - 1) are replaced by the bytes that are read from the source.\"\n  syntax:\n    content: public override int Read (byte[] buffer, int offset, int count);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: An array of bytes.\n    - id: offset\n      type: System.Int32\n      description: The zero-based byte offset in the buffer where you want to begin storing the data that is read from the stream.\n    - id: count\n      type: System.Int32\n      description: The maximum number of bytes to be read from the stream.\n    return:\n      type: System.Int32\n      description: An <xref:System.Int32> that holds the total number of bytes that are read into the buffer.\n  overload: System.Printing.PrintQueueStream.Read*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Printing.PrintQueueStream.Seek(System.Int64,System.IO.SeekOrigin)\n  id: Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: Seek(Int64,SeekOrigin)\n  nameWithType: PrintQueueStream.Seek(Int64,SeekOrigin)\n  fullName: System.Printing.PrintQueueStream.Seek(Int64,SeekOrigin)\n  type: Method\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Sets the read/write position within the stream.\n  syntax:\n    content: public override long Seek (long offset, System.IO.SeekOrigin origin);\n    parameters:\n    - id: offset\n      type: System.Int64\n      description: A byte offset that is relative to the origin parameter.\n    - id: origin\n      type: System.IO.SeekOrigin\n      description: A value of type <xref:System.IO.SeekOrigin> that indicates the reference point that is used to obtain the new position.\n    return:\n      type: System.Int64\n      description: An <xref:System.Int64> that represents the new read/write position.\n  overload: System.Printing.PrintQueueStream.Seek*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Printing.PrintQueueStream.SetLength(System.Int64)\n  id: SetLength(System.Int64)\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: SetLength(Int64)\n  nameWithType: PrintQueueStream.SetLength(Int64)\n  fullName: System.Printing.PrintQueueStream.SetLength(Int64)\n  type: Method\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Sets the length of the stream.\n  remarks: \"A stream must support both writing and seeking for SetLength to work.  \\n  \\n Use the <xref:System.Printing.PrintQueueStream.CanWrite%2A> property to determine whether the current instance supports writing, and use the <xref:System.Printing.PrintQueueStream.CanSeek%2A> property to determine whether seeking is supported.\"\n  syntax:\n    content: public override void SetLength (long value);\n    parameters:\n    - id: value\n      type: System.Int64\n      description: The needed length, in bytes, of the current stream.\n  overload: System.Printing.PrintQueueStream.SetLength*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Printing.PrintQueueStream.Write(System.Byte[],System.Int32,System.Int32)\n  id: Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: Write(Byte[],Int32,Int32)\n  nameWithType: PrintQueueStream.Write(Byte[],Int32,Int32)\n  fullName: System.Printing.PrintQueueStream.Write(Byte[],Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Writes a sequence of bytes to the stream and advances the read/write position in the stream by the number of bytes that are written.\n  syntax:\n    content: public override void Write (byte[] buffer, int offset, int count);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: An array of bytes from which to copy to the stream.\n    - id: offset\n      type: System.Int32\n      description: The zero-based byte offset in the `buffer` where you want to begin copying bytes to the stream.\n    - id: count\n      type: System.Int32\n      description: The number of bytes to write to the stream.\n  overload: System.Printing.PrintQueueStream.Write*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.IO.Stream\n  isExternal: false\n  name: System.IO.Stream\n- uid: System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String)\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: PrintQueueStream(PrintQueue,String)\n  nameWithType: PrintQueueStream.PrintQueueStream(PrintQueue,String)\n  fullName: System.Printing.PrintQueueStream.PrintQueueStream(PrintQueue,String)\n- uid: System.Printing.PrintQueue\n  parent: System.Printing\n  isExternal: false\n  name: PrintQueue\n  nameWithType: PrintQueue\n  fullName: System.Printing.PrintQueue\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String,System.Boolean)\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: PrintQueueStream(PrintQueue,String,Boolean)\n  nameWithType: PrintQueueStream.PrintQueueStream(PrintQueue,String,Boolean)\n  fullName: System.Printing.PrintQueueStream.PrintQueueStream(PrintQueue,String,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String,System.Boolean,System.Printing.PrintTicket)\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: PrintQueueStream(PrintQueue,String,Boolean,PrintTicket)\n  nameWithType: PrintQueueStream.PrintQueueStream(PrintQueue,String,Boolean,PrintTicket)\n  fullName: System.Printing.PrintQueueStream.PrintQueueStream(PrintQueue,String,Boolean,PrintTicket)\n- uid: System.Printing.PrintTicket\n  parent: System.Printing\n  isExternal: false\n  name: PrintTicket\n  nameWithType: PrintTicket\n  fullName: System.Printing.PrintTicket\n- uid: System.Printing.PrintQueueStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)\n  nameWithType: PrintQueueStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)\n  fullName: System.Printing.PrintQueueStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: true\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: true\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Printing.PrintQueueStream.CanRead\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: CanRead\n  nameWithType: PrintQueueStream.CanRead\n  fullName: System.Printing.PrintQueueStream.CanRead\n- uid: System.Printing.PrintQueueStream.CanSeek\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: CanSeek\n  nameWithType: PrintQueueStream.CanSeek\n  fullName: System.Printing.PrintQueueStream.CanSeek\n- uid: System.Printing.PrintQueueStream.CanWrite\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: CanWrite\n  nameWithType: PrintQueueStream.CanWrite\n  fullName: System.Printing.PrintQueueStream.CanWrite\n- uid: System.Printing.PrintQueueStream.Close\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: Close()\n  nameWithType: PrintQueueStream.Close()\n  fullName: System.Printing.PrintQueueStream.Close()\n- uid: System.Printing.PrintQueueStream.Dispose(System.Boolean)\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: PrintQueueStream.Dispose(Boolean)\n  fullName: System.Printing.PrintQueueStream.Dispose(Boolean)\n- uid: System.Printing.PrintQueueStream.EndWrite(System.IAsyncResult)\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: EndWrite(IAsyncResult)\n  nameWithType: PrintQueueStream.EndWrite(IAsyncResult)\n  fullName: System.Printing.PrintQueueStream.EndWrite(IAsyncResult)\n- uid: System.Printing.PrintQueueStream.Finalize\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: Finalize()\n  nameWithType: PrintQueueStream.Finalize()\n  fullName: System.Printing.PrintQueueStream.Finalize()\n- uid: System.Printing.PrintQueueStream.Flush\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: Flush()\n  nameWithType: PrintQueueStream.Flush()\n  fullName: System.Printing.PrintQueueStream.Flush()\n- uid: System.Printing.PrintQueueStream.HandlePackagingProgressEvent(System.Object,System.Windows.Xps.Packaging.PackagingProgressEventArgs)\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: HandlePackagingProgressEvent(Object,PackagingProgressEventArgs)\n  nameWithType: PrintQueueStream.HandlePackagingProgressEvent(Object,PackagingProgressEventArgs)\n  fullName: System.Printing.PrintQueueStream.HandlePackagingProgressEvent(Object,PackagingProgressEventArgs)\n- uid: System.Windows.Xps.Packaging.PackagingProgressEventArgs\n  parent: System.Windows.Xps.Packaging\n  isExternal: false\n  name: PackagingProgressEventArgs\n  nameWithType: PackagingProgressEventArgs\n  fullName: System.Windows.Xps.Packaging.PackagingProgressEventArgs\n- uid: System.Printing.PrintQueueStream.JobIdentifier\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: JobIdentifier\n  nameWithType: PrintQueueStream.JobIdentifier\n  fullName: System.Printing.PrintQueueStream.JobIdentifier\n- uid: System.Printing.PrintQueueStream.Length\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: Length\n  nameWithType: PrintQueueStream.Length\n  fullName: System.Printing.PrintQueueStream.Length\n- uid: System.Int64\n  parent: System\n  isExternal: true\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Printing.PrintQueueStream.Position\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: Position\n  nameWithType: PrintQueueStream.Position\n  fullName: System.Printing.PrintQueueStream.Position\n- uid: System.Printing.PrintQueueStream.Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: Read(Byte[],Int32,Int32)\n  nameWithType: PrintQueueStream.Read(Byte[],Int32,Int32)\n  fullName: System.Printing.PrintQueueStream.Read(Byte[],Int32,Int32)\n- uid: System.Printing.PrintQueueStream.Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: Seek(Int64,SeekOrigin)\n  nameWithType: PrintQueueStream.Seek(Int64,SeekOrigin)\n  fullName: System.Printing.PrintQueueStream.Seek(Int64,SeekOrigin)\n- uid: System.IO.SeekOrigin\n  parent: System.IO\n  isExternal: true\n  name: SeekOrigin\n  nameWithType: SeekOrigin\n  fullName: System.IO.SeekOrigin\n- uid: System.Printing.PrintQueueStream.SetLength(System.Int64)\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: SetLength(Int64)\n  nameWithType: PrintQueueStream.SetLength(Int64)\n  fullName: System.Printing.PrintQueueStream.SetLength(Int64)\n- uid: System.Printing.PrintQueueStream.Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: Write(Byte[],Int32,Int32)\n  nameWithType: PrintQueueStream.Write(Byte[],Int32,Int32)\n  fullName: System.Printing.PrintQueueStream.Write(Byte[],Int32,Int32)\n- uid: System.Printing.PrintQueueStream.#ctor*\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: PrintQueueStream\n  nameWithType: PrintQueueStream.PrintQueueStream\n- uid: System.Printing.PrintQueueStream.BeginWrite*\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: BeginWrite\n  nameWithType: PrintQueueStream.BeginWrite\n- uid: System.Printing.PrintQueueStream.CanRead*\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: CanRead\n  nameWithType: PrintQueueStream.CanRead\n- uid: System.Printing.PrintQueueStream.CanSeek*\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: CanSeek\n  nameWithType: PrintQueueStream.CanSeek\n- uid: System.Printing.PrintQueueStream.CanWrite*\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: CanWrite\n  nameWithType: PrintQueueStream.CanWrite\n- uid: System.Printing.PrintQueueStream.Close*\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: Close\n  nameWithType: PrintQueueStream.Close\n- uid: System.Printing.PrintQueueStream.Dispose*\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: Dispose\n  nameWithType: PrintQueueStream.Dispose\n- uid: System.Printing.PrintQueueStream.EndWrite*\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: EndWrite\n  nameWithType: PrintQueueStream.EndWrite\n- uid: System.Printing.PrintQueueStream.Finalize*\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: Finalize\n  nameWithType: PrintQueueStream.Finalize\n- uid: System.Printing.PrintQueueStream.Flush*\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: Flush\n  nameWithType: PrintQueueStream.Flush\n- uid: System.Printing.PrintQueueStream.HandlePackagingProgressEvent*\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: HandlePackagingProgressEvent\n  nameWithType: PrintQueueStream.HandlePackagingProgressEvent\n- uid: System.Printing.PrintQueueStream.JobIdentifier*\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: JobIdentifier\n  nameWithType: PrintQueueStream.JobIdentifier\n- uid: System.Printing.PrintQueueStream.Length*\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: Length\n  nameWithType: PrintQueueStream.Length\n- uid: System.Printing.PrintQueueStream.Position*\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: Position\n  nameWithType: PrintQueueStream.Position\n- uid: System.Printing.PrintQueueStream.Read*\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: Read\n  nameWithType: PrintQueueStream.Read\n- uid: System.Printing.PrintQueueStream.Seek*\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: Seek\n  nameWithType: PrintQueueStream.Seek\n- uid: System.Printing.PrintQueueStream.SetLength*\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: SetLength\n  nameWithType: PrintQueueStream.SetLength\n- uid: System.Printing.PrintQueueStream.Write*\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: Write\n  nameWithType: PrintQueueStream.Write\n"}