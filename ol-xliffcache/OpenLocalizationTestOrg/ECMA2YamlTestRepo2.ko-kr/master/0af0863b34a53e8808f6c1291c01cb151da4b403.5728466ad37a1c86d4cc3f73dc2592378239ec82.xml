{"nodes":[{"pos":[1951,2409],"content":"A base class for <xref href=\"System.Data.Metadata.Edm.ObjectItemCollection\"></xref>, <xref href=\"System.Data.Metadata.Edm.EdmItemCollection\"></xref>, and <xref href=\"System.Data.Mapping.StorageMappingItemCollection\"></xref> classes. An ItemCollection class is an abstract class and provides the core API for loading and holding the in-memory metadata. This class is derived from the &lt;xref:System.Data.Metadata.Edm.ReadOnlyMetadataCollection%601&gt; class.","needQuote":true,"needEscape":true,"nodes":[{"content":"A base class for <bpt id=\"p1\">&lt;xref href=\"System.Data.Metadata.Edm.ObjectItemCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, <bpt id=\"p2\">&lt;xref href=\"System.Data.Metadata.Edm.EdmItemCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, and <bpt id=\"p3\">&lt;xref href=\"System.Data.Mapping.StorageMappingItemCollection\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> classes.","pos":[0,232],"source":"A base class for <xref href=\"System.Data.Metadata.Edm.ObjectItemCollection\"></xref>, <xref href=\"System.Data.Metadata.Edm.EdmItemCollection\"></xref>, and <xref href=\"System.Data.Mapping.StorageMappingItemCollection\"></xref> classes."},{"content":"An ItemCollection class is an abstract class and provides the core API for loading and holding the in-memory metadata.","pos":[233,351]},{"content":"This class is derived from the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Data.Metadata.Edm.ReadOnlyMetadataCollection%601<ph id=\"ph2\">&amp;gt;</ph> class.","pos":[352,458],"source":" This class is derived from the &lt;xref:System.Data.Metadata.Edm.ReadOnlyMetadataCollection%601&gt; class."}]},{"pos":[2421,2547],"content":"For more information, see <bpt id=\"p1\">[</bpt>Item Collections (Metadata)<ept id=\"p1\">](http://msdn.microsoft.com/en-us/3051a40a-ff45-42f8-8f93-7545e427a404)</ept>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"For more information, see [Item Collections (Metadata)](http://msdn.microsoft.com/en-us/3051a40a-ff45-42f8-8f93-7545e427a404)."},{"pos":[3872,3929],"content":"Gets the data model associated with this item collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the data model associated with this item collection.","pos":[0,57]}]},{"pos":[3941,4266],"content":"This property returns <xref:System.Data.Metadata.Edm.DataSpace> for <xref:System.Data.Metadata.Edm.ObjectItemCollection>; <xref:System.Data.Metadata.Edm.DataSpace> for <xref:System.Data.Metadata.Edm.EdmItemCollection>; and <xref:System.Data.Metadata.Edm.DataSpace> for <xref:System.Data.Mapping.StorageMappingItemCollection>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property returns &lt;xref:System.Data.Metadata.Edm.DataSpace&gt; for &lt;xref:System.Data.Metadata.Edm.ObjectItemCollection&gt;; &lt;xref:System.Data.Metadata.Edm.DataSpace&gt; for &lt;xref:System.Data.Metadata.Edm.EdmItemCollection&gt;; and &lt;xref:System.Data.Metadata.Edm.DataSpace&gt; for &lt;xref:System.Data.Mapping.StorageMappingItemCollection&gt;.","pos":[0,325],"source":"This property returns <xref:System.Data.Metadata.Edm.DataSpace> for <xref:System.Data.Metadata.Edm.ObjectItemCollection>; <xref:System.Data.Metadata.Edm.DataSpace> for <xref:System.Data.Metadata.Edm.EdmItemCollection>; and <xref:System.Data.Metadata.Edm.DataSpace> for <xref:System.Data.Mapping.StorageMappingItemCollection>."}]},{"pos":[4429,4481],"content":"The data model associated with this item collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data model associated with this item collection.","pos":[0,52]}]},{"pos":[5049,5174],"content":"Returns an <bpt id=\"p1\">&lt;xref href=\"System.Data.Metadata.Edm.EntityContainer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object by using the specified entity container name.","needQuote":true,"needEscape":true,"source":"Returns an <xref href=\"System.Data.Metadata.Edm.EntityContainer\"></xref> object by using the specified entity container name."},{"pos":[5356,5389],"content":"The name of the entity container.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the entity container.","pos":[0,33]}]},{"pos":[5474,5569],"content":"If there is no entity container, this method returns null; otherwise, it returns the first one.","needQuote":true,"needEscape":true,"nodes":[{"content":"If there is no entity container, this method returns null; otherwise, it returns the first one.","pos":[0,95]}]},{"pos":[6200,6325],"content":"Returns an <bpt id=\"p1\">&lt;xref href=\"System.Data.Metadata.Edm.EntityContainer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object by using the specified entity container name.","needQuote":true,"needEscape":true,"source":"Returns an <xref href=\"System.Data.Metadata.Edm.EntityContainer\"></xref> object by using the specified entity container name."},{"pos":[6524,6557],"content":"The name of the entity container.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the entity container.","pos":[0,33]}]},{"pos":[6625,6800],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to perform the case-insensitive search; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to perform the case-insensitive search; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6885,6993],"content":"If there is no entity container, this method returns null; otherwise, it returns the first entity container.","needQuote":true,"needEscape":true,"nodes":[{"content":"If there is no entity container, this method returns null; otherwise, it returns the first entity container.","pos":[0,108]}]},{"pos":[7540,7637],"content":"Returns all the overloads of the functions by using the specified name from this item collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns all the overloads of the functions by using the specified name from this item collection.","pos":[0,97]}]},{"pos":[7876,7906],"content":"The full name of the function.","needQuote":true,"needEscape":true,"nodes":[{"content":"The full name of the function.","pos":[0,30]}]},{"pos":[8038,8187],"content":"A collection of type &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; that contains all the functions that have the specified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of type <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id=\"ph2\">&amp;gt;</ph> that contains all the functions that have the specified name.","pos":[0,149],"source":"A collection of type &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; that contains all the functions that have the specified name."}]},{"pos":[8782,8879],"content":"Returns all the overloads of the functions by using the specified name from this item collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns all the overloads of the functions by using the specified name from this item collection.","pos":[0,97]}]},{"pos":[9135,9165],"content":"The full name of the function.","needQuote":true,"needEscape":true,"nodes":[{"content":"The full name of the function.","pos":[0,30]}]},{"pos":[9233,9408],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to perform the case-insensitive search; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to perform the case-insensitive search; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9540,9689],"content":"A collection of type &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; that contains all the functions that have the specified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of type <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id=\"ph2\">&amp;gt;</ph> that contains all the functions that have the specified name.","pos":[0,149],"source":"A collection of type &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; that contains all the functions that have the specified name."}]},{"pos":[10719,10816],"content":"Returns all the overloads of the functions by using the specified name from this item collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns all the overloads of the functions by using the specified name from this item collection.","pos":[0,97]}]},{"pos":[11369,11395],"content":"A dictionary of functions.","needQuote":true,"needEscape":true,"nodes":[{"content":"A dictionary of functions.","pos":[0,26]}]},{"pos":[11464,11494],"content":"The full name of the function.","needQuote":true,"needEscape":true,"nodes":[{"content":"The full name of the function.","pos":[0,30]}]},{"pos":[11562,11737],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to perform the case-insensitive search; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to perform the case-insensitive search; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11869,11970],"content":"A collection of type ReadOnlyCollection that contains all the functions that have the specified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of type ReadOnlyCollection that contains all the functions that have the specified name.","pos":[0,101]}]},{"pos":[12671,12683],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12729,12741],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13511,13523],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13591,13603],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13649,13661],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14397,14409],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14973,15125],"content":"Returns an <bpt id=\"p1\">&lt;xref href=\"System.Data.Metadata.Edm.EdmType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object by using the specified type name and the namespace name in this item collection.","needQuote":true,"needEscape":true,"source":"Returns an <xref href=\"System.Data.Metadata.Edm.EdmType\"></xref> object by using the specified type name and the namespace name in this item collection."},{"pos":[15310,15331],"content":"The name of the type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the type.","pos":[0,21]}]},{"pos":[15401,15427],"content":"The namespace of the type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The namespace of the type.","pos":[0,26]}]},{"pos":[15504,15732],"content":"An <xref href=\"System.Data.Metadata.Edm.EdmType\"></xref> object that represents the type that matches the specified type name and the namespace name in this item collection. If there is no matched type, this method returns null.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Data.Metadata.Edm.EdmType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the type that matches the specified type name and the namespace name in this item collection.","pos":[0,173],"source":"An <xref href=\"System.Data.Metadata.Edm.EdmType\"></xref> object that represents the type that matches the specified type name and the namespace name in this item collection."},{"content":"If there is no matched type, this method returns null.","pos":[174,228]}]},{"pos":[16346,16500],"content":"Returns an <bpt id=\"p1\">&lt;xref href=\"System.Data.Metadata.Edm.EdmType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object by using the specified type name and the namespace name from this item collection.","needQuote":true,"needEscape":true,"source":"Returns an <xref href=\"System.Data.Metadata.Edm.EdmType\"></xref> object by using the specified type name and the namespace name from this item collection."},{"pos":[16702,16723],"content":"The name of the type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the type.","pos":[0,21]}]},{"pos":[16793,16819],"content":"The namespace of the type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The namespace of the type.","pos":[0,26]}]},{"pos":[16887,17062],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to perform the case-insensitive search; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to perform the case-insensitive search; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[17139,17367],"content":"An <xref href=\"System.Data.Metadata.Edm.EdmType\"></xref> object that represents the type that matches the specified type name and the namespace name in this item collection. If there is no matched type, this method returns null.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Data.Metadata.Edm.EdmType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the type that matches the specified type name and the namespace name in this item collection.","pos":[0,173],"source":"An <xref href=\"System.Data.Metadata.Edm.EdmType\"></xref> object that represents the type that matches the specified type name and the namespace name in this item collection."},{"content":"If there is no matched type, this method returns null.","pos":[174,228]}]},{"pos":[18080,18325],"content":"Returns an <xref href=\"System.Data.Metadata.Edm.EntityContainer\"></xref> object by using the specified entity container name. If there is no entity container, the output parameter contains null; otherwise, it contains the first entity container.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an <bpt id=\"p1\">&lt;xref href=\"System.Data.Metadata.Edm.EntityContainer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object by using the specified entity container name.","pos":[0,125],"source":"Returns an <xref href=\"System.Data.Metadata.Edm.EntityContainer\"></xref> object by using the specified entity container name."},{"content":"If there is no entity container, the output parameter contains null; otherwise, it contains the first entity container.","pos":[126,245]}]},{"pos":[18536,18569],"content":"The name of the entity container.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the entity container.","pos":[0,33]}]},{"pos":[18668,18899],"content":"When this method returns, it contains an <xref href=\"System.Data.Metadata.Edm.EntityContainer\"></xref> object. If there is no entity container, this output parameter contains null; otherwise, it contains the first entity container.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, it contains an <bpt id=\"p1\">&lt;xref href=\"System.Data.Metadata.Edm.EntityContainer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[0,110],"source":"When this method returns, it contains an <xref href=\"System.Data.Metadata.Edm.EntityContainer\"></xref> object."},{"content":"If there is no entity container, this output parameter contains null; otherwise, it contains the first entity container.","pos":[111,231]}]},{"pos":[18958,19159],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if there is an entity container that matches the search criteria; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if there is an entity container that matches the search criteria; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[19940,20186],"content":"Returns an <xref href=\"System.Data.Metadata.Edm.EntityContainer\"></xref> object by using the specified entity container name. If there is no entity container, this output parameter contains null; otherwise, it contains the first entity container.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an <bpt id=\"p1\">&lt;xref href=\"System.Data.Metadata.Edm.EntityContainer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object by using the specified entity container name.","pos":[0,125],"source":"Returns an <xref href=\"System.Data.Metadata.Edm.EntityContainer\"></xref> object by using the specified entity container name."},{"content":"If there is no entity container, this output parameter contains null; otherwise, it contains the first entity container.","pos":[126,246]}]},{"pos":[20414,20447],"content":"The name of the entity container.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the entity container.","pos":[0,33]}]},{"pos":[20515,20690],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to perform the case-insensitive search; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to perform the case-insensitive search; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[20789,21020],"content":"When this method returns, it contains an <xref href=\"System.Data.Metadata.Edm.EntityContainer\"></xref> object. If there is no entity container, this output parameter contains null; otherwise, it contains the first entity container.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, it contains an <bpt id=\"p1\">&lt;xref href=\"System.Data.Metadata.Edm.EntityContainer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[0,110],"source":"When this method returns, it contains an <xref href=\"System.Data.Metadata.Edm.EntityContainer\"></xref> object."},{"content":"If there is no entity container, this output parameter contains null; otherwise, it contains the first entity container.","pos":[111,231]}]},{"pos":[21079,21280],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if there is an entity container that matches the search criteria; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if there is an entity container that matches the search criteria; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[22039,22051],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22100,22112],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22171,22183],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23005,23017],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23085,23097],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23146,23158],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23217,23229],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23902,24056],"content":"Returns an <bpt id=\"p1\">&lt;xref href=\"System.Data.Metadata.Edm.EdmType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object by using the specified type name and the namespace name from this item collection.","needQuote":true,"needEscape":true,"source":"Returns an <xref href=\"System.Data.Metadata.Edm.EdmType\"></xref> object by using the specified type name and the namespace name from this item collection."},{"pos":[24259,24280],"content":"The name of the type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the type.","pos":[0,21]}]},{"pos":[24350,24376],"content":"The namespace of the type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The namespace of the type.","pos":[0,26]}]},{"pos":[24456,24702],"content":"When this method returns, this output parameter contains an <xref href=\"System.Data.Metadata.Edm.EdmType\"></xref> object. If there is no type with the specified name and namespace name in this item collection, this output parameter contains null.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, this output parameter contains an <bpt id=\"p1\">&lt;xref href=\"System.Data.Metadata.Edm.EdmType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[0,121],"source":"When this method returns, this output parameter contains an <xref href=\"System.Data.Metadata.Edm.EdmType\"></xref> object."},{"content":"If there is no type with the specified name and namespace name in this item collection, this output parameter contains null.","pos":[122,246]}]},{"pos":[24761,24949],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if there is a type that matches the search criteria; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if there is a type that matches the search criteria; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[25673,25827],"content":"Returns an <bpt id=\"p1\">&lt;xref href=\"System.Data.Metadata.Edm.EdmType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object by using the specified type name and the namespace name from this item collection.","needQuote":true,"needEscape":true,"source":"Returns an <xref href=\"System.Data.Metadata.Edm.EdmType\"></xref> object by using the specified type name and the namespace name from this item collection."},{"pos":[26047,26068],"content":"The name of the type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the type.","pos":[0,21]}]},{"pos":[26138,26164],"content":"The namespace of the type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The namespace of the type.","pos":[0,26]}]},{"pos":[26232,26407],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to perform the case-insensitive search; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to perform the case-insensitive search; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[26487,26733],"content":"When this method returns, this output parameter contains an <xref href=\"System.Data.Metadata.Edm.EdmType\"></xref> object. If there is no type with the specified name and namespace name in this item collection, this output parameter contains null.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, this output parameter contains an <bpt id=\"p1\">&lt;xref href=\"System.Data.Metadata.Edm.EdmType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[0,121],"source":"When this method returns, this output parameter contains an <xref href=\"System.Data.Metadata.Edm.EdmType\"></xref> object."},{"content":"If there is no type with the specified name and namespace name in this item collection, this output parameter contains null.","pos":[122,246]}]},{"pos":[26792,26980],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if there is a type that matches the search criteria; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if there is a type that matches the search criteria; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Metadata.Edm.ItemCollection\n  id: ItemCollection\n  children:\n  - System.Data.Metadata.Edm.ItemCollection.DataSpace\n  - System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(System.String)\n  - System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(System.String,System.Boolean)\n  - System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.String)\n  - System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.String,System.Boolean)\n  - System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.Collections.Generic.Dictionary{System.String,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}},System.String,System.Boolean)\n  - System.Data.Metadata.Edm.ItemCollection.GetItem``1(System.String)\n  - System.Data.Metadata.Edm.ItemCollection.GetItem``1(System.String,System.Boolean)\n  - System.Data.Metadata.Edm.ItemCollection.GetItems``1\n  - System.Data.Metadata.Edm.ItemCollection.GetType(System.String,System.String)\n  - System.Data.Metadata.Edm.ItemCollection.GetType(System.String,System.String,System.Boolean)\n  - System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(System.String,System.Data.Metadata.Edm.EntityContainer@)\n  - System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.EntityContainer@)\n  - System.Data.Metadata.Edm.ItemCollection.TryGetItem``1(System.String,``0@)\n  - System.Data.Metadata.Edm.ItemCollection.TryGetItem``1(System.String,System.Boolean,``0@)\n  - System.Data.Metadata.Edm.ItemCollection.TryGetType(System.String,System.String,System.Data.Metadata.Edm.EdmType@)\n  - System.Data.Metadata.Edm.ItemCollection.TryGetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.EdmType@)\n  langs:\n  - csharp\n  name: ItemCollection\n  nameWithType: ItemCollection\n  fullName: System.Data.Metadata.Edm.ItemCollection\n  type: Class\n  summary: A base class for <xref href=\"System.Data.Metadata.Edm.ObjectItemCollection\"></xref>, <xref href=\"System.Data.Metadata.Edm.EdmItemCollection\"></xref>, and <xref href=\"System.Data.Mapping.StorageMappingItemCollection\"></xref> classes. An ItemCollection class is an abstract class and provides the core API for loading and holding the in-memory metadata. This class is derived from the &lt;xref:System.Data.Metadata.Edm.ReadOnlyMetadataCollection%601&gt; class.\n  remarks: For more information, see [Item Collections (Metadata)](http://msdn.microsoft.com/en-us/3051a40a-ff45-42f8-8f93-7545e427a404).\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public abstract class ItemCollection : System.Data.Metadata.Edm.ReadOnlyMetadataCollection<System.Data.Metadata.Edm.GlobalItem>\n  inheritance:\n  - System.Collections.ObjectModel.ReadOnlyCollection`1\n  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1\n  implements: []\n  inheritedMembers:\n  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Contains(System.String)\n  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.GetEnumerator\n  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.GetValue(System.String,System.Boolean)\n  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.IndexOf(`0)\n  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.IsReadOnly\n  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Item(System.String)\n  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.TryGetValue(System.String,System.Boolean,`0@)\n  platform:\n  - net462\n- uid: System.Data.Metadata.Edm.ItemCollection.DataSpace\n  id: DataSpace\n  parent: System.Data.Metadata.Edm.ItemCollection\n  langs:\n  - csharp\n  name: DataSpace\n  nameWithType: ItemCollection.DataSpace\n  fullName: System.Data.Metadata.Edm.ItemCollection.DataSpace\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Metadata.Edm\n  summary: Gets the data model associated with this item collection.\n  remarks: This property returns <xref:System.Data.Metadata.Edm.DataSpace> for <xref:System.Data.Metadata.Edm.ObjectItemCollection>; <xref:System.Data.Metadata.Edm.DataSpace> for <xref:System.Data.Metadata.Edm.EdmItemCollection>; and <xref:System.Data.Metadata.Edm.DataSpace> for <xref:System.Data.Mapping.StorageMappingItemCollection>.\n  syntax:\n    content: public System.Data.Metadata.Edm.DataSpace DataSpace { get; }\n    return:\n      type: System.Data.Metadata.Edm.DataSpace\n      description: The data model associated with this item collection.\n  overload: System.Data.Metadata.Edm.ItemCollection.DataSpace*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(System.String)\n  id: GetEntityContainer(System.String)\n  parent: System.Data.Metadata.Edm.ItemCollection\n  langs:\n  - csharp\n  name: GetEntityContainer(String)\n  nameWithType: ItemCollection.GetEntityContainer(String)\n  fullName: System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Metadata.Edm\n  summary: Returns an <xref href=\"System.Data.Metadata.Edm.EntityContainer\"></xref> object by using the specified entity container name.\n  syntax:\n    content: public System.Data.Metadata.Edm.EntityContainer GetEntityContainer (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the entity container.\n    return:\n      type: System.Data.Metadata.Edm.EntityContainer\n      description: If there is no entity container, this method returns null; otherwise, it returns the first one.\n  overload: System.Data.Metadata.Edm.ItemCollection.GetEntityContainer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(System.String,System.Boolean)\n  id: GetEntityContainer(System.String,System.Boolean)\n  parent: System.Data.Metadata.Edm.ItemCollection\n  langs:\n  - csharp\n  name: GetEntityContainer(String,Boolean)\n  nameWithType: ItemCollection.GetEntityContainer(String,Boolean)\n  fullName: System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(String,Boolean)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Metadata.Edm\n  summary: Returns an <xref href=\"System.Data.Metadata.Edm.EntityContainer\"></xref> object by using the specified entity container name.\n  syntax:\n    content: public System.Data.Metadata.Edm.EntityContainer GetEntityContainer (string name, bool ignoreCase);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the entity container.\n    - id: ignoreCase\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to perform the case-insensitive search; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Data.Metadata.Edm.EntityContainer\n      description: If there is no entity container, this method returns null; otherwise, it returns the first entity container.\n  overload: System.Data.Metadata.Edm.ItemCollection.GetEntityContainer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.String)\n  id: GetFunctions(System.String)\n  parent: System.Data.Metadata.Edm.ItemCollection\n  langs:\n  - csharp\n  name: GetFunctions(String)\n  nameWithType: ItemCollection.GetFunctions(String)\n  fullName: System.Data.Metadata.Edm.ItemCollection.GetFunctions(String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Metadata.Edm\n  summary: Returns all the overloads of the functions by using the specified name from this item collection.\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction> GetFunctions (string functionName);\n    parameters:\n    - id: functionName\n      type: System.String\n      description: The full name of the function.\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}\n      description: A collection of type &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; that contains all the functions that have the specified name.\n  overload: System.Data.Metadata.Edm.ItemCollection.GetFunctions*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.String,System.Boolean)\n  id: GetFunctions(System.String,System.Boolean)\n  parent: System.Data.Metadata.Edm.ItemCollection\n  langs:\n  - csharp\n  name: GetFunctions(String,Boolean)\n  nameWithType: ItemCollection.GetFunctions(String,Boolean)\n  fullName: System.Data.Metadata.Edm.ItemCollection.GetFunctions(String,Boolean)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Metadata.Edm\n  summary: Returns all the overloads of the functions by using the specified name from this item collection.\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction> GetFunctions (string functionName, bool ignoreCase);\n    parameters:\n    - id: functionName\n      type: System.String\n      description: The full name of the function.\n    - id: ignoreCase\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to perform the case-insensitive search; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}\n      description: A collection of type &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; that contains all the functions that have the specified name.\n  overload: System.Data.Metadata.Edm.ItemCollection.GetFunctions*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.Collections.Generic.Dictionary{System.String,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}},System.String,System.Boolean)\n  id: GetFunctions(System.Collections.Generic.Dictionary{System.String,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}},System.String,System.Boolean)\n  parent: System.Data.Metadata.Edm.ItemCollection\n  langs:\n  - csharp\n  name: GetFunctions(Dictionary<String,ReadOnlyCollection<EdmFunction>>,String,Boolean)\n  nameWithType: ItemCollection.GetFunctions(Dictionary<String,ReadOnlyCollection<EdmFunction>>,String,Boolean)\n  fullName: System.Data.Metadata.Edm.ItemCollection.GetFunctions(Dictionary<String,ReadOnlyCollection<EdmFunction>>,String,Boolean)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Metadata.Edm\n  summary: Returns all the overloads of the functions by using the specified name from this item collection.\n  syntax:\n    content: protected static System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction> GetFunctions (System.Collections.Generic.Dictionary<string,System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction>> functionCollection, string functionName, bool ignoreCase);\n    parameters:\n    - id: functionCollection\n      type: System.Collections.Generic.Dictionary{System.String,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}}\n      description: A dictionary of functions.\n    - id: functionName\n      type: System.String\n      description: The full name of the function.\n    - id: ignoreCase\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to perform the case-insensitive search; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}\n      description: A collection of type ReadOnlyCollection that contains all the functions that have the specified name.\n  overload: System.Data.Metadata.Edm.ItemCollection.GetFunctions*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Metadata.Edm.ItemCollection.GetItem``1(System.String)\n  id: GetItem``1(System.String)\n  parent: System.Data.Metadata.Edm.ItemCollection\n  langs:\n  - csharp\n  name: GetItem(String)\n  nameWithType: ItemCollection.GetItem(String)\n  fullName: System.Data.Metadata.Edm.ItemCollection.GetItem(String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Metadata.Edm\n  syntax:\n    content: 'public T GetItem<T> (string identity) where T : System.Data.Metadata.Edm.GlobalItem;'\n    parameters:\n    - id: identity\n      type: System.String\n      description: To be added.\n    return:\n      type: T\n      description: To be added.\n  overload: System.Data.Metadata.Edm.ItemCollection.GetItem<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Metadata.Edm.ItemCollection.GetItem``1(System.String,System.Boolean)\n  id: GetItem``1(System.String,System.Boolean)\n  parent: System.Data.Metadata.Edm.ItemCollection\n  langs:\n  - csharp\n  name: GetItem(String,Boolean)\n  nameWithType: ItemCollection.GetItem(String,Boolean)\n  fullName: System.Data.Metadata.Edm.ItemCollection.GetItem(String,Boolean)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Metadata.Edm\n  syntax:\n    content: 'public T GetItem<T> (string identity, bool ignoreCase) where T : System.Data.Metadata.Edm.GlobalItem;'\n    parameters:\n    - id: identity\n      type: System.String\n      description: To be added.\n    - id: ignoreCase\n      type: System.Boolean\n      description: To be added.\n    return:\n      type: T\n      description: To be added.\n  overload: System.Data.Metadata.Edm.ItemCollection.GetItem<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Metadata.Edm.ItemCollection.GetItems``1\n  id: GetItems``1\n  parent: System.Data.Metadata.Edm.ItemCollection\n  langs:\n  - csharp\n  name: GetItems()\n  nameWithType: ItemCollection.GetItems()\n  fullName: System.Data.Metadata.Edm.ItemCollection.GetItems()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Metadata.Edm\n  syntax:\n    content: 'public virtual System.Collections.ObjectModel.ReadOnlyCollection<T> GetItems<T> () where T : System.Data.Metadata.Edm.GlobalItem;'\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{T}\n      description: To be added.\n  overload: System.Data.Metadata.Edm.ItemCollection.GetItems<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Metadata.Edm.ItemCollection.GetType(System.String,System.String)\n  id: GetType(System.String,System.String)\n  parent: System.Data.Metadata.Edm.ItemCollection\n  langs:\n  - csharp\n  name: GetType(String,String)\n  nameWithType: ItemCollection.GetType(String,String)\n  fullName: System.Data.Metadata.Edm.ItemCollection.GetType(String,String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Metadata.Edm\n  summary: Returns an <xref href=\"System.Data.Metadata.Edm.EdmType\"></xref> object by using the specified type name and the namespace name in this item collection.\n  syntax:\n    content: public System.Data.Metadata.Edm.EdmType GetType (string name, string namespaceName);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the type.\n    - id: namespaceName\n      type: System.String\n      description: The namespace of the type.\n    return:\n      type: System.Data.Metadata.Edm.EdmType\n      description: An <xref href=\"System.Data.Metadata.Edm.EdmType\"></xref> object that represents the type that matches the specified type name and the namespace name in this item collection. If there is no matched type, this method returns null.\n  overload: System.Data.Metadata.Edm.ItemCollection.GetType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Metadata.Edm.ItemCollection.GetType(System.String,System.String,System.Boolean)\n  id: GetType(System.String,System.String,System.Boolean)\n  parent: System.Data.Metadata.Edm.ItemCollection\n  langs:\n  - csharp\n  name: GetType(String,String,Boolean)\n  nameWithType: ItemCollection.GetType(String,String,Boolean)\n  fullName: System.Data.Metadata.Edm.ItemCollection.GetType(String,String,Boolean)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Metadata.Edm\n  summary: Returns an <xref href=\"System.Data.Metadata.Edm.EdmType\"></xref> object by using the specified type name and the namespace name from this item collection.\n  syntax:\n    content: public System.Data.Metadata.Edm.EdmType GetType (string name, string namespaceName, bool ignoreCase);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the type.\n    - id: namespaceName\n      type: System.String\n      description: The namespace of the type.\n    - id: ignoreCase\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to perform the case-insensitive search; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Data.Metadata.Edm.EdmType\n      description: An <xref href=\"System.Data.Metadata.Edm.EdmType\"></xref> object that represents the type that matches the specified type name and the namespace name in this item collection. If there is no matched type, this method returns null.\n  overload: System.Data.Metadata.Edm.ItemCollection.GetType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(System.String,System.Data.Metadata.Edm.EntityContainer@)\n  id: TryGetEntityContainer(System.String,System.Data.Metadata.Edm.EntityContainer@)\n  parent: System.Data.Metadata.Edm.ItemCollection\n  langs:\n  - csharp\n  name: TryGetEntityContainer(String,EntityContainer)\n  nameWithType: ItemCollection.TryGetEntityContainer(String,EntityContainer)\n  fullName: System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(String,EntityContainer)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Metadata.Edm\n  summary: Returns an <xref href=\"System.Data.Metadata.Edm.EntityContainer\"></xref> object by using the specified entity container name. If there is no entity container, the output parameter contains null; otherwise, it contains the first entity container.\n  syntax:\n    content: public bool TryGetEntityContainer (string name, out System.Data.Metadata.Edm.EntityContainer entityContainer);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the entity container.\n    - id: entityContainer\n      type: System.Data.Metadata.Edm.EntityContainer\n      description: When this method returns, it contains an <xref href=\"System.Data.Metadata.Edm.EntityContainer\"></xref> object. If there is no entity container, this output parameter contains null; otherwise, it contains the first entity container.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if there is an entity container that matches the search criteria; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.EntityContainer@)\n  id: TryGetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.EntityContainer@)\n  parent: System.Data.Metadata.Edm.ItemCollection\n  langs:\n  - csharp\n  name: TryGetEntityContainer(String,Boolean,EntityContainer)\n  nameWithType: ItemCollection.TryGetEntityContainer(String,Boolean,EntityContainer)\n  fullName: System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(String,Boolean,EntityContainer)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Metadata.Edm\n  summary: Returns an <xref href=\"System.Data.Metadata.Edm.EntityContainer\"></xref> object by using the specified entity container name. If there is no entity container, this output parameter contains null; otherwise, it contains the first entity container.\n  syntax:\n    content: public bool TryGetEntityContainer (string name, bool ignoreCase, out System.Data.Metadata.Edm.EntityContainer entityContainer);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the entity container.\n    - id: ignoreCase\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to perform the case-insensitive search; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: entityContainer\n      type: System.Data.Metadata.Edm.EntityContainer\n      description: When this method returns, it contains an <xref href=\"System.Data.Metadata.Edm.EntityContainer\"></xref> object. If there is no entity container, this output parameter contains null; otherwise, it contains the first entity container.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if there is an entity container that matches the search criteria; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Metadata.Edm.ItemCollection.TryGetItem``1(System.String,``0@)\n  id: TryGetItem``1(System.String,``0@)\n  parent: System.Data.Metadata.Edm.ItemCollection\n  langs:\n  - csharp\n  name: TryGetItem(String,T)\n  nameWithType: ItemCollection.TryGetItem(String,T)\n  fullName: System.Data.Metadata.Edm.ItemCollection.TryGetItem(String,T)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Metadata.Edm\n  syntax:\n    content: 'public bool TryGetItem<T> (string identity, out T item) where T : System.Data.Metadata.Edm.GlobalItem;'\n    parameters:\n    - id: identity\n      type: System.String\n      description: To be added.\n    - id: item\n      type: T\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Data.Metadata.Edm.ItemCollection.TryGetItem<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Metadata.Edm.ItemCollection.TryGetItem``1(System.String,System.Boolean,``0@)\n  id: TryGetItem``1(System.String,System.Boolean,``0@)\n  parent: System.Data.Metadata.Edm.ItemCollection\n  langs:\n  - csharp\n  name: TryGetItem(String,Boolean,T)\n  nameWithType: ItemCollection.TryGetItem(String,Boolean,T)\n  fullName: System.Data.Metadata.Edm.ItemCollection.TryGetItem(String,Boolean,T)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Metadata.Edm\n  syntax:\n    content: 'public bool TryGetItem<T> (string identity, bool ignoreCase, out T item) where T : System.Data.Metadata.Edm.GlobalItem;'\n    parameters:\n    - id: identity\n      type: System.String\n      description: To be added.\n    - id: ignoreCase\n      type: System.Boolean\n      description: To be added.\n    - id: item\n      type: T\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Data.Metadata.Edm.ItemCollection.TryGetItem<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Metadata.Edm.ItemCollection.TryGetType(System.String,System.String,System.Data.Metadata.Edm.EdmType@)\n  id: TryGetType(System.String,System.String,System.Data.Metadata.Edm.EdmType@)\n  parent: System.Data.Metadata.Edm.ItemCollection\n  langs:\n  - csharp\n  name: TryGetType(String,String,EdmType)\n  nameWithType: ItemCollection.TryGetType(String,String,EdmType)\n  fullName: System.Data.Metadata.Edm.ItemCollection.TryGetType(String,String,EdmType)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Metadata.Edm\n  summary: Returns an <xref href=\"System.Data.Metadata.Edm.EdmType\"></xref> object by using the specified type name and the namespace name from this item collection.\n  syntax:\n    content: public bool TryGetType (string name, string namespaceName, out System.Data.Metadata.Edm.EdmType type);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the type.\n    - id: namespaceName\n      type: System.String\n      description: The namespace of the type.\n    - id: type\n      type: System.Data.Metadata.Edm.EdmType\n      description: When this method returns, this output parameter contains an <xref href=\"System.Data.Metadata.Edm.EdmType\"></xref> object. If there is no type with the specified name and namespace name in this item collection, this output parameter contains null.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if there is a type that matches the search criteria; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Metadata.Edm.ItemCollection.TryGetType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Metadata.Edm.ItemCollection.TryGetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.EdmType@)\n  id: TryGetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.EdmType@)\n  parent: System.Data.Metadata.Edm.ItemCollection\n  langs:\n  - csharp\n  name: TryGetType(String,String,Boolean,EdmType)\n  nameWithType: ItemCollection.TryGetType(String,String,Boolean,EdmType)\n  fullName: System.Data.Metadata.Edm.ItemCollection.TryGetType(String,String,Boolean,EdmType)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Metadata.Edm\n  summary: Returns an <xref href=\"System.Data.Metadata.Edm.EdmType\"></xref> object by using the specified type name and the namespace name from this item collection.\n  syntax:\n    content: public bool TryGetType (string name, string namespaceName, bool ignoreCase, out System.Data.Metadata.Edm.EdmType type);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the type.\n    - id: namespaceName\n      type: System.String\n      description: The namespace of the type.\n    - id: ignoreCase\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to perform the case-insensitive search; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: type\n      type: System.Data.Metadata.Edm.EdmType\n      description: When this method returns, this output parameter contains an <xref href=\"System.Data.Metadata.Edm.EdmType\"></xref> object. If there is no type with the specified name and namespace name in this item collection, this output parameter contains null.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if there is a type that matches the search criteria; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Metadata.Edm.ItemCollection.TryGetType*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1\n  isExternal: false\n  name: System.Data.Metadata.Edm.ReadOnlyMetadataCollection<System.Data.Metadata.Edm.GlobalItem>\n- uid: System.Data.Metadata.Edm.ItemCollection.DataSpace\n  parent: System.Data.Metadata.Edm.ItemCollection\n  isExternal: false\n  name: DataSpace\n  nameWithType: ItemCollection.DataSpace\n  fullName: System.Data.Metadata.Edm.ItemCollection.DataSpace\n- uid: System.Data.Metadata.Edm.DataSpace\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: DataSpace\n  nameWithType: DataSpace\n  fullName: System.Data.Metadata.Edm.DataSpace\n- uid: System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(System.String)\n  parent: System.Data.Metadata.Edm.ItemCollection\n  isExternal: false\n  name: GetEntityContainer(String)\n  nameWithType: ItemCollection.GetEntityContainer(String)\n  fullName: System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(String)\n- uid: System.Data.Metadata.Edm.EntityContainer\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: EntityContainer\n  nameWithType: EntityContainer\n  fullName: System.Data.Metadata.Edm.EntityContainer\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(System.String,System.Boolean)\n  parent: System.Data.Metadata.Edm.ItemCollection\n  isExternal: false\n  name: GetEntityContainer(String,Boolean)\n  nameWithType: ItemCollection.GetEntityContainer(String,Boolean)\n  fullName: System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(String,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.String)\n  parent: System.Data.Metadata.Edm.ItemCollection\n  isExternal: false\n  name: GetFunctions(String)\n  nameWithType: ItemCollection.GetFunctions(String)\n  fullName: System.Data.Metadata.Edm.ItemCollection.GetFunctions(String)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<EdmFunction>\n  nameWithType: ReadOnlyCollection<EdmFunction>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Metadata.Edm.EdmFunction\n    name: EdmFunction\n    nameWithType: EdmFunction\n    fullName: EdmFunction\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.String,System.Boolean)\n  parent: System.Data.Metadata.Edm.ItemCollection\n  isExternal: false\n  name: GetFunctions(String,Boolean)\n  nameWithType: ItemCollection.GetFunctions(String,Boolean)\n  fullName: System.Data.Metadata.Edm.ItemCollection.GetFunctions(String,Boolean)\n- uid: System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.Collections.Generic.Dictionary{System.String,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}},System.String,System.Boolean)\n  parent: System.Data.Metadata.Edm.ItemCollection\n  isExternal: false\n  name: GetFunctions(Dictionary<String,ReadOnlyCollection<EdmFunction>>,String,Boolean)\n  nameWithType: ItemCollection.GetFunctions(Dictionary<String,ReadOnlyCollection<EdmFunction>>,String,Boolean)\n  fullName: System.Data.Metadata.Edm.ItemCollection.GetFunctions(Dictionary<String,ReadOnlyCollection<EdmFunction>>,String,Boolean)\n- uid: System.Collections.Generic.Dictionary{System.String,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: Dictionary<String,ReadOnlyCollection<EdmFunction>>\n  nameWithType: Dictionary<String,ReadOnlyCollection<EdmFunction>>\n  fullName: System.Collections.Generic.Dictionary<System.String,System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction>>\n  spec.csharp:\n  - uid: System.Collections.Generic.Dictionary`2\n    name: Dictionary\n    nameWithType: Dictionary\n    fullName: Dictionary<System.String,System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Metadata.Edm.EdmFunction\n    name: EdmFunction\n    nameWithType: EdmFunction\n    fullName: EdmFunction\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Metadata.Edm.ItemCollection.GetItem``1(System.String)\n  parent: System.Data.Metadata.Edm.ItemCollection\n  isExternal: false\n  name: GetItem(String)\n  nameWithType: ItemCollection.GetItem(String)\n  fullName: System.Data.Metadata.Edm.ItemCollection.GetItem(String)\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Data.Metadata.Edm.ItemCollection.GetItem``1(System.String,System.Boolean)\n  parent: System.Data.Metadata.Edm.ItemCollection\n  isExternal: false\n  name: GetItem(String,Boolean)\n  nameWithType: ItemCollection.GetItem(String,Boolean)\n  fullName: System.Data.Metadata.Edm.ItemCollection.GetItem(String,Boolean)\n- uid: System.Data.Metadata.Edm.ItemCollection.GetItems``1\n  parent: System.Data.Metadata.Edm.ItemCollection\n  isExternal: false\n  name: GetItems()\n  nameWithType: ItemCollection.GetItems()\n  fullName: System.Data.Metadata.Edm.ItemCollection.GetItems()\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{T}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<T>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Metadata.Edm.ItemCollection.GetType(System.String,System.String)\n  parent: System.Data.Metadata.Edm.ItemCollection\n  isExternal: false\n  name: GetType(String,String)\n  nameWithType: ItemCollection.GetType(String,String)\n  fullName: System.Data.Metadata.Edm.ItemCollection.GetType(String,String)\n- uid: System.Data.Metadata.Edm.EdmType\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: EdmType\n  nameWithType: EdmType\n  fullName: System.Data.Metadata.Edm.EdmType\n- uid: System.Data.Metadata.Edm.ItemCollection.GetType(System.String,System.String,System.Boolean)\n  parent: System.Data.Metadata.Edm.ItemCollection\n  isExternal: false\n  name: GetType(String,String,Boolean)\n  nameWithType: ItemCollection.GetType(String,String,Boolean)\n  fullName: System.Data.Metadata.Edm.ItemCollection.GetType(String,String,Boolean)\n- uid: System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(System.String,System.Data.Metadata.Edm.EntityContainer@)\n  parent: System.Data.Metadata.Edm.ItemCollection\n  isExternal: false\n  name: TryGetEntityContainer(String,EntityContainer)\n  nameWithType: ItemCollection.TryGetEntityContainer(String,EntityContainer)\n  fullName: System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(String,EntityContainer)\n- uid: System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.EntityContainer@)\n  parent: System.Data.Metadata.Edm.ItemCollection\n  isExternal: false\n  name: TryGetEntityContainer(String,Boolean,EntityContainer)\n  nameWithType: ItemCollection.TryGetEntityContainer(String,Boolean,EntityContainer)\n  fullName: System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(String,Boolean,EntityContainer)\n- uid: System.Data.Metadata.Edm.ItemCollection.TryGetItem``1(System.String,``0@)\n  parent: System.Data.Metadata.Edm.ItemCollection\n  isExternal: false\n  name: TryGetItem(String,T)\n  nameWithType: ItemCollection.TryGetItem(String,T)\n  fullName: System.Data.Metadata.Edm.ItemCollection.TryGetItem(String,T)\n- uid: System.Data.Metadata.Edm.ItemCollection.TryGetItem``1(System.String,System.Boolean,``0@)\n  parent: System.Data.Metadata.Edm.ItemCollection\n  isExternal: false\n  name: TryGetItem(String,Boolean,T)\n  nameWithType: ItemCollection.TryGetItem(String,Boolean,T)\n  fullName: System.Data.Metadata.Edm.ItemCollection.TryGetItem(String,Boolean,T)\n- uid: System.Data.Metadata.Edm.ItemCollection.TryGetType(System.String,System.String,System.Data.Metadata.Edm.EdmType@)\n  parent: System.Data.Metadata.Edm.ItemCollection\n  isExternal: false\n  name: TryGetType(String,String,EdmType)\n  nameWithType: ItemCollection.TryGetType(String,String,EdmType)\n  fullName: System.Data.Metadata.Edm.ItemCollection.TryGetType(String,String,EdmType)\n- uid: System.Data.Metadata.Edm.ItemCollection.TryGetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.EdmType@)\n  parent: System.Data.Metadata.Edm.ItemCollection\n  isExternal: false\n  name: TryGetType(String,String,Boolean,EdmType)\n  nameWithType: ItemCollection.TryGetType(String,String,Boolean,EdmType)\n  fullName: System.Data.Metadata.Edm.ItemCollection.TryGetType(String,String,Boolean,EdmType)\n- uid: System.Data.Metadata.Edm.ItemCollection.DataSpace*\n  parent: System.Data.Metadata.Edm.ItemCollection\n  isExternal: false\n  name: DataSpace\n  nameWithType: ItemCollection.DataSpace\n- uid: System.Data.Metadata.Edm.ItemCollection.GetEntityContainer*\n  parent: System.Data.Metadata.Edm.ItemCollection\n  isExternal: false\n  name: GetEntityContainer\n  nameWithType: ItemCollection.GetEntityContainer\n- uid: System.Data.Metadata.Edm.ItemCollection.GetFunctions*\n  parent: System.Data.Metadata.Edm.ItemCollection\n  isExternal: false\n  name: GetFunctions\n  nameWithType: ItemCollection.GetFunctions\n- uid: System.Data.Metadata.Edm.ItemCollection.GetItem<T>*\n  parent: System.Data.Metadata.Edm.ItemCollection\n  isExternal: false\n  name: GetItem<T>\n  nameWithType: ItemCollection.GetItem<T>\n- uid: System.Data.Metadata.Edm.ItemCollection.GetItems<T>*\n  parent: System.Data.Metadata.Edm.ItemCollection\n  isExternal: false\n  name: GetItems<T>\n  nameWithType: ItemCollection.GetItems<T>\n- uid: System.Data.Metadata.Edm.ItemCollection.GetType*\n  parent: System.Data.Metadata.Edm.ItemCollection\n  isExternal: false\n  name: GetType\n  nameWithType: ItemCollection.GetType\n- uid: System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer*\n  parent: System.Data.Metadata.Edm.ItemCollection\n  isExternal: false\n  name: TryGetEntityContainer\n  nameWithType: ItemCollection.TryGetEntityContainer\n- uid: System.Data.Metadata.Edm.ItemCollection.TryGetItem<T>*\n  parent: System.Data.Metadata.Edm.ItemCollection\n  isExternal: false\n  name: TryGetItem<T>\n  nameWithType: ItemCollection.TryGetItem<T>\n- uid: System.Data.Metadata.Edm.ItemCollection.TryGetType*\n  parent: System.Data.Metadata.Edm.ItemCollection\n  isExternal: false\n  name: TryGetType\n  nameWithType: ItemCollection.TryGetType\n"}