{"nodes":[{"pos":[859,905],"content":"Provides data for mouse button related events.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides data for mouse button related events.","pos":[0,46]}]},{"pos":[918,1446],"content":"MouseButtonEventArgs is used with the following events: <xref:System.Windows.Input.Mouse.MouseDown>, <xref:System.Windows.Input.Mouse.MouseUp>, <xref:System.Windows.UIElement.MouseLeftButtonDown>, <xref:System.Windows.UIElement.MouseLeftButtonUp>, <xref:System.Windows.UIElement.MouseRightButtonDown>, <xref:System.Windows.UIElement.MouseRightButtonUp>, and the corresponding tunneling events.       The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"MouseButtonEventArgs is used with the following events: <xref:System.Windows.Input.Mouse.MouseDown>, <xref:System.Windows.Input.Mouse.MouseUp>, <xref:System.Windows.UIElement.MouseLeftButtonDown>, <xref:System.Windows.UIElement.MouseLeftButtonUp>, <xref:System.Windows.UIElement.MouseRightButtonDown>, <xref:System.Windows.UIElement.MouseRightButtonUp>, and the corresponding tunneling events.       The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.","pos":[0,526],"nodes":[{"content":"MouseButtonEventArgs is used with the following events: &lt;xref:System.Windows.Input.Mouse.MouseDown&gt;, &lt;xref:System.Windows.Input.Mouse.MouseUp&gt;, &lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt;, &lt;xref:System.Windows.UIElement.MouseLeftButtonUp&gt;, &lt;xref:System.Windows.UIElement.MouseRightButtonDown&gt;, &lt;xref:System.Windows.UIElement.MouseRightButtonUp&gt;, and the corresponding tunneling events.","pos":[0,393],"source":"MouseButtonEventArgs is used with the following events: <xref:System.Windows.Input.Mouse.MouseDown>, <xref:System.Windows.Input.Mouse.MouseUp>, <xref:System.Windows.UIElement.MouseLeftButtonDown>, <xref:System.Windows.UIElement.MouseLeftButtonUp>, <xref:System.Windows.UIElement.MouseRightButtonDown>, <xref:System.Windows.UIElement.MouseRightButtonUp>, and the corresponding tunneling events."},{"content":"The &lt;xref:System.Windows.Input.Mouse&gt; class provides additional properties and methods for determining the state of the mouse.","pos":[400,526],"source":"       The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse."}]}]},{"pos":[3836,4086],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.MouseButtonEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by using the specified <bpt id=\"p2\">&lt;xref href=\"System.Windows.Input.MouseDevice\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, timestamp, and <bpt id=\"p3\">&lt;xref href=\"System.Windows.Input.MouseButton\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> class by using the specified <xref href=\"System.Windows.Input.MouseDevice\"></xref>, timestamp, and <xref href=\"System.Windows.Input.MouseButton\"></xref>."},{"pos":[4332,4384],"content":"The logical Mouse device associated with this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The logical Mouse device associated with this event.","pos":[0,52]}]},{"pos":[4449,4482],"content":"The time when the input occurred.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time when the input occurred.","pos":[0,33]}]},{"pos":[4564,4612],"content":"The mouse button whose state is being described.","needQuote":true,"needEscape":true,"nodes":[{"content":"The mouse button whose state is being described.","pos":[0,48]}]},{"pos":[5477,5786],"content":"Initializes a new instance of the <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> class by using the specified <xref href=\"System.Windows.Input.MouseDevice\"></xref>, timestamp, <xref href=\"System.Windows.Input.MouseButton\"></xref>, and <xref href=\"System.Windows.Input.StylusDevice\"></xref>.  .","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.MouseButtonEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by using the specified <bpt id=\"p2\">&lt;xref href=\"System.Windows.Input.MouseDevice\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, timestamp, <bpt id=\"p3\">&lt;xref href=\"System.Windows.Input.MouseButton\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, and <bpt id=\"p4\">&lt;xref href=\"System.Windows.Input.StylusDevice\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","pos":[0,306],"source":"Initializes a new instance of the <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> class by using the specified <xref href=\"System.Windows.Input.MouseDevice\"></xref>, timestamp, <xref href=\"System.Windows.Input.MouseButton\"></xref>, and <xref href=\"System.Windows.Input.StylusDevice\"></xref>."},{"content":".","pos":[308,309]}]},{"pos":[6080,6132],"content":"The logical mouse device associated with this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The logical mouse device associated with this event.","pos":[0,52]}]},{"pos":[6197,6225],"content":"The time the event occurred.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time the event occurred.","pos":[0,28]}]},{"pos":[6307,6345],"content":"The button associated with this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The button associated with this event.","pos":[0,38]}]},{"pos":[6434,6479],"content":"The stylus device associated with this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The stylus device associated with this event.","pos":[0,45]}]},{"pos":[6964,7019],"content":"Gets the state of the button associated with the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the state of the button associated with the event.","pos":[0,55]}]},{"pos":[7031,7157],"content":"The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Windows.Input.Mouse&gt; class provides additional properties and methods for determining the state of the mouse.","pos":[0,126],"source":"The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse."}]},{"pos":[7883,7910],"content":"The state the button is in.","needQuote":true,"needEscape":true,"nodes":[{"content":"The state the button is in.","pos":[0,27]}]},{"pos":[8411,8453],"content":"Gets the button associated with the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the button associated with the event.","pos":[0,42]}]},{"pos":[8465,8591],"content":"The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Windows.Input.Mouse&gt; class provides additional properties and methods for determining the state of the mouse.","pos":[0,126],"source":"The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse."}]},{"pos":[9304,9333],"content":"The button which was pressed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The button which was pressed.","pos":[0,29]}]},{"pos":[9821,9869],"content":"Gets the number of times the button was clicked.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of times the button was clicked.","pos":[0,48]}]},{"pos":[9881,10272],"content":"One use of ClickCount is to determine whether a double mouse click has occurred.  Some classes expose events for a double-click, such as the <xref:System.Windows.Controls.Control.MouseDoubleClick> event on the <xref:System.Windows.Controls.Control> class. When a double click event is not exposed on a class, a double click can be detected by using the ClickCount property on the event data.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"One use of ClickCount is to determine whether a double mouse click has occurred.  Some classes expose events for a double-click, such as the <xref:System.Windows.Controls.Control.MouseDoubleClick> event on the <xref:System.Windows.Controls.Control> class. When a double click event is not exposed on a class, a double click can be detected by using the ClickCount property on the event data.","pos":[0,391],"nodes":[{"content":"One use of ClickCount is to determine whether a double mouse click has occurred.","pos":[0,80]},{"content":"Some classes expose events for a double-click, such as the &lt;xref:System.Windows.Controls.Control.MouseDoubleClick&gt; event on the &lt;xref:System.Windows.Controls.Control&gt; class.","pos":[82,255],"source":"  Some classes expose events for a double-click, such as the <xref:System.Windows.Controls.Control.MouseDoubleClick> event on the <xref:System.Windows.Controls.Control> class."},{"content":"When a double click event is not exposed on a class, a double click can be detected by using the ClickCount property on the event data.","pos":[256,391]}]}]},{"pos":[10919,10968],"content":"The number of times the mouse button was clicked.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of times the mouse button was clicked.","pos":[0,49]}]},{"pos":[11604,11694],"content":"Invokes event handlers in a type-specific way, which can increase event system efficiency.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invokes event handlers in a type-specific way, which can increase event system efficiency.","pos":[0,90]}]},{"pos":[11706,12023],"content":"This implementation casts the generic handler as a <xref:System.Windows.Input.MouseEventHandler> and then invokes it. For details on this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This implementation casts the generic handler as a &lt;xref:System.Windows.Input.MouseEventHandler&gt; and then invokes it.","pos":[0,117],"source":"This implementation casts the generic handler as a <xref:System.Windows.Input.MouseEventHandler> and then invokes it."},{"content":"For details on this implementation pattern and the reasons for it, see &lt;xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A&gt; and <bpt id=\"p1\">[</bpt>Routed Events Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[118,317],"source":" For details on this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[12227,12278],"content":"The generic handler to call in a type-specific way.","needQuote":true,"needEscape":true,"nodes":[{"content":"The generic handler to call in a type-specific way.","pos":[0,51]}]},{"pos":[12348,12382],"content":"The target to call the handler on.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target to call the handler on.","pos":[0,34]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.MouseButtonEventArgs\n  id: MouseButtonEventArgs\n  children:\n  - System.Windows.Input.MouseButtonEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.MouseButton)\n  - System.Windows.Input.MouseButtonEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.MouseButton,System.Windows.Input.StylusDevice)\n  - System.Windows.Input.MouseButtonEventArgs.ButtonState\n  - System.Windows.Input.MouseButtonEventArgs.ChangedButton\n  - System.Windows.Input.MouseButtonEventArgs.ClickCount\n  - System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  langs:\n  - csharp\n  name: MouseButtonEventArgs\n  nameWithType: MouseButtonEventArgs\n  fullName: System.Windows.Input.MouseButtonEventArgs\n  type: Class\n  summary: Provides data for mouse button related events.\n  remarks: \"MouseButtonEventArgs is used with the following events: <xref:System.Windows.Input.Mouse.MouseDown>, <xref:System.Windows.Input.Mouse.MouseUp>, <xref:System.Windows.UIElement.MouseLeftButtonDown>, <xref:System.Windows.UIElement.MouseLeftButtonUp>, <xref:System.Windows.UIElement.MouseRightButtonDown>, <xref:System.Windows.UIElement.MouseRightButtonUp>, and the corresponding tunneling events.  \\n  \\n The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.\"\n  example:\n  - \"The following example creates a mouse button event handler that changes the color of the object that raised the event.  The color chosen depends on the mouse button which was pressed.  The <xref:System.Windows.Input.MouseButtonEventArgs.ChangedButton%2A> property is checked to determine which button was pressed.  \\n  \\n [!code-vb[mousesnippetsample#MouseEventArgsChangedButton](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseeventargschangedbutton)]\\n [!code-cs[mousesnippetsample#MouseEventArgsChangedButton](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseeventargschangedbutton)]\"\n  syntax:\n    content: 'public class MouseButtonEventArgs : System.Windows.Input.MouseEventArgs'\n  inheritance:\n  - System.EventArgs\n  - System.Windows.RoutedEventArgs\n  - System.Windows.Input.InputEventArgs\n  - System.Windows.Input.MouseEventArgs\n  implements: []\n  inheritedMembers:\n  - System.Windows.Input.InputEventArgs.Device\n  - System.Windows.Input.InputEventArgs.Timestamp\n  - System.Windows.Input.MouseEventArgs.GetPosition(System.Windows.IInputElement)\n  - System.Windows.Input.MouseEventArgs.LeftButton\n  - System.Windows.Input.MouseEventArgs.MiddleButton\n  - System.Windows.Input.MouseEventArgs.MouseDevice\n  - System.Windows.Input.MouseEventArgs.RightButton\n  - System.Windows.Input.MouseEventArgs.StylusDevice\n  - System.Windows.Input.MouseEventArgs.XButton1\n  - System.Windows.Input.MouseEventArgs.XButton2\n  - System.Windows.RoutedEventArgs.Handled\n  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)\n  - System.Windows.RoutedEventArgs.OriginalSource\n  - System.Windows.RoutedEventArgs.RoutedEvent\n  - System.Windows.RoutedEventArgs.Source\n  platform:\n  - net462\n- uid: System.Windows.Input.MouseButtonEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.MouseButton)\n  id: '#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.MouseButton)'\n  parent: System.Windows.Input.MouseButtonEventArgs\n  langs:\n  - csharp\n  name: MouseButtonEventArgs(MouseDevice,Int32,MouseButton)\n  nameWithType: MouseButtonEventArgs.MouseButtonEventArgs(MouseDevice,Int32,MouseButton)\n  fullName: System.Windows.Input.MouseButtonEventArgs.MouseButtonEventArgs(MouseDevice,Int32,MouseButton)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> class by using the specified <xref href=\"System.Windows.Input.MouseDevice\"></xref>, timestamp, and <xref href=\"System.Windows.Input.MouseButton\"></xref>.\n  syntax:\n    content: public MouseButtonEventArgs (System.Windows.Input.MouseDevice mouse, int timestamp, System.Windows.Input.MouseButton button);\n    parameters:\n    - id: mouse\n      type: System.Windows.Input.MouseDevice\n      description: The logical Mouse device associated with this event.\n    - id: timestamp\n      type: System.Int32\n      description: The time when the input occurred.\n    - id: button\n      type: System.Windows.Input.MouseButton\n      description: The mouse button whose state is being described.\n  overload: System.Windows.Input.MouseButtonEventArgs.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.MouseButtonEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.MouseButton,System.Windows.Input.StylusDevice)\n  id: '#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.MouseButton,System.Windows.Input.StylusDevice)'\n  parent: System.Windows.Input.MouseButtonEventArgs\n  langs:\n  - csharp\n  name: MouseButtonEventArgs(MouseDevice,Int32,MouseButton,StylusDevice)\n  nameWithType: MouseButtonEventArgs.MouseButtonEventArgs(MouseDevice,Int32,MouseButton,StylusDevice)\n  fullName: System.Windows.Input.MouseButtonEventArgs.MouseButtonEventArgs(MouseDevice,Int32,MouseButton,StylusDevice)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> class by using the specified <xref href=\"System.Windows.Input.MouseDevice\"></xref>, timestamp, <xref href=\"System.Windows.Input.MouseButton\"></xref>, and <xref href=\"System.Windows.Input.StylusDevice\"></xref>.  .\n  syntax:\n    content: public MouseButtonEventArgs (System.Windows.Input.MouseDevice mouse, int timestamp, System.Windows.Input.MouseButton button, System.Windows.Input.StylusDevice stylusDevice);\n    parameters:\n    - id: mouse\n      type: System.Windows.Input.MouseDevice\n      description: The logical mouse device associated with this event.\n    - id: timestamp\n      type: System.Int32\n      description: The time the event occurred.\n    - id: button\n      type: System.Windows.Input.MouseButton\n      description: The button associated with this event.\n    - id: stylusDevice\n      type: System.Windows.Input.StylusDevice\n      description: The stylus device associated with this event.\n  overload: System.Windows.Input.MouseButtonEventArgs.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.MouseButtonEventArgs.ButtonState\n  id: ButtonState\n  parent: System.Windows.Input.MouseButtonEventArgs\n  langs:\n  - csharp\n  name: ButtonState\n  nameWithType: MouseButtonEventArgs.ButtonState\n  fullName: System.Windows.Input.MouseButtonEventArgs.ButtonState\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the state of the button associated with the event.\n  remarks: The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.\n  example:\n  - \"The following example creates a mouse button event handler that changes the color of the object that handles the event.  The color that is chosen depends on whether the mouse button was pressed or released.  \\n  \\n [!code-vb[mousesnippetsample#MouseEventArgsButtonStatePressed](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseeventargsbuttonstatepressed)]\\n [!code-cs[mousesnippetsample#MouseEventArgsButtonStatePressed](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseeventargsbuttonstatepressed)]\"\n  syntax:\n    content: public System.Windows.Input.MouseButtonState ButtonState { get; }\n    return:\n      type: System.Windows.Input.MouseButtonState\n      description: The state the button is in.\n  overload: System.Windows.Input.MouseButtonEventArgs.ButtonState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.MouseButtonEventArgs.ChangedButton\n  id: ChangedButton\n  parent: System.Windows.Input.MouseButtonEventArgs\n  langs:\n  - csharp\n  name: ChangedButton\n  nameWithType: MouseButtonEventArgs.ChangedButton\n  fullName: System.Windows.Input.MouseButtonEventArgs.ChangedButton\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the button associated with the event.\n  remarks: The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.\n  example:\n  - \"The following example creates a mouse button event handler that changes the color of an object depending on the mouse button which was pressed.  The ChangedButton property is checked to determine which button was pressed.  \\n  \\n [!code-vb[mousesnippetsample#MouseEventArgsChangedButton](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseeventargschangedbutton)]\\n [!code-cs[mousesnippetsample#MouseEventArgsChangedButton](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseeventargschangedbutton)]\"\n  syntax:\n    content: public System.Windows.Input.MouseButton ChangedButton { get; }\n    return:\n      type: System.Windows.Input.MouseButton\n      description: The button which was pressed.\n  overload: System.Windows.Input.MouseButtonEventArgs.ChangedButton*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.MouseButtonEventArgs.ClickCount\n  id: ClickCount\n  parent: System.Windows.Input.MouseButtonEventArgs\n  langs:\n  - csharp\n  name: ClickCount\n  nameWithType: MouseButtonEventArgs.ClickCount\n  fullName: System.Windows.Input.MouseButtonEventArgs.ClickCount\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the number of times the button was clicked.\n  remarks: One use of ClickCount is to determine whether a double mouse click has occurred.  Some classes expose events for a double-click, such as the <xref:System.Windows.Controls.Control.MouseDoubleClick> event on the <xref:System.Windows.Controls.Control> class. When a double click event is not exposed on a class, a double click can be detected by using the ClickCount property on the event data.\n  example:\n  - \"The following example creates a <xref:System.Windows.Input.MouseButtonEventHandler> which determines if a single, double, or triple click occurred.  ClickCount property is used to determine the number of clicks.  \\n  \\n [!code-vb[mousesnippetsample#MouseClickCountDoubleClick](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseclickcountdoubleclick)]\\n [!code-cs[mousesnippetsample#MouseClickCountDoubleClick](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseclickcountdoubleclick)]\"\n  syntax:\n    content: public int ClickCount { get; }\n    return:\n      type: System.Int32\n      description: The number of times the mouse button was clicked.\n  overload: System.Windows.Input.MouseButtonEventArgs.ClickCount*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  id: InvokeEventHandler(System.Delegate,System.Object)\n  parent: System.Windows.Input.MouseButtonEventArgs\n  langs:\n  - csharp\n  name: InvokeEventHandler(Delegate,Object)\n  nameWithType: MouseButtonEventArgs.InvokeEventHandler(Delegate,Object)\n  fullName: System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler(Delegate,Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Invokes event handlers in a type-specific way, which can increase event system efficiency.\n  remarks: This implementation casts the generic handler as a <xref:System.Windows.Input.MouseEventHandler> and then invokes it. For details on this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);\n    parameters:\n    - id: genericHandler\n      type: System.Delegate\n      description: The generic handler to call in a type-specific way.\n    - id: genericTarget\n      type: System.Object\n      description: The target to call the handler on.\n  overload: System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Input.MouseEventArgs\n  isExternal: false\n  name: System.Windows.Input.MouseEventArgs\n- uid: System.Windows.Input.MouseButtonEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.MouseButton)\n  parent: System.Windows.Input.MouseButtonEventArgs\n  isExternal: false\n  name: MouseButtonEventArgs(MouseDevice,Int32,MouseButton)\n  nameWithType: MouseButtonEventArgs.MouseButtonEventArgs(MouseDevice,Int32,MouseButton)\n  fullName: System.Windows.Input.MouseButtonEventArgs.MouseButtonEventArgs(MouseDevice,Int32,MouseButton)\n- uid: System.Windows.Input.MouseDevice\n  parent: System.Windows.Input\n  isExternal: false\n  name: MouseDevice\n  nameWithType: MouseDevice\n  fullName: System.Windows.Input.MouseDevice\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Input.MouseButton\n  parent: System.Windows.Input\n  isExternal: false\n  name: MouseButton\n  nameWithType: MouseButton\n  fullName: System.Windows.Input.MouseButton\n- uid: System.Windows.Input.MouseButtonEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.MouseButton,System.Windows.Input.StylusDevice)\n  parent: System.Windows.Input.MouseButtonEventArgs\n  isExternal: false\n  name: MouseButtonEventArgs(MouseDevice,Int32,MouseButton,StylusDevice)\n  nameWithType: MouseButtonEventArgs.MouseButtonEventArgs(MouseDevice,Int32,MouseButton,StylusDevice)\n  fullName: System.Windows.Input.MouseButtonEventArgs.MouseButtonEventArgs(MouseDevice,Int32,MouseButton,StylusDevice)\n- uid: System.Windows.Input.StylusDevice\n  parent: System.Windows.Input\n  isExternal: false\n  name: StylusDevice\n  nameWithType: StylusDevice\n  fullName: System.Windows.Input.StylusDevice\n- uid: System.Windows.Input.MouseButtonEventArgs.ButtonState\n  parent: System.Windows.Input.MouseButtonEventArgs\n  isExternal: false\n  name: ButtonState\n  nameWithType: MouseButtonEventArgs.ButtonState\n  fullName: System.Windows.Input.MouseButtonEventArgs.ButtonState\n- uid: System.Windows.Input.MouseButtonState\n  parent: System.Windows.Input\n  isExternal: false\n  name: MouseButtonState\n  nameWithType: MouseButtonState\n  fullName: System.Windows.Input.MouseButtonState\n- uid: System.Windows.Input.MouseButtonEventArgs.ChangedButton\n  parent: System.Windows.Input.MouseButtonEventArgs\n  isExternal: false\n  name: ChangedButton\n  nameWithType: MouseButtonEventArgs.ChangedButton\n  fullName: System.Windows.Input.MouseButtonEventArgs.ChangedButton\n- uid: System.Windows.Input.MouseButtonEventArgs.ClickCount\n  parent: System.Windows.Input.MouseButtonEventArgs\n  isExternal: false\n  name: ClickCount\n  nameWithType: MouseButtonEventArgs.ClickCount\n  fullName: System.Windows.Input.MouseButtonEventArgs.ClickCount\n- uid: System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  parent: System.Windows.Input.MouseButtonEventArgs\n  isExternal: false\n  name: InvokeEventHandler(Delegate,Object)\n  nameWithType: MouseButtonEventArgs.InvokeEventHandler(Delegate,Object)\n  fullName: System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler(Delegate,Object)\n- uid: System.Delegate\n  parent: System\n  isExternal: true\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Input.MouseButtonEventArgs.#ctor*\n  parent: System.Windows.Input.MouseButtonEventArgs\n  isExternal: false\n  name: MouseButtonEventArgs\n  nameWithType: MouseButtonEventArgs.MouseButtonEventArgs\n- uid: System.Windows.Input.MouseButtonEventArgs.ButtonState*\n  parent: System.Windows.Input.MouseButtonEventArgs\n  isExternal: false\n  name: ButtonState\n  nameWithType: MouseButtonEventArgs.ButtonState\n- uid: System.Windows.Input.MouseButtonEventArgs.ChangedButton*\n  parent: System.Windows.Input.MouseButtonEventArgs\n  isExternal: false\n  name: ChangedButton\n  nameWithType: MouseButtonEventArgs.ChangedButton\n- uid: System.Windows.Input.MouseButtonEventArgs.ClickCount*\n  parent: System.Windows.Input.MouseButtonEventArgs\n  isExternal: false\n  name: ClickCount\n  nameWithType: MouseButtonEventArgs.ClickCount\n- uid: System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler*\n  parent: System.Windows.Input.MouseButtonEventArgs\n  isExternal: false\n  name: InvokeEventHandler\n  nameWithType: MouseButtonEventArgs.InvokeEventHandler\n"}