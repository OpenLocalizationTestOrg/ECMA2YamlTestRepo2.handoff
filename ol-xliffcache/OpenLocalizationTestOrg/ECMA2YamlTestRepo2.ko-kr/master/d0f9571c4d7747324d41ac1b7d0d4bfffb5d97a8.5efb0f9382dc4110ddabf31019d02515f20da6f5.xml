{"nodes":[{"pos":[1388,1594],"content":"An abstract class that provides a base for <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.Inline\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> elements that are used to anchor <bpt id=\"p2\">&lt;xref href=\"System.Windows.Documents.Block\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> elements to flow content.","needQuote":true,"needEscape":true,"source":"An abstract class that provides a base for <xref href=\"System.Windows.Documents.Inline\"></xref> elements that are used to anchor <xref href=\"System.Windows.Documents.Block\"></xref> elements to flow content."},{"pos":[33626,34056],"content":"Initializes base class values when called by a derived class, taking a specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.Block\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object as the initial contents of the new descendant of <bpt id=\"p2\">&lt;xref href=\"System.Windows.Documents.AnchoredBlock\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, and a <bpt id=\"p3\">&lt;xref href=\"System.Windows.Documents.TextPointer\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> specifying an insertion position for the new <bpt id=\"p4\">&lt;xref href=\"System.Windows.Documents.AnchoredBlock\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> descendant.","needQuote":true,"needEscape":true,"source":"Initializes base class values when called by a derived class, taking a specified <xref href=\"System.Windows.Documents.Block\"></xref> object as the initial contents of the new descendant of <xref href=\"System.Windows.Documents.AnchoredBlock\"></xref>, and a <xref href=\"System.Windows.Documents.TextPointer\"></xref> specifying an insertion position for the new <xref href=\"System.Windows.Documents.AnchoredBlock\"></xref> descendant."},{"pos":[34294,34573],"content":"A <xref href=\"System.Windows.Documents.Block\"></xref> object specifying the initial contents of the new element.  This parameter may be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, in which case no <xref href=\"System.Windows.Documents.Block\"></xref> is inserted.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.Block\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object specifying the initial contents of the new element.","pos":[0,112],"source":"A <xref href=\"System.Windows.Documents.Block\"></xref> object specifying the initial contents of the new element."},{"content":"This parameter may be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, in which case no <bpt id=\"p2\">&lt;xref href=\"System.Windows.Documents.Block\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is inserted.","pos":[114,279],"source":"  This parameter may be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, in which case no <xref href=\"System.Windows.Documents.Block\"></xref> is inserted."}]},{"pos":[34670,34906],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.TextPointer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> specifying an insertion position at which to insert the element after it is created, or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> for no automatic insertion.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Documents.TextPointer\"></xref> specifying an insertion position at which to insert the element after it is created, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> for no automatic insertion."},{"pos":[35356,35553],"content":"Gets a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.BlockCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing the top-level <bpt id=\"p2\">&lt;xref href=\"System.Windows.Documents.Block\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> elements that comprise the contents of the element.","needQuote":true,"needEscape":true,"source":"Gets a <xref href=\"System.Windows.Documents.BlockCollection\"></xref> containing the top-level <xref href=\"System.Windows.Documents.Block\"></xref> elements that comprise the contents of the element."},{"pos":[35726,35956],"content":"A <xref href=\"System.Windows.Documents.BlockCollection\"></xref> containing the <xref href=\"System.Windows.Documents.Block\"></xref> elements that comprise the contents of the element.       This property has no default value.","needQuote":false,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.BlockCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Documents.Block\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> elements that comprise the contents of the element.","pos":[0,182],"source":"A <xref href=\"System.Windows.Documents.BlockCollection\"></xref> containing the <xref href=\"System.Windows.Documents.Block\"></xref> elements that comprise the contents of the element."},{"content":"This property has no default value.","pos":[189,224]}]},{"pos":[36433,36538],"content":"Gets or sets a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Brush\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use when painting the element's border.","needQuote":true,"needEscape":true,"source":"Gets or sets a <xref href=\"System.Windows.Media.Brush\"></xref> to use when painting the element's border."},{"pos":[36551,36975],"content":"For a table of swatches that show the available pre-defined brush colors, see <xref:System.Windows.Media.Brushes>.      <a name=\"dependencyPropertyInfo_BorderBrush\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Documents.AnchoredBlock.BorderBrushProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"For a table of swatches that show the available pre-defined brush colors, see &lt;xref:System.Windows.Media.Brushes&gt;.","pos":[0,114],"source":"For a table of swatches that show the available pre-defined brush colors, see <xref:System.Windows.Media.Brushes>."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_BorderBrush\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Documents.AnchoredBlock.BorderBrushProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;|","pos":[120,414],"source":"<a name=\"dependencyPropertyInfo_BorderBrush\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Documents.AnchoredBlock.BorderBrushProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|"}]},{"pos":[38010,38105],"content":"The brush used to apply to the element's border.       The default value is a **null** brush.","needQuote":false,"needEscape":true,"nodes":[{"content":"The brush used to apply to the element's border.","pos":[0,48]},{"content":"The default value is a <bpt id=\"p1\">**</bpt>null<ept id=\"p1\">**</ept> brush.","pos":[55,93],"source":"       The default value is a **null** brush."}]},{"pos":[38624,38718],"content":"Identifies the <xref:System.Windows.Documents.AnchoredBlock.BorderBrush*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Documents.AnchoredBlock.BorderBrush*&gt; dependency property.","pos":[0,94],"source":"Identifies the <xref:System.Windows.Documents.AnchoredBlock.BorderBrush*> dependency property."}]},{"pos":[38897,38909],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[39346,39396],"content":"Gets or sets the border thickness for the element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the border thickness for the element.","pos":[0,50]}]},{"pos":[39409,41758],"content":"<a name=\"xamlAttributeUsage_BorderThickness\"></a>    ## XAML Attribute Usage      ```   <object BorderThickness=\"uniformThickness\"/>   - or -   <object BorderThickness=\"independentThickness\"/>   - or -   <object BorderThickness=\"qualifiedUniformThickness\"/>   - or -   <object BorderThickness=\"qualifiedIndependentThickness\"/>   ```      <a name=\"xamlValues_BorderThickness\"></a>    ## XAML Values    *uniformThickness*    String representation of a single <xref:System.Double> value to apply uniformly to all four thickness dimensions.  For example, a value of `\"10\"` is equivalent to a value of `\"10,10,10,10\"`.  An unqualified value is measured in device independent pixels. Strings need not explicitly include decimal points.       *independentThickness*    String representation of four ordered <xref:System.Double> values corresponding to independent thickness dimensions for left, top, right, and bottom, in this order.  The four values must be separated with commas; spaces are not allowed.  For example, \"5,10,15,20\" results in 5 pixels of border to the left of content, 10 pixels of border above content, 15 pixels of border to the right of content, and 20 pixels of border below the content.       *qualifiedUniformThickness*    A value described by *uniformThickness* followed by one of the following unit specifiers: `px`, `in`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       For example, `\"1in\"` provides uniform border of 1 inch in all directions.       *qualifiedIndependentThickness*    A value described by *independentThickness*, with each independent value followed by one of the following unit specifiers: `px`, `in`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       For example, `\"1.5in,0.8in,1.5in,0.8in\"`.  Unit specifiers may be mixed or omitted from one or more values.      <a name=\"dependencyPropertyInfo_BorderThickness\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Documents.AnchoredBlock.BorderThicknessProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<bpt id=\"p1\">&lt;a name=\"xamlAttributeUsage_BorderThickness\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id=\"ph1\">```   &lt;object BorderThickness=\"uniformThickness\"/&gt;   - or -   &lt;object BorderThickness=\"independentThickness\"/&gt;   - or -   &lt;object BorderThickness=\"qualifiedUniformThickness\"/&gt;   - or -   &lt;object BorderThickness=\"qualifiedIndependentThickness\"/&gt;   ```</ph>      <bpt id=\"p2\">&lt;a name=\"xamlValues_BorderThickness\"&gt;</bpt><ept id=\"p2\">&lt;/a&gt;</ept>    ## XAML Values    <bpt id=\"p3\">*</bpt>uniformThickness<ept id=\"p3\">*</ept>    String representation of a single &lt;xref:System.Double&gt; value to apply uniformly to all four thickness dimensions.","pos":[0,536],"source":"<a name=\"xamlAttributeUsage_BorderThickness\"></a>    ## XAML Attribute Usage      ```   <object BorderThickness=\"uniformThickness\"/>   - or -   <object BorderThickness=\"independentThickness\"/>   - or -   <object BorderThickness=\"qualifiedUniformThickness\"/>   - or -   <object BorderThickness=\"qualifiedIndependentThickness\"/>   ```      <a name=\"xamlValues_BorderThickness\"></a>    ## XAML Values    *uniformThickness*    String representation of a single <xref:System.Double> value to apply uniformly to all four thickness dimensions."},{"content":"For example, a value of <ph id=\"ph1\">`\"10\"`</ph> is equivalent to a value of <ph id=\"ph2\">`\"10,10,10,10\"`</ph>.","pos":[538,613],"source":"  For example, a value of `\"10\"` is equivalent to a value of `\"10,10,10,10\"`."},{"content":"An unqualified value is measured in device independent pixels.","pos":[615,677]},{"content":"Strings need not explicitly include decimal points.","pos":[678,729]},{"content":"<bpt id=\"p1\">*</bpt>independentThickness<ept id=\"p1\">*</ept>    String representation of four ordered &lt;xref:System.Double&gt; values corresponding to independent thickness dimensions for left, top, right, and bottom, in this order.","pos":[736,926],"source":"*independentThickness*    String representation of four ordered <xref:System.Double> values corresponding to independent thickness dimensions for left, top, right, and bottom, in this order."},{"content":"The four values must be separated with commas; spaces are not allowed.","pos":[928,998]},{"content":"For example, \"5,10,15,20\" results in 5 pixels of border to the left of content, 10 pixels of border above content, 15 pixels of border to the right of content, and 20 pixels of border below the content.","pos":[1000,1202]},{"content":"<bpt id=\"p1\">*</bpt>qualifiedUniformThickness<ept id=\"p1\">*</ept>    A value described by <bpt id=\"p2\">*</bpt>uniformThickness<ept id=\"p2\">*</ept> followed by one of the following unit specifiers: <ph id=\"ph1\">`px`</ph>, <ph id=\"ph2\">`in`</ph>.","pos":[1209,1341],"source":"*qualifiedUniformThickness*    A value described by *uniformThickness* followed by one of the following unit specifiers: `px`, `in`."},{"content":"<ph id=\"ph1\">`px`</ph> (default) is <ph id=\"ph2\">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>       <ph id=\"ph3\">`in`</ph> is inches; 1in==96px       For example, <ph id=\"ph4\">`\"1in\"`</ph> provides uniform border of 1 inch in all directions.","pos":[1348,1551],"source":"`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       For example, `\"1in\"` provides uniform border of 1 inch in all directions."},{"content":"<bpt id=\"p1\">*</bpt>qualifiedIndependentThickness<ept id=\"p1\">*</ept>    A value described by <bpt id=\"p2\">*</bpt>independentThickness<ept id=\"p2\">*</ept>, with each independent value followed by one of the following unit specifiers: <ph id=\"ph1\">`px`</ph>, <ph id=\"ph2\">`in`</ph>.","pos":[1558,1727],"source":"*qualifiedIndependentThickness*    A value described by *independentThickness*, with each independent value followed by one of the following unit specifiers: `px`, `in`."},{"content":"<ph id=\"ph1\">`px`</ph> (default) is <ph id=\"ph2\">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>       <ph id=\"ph3\">`in`</ph> is inches; 1in==96px       For example, <ph id=\"ph4\">`\"1.5in,0.8in,1.5in,0.8in\"`</ph>.","pos":[1734,1905],"source":"`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       For example, `\"1.5in,0.8in,1.5in,0.8in\"`."},{"content":"Unit specifiers may be mixed or omitted from one or more values.","pos":[1907,1971]},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_BorderThickness\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Documents.AnchoredBlock.BorderThicknessProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|","pos":[1977,2280],"source":"<a name=\"dependencyPropertyInfo_BorderThickness\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Documents.AnchoredBlock.BorderThicknessProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|"}]},{"pos":[42838,43037],"content":"A <xref href=\"System.Windows.Thickness\"></xref> structure specifying the amount of border to apply, in device independent pixels.       The default value is a uniform thickness of zero (**0.0**).","needQuote":false,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Thickness\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure specifying the amount of border to apply, in device independent pixels.","pos":[0,129],"source":"A <xref href=\"System.Windows.Thickness\"></xref> structure specifying the amount of border to apply, in device independent pixels."},{"content":"The default value is a uniform thickness of zero (<bpt id=\"p1\">**</bpt>0.0<ept id=\"p1\">**</ept>).","pos":[136,195],"source":"       The default value is a uniform thickness of zero (**0.0**)."}]},{"pos":[43580,43678],"content":"Identifies the <xref:System.Windows.Documents.AnchoredBlock.BorderThickness*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Documents.AnchoredBlock.BorderThickness*&gt; dependency property.","pos":[0,98],"source":"Identifies the <xref:System.Windows.Documents.AnchoredBlock.BorderThickness*> dependency property."}]},{"pos":[43861,43873],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[44285,44333],"content":"Gets or sets the height of each line of content.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the height of each line of content.","pos":[0,48]}]},{"pos":[44346,46228],"content":"Changing this value does not change the height of the associated text; rather, it changes the height of the line that contains the text.       In addition to this property, the layout of lines in a <xref:System.Windows.Documents.AnchoredBlock> is affected by its <xref:System.Windows.Documents.AnchoredBlock.LineStackingStrategy%2A> property.      <a name=\"xamlAttributeUsage_LineHeight\"></a>    ## XAML Attribute Usage      ```   <object LineHeight=\"double\"/>   - or -   <object LineHeight=\"qualifiedDouble\"/>   - or -   <object LineHeight=\"Auto\"/>   ```      <a name=\"xamlValues_LineHeight\"></a>    ## XAML Values    *double*    String representation of a <xref:System.Double> value equal to or greater than `0.0034` but equal to or less than `160000`. An unqualified value is measured in device independent pixels. Strings need not explicitly include decimal points.       *qualifiedDouble*    A *double* value as described above, (excepting `Auto`) followed by one of the following unit specifiers: `px`, `in`, `cm`, `pt`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       `cm` is centimeters; 1cm==(96/2.54) px       `pt` is points; 1pt==(96/72) px       Auto    Causes the line height is determined automatically from the current font characteristics.  Equivalent to a property value of <xref:System.Double.NaN>.      <a name=\"dependencyPropertyInfo_LineHeight\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Documents.AnchoredBlock.LineHeightProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Changing this value does not change the height of the associated text; rather, it changes the height of the line that contains the text.","pos":[0,136]},{"content":"In addition to this property, the layout of lines in a &lt;xref:System.Windows.Documents.AnchoredBlock&gt; is affected by its &lt;xref:System.Windows.Documents.AnchoredBlock.LineStackingStrategy%2A&gt; property.","pos":[143,342],"source":"       In addition to this property, the layout of lines in a <xref:System.Windows.Documents.AnchoredBlock> is affected by its <xref:System.Windows.Documents.AnchoredBlock.LineStackingStrategy%2A> property."},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlAttributeUsage_LineHeight\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id=\"ph1\">```   &lt;object LineHeight=\"double\"/&gt;   - or -   &lt;object LineHeight=\"qualifiedDouble\"/&gt;   - or -   &lt;object LineHeight=\"Auto\"/&gt;   ```</ph>      <bpt id=\"p2\">&lt;a name=\"xamlValues_LineHeight\"&gt;</bpt><ept id=\"p2\">&lt;/a&gt;</ept>    ## XAML Values    <bpt id=\"p3\">*</bpt>double<ept id=\"p3\">*</ept>    String representation of a &lt;xref:System.Double&gt; value equal to or greater than <ph id=\"ph2\">`0.0034`</ph> but equal to or less than <ph id=\"ph3\">`160000`</ph>.","pos":[348,754],"source":"<a name=\"xamlAttributeUsage_LineHeight\"></a>    ## XAML Attribute Usage      ```   <object LineHeight=\"double\"/>   - or -   <object LineHeight=\"qualifiedDouble\"/>   - or -   <object LineHeight=\"Auto\"/>   ```      <a name=\"xamlValues_LineHeight\"></a>    ## XAML Values    *double*    String representation of a <xref:System.Double> value equal to or greater than `0.0034` but equal to or less than `160000`."},{"content":"An unqualified value is measured in device independent pixels.","pos":[755,817]},{"content":"Strings need not explicitly include decimal points.","pos":[818,869]},{"content":"<bpt id=\"p1\">*</bpt>qualifiedDouble<ept id=\"p1\">*</ept>    A <bpt id=\"p2\">*</bpt>double<ept id=\"p2\">*</ept> value as described above, (excepting <ph id=\"ph1\">`Auto`</ph>) followed by one of the following unit specifiers: <ph id=\"ph2\">`px`</ph>, <ph id=\"ph3\">`in`</ph>, <ph id=\"ph4\">`cm`</ph>, <ph id=\"ph5\">`pt`</ph>.","pos":[876,1026],"source":"*qualifiedDouble*    A *double* value as described above, (excepting `Auto`) followed by one of the following unit specifiers: `px`, `in`, `cm`, `pt`."},{"content":"<ph id=\"ph1\">`px`</ph> (default) is <ph id=\"ph2\">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>       <ph id=\"ph3\">`in`</ph> is inches; 1in==96px       <ph id=\"ph4\">`cm`</ph> is centimeters; 1cm==(96/2.54) px       <ph id=\"ph5\">`pt`</ph> is points; 1pt==(96/72) px       Auto    Causes the line height is determined automatically from the current font characteristics.","pos":[1033,1343],"source":"`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       `cm` is centimeters; 1cm==(96/2.54) px       `pt` is points; 1pt==(96/72) px       Auto    Causes the line height is determined automatically from the current font characteristics."},{"content":"Equivalent to a property value of &lt;xref:System.Double.NaN&gt;.","pos":[1345,1404],"source":"  Equivalent to a property value of <xref:System.Double.NaN>."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_LineHeight\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Documents.AnchoredBlock.LineHeightProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;|","pos":[1410,1830],"source":"<a name=\"dependencyPropertyInfo_LineHeight\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Documents.AnchoredBlock.LineHeightProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|"}]},{"pos":[47430,47824],"content":"A double value specifying the height of line in device independent pixels.  LineHeight must be equal to or greater than `0.0034` and equal to or less then `160000`.       A value of <xref:System.Double> (equivalent to an attribute value of \"`Auto`\") causes the line height is determined automatically from the current font characteristics.       The default value is <xref:System.Double>.","needQuote":false,"needEscape":true,"nodes":[{"content":"A double value specifying the height of line in device independent pixels.","pos":[0,74]},{"content":"LineHeight must be equal to or greater than <ph id=\"ph1\">`0.0034`</ph> and equal to or less then <ph id=\"ph2\">`160000`</ph>.","pos":[76,164],"source":"  LineHeight must be equal to or greater than `0.0034` and equal to or less then `160000`."},{"content":"A value of &lt;xref:System.Double&gt; (equivalent to an attribute value of \"<ph id=\"ph1\">`Auto`</ph>\") causes the line height is determined automatically from the current font characteristics.","pos":[171,339],"source":"       A value of <xref:System.Double> (equivalent to an attribute value of \"`Auto`\") causes the line height is determined automatically from the current font characteristics."},{"content":"The default value is &lt;xref:System.Double&gt;.","pos":[346,388],"source":"       The default value is <xref:System.Double>."}]},{"pos":[47997,48110],"content":"Raised if an attempt is made to set <xref:System.Windows.Controls.TextBlock.LineHeight*> to a non-positive value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Raised if an attempt is made to set &lt;xref:System.Windows.Controls.TextBlock.LineHeight*&gt; to a non-positive value.","pos":[0,113],"source":"Raised if an attempt is made to set <xref:System.Windows.Controls.TextBlock.LineHeight*> to a non-positive value."}]},{"pos":[48542,48635],"content":"Identifies the <xref:System.Windows.Documents.AnchoredBlock.LineHeight*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Documents.AnchoredBlock.LineHeight*&gt; dependency property.","pos":[0,93],"source":"Identifies the <xref:System.Windows.Documents.AnchoredBlock.LineHeight*> dependency property."}]},{"pos":[48813,48825],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[49287,49394],"content":"Gets or sets the mechanism by which a line box is determined for each line of text within the text element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the mechanism by which a line box is determined for each line of text within the text element.","pos":[0,107]}]},{"pos":[49407,49863],"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_LineStackingStrategyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Documents.AnchoredBlock.LineStackingStrategyProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;|","needQuote":false,"needEscape":true,"extradata":"MT","source":"<a name=\"dependencyPropertyInfo_LineStackingStrategyProperty\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Documents.AnchoredBlock.LineStackingStrategyProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|"},{"pos":[50995,51168],"content":"The mechanism by which a line box is determined for each line of text within the text element. The default value is <xref href=\"System.Windows.LineStackingStrategy\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The mechanism by which a line box is determined for each line of text within the text element.","pos":[0,94]},{"content":"The default value is <bpt id=\"p1\">&lt;xref href=\"System.Windows.LineStackingStrategy\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[95,173],"source":" The default value is <xref href=\"System.Windows.LineStackingStrategy\"></xref>."}]},{"pos":[51740,51843],"content":"Identifies the <xref:System.Windows.Documents.AnchoredBlock.LineStackingStrategy*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Documents.AnchoredBlock.LineStackingStrategy*&gt; dependency property.","pos":[0,103],"source":"Identifies the <xref:System.Windows.Documents.AnchoredBlock.LineStackingStrategy*> dependency property."}]},{"pos":[52031,52043],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[52435,52485],"content":"Gets or sets the margin thickness for the element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the margin thickness for the element.","pos":[0,50]}]},{"pos":[52498,55186],"content":"<xref:System.Windows.Documents.ListItem.Margin%2A> is buffer space that falls outside of an element's content area, between the edges of the element's content area and the edges of the parent element.  Contrast with <xref:System.Windows.Documents.ListItem.Padding%2A>, which is buffer space that falls inside of an element's content area, between the element's content and the inner edge of the element.      <a name=\"xamlAttributeUsage_Margin\"></a>    ## XAML Attribute Usage      ```   <object Margin=\"uniformThickness\"/>   - or -   <object Margin=\"independentThickness\"/>   - or -   <object Margin=\"qualifiedUniformThickness\"/>   - or -   <object Margin=\"qualifiedIndependentThickness\"/>   ```      <a name=\"xamlValues_Margin\"></a>    ## XAML Values    *uniformThickness*    String representation of a single <xref:System.Double> value to apply uniformly to all four thickness dimensions.  For example, a value of `\"10\"` is equivalent to a value of `\"10,10,10,10\"`.  An unqualified value is measured in device independent pixels. Strings need not explicitly include decimal points.       *independentThickness*    String representation of four ordered <xref:System.Double> values corresponding to independent thickness dimensions for left, top, right, and bottom, in this order.  The four values must be separated with commas; spaces are not allowed.  For example, \"5,10,15,20\" results in 5 pixels of margin to the left of content, 10 pixels of margin above content, 15 pixels of margin to the right of content, and 20 pixels of margin below the content.       *qualifiedUniformThickness*    A value described by *uniformThickness* followed by one of the following unit specifiers: `px`, `in`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       For example, `\"1in\"` provides uniform margin of 1 inch in all directions.       *qualifiedIndependentThickness*    A value described by *independentThickness*, with each independent value followed by one of the following unit specifiers: `px`, `in`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       For example, `\"1.5in,0.8in,1.5in,0.8in\"`.  Unit specifiers may be mixed or omitted from one or more values.      <a name=\"dependencyPropertyInfo_Margin\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Documents.AnchoredBlock.MarginProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"&lt;xref:System.Windows.Documents.ListItem.Margin%2A&gt; is buffer space that falls outside of an element's content area, between the edges of the element's content area and the edges of the parent element.","pos":[0,200],"source":"<xref:System.Windows.Documents.ListItem.Margin%2A> is buffer space that falls outside of an element's content area, between the edges of the element's content area and the edges of the parent element."},{"content":"Contrast with &lt;xref:System.Windows.Documents.ListItem.Padding%2A&gt;, which is buffer space that falls inside of an element's content area, between the element's content and the inner edge of the element.","pos":[202,403],"source":"  Contrast with <xref:System.Windows.Documents.ListItem.Padding%2A>, which is buffer space that falls inside of an element's content area, between the element's content and the inner edge of the element."},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlAttributeUsage_Margin\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id=\"ph1\">```   &lt;object Margin=\"uniformThickness\"/&gt;   - or -   &lt;object Margin=\"independentThickness\"/&gt;   - or -   &lt;object Margin=\"qualifiedUniformThickness\"/&gt;   - or -   &lt;object Margin=\"qualifiedIndependentThickness\"/&gt;   ```</ph>      <bpt id=\"p2\">&lt;a name=\"xamlValues_Margin\"&gt;</bpt><ept id=\"p2\">&lt;/a&gt;</ept>    ## XAML Values    <bpt id=\"p3\">*</bpt>uniformThickness<ept id=\"p3\">*</ept>    String representation of a single &lt;xref:System.Double&gt; value to apply uniformly to all four thickness dimensions.","pos":[409,891],"source":"<a name=\"xamlAttributeUsage_Margin\"></a>    ## XAML Attribute Usage      ```   <object Margin=\"uniformThickness\"/>   - or -   <object Margin=\"independentThickness\"/>   - or -   <object Margin=\"qualifiedUniformThickness\"/>   - or -   <object Margin=\"qualifiedIndependentThickness\"/>   ```      <a name=\"xamlValues_Margin\"></a>    ## XAML Values    *uniformThickness*    String representation of a single <xref:System.Double> value to apply uniformly to all four thickness dimensions."},{"content":"For example, a value of <ph id=\"ph1\">`\"10\"`</ph> is equivalent to a value of <ph id=\"ph2\">`\"10,10,10,10\"`</ph>.","pos":[893,968],"source":"  For example, a value of `\"10\"` is equivalent to a value of `\"10,10,10,10\"`."},{"content":"An unqualified value is measured in device independent pixels.","pos":[970,1032]},{"content":"Strings need not explicitly include decimal points.","pos":[1033,1084]},{"content":"<bpt id=\"p1\">*</bpt>independentThickness<ept id=\"p1\">*</ept>    String representation of four ordered &lt;xref:System.Double&gt; values corresponding to independent thickness dimensions for left, top, right, and bottom, in this order.","pos":[1091,1281],"source":"*independentThickness*    String representation of four ordered <xref:System.Double> values corresponding to independent thickness dimensions for left, top, right, and bottom, in this order."},{"content":"The four values must be separated with commas; spaces are not allowed.","pos":[1283,1353]},{"content":"For example, \"5,10,15,20\" results in 5 pixels of margin to the left of content, 10 pixels of margin above content, 15 pixels of margin to the right of content, and 20 pixels of margin below the content.","pos":[1355,1557]},{"content":"<bpt id=\"p1\">*</bpt>qualifiedUniformThickness<ept id=\"p1\">*</ept>    A value described by <bpt id=\"p2\">*</bpt>uniformThickness<ept id=\"p2\">*</ept> followed by one of the following unit specifiers: <ph id=\"ph1\">`px`</ph>, <ph id=\"ph2\">`in`</ph>.","pos":[1564,1696],"source":"*qualifiedUniformThickness*    A value described by *uniformThickness* followed by one of the following unit specifiers: `px`, `in`."},{"content":"<ph id=\"ph1\">`px`</ph> (default) is <ph id=\"ph2\">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>       <ph id=\"ph3\">`in`</ph> is inches; 1in==96px       For example, <ph id=\"ph4\">`\"1in\"`</ph> provides uniform margin of 1 inch in all directions.","pos":[1703,1906],"source":"`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       For example, `\"1in\"` provides uniform margin of 1 inch in all directions."},{"content":"<bpt id=\"p1\">*</bpt>qualifiedIndependentThickness<ept id=\"p1\">*</ept>    A value described by <bpt id=\"p2\">*</bpt>independentThickness<ept id=\"p2\">*</ept>, with each independent value followed by one of the following unit specifiers: <ph id=\"ph1\">`px`</ph>, <ph id=\"ph2\">`in`</ph>.","pos":[1913,2082],"source":"*qualifiedIndependentThickness*    A value described by *independentThickness*, with each independent value followed by one of the following unit specifiers: `px`, `in`."},{"content":"<ph id=\"ph1\">`px`</ph> (default) is <ph id=\"ph2\">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>       <ph id=\"ph3\">`in`</ph> is inches; 1in==96px       For example, <ph id=\"ph4\">`\"1.5in,0.8in,1.5in,0.8in\"`</ph>.","pos":[2089,2260],"source":"`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       For example, `\"1.5in,0.8in,1.5in,0.8in\"`."},{"content":"Unit specifiers may be mixed or omitted from one or more values.","pos":[2262,2326]},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_Margin\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Documents.AnchoredBlock.MarginProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|","pos":[2332,2617],"source":"<a name=\"dependencyPropertyInfo_Margin\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Documents.AnchoredBlock.MarginProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|"}]},{"pos":[56262,56461],"content":"A <xref href=\"System.Windows.Thickness\"></xref> structure specifying the amount of margin to apply, in device independent pixels.       The default value is a uniform thickness of zero (**0.0**).","needQuote":false,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Thickness\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure specifying the amount of margin to apply, in device independent pixels.","pos":[0,129],"source":"A <xref href=\"System.Windows.Thickness\"></xref> structure specifying the amount of margin to apply, in device independent pixels."},{"content":"The default value is a uniform thickness of zero (<bpt id=\"p1\">**</bpt>0.0<ept id=\"p1\">**</ept>).","pos":[136,195],"source":"       The default value is a uniform thickness of zero (**0.0**)."}]},{"pos":[56950,57039],"content":"Identifies the <xref:System.Windows.Documents.AnchoredBlock.Margin*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Documents.AnchoredBlock.Margin*&gt; dependency property.","pos":[0,89],"source":"Identifies the <xref:System.Windows.Documents.AnchoredBlock.Margin*> dependency property."}]},{"pos":[57213,57225],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[57622,57673],"content":"Gets or sets the padding thickness for the element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the padding thickness for the element.","pos":[0,51]}]},{"pos":[57686,60384],"content":"<xref:System.Windows.Documents.ListItem.Padding%2A> is buffer space that falls inside an element's content area, between the element's content and the inner edge of the element.  Contrast with <xref:System.Windows.Documents.ListItem.Margin%2A>, which is buffer space that falls outside of an element's content area, between the edges of the element's content area and the edges of the parent element.      <a name=\"xamlAttributeUsage_Padding\"></a>    ## XAML Attribute Usage      ```   <object Padding=\"uniformThickness\"/>   - or -   <object Padding=\"independentThickness\"/>   - or -   <object Padding=\"qualifiedUniformThickness\"/>   - or -   <object Padding=\"qualifiedIndependentThickness\"/>   ```      <a name=\"xamlValues_Padding\"></a>    ## XAML Values    *uniformThickness*    String representation of a single <xref:System.Double> value to apply uniformly to all four thickness dimensions.  For example, a value of `\"10\"` is equivalent to a value of `\"10,10,10,10\"`.  An unqualified value is measured in device independent pixels. Strings need not explicitly include decimal points.       *independentThickness*    String representation of four ordered <xref:System.Double> values corresponding to independent thickness dimensions for left, top, right, and bottom, in this order.  The four values must be separated with commas; spaces are not allowed.  For example, \"5,10,15,20\" results in 5 pixels of padding to the left of content, 10 pixels of padding above content, 15 pixels of padding to the right of content, and 20 pixels of padding below the content.       *qualifiedUniformThickness*    A value described by *uniformThickness* followed by one of the following unit specifiers: `px`, `in`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       For example, `\"1in\"` provides uniform padding of 1 inch in all directions.       *qualifiedIndependentThickness*    A value described by *independentThickness*, with each independent value followed by one of the following unit specifiers: `px`, `in`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       For example, `\"1.5in,0.8in,1.5in,0.8in\"`.  Unit specifiers may be mixed or omitted from one or more values.      <a name=\"dependencyPropertyInfo_Padding\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Documents.AnchoredBlock.PaddingProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"&lt;xref:System.Windows.Documents.ListItem.Padding%2A&gt; is buffer space that falls inside an element's content area, between the element's content and the inner edge of the element.","pos":[0,177],"source":"<xref:System.Windows.Documents.ListItem.Padding%2A> is buffer space that falls inside an element's content area, between the element's content and the inner edge of the element."},{"content":"Contrast with &lt;xref:System.Windows.Documents.ListItem.Margin%2A&gt;, which is buffer space that falls outside of an element's content area, between the edges of the element's content area and the edges of the parent element.","pos":[179,400],"source":"  Contrast with <xref:System.Windows.Documents.ListItem.Margin%2A>, which is buffer space that falls outside of an element's content area, between the edges of the element's content area and the edges of the parent element."},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlAttributeUsage_Padding\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id=\"ph1\">```   &lt;object Padding=\"uniformThickness\"/&gt;   - or -   &lt;object Padding=\"independentThickness\"/&gt;   - or -   &lt;object Padding=\"qualifiedUniformThickness\"/&gt;   - or -   &lt;object Padding=\"qualifiedIndependentThickness\"/&gt;   ```</ph>      <bpt id=\"p2\">&lt;a name=\"xamlValues_Padding\"&gt;</bpt><ept id=\"p2\">&lt;/a&gt;</ept>    ## XAML Values    <bpt id=\"p3\">*</bpt>uniformThickness<ept id=\"p3\">*</ept>    String representation of a single &lt;xref:System.Double&gt; value to apply uniformly to all four thickness dimensions.","pos":[406,894],"source":"<a name=\"xamlAttributeUsage_Padding\"></a>    ## XAML Attribute Usage      ```   <object Padding=\"uniformThickness\"/>   - or -   <object Padding=\"independentThickness\"/>   - or -   <object Padding=\"qualifiedUniformThickness\"/>   - or -   <object Padding=\"qualifiedIndependentThickness\"/>   ```      <a name=\"xamlValues_Padding\"></a>    ## XAML Values    *uniformThickness*    String representation of a single <xref:System.Double> value to apply uniformly to all four thickness dimensions."},{"content":"For example, a value of <ph id=\"ph1\">`\"10\"`</ph> is equivalent to a value of <ph id=\"ph2\">`\"10,10,10,10\"`</ph>.","pos":[896,971],"source":"  For example, a value of `\"10\"` is equivalent to a value of `\"10,10,10,10\"`."},{"content":"An unqualified value is measured in device independent pixels.","pos":[973,1035]},{"content":"Strings need not explicitly include decimal points.","pos":[1036,1087]},{"content":"<bpt id=\"p1\">*</bpt>independentThickness<ept id=\"p1\">*</ept>    String representation of four ordered &lt;xref:System.Double&gt; values corresponding to independent thickness dimensions for left, top, right, and bottom, in this order.","pos":[1094,1284],"source":"*independentThickness*    String representation of four ordered <xref:System.Double> values corresponding to independent thickness dimensions for left, top, right, and bottom, in this order."},{"content":"The four values must be separated with commas; spaces are not allowed.","pos":[1286,1356]},{"content":"For example, \"5,10,15,20\" results in 5 pixels of padding to the left of content, 10 pixels of padding above content, 15 pixels of padding to the right of content, and 20 pixels of padding below the content.","pos":[1358,1564]},{"content":"<bpt id=\"p1\">*</bpt>qualifiedUniformThickness<ept id=\"p1\">*</ept>    A value described by <bpt id=\"p2\">*</bpt>uniformThickness<ept id=\"p2\">*</ept> followed by one of the following unit specifiers: <ph id=\"ph1\">`px`</ph>, <ph id=\"ph2\">`in`</ph>.","pos":[1571,1703],"source":"*qualifiedUniformThickness*    A value described by *uniformThickness* followed by one of the following unit specifiers: `px`, `in`."},{"content":"<ph id=\"ph1\">`px`</ph> (default) is <ph id=\"ph2\">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>       <ph id=\"ph3\">`in`</ph> is inches; 1in==96px       For example, <ph id=\"ph4\">`\"1in\"`</ph> provides uniform padding of 1 inch in all directions.","pos":[1710,1914],"source":"`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       For example, `\"1in\"` provides uniform padding of 1 inch in all directions."},{"content":"<bpt id=\"p1\">*</bpt>qualifiedIndependentThickness<ept id=\"p1\">*</ept>    A value described by <bpt id=\"p2\">*</bpt>independentThickness<ept id=\"p2\">*</ept>, with each independent value followed by one of the following unit specifiers: <ph id=\"ph1\">`px`</ph>, <ph id=\"ph2\">`in`</ph>.","pos":[1921,2090],"source":"*qualifiedIndependentThickness*    A value described by *independentThickness*, with each independent value followed by one of the following unit specifiers: `px`, `in`."},{"content":"<ph id=\"ph1\">`px`</ph> (default) is <ph id=\"ph2\">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>       <ph id=\"ph3\">`in`</ph> is inches; 1in==96px       For example, <ph id=\"ph4\">`\"1.5in,0.8in,1.5in,0.8in\"`</ph>.","pos":[2097,2268],"source":"`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       For example, `\"1.5in,0.8in,1.5in,0.8in\"`."},{"content":"Unit specifiers may be mixed or omitted from one or more values.","pos":[2270,2334]},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_Padding\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Documents.AnchoredBlock.PaddingProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|","pos":[2340,2627],"source":"<a name=\"dependencyPropertyInfo_Padding\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Documents.AnchoredBlock.PaddingProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|"}]},{"pos":[61463,61663],"content":"A <xref href=\"System.Windows.Thickness\"></xref> structure specifying the amount of padding to apply, in device independent pixels.       The default value is a uniform thickness of zero (**0.0**).","needQuote":false,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Thickness\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure specifying the amount of padding to apply, in device independent pixels.","pos":[0,130],"source":"A <xref href=\"System.Windows.Thickness\"></xref> structure specifying the amount of padding to apply, in device independent pixels."},{"content":"The default value is a uniform thickness of zero (<bpt id=\"p1\">**</bpt>0.0<ept id=\"p1\">**</ept>).","pos":[137,196],"source":"       The default value is a uniform thickness of zero (**0.0**)."}]},{"pos":[62158,62248],"content":"Identifies the <xref:System.Windows.Documents.AnchoredBlock.Padding*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Documents.AnchoredBlock.Padding*&gt; dependency property.","pos":[0,90],"source":"Identifies the <xref:System.Windows.Documents.AnchoredBlock.Padding*> dependency property."}]},{"pos":[62423,62435],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[63114,63379],"content":"Returns a value that indicates whether or not the effective value of the &lt;xref:System.Windows.Documents.AnchoredBlock.Blocks*&gt; property should be serialized during serialization of an object deriving from <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.AnchoredBlock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a value that indicates whether or not the effective value of the <xref:System.Windows.Documents.AnchoredBlock.Blocks*> property should be serialized during serialization of an object deriving from <xref href=\"System.Windows.Documents.AnchoredBlock\"></xref>."},{"pos":[63623,63678],"content":"A serialization service manager object for this object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A serialization service manager object for this object.","pos":[0,55]}]},{"pos":[63738,63860],"content":"<bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> if the &lt;xref:System.Windows.Documents.AnchoredBlock.Blocks<bpt id=\"p2\">*</bpt>&gt; property should be serialized; otherwise, <ept id=\"p2\">*</ept><bpt id=\"p3\">*</bpt>false<ept id=\"p3\">*</ept>*.","needQuote":false,"needEscape":true,"source":"**true** if the <xref:System.Windows.Documents.AnchoredBlock.Blocks*> property should be serialized; otherwise, **false**."},{"pos":[64054,64099],"content":"Raised when <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">manager</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">**</bpt>null<ept id=\"p2\">**</ept>.","needQuote":true,"needEscape":true,"source":"Raised when <code>manager</code> is **null**."},{"pos":[64509,64586],"content":"Gets or sets a value that indicates the horizontal alignment of text content.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates the horizontal alignment of text content.","pos":[0,77]}]},{"pos":[64599,65033],"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_TextAlignment\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Documents.AnchoredBlock.TextAlignmentProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;|","needQuote":false,"needEscape":true,"extradata":"MT","source":"<a name=\"dependencyPropertyInfo_TextAlignment\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Documents.AnchoredBlock.TextAlignmentProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|"},{"pos":[66551,66747],"content":"A member of the <xref href=\"System.Windows.TextAlignment\"></xref> enumerations specifying the desired alignment.       The default value is <xref href=\"System.Windows.TextAlignment\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"A member of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.TextAlignment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumerations specifying the desired alignment.","pos":[0,112],"source":"A member of the <xref href=\"System.Windows.TextAlignment\"></xref> enumerations specifying the desired alignment."},{"content":"The default value is <bpt id=\"p1\">&lt;xref href=\"System.Windows.TextAlignment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[119,190],"source":"       The default value is <xref href=\"System.Windows.TextAlignment\"></xref>."}]},{"pos":[67278,67374],"content":"Identifies the <xref:System.Windows.Documents.AnchoredBlock.TextAlignment*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Documents.AnchoredBlock.TextAlignment*&gt; dependency property.","pos":[0,96],"source":"Identifies the <xref:System.Windows.Documents.AnchoredBlock.TextAlignment*> dependency property."}]},{"pos":[67555,67567],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Documents.AnchoredBlock\n  id: AnchoredBlock\n  children:\n  - System.Windows.Documents.AnchoredBlock.#ctor(System.Windows.Documents.Block,System.Windows.Documents.TextPointer)\n  - System.Windows.Documents.AnchoredBlock.Blocks\n  - System.Windows.Documents.AnchoredBlock.BorderBrush\n  - System.Windows.Documents.AnchoredBlock.BorderBrushProperty\n  - System.Windows.Documents.AnchoredBlock.BorderThickness\n  - System.Windows.Documents.AnchoredBlock.BorderThicknessProperty\n  - System.Windows.Documents.AnchoredBlock.LineHeight\n  - System.Windows.Documents.AnchoredBlock.LineHeightProperty\n  - System.Windows.Documents.AnchoredBlock.LineStackingStrategy\n  - System.Windows.Documents.AnchoredBlock.LineStackingStrategyProperty\n  - System.Windows.Documents.AnchoredBlock.Margin\n  - System.Windows.Documents.AnchoredBlock.MarginProperty\n  - System.Windows.Documents.AnchoredBlock.Padding\n  - System.Windows.Documents.AnchoredBlock.PaddingProperty\n  - System.Windows.Documents.AnchoredBlock.ShouldSerializeBlocks(System.Windows.Markup.XamlDesignerSerializationManager)\n  - System.Windows.Documents.AnchoredBlock.TextAlignment\n  - System.Windows.Documents.AnchoredBlock.TextAlignmentProperty\n  langs:\n  - csharp\n  name: AnchoredBlock\n  nameWithType: AnchoredBlock\n  fullName: System.Windows.Documents.AnchoredBlock\n  type: Class\n  summary: An abstract class that provides a base for <xref href=\"System.Windows.Documents.Inline\"></xref> elements that are used to anchor <xref href=\"System.Windows.Documents.Block\"></xref> elements to flow content.\n  syntax:\n    content: >-\n      [System.Windows.Markup.ContentProperty(\"Blocks\")]\n\n      public abstract class AnchoredBlock : System.Windows.Documents.Inline\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.ContentElement\n  - System.Windows.FrameworkContentElement\n  - System.Windows.Documents.TextElement\n  - System.Windows.Documents.Inline\n  implements: []\n  inheritedMembers:\n  - System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)\n  - System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)\n  - System.Windows.ContentElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)\n  - System.Windows.ContentElement.AllowDrop\n  - System.Windows.ContentElement.AllowDropProperty\n  - System.Windows.ContentElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.ContentElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.ContentElement.AreAnyTouchesCaptured\n  - System.Windows.ContentElement.AreAnyTouchesCapturedProperty\n  - System.Windows.ContentElement.AreAnyTouchesCapturedWithin\n  - System.Windows.ContentElement.AreAnyTouchesCapturedWithinProperty\n  - System.Windows.ContentElement.AreAnyTouchesDirectlyOver\n  - System.Windows.ContentElement.AreAnyTouchesDirectlyOverProperty\n  - System.Windows.ContentElement.AreAnyTouchesOver\n  - System.Windows.ContentElement.AreAnyTouchesOverProperty\n  - System.Windows.ContentElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.ContentElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.ContentElement.CaptureMouse\n  - System.Windows.ContentElement.CaptureStylus\n  - System.Windows.ContentElement.CaptureTouch(System.Windows.Input.TouchDevice)\n  - System.Windows.ContentElement.CommandBindings\n  - System.Windows.ContentElement.DragEnter\n  - System.Windows.ContentElement.DragEnterEvent\n  - System.Windows.ContentElement.DragLeave\n  - System.Windows.ContentElement.DragLeaveEvent\n  - System.Windows.ContentElement.DragOver\n  - System.Windows.ContentElement.DragOverEvent\n  - System.Windows.ContentElement.Drop\n  - System.Windows.ContentElement.DropEvent\n  - System.Windows.ContentElement.Focus\n  - System.Windows.ContentElement.Focusable\n  - System.Windows.ContentElement.FocusableChanged\n  - System.Windows.ContentElement.FocusableProperty\n  - System.Windows.ContentElement.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.ContentElement.GiveFeedback\n  - System.Windows.ContentElement.GiveFeedbackEvent\n  - System.Windows.ContentElement.GotFocus\n  - System.Windows.ContentElement.GotFocusEvent\n  - System.Windows.ContentElement.GotKeyboardFocus\n  - System.Windows.ContentElement.GotKeyboardFocusEvent\n  - System.Windows.ContentElement.GotMouseCapture\n  - System.Windows.ContentElement.GotMouseCaptureEvent\n  - System.Windows.ContentElement.GotStylusCapture\n  - System.Windows.ContentElement.GotStylusCaptureEvent\n  - System.Windows.ContentElement.GotTouchCapture\n  - System.Windows.ContentElement.GotTouchCaptureEvent\n  - System.Windows.ContentElement.HasAnimatedProperties\n  - System.Windows.ContentElement.InputBindings\n  - System.Windows.ContentElement.IsEnabled\n  - System.Windows.ContentElement.IsEnabledChanged\n  - System.Windows.ContentElement.IsEnabledCore\n  - System.Windows.ContentElement.IsEnabledProperty\n  - System.Windows.ContentElement.IsFocused\n  - System.Windows.ContentElement.IsFocusedProperty\n  - System.Windows.ContentElement.IsInputMethodEnabled\n  - System.Windows.ContentElement.IsKeyboardFocused\n  - System.Windows.ContentElement.IsKeyboardFocusedChanged\n  - System.Windows.ContentElement.IsKeyboardFocusedProperty\n  - System.Windows.ContentElement.IsKeyboardFocusWithin\n  - System.Windows.ContentElement.IsKeyboardFocusWithinChanged\n  - System.Windows.ContentElement.IsKeyboardFocusWithinProperty\n  - System.Windows.ContentElement.IsMouseCaptured\n  - System.Windows.ContentElement.IsMouseCapturedChanged\n  - System.Windows.ContentElement.IsMouseCapturedProperty\n  - System.Windows.ContentElement.IsMouseCaptureWithin\n  - System.Windows.ContentElement.IsMouseCaptureWithinChanged\n  - System.Windows.ContentElement.IsMouseCaptureWithinProperty\n  - System.Windows.ContentElement.IsMouseDirectlyOver\n  - System.Windows.ContentElement.IsMouseDirectlyOverChanged\n  - System.Windows.ContentElement.IsMouseDirectlyOverProperty\n  - System.Windows.ContentElement.IsMouseOver\n  - System.Windows.ContentElement.IsMouseOverProperty\n  - System.Windows.ContentElement.IsStylusCaptured\n  - System.Windows.ContentElement.IsStylusCapturedChanged\n  - System.Windows.ContentElement.IsStylusCapturedProperty\n  - System.Windows.ContentElement.IsStylusCaptureWithin\n  - System.Windows.ContentElement.IsStylusCaptureWithinChanged\n  - System.Windows.ContentElement.IsStylusCaptureWithinProperty\n  - System.Windows.ContentElement.IsStylusDirectlyOver\n  - System.Windows.ContentElement.IsStylusDirectlyOverChanged\n  - System.Windows.ContentElement.IsStylusDirectlyOverProperty\n  - System.Windows.ContentElement.IsStylusOver\n  - System.Windows.ContentElement.IsStylusOverProperty\n  - System.Windows.ContentElement.KeyDown\n  - System.Windows.ContentElement.KeyDownEvent\n  - System.Windows.ContentElement.KeyUp\n  - System.Windows.ContentElement.KeyUpEvent\n  - System.Windows.ContentElement.LostFocus\n  - System.Windows.ContentElement.LostFocusEvent\n  - System.Windows.ContentElement.LostKeyboardFocus\n  - System.Windows.ContentElement.LostKeyboardFocusEvent\n  - System.Windows.ContentElement.LostMouseCapture\n  - System.Windows.ContentElement.LostMouseCaptureEvent\n  - System.Windows.ContentElement.LostStylusCapture\n  - System.Windows.ContentElement.LostStylusCaptureEvent\n  - System.Windows.ContentElement.LostTouchCapture\n  - System.Windows.ContentElement.LostTouchCaptureEvent\n  - System.Windows.ContentElement.MouseDown\n  - System.Windows.ContentElement.MouseDownEvent\n  - System.Windows.ContentElement.MouseEnter\n  - System.Windows.ContentElement.MouseEnterEvent\n  - System.Windows.ContentElement.MouseLeave\n  - System.Windows.ContentElement.MouseLeaveEvent\n  - System.Windows.ContentElement.MouseLeftButtonDown\n  - System.Windows.ContentElement.MouseLeftButtonDownEvent\n  - System.Windows.ContentElement.MouseLeftButtonUp\n  - System.Windows.ContentElement.MouseLeftButtonUpEvent\n  - System.Windows.ContentElement.MouseMove\n  - System.Windows.ContentElement.MouseMoveEvent\n  - System.Windows.ContentElement.MouseRightButtonDown\n  - System.Windows.ContentElement.MouseRightButtonDownEvent\n  - System.Windows.ContentElement.MouseRightButtonUp\n  - System.Windows.ContentElement.MouseRightButtonUpEvent\n  - System.Windows.ContentElement.MouseUp\n  - System.Windows.ContentElement.MouseUpEvent\n  - System.Windows.ContentElement.MouseWheel\n  - System.Windows.ContentElement.MouseWheelEvent\n  - System.Windows.ContentElement.OnCreateAutomationPeer\n  - System.Windows.ContentElement.OnDragEnter(System.Windows.DragEventArgs)\n  - System.Windows.ContentElement.OnDragLeave(System.Windows.DragEventArgs)\n  - System.Windows.ContentElement.OnDragOver(System.Windows.DragEventArgs)\n  - System.Windows.ContentElement.OnDrop(System.Windows.DragEventArgs)\n  - System.Windows.ContentElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)\n  - System.Windows.ContentElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.ContentElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)\n  - System.Windows.ContentElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)\n  - System.Windows.ContentElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)\n  - System.Windows.ContentElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.ContentElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.ContentElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.ContentElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.ContentElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.ContentElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.ContentElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.ContentElement.OnKeyDown(System.Windows.Input.KeyEventArgs)\n  - System.Windows.ContentElement.OnKeyUp(System.Windows.Input.KeyEventArgs)\n  - System.Windows.ContentElement.OnLostFocus(System.Windows.RoutedEventArgs)\n  - System.Windows.ContentElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.ContentElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)\n  - System.Windows.ContentElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)\n  - System.Windows.ContentElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)\n  - System.Windows.ContentElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.ContentElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)\n  - System.Windows.ContentElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)\n  - System.Windows.ContentElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.ContentElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.ContentElement.OnMouseMove(System.Windows.Input.MouseEventArgs)\n  - System.Windows.ContentElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.ContentElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.ContentElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.ContentElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)\n  - System.Windows.ContentElement.OnPreviewDragEnter(System.Windows.DragEventArgs)\n  - System.Windows.ContentElement.OnPreviewDragLeave(System.Windows.DragEventArgs)\n  - System.Windows.ContentElement.OnPreviewDragOver(System.Windows.DragEventArgs)\n  - System.Windows.ContentElement.OnPreviewDrop(System.Windows.DragEventArgs)\n  - System.Windows.ContentElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)\n  - System.Windows.ContentElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.ContentElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)\n  - System.Windows.ContentElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)\n  - System.Windows.ContentElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.ContentElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.ContentElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.ContentElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.ContentElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)\n  - System.Windows.ContentElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.ContentElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.ContentElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.ContentElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)\n  - System.Windows.ContentElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)\n  - System.Windows.ContentElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.ContentElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.ContentElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)\n  - System.Windows.ContentElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.ContentElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.ContentElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.ContentElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.ContentElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)\n  - System.Windows.ContentElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)\n  - System.Windows.ContentElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)\n  - System.Windows.ContentElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)\n  - System.Windows.ContentElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)\n  - System.Windows.ContentElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)\n  - System.Windows.ContentElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)\n  - System.Windows.ContentElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)\n  - System.Windows.ContentElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.ContentElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.ContentElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)\n  - System.Windows.ContentElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)\n  - System.Windows.ContentElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.ContentElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.ContentElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)\n  - System.Windows.ContentElement.OnStylusMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.ContentElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.ContentElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)\n  - System.Windows.ContentElement.OnStylusUp(System.Windows.Input.StylusEventArgs)\n  - System.Windows.ContentElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)\n  - System.Windows.ContentElement.OnTouchDown(System.Windows.Input.TouchEventArgs)\n  - System.Windows.ContentElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)\n  - System.Windows.ContentElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)\n  - System.Windows.ContentElement.OnTouchMove(System.Windows.Input.TouchEventArgs)\n  - System.Windows.ContentElement.OnTouchUp(System.Windows.Input.TouchEventArgs)\n  - System.Windows.ContentElement.PreviewDragEnter\n  - System.Windows.ContentElement.PreviewDragEnterEvent\n  - System.Windows.ContentElement.PreviewDragLeave\n  - System.Windows.ContentElement.PreviewDragLeaveEvent\n  - System.Windows.ContentElement.PreviewDragOver\n  - System.Windows.ContentElement.PreviewDragOverEvent\n  - System.Windows.ContentElement.PreviewDrop\n  - System.Windows.ContentElement.PreviewDropEvent\n  - System.Windows.ContentElement.PreviewGiveFeedback\n  - System.Windows.ContentElement.PreviewGiveFeedbackEvent\n  - System.Windows.ContentElement.PreviewGotKeyboardFocus\n  - System.Windows.ContentElement.PreviewGotKeyboardFocusEvent\n  - System.Windows.ContentElement.PreviewKeyDown\n  - System.Windows.ContentElement.PreviewKeyDownEvent\n  - System.Windows.ContentElement.PreviewKeyUp\n  - System.Windows.ContentElement.PreviewKeyUpEvent\n  - System.Windows.ContentElement.PreviewLostKeyboardFocus\n  - System.Windows.ContentElement.PreviewLostKeyboardFocusEvent\n  - System.Windows.ContentElement.PreviewMouseDown\n  - System.Windows.ContentElement.PreviewMouseDownEvent\n  - System.Windows.ContentElement.PreviewMouseLeftButtonDown\n  - System.Windows.ContentElement.PreviewMouseLeftButtonDownEvent\n  - System.Windows.ContentElement.PreviewMouseLeftButtonUp\n  - System.Windows.ContentElement.PreviewMouseLeftButtonUpEvent\n  - System.Windows.ContentElement.PreviewMouseMove\n  - System.Windows.ContentElement.PreviewMouseMoveEvent\n  - System.Windows.ContentElement.PreviewMouseRightButtonDown\n  - System.Windows.ContentElement.PreviewMouseRightButtonDownEvent\n  - System.Windows.ContentElement.PreviewMouseRightButtonUp\n  - System.Windows.ContentElement.PreviewMouseRightButtonUpEvent\n  - System.Windows.ContentElement.PreviewMouseUp\n  - System.Windows.ContentElement.PreviewMouseUpEvent\n  - System.Windows.ContentElement.PreviewMouseWheel\n  - System.Windows.ContentElement.PreviewMouseWheelEvent\n  - System.Windows.ContentElement.PreviewQueryContinueDrag\n  - System.Windows.ContentElement.PreviewQueryContinueDragEvent\n  - System.Windows.ContentElement.PreviewStylusButtonDown\n  - System.Windows.ContentElement.PreviewStylusButtonDownEvent\n  - System.Windows.ContentElement.PreviewStylusButtonUp\n  - System.Windows.ContentElement.PreviewStylusButtonUpEvent\n  - System.Windows.ContentElement.PreviewStylusDown\n  - System.Windows.ContentElement.PreviewStylusDownEvent\n  - System.Windows.ContentElement.PreviewStylusInAirMove\n  - System.Windows.ContentElement.PreviewStylusInAirMoveEvent\n  - System.Windows.ContentElement.PreviewStylusInRange\n  - System.Windows.ContentElement.PreviewStylusInRangeEvent\n  - System.Windows.ContentElement.PreviewStylusMove\n  - System.Windows.ContentElement.PreviewStylusMoveEvent\n  - System.Windows.ContentElement.PreviewStylusOutOfRange\n  - System.Windows.ContentElement.PreviewStylusOutOfRangeEvent\n  - System.Windows.ContentElement.PreviewStylusSystemGesture\n  - System.Windows.ContentElement.PreviewStylusSystemGestureEvent\n  - System.Windows.ContentElement.PreviewStylusUp\n  - System.Windows.ContentElement.PreviewStylusUpEvent\n  - System.Windows.ContentElement.PreviewTextInput\n  - System.Windows.ContentElement.PreviewTextInputEvent\n  - System.Windows.ContentElement.PreviewTouchDown\n  - System.Windows.ContentElement.PreviewTouchDownEvent\n  - System.Windows.ContentElement.PreviewTouchMove\n  - System.Windows.ContentElement.PreviewTouchMoveEvent\n  - System.Windows.ContentElement.PreviewTouchUp\n  - System.Windows.ContentElement.PreviewTouchUpEvent\n  - System.Windows.ContentElement.QueryContinueDrag\n  - System.Windows.ContentElement.QueryContinueDragEvent\n  - System.Windows.ContentElement.QueryCursor\n  - System.Windows.ContentElement.QueryCursorEvent\n  - System.Windows.ContentElement.RaiseEvent(System.Windows.RoutedEventArgs)\n  - System.Windows.ContentElement.ReleaseAllTouchCaptures\n  - System.Windows.ContentElement.ReleaseMouseCapture\n  - System.Windows.ContentElement.ReleaseStylusCapture\n  - System.Windows.ContentElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)\n  - System.Windows.ContentElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)\n  - System.Windows.ContentElement.ShouldSerializeCommandBindings\n  - System.Windows.ContentElement.ShouldSerializeInputBindings\n  - System.Windows.ContentElement.StylusButtonDown\n  - System.Windows.ContentElement.StylusButtonDownEvent\n  - System.Windows.ContentElement.StylusButtonUp\n  - System.Windows.ContentElement.StylusButtonUpEvent\n  - System.Windows.ContentElement.StylusDown\n  - System.Windows.ContentElement.StylusDownEvent\n  - System.Windows.ContentElement.StylusEnter\n  - System.Windows.ContentElement.StylusEnterEvent\n  - System.Windows.ContentElement.StylusInAirMove\n  - System.Windows.ContentElement.StylusInAirMoveEvent\n  - System.Windows.ContentElement.StylusInRange\n  - System.Windows.ContentElement.StylusInRangeEvent\n  - System.Windows.ContentElement.StylusLeave\n  - System.Windows.ContentElement.StylusLeaveEvent\n  - System.Windows.ContentElement.StylusMove\n  - System.Windows.ContentElement.StylusMoveEvent\n  - System.Windows.ContentElement.StylusOutOfRange\n  - System.Windows.ContentElement.StylusOutOfRangeEvent\n  - System.Windows.ContentElement.StylusSystemGesture\n  - System.Windows.ContentElement.StylusSystemGestureEvent\n  - System.Windows.ContentElement.StylusUp\n  - System.Windows.ContentElement.StylusUpEvent\n  - System.Windows.ContentElement.TextInput\n  - System.Windows.ContentElement.TextInputEvent\n  - System.Windows.ContentElement.TouchDown\n  - System.Windows.ContentElement.TouchDownEvent\n  - System.Windows.ContentElement.TouchEnter\n  - System.Windows.ContentElement.TouchEnterEvent\n  - System.Windows.ContentElement.TouchesCaptured\n  - System.Windows.ContentElement.TouchesCapturedWithin\n  - System.Windows.ContentElement.TouchesDirectlyOver\n  - System.Windows.ContentElement.TouchesOver\n  - System.Windows.ContentElement.TouchLeave\n  - System.Windows.ContentElement.TouchLeaveEvent\n  - System.Windows.ContentElement.TouchMove\n  - System.Windows.ContentElement.TouchMoveEvent\n  - System.Windows.ContentElement.TouchUp\n  - System.Windows.ContentElement.TouchUpEvent\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.Documents.Inline.BaselineAlignment\n  - System.Windows.Documents.Inline.BaselineAlignmentProperty\n  - System.Windows.Documents.Inline.FlowDirection\n  - System.Windows.Documents.Inline.FlowDirectionProperty\n  - System.Windows.Documents.Inline.NextInline\n  - System.Windows.Documents.Inline.PreviousInline\n  - System.Windows.Documents.Inline.SiblingInlines\n  - System.Windows.Documents.Inline.TextDecorations\n  - System.Windows.Documents.Inline.TextDecorationsProperty\n  - System.Windows.Documents.TextElement.Background\n  - System.Windows.Documents.TextElement.BackgroundProperty\n  - System.Windows.Documents.TextElement.ContentEnd\n  - System.Windows.Documents.TextElement.ContentStart\n  - System.Windows.Documents.TextElement.ElementEnd\n  - System.Windows.Documents.TextElement.ElementStart\n  - System.Windows.Documents.TextElement.FontFamily\n  - System.Windows.Documents.TextElement.FontFamilyProperty\n  - System.Windows.Documents.TextElement.FontSize\n  - System.Windows.Documents.TextElement.FontSizeProperty\n  - System.Windows.Documents.TextElement.FontStretch\n  - System.Windows.Documents.TextElement.FontStretchProperty\n  - System.Windows.Documents.TextElement.FontStyle\n  - System.Windows.Documents.TextElement.FontStyleProperty\n  - System.Windows.Documents.TextElement.FontWeight\n  - System.Windows.Documents.TextElement.FontWeightProperty\n  - System.Windows.Documents.TextElement.Foreground\n  - System.Windows.Documents.TextElement.ForegroundProperty\n  - System.Windows.Documents.TextElement.GetFontFamily(System.Windows.DependencyObject)\n  - System.Windows.Documents.TextElement.GetFontSize(System.Windows.DependencyObject)\n  - System.Windows.Documents.TextElement.GetFontStretch(System.Windows.DependencyObject)\n  - System.Windows.Documents.TextElement.GetFontStyle(System.Windows.DependencyObject)\n  - System.Windows.Documents.TextElement.GetFontWeight(System.Windows.DependencyObject)\n  - System.Windows.Documents.TextElement.GetForeground(System.Windows.DependencyObject)\n  - System.Windows.Documents.TextElement.LogicalChildren\n  - System.Windows.Documents.TextElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.Documents.TextElement.SetFontFamily(System.Windows.DependencyObject,System.Windows.Media.FontFamily)\n  - System.Windows.Documents.TextElement.SetFontSize(System.Windows.DependencyObject,System.Double)\n  - System.Windows.Documents.TextElement.SetFontStretch(System.Windows.DependencyObject,System.Windows.FontStretch)\n  - System.Windows.Documents.TextElement.SetFontStyle(System.Windows.DependencyObject,System.Windows.FontStyle)\n  - System.Windows.Documents.TextElement.SetFontWeight(System.Windows.DependencyObject,System.Windows.FontWeight)\n  - System.Windows.Documents.TextElement.SetForeground(System.Windows.DependencyObject,System.Windows.Media.Brush)\n  - System.Windows.Documents.TextElement.System#Windows#Markup#IAddChild#AddChild(System.Object)\n  - System.Windows.Documents.TextElement.System#Windows#Markup#IAddChild#AddText(System.String)\n  - System.Windows.Documents.TextElement.TextEffects\n  - System.Windows.Documents.TextElement.TextEffectsProperty\n  - System.Windows.Documents.TextElement.Typography\n  - System.Windows.FrameworkContentElement.AddLogicalChild(System.Object)\n  - System.Windows.FrameworkContentElement.BeginInit\n  - System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)\n  - System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)\n  - System.Windows.FrameworkContentElement.BindingGroup\n  - System.Windows.FrameworkContentElement.BindingGroupProperty\n  - System.Windows.FrameworkContentElement.BringIntoView\n  - System.Windows.FrameworkContentElement.ContextMenu\n  - System.Windows.FrameworkContentElement.ContextMenuClosing\n  - System.Windows.FrameworkContentElement.ContextMenuClosingEvent\n  - System.Windows.FrameworkContentElement.ContextMenuOpening\n  - System.Windows.FrameworkContentElement.ContextMenuOpeningEvent\n  - System.Windows.FrameworkContentElement.ContextMenuProperty\n  - System.Windows.FrameworkContentElement.Cursor\n  - System.Windows.FrameworkContentElement.CursorProperty\n  - System.Windows.FrameworkContentElement.DataContext\n  - System.Windows.FrameworkContentElement.DataContextChanged\n  - System.Windows.FrameworkContentElement.DataContextProperty\n  - System.Windows.FrameworkContentElement.DefaultStyleKey\n  - System.Windows.FrameworkContentElement.DefaultStyleKeyProperty\n  - System.Windows.FrameworkContentElement.EndInit\n  - System.Windows.FrameworkContentElement.FindName(System.String)\n  - System.Windows.FrameworkContentElement.FindResource(System.Object)\n  - System.Windows.FrameworkContentElement.FocusVisualStyle\n  - System.Windows.FrameworkContentElement.FocusVisualStyleProperty\n  - System.Windows.FrameworkContentElement.ForceCursor\n  - System.Windows.FrameworkContentElement.ForceCursorProperty\n  - System.Windows.FrameworkContentElement.GetBindingExpression(System.Windows.DependencyProperty)\n  - System.Windows.FrameworkContentElement.GetUIParentCore\n  - System.Windows.FrameworkContentElement.Initialized\n  - System.Windows.FrameworkContentElement.InputScope\n  - System.Windows.FrameworkContentElement.InputScopeProperty\n  - System.Windows.FrameworkContentElement.IsInitialized\n  - System.Windows.FrameworkContentElement.IsLoaded\n  - System.Windows.FrameworkContentElement.Language\n  - System.Windows.FrameworkContentElement.LanguageProperty\n  - System.Windows.FrameworkContentElement.Loaded\n  - System.Windows.FrameworkContentElement.LoadedEvent\n  - System.Windows.FrameworkContentElement.MoveFocus(System.Windows.Input.TraversalRequest)\n  - System.Windows.FrameworkContentElement.Name\n  - System.Windows.FrameworkContentElement.NameProperty\n  - System.Windows.FrameworkContentElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)\n  - System.Windows.FrameworkContentElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)\n  - System.Windows.FrameworkContentElement.OnGotFocus(System.Windows.RoutedEventArgs)\n  - System.Windows.FrameworkContentElement.OnInitialized(System.EventArgs)\n  - System.Windows.FrameworkContentElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)\n  - System.Windows.FrameworkContentElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)\n  - System.Windows.FrameworkContentElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)\n  - System.Windows.FrameworkContentElement.OverridesDefaultStyle\n  - System.Windows.FrameworkContentElement.OverridesDefaultStyleProperty\n  - System.Windows.FrameworkContentElement.Parent\n  - System.Windows.FrameworkContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)\n  - System.Windows.FrameworkContentElement.RegisterName(System.String,System.Object)\n  - System.Windows.FrameworkContentElement.RemoveLogicalChild(System.Object)\n  - System.Windows.FrameworkContentElement.Resources\n  - System.Windows.FrameworkContentElement.SetBinding(System.Windows.DependencyProperty,System.String)\n  - System.Windows.FrameworkContentElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)\n  - System.Windows.FrameworkContentElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.FrameworkContentElement.ShouldSerializeResources\n  - System.Windows.FrameworkContentElement.ShouldSerializeStyle\n  - System.Windows.FrameworkContentElement.SourceUpdated\n  - System.Windows.FrameworkContentElement.Style\n  - System.Windows.FrameworkContentElement.StyleProperty\n  - System.Windows.FrameworkContentElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)\n  - System.Windows.FrameworkContentElement.Tag\n  - System.Windows.FrameworkContentElement.TagProperty\n  - System.Windows.FrameworkContentElement.TargetUpdated\n  - System.Windows.FrameworkContentElement.TemplatedParent\n  - System.Windows.FrameworkContentElement.ToolTip\n  - System.Windows.FrameworkContentElement.ToolTipClosing\n  - System.Windows.FrameworkContentElement.ToolTipClosingEvent\n  - System.Windows.FrameworkContentElement.ToolTipOpening\n  - System.Windows.FrameworkContentElement.ToolTipOpeningEvent\n  - System.Windows.FrameworkContentElement.ToolTipProperty\n  - System.Windows.FrameworkContentElement.TryFindResource(System.Object)\n  - System.Windows.FrameworkContentElement.Unloaded\n  - System.Windows.FrameworkContentElement.UnloadedEvent\n  - System.Windows.FrameworkContentElement.UnregisterName(System.String)\n  - System.Windows.FrameworkContentElement.UpdateDefaultStyle\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  platform:\n  - net462\n- uid: System.Windows.Documents.AnchoredBlock.#ctor(System.Windows.Documents.Block,System.Windows.Documents.TextPointer)\n  id: '#ctor(System.Windows.Documents.Block,System.Windows.Documents.TextPointer)'\n  parent: System.Windows.Documents.AnchoredBlock\n  langs:\n  - csharp\n  name: AnchoredBlock(Block,TextPointer)\n  nameWithType: AnchoredBlock.AnchoredBlock(Block,TextPointer)\n  fullName: System.Windows.Documents.AnchoredBlock.AnchoredBlock(Block,TextPointer)\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  summary: Initializes base class values when called by a derived class, taking a specified <xref href=\"System.Windows.Documents.Block\"></xref> object as the initial contents of the new descendant of <xref href=\"System.Windows.Documents.AnchoredBlock\"></xref>, and a <xref href=\"System.Windows.Documents.TextPointer\"></xref> specifying an insertion position for the new <xref href=\"System.Windows.Documents.AnchoredBlock\"></xref> descendant.\n  syntax:\n    content: protected AnchoredBlock (System.Windows.Documents.Block block, System.Windows.Documents.TextPointer insertionPosition);\n    parameters:\n    - id: block\n      type: System.Windows.Documents.Block\n      description: A <xref href=\"System.Windows.Documents.Block\"></xref> object specifying the initial contents of the new element.  This parameter may be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, in which case no <xref href=\"System.Windows.Documents.Block\"></xref> is inserted.\n    - id: insertionPosition\n      type: System.Windows.Documents.TextPointer\n      description: A <xref href=\"System.Windows.Documents.TextPointer\"></xref> specifying an insertion position at which to insert the element after it is created, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> for no automatic insertion.\n  overload: System.Windows.Documents.AnchoredBlock.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.AnchoredBlock.Blocks\n  id: Blocks\n  parent: System.Windows.Documents.AnchoredBlock\n  langs:\n  - csharp\n  name: Blocks\n  nameWithType: AnchoredBlock.Blocks\n  fullName: System.Windows.Documents.AnchoredBlock.Blocks\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  summary: Gets a <xref href=\"System.Windows.Documents.BlockCollection\"></xref> containing the top-level <xref href=\"System.Windows.Documents.Block\"></xref> elements that comprise the contents of the element.\n  syntax:\n    content: public System.Windows.Documents.BlockCollection Blocks { get; }\n    return:\n      type: System.Windows.Documents.BlockCollection\n      description: \"A <xref href=\\\"System.Windows.Documents.BlockCollection\\\"></xref> containing the <xref href=\\\"System.Windows.Documents.Block\\\"></xref> elements that comprise the contents of the element.  \\n  \\n This property has no default value.\"\n  overload: System.Windows.Documents.AnchoredBlock.Blocks*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.AnchoredBlock.BorderBrush\n  id: BorderBrush\n  parent: System.Windows.Documents.AnchoredBlock\n  langs:\n  - csharp\n  name: BorderBrush\n  nameWithType: AnchoredBlock.BorderBrush\n  fullName: System.Windows.Documents.AnchoredBlock.BorderBrush\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  summary: Gets or sets a <xref href=\"System.Windows.Media.Brush\"></xref> to use when painting the element's border.\n  remarks: \"For a table of swatches that show the available pre-defined brush colors, see <xref:System.Windows.Media.Brushes>.  \\n  \\n<a name=\\\"dependencyPropertyInfo_BorderBrush\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Documents.AnchoredBlock.BorderBrushProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|\"\n  example:\n  - \"The following example shows how to set the <xref:System.Windows.Documents.Block.BorderBrush%2A> attribute of an element (<xref:System.Windows.Documents.Paragraph>).  \\n  \\n [!code-xml[BlockSnippets#_Block_BordersXAML](~/add/codesnippet/xaml/BlockSnippets/Window1.xaml#_block_bordersxaml)]  \\n  \\n The following figure shows how this example renders.  \\n  \\n ![Screenshot: Blue, 1&#47;4inch border around Block](~/add/media/block-borders.png \\\"Screenshot: Blue, 1/4inch border around Block\\\")  \\n  \\n The following example shows how to set the <xref:System.Windows.Documents.Block.BorderBrush%2A> property programmatically.  \\n  \\n [!code-vb[BlockSnippets#_Block_Borders](~/add/codesnippet/visualbasic/blocksnippets/window1.xaml.vb#_block_borders)]\\n [!code-cs[BlockSnippets#_Block_Borders](~/add/codesnippet/csharp/BlockSnippets/Window1.xaml.cs#_block_borders)]\"\n  syntax:\n    content: public System.Windows.Media.Brush BorderBrush { get; set; }\n    return:\n      type: System.Windows.Media.Brush\n      description: \"The brush used to apply to the element's border.  \\n  \\n The default value is a **null** brush.\"\n  overload: System.Windows.Documents.AnchoredBlock.BorderBrush*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.AnchoredBlock.BorderBrushProperty\n  id: BorderBrushProperty\n  parent: System.Windows.Documents.AnchoredBlock\n  langs:\n  - csharp\n  name: BorderBrushProperty\n  nameWithType: AnchoredBlock.BorderBrushProperty\n  fullName: System.Windows.Documents.AnchoredBlock.BorderBrushProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  summary: Identifies the <xref:System.Windows.Documents.AnchoredBlock.BorderBrush*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty BorderBrushProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.AnchoredBlock.BorderThickness\n  id: BorderThickness\n  parent: System.Windows.Documents.AnchoredBlock\n  langs:\n  - csharp\n  name: BorderThickness\n  nameWithType: AnchoredBlock.BorderThickness\n  fullName: System.Windows.Documents.AnchoredBlock.BorderThickness\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  summary: Gets or sets the border thickness for the element.\n  remarks: \"<a name=\\\"xamlAttributeUsage_BorderThickness\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object BorderThickness=\\\"uniformThickness\\\"/>  \\n- or -  \\n<object BorderThickness=\\\"independentThickness\\\"/>  \\n- or -  \\n<object BorderThickness=\\\"qualifiedUniformThickness\\\"/>  \\n- or -  \\n<object BorderThickness=\\\"qualifiedIndependentThickness\\\"/>  \\n```  \\n  \\n<a name=\\\"xamlValues_BorderThickness\\\"></a>   \\n## XAML Values  \\n *uniformThickness*  \\n String representation of a single <xref:System.Double> value to apply uniformly to all four thickness dimensions.  For example, a value of `\\\"10\\\"` is equivalent to a value of `\\\"10,10,10,10\\\"`.  An unqualified value is measured in device independent pixels. Strings need not explicitly include decimal points.  \\n  \\n *independentThickness*  \\n String representation of four ordered <xref:System.Double> values corresponding to independent thickness dimensions for left, top, right, and bottom, in this order.  The four values must be separated with commas; spaces are not allowed.  For example, \\\"5,10,15,20\\\" results in 5 pixels of border to the left of content, 10 pixels of border above content, 15 pixels of border to the right of content, and 20 pixels of border below the content.  \\n  \\n *qualifiedUniformThickness*  \\n A value described by *uniformThickness* followed by one of the following unit specifiers: `px`, `in`.  \\n  \\n `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n `in` is inches; 1in==96px  \\n  \\n For example, `\\\"1in\\\"` provides uniform border of 1 inch in all directions.  \\n  \\n *qualifiedIndependentThickness*  \\n A value described by *independentThickness*, with each independent value followed by one of the following unit specifiers: `px`, `in`.  \\n  \\n `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n `in` is inches; 1in==96px  \\n  \\n For example, `\\\"1.5in,0.8in,1.5in,0.8in\\\"`.  Unit specifiers may be mixed or omitted from one or more values.  \\n  \\n<a name=\\\"dependencyPropertyInfo_BorderThickness\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Documents.AnchoredBlock.BorderThicknessProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|\"\n  example:\n  - \"The following example shows how to set the <xref:System.Windows.Documents.Block.BorderThickness%2A> attribute of a <xref:System.Windows.Documents.Block> element (<xref:System.Windows.Documents.Paragraph>).  \\n  \\n [!code-xml[BlockSnippets#_Block_BordersXAML](~/add/codesnippet/xaml/BlockSnippets/Window1.xaml#_block_bordersxaml)]  \\n  \\n The following figure shows how this example renders.  \\n  \\n ![Screenshot: Blue, 1&#47;4inch border around Block](~/add/media/block-borders.png \\\"Screenshot: Blue, 1/4inch border around Block\\\")  \\n  \\n The following example shows how to set the <xref:System.Windows.Documents.Block.BorderThickness%2A> property programmatically.  \\n  \\n [!code-vb[BlockSnippets#_Block_Borders](~/add/codesnippet/visualbasic/blocksnippets/window1.xaml.vb#_block_borders)]\\n [!code-cs[BlockSnippets#_Block_Borders](~/add/codesnippet/csharp/BlockSnippets/Window1.xaml.cs#_block_borders)]\"\n  syntax:\n    content: public System.Windows.Thickness BorderThickness { get; set; }\n    return:\n      type: System.Windows.Thickness\n      description: \"A <xref href=\\\"System.Windows.Thickness\\\"></xref> structure specifying the amount of border to apply, in device independent pixels.  \\n  \\n The default value is a uniform thickness of zero (**0.0**).\"\n  overload: System.Windows.Documents.AnchoredBlock.BorderThickness*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.AnchoredBlock.BorderThicknessProperty\n  id: BorderThicknessProperty\n  parent: System.Windows.Documents.AnchoredBlock\n  langs:\n  - csharp\n  name: BorderThicknessProperty\n  nameWithType: AnchoredBlock.BorderThicknessProperty\n  fullName: System.Windows.Documents.AnchoredBlock.BorderThicknessProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  summary: Identifies the <xref:System.Windows.Documents.AnchoredBlock.BorderThickness*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty BorderThicknessProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.AnchoredBlock.LineHeight\n  id: LineHeight\n  parent: System.Windows.Documents.AnchoredBlock\n  langs:\n  - csharp\n  name: LineHeight\n  nameWithType: AnchoredBlock.LineHeight\n  fullName: System.Windows.Documents.AnchoredBlock.LineHeight\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  summary: Gets or sets the height of each line of content.\n  remarks: \"Changing this value does not change the height of the associated text; rather, it changes the height of the line that contains the text.  \\n  \\n In addition to this property, the layout of lines in a <xref:System.Windows.Documents.AnchoredBlock> is affected by its <xref:System.Windows.Documents.AnchoredBlock.LineStackingStrategy%2A> property.  \\n  \\n<a name=\\\"xamlAttributeUsage_LineHeight\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object LineHeight=\\\"double\\\"/>  \\n- or -  \\n<object LineHeight=\\\"qualifiedDouble\\\"/>  \\n- or -  \\n<object LineHeight=\\\"Auto\\\"/>  \\n```  \\n  \\n<a name=\\\"xamlValues_LineHeight\\\"></a>   \\n## XAML Values  \\n *double*  \\n String representation of a <xref:System.Double> value equal to or greater than `0.0034` but equal to or less than `160000`. An unqualified value is measured in device independent pixels. Strings need not explicitly include decimal points.  \\n  \\n *qualifiedDouble*  \\n A *double* value as described above, (excepting `Auto`) followed by one of the following unit specifiers: `px`, `in`, `cm`, `pt`.  \\n  \\n `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n `in` is inches; 1in==96px  \\n  \\n `cm` is centimeters; 1cm==(96/2.54) px  \\n  \\n `pt` is points; 1pt==(96/72) px  \\n  \\n Auto  \\n Causes the line height is determined automatically from the current font characteristics.  Equivalent to a property value of <xref:System.Double.NaN>.  \\n  \\n<a name=\\\"dependencyPropertyInfo_LineHeight\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Documents.AnchoredBlock.LineHeightProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|\"\n  example:\n  - \"The following example shows how to set the LineHeight attribute of a <xref:System.Windows.Documents.Block> element.  \\n  \\n [!code-xml[BlockSnippets#_Block_LineHeightXAML](~/add/codesnippet/xaml/BlockSnippets/Window1.xaml#_block_lineheightxaml)]  \\n  \\n The following figure shows how the previous example renders.  \\n  \\n ![Screenshot: FlowDocument LineHeight](~/add/media/flowdocument-lineheight.png \\\"Screenshot: FlowDocument LineHeight\\\")  \\n  \\n The following figure shows how the same example renders with the default setting of LineHeight=<xref:System.Double.NaN>.  \\n  \\n ![Screenshot: FlowDocument LineHeight default](~/add/media/flowdocument-lineheightdefault.png \\\"Screenshot: FlowDocument LineHeight default\\\")  \\n  \\n The following example shows how to set the LineHeight property programmatically.  \\n  \\n [!code-vb[BlockSnippets#_Block_LineHeight](~/add/codesnippet/visualbasic/blocksnippets/window1.xaml.vb#_block_lineheight)]\\n [!code-cs[BlockSnippets#_Block_LineHeight](~/add/codesnippet/csharp/BlockSnippets/Window1.xaml.cs#_block_lineheight)]\"\n  syntax:\n    content: public double LineHeight { get; set; }\n    return:\n      type: System.Double\n      description: \"A double value specifying the height of line in device independent pixels.  LineHeight must be equal to or greater than `0.0034` and equal to or less then `160000`.  \\n  \\n A value of <xref:System.Double> (equivalent to an attribute value of \\\"`Auto`\\\") causes the line height is determined automatically from the current font characteristics.  \\n  \\n The default value is <xref:System.Double>.\"\n  overload: System.Windows.Documents.AnchoredBlock.LineHeight*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Raised if an attempt is made to set <xref:System.Windows.Controls.TextBlock.LineHeight*> to a non-positive value.\n  platform:\n  - net462\n- uid: System.Windows.Documents.AnchoredBlock.LineHeightProperty\n  id: LineHeightProperty\n  parent: System.Windows.Documents.AnchoredBlock\n  langs:\n  - csharp\n  name: LineHeightProperty\n  nameWithType: AnchoredBlock.LineHeightProperty\n  fullName: System.Windows.Documents.AnchoredBlock.LineHeightProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  summary: Identifies the <xref:System.Windows.Documents.AnchoredBlock.LineHeight*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty LineHeightProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.AnchoredBlock.LineStackingStrategy\n  id: LineStackingStrategy\n  parent: System.Windows.Documents.AnchoredBlock\n  langs:\n  - csharp\n  name: LineStackingStrategy\n  nameWithType: AnchoredBlock.LineStackingStrategy\n  fullName: System.Windows.Documents.AnchoredBlock.LineStackingStrategy\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  summary: Gets or sets the mechanism by which a line box is determined for each line of text within the text element.\n  remarks: \"<a name=\\\"dependencyPropertyInfo_LineStackingStrategyProperty\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Documents.AnchoredBlock.LineStackingStrategyProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|\"\n  example:\n  - \"The following example shows how to use the <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> property to determine how the line boxes are created for text lines of a <xref:System.Windows.Controls.TextBlock>. The first <xref:System.Windows.Controls.TextBlock> has a <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> value of <xref:System.Windows.LineStackingStrategy> and the second <xref:System.Windows.Controls.TextBlock> has a value of <xref:System.Windows.LineStackingStrategy>.  \\n  \\n [!code-xml[FlowMiscSnippets_snip#LineStackingStrategyExampleWholePage](~/add/codesnippet/xaml/flowmiscsnippets_snip/linestackingstrategyexample.xaml#linestackingstrategyexamplewholepage)]  \\n  \\n The following illustration shows the result of the code above.  \\n  \\n ![Screenshot: Compare LineStackingStrategy values](~/add/media/flow-linestackingstrategy.gif \\\"Screenshot: Compare LineStackingStrategy values\\\")\"\n  syntax:\n    content: public System.Windows.LineStackingStrategy LineStackingStrategy { get; set; }\n    return:\n      type: System.Windows.LineStackingStrategy\n      description: The mechanism by which a line box is determined for each line of text within the text element. The default value is <xref href=\"System.Windows.LineStackingStrategy\"></xref>.\n  overload: System.Windows.Documents.AnchoredBlock.LineStackingStrategy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.AnchoredBlock.LineStackingStrategyProperty\n  id: LineStackingStrategyProperty\n  parent: System.Windows.Documents.AnchoredBlock\n  langs:\n  - csharp\n  name: LineStackingStrategyProperty\n  nameWithType: AnchoredBlock.LineStackingStrategyProperty\n  fullName: System.Windows.Documents.AnchoredBlock.LineStackingStrategyProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  summary: Identifies the <xref:System.Windows.Documents.AnchoredBlock.LineStackingStrategy*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty LineStackingStrategyProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.AnchoredBlock.Margin\n  id: Margin\n  parent: System.Windows.Documents.AnchoredBlock\n  langs:\n  - csharp\n  name: Margin\n  nameWithType: AnchoredBlock.Margin\n  fullName: System.Windows.Documents.AnchoredBlock.Margin\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  summary: Gets or sets the margin thickness for the element.\n  remarks: \"<xref:System.Windows.Documents.ListItem.Margin%2A> is buffer space that falls outside of an element's content area, between the edges of the element's content area and the edges of the parent element.  Contrast with <xref:System.Windows.Documents.ListItem.Padding%2A>, which is buffer space that falls inside of an element's content area, between the element's content and the inner edge of the element.  \\n  \\n<a name=\\\"xamlAttributeUsage_Margin\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object Margin=\\\"uniformThickness\\\"/>  \\n- or -  \\n<object Margin=\\\"independentThickness\\\"/>  \\n- or -  \\n<object Margin=\\\"qualifiedUniformThickness\\\"/>  \\n- or -  \\n<object Margin=\\\"qualifiedIndependentThickness\\\"/>  \\n```  \\n  \\n<a name=\\\"xamlValues_Margin\\\"></a>   \\n## XAML Values  \\n *uniformThickness*  \\n String representation of a single <xref:System.Double> value to apply uniformly to all four thickness dimensions.  For example, a value of `\\\"10\\\"` is equivalent to a value of `\\\"10,10,10,10\\\"`.  An unqualified value is measured in device independent pixels. Strings need not explicitly include decimal points.  \\n  \\n *independentThickness*  \\n String representation of four ordered <xref:System.Double> values corresponding to independent thickness dimensions for left, top, right, and bottom, in this order.  The four values must be separated with commas; spaces are not allowed.  For example, \\\"5,10,15,20\\\" results in 5 pixels of margin to the left of content, 10 pixels of margin above content, 15 pixels of margin to the right of content, and 20 pixels of margin below the content.  \\n  \\n *qualifiedUniformThickness*  \\n A value described by *uniformThickness* followed by one of the following unit specifiers: `px`, `in`.  \\n  \\n `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n `in` is inches; 1in==96px  \\n  \\n For example, `\\\"1in\\\"` provides uniform margin of 1 inch in all directions.  \\n  \\n *qualifiedIndependentThickness*  \\n A value described by *independentThickness*, with each independent value followed by one of the following unit specifiers: `px`, `in`.  \\n  \\n `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n `in` is inches; 1in==96px  \\n  \\n For example, `\\\"1.5in,0.8in,1.5in,0.8in\\\"`.  Unit specifiers may be mixed or omitted from one or more values.  \\n  \\n<a name=\\\"dependencyPropertyInfo_Margin\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Documents.AnchoredBlock.MarginProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|\"\n  example:\n  - \"The following example shows how to set the Margin attribute of a <xref:System.Windows.Documents.Block> element (<xref:System.Windows.Documents.Paragraph>).  \\n  \\n [!code-xml[BlockSnippets#_Block_MarginPaddingXAML](~/add/codesnippet/xaml/BlockSnippets/Window1.xaml#_block_marginpaddingxaml)]  \\n  \\n The following figure shows how this example renders.  Exaggerated thicknesses and colors are used for illustration.  \\n  \\n ![Screenshot: Paragraphs with padding and margins](~/add/media/block-marginpadding.png \\\"Screenshot: Paragraphs with padding and margins\\\")  \\n  \\n The following example shows how to set the Margin property programmatically.  \\n  \\n [!code-vb[BlockSnippets#_Block_MarginPadding](~/add/codesnippet/visualbasic/blocksnippets/window1.xaml.vb#_block_marginpadding)]\\n [!code-cs[BlockSnippets#_Block_MarginPadding](~/add/codesnippet/csharp/BlockSnippets/Window1.xaml.cs#_block_marginpadding)]\"\n  syntax:\n    content: public System.Windows.Thickness Margin { get; set; }\n    return:\n      type: System.Windows.Thickness\n      description: \"A <xref href=\\\"System.Windows.Thickness\\\"></xref> structure specifying the amount of margin to apply, in device independent pixels.  \\n  \\n The default value is a uniform thickness of zero (**0.0**).\"\n  overload: System.Windows.Documents.AnchoredBlock.Margin*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.AnchoredBlock.MarginProperty\n  id: MarginProperty\n  parent: System.Windows.Documents.AnchoredBlock\n  langs:\n  - csharp\n  name: MarginProperty\n  nameWithType: AnchoredBlock.MarginProperty\n  fullName: System.Windows.Documents.AnchoredBlock.MarginProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  summary: Identifies the <xref:System.Windows.Documents.AnchoredBlock.Margin*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty MarginProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.AnchoredBlock.Padding\n  id: Padding\n  parent: System.Windows.Documents.AnchoredBlock\n  langs:\n  - csharp\n  name: Padding\n  nameWithType: AnchoredBlock.Padding\n  fullName: System.Windows.Documents.AnchoredBlock.Padding\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  summary: Gets or sets the padding thickness for the element.\n  remarks: \"<xref:System.Windows.Documents.ListItem.Padding%2A> is buffer space that falls inside an element's content area, between the element's content and the inner edge of the element.  Contrast with <xref:System.Windows.Documents.ListItem.Margin%2A>, which is buffer space that falls outside of an element's content area, between the edges of the element's content area and the edges of the parent element.  \\n  \\n<a name=\\\"xamlAttributeUsage_Padding\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object Padding=\\\"uniformThickness\\\"/>  \\n- or -  \\n<object Padding=\\\"independentThickness\\\"/>  \\n- or -  \\n<object Padding=\\\"qualifiedUniformThickness\\\"/>  \\n- or -  \\n<object Padding=\\\"qualifiedIndependentThickness\\\"/>  \\n```  \\n  \\n<a name=\\\"xamlValues_Padding\\\"></a>   \\n## XAML Values  \\n *uniformThickness*  \\n String representation of a single <xref:System.Double> value to apply uniformly to all four thickness dimensions.  For example, a value of `\\\"10\\\"` is equivalent to a value of `\\\"10,10,10,10\\\"`.  An unqualified value is measured in device independent pixels. Strings need not explicitly include decimal points.  \\n  \\n *independentThickness*  \\n String representation of four ordered <xref:System.Double> values corresponding to independent thickness dimensions for left, top, right, and bottom, in this order.  The four values must be separated with commas; spaces are not allowed.  For example, \\\"5,10,15,20\\\" results in 5 pixels of padding to the left of content, 10 pixels of padding above content, 15 pixels of padding to the right of content, and 20 pixels of padding below the content.  \\n  \\n *qualifiedUniformThickness*  \\n A value described by *uniformThickness* followed by one of the following unit specifiers: `px`, `in`.  \\n  \\n `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n `in` is inches; 1in==96px  \\n  \\n For example, `\\\"1in\\\"` provides uniform padding of 1 inch in all directions.  \\n  \\n *qualifiedIndependentThickness*  \\n A value described by *independentThickness*, with each independent value followed by one of the following unit specifiers: `px`, `in`.  \\n  \\n `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n `in` is inches; 1in==96px  \\n  \\n For example, `\\\"1.5in,0.8in,1.5in,0.8in\\\"`.  Unit specifiers may be mixed or omitted from one or more values.  \\n  \\n<a name=\\\"dependencyPropertyInfo_Padding\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Documents.AnchoredBlock.PaddingProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|\"\n  example:\n  - \"The following example shows how to set the Padding attribute of a <xref:System.Windows.Documents.Block> element (<xref:System.Windows.Documents.Paragraph>).  \\n  \\n [!code-xml[BlockSnippets#_Block_MarginPaddingXAML](~/add/codesnippet/xaml/BlockSnippets/Window1.xaml#_block_marginpaddingxaml)]  \\n  \\n The following figure shows how this example renders.  Exaggerated thicknesses and colors are used for illustration.  \\n  \\n ![Screenshot: Paragraphs with padding and margins](~/add/media/block-marginpadding.png \\\"Screenshot: Paragraphs with padding and margins\\\")  \\n  \\n The following example shows how to set the Padding property programmatically.  \\n  \\n [!code-vb[BlockSnippets#_Block_MarginPadding](~/add/codesnippet/visualbasic/blocksnippets/window1.xaml.vb#_block_marginpadding)]\\n [!code-cs[BlockSnippets#_Block_MarginPadding](~/add/codesnippet/csharp/BlockSnippets/Window1.xaml.cs#_block_marginpadding)]\"\n  syntax:\n    content: public System.Windows.Thickness Padding { get; set; }\n    return:\n      type: System.Windows.Thickness\n      description: \"A <xref href=\\\"System.Windows.Thickness\\\"></xref> structure specifying the amount of padding to apply, in device independent pixels.  \\n  \\n The default value is a uniform thickness of zero (**0.0**).\"\n  overload: System.Windows.Documents.AnchoredBlock.Padding*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.AnchoredBlock.PaddingProperty\n  id: PaddingProperty\n  parent: System.Windows.Documents.AnchoredBlock\n  langs:\n  - csharp\n  name: PaddingProperty\n  nameWithType: AnchoredBlock.PaddingProperty\n  fullName: System.Windows.Documents.AnchoredBlock.PaddingProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  summary: Identifies the <xref:System.Windows.Documents.AnchoredBlock.Padding*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty PaddingProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.AnchoredBlock.ShouldSerializeBlocks(System.Windows.Markup.XamlDesignerSerializationManager)\n  id: ShouldSerializeBlocks(System.Windows.Markup.XamlDesignerSerializationManager)\n  parent: System.Windows.Documents.AnchoredBlock\n  langs:\n  - csharp\n  name: ShouldSerializeBlocks(XamlDesignerSerializationManager)\n  nameWithType: AnchoredBlock.ShouldSerializeBlocks(XamlDesignerSerializationManager)\n  fullName: System.Windows.Documents.AnchoredBlock.ShouldSerializeBlocks(XamlDesignerSerializationManager)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  summary: Returns a value that indicates whether or not the effective value of the <xref:System.Windows.Documents.AnchoredBlock.Blocks*> property should be serialized during serialization of an object deriving from <xref href=\"System.Windows.Documents.AnchoredBlock\"></xref>.\n  syntax:\n    content: public bool ShouldSerializeBlocks (System.Windows.Markup.XamlDesignerSerializationManager manager);\n    parameters:\n    - id: manager\n      type: System.Windows.Markup.XamlDesignerSerializationManager\n      description: A serialization service manager object for this object.\n    return:\n      type: System.Boolean\n      description: '**true** if the <xref:System.Windows.Documents.AnchoredBlock.Blocks*> property should be serialized; otherwise, **false**.'\n  overload: System.Windows.Documents.AnchoredBlock.ShouldSerializeBlocks*\n  exceptions:\n  - type: System.NullReferenceException\n    commentId: T:System.NullReferenceException\n    description: Raised when <code>manager</code> is **null**.\n  platform:\n  - net462\n- uid: System.Windows.Documents.AnchoredBlock.TextAlignment\n  id: TextAlignment\n  parent: System.Windows.Documents.AnchoredBlock\n  langs:\n  - csharp\n  name: TextAlignment\n  nameWithType: AnchoredBlock.TextAlignment\n  fullName: System.Windows.Documents.AnchoredBlock.TextAlignment\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  summary: Gets or sets a value that indicates the horizontal alignment of text content.\n  remarks: \"<a name=\\\"dependencyPropertyInfo_TextAlignment\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Documents.AnchoredBlock.TextAlignmentProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|\"\n  example:\n  - \"The following example shows how to set the TextAlignment attribute of a <xref:System.Windows.Documents.Block> element.  \\n  \\n [!code-xml[BlockSnippets#_Block_TextAlignmentXAML](~/add/codesnippet/xaml/BlockSnippets/Window1.xaml#_block_textalignmentxaml)]  \\n  \\n The following figure shows how the previous example renders with **Left** text alignment (the default).  \\n  \\n ![Screenshot: TextAlign property value of Left](~/add/media/flowdoc-textalign-left.png \\\"Screenshot: TextAlign property value of Left\\\")  \\n  \\n The following figure shows how the same example renders with **Right** text alignment.  \\n  \\n ![Screenshot: TextAlign value of Right](~/add/media/flowdoc-textalign-right.png \\\"Screenshot: TextAlign value of Right\\\")  \\n  \\n The following figure shows how the same example renders with **Center** text alignment.  \\n  \\n ![Screenshot: TextAlign property value of Center](~/add/media/flowdoc-textalign-center.png \\\"Screenshot: TextAlign property value of Center\\\")  \\n  \\n The following example shows how to set the TextAlignment property programmatically.  \\n  \\n [!code-vb[BlockSnippets#_Block_TextAlignment](~/add/codesnippet/visualbasic/blocksnippets/window1.xaml.vb#_block_textalignment)]\\n [!code-cs[BlockSnippets#_Block_TextAlignment](~/add/codesnippet/csharp/BlockSnippets/Window1.xaml.cs#_block_textalignment)]\"\n  syntax:\n    content: public System.Windows.TextAlignment TextAlignment { get; set; }\n    return:\n      type: System.Windows.TextAlignment\n      description: \"A member of the <xref href=\\\"System.Windows.TextAlignment\\\"></xref> enumerations specifying the desired alignment.  \\n  \\n The default value is <xref href=\\\"System.Windows.TextAlignment\\\"></xref>.\"\n  overload: System.Windows.Documents.AnchoredBlock.TextAlignment*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.AnchoredBlock.TextAlignmentProperty\n  id: TextAlignmentProperty\n  parent: System.Windows.Documents.AnchoredBlock\n  langs:\n  - csharp\n  name: TextAlignmentProperty\n  nameWithType: AnchoredBlock.TextAlignmentProperty\n  fullName: System.Windows.Documents.AnchoredBlock.TextAlignmentProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  summary: Identifies the <xref:System.Windows.Documents.AnchoredBlock.TextAlignment*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty TextAlignmentProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Documents.Inline\n  isExternal: false\n  name: System.Windows.Documents.Inline\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.NullReferenceException\n  isExternal: true\n  name: System.NullReferenceException\n- uid: System.Windows.Documents.AnchoredBlock.#ctor(System.Windows.Documents.Block,System.Windows.Documents.TextPointer)\n  parent: System.Windows.Documents.AnchoredBlock\n  isExternal: false\n  name: AnchoredBlock(Block,TextPointer)\n  nameWithType: AnchoredBlock.AnchoredBlock(Block,TextPointer)\n  fullName: System.Windows.Documents.AnchoredBlock.AnchoredBlock(Block,TextPointer)\n- uid: System.Windows.Documents.Block\n  parent: System.Windows.Documents\n  isExternal: false\n  name: Block\n  nameWithType: Block\n  fullName: System.Windows.Documents.Block\n- uid: System.Windows.Documents.TextPointer\n  parent: System.Windows.Documents\n  isExternal: false\n  name: TextPointer\n  nameWithType: TextPointer\n  fullName: System.Windows.Documents.TextPointer\n- uid: System.Windows.Documents.AnchoredBlock.Blocks\n  parent: System.Windows.Documents.AnchoredBlock\n  isExternal: false\n  name: Blocks\n  nameWithType: AnchoredBlock.Blocks\n  fullName: System.Windows.Documents.AnchoredBlock.Blocks\n- uid: System.Windows.Documents.BlockCollection\n  parent: System.Windows.Documents\n  isExternal: false\n  name: BlockCollection\n  nameWithType: BlockCollection\n  fullName: System.Windows.Documents.BlockCollection\n- uid: System.Windows.Documents.AnchoredBlock.BorderBrush\n  parent: System.Windows.Documents.AnchoredBlock\n  isExternal: false\n  name: BorderBrush\n  nameWithType: AnchoredBlock.BorderBrush\n  fullName: System.Windows.Documents.AnchoredBlock.BorderBrush\n- uid: System.Windows.Media.Brush\n  parent: System.Windows.Media\n  isExternal: false\n  name: Brush\n  nameWithType: Brush\n  fullName: System.Windows.Media.Brush\n- uid: System.Windows.Documents.AnchoredBlock.BorderBrushProperty\n  parent: System.Windows.Documents.AnchoredBlock\n  isExternal: false\n  name: BorderBrushProperty\n  nameWithType: AnchoredBlock.BorderBrushProperty\n  fullName: System.Windows.Documents.AnchoredBlock.BorderBrushProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Documents.AnchoredBlock.BorderThickness\n  parent: System.Windows.Documents.AnchoredBlock\n  isExternal: false\n  name: BorderThickness\n  nameWithType: AnchoredBlock.BorderThickness\n  fullName: System.Windows.Documents.AnchoredBlock.BorderThickness\n- uid: System.Windows.Thickness\n  parent: System.Windows\n  isExternal: false\n  name: Thickness\n  nameWithType: Thickness\n  fullName: System.Windows.Thickness\n- uid: System.Windows.Documents.AnchoredBlock.BorderThicknessProperty\n  parent: System.Windows.Documents.AnchoredBlock\n  isExternal: false\n  name: BorderThicknessProperty\n  nameWithType: AnchoredBlock.BorderThicknessProperty\n  fullName: System.Windows.Documents.AnchoredBlock.BorderThicknessProperty\n- uid: System.Windows.Documents.AnchoredBlock.LineHeight\n  parent: System.Windows.Documents.AnchoredBlock\n  isExternal: false\n  name: LineHeight\n  nameWithType: AnchoredBlock.LineHeight\n  fullName: System.Windows.Documents.AnchoredBlock.LineHeight\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Documents.AnchoredBlock.LineHeightProperty\n  parent: System.Windows.Documents.AnchoredBlock\n  isExternal: false\n  name: LineHeightProperty\n  nameWithType: AnchoredBlock.LineHeightProperty\n  fullName: System.Windows.Documents.AnchoredBlock.LineHeightProperty\n- uid: System.Windows.Documents.AnchoredBlock.LineStackingStrategy\n  parent: System.Windows.Documents.AnchoredBlock\n  isExternal: false\n  name: LineStackingStrategy\n  nameWithType: AnchoredBlock.LineStackingStrategy\n  fullName: System.Windows.Documents.AnchoredBlock.LineStackingStrategy\n- uid: System.Windows.LineStackingStrategy\n  parent: System.Windows\n  isExternal: false\n  name: LineStackingStrategy\n  nameWithType: LineStackingStrategy\n  fullName: System.Windows.LineStackingStrategy\n- uid: System.Windows.Documents.AnchoredBlock.LineStackingStrategyProperty\n  parent: System.Windows.Documents.AnchoredBlock\n  isExternal: false\n  name: LineStackingStrategyProperty\n  nameWithType: AnchoredBlock.LineStackingStrategyProperty\n  fullName: System.Windows.Documents.AnchoredBlock.LineStackingStrategyProperty\n- uid: System.Windows.Documents.AnchoredBlock.Margin\n  parent: System.Windows.Documents.AnchoredBlock\n  isExternal: false\n  name: Margin\n  nameWithType: AnchoredBlock.Margin\n  fullName: System.Windows.Documents.AnchoredBlock.Margin\n- uid: System.Windows.Documents.AnchoredBlock.MarginProperty\n  parent: System.Windows.Documents.AnchoredBlock\n  isExternal: false\n  name: MarginProperty\n  nameWithType: AnchoredBlock.MarginProperty\n  fullName: System.Windows.Documents.AnchoredBlock.MarginProperty\n- uid: System.Windows.Documents.AnchoredBlock.Padding\n  parent: System.Windows.Documents.AnchoredBlock\n  isExternal: false\n  name: Padding\n  nameWithType: AnchoredBlock.Padding\n  fullName: System.Windows.Documents.AnchoredBlock.Padding\n- uid: System.Windows.Documents.AnchoredBlock.PaddingProperty\n  parent: System.Windows.Documents.AnchoredBlock\n  isExternal: false\n  name: PaddingProperty\n  nameWithType: AnchoredBlock.PaddingProperty\n  fullName: System.Windows.Documents.AnchoredBlock.PaddingProperty\n- uid: System.Windows.Documents.AnchoredBlock.ShouldSerializeBlocks(System.Windows.Markup.XamlDesignerSerializationManager)\n  parent: System.Windows.Documents.AnchoredBlock\n  isExternal: false\n  name: ShouldSerializeBlocks(XamlDesignerSerializationManager)\n  nameWithType: AnchoredBlock.ShouldSerializeBlocks(XamlDesignerSerializationManager)\n  fullName: System.Windows.Documents.AnchoredBlock.ShouldSerializeBlocks(XamlDesignerSerializationManager)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Markup.XamlDesignerSerializationManager\n  parent: System.Windows.Markup\n  isExternal: false\n  name: XamlDesignerSerializationManager\n  nameWithType: XamlDesignerSerializationManager\n  fullName: System.Windows.Markup.XamlDesignerSerializationManager\n- uid: System.Windows.Documents.AnchoredBlock.TextAlignment\n  parent: System.Windows.Documents.AnchoredBlock\n  isExternal: false\n  name: TextAlignment\n  nameWithType: AnchoredBlock.TextAlignment\n  fullName: System.Windows.Documents.AnchoredBlock.TextAlignment\n- uid: System.Windows.TextAlignment\n  parent: System.Windows\n  isExternal: false\n  name: TextAlignment\n  nameWithType: TextAlignment\n  fullName: System.Windows.TextAlignment\n- uid: System.Windows.Documents.AnchoredBlock.TextAlignmentProperty\n  parent: System.Windows.Documents.AnchoredBlock\n  isExternal: false\n  name: TextAlignmentProperty\n  nameWithType: AnchoredBlock.TextAlignmentProperty\n  fullName: System.Windows.Documents.AnchoredBlock.TextAlignmentProperty\n- uid: System.Windows.Documents.AnchoredBlock.#ctor*\n  parent: System.Windows.Documents.AnchoredBlock\n  isExternal: false\n  name: AnchoredBlock\n  nameWithType: AnchoredBlock.AnchoredBlock\n- uid: System.Windows.Documents.AnchoredBlock.Blocks*\n  parent: System.Windows.Documents.AnchoredBlock\n  isExternal: false\n  name: Blocks\n  nameWithType: AnchoredBlock.Blocks\n- uid: System.Windows.Documents.AnchoredBlock.BorderBrush*\n  parent: System.Windows.Documents.AnchoredBlock\n  isExternal: false\n  name: BorderBrush\n  nameWithType: AnchoredBlock.BorderBrush\n- uid: System.Windows.Documents.AnchoredBlock.BorderThickness*\n  parent: System.Windows.Documents.AnchoredBlock\n  isExternal: false\n  name: BorderThickness\n  nameWithType: AnchoredBlock.BorderThickness\n- uid: System.Windows.Documents.AnchoredBlock.LineHeight*\n  parent: System.Windows.Documents.AnchoredBlock\n  isExternal: false\n  name: LineHeight\n  nameWithType: AnchoredBlock.LineHeight\n- uid: System.Windows.Documents.AnchoredBlock.LineStackingStrategy*\n  parent: System.Windows.Documents.AnchoredBlock\n  isExternal: false\n  name: LineStackingStrategy\n  nameWithType: AnchoredBlock.LineStackingStrategy\n- uid: System.Windows.Documents.AnchoredBlock.Margin*\n  parent: System.Windows.Documents.AnchoredBlock\n  isExternal: false\n  name: Margin\n  nameWithType: AnchoredBlock.Margin\n- uid: System.Windows.Documents.AnchoredBlock.Padding*\n  parent: System.Windows.Documents.AnchoredBlock\n  isExternal: false\n  name: Padding\n  nameWithType: AnchoredBlock.Padding\n- uid: System.Windows.Documents.AnchoredBlock.ShouldSerializeBlocks*\n  parent: System.Windows.Documents.AnchoredBlock\n  isExternal: false\n  name: ShouldSerializeBlocks\n  nameWithType: AnchoredBlock.ShouldSerializeBlocks\n- uid: System.Windows.Documents.AnchoredBlock.TextAlignment*\n  parent: System.Windows.Documents.AnchoredBlock\n  isExternal: false\n  name: TextAlignment\n  nameWithType: AnchoredBlock.TextAlignment\n"}