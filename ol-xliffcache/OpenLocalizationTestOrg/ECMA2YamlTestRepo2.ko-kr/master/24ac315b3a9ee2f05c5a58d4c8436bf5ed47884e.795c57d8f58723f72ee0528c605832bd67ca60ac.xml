{"nodes":[{"pos":[11180,11192],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11872,11884],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11963,11975],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12732,12744],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12830,12842],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13594,13606],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13685,13697],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13766,13778],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14689,14701],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14780,14792],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14861,14873],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14959,14971],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15539,15551],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16095,16107],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16652,16664],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17218,17230],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17854,17866],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17930,17942],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18635,18647],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18715,18727],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18791,18803],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19604,19616],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19684,19696],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19768,19780],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19844,19856],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20877,20889],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20962,20974],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21051,21063],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21125,21137],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21209,21221],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21285,21297],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21866,21878],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22523,22535],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22599,22611],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23325,23337],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23405,23417],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23481,23493],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24315,24327],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24395,24407],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24479,24491],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24555,24567],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25484,25496],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25569,25581],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25643,25655],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25727,25739],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25803,25815],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26326,26338],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26850,26862],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27377,27389],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29012,29024],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29098,29110],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29791,29803],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29874,29886],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29960,29972],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30553,30565],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[31099,31111],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[31783,31795],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32394,32406],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32976,32988],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33606,33618],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[34220,34232],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[34875,34887],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[35556,35568],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[35637,35649],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[36325,36337],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[36406,36418],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[37004,37016],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[37075,37087],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[37611,37623],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[38199,38211],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[38813,38825],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[39434,39446],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[40085,40097],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[40153,40165],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[40822,40834],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[41505,41517],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[42230,42242],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[43145,43157],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[43241,43253],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[44009,44021],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[44097,44109],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[44750,44762],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[45587,45599],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[45675,45687],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[46413,46425],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[46501,46513],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[47239,47251],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[47327,47339],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[48086,48098],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[48174,48186],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[48846,48858],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[49342,49354],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[49918,49930],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[50443,50455],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[50904,50916],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[51467,51479],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[52022,52034],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[52613,52625],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[53199,53211],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[53897,53909],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[54493,54505],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[55008,55020],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[55553,55565],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[56166,56178],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[56247,56259],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[57086,57098],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[57171,57183],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[57260,57272],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[57341,57353],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[58042,58054],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[58123,58135],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[58916,58928],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[58994,59006],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[59075,59087],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[59703,59715],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[59784,59796],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[60478,60490],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[60556,60568],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[60637,60649],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[61294,61306],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[61375,61387],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[62239,62251],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[62315,62327],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[62396,62408],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[63018,63030],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[63954,63966],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[64493,64505],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[65062,65074],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[65856,65868],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[65937,65949],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[66767,66779],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[66848,66860],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[67482,67494],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[67563,67575],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[68298,68310],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[68383,68395],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[68464,68476],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[69306,69318],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[69413,69425],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[69494,69506],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[70364,70376],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[70479,70491],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[70560,70572],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[71503,71515],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[71588,71600],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[71695,71707],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[71776,71788],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[72747,72759],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[72832,72844],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[72947,72959],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[73028,73040],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[73750,73762],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[73831,73843],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[74776,74788],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[74883,74895],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[74964,74976],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[75937,75949],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[76052,76064],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[76133,76145],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[76947,76959],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[77025,77037],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[77106,77118],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[78128,78140],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[78206,78218],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[78313,78325],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[78394,78406],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[79444,79456],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[79522,79534],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[79637,79649],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[79718,79730],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[80367,80379],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[80448,80460],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[81294,81306],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[81401,81413],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[81482,81494],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[82356,82368],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[82471,82483],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[82552,82564],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[83267,83279],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[83345,83357],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[83426,83438],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[84349,84361],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[84427,84439],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[84534,84546],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[84615,84627],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[85566,85578],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[85644,85656],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[85759,85771],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[85840,85852],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[86518,86530],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[86599,86611],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[87692,87704],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[87768,87780],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[87875,87887],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[87956,87968],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[89077,89089],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[89153,89165],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[89268,89280],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[89349,89361],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[89998,90010],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[91514,91526],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[92293,92305],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[92400,92412],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[93207,93219],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[93322,93334],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[93956,93968],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[94030,94042],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[94872,94884],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[94946,94958],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[95053,95065],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[95923,95935],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[95997,96009],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[96112,96124],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[96869,96881],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[97725,97737],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[98577,98589],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[98680,98692],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[99732,99744],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[99835,99847],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[99939,99951],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[100603,100615],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[101169,101181],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[101746,101758],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[102297,102309],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Messaging.MessageQueue\n  id: MessageQueue\n  children:\n  - System.Messaging.MessageQueue.#ctor\n  - System.Messaging.MessageQueue.#ctor(System.String)\n  - System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)\n  - System.Messaging.MessageQueue.#ctor(System.String,System.Messaging.QueueAccessMode)\n  - System.Messaging.MessageQueue.#ctor(System.String,System.Boolean,System.Boolean)\n  - System.Messaging.MessageQueue.#ctor(System.String,System.Boolean,System.Boolean,System.Messaging.QueueAccessMode)\n  - System.Messaging.MessageQueue.AccessMode\n  - System.Messaging.MessageQueue.Authenticate\n  - System.Messaging.MessageQueue.BasePriority\n  - System.Messaging.MessageQueue.BeginPeek\n  - System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)\n  - System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)\n  - System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)\n  - System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)\n  - System.Messaging.MessageQueue.BeginReceive\n  - System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)\n  - System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)\n  - System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)\n  - System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)\n  - System.Messaging.MessageQueue.CanRead\n  - System.Messaging.MessageQueue.CanWrite\n  - System.Messaging.MessageQueue.Category\n  - System.Messaging.MessageQueue.ClearConnectionCache\n  - System.Messaging.MessageQueue.Close\n  - System.Messaging.MessageQueue.Create(System.String)\n  - System.Messaging.MessageQueue.Create(System.String,System.Boolean)\n  - System.Messaging.MessageQueue.CreateCursor\n  - System.Messaging.MessageQueue.CreateTime\n  - System.Messaging.MessageQueue.DefaultPropertiesToSend\n  - System.Messaging.MessageQueue.Delete(System.String)\n  - System.Messaging.MessageQueue.DenySharedReceive\n  - System.Messaging.MessageQueue.Dispose(System.Boolean)\n  - System.Messaging.MessageQueue.EnableConnectionCache\n  - System.Messaging.MessageQueue.EncryptionRequired\n  - System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)\n  - System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)\n  - System.Messaging.MessageQueue.Exists(System.String)\n  - System.Messaging.MessageQueue.FormatName\n  - System.Messaging.MessageQueue.Formatter\n  - System.Messaging.MessageQueue.GetAllMessages\n  - System.Messaging.MessageQueue.GetEnumerator\n  - System.Messaging.MessageQueue.GetMachineId(System.String)\n  - System.Messaging.MessageQueue.GetMessageEnumerator\n  - System.Messaging.MessageQueue.GetMessageEnumerator2\n  - System.Messaging.MessageQueue.GetMessageQueueEnumerator\n  - System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)\n  - System.Messaging.MessageQueue.GetPrivateQueuesByMachine(System.String)\n  - System.Messaging.MessageQueue.GetPublicQueues\n  - System.Messaging.MessageQueue.GetPublicQueues(System.Messaging.MessageQueueCriteria)\n  - System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)\n  - System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)\n  - System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)\n  - System.Messaging.MessageQueue.GetSecurityContext\n  - System.Messaging.MessageQueue.Id\n  - System.Messaging.MessageQueue.InfiniteQueueSize\n  - System.Messaging.MessageQueue.InfiniteTimeout\n  - System.Messaging.MessageQueue.Label\n  - System.Messaging.MessageQueue.LastModifyTime\n  - System.Messaging.MessageQueue.MachineName\n  - System.Messaging.MessageQueue.MaximumJournalSize\n  - System.Messaging.MessageQueue.MaximumQueueSize\n  - System.Messaging.MessageQueue.MessageReadPropertyFilter\n  - System.Messaging.MessageQueue.MulticastAddress\n  - System.Messaging.MessageQueue.Path\n  - System.Messaging.MessageQueue.Peek\n  - System.Messaging.MessageQueue.Peek(System.TimeSpan)\n  - System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)\n  - System.Messaging.MessageQueue.PeekByCorrelationId(System.String)\n  - System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)\n  - System.Messaging.MessageQueue.PeekById(System.String)\n  - System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)\n  - System.Messaging.MessageQueue.PeekByLookupId(System.Int64)\n  - System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)\n  - System.Messaging.MessageQueue.PeekCompleted\n  - System.Messaging.MessageQueue.Purge\n  - System.Messaging.MessageQueue.QueueName\n  - System.Messaging.MessageQueue.ReadHandle\n  - System.Messaging.MessageQueue.Receive\n  - System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)\n  - System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)\n  - System.Messaging.MessageQueue.Receive(System.TimeSpan)\n  - System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor)\n  - System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)\n  - System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)\n  - System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)\n  - System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)\n  - System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)\n  - System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)\n  - System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)\n  - System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)\n  - System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)\n  - System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)\n  - System.Messaging.MessageQueue.ReceiveById(System.String)\n  - System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)\n  - System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)\n  - System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)\n  - System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)\n  - System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)\n  - System.Messaging.MessageQueue.ReceiveByLookupId(System.Int64)\n  - System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)\n  - System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)\n  - System.Messaging.MessageQueue.ReceiveCompleted\n  - System.Messaging.MessageQueue.Refresh\n  - System.Messaging.MessageQueue.ResetPermissions\n  - System.Messaging.MessageQueue.Send(System.Object)\n  - System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)\n  - System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)\n  - System.Messaging.MessageQueue.Send(System.Object,System.String)\n  - System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)\n  - System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)\n  - System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)\n  - System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)\n  - System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)\n  - System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)\n  - System.Messaging.MessageQueue.SynchronizingObject\n  - System.Messaging.MessageQueue.Transactional\n  - System.Messaging.MessageQueue.UseJournalQueue\n  - System.Messaging.MessageQueue.WriteHandle\n  langs:\n  - csharp\n  name: MessageQueue\n  nameWithType: MessageQueue\n  fullName: System.Messaging.MessageQueue\n  type: Class\n  syntax:\n    content: >-\n      [System.ComponentModel.DefaultEvent(\"ReceiveCompleted\")]\n\n      [System.ComponentModel.Editor(\"System.Messaging.Design.QueuePathEditor\", \"System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\")]\n\n      [System.ComponentModel.InstallerType(typeof(System.Messaging.MessageQueueInstaller))]\n\n      [System.ComponentModel.TypeConverter(typeof(System.Messaging.Design.MessageQueueConverter))]\n\n      [System.Messaging.MessagingDescription(\"MessageQueueDesc\")]\n\n      public class MessageQueue : System.ComponentModel.Component, System.Collections.IEnumerable\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.ComponentModel.Component\n  implements:\n  - System.Collections.IEnumerable\n  inheritedMembers:\n  - System.ComponentModel.Component.CanRaiseEvents\n  - System.ComponentModel.Component.Container\n  - System.ComponentModel.Component.DesignMode\n  - System.ComponentModel.Component.Dispose\n  - System.ComponentModel.Component.Disposed\n  - System.ComponentModel.Component.Events\n  - System.ComponentModel.Component.GetService(System.Type)\n  - System.ComponentModel.Component.Site\n  - System.ComponentModel.Component.ToString\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.#ctor\n  id: '#ctor'\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: MessageQueue()\n  nameWithType: MessageQueue.MessageQueue()\n  fullName: System.Messaging.MessageQueue.MessageQueue()\n  type: Constructor\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public MessageQueue ();\n    parameters: []\n  overload: System.Messaging.MessageQueue.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: MessageQueue(String)\n  nameWithType: MessageQueue.MessageQueue(String)\n  fullName: System.Messaging.MessageQueue.MessageQueue(String)\n  type: Constructor\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public MessageQueue (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: To be added.\n  overload: System.Messaging.MessageQueue.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)\n  id: '#ctor(System.String,System.Boolean)'\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: MessageQueue(String,Boolean)\n  nameWithType: MessageQueue.MessageQueue(String,Boolean)\n  fullName: System.Messaging.MessageQueue.MessageQueue(String,Boolean)\n  type: Constructor\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public MessageQueue (string path, bool sharedModeDenyReceive);\n    parameters:\n    - id: path\n      type: System.String\n      description: To be added.\n    - id: sharedModeDenyReceive\n      type: System.Boolean\n      description: To be added.\n  overload: System.Messaging.MessageQueue.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.#ctor(System.String,System.Messaging.QueueAccessMode)\n  id: '#ctor(System.String,System.Messaging.QueueAccessMode)'\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: MessageQueue(String,QueueAccessMode)\n  nameWithType: MessageQueue.MessageQueue(String,QueueAccessMode)\n  fullName: System.Messaging.MessageQueue.MessageQueue(String,QueueAccessMode)\n  type: Constructor\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public MessageQueue (string path, System.Messaging.QueueAccessMode accessMode);\n    parameters:\n    - id: path\n      type: System.String\n      description: To be added.\n    - id: accessMode\n      type: System.Messaging.QueueAccessMode\n      description: To be added.\n  overload: System.Messaging.MessageQueue.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.#ctor(System.String,System.Boolean,System.Boolean)\n  id: '#ctor(System.String,System.Boolean,System.Boolean)'\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: MessageQueue(String,Boolean,Boolean)\n  nameWithType: MessageQueue.MessageQueue(String,Boolean,Boolean)\n  fullName: System.Messaging.MessageQueue.MessageQueue(String,Boolean,Boolean)\n  type: Constructor\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public MessageQueue (string path, bool sharedModeDenyReceive, bool enableCache);\n    parameters:\n    - id: path\n      type: System.String\n      description: To be added.\n    - id: sharedModeDenyReceive\n      type: System.Boolean\n      description: To be added.\n    - id: enableCache\n      type: System.Boolean\n      description: To be added.\n  overload: System.Messaging.MessageQueue.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.#ctor(System.String,System.Boolean,System.Boolean,System.Messaging.QueueAccessMode)\n  id: '#ctor(System.String,System.Boolean,System.Boolean,System.Messaging.QueueAccessMode)'\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: MessageQueue(String,Boolean,Boolean,QueueAccessMode)\n  nameWithType: MessageQueue.MessageQueue(String,Boolean,Boolean,QueueAccessMode)\n  fullName: System.Messaging.MessageQueue.MessageQueue(String,Boolean,Boolean,QueueAccessMode)\n  type: Constructor\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public MessageQueue (string path, bool sharedModeDenyReceive, bool enableCache, System.Messaging.QueueAccessMode accessMode);\n    parameters:\n    - id: path\n      type: System.String\n      description: To be added.\n    - id: sharedModeDenyReceive\n      type: System.Boolean\n      description: To be added.\n    - id: enableCache\n      type: System.Boolean\n      description: To be added.\n    - id: accessMode\n      type: System.Messaging.QueueAccessMode\n      description: To be added.\n  overload: System.Messaging.MessageQueue.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.AccessMode\n  id: AccessMode\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: AccessMode\n  nameWithType: MessageQueue.AccessMode\n  fullName: System.Messaging.MessageQueue.AccessMode\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.QueueAccessMode AccessMode { get; }\n    return:\n      type: System.Messaging.QueueAccessMode\n      description: To be added.\n  overload: System.Messaging.MessageQueue.AccessMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.Authenticate\n  id: Authenticate\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: Authenticate\n  nameWithType: MessageQueue.Authenticate\n  fullName: System.Messaging.MessageQueue.Authenticate\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public bool Authenticate { get; set; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Messaging.MessageQueue.Authenticate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.BasePriority\n  id: BasePriority\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: BasePriority\n  nameWithType: MessageQueue.BasePriority\n  fullName: System.Messaging.MessageQueue.BasePriority\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public short BasePriority { get; set; }\n    return:\n      type: System.Int16\n      description: To be added.\n  overload: System.Messaging.MessageQueue.BasePriority*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.BeginPeek\n  id: BeginPeek\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: BeginPeek()\n  nameWithType: MessageQueue.BeginPeek()\n  fullName: System.Messaging.MessageQueue.BeginPeek()\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public IAsyncResult BeginPeek ();\n    parameters: []\n    return:\n      type: System.IAsyncResult\n      description: To be added.\n  overload: System.Messaging.MessageQueue.BeginPeek*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)\n  id: BeginPeek(System.TimeSpan)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: BeginPeek(TimeSpan)\n  nameWithType: MessageQueue.BeginPeek(TimeSpan)\n  fullName: System.Messaging.MessageQueue.BeginPeek(TimeSpan)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public IAsyncResult BeginPeek (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: To be added.\n    return:\n      type: System.IAsyncResult\n      description: To be added.\n  overload: System.Messaging.MessageQueue.BeginPeek*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)\n  id: BeginPeek(System.TimeSpan,System.Object)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: BeginPeek(TimeSpan,Object)\n  nameWithType: MessageQueue.BeginPeek(TimeSpan,Object)\n  fullName: System.Messaging.MessageQueue.BeginPeek(TimeSpan,Object)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public IAsyncResult BeginPeek (TimeSpan timeout, object stateObject);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: To be added.\n    - id: stateObject\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.IAsyncResult\n      description: To be added.\n  overload: System.Messaging.MessageQueue.BeginPeek*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)\n  id: BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: BeginPeek(TimeSpan,Object,AsyncCallback)\n  nameWithType: MessageQueue.BeginPeek(TimeSpan,Object,AsyncCallback)\n  fullName: System.Messaging.MessageQueue.BeginPeek(TimeSpan,Object,AsyncCallback)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public IAsyncResult BeginPeek (TimeSpan timeout, object stateObject, AsyncCallback callback);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: To be added.\n    - id: stateObject\n      type: System.Object\n      description: To be added.\n    - id: callback\n      type: System.AsyncCallback\n      description: To be added.\n    return:\n      type: System.IAsyncResult\n      description: To be added.\n  overload: System.Messaging.MessageQueue.BeginPeek*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)\n  id: BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: BeginPeek(TimeSpan,Cursor,PeekAction,Object,AsyncCallback)\n  nameWithType: MessageQueue.BeginPeek(TimeSpan,Cursor,PeekAction,Object,AsyncCallback)\n  fullName: System.Messaging.MessageQueue.BeginPeek(TimeSpan,Cursor,PeekAction,Object,AsyncCallback)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public IAsyncResult BeginPeek (TimeSpan timeout, System.Messaging.Cursor cursor, System.Messaging.PeekAction action, object state, AsyncCallback callback);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: To be added.\n    - id: cursor\n      type: System.Messaging.Cursor\n      description: To be added.\n    - id: action\n      type: System.Messaging.PeekAction\n      description: To be added.\n    - id: state\n      type: System.Object\n      description: To be added.\n    - id: callback\n      type: System.AsyncCallback\n      description: To be added.\n    return:\n      type: System.IAsyncResult\n      description: To be added.\n  overload: System.Messaging.MessageQueue.BeginPeek*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.BeginReceive\n  id: BeginReceive\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: BeginReceive()\n  nameWithType: MessageQueue.BeginReceive()\n  fullName: System.Messaging.MessageQueue.BeginReceive()\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public IAsyncResult BeginReceive ();\n    parameters: []\n    return:\n      type: System.IAsyncResult\n      description: To be added.\n  overload: System.Messaging.MessageQueue.BeginReceive*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)\n  id: BeginReceive(System.TimeSpan)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: BeginReceive(TimeSpan)\n  nameWithType: MessageQueue.BeginReceive(TimeSpan)\n  fullName: System.Messaging.MessageQueue.BeginReceive(TimeSpan)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public IAsyncResult BeginReceive (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: To be added.\n    return:\n      type: System.IAsyncResult\n      description: To be added.\n  overload: System.Messaging.MessageQueue.BeginReceive*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)\n  id: BeginReceive(System.TimeSpan,System.Object)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: BeginReceive(TimeSpan,Object)\n  nameWithType: MessageQueue.BeginReceive(TimeSpan,Object)\n  fullName: System.Messaging.MessageQueue.BeginReceive(TimeSpan,Object)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public IAsyncResult BeginReceive (TimeSpan timeout, object stateObject);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: To be added.\n    - id: stateObject\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.IAsyncResult\n      description: To be added.\n  overload: System.Messaging.MessageQueue.BeginReceive*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)\n  id: BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: BeginReceive(TimeSpan,Object,AsyncCallback)\n  nameWithType: MessageQueue.BeginReceive(TimeSpan,Object,AsyncCallback)\n  fullName: System.Messaging.MessageQueue.BeginReceive(TimeSpan,Object,AsyncCallback)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public IAsyncResult BeginReceive (TimeSpan timeout, object stateObject, AsyncCallback callback);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: To be added.\n    - id: stateObject\n      type: System.Object\n      description: To be added.\n    - id: callback\n      type: System.AsyncCallback\n      description: To be added.\n    return:\n      type: System.IAsyncResult\n      description: To be added.\n  overload: System.Messaging.MessageQueue.BeginReceive*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)\n  id: BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: BeginReceive(TimeSpan,Cursor,Object,AsyncCallback)\n  nameWithType: MessageQueue.BeginReceive(TimeSpan,Cursor,Object,AsyncCallback)\n  fullName: System.Messaging.MessageQueue.BeginReceive(TimeSpan,Cursor,Object,AsyncCallback)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public IAsyncResult BeginReceive (TimeSpan timeout, System.Messaging.Cursor cursor, object state, AsyncCallback callback);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: To be added.\n    - id: cursor\n      type: System.Messaging.Cursor\n      description: To be added.\n    - id: state\n      type: System.Object\n      description: To be added.\n    - id: callback\n      type: System.AsyncCallback\n      description: To be added.\n    return:\n      type: System.IAsyncResult\n      description: To be added.\n  overload: System.Messaging.MessageQueue.BeginReceive*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.CanRead\n  id: CanRead\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: CanRead\n  nameWithType: MessageQueue.CanRead\n  fullName: System.Messaging.MessageQueue.CanRead\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public bool CanRead { get; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Messaging.MessageQueue.CanRead*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.CanWrite\n  id: CanWrite\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: CanWrite\n  nameWithType: MessageQueue.CanWrite\n  fullName: System.Messaging.MessageQueue.CanWrite\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public bool CanWrite { get; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Messaging.MessageQueue.CanWrite*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.Category\n  id: Category\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: Category\n  nameWithType: MessageQueue.Category\n  fullName: System.Messaging.MessageQueue.Category\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public Guid Category { get; set; }\n    return:\n      type: System.Guid\n      description: To be added.\n  overload: System.Messaging.MessageQueue.Category*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.ClearConnectionCache\n  id: ClearConnectionCache\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: ClearConnectionCache()\n  nameWithType: MessageQueue.ClearConnectionCache()\n  fullName: System.Messaging.MessageQueue.ClearConnectionCache()\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public static void ClearConnectionCache ();\n    parameters: []\n  overload: System.Messaging.MessageQueue.ClearConnectionCache*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.Close\n  id: Close\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: MessageQueue.Close()\n  fullName: System.Messaging.MessageQueue.Close()\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public void Close ();\n    parameters: []\n  overload: System.Messaging.MessageQueue.Close*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.Create(System.String)\n  id: Create(System.String)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: Create(String)\n  nameWithType: MessageQueue.Create(String)\n  fullName: System.Messaging.MessageQueue.Create(String)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public static System.Messaging.MessageQueue Create (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: To be added.\n    return:\n      type: System.Messaging.MessageQueue\n      description: To be added.\n  overload: System.Messaging.MessageQueue.Create*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.Create(System.String,System.Boolean)\n  id: Create(System.String,System.Boolean)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: Create(String,Boolean)\n  nameWithType: MessageQueue.Create(String,Boolean)\n  fullName: System.Messaging.MessageQueue.Create(String,Boolean)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public static System.Messaging.MessageQueue Create (string path, bool transactional);\n    parameters:\n    - id: path\n      type: System.String\n      description: To be added.\n    - id: transactional\n      type: System.Boolean\n      description: To be added.\n    return:\n      type: System.Messaging.MessageQueue\n      description: To be added.\n  overload: System.Messaging.MessageQueue.Create*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.CreateCursor\n  id: CreateCursor\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: CreateCursor()\n  nameWithType: MessageQueue.CreateCursor()\n  fullName: System.Messaging.MessageQueue.CreateCursor()\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.Cursor CreateCursor ();\n    parameters: []\n    return:\n      type: System.Messaging.Cursor\n      description: To be added.\n  overload: System.Messaging.MessageQueue.CreateCursor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.CreateTime\n  id: CreateTime\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: CreateTime\n  nameWithType: MessageQueue.CreateTime\n  fullName: System.Messaging.MessageQueue.CreateTime\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public DateTime CreateTime { get; }\n    return:\n      type: System.DateTime\n      description: To be added.\n  overload: System.Messaging.MessageQueue.CreateTime*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.DefaultPropertiesToSend\n  id: DefaultPropertiesToSend\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: DefaultPropertiesToSend\n  nameWithType: MessageQueue.DefaultPropertiesToSend\n  fullName: System.Messaging.MessageQueue.DefaultPropertiesToSend\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.DefaultPropertiesToSend DefaultPropertiesToSend { get; set; }\n    return:\n      type: System.Messaging.DefaultPropertiesToSend\n      description: To be added.\n  overload: System.Messaging.MessageQueue.DefaultPropertiesToSend*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.Delete(System.String)\n  id: Delete(System.String)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: Delete(String)\n  nameWithType: MessageQueue.Delete(String)\n  fullName: System.Messaging.MessageQueue.Delete(String)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public static void Delete (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: To be added.\n  overload: System.Messaging.MessageQueue.Delete*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.DenySharedReceive\n  id: DenySharedReceive\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: DenySharedReceive\n  nameWithType: MessageQueue.DenySharedReceive\n  fullName: System.Messaging.MessageQueue.DenySharedReceive\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public bool DenySharedReceive { get; set; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Messaging.MessageQueue.DenySharedReceive*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: MessageQueue.Dispose(Boolean)\n  fullName: System.Messaging.MessageQueue.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: To be added.\n  overload: System.Messaging.MessageQueue.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.EnableConnectionCache\n  id: EnableConnectionCache\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: EnableConnectionCache\n  nameWithType: MessageQueue.EnableConnectionCache\n  fullName: System.Messaging.MessageQueue.EnableConnectionCache\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public static bool EnableConnectionCache { get; set; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Messaging.MessageQueue.EnableConnectionCache*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.EncryptionRequired\n  id: EncryptionRequired\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: EncryptionRequired\n  nameWithType: MessageQueue.EncryptionRequired\n  fullName: System.Messaging.MessageQueue.EncryptionRequired\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.EncryptionRequired EncryptionRequired { get; set; }\n    return:\n      type: System.Messaging.EncryptionRequired\n      description: To be added.\n  overload: System.Messaging.MessageQueue.EncryptionRequired*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)\n  id: EndPeek(System.IAsyncResult)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: EndPeek(IAsyncResult)\n  nameWithType: MessageQueue.EndPeek(IAsyncResult)\n  fullName: System.Messaging.MessageQueue.EndPeek(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.Message EndPeek (IAsyncResult asyncResult);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: To be added.\n    return:\n      type: System.Messaging.Message\n      description: To be added.\n  overload: System.Messaging.MessageQueue.EndPeek*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)\n  id: EndReceive(System.IAsyncResult)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: EndReceive(IAsyncResult)\n  nameWithType: MessageQueue.EndReceive(IAsyncResult)\n  fullName: System.Messaging.MessageQueue.EndReceive(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.Message EndReceive (IAsyncResult asyncResult);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: To be added.\n    return:\n      type: System.Messaging.Message\n      description: To be added.\n  overload: System.Messaging.MessageQueue.EndReceive*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.Exists(System.String)\n  id: Exists(System.String)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: Exists(String)\n  nameWithType: MessageQueue.Exists(String)\n  fullName: System.Messaging.MessageQueue.Exists(String)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public static bool Exists (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Messaging.MessageQueue.Exists*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.FormatName\n  id: FormatName\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: FormatName\n  nameWithType: MessageQueue.FormatName\n  fullName: System.Messaging.MessageQueue.FormatName\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public string FormatName { get; }\n    return:\n      type: System.String\n      description: To be added.\n  overload: System.Messaging.MessageQueue.FormatName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.Formatter\n  id: Formatter\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: Formatter\n  nameWithType: MessageQueue.Formatter\n  fullName: System.Messaging.MessageQueue.Formatter\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.IMessageFormatter Formatter { get; set; }\n    return:\n      type: System.Messaging.IMessageFormatter\n      description: To be added.\n  overload: System.Messaging.MessageQueue.Formatter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.GetAllMessages\n  id: GetAllMessages\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: GetAllMessages()\n  nameWithType: MessageQueue.GetAllMessages()\n  fullName: System.Messaging.MessageQueue.GetAllMessages()\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.Message[] GetAllMessages ();\n    parameters: []\n    return:\n      type: System.Messaging.Message[]\n      description: To be added.\n  overload: System.Messaging.MessageQueue.GetAllMessages*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.GetEnumerator\n  id: GetEnumerator\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: MessageQueue.GetEnumerator()\n  fullName: System.Messaging.MessageQueue.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: To be added.\n  overload: System.Messaging.MessageQueue.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.GetMachineId(System.String)\n  id: GetMachineId(System.String)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: GetMachineId(String)\n  nameWithType: MessageQueue.GetMachineId(String)\n  fullName: System.Messaging.MessageQueue.GetMachineId(String)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public static Guid GetMachineId (string machineName);\n    parameters:\n    - id: machineName\n      type: System.String\n      description: To be added.\n    return:\n      type: System.Guid\n      description: To be added.\n  overload: System.Messaging.MessageQueue.GetMachineId*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.GetMessageEnumerator\n  id: GetMessageEnumerator\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: GetMessageEnumerator()\n  nameWithType: MessageQueue.GetMessageEnumerator()\n  fullName: System.Messaging.MessageQueue.GetMessageEnumerator()\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.MessageEnumerator GetMessageEnumerator ();\n    parameters: []\n    return:\n      type: System.Messaging.MessageEnumerator\n      description: To be added.\n  overload: System.Messaging.MessageQueue.GetMessageEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.GetMessageEnumerator2\n  id: GetMessageEnumerator2\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: GetMessageEnumerator2()\n  nameWithType: MessageQueue.GetMessageEnumerator2()\n  fullName: System.Messaging.MessageQueue.GetMessageEnumerator2()\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.MessageEnumerator GetMessageEnumerator2 ();\n    parameters: []\n    return:\n      type: System.Messaging.MessageEnumerator\n      description: To be added.\n  overload: System.Messaging.MessageQueue.GetMessageEnumerator2*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.GetMessageQueueEnumerator\n  id: GetMessageQueueEnumerator\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: GetMessageQueueEnumerator()\n  nameWithType: MessageQueue.GetMessageQueueEnumerator()\n  fullName: System.Messaging.MessageQueue.GetMessageQueueEnumerator()\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public static System.Messaging.MessageQueueEnumerator GetMessageQueueEnumerator ();\n    parameters: []\n    return:\n      type: System.Messaging.MessageQueueEnumerator\n      description: To be added.\n  overload: System.Messaging.MessageQueue.GetMessageQueueEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)\n  id: GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: GetMessageQueueEnumerator(MessageQueueCriteria)\n  nameWithType: MessageQueue.GetMessageQueueEnumerator(MessageQueueCriteria)\n  fullName: System.Messaging.MessageQueue.GetMessageQueueEnumerator(MessageQueueCriteria)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public static System.Messaging.MessageQueueEnumerator GetMessageQueueEnumerator (System.Messaging.MessageQueueCriteria criteria);\n    parameters:\n    - id: criteria\n      type: System.Messaging.MessageQueueCriteria\n      description: To be added.\n    return:\n      type: System.Messaging.MessageQueueEnumerator\n      description: To be added.\n  overload: System.Messaging.MessageQueue.GetMessageQueueEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.GetPrivateQueuesByMachine(System.String)\n  id: GetPrivateQueuesByMachine(System.String)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: GetPrivateQueuesByMachine(String)\n  nameWithType: MessageQueue.GetPrivateQueuesByMachine(String)\n  fullName: System.Messaging.MessageQueue.GetPrivateQueuesByMachine(String)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public static System.Messaging.MessageQueue[] GetPrivateQueuesByMachine (string machineName);\n    parameters:\n    - id: machineName\n      type: System.String\n      description: To be added.\n    return:\n      type: System.Messaging.MessageQueue[]\n      description: To be added.\n  overload: System.Messaging.MessageQueue.GetPrivateQueuesByMachine*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.GetPublicQueues\n  id: GetPublicQueues\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: GetPublicQueues()\n  nameWithType: MessageQueue.GetPublicQueues()\n  fullName: System.Messaging.MessageQueue.GetPublicQueues()\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public static System.Messaging.MessageQueue[] GetPublicQueues ();\n    parameters: []\n    return:\n      type: System.Messaging.MessageQueue[]\n      description: To be added.\n  overload: System.Messaging.MessageQueue.GetPublicQueues*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.GetPublicQueues(System.Messaging.MessageQueueCriteria)\n  id: GetPublicQueues(System.Messaging.MessageQueueCriteria)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: GetPublicQueues(MessageQueueCriteria)\n  nameWithType: MessageQueue.GetPublicQueues(MessageQueueCriteria)\n  fullName: System.Messaging.MessageQueue.GetPublicQueues(MessageQueueCriteria)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public static System.Messaging.MessageQueue[] GetPublicQueues (System.Messaging.MessageQueueCriteria criteria);\n    parameters:\n    - id: criteria\n      type: System.Messaging.MessageQueueCriteria\n      description: To be added.\n    return:\n      type: System.Messaging.MessageQueue[]\n      description: To be added.\n  overload: System.Messaging.MessageQueue.GetPublicQueues*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)\n  id: GetPublicQueuesByCategory(System.Guid)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: GetPublicQueuesByCategory(Guid)\n  nameWithType: MessageQueue.GetPublicQueuesByCategory(Guid)\n  fullName: System.Messaging.MessageQueue.GetPublicQueuesByCategory(Guid)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public static System.Messaging.MessageQueue[] GetPublicQueuesByCategory (Guid category);\n    parameters:\n    - id: category\n      type: System.Guid\n      description: To be added.\n    return:\n      type: System.Messaging.MessageQueue[]\n      description: To be added.\n  overload: System.Messaging.MessageQueue.GetPublicQueuesByCategory*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)\n  id: GetPublicQueuesByLabel(System.String)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: GetPublicQueuesByLabel(String)\n  nameWithType: MessageQueue.GetPublicQueuesByLabel(String)\n  fullName: System.Messaging.MessageQueue.GetPublicQueuesByLabel(String)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public static System.Messaging.MessageQueue[] GetPublicQueuesByLabel (string label);\n    parameters:\n    - id: label\n      type: System.String\n      description: To be added.\n    return:\n      type: System.Messaging.MessageQueue[]\n      description: To be added.\n  overload: System.Messaging.MessageQueue.GetPublicQueuesByLabel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)\n  id: GetPublicQueuesByMachine(System.String)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: GetPublicQueuesByMachine(String)\n  nameWithType: MessageQueue.GetPublicQueuesByMachine(String)\n  fullName: System.Messaging.MessageQueue.GetPublicQueuesByMachine(String)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public static System.Messaging.MessageQueue[] GetPublicQueuesByMachine (string machineName);\n    parameters:\n    - id: machineName\n      type: System.String\n      description: To be added.\n    return:\n      type: System.Messaging.MessageQueue[]\n      description: To be added.\n  overload: System.Messaging.MessageQueue.GetPublicQueuesByMachine*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.GetSecurityContext\n  id: GetSecurityContext\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: GetSecurityContext()\n  nameWithType: MessageQueue.GetSecurityContext()\n  fullName: System.Messaging.MessageQueue.GetSecurityContext()\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public static System.Messaging.SecurityContext GetSecurityContext ();\n    parameters: []\n    return:\n      type: System.Messaging.SecurityContext\n      description: To be added.\n  overload: System.Messaging.MessageQueue.GetSecurityContext*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.Id\n  id: Id\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: Id\n  nameWithType: MessageQueue.Id\n  fullName: System.Messaging.MessageQueue.Id\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public Guid Id { get; }\n    return:\n      type: System.Guid\n      description: To be added.\n  overload: System.Messaging.MessageQueue.Id*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.InfiniteQueueSize\n  id: InfiniteQueueSize\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: InfiniteQueueSize\n  nameWithType: MessageQueue.InfiniteQueueSize\n  fullName: System.Messaging.MessageQueue.InfiniteQueueSize\n  type: Field\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public static readonly long InfiniteQueueSize;\n    return:\n      type: System.Int64\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.InfiniteTimeout\n  id: InfiniteTimeout\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: InfiniteTimeout\n  nameWithType: MessageQueue.InfiniteTimeout\n  fullName: System.Messaging.MessageQueue.InfiniteTimeout\n  type: Field\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public static readonly TimeSpan InfiniteTimeout;\n    return:\n      type: System.TimeSpan\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.Label\n  id: Label\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: Label\n  nameWithType: MessageQueue.Label\n  fullName: System.Messaging.MessageQueue.Label\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public string Label { get; set; }\n    return:\n      type: System.String\n      description: To be added.\n  overload: System.Messaging.MessageQueue.Label*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.LastModifyTime\n  id: LastModifyTime\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: LastModifyTime\n  nameWithType: MessageQueue.LastModifyTime\n  fullName: System.Messaging.MessageQueue.LastModifyTime\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public DateTime LastModifyTime { get; }\n    return:\n      type: System.DateTime\n      description: To be added.\n  overload: System.Messaging.MessageQueue.LastModifyTime*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.MachineName\n  id: MachineName\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: MachineName\n  nameWithType: MessageQueue.MachineName\n  fullName: System.Messaging.MessageQueue.MachineName\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public string MachineName { get; set; }\n    return:\n      type: System.String\n      description: To be added.\n  overload: System.Messaging.MessageQueue.MachineName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.MaximumJournalSize\n  id: MaximumJournalSize\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: MaximumJournalSize\n  nameWithType: MessageQueue.MaximumJournalSize\n  fullName: System.Messaging.MessageQueue.MaximumJournalSize\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public long MaximumJournalSize { get; set; }\n    return:\n      type: System.Int64\n      description: To be added.\n  overload: System.Messaging.MessageQueue.MaximumJournalSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.MaximumQueueSize\n  id: MaximumQueueSize\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: MaximumQueueSize\n  nameWithType: MessageQueue.MaximumQueueSize\n  fullName: System.Messaging.MessageQueue.MaximumQueueSize\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public long MaximumQueueSize { get; set; }\n    return:\n      type: System.Int64\n      description: To be added.\n  overload: System.Messaging.MessageQueue.MaximumQueueSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.MessageReadPropertyFilter\n  id: MessageReadPropertyFilter\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: MessageReadPropertyFilter\n  nameWithType: MessageQueue.MessageReadPropertyFilter\n  fullName: System.Messaging.MessageQueue.MessageReadPropertyFilter\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.MessagePropertyFilter MessageReadPropertyFilter { get; set; }\n    return:\n      type: System.Messaging.MessagePropertyFilter\n      description: To be added.\n  overload: System.Messaging.MessageQueue.MessageReadPropertyFilter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.MulticastAddress\n  id: MulticastAddress\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: MulticastAddress\n  nameWithType: MessageQueue.MulticastAddress\n  fullName: System.Messaging.MessageQueue.MulticastAddress\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public string MulticastAddress { get; set; }\n    return:\n      type: System.String\n      description: To be added.\n  overload: System.Messaging.MessageQueue.MulticastAddress*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.Path\n  id: Path\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: Path\n  nameWithType: MessageQueue.Path\n  fullName: System.Messaging.MessageQueue.Path\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public string Path { get; set; }\n    return:\n      type: System.String\n      description: To be added.\n  overload: System.Messaging.MessageQueue.Path*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.Peek\n  id: Peek\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: Peek()\n  nameWithType: MessageQueue.Peek()\n  fullName: System.Messaging.MessageQueue.Peek()\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.Message Peek ();\n    parameters: []\n    return:\n      type: System.Messaging.Message\n      description: To be added.\n  overload: System.Messaging.MessageQueue.Peek*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.Peek(System.TimeSpan)\n  id: Peek(System.TimeSpan)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: Peek(TimeSpan)\n  nameWithType: MessageQueue.Peek(TimeSpan)\n  fullName: System.Messaging.MessageQueue.Peek(TimeSpan)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.Message Peek (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: To be added.\n    return:\n      type: System.Messaging.Message\n      description: To be added.\n  overload: System.Messaging.MessageQueue.Peek*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)\n  id: Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: Peek(TimeSpan,Cursor,PeekAction)\n  nameWithType: MessageQueue.Peek(TimeSpan,Cursor,PeekAction)\n  fullName: System.Messaging.MessageQueue.Peek(TimeSpan,Cursor,PeekAction)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.Message Peek (TimeSpan timeout, System.Messaging.Cursor cursor, System.Messaging.PeekAction action);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: To be added.\n    - id: cursor\n      type: System.Messaging.Cursor\n      description: To be added.\n    - id: action\n      type: System.Messaging.PeekAction\n      description: To be added.\n    return:\n      type: System.Messaging.Message\n      description: To be added.\n  overload: System.Messaging.MessageQueue.Peek*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.PeekByCorrelationId(System.String)\n  id: PeekByCorrelationId(System.String)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: PeekByCorrelationId(String)\n  nameWithType: MessageQueue.PeekByCorrelationId(String)\n  fullName: System.Messaging.MessageQueue.PeekByCorrelationId(String)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.Message PeekByCorrelationId (string correlationId);\n    parameters:\n    - id: correlationId\n      type: System.String\n      description: To be added.\n    return:\n      type: System.Messaging.Message\n      description: To be added.\n  overload: System.Messaging.MessageQueue.PeekByCorrelationId*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)\n  id: PeekByCorrelationId(System.String,System.TimeSpan)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: PeekByCorrelationId(String,TimeSpan)\n  nameWithType: MessageQueue.PeekByCorrelationId(String,TimeSpan)\n  fullName: System.Messaging.MessageQueue.PeekByCorrelationId(String,TimeSpan)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.Message PeekByCorrelationId (string correlationId, TimeSpan timeout);\n    parameters:\n    - id: correlationId\n      type: System.String\n      description: To be added.\n    - id: timeout\n      type: System.TimeSpan\n      description: To be added.\n    return:\n      type: System.Messaging.Message\n      description: To be added.\n  overload: System.Messaging.MessageQueue.PeekByCorrelationId*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.PeekById(System.String)\n  id: PeekById(System.String)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: PeekById(String)\n  nameWithType: MessageQueue.PeekById(String)\n  fullName: System.Messaging.MessageQueue.PeekById(String)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.Message PeekById (string id);\n    parameters:\n    - id: id\n      type: System.String\n      description: To be added.\n    return:\n      type: System.Messaging.Message\n      description: To be added.\n  overload: System.Messaging.MessageQueue.PeekById*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)\n  id: PeekById(System.String,System.TimeSpan)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: PeekById(String,TimeSpan)\n  nameWithType: MessageQueue.PeekById(String,TimeSpan)\n  fullName: System.Messaging.MessageQueue.PeekById(String,TimeSpan)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.Message PeekById (string id, TimeSpan timeout);\n    parameters:\n    - id: id\n      type: System.String\n      description: To be added.\n    - id: timeout\n      type: System.TimeSpan\n      description: To be added.\n    return:\n      type: System.Messaging.Message\n      description: To be added.\n  overload: System.Messaging.MessageQueue.PeekById*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.PeekByLookupId(System.Int64)\n  id: PeekByLookupId(System.Int64)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: PeekByLookupId(Int64)\n  nameWithType: MessageQueue.PeekByLookupId(Int64)\n  fullName: System.Messaging.MessageQueue.PeekByLookupId(Int64)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.Message PeekByLookupId (long lookupId);\n    parameters:\n    - id: lookupId\n      type: System.Int64\n      description: To be added.\n    return:\n      type: System.Messaging.Message\n      description: To be added.\n  overload: System.Messaging.MessageQueue.PeekByLookupId*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)\n  id: PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: PeekByLookupId(MessageLookupAction,Int64)\n  nameWithType: MessageQueue.PeekByLookupId(MessageLookupAction,Int64)\n  fullName: System.Messaging.MessageQueue.PeekByLookupId(MessageLookupAction,Int64)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.Message PeekByLookupId (System.Messaging.MessageLookupAction action, long lookupId);\n    parameters:\n    - id: action\n      type: System.Messaging.MessageLookupAction\n      description: To be added.\n    - id: lookupId\n      type: System.Int64\n      description: To be added.\n    return:\n      type: System.Messaging.Message\n      description: To be added.\n  overload: System.Messaging.MessageQueue.PeekByLookupId*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.PeekCompleted\n  id: PeekCompleted\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: PeekCompleted\n  nameWithType: MessageQueue.PeekCompleted\n  fullName: System.Messaging.MessageQueue.PeekCompleted\n  type: Event\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public event System.Messaging.PeekCompletedEventHandler PeekCompleted;\n    return:\n      type: System.Messaging.PeekCompletedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.Purge\n  id: Purge\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: Purge()\n  nameWithType: MessageQueue.Purge()\n  fullName: System.Messaging.MessageQueue.Purge()\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public void Purge ();\n    parameters: []\n  overload: System.Messaging.MessageQueue.Purge*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.QueueName\n  id: QueueName\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: QueueName\n  nameWithType: MessageQueue.QueueName\n  fullName: System.Messaging.MessageQueue.QueueName\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public string QueueName { get; set; }\n    return:\n      type: System.String\n      description: To be added.\n  overload: System.Messaging.MessageQueue.QueueName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.ReadHandle\n  id: ReadHandle\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: ReadHandle\n  nameWithType: MessageQueue.ReadHandle\n  fullName: System.Messaging.MessageQueue.ReadHandle\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public IntPtr ReadHandle { get; }\n    return:\n      type: System.IntPtr\n      description: To be added.\n  overload: System.Messaging.MessageQueue.ReadHandle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.Receive\n  id: Receive\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: Receive()\n  nameWithType: MessageQueue.Receive()\n  fullName: System.Messaging.MessageQueue.Receive()\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.Message Receive ();\n    parameters: []\n    return:\n      type: System.Messaging.Message\n      description: To be added.\n  overload: System.Messaging.MessageQueue.Receive*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)\n  id: Receive(System.Messaging.MessageQueueTransaction)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: Receive(MessageQueueTransaction)\n  nameWithType: MessageQueue.Receive(MessageQueueTransaction)\n  fullName: System.Messaging.MessageQueue.Receive(MessageQueueTransaction)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.Message Receive (System.Messaging.MessageQueueTransaction transaction);\n    parameters:\n    - id: transaction\n      type: System.Messaging.MessageQueueTransaction\n      description: To be added.\n    return:\n      type: System.Messaging.Message\n      description: To be added.\n  overload: System.Messaging.MessageQueue.Receive*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)\n  id: Receive(System.Messaging.MessageQueueTransactionType)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: Receive(MessageQueueTransactionType)\n  nameWithType: MessageQueue.Receive(MessageQueueTransactionType)\n  fullName: System.Messaging.MessageQueue.Receive(MessageQueueTransactionType)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.Message Receive (System.Messaging.MessageQueueTransactionType transactionType);\n    parameters:\n    - id: transactionType\n      type: System.Messaging.MessageQueueTransactionType\n      description: To be added.\n    return:\n      type: System.Messaging.Message\n      description: To be added.\n  overload: System.Messaging.MessageQueue.Receive*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.Receive(System.TimeSpan)\n  id: Receive(System.TimeSpan)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: Receive(TimeSpan)\n  nameWithType: MessageQueue.Receive(TimeSpan)\n  fullName: System.Messaging.MessageQueue.Receive(TimeSpan)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.Message Receive (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: To be added.\n    return:\n      type: System.Messaging.Message\n      description: To be added.\n  overload: System.Messaging.MessageQueue.Receive*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor)\n  id: Receive(System.TimeSpan,System.Messaging.Cursor)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: Receive(TimeSpan,Cursor)\n  nameWithType: MessageQueue.Receive(TimeSpan,Cursor)\n  fullName: System.Messaging.MessageQueue.Receive(TimeSpan,Cursor)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.Message Receive (TimeSpan timeout, System.Messaging.Cursor cursor);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: To be added.\n    - id: cursor\n      type: System.Messaging.Cursor\n      description: To be added.\n    return:\n      type: System.Messaging.Message\n      description: To be added.\n  overload: System.Messaging.MessageQueue.Receive*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)\n  id: Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: Receive(TimeSpan,MessageQueueTransaction)\n  nameWithType: MessageQueue.Receive(TimeSpan,MessageQueueTransaction)\n  fullName: System.Messaging.MessageQueue.Receive(TimeSpan,MessageQueueTransaction)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.Message Receive (TimeSpan timeout, System.Messaging.MessageQueueTransaction transaction);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: To be added.\n    - id: transaction\n      type: System.Messaging.MessageQueueTransaction\n      description: To be added.\n    return:\n      type: System.Messaging.Message\n      description: To be added.\n  overload: System.Messaging.MessageQueue.Receive*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)\n  id: Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: Receive(TimeSpan,MessageQueueTransactionType)\n  nameWithType: MessageQueue.Receive(TimeSpan,MessageQueueTransactionType)\n  fullName: System.Messaging.MessageQueue.Receive(TimeSpan,MessageQueueTransactionType)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.Message Receive (TimeSpan timeout, System.Messaging.MessageQueueTransactionType transactionType);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: To be added.\n    - id: transactionType\n      type: System.Messaging.MessageQueueTransactionType\n      description: To be added.\n    return:\n      type: System.Messaging.Message\n      description: To be added.\n  overload: System.Messaging.MessageQueue.Receive*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)\n  id: Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: Receive(TimeSpan,Cursor,MessageQueueTransaction)\n  nameWithType: MessageQueue.Receive(TimeSpan,Cursor,MessageQueueTransaction)\n  fullName: System.Messaging.MessageQueue.Receive(TimeSpan,Cursor,MessageQueueTransaction)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.Message Receive (TimeSpan timeout, System.Messaging.Cursor cursor, System.Messaging.MessageQueueTransaction transaction);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: To be added.\n    - id: cursor\n      type: System.Messaging.Cursor\n      description: To be added.\n    - id: transaction\n      type: System.Messaging.MessageQueueTransaction\n      description: To be added.\n    return:\n      type: System.Messaging.Message\n      description: To be added.\n  overload: System.Messaging.MessageQueue.Receive*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)\n  id: Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: Receive(TimeSpan,Cursor,MessageQueueTransactionType)\n  nameWithType: MessageQueue.Receive(TimeSpan,Cursor,MessageQueueTransactionType)\n  fullName: System.Messaging.MessageQueue.Receive(TimeSpan,Cursor,MessageQueueTransactionType)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.Message Receive (TimeSpan timeout, System.Messaging.Cursor cursor, System.Messaging.MessageQueueTransactionType transactionType);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: To be added.\n    - id: cursor\n      type: System.Messaging.Cursor\n      description: To be added.\n    - id: transactionType\n      type: System.Messaging.MessageQueueTransactionType\n      description: To be added.\n    return:\n      type: System.Messaging.Message\n      description: To be added.\n  overload: System.Messaging.MessageQueue.Receive*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)\n  id: ReceiveByCorrelationId(System.String)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: ReceiveByCorrelationId(String)\n  nameWithType: MessageQueue.ReceiveByCorrelationId(String)\n  fullName: System.Messaging.MessageQueue.ReceiveByCorrelationId(String)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.Message ReceiveByCorrelationId (string correlationId);\n    parameters:\n    - id: correlationId\n      type: System.String\n      description: To be added.\n    return:\n      type: System.Messaging.Message\n      description: To be added.\n  overload: System.Messaging.MessageQueue.ReceiveByCorrelationId*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)\n  id: ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: ReceiveByCorrelationId(String,MessageQueueTransaction)\n  nameWithType: MessageQueue.ReceiveByCorrelationId(String,MessageQueueTransaction)\n  fullName: System.Messaging.MessageQueue.ReceiveByCorrelationId(String,MessageQueueTransaction)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.Message ReceiveByCorrelationId (string correlationId, System.Messaging.MessageQueueTransaction transaction);\n    parameters:\n    - id: correlationId\n      type: System.String\n      description: To be added.\n    - id: transaction\n      type: System.Messaging.MessageQueueTransaction\n      description: To be added.\n    return:\n      type: System.Messaging.Message\n      description: To be added.\n  overload: System.Messaging.MessageQueue.ReceiveByCorrelationId*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)\n  id: ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: ReceiveByCorrelationId(String,MessageQueueTransactionType)\n  nameWithType: MessageQueue.ReceiveByCorrelationId(String,MessageQueueTransactionType)\n  fullName: System.Messaging.MessageQueue.ReceiveByCorrelationId(String,MessageQueueTransactionType)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.Message ReceiveByCorrelationId (string correlationId, System.Messaging.MessageQueueTransactionType transactionType);\n    parameters:\n    - id: correlationId\n      type: System.String\n      description: To be added.\n    - id: transactionType\n      type: System.Messaging.MessageQueueTransactionType\n      description: To be added.\n    return:\n      type: System.Messaging.Message\n      description: To be added.\n  overload: System.Messaging.MessageQueue.ReceiveByCorrelationId*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)\n  id: ReceiveByCorrelationId(System.String,System.TimeSpan)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: ReceiveByCorrelationId(String,TimeSpan)\n  nameWithType: MessageQueue.ReceiveByCorrelationId(String,TimeSpan)\n  fullName: System.Messaging.MessageQueue.ReceiveByCorrelationId(String,TimeSpan)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.Message ReceiveByCorrelationId (string correlationId, TimeSpan timeout);\n    parameters:\n    - id: correlationId\n      type: System.String\n      description: To be added.\n    - id: timeout\n      type: System.TimeSpan\n      description: To be added.\n    return:\n      type: System.Messaging.Message\n      description: To be added.\n  overload: System.Messaging.MessageQueue.ReceiveByCorrelationId*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)\n  id: ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: ReceiveByCorrelationId(String,TimeSpan,MessageQueueTransaction)\n  nameWithType: MessageQueue.ReceiveByCorrelationId(String,TimeSpan,MessageQueueTransaction)\n  fullName: System.Messaging.MessageQueue.ReceiveByCorrelationId(String,TimeSpan,MessageQueueTransaction)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.Message ReceiveByCorrelationId (string correlationId, TimeSpan timeout, System.Messaging.MessageQueueTransaction transaction);\n    parameters:\n    - id: correlationId\n      type: System.String\n      description: To be added.\n    - id: timeout\n      type: System.TimeSpan\n      description: To be added.\n    - id: transaction\n      type: System.Messaging.MessageQueueTransaction\n      description: To be added.\n    return:\n      type: System.Messaging.Message\n      description: To be added.\n  overload: System.Messaging.MessageQueue.ReceiveByCorrelationId*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)\n  id: ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: ReceiveByCorrelationId(String,TimeSpan,MessageQueueTransactionType)\n  nameWithType: MessageQueue.ReceiveByCorrelationId(String,TimeSpan,MessageQueueTransactionType)\n  fullName: System.Messaging.MessageQueue.ReceiveByCorrelationId(String,TimeSpan,MessageQueueTransactionType)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.Message ReceiveByCorrelationId (string correlationId, TimeSpan timeout, System.Messaging.MessageQueueTransactionType transactionType);\n    parameters:\n    - id: correlationId\n      type: System.String\n      description: To be added.\n    - id: timeout\n      type: System.TimeSpan\n      description: To be added.\n    - id: transactionType\n      type: System.Messaging.MessageQueueTransactionType\n      description: To be added.\n    return:\n      type: System.Messaging.Message\n      description: To be added.\n  overload: System.Messaging.MessageQueue.ReceiveByCorrelationId*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.ReceiveById(System.String)\n  id: ReceiveById(System.String)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: ReceiveById(String)\n  nameWithType: MessageQueue.ReceiveById(String)\n  fullName: System.Messaging.MessageQueue.ReceiveById(String)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.Message ReceiveById (string id);\n    parameters:\n    - id: id\n      type: System.String\n      description: To be added.\n    return:\n      type: System.Messaging.Message\n      description: To be added.\n  overload: System.Messaging.MessageQueue.ReceiveById*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)\n  id: ReceiveById(System.String,System.Messaging.MessageQueueTransaction)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: ReceiveById(String,MessageQueueTransaction)\n  nameWithType: MessageQueue.ReceiveById(String,MessageQueueTransaction)\n  fullName: System.Messaging.MessageQueue.ReceiveById(String,MessageQueueTransaction)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.Message ReceiveById (string id, System.Messaging.MessageQueueTransaction transaction);\n    parameters:\n    - id: id\n      type: System.String\n      description: To be added.\n    - id: transaction\n      type: System.Messaging.MessageQueueTransaction\n      description: To be added.\n    return:\n      type: System.Messaging.Message\n      description: To be added.\n  overload: System.Messaging.MessageQueue.ReceiveById*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)\n  id: ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: ReceiveById(String,MessageQueueTransactionType)\n  nameWithType: MessageQueue.ReceiveById(String,MessageQueueTransactionType)\n  fullName: System.Messaging.MessageQueue.ReceiveById(String,MessageQueueTransactionType)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.Message ReceiveById (string id, System.Messaging.MessageQueueTransactionType transactionType);\n    parameters:\n    - id: id\n      type: System.String\n      description: To be added.\n    - id: transactionType\n      type: System.Messaging.MessageQueueTransactionType\n      description: To be added.\n    return:\n      type: System.Messaging.Message\n      description: To be added.\n  overload: System.Messaging.MessageQueue.ReceiveById*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)\n  id: ReceiveById(System.String,System.TimeSpan)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: ReceiveById(String,TimeSpan)\n  nameWithType: MessageQueue.ReceiveById(String,TimeSpan)\n  fullName: System.Messaging.MessageQueue.ReceiveById(String,TimeSpan)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.Message ReceiveById (string id, TimeSpan timeout);\n    parameters:\n    - id: id\n      type: System.String\n      description: To be added.\n    - id: timeout\n      type: System.TimeSpan\n      description: To be added.\n    return:\n      type: System.Messaging.Message\n      description: To be added.\n  overload: System.Messaging.MessageQueue.ReceiveById*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)\n  id: ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: ReceiveById(String,TimeSpan,MessageQueueTransaction)\n  nameWithType: MessageQueue.ReceiveById(String,TimeSpan,MessageQueueTransaction)\n  fullName: System.Messaging.MessageQueue.ReceiveById(String,TimeSpan,MessageQueueTransaction)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.Message ReceiveById (string id, TimeSpan timeout, System.Messaging.MessageQueueTransaction transaction);\n    parameters:\n    - id: id\n      type: System.String\n      description: To be added.\n    - id: timeout\n      type: System.TimeSpan\n      description: To be added.\n    - id: transaction\n      type: System.Messaging.MessageQueueTransaction\n      description: To be added.\n    return:\n      type: System.Messaging.Message\n      description: To be added.\n  overload: System.Messaging.MessageQueue.ReceiveById*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)\n  id: ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: ReceiveById(String,TimeSpan,MessageQueueTransactionType)\n  nameWithType: MessageQueue.ReceiveById(String,TimeSpan,MessageQueueTransactionType)\n  fullName: System.Messaging.MessageQueue.ReceiveById(String,TimeSpan,MessageQueueTransactionType)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.Message ReceiveById (string id, TimeSpan timeout, System.Messaging.MessageQueueTransactionType transactionType);\n    parameters:\n    - id: id\n      type: System.String\n      description: To be added.\n    - id: timeout\n      type: System.TimeSpan\n      description: To be added.\n    - id: transactionType\n      type: System.Messaging.MessageQueueTransactionType\n      description: To be added.\n    return:\n      type: System.Messaging.Message\n      description: To be added.\n  overload: System.Messaging.MessageQueue.ReceiveById*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.ReceiveByLookupId(System.Int64)\n  id: ReceiveByLookupId(System.Int64)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: ReceiveByLookupId(Int64)\n  nameWithType: MessageQueue.ReceiveByLookupId(Int64)\n  fullName: System.Messaging.MessageQueue.ReceiveByLookupId(Int64)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.Message ReceiveByLookupId (long lookupId);\n    parameters:\n    - id: lookupId\n      type: System.Int64\n      description: To be added.\n    return:\n      type: System.Messaging.Message\n      description: To be added.\n  overload: System.Messaging.MessageQueue.ReceiveByLookupId*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)\n  id: ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: ReceiveByLookupId(MessageLookupAction,Int64,MessageQueueTransaction)\n  nameWithType: MessageQueue.ReceiveByLookupId(MessageLookupAction,Int64,MessageQueueTransaction)\n  fullName: System.Messaging.MessageQueue.ReceiveByLookupId(MessageLookupAction,Int64,MessageQueueTransaction)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.Message ReceiveByLookupId (System.Messaging.MessageLookupAction action, long lookupId, System.Messaging.MessageQueueTransaction transaction);\n    parameters:\n    - id: action\n      type: System.Messaging.MessageLookupAction\n      description: To be added.\n    - id: lookupId\n      type: System.Int64\n      description: To be added.\n    - id: transaction\n      type: System.Messaging.MessageQueueTransaction\n      description: To be added.\n    return:\n      type: System.Messaging.Message\n      description: To be added.\n  overload: System.Messaging.MessageQueue.ReceiveByLookupId*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)\n  id: ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: ReceiveByLookupId(MessageLookupAction,Int64,MessageQueueTransactionType)\n  nameWithType: MessageQueue.ReceiveByLookupId(MessageLookupAction,Int64,MessageQueueTransactionType)\n  fullName: System.Messaging.MessageQueue.ReceiveByLookupId(MessageLookupAction,Int64,MessageQueueTransactionType)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.Messaging.Message ReceiveByLookupId (System.Messaging.MessageLookupAction action, long lookupId, System.Messaging.MessageQueueTransactionType transactionType);\n    parameters:\n    - id: action\n      type: System.Messaging.MessageLookupAction\n      description: To be added.\n    - id: lookupId\n      type: System.Int64\n      description: To be added.\n    - id: transactionType\n      type: System.Messaging.MessageQueueTransactionType\n      description: To be added.\n    return:\n      type: System.Messaging.Message\n      description: To be added.\n  overload: System.Messaging.MessageQueue.ReceiveByLookupId*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.ReceiveCompleted\n  id: ReceiveCompleted\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: ReceiveCompleted\n  nameWithType: MessageQueue.ReceiveCompleted\n  fullName: System.Messaging.MessageQueue.ReceiveCompleted\n  type: Event\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public event System.Messaging.ReceiveCompletedEventHandler ReceiveCompleted;\n    return:\n      type: System.Messaging.ReceiveCompletedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.Refresh\n  id: Refresh\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: Refresh()\n  nameWithType: MessageQueue.Refresh()\n  fullName: System.Messaging.MessageQueue.Refresh()\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public void Refresh ();\n    parameters: []\n  overload: System.Messaging.MessageQueue.Refresh*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.ResetPermissions\n  id: ResetPermissions\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: ResetPermissions()\n  nameWithType: MessageQueue.ResetPermissions()\n  fullName: System.Messaging.MessageQueue.ResetPermissions()\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public void ResetPermissions ();\n    parameters: []\n  overload: System.Messaging.MessageQueue.ResetPermissions*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.Send(System.Object)\n  id: Send(System.Object)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: Send(Object)\n  nameWithType: MessageQueue.Send(Object)\n  fullName: System.Messaging.MessageQueue.Send(Object)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public void Send (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: To be added.\n  overload: System.Messaging.MessageQueue.Send*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)\n  id: Send(System.Object,System.Messaging.MessageQueueTransaction)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: Send(Object,MessageQueueTransaction)\n  nameWithType: MessageQueue.Send(Object,MessageQueueTransaction)\n  fullName: System.Messaging.MessageQueue.Send(Object,MessageQueueTransaction)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public void Send (object obj, System.Messaging.MessageQueueTransaction transaction);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: To be added.\n    - id: transaction\n      type: System.Messaging.MessageQueueTransaction\n      description: To be added.\n  overload: System.Messaging.MessageQueue.Send*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)\n  id: Send(System.Object,System.Messaging.MessageQueueTransactionType)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: Send(Object,MessageQueueTransactionType)\n  nameWithType: MessageQueue.Send(Object,MessageQueueTransactionType)\n  fullName: System.Messaging.MessageQueue.Send(Object,MessageQueueTransactionType)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public void Send (object obj, System.Messaging.MessageQueueTransactionType transactionType);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: To be added.\n    - id: transactionType\n      type: System.Messaging.MessageQueueTransactionType\n      description: To be added.\n  overload: System.Messaging.MessageQueue.Send*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.Send(System.Object,System.String)\n  id: Send(System.Object,System.String)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: Send(Object,String)\n  nameWithType: MessageQueue.Send(Object,String)\n  fullName: System.Messaging.MessageQueue.Send(Object,String)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public void Send (object obj, string label);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: To be added.\n    - id: label\n      type: System.String\n      description: To be added.\n  overload: System.Messaging.MessageQueue.Send*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)\n  id: Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: Send(Object,String,MessageQueueTransaction)\n  nameWithType: MessageQueue.Send(Object,String,MessageQueueTransaction)\n  fullName: System.Messaging.MessageQueue.Send(Object,String,MessageQueueTransaction)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public void Send (object obj, string label, System.Messaging.MessageQueueTransaction transaction);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: To be added.\n    - id: label\n      type: System.String\n      description: To be added.\n    - id: transaction\n      type: System.Messaging.MessageQueueTransaction\n      description: To be added.\n  overload: System.Messaging.MessageQueue.Send*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)\n  id: Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: Send(Object,String,MessageQueueTransactionType)\n  nameWithType: MessageQueue.Send(Object,String,MessageQueueTransactionType)\n  fullName: System.Messaging.MessageQueue.Send(Object,String,MessageQueueTransactionType)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public void Send (object obj, string label, System.Messaging.MessageQueueTransactionType transactionType);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: To be added.\n    - id: label\n      type: System.String\n      description: To be added.\n    - id: transactionType\n      type: System.Messaging.MessageQueueTransactionType\n      description: To be added.\n  overload: System.Messaging.MessageQueue.Send*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)\n  id: SetPermissions(System.Messaging.AccessControlList)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: SetPermissions(AccessControlList)\n  nameWithType: MessageQueue.SetPermissions(AccessControlList)\n  fullName: System.Messaging.MessageQueue.SetPermissions(AccessControlList)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public void SetPermissions (System.Messaging.AccessControlList dacl);\n    parameters:\n    - id: dacl\n      type: System.Messaging.AccessControlList\n      description: To be added.\n  overload: System.Messaging.MessageQueue.SetPermissions*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)\n  id: SetPermissions(System.Messaging.MessageQueueAccessControlEntry)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: SetPermissions(MessageQueueAccessControlEntry)\n  nameWithType: MessageQueue.SetPermissions(MessageQueueAccessControlEntry)\n  fullName: System.Messaging.MessageQueue.SetPermissions(MessageQueueAccessControlEntry)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public void SetPermissions (System.Messaging.MessageQueueAccessControlEntry ace);\n    parameters:\n    - id: ace\n      type: System.Messaging.MessageQueueAccessControlEntry\n      description: To be added.\n  overload: System.Messaging.MessageQueue.SetPermissions*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)\n  id: SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: SetPermissions(String,MessageQueueAccessRights)\n  nameWithType: MessageQueue.SetPermissions(String,MessageQueueAccessRights)\n  fullName: System.Messaging.MessageQueue.SetPermissions(String,MessageQueueAccessRights)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public void SetPermissions (string user, System.Messaging.MessageQueueAccessRights rights);\n    parameters:\n    - id: user\n      type: System.String\n      description: To be added.\n    - id: rights\n      type: System.Messaging.MessageQueueAccessRights\n      description: To be added.\n  overload: System.Messaging.MessageQueue.SetPermissions*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)\n  id: SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: SetPermissions(String,MessageQueueAccessRights,AccessControlEntryType)\n  nameWithType: MessageQueue.SetPermissions(String,MessageQueueAccessRights,AccessControlEntryType)\n  fullName: System.Messaging.MessageQueue.SetPermissions(String,MessageQueueAccessRights,AccessControlEntryType)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public void SetPermissions (string user, System.Messaging.MessageQueueAccessRights rights, System.Messaging.AccessControlEntryType entryType);\n    parameters:\n    - id: user\n      type: System.String\n      description: To be added.\n    - id: rights\n      type: System.Messaging.MessageQueueAccessRights\n      description: To be added.\n    - id: entryType\n      type: System.Messaging.AccessControlEntryType\n      description: To be added.\n  overload: System.Messaging.MessageQueue.SetPermissions*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.SynchronizingObject\n  id: SynchronizingObject\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: SynchronizingObject\n  nameWithType: MessageQueue.SynchronizingObject\n  fullName: System.Messaging.MessageQueue.SynchronizingObject\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }\n    return:\n      type: System.ComponentModel.ISynchronizeInvoke\n      description: To be added.\n  overload: System.Messaging.MessageQueue.SynchronizingObject*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.Transactional\n  id: Transactional\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: Transactional\n  nameWithType: MessageQueue.Transactional\n  fullName: System.Messaging.MessageQueue.Transactional\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public bool Transactional { get; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Messaging.MessageQueue.Transactional*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.UseJournalQueue\n  id: UseJournalQueue\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: UseJournalQueue\n  nameWithType: MessageQueue.UseJournalQueue\n  fullName: System.Messaging.MessageQueue.UseJournalQueue\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public bool UseJournalQueue { get; set; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Messaging.MessageQueue.UseJournalQueue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueue.WriteHandle\n  id: WriteHandle\n  parent: System.Messaging.MessageQueue\n  langs:\n  - csharp\n  name: WriteHandle\n  nameWithType: MessageQueue.WriteHandle\n  fullName: System.Messaging.MessageQueue.WriteHandle\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  syntax:\n    content: public IntPtr WriteHandle { get; }\n    return:\n      type: System.IntPtr\n      description: To be added.\n  overload: System.Messaging.MessageQueue.WriteHandle*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.Component\n  isExternal: false\n  name: System.ComponentModel.Component\n- uid: System.Messaging.MessageQueue.#ctor\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: MessageQueue()\n  nameWithType: MessageQueue.MessageQueue()\n  fullName: System.Messaging.MessageQueue.MessageQueue()\n- uid: System.Messaging.MessageQueue.#ctor(System.String)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: MessageQueue(String)\n  nameWithType: MessageQueue.MessageQueue(String)\n  fullName: System.Messaging.MessageQueue.MessageQueue(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: MessageQueue(String,Boolean)\n  nameWithType: MessageQueue.MessageQueue(String,Boolean)\n  fullName: System.Messaging.MessageQueue.MessageQueue(String,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Messaging.MessageQueue.#ctor(System.String,System.Messaging.QueueAccessMode)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: MessageQueue(String,QueueAccessMode)\n  nameWithType: MessageQueue.MessageQueue(String,QueueAccessMode)\n  fullName: System.Messaging.MessageQueue.MessageQueue(String,QueueAccessMode)\n- uid: System.Messaging.QueueAccessMode\n  parent: System.Messaging\n  isExternal: false\n  name: QueueAccessMode\n  nameWithType: QueueAccessMode\n  fullName: System.Messaging.QueueAccessMode\n- uid: System.Messaging.MessageQueue.#ctor(System.String,System.Boolean,System.Boolean)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: MessageQueue(String,Boolean,Boolean)\n  nameWithType: MessageQueue.MessageQueue(String,Boolean,Boolean)\n  fullName: System.Messaging.MessageQueue.MessageQueue(String,Boolean,Boolean)\n- uid: System.Messaging.MessageQueue.#ctor(System.String,System.Boolean,System.Boolean,System.Messaging.QueueAccessMode)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: MessageQueue(String,Boolean,Boolean,QueueAccessMode)\n  nameWithType: MessageQueue.MessageQueue(String,Boolean,Boolean,QueueAccessMode)\n  fullName: System.Messaging.MessageQueue.MessageQueue(String,Boolean,Boolean,QueueAccessMode)\n- uid: System.Messaging.MessageQueue.AccessMode\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: AccessMode\n  nameWithType: MessageQueue.AccessMode\n  fullName: System.Messaging.MessageQueue.AccessMode\n- uid: System.Messaging.MessageQueue.Authenticate\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Authenticate\n  nameWithType: MessageQueue.Authenticate\n  fullName: System.Messaging.MessageQueue.Authenticate\n- uid: System.Messaging.MessageQueue.BasePriority\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: BasePriority\n  nameWithType: MessageQueue.BasePriority\n  fullName: System.Messaging.MessageQueue.BasePriority\n- uid: System.Int16\n  parent: System\n  isExternal: true\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Messaging.MessageQueue.BeginPeek\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: BeginPeek()\n  nameWithType: MessageQueue.BeginPeek()\n  fullName: System.Messaging.MessageQueue.BeginPeek()\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: true\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: BeginPeek(TimeSpan)\n  nameWithType: MessageQueue.BeginPeek(TimeSpan)\n  fullName: System.Messaging.MessageQueue.BeginPeek(TimeSpan)\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: BeginPeek(TimeSpan,Object)\n  nameWithType: MessageQueue.BeginPeek(TimeSpan,Object)\n  fullName: System.Messaging.MessageQueue.BeginPeek(TimeSpan,Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: BeginPeek(TimeSpan,Object,AsyncCallback)\n  nameWithType: MessageQueue.BeginPeek(TimeSpan,Object,AsyncCallback)\n  fullName: System.Messaging.MessageQueue.BeginPeek(TimeSpan,Object,AsyncCallback)\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: true\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: BeginPeek(TimeSpan,Cursor,PeekAction,Object,AsyncCallback)\n  nameWithType: MessageQueue.BeginPeek(TimeSpan,Cursor,PeekAction,Object,AsyncCallback)\n  fullName: System.Messaging.MessageQueue.BeginPeek(TimeSpan,Cursor,PeekAction,Object,AsyncCallback)\n- uid: System.Messaging.Cursor\n  parent: System.Messaging\n  isExternal: false\n  name: Cursor\n  nameWithType: Cursor\n  fullName: System.Messaging.Cursor\n- uid: System.Messaging.PeekAction\n  parent: System.Messaging\n  isExternal: false\n  name: PeekAction\n  nameWithType: PeekAction\n  fullName: System.Messaging.PeekAction\n- uid: System.Messaging.MessageQueue.BeginReceive\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: BeginReceive()\n  nameWithType: MessageQueue.BeginReceive()\n  fullName: System.Messaging.MessageQueue.BeginReceive()\n- uid: System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: BeginReceive(TimeSpan)\n  nameWithType: MessageQueue.BeginReceive(TimeSpan)\n  fullName: System.Messaging.MessageQueue.BeginReceive(TimeSpan)\n- uid: System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: BeginReceive(TimeSpan,Object)\n  nameWithType: MessageQueue.BeginReceive(TimeSpan,Object)\n  fullName: System.Messaging.MessageQueue.BeginReceive(TimeSpan,Object)\n- uid: System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: BeginReceive(TimeSpan,Object,AsyncCallback)\n  nameWithType: MessageQueue.BeginReceive(TimeSpan,Object,AsyncCallback)\n  fullName: System.Messaging.MessageQueue.BeginReceive(TimeSpan,Object,AsyncCallback)\n- uid: System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: BeginReceive(TimeSpan,Cursor,Object,AsyncCallback)\n  nameWithType: MessageQueue.BeginReceive(TimeSpan,Cursor,Object,AsyncCallback)\n  fullName: System.Messaging.MessageQueue.BeginReceive(TimeSpan,Cursor,Object,AsyncCallback)\n- uid: System.Messaging.MessageQueue.CanRead\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: CanRead\n  nameWithType: MessageQueue.CanRead\n  fullName: System.Messaging.MessageQueue.CanRead\n- uid: System.Messaging.MessageQueue.CanWrite\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: CanWrite\n  nameWithType: MessageQueue.CanWrite\n  fullName: System.Messaging.MessageQueue.CanWrite\n- uid: System.Messaging.MessageQueue.Category\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Category\n  nameWithType: MessageQueue.Category\n  fullName: System.Messaging.MessageQueue.Category\n- uid: System.Guid\n  parent: System\n  isExternal: true\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Messaging.MessageQueue.ClearConnectionCache\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: ClearConnectionCache()\n  nameWithType: MessageQueue.ClearConnectionCache()\n  fullName: System.Messaging.MessageQueue.ClearConnectionCache()\n- uid: System.Messaging.MessageQueue.Close\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Close()\n  nameWithType: MessageQueue.Close()\n  fullName: System.Messaging.MessageQueue.Close()\n- uid: System.Messaging.MessageQueue.Create(System.String)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Create(String)\n  nameWithType: MessageQueue.Create(String)\n  fullName: System.Messaging.MessageQueue.Create(String)\n- uid: System.Messaging.MessageQueue\n  parent: System.Messaging\n  isExternal: false\n  name: MessageQueue\n  nameWithType: MessageQueue\n  fullName: System.Messaging.MessageQueue\n- uid: System.Messaging.MessageQueue.Create(System.String,System.Boolean)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Create(String,Boolean)\n  nameWithType: MessageQueue.Create(String,Boolean)\n  fullName: System.Messaging.MessageQueue.Create(String,Boolean)\n- uid: System.Messaging.MessageQueue.CreateCursor\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: CreateCursor()\n  nameWithType: MessageQueue.CreateCursor()\n  fullName: System.Messaging.MessageQueue.CreateCursor()\n- uid: System.Messaging.MessageQueue.CreateTime\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: CreateTime\n  nameWithType: MessageQueue.CreateTime\n  fullName: System.Messaging.MessageQueue.CreateTime\n- uid: System.DateTime\n  parent: System\n  isExternal: true\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.Messaging.MessageQueue.DefaultPropertiesToSend\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: DefaultPropertiesToSend\n  nameWithType: MessageQueue.DefaultPropertiesToSend\n  fullName: System.Messaging.MessageQueue.DefaultPropertiesToSend\n- uid: System.Messaging.DefaultPropertiesToSend\n  parent: System.Messaging\n  isExternal: false\n  name: DefaultPropertiesToSend\n  nameWithType: DefaultPropertiesToSend\n  fullName: System.Messaging.DefaultPropertiesToSend\n- uid: System.Messaging.MessageQueue.Delete(System.String)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Delete(String)\n  nameWithType: MessageQueue.Delete(String)\n  fullName: System.Messaging.MessageQueue.Delete(String)\n- uid: System.Messaging.MessageQueue.DenySharedReceive\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: DenySharedReceive\n  nameWithType: MessageQueue.DenySharedReceive\n  fullName: System.Messaging.MessageQueue.DenySharedReceive\n- uid: System.Messaging.MessageQueue.Dispose(System.Boolean)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: MessageQueue.Dispose(Boolean)\n  fullName: System.Messaging.MessageQueue.Dispose(Boolean)\n- uid: System.Messaging.MessageQueue.EnableConnectionCache\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: EnableConnectionCache\n  nameWithType: MessageQueue.EnableConnectionCache\n  fullName: System.Messaging.MessageQueue.EnableConnectionCache\n- uid: System.Messaging.MessageQueue.EncryptionRequired\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: EncryptionRequired\n  nameWithType: MessageQueue.EncryptionRequired\n  fullName: System.Messaging.MessageQueue.EncryptionRequired\n- uid: System.Messaging.EncryptionRequired\n  parent: System.Messaging\n  isExternal: false\n  name: EncryptionRequired\n  nameWithType: EncryptionRequired\n  fullName: System.Messaging.EncryptionRequired\n- uid: System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: EndPeek(IAsyncResult)\n  nameWithType: MessageQueue.EndPeek(IAsyncResult)\n  fullName: System.Messaging.MessageQueue.EndPeek(IAsyncResult)\n- uid: System.Messaging.Message\n  parent: System.Messaging\n  isExternal: false\n  name: Message\n  nameWithType: Message\n  fullName: System.Messaging.Message\n- uid: System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: EndReceive(IAsyncResult)\n  nameWithType: MessageQueue.EndReceive(IAsyncResult)\n  fullName: System.Messaging.MessageQueue.EndReceive(IAsyncResult)\n- uid: System.Messaging.MessageQueue.Exists(System.String)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Exists(String)\n  nameWithType: MessageQueue.Exists(String)\n  fullName: System.Messaging.MessageQueue.Exists(String)\n- uid: System.Messaging.MessageQueue.FormatName\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: FormatName\n  nameWithType: MessageQueue.FormatName\n  fullName: System.Messaging.MessageQueue.FormatName\n- uid: System.Messaging.MessageQueue.Formatter\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Formatter\n  nameWithType: MessageQueue.Formatter\n  fullName: System.Messaging.MessageQueue.Formatter\n- uid: System.Messaging.IMessageFormatter\n  parent: System.Messaging\n  isExternal: false\n  name: IMessageFormatter\n  nameWithType: IMessageFormatter\n  fullName: System.Messaging.IMessageFormatter\n- uid: System.Messaging.MessageQueue.GetAllMessages\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: GetAllMessages()\n  nameWithType: MessageQueue.GetAllMessages()\n  fullName: System.Messaging.MessageQueue.GetAllMessages()\n- uid: System.Messaging.Message[]\n  parent: System.Messaging\n  isExternal: false\n  name: Message\n  nameWithType: Message\n  fullName: System.Messaging.Message[]\n  spec.csharp:\n  - uid: System.Messaging.Message\n    name: Message\n    nameWithType: Message\n    fullName: Message[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Messaging.MessageQueue.GetEnumerator\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: MessageQueue.GetEnumerator()\n  fullName: System.Messaging.MessageQueue.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Messaging.MessageQueue.GetMachineId(System.String)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: GetMachineId(String)\n  nameWithType: MessageQueue.GetMachineId(String)\n  fullName: System.Messaging.MessageQueue.GetMachineId(String)\n- uid: System.Messaging.MessageQueue.GetMessageEnumerator\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: GetMessageEnumerator()\n  nameWithType: MessageQueue.GetMessageEnumerator()\n  fullName: System.Messaging.MessageQueue.GetMessageEnumerator()\n- uid: System.Messaging.MessageEnumerator\n  parent: System.Messaging\n  isExternal: false\n  name: MessageEnumerator\n  nameWithType: MessageEnumerator\n  fullName: System.Messaging.MessageEnumerator\n- uid: System.Messaging.MessageQueue.GetMessageEnumerator2\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: GetMessageEnumerator2()\n  nameWithType: MessageQueue.GetMessageEnumerator2()\n  fullName: System.Messaging.MessageQueue.GetMessageEnumerator2()\n- uid: System.Messaging.MessageQueue.GetMessageQueueEnumerator\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: GetMessageQueueEnumerator()\n  nameWithType: MessageQueue.GetMessageQueueEnumerator()\n  fullName: System.Messaging.MessageQueue.GetMessageQueueEnumerator()\n- uid: System.Messaging.MessageQueueEnumerator\n  parent: System.Messaging\n  isExternal: false\n  name: MessageQueueEnumerator\n  nameWithType: MessageQueueEnumerator\n  fullName: System.Messaging.MessageQueueEnumerator\n- uid: System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: GetMessageQueueEnumerator(MessageQueueCriteria)\n  nameWithType: MessageQueue.GetMessageQueueEnumerator(MessageQueueCriteria)\n  fullName: System.Messaging.MessageQueue.GetMessageQueueEnumerator(MessageQueueCriteria)\n- uid: System.Messaging.MessageQueueCriteria\n  parent: System.Messaging\n  isExternal: false\n  name: MessageQueueCriteria\n  nameWithType: MessageQueueCriteria\n  fullName: System.Messaging.MessageQueueCriteria\n- uid: System.Messaging.MessageQueue.GetPrivateQueuesByMachine(System.String)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: GetPrivateQueuesByMachine(String)\n  nameWithType: MessageQueue.GetPrivateQueuesByMachine(String)\n  fullName: System.Messaging.MessageQueue.GetPrivateQueuesByMachine(String)\n- uid: System.Messaging.MessageQueue[]\n  parent: System.Messaging\n  isExternal: false\n  name: MessageQueue\n  nameWithType: MessageQueue\n  fullName: System.Messaging.MessageQueue[]\n  spec.csharp:\n  - uid: System.Messaging.MessageQueue\n    name: MessageQueue\n    nameWithType: MessageQueue\n    fullName: MessageQueue[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Messaging.MessageQueue.GetPublicQueues\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: GetPublicQueues()\n  nameWithType: MessageQueue.GetPublicQueues()\n  fullName: System.Messaging.MessageQueue.GetPublicQueues()\n- uid: System.Messaging.MessageQueue.GetPublicQueues(System.Messaging.MessageQueueCriteria)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: GetPublicQueues(MessageQueueCriteria)\n  nameWithType: MessageQueue.GetPublicQueues(MessageQueueCriteria)\n  fullName: System.Messaging.MessageQueue.GetPublicQueues(MessageQueueCriteria)\n- uid: System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: GetPublicQueuesByCategory(Guid)\n  nameWithType: MessageQueue.GetPublicQueuesByCategory(Guid)\n  fullName: System.Messaging.MessageQueue.GetPublicQueuesByCategory(Guid)\n- uid: System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: GetPublicQueuesByLabel(String)\n  nameWithType: MessageQueue.GetPublicQueuesByLabel(String)\n  fullName: System.Messaging.MessageQueue.GetPublicQueuesByLabel(String)\n- uid: System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: GetPublicQueuesByMachine(String)\n  nameWithType: MessageQueue.GetPublicQueuesByMachine(String)\n  fullName: System.Messaging.MessageQueue.GetPublicQueuesByMachine(String)\n- uid: System.Messaging.MessageQueue.GetSecurityContext\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: GetSecurityContext()\n  nameWithType: MessageQueue.GetSecurityContext()\n  fullName: System.Messaging.MessageQueue.GetSecurityContext()\n- uid: System.Messaging.SecurityContext\n  parent: System.Messaging\n  isExternal: false\n  name: SecurityContext\n  nameWithType: SecurityContext\n  fullName: System.Messaging.SecurityContext\n- uid: System.Messaging.MessageQueue.Id\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Id\n  nameWithType: MessageQueue.Id\n  fullName: System.Messaging.MessageQueue.Id\n- uid: System.Messaging.MessageQueue.InfiniteQueueSize\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: InfiniteQueueSize\n  nameWithType: MessageQueue.InfiniteQueueSize\n  fullName: System.Messaging.MessageQueue.InfiniteQueueSize\n- uid: System.Int64\n  parent: System\n  isExternal: true\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Messaging.MessageQueue.InfiniteTimeout\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: InfiniteTimeout\n  nameWithType: MessageQueue.InfiniteTimeout\n  fullName: System.Messaging.MessageQueue.InfiniteTimeout\n- uid: System.Messaging.MessageQueue.Label\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Label\n  nameWithType: MessageQueue.Label\n  fullName: System.Messaging.MessageQueue.Label\n- uid: System.Messaging.MessageQueue.LastModifyTime\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: LastModifyTime\n  nameWithType: MessageQueue.LastModifyTime\n  fullName: System.Messaging.MessageQueue.LastModifyTime\n- uid: System.Messaging.MessageQueue.MachineName\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: MachineName\n  nameWithType: MessageQueue.MachineName\n  fullName: System.Messaging.MessageQueue.MachineName\n- uid: System.Messaging.MessageQueue.MaximumJournalSize\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: MaximumJournalSize\n  nameWithType: MessageQueue.MaximumJournalSize\n  fullName: System.Messaging.MessageQueue.MaximumJournalSize\n- uid: System.Messaging.MessageQueue.MaximumQueueSize\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: MaximumQueueSize\n  nameWithType: MessageQueue.MaximumQueueSize\n  fullName: System.Messaging.MessageQueue.MaximumQueueSize\n- uid: System.Messaging.MessageQueue.MessageReadPropertyFilter\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: MessageReadPropertyFilter\n  nameWithType: MessageQueue.MessageReadPropertyFilter\n  fullName: System.Messaging.MessageQueue.MessageReadPropertyFilter\n- uid: System.Messaging.MessagePropertyFilter\n  parent: System.Messaging\n  isExternal: false\n  name: MessagePropertyFilter\n  nameWithType: MessagePropertyFilter\n  fullName: System.Messaging.MessagePropertyFilter\n- uid: System.Messaging.MessageQueue.MulticastAddress\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: MulticastAddress\n  nameWithType: MessageQueue.MulticastAddress\n  fullName: System.Messaging.MessageQueue.MulticastAddress\n- uid: System.Messaging.MessageQueue.Path\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Path\n  nameWithType: MessageQueue.Path\n  fullName: System.Messaging.MessageQueue.Path\n- uid: System.Messaging.MessageQueue.Peek\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Peek()\n  nameWithType: MessageQueue.Peek()\n  fullName: System.Messaging.MessageQueue.Peek()\n- uid: System.Messaging.MessageQueue.Peek(System.TimeSpan)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Peek(TimeSpan)\n  nameWithType: MessageQueue.Peek(TimeSpan)\n  fullName: System.Messaging.MessageQueue.Peek(TimeSpan)\n- uid: System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Peek(TimeSpan,Cursor,PeekAction)\n  nameWithType: MessageQueue.Peek(TimeSpan,Cursor,PeekAction)\n  fullName: System.Messaging.MessageQueue.Peek(TimeSpan,Cursor,PeekAction)\n- uid: System.Messaging.MessageQueue.PeekByCorrelationId(System.String)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: PeekByCorrelationId(String)\n  nameWithType: MessageQueue.PeekByCorrelationId(String)\n  fullName: System.Messaging.MessageQueue.PeekByCorrelationId(String)\n- uid: System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: PeekByCorrelationId(String,TimeSpan)\n  nameWithType: MessageQueue.PeekByCorrelationId(String,TimeSpan)\n  fullName: System.Messaging.MessageQueue.PeekByCorrelationId(String,TimeSpan)\n- uid: System.Messaging.MessageQueue.PeekById(System.String)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: PeekById(String)\n  nameWithType: MessageQueue.PeekById(String)\n  fullName: System.Messaging.MessageQueue.PeekById(String)\n- uid: System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: PeekById(String,TimeSpan)\n  nameWithType: MessageQueue.PeekById(String,TimeSpan)\n  fullName: System.Messaging.MessageQueue.PeekById(String,TimeSpan)\n- uid: System.Messaging.MessageQueue.PeekByLookupId(System.Int64)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: PeekByLookupId(Int64)\n  nameWithType: MessageQueue.PeekByLookupId(Int64)\n  fullName: System.Messaging.MessageQueue.PeekByLookupId(Int64)\n- uid: System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: PeekByLookupId(MessageLookupAction,Int64)\n  nameWithType: MessageQueue.PeekByLookupId(MessageLookupAction,Int64)\n  fullName: System.Messaging.MessageQueue.PeekByLookupId(MessageLookupAction,Int64)\n- uid: System.Messaging.MessageLookupAction\n  parent: System.Messaging\n  isExternal: false\n  name: MessageLookupAction\n  nameWithType: MessageLookupAction\n  fullName: System.Messaging.MessageLookupAction\n- uid: System.Messaging.MessageQueue.PeekCompleted\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: PeekCompleted\n  nameWithType: MessageQueue.PeekCompleted\n  fullName: System.Messaging.MessageQueue.PeekCompleted\n- uid: System.Messaging.PeekCompletedEventHandler\n  parent: System.Messaging\n  isExternal: false\n  name: PeekCompletedEventHandler\n  nameWithType: PeekCompletedEventHandler\n  fullName: System.Messaging.PeekCompletedEventHandler\n- uid: System.Messaging.MessageQueue.Purge\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Purge()\n  nameWithType: MessageQueue.Purge()\n  fullName: System.Messaging.MessageQueue.Purge()\n- uid: System.Messaging.MessageQueue.QueueName\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: QueueName\n  nameWithType: MessageQueue.QueueName\n  fullName: System.Messaging.MessageQueue.QueueName\n- uid: System.Messaging.MessageQueue.ReadHandle\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: ReadHandle\n  nameWithType: MessageQueue.ReadHandle\n  fullName: System.Messaging.MessageQueue.ReadHandle\n- uid: System.IntPtr\n  parent: System\n  isExternal: true\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Messaging.MessageQueue.Receive\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Receive()\n  nameWithType: MessageQueue.Receive()\n  fullName: System.Messaging.MessageQueue.Receive()\n- uid: System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Receive(MessageQueueTransaction)\n  nameWithType: MessageQueue.Receive(MessageQueueTransaction)\n  fullName: System.Messaging.MessageQueue.Receive(MessageQueueTransaction)\n- uid: System.Messaging.MessageQueueTransaction\n  parent: System.Messaging\n  isExternal: false\n  name: MessageQueueTransaction\n  nameWithType: MessageQueueTransaction\n  fullName: System.Messaging.MessageQueueTransaction\n- uid: System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Receive(MessageQueueTransactionType)\n  nameWithType: MessageQueue.Receive(MessageQueueTransactionType)\n  fullName: System.Messaging.MessageQueue.Receive(MessageQueueTransactionType)\n- uid: System.Messaging.MessageQueueTransactionType\n  parent: System.Messaging\n  isExternal: false\n  name: MessageQueueTransactionType\n  nameWithType: MessageQueueTransactionType\n  fullName: System.Messaging.MessageQueueTransactionType\n- uid: System.Messaging.MessageQueue.Receive(System.TimeSpan)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Receive(TimeSpan)\n  nameWithType: MessageQueue.Receive(TimeSpan)\n  fullName: System.Messaging.MessageQueue.Receive(TimeSpan)\n- uid: System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Receive(TimeSpan,Cursor)\n  nameWithType: MessageQueue.Receive(TimeSpan,Cursor)\n  fullName: System.Messaging.MessageQueue.Receive(TimeSpan,Cursor)\n- uid: System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Receive(TimeSpan,MessageQueueTransaction)\n  nameWithType: MessageQueue.Receive(TimeSpan,MessageQueueTransaction)\n  fullName: System.Messaging.MessageQueue.Receive(TimeSpan,MessageQueueTransaction)\n- uid: System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Receive(TimeSpan,MessageQueueTransactionType)\n  nameWithType: MessageQueue.Receive(TimeSpan,MessageQueueTransactionType)\n  fullName: System.Messaging.MessageQueue.Receive(TimeSpan,MessageQueueTransactionType)\n- uid: System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Receive(TimeSpan,Cursor,MessageQueueTransaction)\n  nameWithType: MessageQueue.Receive(TimeSpan,Cursor,MessageQueueTransaction)\n  fullName: System.Messaging.MessageQueue.Receive(TimeSpan,Cursor,MessageQueueTransaction)\n- uid: System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Receive(TimeSpan,Cursor,MessageQueueTransactionType)\n  nameWithType: MessageQueue.Receive(TimeSpan,Cursor,MessageQueueTransactionType)\n  fullName: System.Messaging.MessageQueue.Receive(TimeSpan,Cursor,MessageQueueTransactionType)\n- uid: System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: ReceiveByCorrelationId(String)\n  nameWithType: MessageQueue.ReceiveByCorrelationId(String)\n  fullName: System.Messaging.MessageQueue.ReceiveByCorrelationId(String)\n- uid: System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: ReceiveByCorrelationId(String,MessageQueueTransaction)\n  nameWithType: MessageQueue.ReceiveByCorrelationId(String,MessageQueueTransaction)\n  fullName: System.Messaging.MessageQueue.ReceiveByCorrelationId(String,MessageQueueTransaction)\n- uid: System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: ReceiveByCorrelationId(String,MessageQueueTransactionType)\n  nameWithType: MessageQueue.ReceiveByCorrelationId(String,MessageQueueTransactionType)\n  fullName: System.Messaging.MessageQueue.ReceiveByCorrelationId(String,MessageQueueTransactionType)\n- uid: System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: ReceiveByCorrelationId(String,TimeSpan)\n  nameWithType: MessageQueue.ReceiveByCorrelationId(String,TimeSpan)\n  fullName: System.Messaging.MessageQueue.ReceiveByCorrelationId(String,TimeSpan)\n- uid: System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: ReceiveByCorrelationId(String,TimeSpan,MessageQueueTransaction)\n  nameWithType: MessageQueue.ReceiveByCorrelationId(String,TimeSpan,MessageQueueTransaction)\n  fullName: System.Messaging.MessageQueue.ReceiveByCorrelationId(String,TimeSpan,MessageQueueTransaction)\n- uid: System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: ReceiveByCorrelationId(String,TimeSpan,MessageQueueTransactionType)\n  nameWithType: MessageQueue.ReceiveByCorrelationId(String,TimeSpan,MessageQueueTransactionType)\n  fullName: System.Messaging.MessageQueue.ReceiveByCorrelationId(String,TimeSpan,MessageQueueTransactionType)\n- uid: System.Messaging.MessageQueue.ReceiveById(System.String)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: ReceiveById(String)\n  nameWithType: MessageQueue.ReceiveById(String)\n  fullName: System.Messaging.MessageQueue.ReceiveById(String)\n- uid: System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: ReceiveById(String,MessageQueueTransaction)\n  nameWithType: MessageQueue.ReceiveById(String,MessageQueueTransaction)\n  fullName: System.Messaging.MessageQueue.ReceiveById(String,MessageQueueTransaction)\n- uid: System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: ReceiveById(String,MessageQueueTransactionType)\n  nameWithType: MessageQueue.ReceiveById(String,MessageQueueTransactionType)\n  fullName: System.Messaging.MessageQueue.ReceiveById(String,MessageQueueTransactionType)\n- uid: System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: ReceiveById(String,TimeSpan)\n  nameWithType: MessageQueue.ReceiveById(String,TimeSpan)\n  fullName: System.Messaging.MessageQueue.ReceiveById(String,TimeSpan)\n- uid: System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: ReceiveById(String,TimeSpan,MessageQueueTransaction)\n  nameWithType: MessageQueue.ReceiveById(String,TimeSpan,MessageQueueTransaction)\n  fullName: System.Messaging.MessageQueue.ReceiveById(String,TimeSpan,MessageQueueTransaction)\n- uid: System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: ReceiveById(String,TimeSpan,MessageQueueTransactionType)\n  nameWithType: MessageQueue.ReceiveById(String,TimeSpan,MessageQueueTransactionType)\n  fullName: System.Messaging.MessageQueue.ReceiveById(String,TimeSpan,MessageQueueTransactionType)\n- uid: System.Messaging.MessageQueue.ReceiveByLookupId(System.Int64)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: ReceiveByLookupId(Int64)\n  nameWithType: MessageQueue.ReceiveByLookupId(Int64)\n  fullName: System.Messaging.MessageQueue.ReceiveByLookupId(Int64)\n- uid: System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: ReceiveByLookupId(MessageLookupAction,Int64,MessageQueueTransaction)\n  nameWithType: MessageQueue.ReceiveByLookupId(MessageLookupAction,Int64,MessageQueueTransaction)\n  fullName: System.Messaging.MessageQueue.ReceiveByLookupId(MessageLookupAction,Int64,MessageQueueTransaction)\n- uid: System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: ReceiveByLookupId(MessageLookupAction,Int64,MessageQueueTransactionType)\n  nameWithType: MessageQueue.ReceiveByLookupId(MessageLookupAction,Int64,MessageQueueTransactionType)\n  fullName: System.Messaging.MessageQueue.ReceiveByLookupId(MessageLookupAction,Int64,MessageQueueTransactionType)\n- uid: System.Messaging.MessageQueue.ReceiveCompleted\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: ReceiveCompleted\n  nameWithType: MessageQueue.ReceiveCompleted\n  fullName: System.Messaging.MessageQueue.ReceiveCompleted\n- uid: System.Messaging.ReceiveCompletedEventHandler\n  parent: System.Messaging\n  isExternal: false\n  name: ReceiveCompletedEventHandler\n  nameWithType: ReceiveCompletedEventHandler\n  fullName: System.Messaging.ReceiveCompletedEventHandler\n- uid: System.Messaging.MessageQueue.Refresh\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Refresh()\n  nameWithType: MessageQueue.Refresh()\n  fullName: System.Messaging.MessageQueue.Refresh()\n- uid: System.Messaging.MessageQueue.ResetPermissions\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: ResetPermissions()\n  nameWithType: MessageQueue.ResetPermissions()\n  fullName: System.Messaging.MessageQueue.ResetPermissions()\n- uid: System.Messaging.MessageQueue.Send(System.Object)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Send(Object)\n  nameWithType: MessageQueue.Send(Object)\n  fullName: System.Messaging.MessageQueue.Send(Object)\n- uid: System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Send(Object,MessageQueueTransaction)\n  nameWithType: MessageQueue.Send(Object,MessageQueueTransaction)\n  fullName: System.Messaging.MessageQueue.Send(Object,MessageQueueTransaction)\n- uid: System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Send(Object,MessageQueueTransactionType)\n  nameWithType: MessageQueue.Send(Object,MessageQueueTransactionType)\n  fullName: System.Messaging.MessageQueue.Send(Object,MessageQueueTransactionType)\n- uid: System.Messaging.MessageQueue.Send(System.Object,System.String)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Send(Object,String)\n  nameWithType: MessageQueue.Send(Object,String)\n  fullName: System.Messaging.MessageQueue.Send(Object,String)\n- uid: System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Send(Object,String,MessageQueueTransaction)\n  nameWithType: MessageQueue.Send(Object,String,MessageQueueTransaction)\n  fullName: System.Messaging.MessageQueue.Send(Object,String,MessageQueueTransaction)\n- uid: System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Send(Object,String,MessageQueueTransactionType)\n  nameWithType: MessageQueue.Send(Object,String,MessageQueueTransactionType)\n  fullName: System.Messaging.MessageQueue.Send(Object,String,MessageQueueTransactionType)\n- uid: System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: SetPermissions(AccessControlList)\n  nameWithType: MessageQueue.SetPermissions(AccessControlList)\n  fullName: System.Messaging.MessageQueue.SetPermissions(AccessControlList)\n- uid: System.Messaging.AccessControlList\n  parent: System.Messaging\n  isExternal: false\n  name: AccessControlList\n  nameWithType: AccessControlList\n  fullName: System.Messaging.AccessControlList\n- uid: System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: SetPermissions(MessageQueueAccessControlEntry)\n  nameWithType: MessageQueue.SetPermissions(MessageQueueAccessControlEntry)\n  fullName: System.Messaging.MessageQueue.SetPermissions(MessageQueueAccessControlEntry)\n- uid: System.Messaging.MessageQueueAccessControlEntry\n  parent: System.Messaging\n  isExternal: false\n  name: MessageQueueAccessControlEntry\n  nameWithType: MessageQueueAccessControlEntry\n  fullName: System.Messaging.MessageQueueAccessControlEntry\n- uid: System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: SetPermissions(String,MessageQueueAccessRights)\n  nameWithType: MessageQueue.SetPermissions(String,MessageQueueAccessRights)\n  fullName: System.Messaging.MessageQueue.SetPermissions(String,MessageQueueAccessRights)\n- uid: System.Messaging.MessageQueueAccessRights\n  parent: System.Messaging\n  isExternal: false\n  name: MessageQueueAccessRights\n  nameWithType: MessageQueueAccessRights\n  fullName: System.Messaging.MessageQueueAccessRights\n- uid: System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: SetPermissions(String,MessageQueueAccessRights,AccessControlEntryType)\n  nameWithType: MessageQueue.SetPermissions(String,MessageQueueAccessRights,AccessControlEntryType)\n  fullName: System.Messaging.MessageQueue.SetPermissions(String,MessageQueueAccessRights,AccessControlEntryType)\n- uid: System.Messaging.AccessControlEntryType\n  parent: System.Messaging\n  isExternal: false\n  name: AccessControlEntryType\n  nameWithType: AccessControlEntryType\n  fullName: System.Messaging.AccessControlEntryType\n- uid: System.Messaging.MessageQueue.SynchronizingObject\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: SynchronizingObject\n  nameWithType: MessageQueue.SynchronizingObject\n  fullName: System.Messaging.MessageQueue.SynchronizingObject\n- uid: System.ComponentModel.ISynchronizeInvoke\n  parent: System.ComponentModel\n  isExternal: false\n  name: ISynchronizeInvoke\n  nameWithType: ISynchronizeInvoke\n  fullName: System.ComponentModel.ISynchronizeInvoke\n- uid: System.Messaging.MessageQueue.Transactional\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Transactional\n  nameWithType: MessageQueue.Transactional\n  fullName: System.Messaging.MessageQueue.Transactional\n- uid: System.Messaging.MessageQueue.UseJournalQueue\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: UseJournalQueue\n  nameWithType: MessageQueue.UseJournalQueue\n  fullName: System.Messaging.MessageQueue.UseJournalQueue\n- uid: System.Messaging.MessageQueue.WriteHandle\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: WriteHandle\n  nameWithType: MessageQueue.WriteHandle\n  fullName: System.Messaging.MessageQueue.WriteHandle\n- uid: System.Messaging.MessageQueue.#ctor*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: MessageQueue\n  nameWithType: MessageQueue.MessageQueue\n- uid: System.Messaging.MessageQueue.AccessMode*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: AccessMode\n  nameWithType: MessageQueue.AccessMode\n- uid: System.Messaging.MessageQueue.Authenticate*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Authenticate\n  nameWithType: MessageQueue.Authenticate\n- uid: System.Messaging.MessageQueue.BasePriority*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: BasePriority\n  nameWithType: MessageQueue.BasePriority\n- uid: System.Messaging.MessageQueue.BeginPeek*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: BeginPeek\n  nameWithType: MessageQueue.BeginPeek\n- uid: System.Messaging.MessageQueue.BeginReceive*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: BeginReceive\n  nameWithType: MessageQueue.BeginReceive\n- uid: System.Messaging.MessageQueue.CanRead*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: CanRead\n  nameWithType: MessageQueue.CanRead\n- uid: System.Messaging.MessageQueue.CanWrite*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: CanWrite\n  nameWithType: MessageQueue.CanWrite\n- uid: System.Messaging.MessageQueue.Category*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Category\n  nameWithType: MessageQueue.Category\n- uid: System.Messaging.MessageQueue.ClearConnectionCache*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: ClearConnectionCache\n  nameWithType: MessageQueue.ClearConnectionCache\n- uid: System.Messaging.MessageQueue.Close*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Close\n  nameWithType: MessageQueue.Close\n- uid: System.Messaging.MessageQueue.Create*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Create\n  nameWithType: MessageQueue.Create\n- uid: System.Messaging.MessageQueue.CreateCursor*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: CreateCursor\n  nameWithType: MessageQueue.CreateCursor\n- uid: System.Messaging.MessageQueue.CreateTime*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: CreateTime\n  nameWithType: MessageQueue.CreateTime\n- uid: System.Messaging.MessageQueue.DefaultPropertiesToSend*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: DefaultPropertiesToSend\n  nameWithType: MessageQueue.DefaultPropertiesToSend\n- uid: System.Messaging.MessageQueue.Delete*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Delete\n  nameWithType: MessageQueue.Delete\n- uid: System.Messaging.MessageQueue.DenySharedReceive*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: DenySharedReceive\n  nameWithType: MessageQueue.DenySharedReceive\n- uid: System.Messaging.MessageQueue.Dispose*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Dispose\n  nameWithType: MessageQueue.Dispose\n- uid: System.Messaging.MessageQueue.EnableConnectionCache*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: EnableConnectionCache\n  nameWithType: MessageQueue.EnableConnectionCache\n- uid: System.Messaging.MessageQueue.EncryptionRequired*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: EncryptionRequired\n  nameWithType: MessageQueue.EncryptionRequired\n- uid: System.Messaging.MessageQueue.EndPeek*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: EndPeek\n  nameWithType: MessageQueue.EndPeek\n- uid: System.Messaging.MessageQueue.EndReceive*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: EndReceive\n  nameWithType: MessageQueue.EndReceive\n- uid: System.Messaging.MessageQueue.Exists*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Exists\n  nameWithType: MessageQueue.Exists\n- uid: System.Messaging.MessageQueue.FormatName*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: FormatName\n  nameWithType: MessageQueue.FormatName\n- uid: System.Messaging.MessageQueue.Formatter*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Formatter\n  nameWithType: MessageQueue.Formatter\n- uid: System.Messaging.MessageQueue.GetAllMessages*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: GetAllMessages\n  nameWithType: MessageQueue.GetAllMessages\n- uid: System.Messaging.MessageQueue.GetEnumerator*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: MessageQueue.GetEnumerator\n- uid: System.Messaging.MessageQueue.GetMachineId*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: GetMachineId\n  nameWithType: MessageQueue.GetMachineId\n- uid: System.Messaging.MessageQueue.GetMessageEnumerator*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: GetMessageEnumerator\n  nameWithType: MessageQueue.GetMessageEnumerator\n- uid: System.Messaging.MessageQueue.GetMessageEnumerator2*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: GetMessageEnumerator2\n  nameWithType: MessageQueue.GetMessageEnumerator2\n- uid: System.Messaging.MessageQueue.GetMessageQueueEnumerator*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: GetMessageQueueEnumerator\n  nameWithType: MessageQueue.GetMessageQueueEnumerator\n- uid: System.Messaging.MessageQueue.GetPrivateQueuesByMachine*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: GetPrivateQueuesByMachine\n  nameWithType: MessageQueue.GetPrivateQueuesByMachine\n- uid: System.Messaging.MessageQueue.GetPublicQueues*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: GetPublicQueues\n  nameWithType: MessageQueue.GetPublicQueues\n- uid: System.Messaging.MessageQueue.GetPublicQueuesByCategory*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: GetPublicQueuesByCategory\n  nameWithType: MessageQueue.GetPublicQueuesByCategory\n- uid: System.Messaging.MessageQueue.GetPublicQueuesByLabel*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: GetPublicQueuesByLabel\n  nameWithType: MessageQueue.GetPublicQueuesByLabel\n- uid: System.Messaging.MessageQueue.GetPublicQueuesByMachine*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: GetPublicQueuesByMachine\n  nameWithType: MessageQueue.GetPublicQueuesByMachine\n- uid: System.Messaging.MessageQueue.GetSecurityContext*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: GetSecurityContext\n  nameWithType: MessageQueue.GetSecurityContext\n- uid: System.Messaging.MessageQueue.Id*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Id\n  nameWithType: MessageQueue.Id\n- uid: System.Messaging.MessageQueue.Label*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Label\n  nameWithType: MessageQueue.Label\n- uid: System.Messaging.MessageQueue.LastModifyTime*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: LastModifyTime\n  nameWithType: MessageQueue.LastModifyTime\n- uid: System.Messaging.MessageQueue.MachineName*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: MachineName\n  nameWithType: MessageQueue.MachineName\n- uid: System.Messaging.MessageQueue.MaximumJournalSize*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: MaximumJournalSize\n  nameWithType: MessageQueue.MaximumJournalSize\n- uid: System.Messaging.MessageQueue.MaximumQueueSize*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: MaximumQueueSize\n  nameWithType: MessageQueue.MaximumQueueSize\n- uid: System.Messaging.MessageQueue.MessageReadPropertyFilter*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: MessageReadPropertyFilter\n  nameWithType: MessageQueue.MessageReadPropertyFilter\n- uid: System.Messaging.MessageQueue.MulticastAddress*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: MulticastAddress\n  nameWithType: MessageQueue.MulticastAddress\n- uid: System.Messaging.MessageQueue.Path*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Path\n  nameWithType: MessageQueue.Path\n- uid: System.Messaging.MessageQueue.Peek*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Peek\n  nameWithType: MessageQueue.Peek\n- uid: System.Messaging.MessageQueue.PeekByCorrelationId*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: PeekByCorrelationId\n  nameWithType: MessageQueue.PeekByCorrelationId\n- uid: System.Messaging.MessageQueue.PeekById*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: PeekById\n  nameWithType: MessageQueue.PeekById\n- uid: System.Messaging.MessageQueue.PeekByLookupId*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: PeekByLookupId\n  nameWithType: MessageQueue.PeekByLookupId\n- uid: System.Messaging.MessageQueue.Purge*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Purge\n  nameWithType: MessageQueue.Purge\n- uid: System.Messaging.MessageQueue.QueueName*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: QueueName\n  nameWithType: MessageQueue.QueueName\n- uid: System.Messaging.MessageQueue.ReadHandle*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: ReadHandle\n  nameWithType: MessageQueue.ReadHandle\n- uid: System.Messaging.MessageQueue.Receive*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Receive\n  nameWithType: MessageQueue.Receive\n- uid: System.Messaging.MessageQueue.ReceiveByCorrelationId*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: ReceiveByCorrelationId\n  nameWithType: MessageQueue.ReceiveByCorrelationId\n- uid: System.Messaging.MessageQueue.ReceiveById*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: ReceiveById\n  nameWithType: MessageQueue.ReceiveById\n- uid: System.Messaging.MessageQueue.ReceiveByLookupId*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: ReceiveByLookupId\n  nameWithType: MessageQueue.ReceiveByLookupId\n- uid: System.Messaging.MessageQueue.Refresh*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Refresh\n  nameWithType: MessageQueue.Refresh\n- uid: System.Messaging.MessageQueue.ResetPermissions*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: ResetPermissions\n  nameWithType: MessageQueue.ResetPermissions\n- uid: System.Messaging.MessageQueue.Send*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Send\n  nameWithType: MessageQueue.Send\n- uid: System.Messaging.MessageQueue.SetPermissions*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: SetPermissions\n  nameWithType: MessageQueue.SetPermissions\n- uid: System.Messaging.MessageQueue.SynchronizingObject*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: SynchronizingObject\n  nameWithType: MessageQueue.SynchronizingObject\n- uid: System.Messaging.MessageQueue.Transactional*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: Transactional\n  nameWithType: MessageQueue.Transactional\n- uid: System.Messaging.MessageQueue.UseJournalQueue*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: UseJournalQueue\n  nameWithType: MessageQueue.UseJournalQueue\n- uid: System.Messaging.MessageQueue.WriteHandle*\n  parent: System.Messaging.MessageQueue\n  isExternal: false\n  name: WriteHandle\n  nameWithType: MessageQueue.WriteHandle\n"}