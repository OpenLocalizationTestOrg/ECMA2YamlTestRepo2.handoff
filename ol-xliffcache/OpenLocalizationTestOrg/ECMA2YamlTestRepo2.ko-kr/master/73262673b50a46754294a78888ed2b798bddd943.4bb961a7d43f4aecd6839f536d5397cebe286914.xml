{"nodes":[{"pos":[317,402],"content":"Represents the results of mapped functions or queries with variable return sequences.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the results of mapped functions or queries with variable return sequences.","pos":[0,85]}]},{"pos":[414,573],"content":"In the following SQL code example, the result shape depends on the input (`shape =1` or `shape = 2`). The order that the projections are returned is undefined.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"In the following SQL code example, the result shape depends on the input (<ph id=\"ph1\">`shape =1`</ph> or <ph id=\"ph2\">`shape = 2`</ph>).","pos":[0,101],"source":"In the following SQL code example, the result shape depends on the input (`shape =1` or `shape = 2`)."},{"content":"The order that the projections are returned is undefined.","pos":[102,159]}]},{"pos":[1742,1754],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Linq.IMultipleResults\n  id: IMultipleResults\n  children:\n  - System.Data.Linq.IMultipleResults.GetResult``1\n  langs:\n  - csharp\n  name: IMultipleResults\n  nameWithType: IMultipleResults\n  fullName: System.Data.Linq.IMultipleResults\n  type: Interface\n  summary: Represents the results of mapped functions or queries with variable return sequences.\n  remarks: In the following SQL code example, the result shape depends on the input (`shape =1` or `shape = 2`). The order that the projections are returned is undefined.\n  example:\n  - \"```  \\nCREATE PROCEDURE VariableResultShapes(@shape int)  \\nAS  \\nif(@shape = 1)  \\n    select CustomerID, ContactTitle, CompanyName from customers  \\nelse if(@shape = 2)  \\n    select OrderID, ShipName from orders  \\n```  \\n  \\n [!code-vb[DLinqSprox#4](~/add/codesnippet/visualbasic/sprox/northwind-sprox.vb#4)]\\n [!code-cs[DLinqSprox#4](~/add/codesnippet/csharp/sprox/northwind-sprox.cs#4)]\"\n  syntax:\n    content: 'public interface IMultipleResults : IDisposable, System.Data.Linq.IFunctionResult'\n  implements:\n  - System.Data.Linq.IFunctionResult\n  - System.IDisposable\n  platform:\n  - net462\n- uid: System.Data.Linq.IMultipleResults.GetResult``1\n  id: GetResult``1\n  parent: System.Data.Linq.IMultipleResults\n  langs:\n  - csharp\n  name: GetResult()\n  nameWithType: IMultipleResults.GetResult()\n  fullName: System.Data.Linq.IMultipleResults.GetResult()\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<TElement> GetResult<TElement> ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{TElement}\n      description: To be added.\n  overload: System.Data.Linq.IMultipleResults.GetResult<TElement>*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Data.Linq.IMultipleResults.GetResult``1\n  parent: System.Data.Linq.IMultipleResults\n  isExternal: false\n  name: GetResult()\n  nameWithType: IMultipleResults.GetResult()\n  fullName: System.Data.Linq.IMultipleResults.GetResult()\n- uid: System.Collections.Generic.IEnumerable{TElement}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<TElement>\n  nameWithType: IEnumerable<TElement>\n  fullName: System.Collections.Generic.IEnumerable<TElement>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<TElement>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TElement\n    name: TElement\n    nameWithType: TElement\n    fullName: TElement\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Linq.IMultipleResults.GetResult<TElement>*\n  parent: System.Data.Linq.IMultipleResults\n  isExternal: false\n  name: GetResult<TElement>\n  nameWithType: IMultipleResults.GetResult<TElement>\n"}