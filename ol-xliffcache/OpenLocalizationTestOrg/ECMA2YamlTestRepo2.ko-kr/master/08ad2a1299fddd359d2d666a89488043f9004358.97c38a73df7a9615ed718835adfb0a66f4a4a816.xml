{"nodes":[{"pos":[574,658],"content":"Represents the mapping between a method parameter and a database function parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the mapping between a method parameter and a database function parameter.","pos":[0,84]}]},{"pos":[1190,1290],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.Linq.Mapping.MetaParameter\"></xref> class."},{"pos":[1805,1845],"content":"Gets the database type of the parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the database type of the parameter.","pos":[0,40]}]},{"pos":[1965,2012],"content":"The database type of the parameter as a string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The database type of the parameter as a string.","pos":[0,47]}]},{"pos":[2478,2534],"content":"Gets the name of the parameter in the database function.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the parameter in the database function.","pos":[0,56]}]},{"pos":[2658,2679],"content":"The name as a string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name as a string.","pos":[0,21]}]},{"pos":[3119,3150],"content":"Gets the name of the parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the parameter.","pos":[0,31]}]},{"pos":[3162,3236],"content":"This value is the same as the <xref:System.Reflection.ParameterInfo> name.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This value is the same as the &lt;xref:System.Reflection.ParameterInfo&gt; name.","pos":[0,74],"source":"This value is the same as the <xref:System.Reflection.ParameterInfo> name."}]},{"pos":[3354,3392],"content":"The name of the parameter as a string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the parameter as a string.","pos":[0,38]}]},{"pos":[3851,3888],"content":"Gets the underlying method parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the underlying method parameter.","pos":[0,37]}]},{"pos":[4054,4086],"content":"The underlying method parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The underlying method parameter.","pos":[0,32]}]},{"pos":[4570,4631],"content":"Gets the common language runtime (CLR) type of the parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the common language runtime (CLR) type of the parameter.","pos":[0,61]}]},{"pos":[4754,4763],"content":"The type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type.","pos":[0,9]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Linq.Mapping.MetaParameter\n  id: MetaParameter\n  children:\n  - System.Data.Linq.Mapping.MetaParameter.#ctor\n  - System.Data.Linq.Mapping.MetaParameter.DbType\n  - System.Data.Linq.Mapping.MetaParameter.MappedName\n  - System.Data.Linq.Mapping.MetaParameter.Name\n  - System.Data.Linq.Mapping.MetaParameter.Parameter\n  - System.Data.Linq.Mapping.MetaParameter.ParameterType\n  langs:\n  - csharp\n  name: MetaParameter\n  nameWithType: MetaParameter\n  fullName: System.Data.Linq.Mapping.MetaParameter\n  type: Class\n  summary: Represents the mapping between a method parameter and a database function parameter.\n  syntax:\n    content: public abstract class MetaParameter\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaParameter.#ctor\n  id: '#ctor'\n  parent: System.Data.Linq.Mapping.MetaParameter\n  langs:\n  - csharp\n  name: MetaParameter()\n  nameWithType: MetaParameter.MetaParameter()\n  fullName: System.Data.Linq.Mapping.MetaParameter.MetaParameter()\n  type: Constructor\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Initializes a new instance of the <xref href=\"System.Data.Linq.Mapping.MetaParameter\"></xref> class.\n  syntax:\n    content: protected MetaParameter ();\n    parameters: []\n  overload: System.Data.Linq.Mapping.MetaParameter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaParameter.DbType\n  id: DbType\n  parent: System.Data.Linq.Mapping.MetaParameter\n  langs:\n  - csharp\n  name: DbType\n  nameWithType: MetaParameter.DbType\n  fullName: System.Data.Linq.Mapping.MetaParameter.DbType\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the database type of the parameter.\n  syntax:\n    content: public abstract string DbType { get; }\n    return:\n      type: System.String\n      description: The database type of the parameter as a string.\n  overload: System.Data.Linq.Mapping.MetaParameter.DbType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaParameter.MappedName\n  id: MappedName\n  parent: System.Data.Linq.Mapping.MetaParameter\n  langs:\n  - csharp\n  name: MappedName\n  nameWithType: MetaParameter.MappedName\n  fullName: System.Data.Linq.Mapping.MetaParameter.MappedName\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the name of the parameter in the database function.\n  syntax:\n    content: public abstract string MappedName { get; }\n    return:\n      type: System.String\n      description: The name as a string.\n  overload: System.Data.Linq.Mapping.MetaParameter.MappedName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaParameter.Name\n  id: Name\n  parent: System.Data.Linq.Mapping.MetaParameter\n  langs:\n  - csharp\n  name: Name\n  nameWithType: MetaParameter.Name\n  fullName: System.Data.Linq.Mapping.MetaParameter.Name\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the name of the parameter.\n  remarks: This value is the same as the <xref:System.Reflection.ParameterInfo> name.\n  syntax:\n    content: public abstract string Name { get; }\n    return:\n      type: System.String\n      description: The name of the parameter as a string.\n  overload: System.Data.Linq.Mapping.MetaParameter.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaParameter.Parameter\n  id: Parameter\n  parent: System.Data.Linq.Mapping.MetaParameter\n  langs:\n  - csharp\n  name: Parameter\n  nameWithType: MetaParameter.Parameter\n  fullName: System.Data.Linq.Mapping.MetaParameter.Parameter\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the underlying method parameter.\n  syntax:\n    content: public abstract System.Reflection.ParameterInfo Parameter { get; }\n    return:\n      type: System.Reflection.ParameterInfo\n      description: The underlying method parameter.\n  overload: System.Data.Linq.Mapping.MetaParameter.Parameter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaParameter.ParameterType\n  id: ParameterType\n  parent: System.Data.Linq.Mapping.MetaParameter\n  langs:\n  - csharp\n  name: ParameterType\n  nameWithType: MetaParameter.ParameterType\n  fullName: System.Data.Linq.Mapping.MetaParameter.ParameterType\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the common language runtime (CLR) type of the parameter.\n  syntax:\n    content: public abstract Type ParameterType { get; }\n    return:\n      type: System.Type\n      description: The type.\n  overload: System.Data.Linq.Mapping.MetaParameter.ParameterType*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Data.Linq.Mapping.MetaParameter.#ctor\n  parent: System.Data.Linq.Mapping.MetaParameter\n  isExternal: false\n  name: MetaParameter()\n  nameWithType: MetaParameter.MetaParameter()\n  fullName: System.Data.Linq.Mapping.MetaParameter.MetaParameter()\n- uid: System.Data.Linq.Mapping.MetaParameter.DbType\n  parent: System.Data.Linq.Mapping.MetaParameter\n  isExternal: false\n  name: DbType\n  nameWithType: MetaParameter.DbType\n  fullName: System.Data.Linq.Mapping.MetaParameter.DbType\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Linq.Mapping.MetaParameter.MappedName\n  parent: System.Data.Linq.Mapping.MetaParameter\n  isExternal: false\n  name: MappedName\n  nameWithType: MetaParameter.MappedName\n  fullName: System.Data.Linq.Mapping.MetaParameter.MappedName\n- uid: System.Data.Linq.Mapping.MetaParameter.Name\n  parent: System.Data.Linq.Mapping.MetaParameter\n  isExternal: false\n  name: Name\n  nameWithType: MetaParameter.Name\n  fullName: System.Data.Linq.Mapping.MetaParameter.Name\n- uid: System.Data.Linq.Mapping.MetaParameter.Parameter\n  parent: System.Data.Linq.Mapping.MetaParameter\n  isExternal: false\n  name: Parameter\n  nameWithType: MetaParameter.Parameter\n  fullName: System.Data.Linq.Mapping.MetaParameter.Parameter\n- uid: System.Reflection.ParameterInfo\n  parent: System.Reflection\n  isExternal: true\n  name: ParameterInfo\n  nameWithType: ParameterInfo\n  fullName: System.Reflection.ParameterInfo\n- uid: System.Data.Linq.Mapping.MetaParameter.ParameterType\n  parent: System.Data.Linq.Mapping.MetaParameter\n  isExternal: false\n  name: ParameterType\n  nameWithType: MetaParameter.ParameterType\n  fullName: System.Data.Linq.Mapping.MetaParameter.ParameterType\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Data.Linq.Mapping.MetaParameter.#ctor*\n  parent: System.Data.Linq.Mapping.MetaParameter\n  isExternal: false\n  name: MetaParameter\n  nameWithType: MetaParameter.MetaParameter\n- uid: System.Data.Linq.Mapping.MetaParameter.DbType*\n  parent: System.Data.Linq.Mapping.MetaParameter\n  isExternal: false\n  name: DbType\n  nameWithType: MetaParameter.DbType\n- uid: System.Data.Linq.Mapping.MetaParameter.MappedName*\n  parent: System.Data.Linq.Mapping.MetaParameter\n  isExternal: false\n  name: MappedName\n  nameWithType: MetaParameter.MappedName\n- uid: System.Data.Linq.Mapping.MetaParameter.Name*\n  parent: System.Data.Linq.Mapping.MetaParameter\n  isExternal: false\n  name: Name\n  nameWithType: MetaParameter.Name\n- uid: System.Data.Linq.Mapping.MetaParameter.Parameter*\n  parent: System.Data.Linq.Mapping.MetaParameter\n  isExternal: false\n  name: Parameter\n  nameWithType: MetaParameter.Parameter\n- uid: System.Data.Linq.Mapping.MetaParameter.ParameterType*\n  parent: System.Data.Linq.Mapping.MetaParameter\n  isExternal: false\n  name: ParameterType\n  nameWithType: MetaParameter.ParameterType\n"}