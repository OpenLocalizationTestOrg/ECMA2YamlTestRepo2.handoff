{"nodes":[{"pos":[489,561],"content":"Specifies whether to allow, deny, or revoke access rights for a trustee.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies whether to allow, deny, or revoke access rights for a trustee.","pos":[0,72]}]},{"pos":[574,1445],"content":"When you use the <xref:System.Messaging.AccessControlEntry> class to specify a new access right for a trustee, you set its <xref:System.Messaging.AccessControlEntry.EntryType%2A> property to describe whether to grant the right or deny it. Furthermore, you can define whether the new right is appended to an existing list (if the trustee already exists in the context for which you are adding or removing access privileges) or if the new right overwrites and deletes any previously defined rights.       When creating a new `Allow` entry, there might be a preexisting `Deny` entry for the same trustee that takes precedence and must be addressed. Similarly, when creating a new `Deny` entry, there might be an existing `Allow` entry that takes precedence. For information about the order in which access rights are applied, see <xref:System.Messaging.AccessControlList>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When you use the &lt;xref:System.Messaging.AccessControlEntry&gt; class to specify a new access right for a trustee, you set its &lt;xref:System.Messaging.AccessControlEntry.EntryType%2A&gt; property to describe whether to grant the right or deny it.","pos":[0,238],"source":"When you use the <xref:System.Messaging.AccessControlEntry> class to specify a new access right for a trustee, you set its <xref:System.Messaging.AccessControlEntry.EntryType%2A> property to describe whether to grant the right or deny it."},{"content":"Furthermore, you can define whether the new right is appended to an existing list (if the trustee already exists in the context for which you are adding or removing access privileges) or if the new right overwrites and deletes any previously defined rights.","pos":[239,496]},{"content":"When creating a new <ph id=\"ph1\">`Allow`</ph> entry, there might be a preexisting <ph id=\"ph2\">`Deny`</ph> entry for the same trustee that takes precedence and must be addressed.","pos":[503,645],"source":"       When creating a new `Allow` entry, there might be a preexisting `Deny` entry for the same trustee that takes precedence and must be addressed."},{"content":"Similarly, when creating a new <ph id=\"ph1\">`Deny`</ph> entry, there might be an existing <ph id=\"ph2\">`Allow`</ph> entry that takes precedence.","pos":[646,754],"source":" Similarly, when creating a new `Deny` entry, there might be an existing `Allow` entry that takes precedence."},{"content":"For information about the order in which access rights are applied, see &lt;xref:System.Messaging.AccessControlList&gt;.","pos":[755,869],"source":" For information about the order in which access rights are applied, see <xref:System.Messaging.AccessControlList>."}]},{"pos":[1901,2003],"content":"An access-allowed entry that causes the new rights to be added to any existing rights the trustee has.","needQuote":true,"needEscape":true,"nodes":[{"content":"An access-allowed entry that causes the new rights to be added to any existing rights the trustee has.","pos":[0,102]}]},{"pos":[2116,2128],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2506,2620],"content":"An access-denied entry that denies the specified rights in addition to any currently denied rights of the trustee.","needQuote":true,"needEscape":true,"nodes":[{"content":"An access-denied entry that denies the specified rights in addition to any currently denied rights of the trustee.","pos":[0,114]}]},{"pos":[2732,2744],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3132,3218],"content":"An entry that removes all existing allowed or denied rights for the specified trustee.","needQuote":true,"needEscape":true,"nodes":[{"content":"An entry that removes all existing allowed or denied rights for the specified trustee.","pos":[0,86]}]},{"pos":[3332,3344],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3717,3984],"content":"An access-allowed entry that is similar to <xref uid=\"langword_csharp_Allow\" name=\"Allow\" href=\"\"></xref>, except that the new entry allows only the specified rights. Using it discards any existing rights, including all existing access-denied entries for the trustee.","needQuote":true,"needEscape":true,"nodes":[{"content":"An access-allowed entry that is similar to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Allow\" name=\"Allow\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, except that the new entry allows only the specified rights.","pos":[0,166],"source":"An access-allowed entry that is similar to <xref uid=\"langword_csharp_Allow\" name=\"Allow\" href=\"\"></xref>, except that the new entry allows only the specified rights."},{"content":"Using it discards any existing rights, including all existing access-denied entries for the trustee.","pos":[167,267]}]},{"pos":[4095,4107],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Messaging.AccessControlEntryType\n  id: AccessControlEntryType\n  children:\n  - System.Messaging.AccessControlEntryType.Allow\n  - System.Messaging.AccessControlEntryType.Deny\n  - System.Messaging.AccessControlEntryType.Revoke\n  - System.Messaging.AccessControlEntryType.Set\n  langs:\n  - csharp\n  name: AccessControlEntryType\n  nameWithType: AccessControlEntryType\n  fullName: System.Messaging.AccessControlEntryType\n  type: Enum\n  summary: Specifies whether to allow, deny, or revoke access rights for a trustee.\n  remarks: \"When you use the <xref:System.Messaging.AccessControlEntry> class to specify a new access right for a trustee, you set its <xref:System.Messaging.AccessControlEntry.EntryType%2A> property to describe whether to grant the right or deny it. Furthermore, you can define whether the new right is appended to an existing list (if the trustee already exists in the context for which you are adding or removing access privileges) or if the new right overwrites and deletes any previously defined rights.  \\n  \\n When creating a new `Allow` entry, there might be a preexisting `Deny` entry for the same trustee that takes precedence and must be addressed. Similarly, when creating a new `Deny` entry, there might be an existing `Allow` entry that takes precedence. For information about the order in which access rights are applied, see <xref:System.Messaging.AccessControlList>.\"\n  syntax:\n    content: public enum AccessControlEntryType\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.Messaging.AccessControlEntryType.Allow\n  id: Allow\n  parent: System.Messaging.AccessControlEntryType\n  langs:\n  - csharp\n  name: Allow\n  nameWithType: AccessControlEntryType.Allow\n  fullName: System.Messaging.AccessControlEntryType.Allow\n  type: Field\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: An access-allowed entry that causes the new rights to be added to any existing rights the trustee has.\n  syntax:\n    content: Allow\n    return:\n      type: System.Messaging.AccessControlEntryType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.AccessControlEntryType.Deny\n  id: Deny\n  parent: System.Messaging.AccessControlEntryType\n  langs:\n  - csharp\n  name: Deny\n  nameWithType: AccessControlEntryType.Deny\n  fullName: System.Messaging.AccessControlEntryType.Deny\n  type: Field\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: An access-denied entry that denies the specified rights in addition to any currently denied rights of the trustee.\n  syntax:\n    content: Deny\n    return:\n      type: System.Messaging.AccessControlEntryType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.AccessControlEntryType.Revoke\n  id: Revoke\n  parent: System.Messaging.AccessControlEntryType\n  langs:\n  - csharp\n  name: Revoke\n  nameWithType: AccessControlEntryType.Revoke\n  fullName: System.Messaging.AccessControlEntryType.Revoke\n  type: Field\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: An entry that removes all existing allowed or denied rights for the specified trustee.\n  syntax:\n    content: Revoke\n    return:\n      type: System.Messaging.AccessControlEntryType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.AccessControlEntryType.Set\n  id: Set\n  parent: System.Messaging.AccessControlEntryType\n  langs:\n  - csharp\n  name: Set\n  nameWithType: AccessControlEntryType.Set\n  fullName: System.Messaging.AccessControlEntryType.Set\n  type: Field\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: An access-allowed entry that is similar to <xref uid=\"langword_csharp_Allow\" name=\"Allow\" href=\"\"></xref>, except that the new entry allows only the specified rights. Using it discards any existing rights, including all existing access-denied entries for the trustee.\n  syntax:\n    content: Set\n    return:\n      type: System.Messaging.AccessControlEntryType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.Messaging.AccessControlEntryType.Allow\n  parent: System.Messaging.AccessControlEntryType\n  isExternal: false\n  name: Allow\n  nameWithType: AccessControlEntryType.Allow\n  fullName: System.Messaging.AccessControlEntryType.Allow\n- uid: System.Messaging.AccessControlEntryType\n  parent: System.Messaging\n  isExternal: false\n  name: AccessControlEntryType\n  nameWithType: AccessControlEntryType\n  fullName: System.Messaging.AccessControlEntryType\n- uid: System.Messaging.AccessControlEntryType.Deny\n  parent: System.Messaging.AccessControlEntryType\n  isExternal: false\n  name: Deny\n  nameWithType: AccessControlEntryType.Deny\n  fullName: System.Messaging.AccessControlEntryType.Deny\n- uid: System.Messaging.AccessControlEntryType.Revoke\n  parent: System.Messaging.AccessControlEntryType\n  isExternal: false\n  name: Revoke\n  nameWithType: AccessControlEntryType.Revoke\n  fullName: System.Messaging.AccessControlEntryType.Revoke\n- uid: System.Messaging.AccessControlEntryType.Set\n  parent: System.Messaging.AccessControlEntryType\n  isExternal: false\n  name: Set\n  nameWithType: AccessControlEntryType.Set\n  fullName: System.Messaging.AccessControlEntryType.Set\n"}