{"nodes":[{"pos":[622,771],"content":"Represents detailed update information obtained through a call to <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents detailed update information obtained through a call to &lt;xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate*&gt;.","pos":[0,149],"source":"Represents detailed update information obtained through a call to <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate*>."}]},{"pos":[784,1989],"content":"With UpdateCheckInfo, you can decide whether to upgrade your ClickOnce application based on information about the newest version. <xref:System.Deployment.Application.UpdateCheckInfo.UpdateAvailable%2A> will return a Boolean value indicating whether there is a new update at all. The <xref:System.Deployment.Application.UpdateCheckInfo.AvailableVersion%2A> property provides the version number of the new version, while <xref:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion%2A> provides the earliest version that the user should have installed. <xref:System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired%2A> expresses whether the latest available update is required of the user. Finally, <xref:System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes%2A> expresses the total size of the update.      > [!NOTE] >  Visual Studio adds the `<deploymentProvider>` element to the manifest only if the application is set to check for updates, so you either have to check **The application should check for updates** or specify an update URL in **Update location** in the [Application Updates Dialog Box](http://msdn.microsoft.com/en-us/8eca8743-8e68-4d04-bfd5-4dc0a9b2934f).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"With UpdateCheckInfo, you can decide whether to upgrade your ClickOnce application based on information about the newest version.","pos":[0,129]},{"content":"&lt;xref:System.Deployment.Application.UpdateCheckInfo.UpdateAvailable%2A&gt; will return a Boolean value indicating whether there is a new update at all.","pos":[130,278],"source":" <xref:System.Deployment.Application.UpdateCheckInfo.UpdateAvailable%2A> will return a Boolean value indicating whether there is a new update at all."},{"content":"The &lt;xref:System.Deployment.Application.UpdateCheckInfo.AvailableVersion%2A&gt; property provides the version number of the new version, while &lt;xref:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion%2A&gt; provides the earliest version that the user should have installed.","pos":[279,564],"source":" The <xref:System.Deployment.Application.UpdateCheckInfo.AvailableVersion%2A> property provides the version number of the new version, while <xref:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion%2A> provides the earliest version that the user should have installed."},{"content":"&lt;xref:System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired%2A&gt; expresses whether the latest available update is required of the user.","pos":[565,708],"source":" <xref:System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired%2A> expresses whether the latest available update is required of the user."},{"content":"Finally, &lt;xref:System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes%2A&gt; expresses the total size of the update.","pos":[709,829],"source":" Finally, <xref:System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes%2A> expresses the total size of the update."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Visual Studio adds the <ph id=\"ph2\">`&lt;deploymentProvider&gt;`</ph> element to the manifest only if the application is set to check for updates, so you either have to check <bpt id=\"p1\">**</bpt>The application should check for updates<ept id=\"p1\">**</ept> or specify an update URL in <bpt id=\"p2\">**</bpt>Update location<ept id=\"p2\">**</ept> in the <bpt id=\"p3\">[</bpt>Application Updates Dialog Box<ept id=\"p3\">](http://msdn.microsoft.com/en-us/8eca8743-8e68-4d04-bfd5-4dc0a9b2934f)</ept>.","pos":[835,1202],"source":"      > [!NOTE] >  Visual Studio adds the `<deploymentProvider>` element to the manifest only if the application is set to check for updates, so you either have to check **The application should check for updates** or specify an update URL in **Update location** in the [Application Updates Dialog Box](http://msdn.microsoft.com/en-us/8eca8743-8e68-4d04-bfd5-4dc0a9b2934f)."}]},{"pos":[3130,3188],"content":"Gets the version number of the latest uninstalled version.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the version number of the latest uninstalled version.","pos":[0,58]}]},{"pos":[3200,3572],"content":"You can use AvailableVersion to decide whether to install the update based on the severity of the update. For example, if only the <xref:System.Version.Build%2A> or <xref:System.Version.Revision%2A> version properties have changed, your application may not need to update until either the <xref:System.Version.Minor%2A> or <xref:System.Version.Major%2A> properties change.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can use AvailableVersion to decide whether to install the update based on the severity of the update. For example, if only the <xref:System.Version.Build%2A> or <xref:System.Version.Revision%2A> version properties have changed, your application may not need to update until either the <xref:System.Version.Minor%2A> or <xref:System.Version.Major%2A> properties change.","pos":[0,372],"nodes":[{"content":"You can use AvailableVersion to decide whether to install the update based on the severity of the update.","pos":[0,105]},{"content":"For example, if only the &lt;xref:System.Version.Build%2A&gt; or &lt;xref:System.Version.Revision%2A&gt; version properties have changed, your application may not need to update until either the &lt;xref:System.Version.Minor%2A&gt; or &lt;xref:System.Version.Major%2A&gt; properties change.","pos":[106,372],"source":" For example, if only the <xref:System.Version.Build%2A> or <xref:System.Version.Revision%2A> version properties have changed, your application may not need to update until either the <xref:System.Version.Minor%2A> or <xref:System.Version.Major%2A> properties change."}]}]},{"pos":[3695,3801],"content":"The <xref:System.Version> expressing the major and minor build and revision numbers of the latest version.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Version&gt; expressing the major and minor build and revision numbers of the latest version.","pos":[0,106],"source":"The <xref:System.Version> expressing the major and minor build and revision numbers of the latest version."}]},{"pos":[4343,4404],"content":"Gets a value indicating whether the update must be installed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the update must be installed.","pos":[0,61]}]},{"pos":[4416,4755],"content":"When you deploy an update to your ClickOnce application, you can mark it as a required update, signaling to your application that it should upgrade immediately. You want to mark the application if the latest version contains a critical update, or if it is incompatible with file formats or back-end data sources used by the former version.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When you deploy an update to your ClickOnce application, you can mark it as a required update, signaling to your application that it should upgrade immediately. You want to mark the application if the latest version contains a critical update, or if it is incompatible with file formats or back-end data sources used by the former version.","pos":[0,339],"nodes":[{"content":"When you deploy an update to your ClickOnce application, you can mark it as a required update, signaling to your application that it should upgrade immediately.","pos":[0,160]},{"content":"You want to mark the application if the latest version contains a critical update, or if it is incompatible with file formats or back-end data sources used by the former version.","pos":[161,339]}]}]},{"pos":[5294,5456],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the update is required; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the update is required; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6028,6103],"content":"Gets the minimum version that the user must have installed on the computer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the minimum version that the user must have installed on the computer.","pos":[0,75]}]},{"pos":[6116,6398],"content":"Applications can miss required updates when the user takes on a special assignment or is away from the computer for weeks or months. Use       MinimumRequiredVersion to determine if the user has not upgraded the application in a while, and has missed one or more required updates.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Applications can miss required updates when the user takes on a special assignment or is away from the computer for weeks or months. Use       MinimumRequiredVersion to determine if the user has not upgraded the application in a while, and has missed one or more required updates.","pos":[0,280],"nodes":[{"content":"Applications can miss required updates when the user takes on a special assignment or is away from the computer for weeks or months.","pos":[0,132]},{"content":"Use       MinimumRequiredVersion to determine if the user has not upgraded the application in a while, and has missed one or more required updates.","pos":[133,280]}]}]},{"pos":[6944,7024],"content":"A <xref:System.Version> expressing the least version that the user must install.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Version&gt; expressing the least version that the user must install.","pos":[0,80],"source":"A <xref:System.Version> expressing the least version that the user must install."}]},{"pos":[7231,7276],"content":"There is no new version available to install.","needQuote":true,"needEscape":true,"nodes":[{"content":"There is no new version available to install.","pos":[0,45]}]},{"pos":[7720,7768],"content":"Gets whether an uninstalled update is available.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets whether an uninstalled update is available.","pos":[0,48]}]},{"pos":[8280,8463],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if new version of the application is available; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if new version of the application is available; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8999,9037],"content":"Gets the size of the available update.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the size of the available update.","pos":[0,38]}]},{"pos":[9154,9270],"content":"An <xref:System.Int64> describing the size, in bytes, of the available update. If no update is available, returns 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <xref:System.Int64> describing the size, in bytes, of the available update. If no update is available, returns 0.","pos":[0,116],"nodes":[{"content":"An &lt;xref:System.Int64&gt; describing the size, in bytes, of the available update.","pos":[0,78],"source":"An <xref:System.Int64> describing the size, in bytes, of the available update."},{"content":"If no update is available, returns 0.","pos":[79,116]}]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Deployment.Application.UpdateCheckInfo\n  id: UpdateCheckInfo\n  children:\n  - System.Deployment.Application.UpdateCheckInfo.AvailableVersion\n  - System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired\n  - System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion\n  - System.Deployment.Application.UpdateCheckInfo.UpdateAvailable\n  - System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes\n  langs:\n  - csharp\n  name: UpdateCheckInfo\n  nameWithType: UpdateCheckInfo\n  fullName: System.Deployment.Application.UpdateCheckInfo\n  type: Class\n  summary: Represents detailed update information obtained through a call to <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate*>.\n  remarks: \"With UpdateCheckInfo, you can decide whether to upgrade your ClickOnce application based on information about the newest version. <xref:System.Deployment.Application.UpdateCheckInfo.UpdateAvailable%2A> will return a Boolean value indicating whether there is a new update at all. The <xref:System.Deployment.Application.UpdateCheckInfo.AvailableVersion%2A> property provides the version number of the new version, while <xref:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion%2A> provides the earliest version that the user should have installed. <xref:System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired%2A> expresses whether the latest available update is required of the user. Finally, <xref:System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes%2A> expresses the total size of the update.  \\n  \\n> [!NOTE]\\n>  Visual Studio adds the `<deploymentProvider>` element to the manifest only if the application is set to check for updates, so you either have to check **The application should check for updates** or specify an update URL in **Update location** in the [Application Updates Dialog Box](http://msdn.microsoft.com/en-us/8eca8743-8e68-4d04-bfd5-4dc0a9b2934f).\"\n  example:\n  - \"The following code example uses <xref:System.Deployment.Application.UpdateCheckInfo.UpdateAvailable%2A> to determine if there is a new application update, and <xref:System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired%2A> to determine whether to ask the user to install the update.  \\n  \\n [!code-cs[ClickOnceAPI#6](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#6)]\\n [!code-cpp[ClickOnceAPI#6](~/add/codesnippet/cpp/t-system.deployment.appl_8_1.cpp)]\\n [!code-vb[ClickOnceAPI#6](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#6)]\"\n  syntax:\n    content: public class UpdateCheckInfo\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Deployment.Application.UpdateCheckInfo.AvailableVersion\n  id: AvailableVersion\n  parent: System.Deployment.Application.UpdateCheckInfo\n  langs:\n  - csharp\n  name: AvailableVersion\n  nameWithType: UpdateCheckInfo.AvailableVersion\n  fullName: System.Deployment.Application.UpdateCheckInfo.AvailableVersion\n  type: Property\n  assemblies:\n  - System.Deployment\n  namespace: System.Deployment.Application\n  summary: Gets the version number of the latest uninstalled version.\n  remarks: You can use AvailableVersion to decide whether to install the update based on the severity of the update. For example, if only the <xref:System.Version.Build%2A> or <xref:System.Version.Revision%2A> version properties have changed, your application may not need to update until either the <xref:System.Version.Minor%2A> or <xref:System.Version.Major%2A> properties change.\n  syntax:\n    content: public Version AvailableVersion { get; }\n    return:\n      type: System.Version\n      description: The <xref:System.Version> expressing the major and minor build and revision numbers of the latest version.\n  overload: System.Deployment.Application.UpdateCheckInfo.AvailableVersion*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired\n  id: IsUpdateRequired\n  parent: System.Deployment.Application.UpdateCheckInfo\n  langs:\n  - csharp\n  name: IsUpdateRequired\n  nameWithType: UpdateCheckInfo.IsUpdateRequired\n  fullName: System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired\n  type: Property\n  assemblies:\n  - System.Deployment\n  namespace: System.Deployment.Application\n  summary: Gets a value indicating whether the update must be installed.\n  remarks: When you deploy an update to your ClickOnce application, you can mark it as a required update, signaling to your application that it should upgrade immediately. You want to mark the application if the latest version contains a critical update, or if it is incompatible with file formats or back-end data sources used by the former version.\n  example:\n  - \"The following code example uses IsUpdateRequired to determine whether to ask the user to install the update, or to install it without prompting.  \\n  \\n [!code-cs[ClickOnceAPI#6](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#6)]\\n [!code-cpp[ClickOnceAPI#6](~/add/codesnippet/cpp/p-system.deployment.appl_6_1.cpp)]\\n [!code-vb[ClickOnceAPI#6](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#6)]\"\n  syntax:\n    content: public bool IsUpdateRequired { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the update is required; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion\n  id: MinimumRequiredVersion\n  parent: System.Deployment.Application.UpdateCheckInfo\n  langs:\n  - csharp\n  name: MinimumRequiredVersion\n  nameWithType: UpdateCheckInfo.MinimumRequiredVersion\n  fullName: System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion\n  type: Property\n  assemblies:\n  - System.Deployment\n  namespace: System.Deployment.Application\n  summary: Gets the minimum version that the user must have installed on the computer.\n  remarks: \"Applications can miss required updates when the user takes on a special assignment or is away from the computer for weeks or months. Use  \\n  \\n MinimumRequiredVersion to determine if the user has not upgraded the application in a while, and has missed one or more required updates.\"\n  example:\n  - \"The following code example demonstrates displaying the MinimumRequiredVersion property to the user when there is a required update available.  \\n  \\n [!code-cs[ClickOnceAPI#6](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#6)]\\n [!code-cpp[ClickOnceAPI#6](~/add/codesnippet/cpp/p-system.deployment.appl_1_1.cpp)]\\n [!code-vb[ClickOnceAPI#6](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#6)]\"\n  syntax:\n    content: public Version MinimumRequiredVersion { get; }\n    return:\n      type: System.Version\n      description: A <xref:System.Version> expressing the least version that the user must install.\n  overload: System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: There is no new version available to install.\n  platform:\n  - net462\n- uid: System.Deployment.Application.UpdateCheckInfo.UpdateAvailable\n  id: UpdateAvailable\n  parent: System.Deployment.Application.UpdateCheckInfo\n  langs:\n  - csharp\n  name: UpdateAvailable\n  nameWithType: UpdateCheckInfo.UpdateAvailable\n  fullName: System.Deployment.Application.UpdateCheckInfo.UpdateAvailable\n  type: Property\n  assemblies:\n  - System.Deployment\n  namespace: System.Deployment.Application\n  summary: Gets whether an uninstalled update is available.\n  remarks: ''\n  example:\n  - \"The following code example inspects UpdateAvailable to determine whether there is an update to install.  \\n  \\n [!code-cs[ClickOnceAPI#6](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#6)]\\n [!code-cpp[ClickOnceAPI#6](~/add/codesnippet/cpp/p-system.deployment.appl_10_1.cpp)]\\n [!code-vb[ClickOnceAPI#6](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#6)]\"\n  syntax:\n    content: public bool UpdateAvailable { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if new version of the application is available; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Deployment.Application.UpdateCheckInfo.UpdateAvailable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes\n  id: UpdateSizeBytes\n  parent: System.Deployment.Application.UpdateCheckInfo\n  langs:\n  - csharp\n  name: UpdateSizeBytes\n  nameWithType: UpdateCheckInfo.UpdateSizeBytes\n  fullName: System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes\n  type: Property\n  assemblies:\n  - System.Deployment\n  namespace: System.Deployment.Application\n  summary: Gets the size of the available update.\n  syntax:\n    content: public long UpdateSizeBytes { get; }\n    return:\n      type: System.Int64\n      description: An <xref:System.Int64> describing the size, in bytes, of the available update. If no update is available, returns 0.\n  overload: System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Deployment.Application.UpdateCheckInfo.AvailableVersion\n  parent: System.Deployment.Application.UpdateCheckInfo\n  isExternal: false\n  name: AvailableVersion\n  nameWithType: UpdateCheckInfo.AvailableVersion\n  fullName: System.Deployment.Application.UpdateCheckInfo.AvailableVersion\n- uid: System.Version\n  parent: System\n  isExternal: true\n  name: Version\n  nameWithType: Version\n  fullName: System.Version\n- uid: System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired\n  parent: System.Deployment.Application.UpdateCheckInfo\n  isExternal: false\n  name: IsUpdateRequired\n  nameWithType: UpdateCheckInfo.IsUpdateRequired\n  fullName: System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion\n  parent: System.Deployment.Application.UpdateCheckInfo\n  isExternal: false\n  name: MinimumRequiredVersion\n  nameWithType: UpdateCheckInfo.MinimumRequiredVersion\n  fullName: System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion\n- uid: System.Deployment.Application.UpdateCheckInfo.UpdateAvailable\n  parent: System.Deployment.Application.UpdateCheckInfo\n  isExternal: false\n  name: UpdateAvailable\n  nameWithType: UpdateCheckInfo.UpdateAvailable\n  fullName: System.Deployment.Application.UpdateCheckInfo.UpdateAvailable\n- uid: System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes\n  parent: System.Deployment.Application.UpdateCheckInfo\n  isExternal: false\n  name: UpdateSizeBytes\n  nameWithType: UpdateCheckInfo.UpdateSizeBytes\n  fullName: System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes\n- uid: System.Int64\n  parent: System\n  isExternal: true\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Deployment.Application.UpdateCheckInfo.AvailableVersion*\n  parent: System.Deployment.Application.UpdateCheckInfo\n  isExternal: false\n  name: AvailableVersion\n  nameWithType: UpdateCheckInfo.AvailableVersion\n- uid: System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired*\n  parent: System.Deployment.Application.UpdateCheckInfo\n  isExternal: false\n  name: IsUpdateRequired\n  nameWithType: UpdateCheckInfo.IsUpdateRequired\n- uid: System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion*\n  parent: System.Deployment.Application.UpdateCheckInfo\n  isExternal: false\n  name: MinimumRequiredVersion\n  nameWithType: UpdateCheckInfo.MinimumRequiredVersion\n- uid: System.Deployment.Application.UpdateCheckInfo.UpdateAvailable*\n  parent: System.Deployment.Application.UpdateCheckInfo\n  isExternal: false\n  name: UpdateAvailable\n  nameWithType: UpdateCheckInfo.UpdateAvailable\n- uid: System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes*\n  parent: System.Deployment.Application.UpdateCheckInfo\n  isExternal: false\n  name: UpdateSizeBytes\n  nameWithType: UpdateCheckInfo.UpdateSizeBytes\n"}