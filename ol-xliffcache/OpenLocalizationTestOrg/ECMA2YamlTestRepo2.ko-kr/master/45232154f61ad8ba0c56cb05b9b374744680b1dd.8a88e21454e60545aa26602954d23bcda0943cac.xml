{"nodes":[{"pos":[1661,1726],"content":"Contains a cache of XML Schema definition language (XSD) schemas.","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains a cache of XML Schema definition language (XSD) schemas.","pos":[0,65]}]},{"pos":[1739,4600],"content":"> [!IMPORTANT] >  -   Do not use schemas from unknown or untrusted sources or locations. Doing so will compromise the security of your code.   > -   XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios.   > -   Schema validation error messages and exceptions may expose sensitive information about the content model or URI paths to the schema file. Be careful not to expose this information to untrusted callers.   > -   Additional security considerations are covered in the \"Security Considerations\" section.       XmlSchemaSet is a cache or library where you can store XML Schema definition language (XSD) schemas. XmlSchemaSet improves performance by caching schemas in memory instead of accessing them from a file or a URL. Each schema is identified by the namespace URI and location that was specified when the schema was added to the set. You use the <xref:System.Xml.XmlReaderSettings.Schemas%2A?displayProperty=fullName> property to assign the XmlSchemaSet object an XML reader should use for data validation.      ## Security Considerations      -   Do not use schemas from unknown or untrusted sources. Doing so will compromise the security of your code. External namespaces or locations referenced in include, import, and redefine elements of a schema are resolved with respect to the base URI of the schema that includes or imports them. For example, if the base URI of the including or importing schema is empty or `null`, the external locations are resolved with respect to the current directory. The <xref:System.Xml.XmlUrlResolver> class is used to resolve external schemas by default. To disable resolution of include, import, and redefine elements of a schema, set the <xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=fullName> property to `null`.      -   The XmlSchemaSet class uses the <xref:System.Text.RegularExpressions.Regex?displayProperty=fullName> class to parse and match regular expressions in an XML schema. Validation of pattern facets with regular expressions in an XML schema may involve increased CPU usage and should be avoided in high availability scenarios.      -   Exceptions raised as a result of using the XmlSchemaSet class, such as the <xref:System.Xml.Schema.XmlSchemaException> class may contain sensitive information that should not be exposed in untrusted scenarios. For example, the <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> property of an <xref:System.Xml.Schema.XmlSchemaException> returns the URI path to the schema file that caused the exception. The <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> property should not be exposed in untrusted scenarios. Exceptions should be properly handled so that this sensitive information is not exposed in untrusted scenarios.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">&gt; [!IMPORTANT]</ph> &gt;  -   Do not use schemas from unknown or untrusted sources or locations.","pos":[0,88],"source":"> [!IMPORTANT] >  -   Do not use schemas from unknown or untrusted sources or locations."},{"content":"Doing so will compromise the security of your code.","pos":[89,140]},{"content":"&gt; -   XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios.","pos":[143,286],"source":"   > -   XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios."},{"content":"&gt; -   Schema validation error messages and exceptions may expose sensitive information about the content model or URI paths to the schema file.","pos":[289,432],"source":"   > -   Schema validation error messages and exceptions may expose sensitive information about the content model or URI paths to the schema file."},{"content":"Be careful not to expose this information to untrusted callers.","pos":[433,496]},{"content":"&gt; -   Additional security considerations are covered in the \"Security Considerations\" section.","pos":[499,593],"source":"   > -   Additional security considerations are covered in the \"Security Considerations\" section."},{"content":"XmlSchemaSet is a cache or library where you can store XML Schema definition language (XSD) schemas.","pos":[600,700]},{"content":"XmlSchemaSet improves performance by caching schemas in memory instead of accessing them from a file or a URL.","pos":[701,811]},{"content":"Each schema is identified by the namespace URI and location that was specified when the schema was added to the set.","pos":[812,928]},{"content":"You use the &lt;xref:System.Xml.XmlReaderSettings.Schemas%2A?displayProperty=fullName&gt; property to assign the XmlSchemaSet object an XML reader should use for data validation.","pos":[929,1101],"source":" You use the <xref:System.Xml.XmlReaderSettings.Schemas%2A?displayProperty=fullName> property to assign the XmlSchemaSet object an XML reader should use for data validation."},{"content":"Security Considerations      -   Do not use schemas from unknown or untrusted sources.","pos":[1110,1196]},{"content":"Doing so will compromise the security of your code.","pos":[1197,1248]},{"content":"External namespaces or locations referenced in include, import, and redefine elements of a schema are resolved with respect to the base URI of the schema that includes or imports them.","pos":[1249,1433]},{"content":"For example, if the base URI of the including or importing schema is empty or <ph id=\"ph1\">`null`</ph>, the external locations are resolved with respect to the current directory.","pos":[1434,1594],"source":" For example, if the base URI of the including or importing schema is empty or `null`, the external locations are resolved with respect to the current directory."},{"content":"The &lt;xref:System.Xml.XmlUrlResolver&gt; class is used to resolve external schemas by default.","pos":[1595,1685],"source":" The <xref:System.Xml.XmlUrlResolver> class is used to resolve external schemas by default."},{"content":"To disable resolution of include, import, and redefine elements of a schema, set the &lt;xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=fullName&gt; property to <ph id=\"ph1\">`null`</ph>.","pos":[1686,1868],"source":" To disable resolution of include, import, and redefine elements of a schema, set the <xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=fullName> property to `null`."},{"content":"-   The XmlSchemaSet class uses the &lt;xref:System.Text.RegularExpressions.Regex?displayProperty=fullName&gt; class to parse and match regular expressions in an XML schema.","pos":[1874,2041],"source":"      -   The XmlSchemaSet class uses the <xref:System.Text.RegularExpressions.Regex?displayProperty=fullName> class to parse and match regular expressions in an XML schema."},{"content":"Validation of pattern facets with regular expressions in an XML schema may involve increased CPU usage and should be avoided in high availability scenarios.","pos":[2042,2198]},{"content":"-   Exceptions raised as a result of using the XmlSchemaSet class, such as the &lt;xref:System.Xml.Schema.XmlSchemaException&gt; class may contain sensitive information that should not be exposed in untrusted scenarios.","pos":[2204,2417],"source":"      -   Exceptions raised as a result of using the XmlSchemaSet class, such as the <xref:System.Xml.Schema.XmlSchemaException> class may contain sensitive information that should not be exposed in untrusted scenarios."},{"content":"For example, the &lt;xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A&gt; property of an &lt;xref:System.Xml.Schema.XmlSchemaException&gt; returns the URI path to the schema file that caused the exception.","pos":[2418,2617],"source":" For example, the <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> property of an <xref:System.Xml.Schema.XmlSchemaException> returns the URI path to the schema file that caused the exception."},{"content":"The &lt;xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A&gt; property should not be exposed in untrusted scenarios.","pos":[2618,2733],"source":" The <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> property should not be exposed in untrusted scenarios."},{"content":"Exceptions should be properly handled so that this sensitive information is not exposed in untrusted scenarios.","pos":[2734,2845]}]},{"pos":[6397,6489],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> class."},{"pos":[7067,7209],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified &lt;xref:System.Xml.XmlNameTable&gt;.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> class with the specified <xref:System.Xml.XmlNameTable>."},{"pos":[7381,7430],"content":"The <xref:System.Xml.XmlNameTable> object to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Xml.XmlNameTable&gt; object to use.","pos":[0,49],"source":"The <xref:System.Xml.XmlNameTable> object to use."}]},{"pos":[7597,7725],"content":"The &lt;xref:System.Xml.XmlNameTable&gt; object passed as a parameter is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Xml.XmlNameTable> object passed as a parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[8131,8240],"content":"Adds the given &lt;xref:System.Xml.Schema.XmlSchema&gt; to the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Adds the given <xref:System.Xml.Schema.XmlSchema> to the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[8253,8513],"content":"If the <xref:System.Xml.Schema.XmlSchema> object already exists in the <xref:System.Xml.Schema.XmlSchemaSet>, the Add method does nothing.       The functionality of this method is identical to that of the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the <xref:System.Xml.Schema.XmlSchema> object already exists in the <xref:System.Xml.Schema.XmlSchemaSet>, the Add method does nothing.       The functionality of this method is identical to that of the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.","pos":[0,258],"nodes":[{"content":"If the &lt;xref:System.Xml.Schema.XmlSchema&gt; object already exists in the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;, the Add method does nothing.","pos":[0,138],"source":"If the <xref:System.Xml.Schema.XmlSchema> object already exists in the <xref:System.Xml.Schema.XmlSchemaSet>, the Add method does nothing."},{"content":"The functionality of this method is identical to that of the &lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt; method.","pos":[145,258],"source":"       The functionality of this method is identical to that of the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method."}]}]},{"pos":[8707,8819],"content":"The &lt;xref:System.Xml.Schema.XmlSchema&gt; object to add to the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Xml.Schema.XmlSchema> object to add to the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[8891,9277],"content":"An <xref:System.Xml.Schema.XmlSchema> object if the schema is valid. If the schema is not valid and a <xref href=\"System.Xml.Schema.ValidationEventHandler\"></xref> is specified, then <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned and the appropriate validation event is raised. Otherwise, an <xref href=\"System.Xml.Schema.XmlSchemaException\"></xref> is thrown.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Xml.Schema.XmlSchema&gt; object if the schema is valid.","pos":[0,68],"source":"An <xref:System.Xml.Schema.XmlSchema> object if the schema is valid."},{"content":"If the schema is not valid and a <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.ValidationEventHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is specified, then <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is returned and the appropriate validation event is raised.","pos":[69,303],"source":" If the schema is not valid and a <xref href=\"System.Xml.Schema.ValidationEventHandler\"></xref> is specified, then <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned and the appropriate validation event is raised."},{"content":"Otherwise, an <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is thrown.","pos":[304,386],"source":" Otherwise, an <xref href=\"System.Xml.Schema.XmlSchemaException\"></xref> is thrown."}]},{"pos":[9458,9482],"content":"The schema is not valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The schema is not valid.","pos":[0,24]}]},{"pos":[9585,9717],"content":"The &lt;xref:System.Xml.Schema.XmlSchema&gt; object passed as a parameter is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Xml.Schema.XmlSchema> object passed as a parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[10138,10320],"content":"Adds all the XML Schema definition language (XSD) schemas in the given <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to the <bpt id=\"p2\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Adds all the XML Schema definition language (XSD) schemas in the given <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> to the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[10333,12502],"content":"Before a schema can be added to an <xref:System.Xml.Schema.XmlSchemaSet>, it has to be successfully preprocessed. Preprocessing performs the following basic tasks.      1.  The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.      2.  References to internal and external schema components are resolved. Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>. Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects, and included schemas are made a part of the including <xref:System.Xml.Schema.XmlSchema>.       If the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property of the <xref:System.Xml.Schema.XmlSchemaSet> to add is `true`, all schemas in the <xref:System.Xml.Schema.XmlSchemaSet> to add are added to the <xref:System.Xml.Schema.XmlSchemaSet>. If the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property of the <xref:System.Xml.Schema.XmlSchemaSet> to add is `false`, each schema added is preprocessed before being added. If any of the schemas in the newly added <xref:System.Xml.Schema.XmlSchemaSet> fails to be preprocessed, no schemas are added; instead, an <xref:System.Xml.Schema.XmlSchemaException> is thrown. As a result, the following two code example are not equivalent.      ```vb#   ' First example   schemaSet.Add(schemaSet1)      ' Second example   Dim schema As XmlSchema      For Each schema in schemaSet.Schemas()          schemaSet.Add(schema)      Next   ```      ```c#   // First example   schemaSet.Add(schemaSet1);      // Second example   foreach(XmlSchema schema in schemaSet.Schemas())   {       schemaSet.Add(schema);   }   ```       The previous two code examples are not equivalent. In the first example, if an invalid schema exists in `schemaSet1` and its <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to `false`, no schemas are added to `schemaSet`. In the second example, a number of schemas can be added to `schemaSet` before an invalid schema is encountered and an exception is thrown.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Before a schema can be added to an &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;, it has to be successfully preprocessed.","pos":[0,113],"source":"Before a schema can be added to an <xref:System.Xml.Schema.XmlSchemaSet>, it has to be successfully preprocessed."},{"content":"Preprocessing performs the following basic tasks.","pos":[114,163]},{"content":"1.","pos":[169,171]},{"content":"The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.","pos":[173,299]},{"content":"2.","pos":[305,307]},{"content":"References to internal and external schema components are resolved.","pos":[309,376]},{"content":"Any imported or included schemas that are successfully retrieved are also added to the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.","pos":[377,502],"source":" Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>."},{"content":"Imported schemas are added as separate &lt;xref:System.Xml.Schema.XmlSchema&gt; objects, and included schemas are made a part of the including &lt;xref:System.Xml.Schema.XmlSchema&gt;.","pos":[503,675],"source":" Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects, and included schemas are made a part of the including <xref:System.Xml.Schema.XmlSchema>."},{"content":"If the &lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt; property of the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; to add is <ph id=\"ph1\">`true`</ph>, all schemas in the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; to add are added to the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.","pos":[682,932],"source":"       If the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property of the <xref:System.Xml.Schema.XmlSchemaSet> to add is `true`, all schemas in the <xref:System.Xml.Schema.XmlSchemaSet> to add are added to the <xref:System.Xml.Schema.XmlSchemaSet>."},{"content":"If the &lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt; property of the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; to add is <ph id=\"ph1\">`false`</ph>, each schema added is preprocessed before being added.","pos":[933,1118],"source":" If the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property of the <xref:System.Xml.Schema.XmlSchemaSet> to add is `false`, each schema added is preprocessed before being added."},{"content":"If any of the schemas in the newly added &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; fails to be preprocessed, no schemas are added; instead, an &lt;xref:System.Xml.Schema.XmlSchemaException&gt; is thrown.","pos":[1119,1312],"source":" If any of the schemas in the newly added <xref:System.Xml.Schema.XmlSchemaSet> fails to be preprocessed, no schemas are added; instead, an <xref:System.Xml.Schema.XmlSchemaException> is thrown."},{"content":"As a result, the following two code example are not equivalent.","pos":[1313,1376]},{"content":"<ph id=\"ph1\">```vb#   ' First example   schemaSet.Add(schemaSet1)      ' Second example   Dim schema As XmlSchema      For Each schema in schemaSet.Schemas()          schemaSet.Add(schema)      Next   ```</ph>      <ph id=\"ph2\">```c#   // First example   schemaSet.Add(schemaSet1);      // Second example   foreach(XmlSchema schema in schemaSet.Schemas())   {       schemaSet.Add(schema);   }   ```</ph>       The previous two code examples are not equivalent.","pos":[1382,1806],"source":"```vb#   ' First example   schemaSet.Add(schemaSet1)      ' Second example   Dim schema As XmlSchema      For Each schema in schemaSet.Schemas()          schemaSet.Add(schema)      Next   ```      ```c#   // First example   schemaSet.Add(schemaSet1);      // Second example   foreach(XmlSchema schema in schemaSet.Schemas())   {       schemaSet.Add(schema);   }   ```       The previous two code examples are not equivalent."},{"content":"In the first example, if an invalid schema exists in <ph id=\"ph1\">`schemaSet1`</ph> and its &lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt; property is set to <ph id=\"ph2\">`false`</ph>, no schemas are added to <ph id=\"ph3\">`schemaSet`</ph>.","pos":[1807,1997],"source":" In the first example, if an invalid schema exists in `schemaSet1` and its <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to `false`, no schemas are added to `schemaSet`."},{"content":"In the second example, a number of schemas can be added to <ph id=\"ph1\">`schemaSet`</ph> before an invalid schema is encountered and an exception is thrown.","pos":[1998,2136],"source":" In the second example, a number of schemas can be added to `schemaSet` before an invalid schema is encountered and an exception is thrown."}]},{"pos":[13781,13844],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> object."},{"pos":[14025,14106],"content":"A schema in the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is not valid.","needQuote":true,"needEscape":true,"source":"A schema in the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> is not valid."},{"pos":[14209,14358],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object passed as a parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> object passed as a parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[14776,14909],"content":"Adds the XML Schema definition language (XSD) schema at the URL specified to the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Adds the XML Schema definition language (XSD) schema at the URL specified to the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[14922,19770],"content":"Before a schema can be added to an <xref:System.Xml.Schema.XmlSchemaSet>, it has to be successfully preprocessed. Preprocessing performs the following basic tasks.      1.  The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.      2.  References to internal and external schema components are resolved. Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>. Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects, and included schemas are made a part of the including <xref:System.Xml.Schema.XmlSchema>.       The following are important notes to consider when using the Add method.      -   Adding a schema to the <xref:System.Xml.Schema.XmlSchemaSet> with the same target namespace and schema location URL as a schema already contained within the <xref:System.Xml.Schema.XmlSchemaSet> will return the original schema object.      -   When a new schema is successfully added to an <xref:System.Xml.Schema.XmlSchemaSet>, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property of the <xref:System.Xml.Schema.XmlSchemaSet> is set to `false`.      -   Any include or import elements encountered in an XML schema are resolved when the Add method is called. Failure to resolve include and import elements results in a schema validation warning and if no <xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler> has been specified for the <xref:System.Xml.Schema.XmlSchemaSet> object, these warning will not be reported.      -   If a schema with the same target namespace as a schema that already exists in the <xref:System.Xml.Schema.XmlSchemaSet> is added to the <xref:System.Xml.Schema.XmlSchemaSet>, both schemas are added.          > [!NOTE]     >  This behavior differs from the obsolete <xref:System.Xml.Schema.XmlSchemaCollection> object.      -   The Add method of the <xref:System.Xml.Schema.XmlSchemaSet> has the ability to use the target namespace defined in a schema, rather than requiring the target namespace be specified as a parameter when the Add method is called. Specifying `null` in the `targetNamespace` parameter of the Add method instructs the <xref:System.Xml.Schema.XmlSchemaSet> to use the target namespace defined in the schema, as illustrated in the following code example.      ```vb#   Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()   schemaSet.Add(Nothing, \"books.xsd\")      Dim schema As XmlSchema   For Each schema In schemaSet.Schemas(\"http://www.contoso.com/books\")       schema.Write(Console.Out)   Next   ```      ```c#   XmlSchemaSet schemaSet = new XmlSchemaSet();   schemaSet.Add(null, \"books.xsd\");      foreach(XmlSchema schema in schemaSet.Schemas(\"http://www.contoso.com/books\"))   {       schema.Write(Console.Out);   }   ```       In the code example above, `null` is specified as the `targetNamespace` parameter to the Add method. As a result, the `targetNamespace` defined in the books.xml file is used. In this case, the result of calling the Add method would be identical if http://www.contoso.com/books had been specified as the `targetNamespace` parameter.      -   W3C XML Schema allows schemas without a target namespace to be included in schemas with a target namespace defined. In this case, the schema without a target namespace defined is coerced into the target namespace of the including schema. The included schema is treated as if it had that target namespace defined. Similarly, schemas without a target namespace can be added to the <xref:System.Xml.Schema.XmlSchemaSet> and coerced into the target namespace specified by the Add method, as illustrated in the following example.      ```   <xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">       <xs:element name=\"A\" type=\"xs:string\" />   </xs:schema>   ```       If the schema above is added to the <xref:System.Xml.Schema.XmlSchemaSet> with the target namespace http://www.contoso.com/new/targetnamespace (as shown in the code below), it is treated as if the target namespace declared in the schema was `http://www.contoso.com/new/targetnamespace`.      ```vb#   Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()   schemaSet.Add(\"http://www.contoso.com/new/targetnamespace\", \"http://www.contoso.com/targetnamespace.xsd\")      Dim schema As XmlSchema      For Each schema in schemaSet.Schemas()          Console.WriteLine(schema.TargetNamespace)         Next   ```      ```c#   XmlSchemaSet schemaSet = new XmlSchemaSet();   schemaSet.Add(\"http://www.contoso.com/new/targetnamespace\", \"http://www.contoso.com/targetnamespace.xsd\");   foreach(XmlSchema schema in schemaSet.Schemas())   {       Console.WriteLine(schema.TargetNamespace);   }   ```","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Before a schema can be added to an &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;, it has to be successfully preprocessed.","pos":[0,113],"source":"Before a schema can be added to an <xref:System.Xml.Schema.XmlSchemaSet>, it has to be successfully preprocessed."},{"content":"Preprocessing performs the following basic tasks.","pos":[114,163]},{"content":"1.","pos":[169,171]},{"content":"The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.","pos":[173,299]},{"content":"2.","pos":[305,307]},{"content":"References to internal and external schema components are resolved.","pos":[309,376]},{"content":"Any imported or included schemas that are successfully retrieved are also added to the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.","pos":[377,502],"source":" Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>."},{"content":"Imported schemas are added as separate &lt;xref:System.Xml.Schema.XmlSchema&gt; objects, and included schemas are made a part of the including &lt;xref:System.Xml.Schema.XmlSchema&gt;.","pos":[503,675],"source":" Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects, and included schemas are made a part of the including <xref:System.Xml.Schema.XmlSchema>."},{"content":"The following are important notes to consider when using the Add method.","pos":[682,754]},{"content":"-   Adding a schema to the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; with the same target namespace and schema location URL as a schema already contained within the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; will return the original schema object.","pos":[760,998],"source":"      -   Adding a schema to the <xref:System.Xml.Schema.XmlSchemaSet> with the same target namespace and schema location URL as a schema already contained within the <xref:System.Xml.Schema.XmlSchemaSet> will return the original schema object."},{"content":"-   When a new schema is successfully added to an &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;, the &lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt; property of the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; is set to <ph id=\"ph1\">`false`</ph>.","pos":[1004,1221],"source":"      -   When a new schema is successfully added to an <xref:System.Xml.Schema.XmlSchemaSet>, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property of the <xref:System.Xml.Schema.XmlSchemaSet> is set to `false`."},{"content":"-   Any include or import elements encountered in an XML schema are resolved when the Add method is called.","pos":[1227,1334]},{"content":"Failure to resolve include and import elements results in a schema validation warning and if no &lt;xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler&gt; has been specified for the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; object, these warning will not be reported.","pos":[1335,1600],"source":" Failure to resolve include and import elements results in a schema validation warning and if no <xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler> has been specified for the <xref:System.Xml.Schema.XmlSchemaSet> object, these warning will not be reported."},{"content":"-   If a schema with the same target namespace as a schema that already exists in the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; is added to the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;, both schemas are added.","pos":[1606,1808],"source":"      -   If a schema with the same target namespace as a schema that already exists in the <xref:System.Xml.Schema.XmlSchemaSet> is added to the <xref:System.Xml.Schema.XmlSchemaSet>, both schemas are added."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph>     &gt;  This behavior differs from the obsolete &lt;xref:System.Xml.Schema.XmlSchemaCollection&gt; object.","pos":[1818,1927],"source":"          > [!NOTE]     >  This behavior differs from the obsolete <xref:System.Xml.Schema.XmlSchemaCollection> object."},{"content":"-   The Add method of the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; has the ability to use the target namespace defined in a schema, rather than requiring the target namespace be specified as a parameter when the Add method is called.","pos":[1933,2163],"source":"      -   The Add method of the <xref:System.Xml.Schema.XmlSchemaSet> has the ability to use the target namespace defined in a schema, rather than requiring the target namespace be specified as a parameter when the Add method is called."},{"content":"Specifying <ph id=\"ph1\">`null`</ph> in the <ph id=\"ph2\">`targetNamespace`</ph> parameter of the Add method instructs the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; to use the target namespace defined in the schema, as illustrated in the following code example.","pos":[2164,2383],"source":" Specifying `null` in the `targetNamespace` parameter of the Add method instructs the <xref:System.Xml.Schema.XmlSchemaSet> to use the target namespace defined in the schema, as illustrated in the following code example."},{"content":"<ph id=\"ph1\">```vb#   Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()   schemaSet.Add(Nothing, \"books.xsd\")      Dim schema As XmlSchema   For Each schema In schemaSet.Schemas(\"http://www.contoso.com/books\")       schema.Write(Console.Out)   Next   ```</ph>      <ph id=\"ph2\">```c#   XmlSchemaSet schemaSet = new XmlSchemaSet();   schemaSet.Add(null, \"books.xsd\");      foreach(XmlSchema schema in schemaSet.Schemas(\"http://www.contoso.com/books\"))   {       schema.Write(Console.Out);   }   ```</ph>       In the code example above, <ph id=\"ph3\">`null`</ph> is specified as the <ph id=\"ph4\">`targetNamespace`</ph> parameter to the Add method.","pos":[2389,2963],"source":"```vb#   Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()   schemaSet.Add(Nothing, \"books.xsd\")      Dim schema As XmlSchema   For Each schema In schemaSet.Schemas(\"http://www.contoso.com/books\")       schema.Write(Console.Out)   Next   ```      ```c#   XmlSchemaSet schemaSet = new XmlSchemaSet();   schemaSet.Add(null, \"books.xsd\");      foreach(XmlSchema schema in schemaSet.Schemas(\"http://www.contoso.com/books\"))   {       schema.Write(Console.Out);   }   ```       In the code example above, `null` is specified as the `targetNamespace` parameter to the Add method."},{"content":"As a result, the <ph id=\"ph1\">`targetNamespace`</ph> defined in the books.xml file is used.","pos":[2964,3037],"source":" As a result, the `targetNamespace` defined in the books.xml file is used."},{"content":"In this case, the result of calling the Add method would be identical if http://www.contoso.com/books had been specified as the <ph id=\"ph1\">`targetNamespace`</ph> parameter.","pos":[3038,3194],"source":" In this case, the result of calling the Add method would be identical if http://www.contoso.com/books had been specified as the `targetNamespace` parameter."},{"content":"-   W3C XML Schema allows schemas without a target namespace to be included in schemas with a target namespace defined.","pos":[3200,3319]},{"content":"In this case, the schema without a target namespace defined is coerced into the target namespace of the including schema.","pos":[3320,3441]},{"content":"The included schema is treated as if it had that target namespace defined.","pos":[3442,3516]},{"content":"Similarly, schemas without a target namespace can be added to the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; and coerced into the target namespace specified by the Add method, as illustrated in the following example.","pos":[3517,3728],"source":" Similarly, schemas without a target namespace can be added to the <xref:System.Xml.Schema.XmlSchemaSet> and coerced into the target namespace specified by the Add method, as illustrated in the following example."},{"content":"<ph id=\"ph1\">```   &lt;xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"&gt;       &lt;xs:element name=\"A\" type=\"xs:string\" /&gt;   &lt;/xs:schema&gt;   ```</ph>       If the schema above is added to the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; with the target namespace http://www.contoso.com/new/targetnamespace (as shown in the code below), it is treated as if the target namespace declared in the schema was <ph id=\"ph2\">`http://www.contoso.com/new/targetnamespace`</ph>.","pos":[3734,4156],"source":"```   <xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">       <xs:element name=\"A\" type=\"xs:string\" />   </xs:schema>   ```       If the schema above is added to the <xref:System.Xml.Schema.XmlSchemaSet> with the target namespace http://www.contoso.com/new/targetnamespace (as shown in the code below), it is treated as if the target namespace declared in the schema was `http://www.contoso.com/new/targetnamespace`."},{"content":"<ph id=\"ph1\">```vb#   Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()   schemaSet.Add(\"http://www.contoso.com/new/targetnamespace\", \"http://www.contoso.com/targetnamespace.xsd\")      Dim schema As XmlSchema      For Each schema in schemaSet.Schemas()          Console.WriteLine(schema.TargetNamespace)         Next   ```</ph>      <ph id=\"ph2\">```c#   XmlSchemaSet schemaSet = new XmlSchemaSet();   schemaSet.Add(\"http://www.contoso.com/new/targetnamespace\", \"http://www.contoso.com/targetnamespace.xsd\");   foreach(XmlSchema schema in schemaSet.Schemas())   {       Console.WriteLine(schema.TargetNamespace);   }   ```</ph>","pos":[4162,4753],"source":"```vb#   Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()   schemaSet.Add(\"http://www.contoso.com/new/targetnamespace\", \"http://www.contoso.com/targetnamespace.xsd\")      Dim schema As XmlSchema      For Each schema in schemaSet.Schemas()          Console.WriteLine(schema.TargetNamespace)         Next   ```      ```c#   XmlSchemaSet schemaSet = new XmlSchemaSet();   schemaSet.Add(\"http://www.contoso.com/new/targetnamespace\", \"http://www.contoso.com/targetnamespace.xsd\");   foreach(XmlSchema schema in schemaSet.Schemas())   {       Console.WriteLine(schema.TargetNamespace);   }   ```"}]},{"pos":[20645,20801],"content":"The schema <ph id=\"ph1\">`targetNamespace`</ph> property, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use the <ph id=\"ph2\">`targetNamespace`</ph> specified in the schema.","needQuote":true,"needEscape":true,"source":"The schema `targetNamespace` property, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> to use the `targetNamespace` specified in the schema."},{"pos":[20867,20909],"content":"The URL that specifies the schema to load.","needQuote":true,"needEscape":true,"nodes":[{"content":"The URL that specifies the schema to load.","pos":[0,42]}]},{"pos":[20981,21367],"content":"An <xref:System.Xml.Schema.XmlSchema> object if the schema is valid. If the schema is not valid and a <xref href=\"System.Xml.Schema.ValidationEventHandler\"></xref> is specified, then <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned and the appropriate validation event is raised. Otherwise, an <xref href=\"System.Xml.Schema.XmlSchemaException\"></xref> is thrown.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Xml.Schema.XmlSchema&gt; object if the schema is valid.","pos":[0,68],"source":"An <xref:System.Xml.Schema.XmlSchema> object if the schema is valid."},{"content":"If the schema is not valid and a <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.ValidationEventHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is specified, then <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is returned and the appropriate validation event is raised.","pos":[69,303],"source":" If the schema is not valid and a <xref href=\"System.Xml.Schema.ValidationEventHandler\"></xref> is specified, then <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned and the appropriate validation event is raised."},{"content":"Otherwise, an <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is thrown.","pos":[304,386],"source":" Otherwise, an <xref href=\"System.Xml.Schema.XmlSchemaException\"></xref> is thrown."}]},{"pos":[21548,21572],"content":"The schema is not valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The schema is not valid.","pos":[0,24]}]},{"pos":[21675,21799],"content":"The URL passed as a parameter is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or &lt;xref:System.String.Empty&gt;.","needQuote":true,"needEscape":true,"source":"The URL passed as a parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or <xref:System.String.Empty>."},{"pos":[22240,22397],"content":"Adds the XML Schema definition language (XSD) schema contained in the &lt;xref:System.Xml.XmlReader&gt; to the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Adds the XML Schema definition language (XSD) schema contained in the <xref:System.Xml.XmlReader> to the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[22410,25134],"content":"Before a schema can be added to an <xref:System.Xml.Schema.XmlSchemaSet>, it has to be successfully preprocessed. Preprocessing performs the following basic tasks.      1.  The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.      2.  References to internal and external schema components are resolved. Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>. Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects, and included schemas are made a part of the including <xref:System.Xml.Schema.XmlSchema>.       The following are important notes to consider when using the Add method.      -   Successfully retrieved schemas imported or included by the schemas contained in the <xref:System.Xml.XmlReader> are also added to the <xref:System.Xml.Schema.XmlSchemaSet>.      -   If the <xref:System.Xml.XmlReader> is not positioned on the root element, an <xref:System.Xml.Schema.XmlSchemaException> is thrown unless the current item is an element. If the current item is an `xs:schema` element, the schema document is read into the <xref:System.Xml.Schema.XmlSchemaSet>; otherwise, an <xref:System.Xml.Schema.XmlSchemaException> is thrown because the schema is not valid.      -   If the <xref:System.Xml.XmlReader> is positioned over a sequence of XML nodes, only the first node in the sequence is added.      -   If the schema was created from a <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method call, the value of the <xref:System.Xml.Schema.XmlSchemaValidationFlags> property is ignored, because inline schema processing is not applied for W3C XML Schema documents.      -   The <xref:System.Xml.XmlResolver> property of the <xref:System.Xml.XmlReader> is not used to resolve references to namespaces or schema locations in include and import elements. Instead, the <xref:System.Xml.XmlResolver> property of the <xref:System.Xml.Schema.XmlSchemaSet> is used.      -   The Add method of the <xref:System.Xml.Schema.XmlSchemaSet> has the ability to use the target namespace defined in a schema, rather than requiring the target namespace be specified as a parameter when the Add method is called. Specifying `null` or <xref:System.String.Empty?displayProperty=fullName> to the Add method instructs the <xref:System.Xml.Schema.XmlSchemaSet> to use the target namespace defined in the schema. For an example of this behavior, see the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.       The remaining functionality of this method is identical to that of the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Before a schema can be added to an &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;, it has to be successfully preprocessed.","pos":[0,113],"source":"Before a schema can be added to an <xref:System.Xml.Schema.XmlSchemaSet>, it has to be successfully preprocessed."},{"content":"Preprocessing performs the following basic tasks.","pos":[114,163]},{"content":"1.","pos":[169,171]},{"content":"The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.","pos":[173,299]},{"content":"2.","pos":[305,307]},{"content":"References to internal and external schema components are resolved.","pos":[309,376]},{"content":"Any imported or included schemas that are successfully retrieved are also added to the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.","pos":[377,502],"source":" Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>."},{"content":"Imported schemas are added as separate &lt;xref:System.Xml.Schema.XmlSchema&gt; objects, and included schemas are made a part of the including &lt;xref:System.Xml.Schema.XmlSchema&gt;.","pos":[503,675],"source":" Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects, and included schemas are made a part of the including <xref:System.Xml.Schema.XmlSchema>."},{"content":"The following are important notes to consider when using the Add method.","pos":[682,754]},{"content":"-   Successfully retrieved schemas imported or included by the schemas contained in the &lt;xref:System.Xml.XmlReader&gt; are also added to the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.","pos":[760,936],"source":"      -   Successfully retrieved schemas imported or included by the schemas contained in the <xref:System.Xml.XmlReader> are also added to the <xref:System.Xml.Schema.XmlSchemaSet>."},{"content":"-   If the &lt;xref:System.Xml.XmlReader&gt; is not positioned on the root element, an &lt;xref:System.Xml.Schema.XmlSchemaException&gt; is thrown unless the current item is an element.","pos":[942,1115],"source":"      -   If the <xref:System.Xml.XmlReader> is not positioned on the root element, an <xref:System.Xml.Schema.XmlSchemaException> is thrown unless the current item is an element."},{"content":"If the current item is an <ph id=\"ph1\">`xs:schema`</ph> element, the schema document is read into the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;; otherwise, an &lt;xref:System.Xml.Schema.XmlSchemaException&gt; is thrown because the schema is not valid.","pos":[1116,1339],"source":" If the current item is an `xs:schema` element, the schema document is read into the <xref:System.Xml.Schema.XmlSchemaSet>; otherwise, an <xref:System.Xml.Schema.XmlSchemaException> is thrown because the schema is not valid."},{"content":"-   If the &lt;xref:System.Xml.XmlReader&gt; is positioned over a sequence of XML nodes, only the first node in the sequence is added.","pos":[1345,1473],"source":"      -   If the <xref:System.Xml.XmlReader> is positioned over a sequence of XML nodes, only the first node in the sequence is added."},{"content":"-   If the schema was created from a &lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName&gt; method call, the value of the &lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; property is ignored, because inline schema processing is not applied for W3C XML Schema documents.","pos":[1479,1757],"source":"      -   If the schema was created from a <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method call, the value of the <xref:System.Xml.Schema.XmlSchemaValidationFlags> property is ignored, because inline schema processing is not applied for W3C XML Schema documents."},{"content":"-   The &lt;xref:System.Xml.XmlResolver&gt; property of the &lt;xref:System.Xml.XmlReader&gt; is not used to resolve references to namespaces or schema locations in include and import elements.","pos":[1763,1944],"source":"      -   The <xref:System.Xml.XmlResolver> property of the <xref:System.Xml.XmlReader> is not used to resolve references to namespaces or schema locations in include and import elements."},{"content":"Instead, the &lt;xref:System.Xml.XmlResolver&gt; property of the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; is used.","pos":[1945,2050],"source":" Instead, the <xref:System.Xml.XmlResolver> property of the <xref:System.Xml.Schema.XmlSchemaSet> is used."},{"content":"-   The Add method of the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; has the ability to use the target namespace defined in a schema, rather than requiring the target namespace be specified as a parameter when the Add method is called.","pos":[2056,2286],"source":"      -   The Add method of the <xref:System.Xml.Schema.XmlSchemaSet> has the ability to use the target namespace defined in a schema, rather than requiring the target namespace be specified as a parameter when the Add method is called."},{"content":"Specifying <ph id=\"ph1\">`null`</ph> or &lt;xref:System.String.Empty?displayProperty=fullName&gt; to the Add method instructs the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; to use the target namespace defined in the schema.","pos":[2287,2480],"source":" Specifying `null` or <xref:System.String.Empty?displayProperty=fullName> to the Add method instructs the <xref:System.Xml.Schema.XmlSchemaSet> to use the target namespace defined in the schema."},{"content":"For an example of this behavior, see the &lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt; method.","pos":[2481,2574],"source":" For an example of this behavior, see the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method."},{"content":"The remaining functionality of this method is identical to that of the &lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt; method.","pos":[2581,2704],"source":"       The remaining functionality of this method is identical to that of the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method."}]},{"pos":[25881,26037],"content":"The schema <ph id=\"ph1\">`targetNamespace`</ph> property, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use the <ph id=\"ph2\">`targetNamespace`</ph> specified in the schema.","needQuote":true,"needEscape":true,"source":"The schema `targetNamespace` property, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> to use the `targetNamespace` specified in the schema."},{"pos":[26115,26154],"content":"The <xref:System.Xml.XmlReader> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Xml.XmlReader&gt; object.","pos":[0,39],"source":"The <xref:System.Xml.XmlReader> object."}]},{"pos":[26226,26612],"content":"An <xref:System.Xml.Schema.XmlSchema> object if the schema is valid. If the schema is not valid and a <xref href=\"System.Xml.Schema.ValidationEventHandler\"></xref> is specified, then <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned and the appropriate validation event is raised. Otherwise, an <xref href=\"System.Xml.Schema.XmlSchemaException\"></xref> is thrown.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Xml.Schema.XmlSchema&gt; object if the schema is valid.","pos":[0,68],"source":"An <xref:System.Xml.Schema.XmlSchema> object if the schema is valid."},{"content":"If the schema is not valid and a <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.ValidationEventHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is specified, then <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is returned and the appropriate validation event is raised.","pos":[69,303],"source":" If the schema is not valid and a <xref href=\"System.Xml.Schema.ValidationEventHandler\"></xref> is specified, then <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned and the appropriate validation event is raised."},{"content":"Otherwise, an <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is thrown.","pos":[304,386],"source":" Otherwise, an <xref href=\"System.Xml.Schema.XmlSchemaException\"></xref> is thrown."}]},{"pos":[26793,26817],"content":"The schema is not valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The schema is not valid.","pos":[0,24]}]},{"pos":[26920,27045],"content":"The &lt;xref:System.Xml.XmlReader&gt; object passed as a parameter is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Xml.XmlReader> object passed as a parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[27442,27587],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaCompilationSettings\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the <bpt id=\"p2\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Xml.Schema.XmlSchemaCompilationSettings\"></xref> for the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[27599,27921],"content":"The <xref:System.Xml.Schema.XmlSchemaCompilationSettings> class specifies Unique Particle Attribution (UPA) validation options for the <xref:System.Xml.Schema.XmlSchemaSet>. For more information about enabling UPA validation checks, see the <xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck%2A> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.Xml.Schema.XmlSchemaCompilationSettings> class specifies Unique Particle Attribution (UPA) validation options for the <xref:System.Xml.Schema.XmlSchemaSet>. For more information about enabling UPA validation checks, see the <xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck%2A> property.","pos":[0,322],"nodes":[{"content":"The &lt;xref:System.Xml.Schema.XmlSchemaCompilationSettings&gt; class specifies Unique Particle Attribution (UPA) validation options for the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.","pos":[0,173],"source":"The <xref:System.Xml.Schema.XmlSchemaCompilationSettings> class specifies Unique Particle Attribution (UPA) validation options for the <xref:System.Xml.Schema.XmlSchemaSet>."},{"content":"For more information about enabling UPA validation checks, see the &lt;xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck%2A&gt; property.","pos":[174,322],"source":" For more information about enabling UPA validation checks, see the <xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck%2A> property."}]}]},{"pos":[28123,28507],"content":"The <xref href=\"System.Xml.Schema.XmlSchemaCompilationSettings\"></xref> for the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>. The default is an <xref href=\"System.Xml.Schema.XmlSchemaCompilationSettings\"></xref> instance with the <xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck*> property set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaCompilationSettings\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the <bpt id=\"p2\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,132],"source":"The <xref href=\"System.Xml.Schema.XmlSchemaCompilationSettings\"></xref> for the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"content":"The default is an <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaCompilationSettings\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance with the &lt;xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck*&gt; property set to <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[133,384],"source":" The default is an <xref href=\"System.Xml.Schema.XmlSchemaCompilationSettings\"></xref> instance with the <xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck*> property set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[28929,29076],"content":"Compiles the XML Schema definition language (XSD) schemas added to the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> into one logical schema.","needQuote":true,"needEscape":true,"source":"Compiles the XML Schema definition language (XSD) schemas added to the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> into one logical schema."},{"pos":[29089,30877],"content":"This method is called automatically when validation is needed and the <xref:System.Xml.Schema.XmlSchemaSet> has not been previously compiled—for example, when an <xref:System.Xml.Schema.XmlSchemaSet> is used as an input to create an <xref:System.Xml.XmlReader> object in the <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> property of an <xref:System.Xml.XmlReaderSettings> object. If the <xref:System.Xml.Schema.XmlSchemaSet> is already in the compiled state, this method will not recompile the schemas. If this method executes successfully, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to `true`.       Schemas that have been previously compiled by an <xref:System.Xml.Schema.XmlSchemaSet> are not recompiled. However, schemas that were compiled using the Compile method of the <xref:System.Xml.Schema.XmlSchema> will be recompiled.      > [!NOTE] >  You need to call the <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method if you have changed a schema (or one of its includes/imports) after adding it to the <xref:System.Xml.Schema.XmlSchemaSet>. The <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method will check the schema for structural validity according to the rules of W3C XML Schema. However, it will not perform a full validation check. It will also resolve references to internal and external schema components. Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>. Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects while included schemas are made part of the including <xref:System.Xml.Schema.XmlSchema>. If the call to reprocess is successful, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to false.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is called automatically when validation is needed and the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; has not been previously compiled—for example, when an &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; is used as an input to create an &lt;xref:System.Xml.XmlReader&gt; object in the &lt;xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt; property of an &lt;xref:System.Xml.XmlReaderSettings&gt; object.","pos":[0,382],"source":"This method is called automatically when validation is needed and the <xref:System.Xml.Schema.XmlSchemaSet> has not been previously compiled—for example, when an <xref:System.Xml.Schema.XmlSchemaSet> is used as an input to create an <xref:System.Xml.XmlReader> object in the <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> property of an <xref:System.Xml.XmlReaderSettings> object."},{"content":"If the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; is already in the compiled state, this method will not recompile the schemas.","pos":[383,505],"source":" If the <xref:System.Xml.Schema.XmlSchemaSet> is already in the compiled state, this method will not recompile the schemas."},{"content":"If this method executes successfully, the &lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt; property is set to <ph id=\"ph1\">`true`</ph>.","pos":[506,626],"source":" If this method executes successfully, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to `true`."},{"content":"Schemas that have been previously compiled by an &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; are not recompiled.","pos":[633,739],"source":"       Schemas that have been previously compiled by an <xref:System.Xml.Schema.XmlSchemaSet> are not recompiled."},{"content":"However, schemas that were compiled using the Compile method of the &lt;xref:System.Xml.Schema.XmlSchema&gt; will be recompiled.","pos":[740,862],"source":" However, schemas that were compiled using the Compile method of the <xref:System.Xml.Schema.XmlSchema> will be recompiled."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  You need to call the &lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt; method if you have changed a schema (or one of its includes/imports) after adding it to the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.","pos":[868,1083],"source":"      > [!NOTE] >  You need to call the <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method if you have changed a schema (or one of its includes/imports) after adding it to the <xref:System.Xml.Schema.XmlSchemaSet>."},{"content":"The &lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt; method will check the schema for structural validity according to the rules of W3C XML Schema.","pos":[1084,1233],"source":" The <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method will check the schema for structural validity according to the rules of W3C XML Schema."},{"content":"However, it will not perform a full validation check.","pos":[1234,1287]},{"content":"It will also resolve references to internal and external schema components.","pos":[1288,1363]},{"content":"Any imported or included schemas that are successfully retrieved are also added to the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.","pos":[1364,1489],"source":" Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>."},{"content":"Imported schemas are added as separate &lt;xref:System.Xml.Schema.XmlSchema&gt; objects while included schemas are made part of the including &lt;xref:System.Xml.Schema.XmlSchema&gt;.","pos":[1490,1661],"source":" Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects while included schemas are made part of the including <xref:System.Xml.Schema.XmlSchema>."},{"content":"If the call to reprocess is successful, the &lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt; property is set to false.","pos":[1662,1783],"source":" If the call to reprocess is successful, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to false."}]},{"pos":[31508,31627],"content":"An error occurred when validating and compiling the schemas in the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An error occurred when validating and compiling the schemas in the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[32021,32188],"content":"Indicates whether an XML Schema definition language (XSD) schema with the specified target namespace URI is in the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Indicates whether an XML Schema definition language (XSD) schema with the specified target namespace URI is in the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[32200,32632],"content":"Schemas that are indirectly added to the <xref:System.Xml.Schema.XmlSchemaSet> are detected by the Contains method; for example, imported schemas. As a result, if a schema for the http://www.contoso.com/retail namespace which imports a schema for the http://www.contoso.com/books namespace is added to the <xref:System.Xml.Schema.XmlSchemaSet>, calling Contains with `http://www.contoso.com/books` as a parameter, it returns `true`.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Schemas that are indirectly added to the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; are detected by the Contains method; for example, imported schemas.","pos":[0,146],"source":"Schemas that are indirectly added to the <xref:System.Xml.Schema.XmlSchemaSet> are detected by the Contains method; for example, imported schemas."},{"content":"As a result, if a schema for the http://www.contoso.com/retail namespace which imports a schema for the http://www.contoso.com/books namespace is added to the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;, calling Contains with <ph id=\"ph1\">`http://www.contoso.com/books`</ph> as a parameter, it returns <ph id=\"ph2\">`true`</ph>.","pos":[147,432],"source":" As a result, if a schema for the http://www.contoso.com/retail namespace which imports a schema for the http://www.contoso.com/books namespace is added to the <xref:System.Xml.Schema.XmlSchemaSet>, calling Contains with `http://www.contoso.com/books` as a parameter, it returns `true`."}]},{"pos":[32790,32828],"content":"The schema <ph id=\"ph1\">`targetNamespace`</ph> property.","needQuote":true,"needEscape":true,"source":"The schema `targetNamespace` property."},{"pos":[32887,33137],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a schema with the specified target namespace URI is in the <bpt id=\"p2\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a schema with the specified target namespace URI is in the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[33638,33811],"content":"Indicates whether the specified XML Schema definition language (XSD) &lt;xref:System.Xml.Schema.XmlSchema&gt; object is in the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Indicates whether the specified XML Schema definition language (XSD) <xref:System.Xml.Schema.XmlSchema> object is in the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[33986,34032],"content":"The <xref:System.Xml.Schema.XmlSchema> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Xml.Schema.XmlSchema&gt; object.","pos":[0,46],"source":"The <xref:System.Xml.Schema.XmlSchema> object."}]},{"pos":[34091,34338],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Xml.Schema.XmlSchema&gt; object is in the <bpt id=\"p2\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Xml.Schema.XmlSchema> object is in the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[34508,34650],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> passed as a parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> passed as a parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[35125,35292],"content":"Copies all the &lt;xref:System.Xml.Schema.XmlSchema&gt; objects from the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to the given array, starting at the given index.","needQuote":true,"needEscape":true,"source":"Copies all the <xref:System.Xml.Schema.XmlSchema> objects from the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> to the given array, starting at the given index."},{"pos":[36554,36587],"content":"The array to copy the objects to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The array to copy the objects to.","pos":[0,33]}]},{"pos":[36648,36696],"content":"The index in the array where copying will begin.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index in the array where copying will begin.","pos":[0,48]}]},{"pos":[37091,37222],"content":"Gets the number of logical XML Schema definition language (XSD) schemas in the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the number of logical XML Schema definition language (XSD) schemas in the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[37234,37648],"content":"If there are two schemas for the namespace `http://www.contoso.com` in the <xref:System.Xml.Schema.XmlSchemaSet>, the Count property would return 1 because the schemas are treated as a single logical schema for validation purposes. However, if a schema for the namespace `http://www.contoso.com/retail` imported a schema for the `http://www.contoso.com/books` namespace, the value of the Count property would be 2.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If there are two schemas for the namespace <ph id=\"ph1\">`http://www.contoso.com`</ph> in the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;, the Count property would return 1 because the schemas are treated as a single logical schema for validation purposes.","pos":[0,231],"source":"If there are two schemas for the namespace `http://www.contoso.com` in the <xref:System.Xml.Schema.XmlSchemaSet>, the Count property would return 1 because the schemas are treated as a single logical schema for validation purposes."},{"content":"However, if a schema for the namespace <ph id=\"ph1\">`http://www.contoso.com/retail`</ph> imported a schema for the <ph id=\"ph2\">`http://www.contoso.com/books`</ph> namespace, the value of the Count property would be 2.","pos":[232,414],"source":" However, if a schema for the namespace `http://www.contoso.com/retail` imported a schema for the `http://www.contoso.com/books` namespace, the value of the Count property would be 2."}]},{"pos":[37754,37843],"content":"The number of logical schemas in the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The number of logical schemas in the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[38292,38438],"content":"Gets all the global attributes in all the XML Schema definition language (XSD) schemas in the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets all the global attributes in all the XML Schema definition language (XSD) schemas in the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[38616,38652],"content":"The collection of global attributes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection of global attributes.","pos":[0,36]}]},{"pos":[39102,39246],"content":"Gets all the global elements in all the XML Schema definition language (XSD) schemas in the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets all the global elements in all the XML Schema definition language (XSD) schemas in the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[39422,39456],"content":"The collection of global elements.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection of global elements.","pos":[0,34]}]},{"pos":[39889,40052],"content":"Gets all of the global simple and complex types in all the XML Schema definition language (XSD) schemas in the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets all of the global simple and complex types in all the XML Schema definition language (XSD) schemas in the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[40064,40157],"content":"The GlobalTypes property always returns a type that represents the <ph id=\"ph1\">`xs:anyType`</ph> complex type.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The GlobalTypes property always returns a type that represents the `xs:anyType` complex type."},{"pos":[40330,40380],"content":"The collection of global simple and complex types.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection of global simple and complex types.","pos":[0,50]}]},{"pos":[40805,40968],"content":"Gets a value that indicates whether the XML Schema definition language (XSD) schemas in the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> have been compiled.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether the XML Schema definition language (XSD) schemas in the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> have been compiled."},{"pos":[40980,41436],"content":"The IsCompiled property is not affected if schemas are edited while in the <xref:System.Xml.Schema.XmlSchemaSet>. Updates of the individual schemas in the <xref:System.Xml.Schema.XmlSchemaSet> are not tracked. As a result, the IsCompiled property can be `true` even though one of the schemas contained in the <xref:System.Xml.Schema.XmlSchemaSet> has been altered, as long as no schemas were added or removed from the <xref:System.Xml.Schema.XmlSchemaSet>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The IsCompiled property is not affected if schemas are edited while in the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.","pos":[0,113],"source":"The IsCompiled property is not affected if schemas are edited while in the <xref:System.Xml.Schema.XmlSchemaSet>."},{"content":"Updates of the individual schemas in the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; are not tracked.","pos":[114,209],"source":" Updates of the individual schemas in the <xref:System.Xml.Schema.XmlSchemaSet> are not tracked."},{"content":"As a result, the IsCompiled property can be <ph id=\"ph1\">`true`</ph> even though one of the schemas contained in the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; has been altered, as long as no schemas were added or removed from the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.","pos":[210,456],"source":" As a result, the IsCompiled property can be `true` even though one of the schemas contained in the <xref:System.Xml.Schema.XmlSchemaSet> has been altered, as long as no schemas were added or removed from the <xref:System.Xml.Schema.XmlSchemaSet>."}]},{"pos":[41675,42015],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the schemas in the <bpt id=\"p2\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> have been compiled since the last time a schema was added or removed from the <bpt id=\"p3\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the schemas in the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> have been compiled since the last time a schema was added or removed from the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[42434,42608],"content":"Gets the default &lt;xref:System.Xml.XmlNameTable&gt; used by the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> when loading new XML Schema definition language (XSD) schemas.","needQuote":true,"needEscape":true,"source":"Gets the default <xref:System.Xml.XmlNameTable> used by the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> when loading new XML Schema definition language (XSD) schemas."},{"pos":[42749,42784],"content":"A table of atomized string objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"A table of atomized string objects.","pos":[0,35]}]},{"pos":[43276,43403],"content":"Removes the specified XML Schema definition language (XSD) schema from the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Removes the specified XML Schema definition language (XSD) schema from the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[43415,43561],"content":"Removing a schema from the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; sets the &lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt; property to <ph id=\"ph1\">`false`</ph>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"Removing a schema from the <xref:System.Xml.Schema.XmlSchemaSet> sets the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property to `false`."},{"pos":[45028,45145],"content":"The &lt;xref:System.Xml.Schema.XmlSchema&gt; object to remove from the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Xml.Schema.XmlSchema> object to remove from the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[45217,45483],"content":"The &lt;xref:System.Xml.Schema.XmlSchema&gt; object removed from the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the schema was not found in the <bpt id=\"p3\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Xml.Schema.XmlSchema> object removed from the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the schema was not found in the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[45667,45700],"content":"The schema is not a valid schema.","needQuote":true,"needEscape":true,"nodes":[{"content":"The schema is not a valid schema.","pos":[0,33]}]},{"pos":[45803,45928],"content":"The &lt;xref:System.Xml.Schema.XmlSchema&gt; passed as a parameter is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Xml.Schema.XmlSchema> passed as a parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[46394,46552],"content":"Removes the specified XML Schema definition language (XSD) schema and all the schemas it imports from the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Removes the specified XML Schema definition language (XSD) schema and all the schemas it imports from the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[46565,48236],"content":"The RemoveRecursive method removes the specified schema and all the schemas it imports from the <xref:System.Xml.Schema.XmlSchemaSet>, as long as there are no dependencies on the schema or its imported schemas. If there are dependencies on the schema or its imported schemas in the <xref:System.Xml.Schema.XmlSchemaSet>, nothing is removed and RemoveRecursive returns `false`. If `false` is returned and a <xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler> is defined, a warning is sent to the event handler describing the dependencies.       If the specified schema imports other schemas and the specified schema was previously removed with the <xref:System.Xml.Schema.XmlSchemaSet.Remove%2A> method, the RemoveRecursive method will not remove the imported schemas and will return `false`. For example, if `parentSchema` imports `childSchema1` and `childSchema2` the following code will only remove `parentSchema`, but not the imported `childSchema1` and `childSchema2` schemas:      ```   XmlSchemaSet ss = new XmlSchemaSet();   XmlSchema xs = XmlSchema.Read(XmlReader.Create(\"parentSchema.xsd\"), null);   ss.Add(xs);   ss.Compile();   ss.Remove(xs);   ss.Compile();   ss.RemoveRecursive(xs);   ss.Compile();   ```       The following code will remove the `parentSchema` and the imported schemas:      ```   XmlSchemaSet ss = new XmlSchemaSet();   XmlSchema xs = XmlSchema.Read(XmlReader.Create(\"parentSchema.xsd\"), null);   ss.Add(xs);   ss.Compile();   ss.RemoveRecursive(xs);   ss.Compile();   ```       The RemoveRecursive method has no effect on the state of the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The RemoveRecursive method removes the specified schema and all the schemas it imports from the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;, as long as there are no dependencies on the schema or its imported schemas.","pos":[0,210],"source":"The RemoveRecursive method removes the specified schema and all the schemas it imports from the <xref:System.Xml.Schema.XmlSchemaSet>, as long as there are no dependencies on the schema or its imported schemas."},{"content":"If there are dependencies on the schema or its imported schemas in the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;, nothing is removed and RemoveRecursive returns <ph id=\"ph1\">`false`</ph>.","pos":[211,376],"source":" If there are dependencies on the schema or its imported schemas in the <xref:System.Xml.Schema.XmlSchemaSet>, nothing is removed and RemoveRecursive returns `false`."},{"content":"If <ph id=\"ph1\">`false`</ph> is returned and a &lt;xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler&gt; is defined, a warning is sent to the event handler describing the dependencies.","pos":[377,546],"source":" If `false` is returned and a <xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler> is defined, a warning is sent to the event handler describing the dependencies."},{"content":"If the specified schema imports other schemas and the specified schema was previously removed with the &lt;xref:System.Xml.Schema.XmlSchemaSet.Remove%2A&gt; method, the RemoveRecursive method will not remove the imported schemas and will return <ph id=\"ph1\">`false`</ph>.","pos":[553,800],"source":"       If the specified schema imports other schemas and the specified schema was previously removed with the <xref:System.Xml.Schema.XmlSchemaSet.Remove%2A> method, the RemoveRecursive method will not remove the imported schemas and will return `false`."},{"content":"For example, if <ph id=\"ph1\">`parentSchema`</ph> imports <ph id=\"ph2\">`childSchema1`</ph> and <ph id=\"ph3\">`childSchema2`</ph> the following code will only remove <ph id=\"ph4\">`parentSchema`</ph>, but not the imported <ph id=\"ph5\">`childSchema1`</ph> and <ph id=\"ph6\">`childSchema2`</ph> schemas:      <ph id=\"ph7\">```   XmlSchemaSet ss = new XmlSchemaSet();   XmlSchema xs = XmlSchema.Read(XmlReader.Create(\"parentSchema.xsd\"), null);   ss.Add(xs);   ss.Compile();   ss.Remove(xs);   ss.Compile();   ss.RemoveRecursive(xs);   ss.Compile();   ```</ph>       The following code will remove the <ph id=\"ph8\">`parentSchema`</ph> and the imported schemas:      <ph id=\"ph9\">```   XmlSchemaSet ss = new XmlSchemaSet();   XmlSchema xs = XmlSchema.Read(XmlReader.Create(\"parentSchema.xsd\"), null);   ss.Add(xs);   ss.Compile();   ss.RemoveRecursive(xs);   ss.Compile();   ```</ph>       The RemoveRecursive method has no effect on the state of the &lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt; property.","pos":[801,1641],"source":" For example, if `parentSchema` imports `childSchema1` and `childSchema2` the following code will only remove `parentSchema`, but not the imported `childSchema1` and `childSchema2` schemas:      ```   XmlSchemaSet ss = new XmlSchemaSet();   XmlSchema xs = XmlSchema.Read(XmlReader.Create(\"parentSchema.xsd\"), null);   ss.Add(xs);   ss.Compile();   ss.Remove(xs);   ss.Compile();   ss.RemoveRecursive(xs);   ss.Compile();   ```       The following code will remove the `parentSchema` and the imported schemas:      ```   XmlSchemaSet ss = new XmlSchemaSet();   XmlSchema xs = XmlSchema.Read(XmlReader.Create(\"parentSchema.xsd\"), null);   ss.Add(xs);   ss.Compile();   ss.RemoveRecursive(xs);   ss.Compile();   ```       The RemoveRecursive method has no effect on the state of the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property."}]},{"pos":[49769,49886],"content":"The &lt;xref:System.Xml.Schema.XmlSchema&gt; object to remove from the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Xml.Schema.XmlSchema> object to remove from the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[49945,50176],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Xml.Schema.XmlSchema&gt; object and all its imports were successfully removed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Xml.Schema.XmlSchema> object and all its imports were successfully removed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[50353,50478],"content":"The &lt;xref:System.Xml.Schema.XmlSchema&gt; passed as a parameter is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Xml.Schema.XmlSchema> passed as a parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[50914,51052],"content":"Reprocesses an XML Schema definition language (XSD) schema that already exists in the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Reprocesses an XML Schema definition language (XSD) schema that already exists in the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[51065,52381],"content":"Reprocessing a schema performs all the preprocessing steps performed on a schema when the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method is called. If the call to Reprocess is successful, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to `false`.       The Reprocess method should be used after a schema in the <xref:System.Xml.Schema.XmlSchemaSet> has been modified, after the <xref:System.Xml.Schema.XmlSchemaSet> has performed compilation.      > [!NOTE] >  You need to call the Reprocess method if you have changed a schema (or one of its includes/imports) after adding it to the <xref:System.Xml.Schema.XmlSchemaSet>. The Reprocess method will check the schema for structural validity according to the rules of W3C XML Schema. However, it will not perform a full validation check. It will also resolve references to internal and external schema components. Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>. Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects while included schemas are made part of the including <xref:System.Xml.Schema.XmlSchema>. If the call to reprocess is successful, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to false.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Reprocessing a schema performs all the preprocessing steps performed on a schema when the &lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt; method is called.","pos":[0,152],"source":"Reprocessing a schema performs all the preprocessing steps performed on a schema when the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method is called."},{"content":"If the call to Reprocess is successful, the &lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt; property is set to <ph id=\"ph1\">`false`</ph>.","pos":[153,276],"source":" If the call to Reprocess is successful, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to `false`."},{"content":"The Reprocess method should be used after a schema in the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; has been modified, after the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; has performed compilation.","pos":[283,472],"source":"       The Reprocess method should be used after a schema in the <xref:System.Xml.Schema.XmlSchemaSet> has been modified, after the <xref:System.Xml.Schema.XmlSchemaSet> has performed compilation."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  You need to call the Reprocess method if you have changed a schema (or one of its includes/imports) after adding it to the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.","pos":[478,652],"source":"      > [!NOTE] >  You need to call the Reprocess method if you have changed a schema (or one of its includes/imports) after adding it to the <xref:System.Xml.Schema.XmlSchemaSet>."},{"content":"The Reprocess method will check the schema for structural validity according to the rules of W3C XML Schema.","pos":[653,761]},{"content":"However, it will not perform a full validation check.","pos":[762,815]},{"content":"It will also resolve references to internal and external schema components.","pos":[816,891]},{"content":"Any imported or included schemas that are successfully retrieved are also added to the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.","pos":[892,1017],"source":" Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>."},{"content":"Imported schemas are added as separate &lt;xref:System.Xml.Schema.XmlSchema&gt; objects while included schemas are made part of the including &lt;xref:System.Xml.Schema.XmlSchema&gt;.","pos":[1018,1189],"source":" Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects while included schemas are made part of the including <xref:System.Xml.Schema.XmlSchema>."},{"content":"If the call to reprocess is successful, the &lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt; property is set to false.","pos":[1190,1311],"source":" If the call to reprocess is successful, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to false."}]},{"pos":[54220,54244],"content":"The schema to reprocess.","needQuote":true,"needEscape":true,"nodes":[{"content":"The schema to reprocess.","pos":[0,24]}]},{"pos":[54316,54706],"content":"An <xref:System.Xml.Schema.XmlSchema> object if the schema is a valid schema. If the schema is not valid and a <xref href=\"System.Xml.Schema.ValidationEventHandler\"></xref> is specified, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned and the appropriate validation event is raised. Otherwise, an <xref href=\"System.Xml.Schema.XmlSchemaException\"></xref> is thrown.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Xml.Schema.XmlSchema&gt; object if the schema is a valid schema.","pos":[0,77],"source":"An <xref:System.Xml.Schema.XmlSchema> object if the schema is a valid schema."},{"content":"If the schema is not valid and a <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.ValidationEventHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is specified, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is returned and the appropriate validation event is raised.","pos":[78,307],"source":" If the schema is not valid and a <xref href=\"System.Xml.Schema.ValidationEventHandler\"></xref> is specified, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned and the appropriate validation event is raised."},{"content":"Otherwise, an <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is thrown.","pos":[308,390],"source":" Otherwise, an <xref href=\"System.Xml.Schema.XmlSchemaException\"></xref> is thrown."}]},{"pos":[54893,54917],"content":"The schema is not valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The schema is not valid.","pos":[0,24]}]},{"pos":[55020,55152],"content":"The &lt;xref:System.Xml.Schema.XmlSchema&gt; object passed as a parameter is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Xml.Schema.XmlSchema> object passed as a parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[55247,55397],"content":"The &lt;xref:System.Xml.Schema.XmlSchema&gt; object passed as a parameter does not already exist in the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Xml.Schema.XmlSchema> object passed as a parameter does not already exist in the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[55738,55874],"content":"Returns a collection of all the XML Schema definition language (XSD) schemas in the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a collection of all the XML Schema definition language (XSD) schemas in the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[55887,56210],"content":"This method returns schemas that were added indirectly to the <xref:System.Xml.Schema.XmlSchemaSet> because they were imported.      > [!NOTE] >  The Schemas method is the equivalent of the <xref:System.Xml.Schema.XmlSchemaCollection.GetEnumerator%2A> method of the obsolete <xref:System.Xml.Schema.XmlSchemaCollection>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method returns schemas that were added indirectly to the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; because they were imported.","pos":[0,127],"source":"This method returns schemas that were added indirectly to the <xref:System.Xml.Schema.XmlSchemaSet> because they were imported."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The Schemas method is the equivalent of the &lt;xref:System.Xml.Schema.XmlSchemaCollection.GetEnumerator%2A&gt; method of the obsolete &lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;.","pos":[133,320],"source":"      > [!NOTE] >  The Schemas method is the equivalent of the <xref:System.Xml.Schema.XmlSchemaCollection.GetEnumerator%2A> method of the obsolete <xref:System.Xml.Schema.XmlSchemaCollection>."}]},{"pos":[57058,57370],"content":"An <xref:System.Collections.ICollection> object containing all the schemas that have been added to the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>. If no schemas have been added to the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>, an empty <xref:System.Collections.ICollection> object is returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.ICollection&gt; object containing all the schemas that have been added to the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,155],"source":"An <xref:System.Collections.ICollection> object containing all the schemas that have been added to the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"content":"If no schemas have been added to the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, an empty &lt;xref:System.Collections.ICollection&gt; object is returned.","pos":[156,312],"source":" If no schemas have been added to the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>, an empty <xref:System.Collections.ICollection> object is returned."}]},{"pos":[57828,57999],"content":"Returns a collection of all the XML Schema definition language (XSD) schemas in the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that belong to the given namespace.","needQuote":true,"needEscape":true,"source":"Returns a collection of all the XML Schema definition language (XSD) schemas in the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> that belong to the given namespace."},{"pos":[58012,58461],"content":"If the `targetNamespace` parameter is `null` or <xref:System.String.Empty>, then all schemas without a namespace are returned.       This method returns schemas that were added indirectly to the <xref:System.Xml.Schema.XmlSchemaSet> because they were imported.      > [!NOTE] >  The Schemas method is the equivalent of the <xref:System.Xml.Schema.XmlSchemaCollection.Item%2A> method of the obsolete <xref:System.Xml.Schema.XmlSchemaCollection>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the <ph id=\"ph1\">`targetNamespace`</ph> parameter is <ph id=\"ph2\">`null`</ph> or &lt;xref:System.String.Empty&gt;, then all schemas without a namespace are returned.","pos":[0,126],"source":"If the `targetNamespace` parameter is `null` or <xref:System.String.Empty>, then all schemas without a namespace are returned."},{"content":"This method returns schemas that were added indirectly to the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; because they were imported.","pos":[133,260],"source":"       This method returns schemas that were added indirectly to the <xref:System.Xml.Schema.XmlSchemaSet> because they were imported."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The Schemas method is the equivalent of the &lt;xref:System.Xml.Schema.XmlSchemaCollection.Item%2A&gt; method of the obsolete &lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;.","pos":[266,444],"source":"      > [!NOTE] >  The Schemas method is the equivalent of the <xref:System.Xml.Schema.XmlSchemaCollection.Item%2A> method of the obsolete <xref:System.Xml.Schema.XmlSchemaCollection>."}]},{"pos":[59435,59473],"content":"The schema <ph id=\"ph1\">`targetNamespace`</ph> property.","needQuote":true,"needEscape":true,"source":"The schema `targetNamespace` property."},{"pos":[59548,59895],"content":"An <xref:System.Collections.ICollection> object containing all the schemas that have been added to the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> that belong to the given namespace. If no schemas have been added to the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>, an empty <xref:System.Collections.ICollection> object is returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.ICollection&gt; object containing all the schemas that have been added to the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that belong to the given namespace.","pos":[0,190],"source":"An <xref:System.Collections.ICollection> object containing all the schemas that have been added to the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> that belong to the given namespace."},{"content":"If no schemas have been added to the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, an empty &lt;xref:System.Collections.ICollection&gt; object is returned.","pos":[191,347],"source":" If no schemas have been added to the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>, an empty <xref:System.Collections.ICollection> object is returned."}]},{"pos":[60373,60494],"content":"Specifies an event handler for receiving information about XML Schema definition language (XSD) schema validation errors.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies an event handler for receiving information about XML Schema definition language (XSD) schema validation errors.","pos":[0,121]}]},{"pos":[60507,61120],"content":"Sets an event handler for receiving information about schema validation errors when the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> or <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> methods of the <xref:System.Xml.Schema.XmlSchemaSet> are called.       If an event handler is not defined, an <xref:System.Xml.Schema.XmlSchemaException> is thrown on any validation errors where the <xref:System.Xml.Schema.XmlSeverityType> is <xref:System.Xml.Schema.XmlSeverityType>. Exceptions are not thrown for validation errors with an <xref:System.Xml.Schema.XmlSeverityType> of <xref:System.Xml.Schema.XmlSeverityType>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Sets an event handler for receiving information about schema validation errors when the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> or <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> methods of the <xref:System.Xml.Schema.XmlSchemaSet> are called.       If an event handler is not defined, an <xref:System.Xml.Schema.XmlSchemaException> is thrown on any validation errors where the <xref:System.Xml.Schema.XmlSeverityType> is <xref:System.Xml.Schema.XmlSeverityType>. Exceptions are not thrown for validation errors with an <xref:System.Xml.Schema.XmlSeverityType> of <xref:System.Xml.Schema.XmlSeverityType>.","pos":[0,611],"nodes":[{"content":"Sets an event handler for receiving information about schema validation errors when the &lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt; or &lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt; methods of the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; are called.","pos":[0,249],"source":"Sets an event handler for receiving information about schema validation errors when the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> or <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> methods of the <xref:System.Xml.Schema.XmlSchemaSet> are called."},{"content":"If an event handler is not defined, an &lt;xref:System.Xml.Schema.XmlSchemaException&gt; is thrown on any validation errors where the &lt;xref:System.Xml.Schema.XmlSeverityType&gt; is &lt;xref:System.Xml.Schema.XmlSeverityType&gt;.","pos":[256,469],"source":"       If an event handler is not defined, an <xref:System.Xml.Schema.XmlSchemaException> is thrown on any validation errors where the <xref:System.Xml.Schema.XmlSeverityType> is <xref:System.Xml.Schema.XmlSeverityType>."},{"content":"Exceptions are not thrown for validation errors with an &lt;xref:System.Xml.Schema.XmlSeverityType&gt; of &lt;xref:System.Xml.Schema.XmlSeverityType&gt;.","pos":[470,611],"source":" Exceptions are not thrown for validation errors with an <xref:System.Xml.Schema.XmlSeverityType> of <xref:System.Xml.Schema.XmlSeverityType>."}]}]},{"pos":[62120,62132],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[62506,62653],"content":"Sets the <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> used to resolve namespaces or locations referenced in include and import elements of a schema.","needQuote":true,"needEscape":true,"source":"Sets the <xref href=\"System.Xml.XmlResolver\"></xref> used to resolve namespaces or locations referenced in include and import elements of a schema."},{"pos":[62666,63566],"content":"The <xref:System.Xml.XmlResolver> of an <xref:System.Xml.Schema.XmlSchemaSet> is used to resolve namespaces or locations referenced in include and import elements of a schema, any time a schema is added using the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> or <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> methods.      > [!IMPORTANT] >  External namespaces or locations referenced in include, import, and redefine elements of a schema are resolved with respect to the base URI of the schema that includes or imports them. For example, if the base URI of the including or importing schema is empty or `null`, the external locations are resolved with respect to the current directory. The <xref:System.Xml.XmlUrlResolver> class is used to resolve external schemas by default. To disable resolution of include, import, and redefine elements of a schema, set the XmlResolver property to `null`.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Xml.XmlResolver&gt; of an &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; is used to resolve namespaces or locations referenced in include and import elements of a schema, any time a schema is added using the &lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt; or &lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt; methods.","pos":[0,320],"source":"The <xref:System.Xml.XmlResolver> of an <xref:System.Xml.Schema.XmlSchemaSet> is used to resolve namespaces or locations referenced in include and import elements of a schema, any time a schema is added using the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> or <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> methods."},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  External namespaces or locations referenced in include, import, and redefine elements of a schema are resolved with respect to the base URI of the schema that includes or imports them.","pos":[326,528],"source":"      > [!IMPORTANT] >  External namespaces or locations referenced in include, import, and redefine elements of a schema are resolved with respect to the base URI of the schema that includes or imports them."},{"content":"For example, if the base URI of the including or importing schema is empty or <ph id=\"ph1\">`null`</ph>, the external locations are resolved with respect to the current directory.","pos":[529,689],"source":" For example, if the base URI of the including or importing schema is empty or `null`, the external locations are resolved with respect to the current directory."},{"content":"The &lt;xref:System.Xml.XmlUrlResolver&gt; class is used to resolve external schemas by default.","pos":[690,780],"source":" The <xref:System.Xml.XmlUrlResolver> class is used to resolve external schemas by default."},{"content":"To disable resolution of include, import, and redefine elements of a schema, set the XmlResolver property to <ph id=\"ph1\">`null`</ph>.","pos":[781,897],"source":" To disable resolution of include, import, and redefine elements of a schema, set the XmlResolver property to `null`."}]},{"pos":[63708,63850],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> used to resolve namespaces or locations referenced in include and import elements of a schema.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Xml.XmlResolver\"></xref> used to resolve namespaces or locations referenced in include and import elements of a schema."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xml.Schema.XmlSchemaSet\n  id: XmlSchemaSet\n  children:\n  - System.Xml.Schema.XmlSchemaSet.#ctor\n  - System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)\n  - System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)\n  - System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)\n  - System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)\n  - System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)\n  - System.Xml.Schema.XmlSchemaSet.CompilationSettings\n  - System.Xml.Schema.XmlSchemaSet.Compile\n  - System.Xml.Schema.XmlSchemaSet.Contains(System.String)\n  - System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)\n  - System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)\n  - System.Xml.Schema.XmlSchemaSet.Count\n  - System.Xml.Schema.XmlSchemaSet.GlobalAttributes\n  - System.Xml.Schema.XmlSchemaSet.GlobalElements\n  - System.Xml.Schema.XmlSchemaSet.GlobalTypes\n  - System.Xml.Schema.XmlSchemaSet.IsCompiled\n  - System.Xml.Schema.XmlSchemaSet.NameTable\n  - System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)\n  - System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)\n  - System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)\n  - System.Xml.Schema.XmlSchemaSet.Schemas\n  - System.Xml.Schema.XmlSchemaSet.Schemas(System.String)\n  - System.Xml.Schema.XmlSchemaSet.ValidationEventHandler\n  - System.Xml.Schema.XmlSchemaSet.XmlResolver\n  langs:\n  - csharp\n  name: XmlSchemaSet\n  nameWithType: XmlSchemaSet\n  fullName: System.Xml.Schema.XmlSchemaSet\n  type: Class\n  summary: Contains a cache of XML Schema definition language (XSD) schemas.\n  remarks: \"> [!IMPORTANT]\\n>  -   Do not use schemas from unknown or untrusted sources or locations. Doing so will compromise the security of your code.  \\n> -   XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios.  \\n> -   Schema validation error messages and exceptions may expose sensitive information about the content model or URI paths to the schema file. Be careful not to expose this information to untrusted callers.  \\n> -   Additional security considerations are covered in the \\\"Security Considerations\\\" section.  \\n  \\n XmlSchemaSet is a cache or library where you can store XML Schema definition language (XSD) schemas. XmlSchemaSet improves performance by caching schemas in memory instead of accessing them from a file or a URL. Each schema is identified by the namespace URI and location that was specified when the schema was added to the set. You use the <xref:System.Xml.XmlReaderSettings.Schemas%2A?displayProperty=fullName> property to assign the XmlSchemaSet object an XML reader should use for data validation.  \\n  \\n## Security Considerations  \\n  \\n-   Do not use schemas from unknown or untrusted sources. Doing so will compromise the security of your code. External namespaces or locations referenced in include, import, and redefine elements of a schema are resolved with respect to the base URI of the schema that includes or imports them. For example, if the base URI of the including or importing schema is empty or `null`, the external locations are resolved with respect to the current directory. The <xref:System.Xml.XmlUrlResolver> class is used to resolve external schemas by default. To disable resolution of include, import, and redefine elements of a schema, set the <xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=fullName> property to `null`.  \\n  \\n-   The XmlSchemaSet class uses the <xref:System.Text.RegularExpressions.Regex?displayProperty=fullName> class to parse and match regular expressions in an XML schema. Validation of pattern facets with regular expressions in an XML schema may involve increased CPU usage and should be avoided in high availability scenarios.  \\n  \\n-   Exceptions raised as a result of using the XmlSchemaSet class, such as the <xref:System.Xml.Schema.XmlSchemaException> class may contain sensitive information that should not be exposed in untrusted scenarios. For example, the <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> property of an <xref:System.Xml.Schema.XmlSchemaException> returns the URI path to the schema file that caused the exception. The <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> property should not be exposed in untrusted scenarios. Exceptions should be properly handled so that this sensitive information is not exposed in untrusted scenarios.\"\n  example:\n  - \"The following example validates an XML file using schemas stored in the XmlSchemaSet. The namespace in the XML file, `urn:bookstore-schema`, identifies which schema in the XmlSchemaSet to use for validation.  \\n  \\n [!code-cpp[XmlReader_Validate_SchemaSet#1](~/add/codesnippet/cpp/t-system.xml.schema.xmls_0_1.cpp)]\\n [!code-cs[XmlReader_Validate_SchemaSet#1](~/add/codesnippet/csharp/t-system.xml.schema.xmls_0_1.cs)]\\n [!code-vb[XmlReader_Validate_SchemaSet#1](~/add/codesnippet/visualbasic/t-system.xml.schema.xmls_0_1.vb)]  \\n  \\n## Input  \\n The sample uses the following two input files.  \\n  \\n **booksSchemaFail.xml:**  \\n  \\n [!code-xml[XmlReader_Validate_SchemaSet#2](~/add/codesnippet/xml/t-system.xml.schema.xmls_0_2.xml)]  \\n  \\n **books.xsd:**  \\n  \\n [!code-xml[XmlReader_Validate_SchemaSet#3](~/add/codesnippet/xml/t-system.xml.schema.xmls_0_3.xsd)]  \\n  \\n## Output  \\n Validation Error: The element 'book' in namespace 'urn:bookstore-schema' has invalid child element 'author' in namespace 'urn:bookstore-schema'. Expected 'title' in namespace 'urn:bookstore-schema'.  \\n  \\n Validation Error: The element 'author' in namespace 'urn:bookstore-schema' has invalid child element 'name' in namespace 'urn:bookstore-schema'. Expected 'first-name' in namespace 'urn:bookstore-schema'.\"\n  syntax:\n    content: public class XmlSchemaSet\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaSet.#ctor\n  id: '#ctor'\n  parent: System.Xml.Schema.XmlSchemaSet\n  langs:\n  - csharp\n  name: XmlSchemaSet()\n  nameWithType: XmlSchemaSet.XmlSchemaSet()\n  fullName: System.Xml.Schema.XmlSchemaSet.XmlSchemaSet()\n  type: Constructor\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Initializes a new instance of the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> class.\n  syntax:\n    content: public XmlSchemaSet ();\n    parameters: []\n  overload: System.Xml.Schema.XmlSchemaSet.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)\n  id: '#ctor(System.Xml.XmlNameTable)'\n  parent: System.Xml.Schema.XmlSchemaSet\n  langs:\n  - csharp\n  name: XmlSchemaSet(XmlNameTable)\n  nameWithType: XmlSchemaSet.XmlSchemaSet(XmlNameTable)\n  fullName: System.Xml.Schema.XmlSchemaSet.XmlSchemaSet(XmlNameTable)\n  type: Constructor\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Initializes a new instance of the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> class with the specified <xref:System.Xml.XmlNameTable>.\n  syntax:\n    content: public XmlSchemaSet (System.Xml.XmlNameTable nameTable);\n    parameters:\n    - id: nameTable\n      type: System.Xml.XmlNameTable\n      description: The <xref:System.Xml.XmlNameTable> object to use.\n  overload: System.Xml.Schema.XmlSchemaSet.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <xref:System.Xml.XmlNameTable> object passed as a parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)\n  id: Add(System.Xml.Schema.XmlSchema)\n  parent: System.Xml.Schema.XmlSchemaSet\n  langs:\n  - csharp\n  name: Add(XmlSchema)\n  nameWithType: XmlSchemaSet.Add(XmlSchema)\n  fullName: System.Xml.Schema.XmlSchemaSet.Add(XmlSchema)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Adds the given <xref:System.Xml.Schema.XmlSchema> to the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n  remarks: \"If the <xref:System.Xml.Schema.XmlSchema> object already exists in the <xref:System.Xml.Schema.XmlSchemaSet>, the Add method does nothing.  \\n  \\n The functionality of this method is identical to that of the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.\"\n  syntax:\n    content: public System.Xml.Schema.XmlSchema Add (System.Xml.Schema.XmlSchema schema);\n    parameters:\n    - id: schema\n      type: System.Xml.Schema.XmlSchema\n      description: The <xref:System.Xml.Schema.XmlSchema> object to add to the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n    return:\n      type: System.Xml.Schema.XmlSchema\n      description: An <xref:System.Xml.Schema.XmlSchema> object if the schema is valid. If the schema is not valid and a <xref href=\"System.Xml.Schema.ValidationEventHandler\"></xref> is specified, then <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned and the appropriate validation event is raised. Otherwise, an <xref href=\"System.Xml.Schema.XmlSchemaException\"></xref> is thrown.\n  overload: System.Xml.Schema.XmlSchemaSet.Add*\n  exceptions:\n  - type: System.Xml.Schema.XmlSchemaException\n    commentId: T:System.Xml.Schema.XmlSchemaException\n    description: The schema is not valid.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <xref:System.Xml.Schema.XmlSchema> object passed as a parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)\n  id: Add(System.Xml.Schema.XmlSchemaSet)\n  parent: System.Xml.Schema.XmlSchemaSet\n  langs:\n  - csharp\n  name: Add(XmlSchemaSet)\n  nameWithType: XmlSchemaSet.Add(XmlSchemaSet)\n  fullName: System.Xml.Schema.XmlSchemaSet.Add(XmlSchemaSet)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Adds all the XML Schema definition language (XSD) schemas in the given <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> to the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n  remarks: \"Before a schema can be added to an <xref:System.Xml.Schema.XmlSchemaSet>, it has to be successfully preprocessed. Preprocessing performs the following basic tasks.  \\n  \\n1.  The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.  \\n  \\n2.  References to internal and external schema components are resolved. Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>. Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects, and included schemas are made a part of the including <xref:System.Xml.Schema.XmlSchema>.  \\n  \\n If the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property of the <xref:System.Xml.Schema.XmlSchemaSet> to add is `true`, all schemas in the <xref:System.Xml.Schema.XmlSchemaSet> to add are added to the <xref:System.Xml.Schema.XmlSchemaSet>. If the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property of the <xref:System.Xml.Schema.XmlSchemaSet> to add is `false`, each schema added is preprocessed before being added. If any of the schemas in the newly added <xref:System.Xml.Schema.XmlSchemaSet> fails to be preprocessed, no schemas are added; instead, an <xref:System.Xml.Schema.XmlSchemaException> is thrown. As a result, the following two code example are not equivalent.  \\n  \\n```vb#  \\n' First example  \\nschemaSet.Add(schemaSet1)  \\n  \\n' Second example  \\nDim schema As XmlSchema  \\n  \\nFor Each schema in schemaSet.Schemas()  \\n  \\n    schemaSet.Add(schema)  \\n  \\nNext  \\n```  \\n  \\n```c#  \\n// First example  \\nschemaSet.Add(schemaSet1);  \\n  \\n// Second example  \\nforeach(XmlSchema schema in schemaSet.Schemas())  \\n{  \\n    schemaSet.Add(schema);  \\n}  \\n```  \\n  \\n The previous two code examples are not equivalent. In the first example, if an invalid schema exists in `schemaSet1` and its <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to `false`, no schemas are added to `schemaSet`. In the second example, a number of schemas can be added to `schemaSet` before an invalid schema is encountered and an exception is thrown.\"\n  example:\n  - \"The following code example illustrates adding schemas to an <xref:System.Xml.Schema.XmlSchemaSet>, then adding the <xref:System.Xml.Schema.XmlSchemaSet> to a new <xref:System.Xml.Schema.XmlSchemaSet> using the Add method.  \\n  \\n```vb#  \\nDim schemaSet1 As XmlSchemaSet = New XmlSchemaSet  \\nschemaSet1.Add(\\\"http://www.contoso.com/retail\\\", \\\"http://www.contoso.com/retail.xsd\\\")  \\nschemaSet1.Add(\\\"http://www.contoso.com/books\\\", \\\"http://www.contoso.com/books.xsd\\\")  \\nschemaSet1.Add(\\\"http://www.contoso.com/music\\\", \\\"http://www.contoso.com/music.xsd\\\")  \\n  \\nDim schemaSet2 As XmlSchemaSet = New XmlSchemaSet  \\nschemaSet2.Add(schemaSet1)  \\n```  \\n  \\n```c#  \\nXmlSchemaSet schemaSet1 = new XmlSchemaSet();  \\nschemaSet1.Add(\\\"http://www.contoso.com/retail\\\", \\\"http://www.contoso.com/retail.xsd\\\");  \\nschemaSet1.Add(\\\"http://www.contoso.com/books\\\", \\\"http://www.contoso.com/books.xsd\\\");  \\nschemaSet1.Add(\\\"http://www.contoso.com/music\\\", \\\"http://www.contoso.com/music.xsd\\\");  \\n  \\nXmlSchemaSet schemaSet2 = new XmlSchemaSet();  \\nschemaSet2.Add(schemaSet1);  \\n```\"\n  syntax:\n    content: public void Add (System.Xml.Schema.XmlSchemaSet schemas);\n    parameters:\n    - id: schemas\n      type: System.Xml.Schema.XmlSchemaSet\n      description: The <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> object.\n  overload: System.Xml.Schema.XmlSchemaSet.Add*\n  exceptions:\n  - type: System.Xml.Schema.XmlSchemaException\n    commentId: T:System.Xml.Schema.XmlSchemaException\n    description: A schema in the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> is not valid.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> object passed as a parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)\n  id: Add(System.String,System.String)\n  parent: System.Xml.Schema.XmlSchemaSet\n  langs:\n  - csharp\n  name: Add(String,String)\n  nameWithType: XmlSchemaSet.Add(String,String)\n  fullName: System.Xml.Schema.XmlSchemaSet.Add(String,String)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Adds the XML Schema definition language (XSD) schema at the URL specified to the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n  remarks: \"Before a schema can be added to an <xref:System.Xml.Schema.XmlSchemaSet>, it has to be successfully preprocessed. Preprocessing performs the following basic tasks.  \\n  \\n1.  The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.  \\n  \\n2.  References to internal and external schema components are resolved. Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>. Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects, and included schemas are made a part of the including <xref:System.Xml.Schema.XmlSchema>.  \\n  \\n The following are important notes to consider when using the Add method.  \\n  \\n-   Adding a schema to the <xref:System.Xml.Schema.XmlSchemaSet> with the same target namespace and schema location URL as a schema already contained within the <xref:System.Xml.Schema.XmlSchemaSet> will return the original schema object.  \\n  \\n-   When a new schema is successfully added to an <xref:System.Xml.Schema.XmlSchemaSet>, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property of the <xref:System.Xml.Schema.XmlSchemaSet> is set to `false`.  \\n  \\n-   Any include or import elements encountered in an XML schema are resolved when the Add method is called. Failure to resolve include and import elements results in a schema validation warning and if no <xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler> has been specified for the <xref:System.Xml.Schema.XmlSchemaSet> object, these warning will not be reported.  \\n  \\n-   If a schema with the same target namespace as a schema that already exists in the <xref:System.Xml.Schema.XmlSchemaSet> is added to the <xref:System.Xml.Schema.XmlSchemaSet>, both schemas are added.  \\n  \\n    > [!NOTE]\\n    >  This behavior differs from the obsolete <xref:System.Xml.Schema.XmlSchemaCollection> object.  \\n  \\n-   The Add method of the <xref:System.Xml.Schema.XmlSchemaSet> has the ability to use the target namespace defined in a schema, rather than requiring the target namespace be specified as a parameter when the Add method is called. Specifying `null` in the `targetNamespace` parameter of the Add method instructs the <xref:System.Xml.Schema.XmlSchemaSet> to use the target namespace defined in the schema, as illustrated in the following code example.  \\n  \\n```vb#  \\nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \\nschemaSet.Add(Nothing, \\\"books.xsd\\\")  \\n  \\nDim schema As XmlSchema  \\nFor Each schema In schemaSet.Schemas(\\\"http://www.contoso.com/books\\\")  \\n    schema.Write(Console.Out)  \\nNext  \\n```  \\n  \\n```c#  \\nXmlSchemaSet schemaSet = new XmlSchemaSet();  \\nschemaSet.Add(null, \\\"books.xsd\\\");  \\n  \\nforeach(XmlSchema schema in schemaSet.Schemas(\\\"http://www.contoso.com/books\\\"))  \\n{  \\n    schema.Write(Console.Out);  \\n}  \\n```  \\n  \\n In the code example above, `null` is specified as the `targetNamespace` parameter to the Add method. As a result, the `targetNamespace` defined in the books.xml file is used. In this case, the result of calling the Add method would be identical if http://www.contoso.com/books had been specified as the `targetNamespace` parameter.  \\n  \\n-   W3C XML Schema allows schemas without a target namespace to be included in schemas with a target namespace defined. In this case, the schema without a target namespace defined is coerced into the target namespace of the including schema. The included schema is treated as if it had that target namespace defined. Similarly, schemas without a target namespace can be added to the <xref:System.Xml.Schema.XmlSchemaSet> and coerced into the target namespace specified by the Add method, as illustrated in the following example.  \\n  \\n```  \\n<xs:schema xmlns:xs=\\\"http://www.w3.org/2001/XMLSchema\\\">  \\n    <xs:element name=\\\"A\\\" type=\\\"xs:string\\\" />  \\n</xs:schema>  \\n```  \\n  \\n If the schema above is added to the <xref:System.Xml.Schema.XmlSchemaSet> with the target namespace http://www.contoso.com/new/targetnamespace (as shown in the code below), it is treated as if the target namespace declared in the schema was `http://www.contoso.com/new/targetnamespace`.  \\n  \\n```vb#  \\nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \\nschemaSet.Add(\\\"http://www.contoso.com/new/targetnamespace\\\", \\\"http://www.contoso.com/targetnamespace.xsd\\\")  \\n  \\nDim schema As XmlSchema  \\n  \\nFor Each schema in schemaSet.Schemas()  \\n  \\n    Console.WriteLine(schema.TargetNamespace)     \\n  \\nNext  \\n```  \\n  \\n```c#  \\nXmlSchemaSet schemaSet = new XmlSchemaSet();  \\nschemaSet.Add(\\\"http://www.contoso.com/new/targetnamespace\\\", \\\"http://www.contoso.com/targetnamespace.xsd\\\");  \\nforeach(XmlSchema schema in schemaSet.Schemas())  \\n{  \\n    Console.WriteLine(schema.TargetNamespace);  \\n}  \\n```\"\n  example:\n  - \"The following code example adds the http://www.contoso.com/books.xsd schema with a target namespace of http://www.contoso.com/books to the <xref:System.Xml.Schema.XmlSchemaSet>.  \\n  \\n```vb#  \\nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \\nschemaSet.Add(\\\"http://www.contoso.com/books\\\", \\\"http://www.contoso.com/books.xsd\\\")  \\n```  \\n  \\n```c#  \\nXmlSchemaSet schemaSet = new XmlSchemaSet();  \\nschemaSet.Add(\\\"http://www.contoso.com/books\\\", \\\"http://www.contoso.com/books.xsd\\\");  \\n```  \\n  \\n The example uses the `books.xsd` file as input.  \\n  \\n [!code-xml[XmlSchemaSetOverall Example#3](~/add/codesnippet/xml/m-system.xml.schema.xmls_3_1.xsd)]\"\n  syntax:\n    content: public System.Xml.Schema.XmlSchema Add (string targetNamespace, string schemaUri);\n    parameters:\n    - id: targetNamespace\n      type: System.String\n      description: The schema `targetNamespace` property, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> to use the `targetNamespace` specified in the schema.\n    - id: schemaUri\n      type: System.String\n      description: The URL that specifies the schema to load.\n    return:\n      type: System.Xml.Schema.XmlSchema\n      description: An <xref:System.Xml.Schema.XmlSchema> object if the schema is valid. If the schema is not valid and a <xref href=\"System.Xml.Schema.ValidationEventHandler\"></xref> is specified, then <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned and the appropriate validation event is raised. Otherwise, an <xref href=\"System.Xml.Schema.XmlSchemaException\"></xref> is thrown.\n  overload: System.Xml.Schema.XmlSchemaSet.Add*\n  exceptions:\n  - type: System.Xml.Schema.XmlSchemaException\n    commentId: T:System.Xml.Schema.XmlSchemaException\n    description: The schema is not valid.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The URL passed as a parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or <xref:System.String.Empty>.\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)\n  id: Add(System.String,System.Xml.XmlReader)\n  parent: System.Xml.Schema.XmlSchemaSet\n  langs:\n  - csharp\n  name: Add(String,XmlReader)\n  nameWithType: XmlSchemaSet.Add(String,XmlReader)\n  fullName: System.Xml.Schema.XmlSchemaSet.Add(String,XmlReader)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Adds the XML Schema definition language (XSD) schema contained in the <xref:System.Xml.XmlReader> to the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n  remarks: \"Before a schema can be added to an <xref:System.Xml.Schema.XmlSchemaSet>, it has to be successfully preprocessed. Preprocessing performs the following basic tasks.  \\n  \\n1.  The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.  \\n  \\n2.  References to internal and external schema components are resolved. Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>. Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects, and included schemas are made a part of the including <xref:System.Xml.Schema.XmlSchema>.  \\n  \\n The following are important notes to consider when using the Add method.  \\n  \\n-   Successfully retrieved schemas imported or included by the schemas contained in the <xref:System.Xml.XmlReader> are also added to the <xref:System.Xml.Schema.XmlSchemaSet>.  \\n  \\n-   If the <xref:System.Xml.XmlReader> is not positioned on the root element, an <xref:System.Xml.Schema.XmlSchemaException> is thrown unless the current item is an element. If the current item is an `xs:schema` element, the schema document is read into the <xref:System.Xml.Schema.XmlSchemaSet>; otherwise, an <xref:System.Xml.Schema.XmlSchemaException> is thrown because the schema is not valid.  \\n  \\n-   If the <xref:System.Xml.XmlReader> is positioned over a sequence of XML nodes, only the first node in the sequence is added.  \\n  \\n-   If the schema was created from a <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method call, the value of the <xref:System.Xml.Schema.XmlSchemaValidationFlags> property is ignored, because inline schema processing is not applied for W3C XML Schema documents.  \\n  \\n-   The <xref:System.Xml.XmlResolver> property of the <xref:System.Xml.XmlReader> is not used to resolve references to namespaces or schema locations in include and import elements. Instead, the <xref:System.Xml.XmlResolver> property of the <xref:System.Xml.Schema.XmlSchemaSet> is used.  \\n  \\n-   The Add method of the <xref:System.Xml.Schema.XmlSchemaSet> has the ability to use the target namespace defined in a schema, rather than requiring the target namespace be specified as a parameter when the Add method is called. Specifying `null` or <xref:System.String.Empty?displayProperty=fullName> to the Add method instructs the <xref:System.Xml.Schema.XmlSchemaSet> to use the target namespace defined in the schema. For an example of this behavior, see the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.  \\n  \\n The remaining functionality of this method is identical to that of the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.\"\n  example:\n  - \"The following code example adds the books.xsd schema contained in the <xref:System.Xml.XmlTextReader> with a target namespace of http://www.contoso.com/books to the <xref:System.Xml.Schema.XmlSchemaSet>.  \\n  \\n```vb#  \\nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \\nschemaSet.Add(\\\"http://www.contoso.com/books\\\", New XmlTextReader(\\\"books.xsd\\\")  \\n```  \\n  \\n```c#  \\nXmlSchemaSet schemaSet = new XmlSchemaSet();  \\nschemaSet.Add(\\\"http://www.contoso.com/books\\\", new XmlTextReader(\\\"books.xsd\\\");  \\n```\"\n  syntax:\n    content: public System.Xml.Schema.XmlSchema Add (string targetNamespace, System.Xml.XmlReader schemaDocument);\n    parameters:\n    - id: targetNamespace\n      type: System.String\n      description: The schema `targetNamespace` property, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> to use the `targetNamespace` specified in the schema.\n    - id: schemaDocument\n      type: System.Xml.XmlReader\n      description: The <xref:System.Xml.XmlReader> object.\n    return:\n      type: System.Xml.Schema.XmlSchema\n      description: An <xref:System.Xml.Schema.XmlSchema> object if the schema is valid. If the schema is not valid and a <xref href=\"System.Xml.Schema.ValidationEventHandler\"></xref> is specified, then <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned and the appropriate validation event is raised. Otherwise, an <xref href=\"System.Xml.Schema.XmlSchemaException\"></xref> is thrown.\n  overload: System.Xml.Schema.XmlSchemaSet.Add*\n  exceptions:\n  - type: System.Xml.Schema.XmlSchemaException\n    commentId: T:System.Xml.Schema.XmlSchemaException\n    description: The schema is not valid.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <xref:System.Xml.XmlReader> object passed as a parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaSet.CompilationSettings\n  id: CompilationSettings\n  parent: System.Xml.Schema.XmlSchemaSet\n  langs:\n  - csharp\n  name: CompilationSettings\n  nameWithType: XmlSchemaSet.CompilationSettings\n  fullName: System.Xml.Schema.XmlSchemaSet.CompilationSettings\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Gets or sets the <xref href=\"System.Xml.Schema.XmlSchemaCompilationSettings\"></xref> for the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n  remarks: The <xref:System.Xml.Schema.XmlSchemaCompilationSettings> class specifies Unique Particle Attribution (UPA) validation options for the <xref:System.Xml.Schema.XmlSchemaSet>. For more information about enabling UPA validation checks, see the <xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck%2A> property.\n  syntax:\n    content: public System.Xml.Schema.XmlSchemaCompilationSettings CompilationSettings { get; set; }\n    return:\n      type: System.Xml.Schema.XmlSchemaCompilationSettings\n      description: The <xref href=\"System.Xml.Schema.XmlSchemaCompilationSettings\"></xref> for the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>. The default is an <xref href=\"System.Xml.Schema.XmlSchemaCompilationSettings\"></xref> instance with the <xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck*> property set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Xml.Schema.XmlSchemaSet.CompilationSettings*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaSet.Compile\n  id: Compile\n  parent: System.Xml.Schema.XmlSchemaSet\n  langs:\n  - csharp\n  name: Compile()\n  nameWithType: XmlSchemaSet.Compile()\n  fullName: System.Xml.Schema.XmlSchemaSet.Compile()\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Compiles the XML Schema definition language (XSD) schemas added to the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> into one logical schema.\n  remarks: \"This method is called automatically when validation is needed and the <xref:System.Xml.Schema.XmlSchemaSet> has not been previously compiled—for example, when an <xref:System.Xml.Schema.XmlSchemaSet> is used as an input to create an <xref:System.Xml.XmlReader> object in the <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> property of an <xref:System.Xml.XmlReaderSettings> object. If the <xref:System.Xml.Schema.XmlSchemaSet> is already in the compiled state, this method will not recompile the schemas. If this method executes successfully, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to `true`.  \\n  \\n Schemas that have been previously compiled by an <xref:System.Xml.Schema.XmlSchemaSet> are not recompiled. However, schemas that were compiled using the Compile method of the <xref:System.Xml.Schema.XmlSchema> will be recompiled.  \\n  \\n> [!NOTE]\\n>  You need to call the <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method if you have changed a schema (or one of its includes/imports) after adding it to the <xref:System.Xml.Schema.XmlSchemaSet>. The <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method will check the schema for structural validity according to the rules of W3C XML Schema. However, it will not perform a full validation check. It will also resolve references to internal and external schema components. Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>. Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects while included schemas are made part of the including <xref:System.Xml.Schema.XmlSchema>. If the call to reprocess is successful, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to false.\"\n  example:\n  - \"```vb#  \\nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \\nschemaSet.Add(\\\"http://www.contoso.com/books\\\", \\\"http://www.contoso.com/books.xsd\\\")  \\nschemaSet.Compile()  \\n```  \\n  \\n```c#  \\nXmlSchemaSet schemaSet = new XmlSchemaSet();  \\nschemaSet.Add(\\\"http://www.contoso.com/books\\\", \\\"http://www.contoso.com/books.xsd\\\");  \\nschemaSet.Compile();  \\n```\"\n  syntax:\n    content: public void Compile ();\n    parameters: []\n  overload: System.Xml.Schema.XmlSchemaSet.Compile*\n  exceptions:\n  - type: System.Xml.Schema.XmlSchemaException\n    commentId: T:System.Xml.Schema.XmlSchemaException\n    description: An error occurred when validating and compiling the schemas in the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaSet.Contains(System.String)\n  id: Contains(System.String)\n  parent: System.Xml.Schema.XmlSchemaSet\n  langs:\n  - csharp\n  name: Contains(String)\n  nameWithType: XmlSchemaSet.Contains(String)\n  fullName: System.Xml.Schema.XmlSchemaSet.Contains(String)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Indicates whether an XML Schema definition language (XSD) schema with the specified target namespace URI is in the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n  remarks: Schemas that are indirectly added to the <xref:System.Xml.Schema.XmlSchemaSet> are detected by the Contains method; for example, imported schemas. As a result, if a schema for the http://www.contoso.com/retail namespace which imports a schema for the http://www.contoso.com/books namespace is added to the <xref:System.Xml.Schema.XmlSchemaSet>, calling Contains with `http://www.contoso.com/books` as a parameter, it returns `true`.\n  syntax:\n    content: public bool Contains (string targetNamespace);\n    parameters:\n    - id: targetNamespace\n      type: System.String\n      description: The schema `targetNamespace` property.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a schema with the specified target namespace URI is in the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xml.Schema.XmlSchemaSet.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)\n  id: Contains(System.Xml.Schema.XmlSchema)\n  parent: System.Xml.Schema.XmlSchemaSet\n  langs:\n  - csharp\n  name: Contains(XmlSchema)\n  nameWithType: XmlSchemaSet.Contains(XmlSchema)\n  fullName: System.Xml.Schema.XmlSchemaSet.Contains(XmlSchema)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Indicates whether the specified XML Schema definition language (XSD) <xref:System.Xml.Schema.XmlSchema> object is in the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n  syntax:\n    content: public bool Contains (System.Xml.Schema.XmlSchema schema);\n    parameters:\n    - id: schema\n      type: System.Xml.Schema.XmlSchema\n      description: The <xref:System.Xml.Schema.XmlSchema> object.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Xml.Schema.XmlSchema> object is in the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xml.Schema.XmlSchemaSet.Contains*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> passed as a parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)\n  id: CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)\n  parent: System.Xml.Schema.XmlSchemaSet\n  langs:\n  - csharp\n  name: CopyTo(XmlSchema[],Int32)\n  nameWithType: XmlSchemaSet.CopyTo(XmlSchema[],Int32)\n  fullName: System.Xml.Schema.XmlSchemaSet.CopyTo(XmlSchema[],Int32)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Copies all the <xref:System.Xml.Schema.XmlSchema> objects from the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> to the given array, starting at the given index.\n  remarks: ''\n  example:\n  - \"The following example copies all the <xref:System.Xml.Schema.XmlSchema> objects in the <xref:System.Xml.Schema.XmlSchemaSet> to an array of <xref:System.Xml.Schema.XmlSchema> objects.  \\n  \\n```vb#  \\nDim schemaSet As XmlSchemaSet = New XmlSchemaSet  \\nschemaSet.Add(\\\"http://www.contoso.com/retail\\\", \\\"http://www.contoso.com/retail.xsd\\\")  \\nschemaSet.Add(\\\"http://www.contoso.com/books\\\", \\\"http://www.contoso.com/books.xsd\\\")  \\nschemaSet.Add(\\\"http://www.contoso.com/music\\\", \\\"http://www.contoso.com/music.xsd\\\")  \\n  \\nDim schemas(schemaSet.Count) As XmlSchema  \\nschemaSet.CopyTo(schemas, 0)  \\n```  \\n  \\n```c#  \\nXmlSchemaSet schemaSet = new XmlSchemaSet();  \\nschemaSet.Add(\\\"http://www.contoso.com/retail\\\", \\\"http://www.contoso.com/retail.xsd\\\");  \\nschemaSet.Add(\\\"http://www.contoso.com/books\\\", \\\"http://www.contoso.com/books.xsd\\\");  \\nschemaSet.Add(\\\"http://www.contoso.com/music\\\", \\\"http://www.contoso.com/music.xsd\\\");  \\n  \\nXmlSchema[] schemas = new XmlSchema[schemaSet.Count];  \\nschemaSet.CopyTo(schemas, 0);  \\n```\"\n  syntax:\n    content: public void CopyTo (System.Xml.Schema.XmlSchema[] schemas, int index);\n    parameters:\n    - id: schemas\n      type: System.Xml.Schema.XmlSchema[]\n      description: The array to copy the objects to.\n    - id: index\n      type: System.Int32\n      description: The index in the array where copying will begin.\n  overload: System.Xml.Schema.XmlSchemaSet.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaSet.Count\n  id: Count\n  parent: System.Xml.Schema.XmlSchemaSet\n  langs:\n  - csharp\n  name: Count\n  nameWithType: XmlSchemaSet.Count\n  fullName: System.Xml.Schema.XmlSchemaSet.Count\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Gets the number of logical XML Schema definition language (XSD) schemas in the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n  remarks: If there are two schemas for the namespace `http://www.contoso.com` in the <xref:System.Xml.Schema.XmlSchemaSet>, the Count property would return 1 because the schemas are treated as a single logical schema for validation purposes. However, if a schema for the namespace `http://www.contoso.com/retail` imported a schema for the `http://www.contoso.com/books` namespace, the value of the Count property would be 2.\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of logical schemas in the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n  overload: System.Xml.Schema.XmlSchemaSet.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaSet.GlobalAttributes\n  id: GlobalAttributes\n  parent: System.Xml.Schema.XmlSchemaSet\n  langs:\n  - csharp\n  name: GlobalAttributes\n  nameWithType: XmlSchemaSet.GlobalAttributes\n  fullName: System.Xml.Schema.XmlSchemaSet.GlobalAttributes\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Gets all the global attributes in all the XML Schema definition language (XSD) schemas in the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n  syntax:\n    content: public System.Xml.Schema.XmlSchemaObjectTable GlobalAttributes { get; }\n    return:\n      type: System.Xml.Schema.XmlSchemaObjectTable\n      description: The collection of global attributes.\n  overload: System.Xml.Schema.XmlSchemaSet.GlobalAttributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaSet.GlobalElements\n  id: GlobalElements\n  parent: System.Xml.Schema.XmlSchemaSet\n  langs:\n  - csharp\n  name: GlobalElements\n  nameWithType: XmlSchemaSet.GlobalElements\n  fullName: System.Xml.Schema.XmlSchemaSet.GlobalElements\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Gets all the global elements in all the XML Schema definition language (XSD) schemas in the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n  syntax:\n    content: public System.Xml.Schema.XmlSchemaObjectTable GlobalElements { get; }\n    return:\n      type: System.Xml.Schema.XmlSchemaObjectTable\n      description: The collection of global elements.\n  overload: System.Xml.Schema.XmlSchemaSet.GlobalElements*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaSet.GlobalTypes\n  id: GlobalTypes\n  parent: System.Xml.Schema.XmlSchemaSet\n  langs:\n  - csharp\n  name: GlobalTypes\n  nameWithType: XmlSchemaSet.GlobalTypes\n  fullName: System.Xml.Schema.XmlSchemaSet.GlobalTypes\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Gets all of the global simple and complex types in all the XML Schema definition language (XSD) schemas in the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n  remarks: The GlobalTypes property always returns a type that represents the `xs:anyType` complex type.\n  syntax:\n    content: public System.Xml.Schema.XmlSchemaObjectTable GlobalTypes { get; }\n    return:\n      type: System.Xml.Schema.XmlSchemaObjectTable\n      description: The collection of global simple and complex types.\n  overload: System.Xml.Schema.XmlSchemaSet.GlobalTypes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaSet.IsCompiled\n  id: IsCompiled\n  parent: System.Xml.Schema.XmlSchemaSet\n  langs:\n  - csharp\n  name: IsCompiled\n  nameWithType: XmlSchemaSet.IsCompiled\n  fullName: System.Xml.Schema.XmlSchemaSet.IsCompiled\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Gets a value that indicates whether the XML Schema definition language (XSD) schemas in the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> have been compiled.\n  remarks: The IsCompiled property is not affected if schemas are edited while in the <xref:System.Xml.Schema.XmlSchemaSet>. Updates of the individual schemas in the <xref:System.Xml.Schema.XmlSchemaSet> are not tracked. As a result, the IsCompiled property can be `true` even though one of the schemas contained in the <xref:System.Xml.Schema.XmlSchemaSet> has been altered, as long as no schemas were added or removed from the <xref:System.Xml.Schema.XmlSchemaSet>.\n  example:\n  - For an example of the IsCompiled property, see the <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method.\n  syntax:\n    content: public bool IsCompiled { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the schemas in the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> have been compiled since the last time a schema was added or removed from the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xml.Schema.XmlSchemaSet.IsCompiled*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaSet.NameTable\n  id: NameTable\n  parent: System.Xml.Schema.XmlSchemaSet\n  langs:\n  - csharp\n  name: NameTable\n  nameWithType: XmlSchemaSet.NameTable\n  fullName: System.Xml.Schema.XmlSchemaSet.NameTable\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Gets the default <xref:System.Xml.XmlNameTable> used by the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> when loading new XML Schema definition language (XSD) schemas.\n  syntax:\n    content: public System.Xml.XmlNameTable NameTable { get; }\n    return:\n      type: System.Xml.XmlNameTable\n      description: A table of atomized string objects.\n  overload: System.Xml.Schema.XmlSchemaSet.NameTable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)\n  id: Remove(System.Xml.Schema.XmlSchema)\n  parent: System.Xml.Schema.XmlSchemaSet\n  langs:\n  - csharp\n  name: Remove(XmlSchema)\n  nameWithType: XmlSchemaSet.Remove(XmlSchema)\n  fullName: System.Xml.Schema.XmlSchemaSet.Remove(XmlSchema)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Removes the specified XML Schema definition language (XSD) schema from the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n  remarks: Removing a schema from the <xref:System.Xml.Schema.XmlSchemaSet> sets the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property to `false`.\n  example:\n  - \"The following example illustrates adding multiple schemas to an <xref:System.Xml.Schema.XmlSchemaSet>, then removing one of the schemas using the Remove method.  \\n  \\n```vb#  \\nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \\nschemaSet.Add(\\\"http://www.contoso.com/retail\\\", \\\"http://www.contoso.com/retail.xsd\\\")  \\nschemaSet.Add(\\\"http://www.contoso.com/books\\\", \\\"http://www.contoso.com/books.xsd\\\")  \\nschemaSet.Add(\\\"http://www.contoso.com/music\\\", \\\"http://www.contoso.com/music.xsd\\\")  \\n  \\nDim schema As XmlSchema  \\n  \\nFor Each schema In schemaSet.Schemas()  \\n  \\n    If schema.TargetNamespace = \\\"http://www.contoso.com/music\\\" Then  \\n        schemaSet.Remove(schema)  \\n    End If  \\n  \\nNext  \\n```  \\n  \\n```c#  \\nXmlSchemaSet schemaSet = new XmlSchemaSet();  \\nschemaSet.Add(\\\"http://www.contoso.com/retail\\\", \\\"http://www.contoso.com/retail.xsd\\\");  \\nschemaSet.Add(\\\"http://www.contoso.com/books\\\", \\\"http://www.contoso.com/books.xsd\\\");  \\nschemaSet.Add(\\\"http://www.contoso.com/music\\\", \\\"http://www.contoso.com/music.xsd\\\");  \\n  \\nforeach (XmlSchema schema in schemaSet.Schemas())  \\n{  \\n    if (schema.TargetNamespace == \\\"http://www.contoso.com/music\\\")  \\n    {  \\n        schemaSet.Remove(schema);  \\n    }  \\n}  \\n```\"\n  syntax:\n    content: public System.Xml.Schema.XmlSchema Remove (System.Xml.Schema.XmlSchema schema);\n    parameters:\n    - id: schema\n      type: System.Xml.Schema.XmlSchema\n      description: The <xref:System.Xml.Schema.XmlSchema> object to remove from the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n    return:\n      type: System.Xml.Schema.XmlSchema\n      description: The <xref:System.Xml.Schema.XmlSchema> object removed from the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the schema was not found in the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n  overload: System.Xml.Schema.XmlSchemaSet.Remove*\n  exceptions:\n  - type: System.Xml.Schema.XmlSchemaException\n    commentId: T:System.Xml.Schema.XmlSchemaException\n    description: The schema is not a valid schema.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <xref:System.Xml.Schema.XmlSchema> passed as a parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)\n  id: RemoveRecursive(System.Xml.Schema.XmlSchema)\n  parent: System.Xml.Schema.XmlSchemaSet\n  langs:\n  - csharp\n  name: RemoveRecursive(XmlSchema)\n  nameWithType: XmlSchemaSet.RemoveRecursive(XmlSchema)\n  fullName: System.Xml.Schema.XmlSchemaSet.RemoveRecursive(XmlSchema)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Removes the specified XML Schema definition language (XSD) schema and all the schemas it imports from the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n  remarks: \"The RemoveRecursive method removes the specified schema and all the schemas it imports from the <xref:System.Xml.Schema.XmlSchemaSet>, as long as there are no dependencies on the schema or its imported schemas. If there are dependencies on the schema or its imported schemas in the <xref:System.Xml.Schema.XmlSchemaSet>, nothing is removed and RemoveRecursive returns `false`. If `false` is returned and a <xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler> is defined, a warning is sent to the event handler describing the dependencies.  \\n  \\n If the specified schema imports other schemas and the specified schema was previously removed with the <xref:System.Xml.Schema.XmlSchemaSet.Remove%2A> method, the RemoveRecursive method will not remove the imported schemas and will return `false`. For example, if `parentSchema` imports `childSchema1` and `childSchema2` the following code will only remove `parentSchema`, but not the imported `childSchema1` and `childSchema2` schemas:  \\n  \\n```  \\nXmlSchemaSet ss = new XmlSchemaSet();  \\nXmlSchema xs = XmlSchema.Read(XmlReader.Create(\\\"parentSchema.xsd\\\"), null);  \\nss.Add(xs);  \\nss.Compile();  \\nss.Remove(xs);  \\nss.Compile();  \\nss.RemoveRecursive(xs);  \\nss.Compile();  \\n```  \\n  \\n The following code will remove the `parentSchema` and the imported schemas:  \\n  \\n```  \\nXmlSchemaSet ss = new XmlSchemaSet();  \\nXmlSchema xs = XmlSchema.Read(XmlReader.Create(\\\"parentSchema.xsd\\\"), null);  \\nss.Add(xs);  \\nss.Compile();  \\nss.RemoveRecursive(xs);  \\nss.Compile();  \\n```  \\n  \\n The RemoveRecursive method has no effect on the state of the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property.\"\n  example:\n  - \"The following code example illustrates adding multiple schemas to an <xref:System.Xml.Schema.XmlSchemaSet>, then removing one of the schemas and all the schemas it imports using the RemoveRecursive method.  \\n  \\n```vb#  \\nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \\nschemaSet.Add(\\\"http://www.contoso.com/retail\\\", \\\"http://www.contoso.com/retail.xsd\\\")  \\nschemaSet.Add(\\\"http://www.contoso.com/books\\\", \\\"http://www.contoso.com/books.xsd\\\")  \\nschemaSet.Add(\\\"http://www.contoso.com/music\\\", \\\"http://www.contoso.com/music.xsd\\\")  \\n  \\nDim schema As XmlSchema  \\n  \\nFor Each schema In schemaSet.Schemas()  \\n  \\n    If schema.TargetNamespace = \\\"http://www.contoso.com/music\\\" Then  \\n        schemaSet.RemoveRecursive(schema)  \\n    End If  \\n  \\nNext  \\n```  \\n  \\n```c#  \\nXmlSchemaSet schemaSet = new XmlSchemaSet();  \\nschemaSet.Add(\\\"http://www.contoso.com/retail\\\", \\\"http://www.contoso.com/retail.xsd\\\");  \\nschemaSet.Add(\\\"http://www.contoso.com/books\\\", \\\"http://www.contoso.com/books.xsd\\\");  \\nschemaSet.Add(\\\"http://www.contoso.com/music\\\", \\\"http://www.contoso.com/music.xsd\\\");  \\n  \\nforeach (XmlSchema schema in schemaSet.Schemas())  \\n{  \\n    if (schema.TargetNamespace == \\\"http://www.contoso.com/music\\\")  \\n    {  \\n        schemaSet.RemoveRecursive(schema);  \\n    }  \\n}  \\n```\"\n  syntax:\n    content: public bool RemoveRecursive (System.Xml.Schema.XmlSchema schemaToRemove);\n    parameters:\n    - id: schemaToRemove\n      type: System.Xml.Schema.XmlSchema\n      description: The <xref:System.Xml.Schema.XmlSchema> object to remove from the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Xml.Schema.XmlSchema> object and all its imports were successfully removed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xml.Schema.XmlSchemaSet.RemoveRecursive*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <xref:System.Xml.Schema.XmlSchema> passed as a parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)\n  id: Reprocess(System.Xml.Schema.XmlSchema)\n  parent: System.Xml.Schema.XmlSchemaSet\n  langs:\n  - csharp\n  name: Reprocess(XmlSchema)\n  nameWithType: XmlSchemaSet.Reprocess(XmlSchema)\n  fullName: System.Xml.Schema.XmlSchemaSet.Reprocess(XmlSchema)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Reprocesses an XML Schema definition language (XSD) schema that already exists in the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n  remarks: \"Reprocessing a schema performs all the preprocessing steps performed on a schema when the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method is called. If the call to Reprocess is successful, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to `false`.  \\n  \\n The Reprocess method should be used after a schema in the <xref:System.Xml.Schema.XmlSchemaSet> has been modified, after the <xref:System.Xml.Schema.XmlSchemaSet> has performed compilation.  \\n  \\n> [!NOTE]\\n>  You need to call the Reprocess method if you have changed a schema (or one of its includes/imports) after adding it to the <xref:System.Xml.Schema.XmlSchemaSet>. The Reprocess method will check the schema for structural validity according to the rules of W3C XML Schema. However, it will not perform a full validation check. It will also resolve references to internal and external schema components. Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>. Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects while included schemas are made part of the including <xref:System.Xml.Schema.XmlSchema>. If the call to reprocess is successful, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to false.\"\n  example:\n  - \"The following example illustrates reprocessing a schema added to the <xref:System.Xml.Schema.XmlSchemaSet>. After the <xref:System.Xml.Schema.XmlSchemaSet> is compiled using the <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> method, and the schema added to the <xref:System.Xml.Schema.XmlSchemaSet> is modified, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property will be set to `true`, even though a schema in the <xref:System.Xml.Schema.XmlSchemaSet> has been modified. Calling the Reprocess method performs all the preprocessing performed by the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method and sets the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property to `false`.  \\n  \\n```vb#  \\nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \\nDim schema As XmlSchema = schemaSet.Add(\\\"http://www.contoso.com/books\\\", \\\"http://www.contoso.com/books.xsd\\\")  \\nschemaSet.Compile()  \\n  \\nDim element As XmlSchemaElement = New XmlSchemaElement()  \\nschema.Items.Add(element)  \\nelement.Name = \\\"book\\\"  \\nelement.SchemaTypeName = New XmlQualifiedName(\\\"string\\\", \\\"http://www.w3.org/2001/XMLSchema\\\")  \\n  \\nschemaSet.Reprocess(schema)  \\n```  \\n  \\n```c#  \\nXmlSchemaSet schemaSet = new XmlSchemaSet();  \\nXmlSchema schema = schemaSet.Add(\\\"http://www.contoso.com/books\\\", \\\"http://www.contoso.com/books.xsd\\\");  \\nschemaSet.Compile();  \\n  \\nXmlSchemaElement element = new XmlSchemaElement();  \\nschema.Items.Add(element);  \\nelement.Name = \\\"book\\\";  \\nelement.SchemaTypeName = new XmlQualifiedName(\\\"string\\\", \\\"http://www.w3.org/2001/XMLSchema\\\");  \\n  \\nschemaSet.Reprocess(schema);  \\n```\"\n  syntax:\n    content: public System.Xml.Schema.XmlSchema Reprocess (System.Xml.Schema.XmlSchema schema);\n    parameters:\n    - id: schema\n      type: System.Xml.Schema.XmlSchema\n      description: The schema to reprocess.\n    return:\n      type: System.Xml.Schema.XmlSchema\n      description: An <xref:System.Xml.Schema.XmlSchema> object if the schema is a valid schema. If the schema is not valid and a <xref href=\"System.Xml.Schema.ValidationEventHandler\"></xref> is specified, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned and the appropriate validation event is raised. Otherwise, an <xref href=\"System.Xml.Schema.XmlSchemaException\"></xref> is thrown.\n  overload: System.Xml.Schema.XmlSchemaSet.Reprocess*\n  exceptions:\n  - type: System.Xml.Schema.XmlSchemaException\n    commentId: T:System.Xml.Schema.XmlSchemaException\n    description: The schema is not valid.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <xref:System.Xml.Schema.XmlSchema> object passed as a parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <xref:System.Xml.Schema.XmlSchema> object passed as a parameter does not already exist in the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaSet.Schemas\n  id: Schemas\n  parent: System.Xml.Schema.XmlSchemaSet\n  langs:\n  - csharp\n  name: Schemas()\n  nameWithType: XmlSchemaSet.Schemas()\n  fullName: System.Xml.Schema.XmlSchemaSet.Schemas()\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Returns a collection of all the XML Schema definition language (XSD) schemas in the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n  remarks: \"This method returns schemas that were added indirectly to the <xref:System.Xml.Schema.XmlSchemaSet> because they were imported.  \\n  \\n> [!NOTE]\\n>  The Schemas method is the equivalent of the <xref:System.Xml.Schema.XmlSchemaCollection.GetEnumerator%2A> method of the obsolete <xref:System.Xml.Schema.XmlSchemaCollection>.\"\n  example:\n  - \"The following example illustrates how to iterate over all the schemas in the <xref:System.Xml.Schema.XmlSchemaSet>.  \\n  \\n```vb#  \\nDim schemaSet As XmlSchemaSet = New XmlSchemaSet  \\nschemaSet.Add(\\\"http://www.contoso.com/books\\\", \\\"http://www.contoso.com/books.xsd\\\")  \\n  \\nDim schema As XmlSchema  \\n  \\nFor Each schema In schemaSet.Schemas()  \\n  \\n    schema.Write(Console.Out)  \\n  \\nNext  \\n```  \\n  \\n```c#  \\nXmlSchemaSet schemaSet = new XmlSchemaSet();  \\nschemaSet.Add(\\\"http://www.contoso.com/books\\\", \\\"http://www.contoso.com/books.xsd\\\");  \\n  \\nforeach (XmlSchema schema in schemaSet.Schemas())  \\n{  \\n    schema.Write(Console.Out);  \\n}  \\n```\"\n  syntax:\n    content: public System.Collections.ICollection Schemas ();\n    parameters: []\n    return:\n      type: System.Collections.ICollection\n      description: An <xref:System.Collections.ICollection> object containing all the schemas that have been added to the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>. If no schemas have been added to the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>, an empty <xref:System.Collections.ICollection> object is returned.\n  overload: System.Xml.Schema.XmlSchemaSet.Schemas*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaSet.Schemas(System.String)\n  id: Schemas(System.String)\n  parent: System.Xml.Schema.XmlSchemaSet\n  langs:\n  - csharp\n  name: Schemas(String)\n  nameWithType: XmlSchemaSet.Schemas(String)\n  fullName: System.Xml.Schema.XmlSchemaSet.Schemas(String)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Returns a collection of all the XML Schema definition language (XSD) schemas in the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> that belong to the given namespace.\n  remarks: \"If the `targetNamespace` parameter is `null` or <xref:System.String.Empty>, then all schemas without a namespace are returned.  \\n  \\n This method returns schemas that were added indirectly to the <xref:System.Xml.Schema.XmlSchemaSet> because they were imported.  \\n  \\n> [!NOTE]\\n>  The Schemas method is the equivalent of the <xref:System.Xml.Schema.XmlSchemaCollection.Item%2A> method of the obsolete <xref:System.Xml.Schema.XmlSchemaCollection>.\"\n  example:\n  - \"The following example illustrates how to iterate over all the schemas in the http://www.contoso.com/books namespace in the <xref:System.Xml.Schema.XmlSchemaSet>.  \\n  \\n```vb#  \\nDim schemaSet As XmlSchemaSet = New XmlSchemaSet  \\nschemaSet.Add(\\\"http://www.contoso.com/books\\\", \\\"http://www.contoso.com/books.xsd\\\")  \\n  \\nDim schema As XmlSchema  \\n  \\nFor Each schema In schemaSet.Schemas(\\\"http://www.contoso.com/books\\\")  \\n  \\n    schema.Write(Console.Out)  \\n  \\nNext  \\n```  \\n  \\n```c#  \\nXmlSchemaSet schemaSet = new XmlSchemaSet();  \\nschemaSet.Add(\\\"http://www.contoso.com/books\\\", \\\"http://www.contoso.com/books.xsd\\\");  \\n  \\nforeach (XmlSchema schema in schemaSet.Schemas(\\\"http://www.contoso.com/books\\\"))  \\n{  \\n    schema.Write(Console.Out);  \\n}  \\n```\"\n  syntax:\n    content: public System.Collections.ICollection Schemas (string targetNamespace);\n    parameters:\n    - id: targetNamespace\n      type: System.String\n      description: The schema `targetNamespace` property.\n    return:\n      type: System.Collections.ICollection\n      description: An <xref:System.Collections.ICollection> object containing all the schemas that have been added to the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> that belong to the given namespace. If no schemas have been added to the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>, an empty <xref:System.Collections.ICollection> object is returned.\n  overload: System.Xml.Schema.XmlSchemaSet.Schemas*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaSet.ValidationEventHandler\n  id: ValidationEventHandler\n  parent: System.Xml.Schema.XmlSchemaSet\n  langs:\n  - csharp\n  name: ValidationEventHandler\n  nameWithType: XmlSchemaSet.ValidationEventHandler\n  fullName: System.Xml.Schema.XmlSchemaSet.ValidationEventHandler\n  type: Event\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Specifies an event handler for receiving information about XML Schema definition language (XSD) schema validation errors.\n  remarks: \"Sets an event handler for receiving information about schema validation errors when the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> or <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> methods of the <xref:System.Xml.Schema.XmlSchemaSet> are called.  \\n  \\n If an event handler is not defined, an <xref:System.Xml.Schema.XmlSchemaException> is thrown on any validation errors where the <xref:System.Xml.Schema.XmlSeverityType> is <xref:System.Xml.Schema.XmlSeverityType>. Exceptions are not thrown for validation errors with an <xref:System.Xml.Schema.XmlSeverityType> of <xref:System.Xml.Schema.XmlSeverityType>.\"\n  example:\n  - \"The following code example illustrates adding a ValidationEventHandler to capture errors and warnings when validating an XML document against a schema.  \\n  \\n [!code-cs[XmlSchemaSetOverall Example#1](~/add/codesnippet/csharp/e-system.xml.schema.xmls_2_1.cs)]\\n [!code-cpp[XmlSchemaSetOverall Example#1](~/add/codesnippet/cpp/e-system.xml.schema.xmls_2_1.cpp)]\\n [!code-vb[XmlSchemaSetOverall Example#1](~/add/codesnippet/visualbasic/e-system.xml.schema.xmls_2_1.vb)]  \\n  \\n The example uses the books.xml file as an input.  \\n  \\n [!code-xml[XmlSchemaSetOverall Example#2](~/add/codesnippet/xml/e-system.xml.schema.xmls_2_2.xml)]  \\n  \\n The example uses the books.xsd file as an input.  \\n  \\n [!code-xml[XmlSchemaSetOverall Example#3](~/add/codesnippet/xml/e-system.xml.schema.xmls_2_3.xsd)]\"\n  syntax:\n    content: public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;\n    return:\n      type: System.Xml.Schema.ValidationEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaSet.XmlResolver\n  id: XmlResolver\n  parent: System.Xml.Schema.XmlSchemaSet\n  langs:\n  - csharp\n  name: XmlResolver\n  nameWithType: XmlSchemaSet.XmlResolver\n  fullName: System.Xml.Schema.XmlSchemaSet.XmlResolver\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Sets the <xref href=\"System.Xml.XmlResolver\"></xref> used to resolve namespaces or locations referenced in include and import elements of a schema.\n  remarks: \"The <xref:System.Xml.XmlResolver> of an <xref:System.Xml.Schema.XmlSchemaSet> is used to resolve namespaces or locations referenced in include and import elements of a schema, any time a schema is added using the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> or <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> methods.  \\n  \\n> [!IMPORTANT]\\n>  External namespaces or locations referenced in include, import, and redefine elements of a schema are resolved with respect to the base URI of the schema that includes or imports them. For example, if the base URI of the including or importing schema is empty or `null`, the external locations are resolved with respect to the current directory. The <xref:System.Xml.XmlUrlResolver> class is used to resolve external schemas by default. To disable resolution of include, import, and redefine elements of a schema, set the XmlResolver property to `null`.\"\n  syntax:\n    content: public System.Xml.XmlResolver XmlResolver { set; }\n    return:\n      type: System.Xml.XmlResolver\n      description: The <xref href=\"System.Xml.XmlResolver\"></xref> used to resolve namespaces or locations referenced in include and import elements of a schema.\n  overload: System.Xml.Schema.XmlSchemaSet.XmlResolver*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Xml.Schema.XmlSchemaException\n  parent: System.Xml.Schema\n  isExternal: false\n  name: XmlSchemaException\n  nameWithType: XmlSchemaException\n  fullName: System.Xml.Schema.XmlSchemaException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Xml.Schema.XmlSchemaSet.#ctor\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: XmlSchemaSet()\n  nameWithType: XmlSchemaSet.XmlSchemaSet()\n  fullName: System.Xml.Schema.XmlSchemaSet.XmlSchemaSet()\n- uid: System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: XmlSchemaSet(XmlNameTable)\n  nameWithType: XmlSchemaSet.XmlSchemaSet(XmlNameTable)\n  fullName: System.Xml.Schema.XmlSchemaSet.XmlSchemaSet(XmlNameTable)\n- uid: System.Xml.XmlNameTable\n  parent: System.Xml\n  isExternal: true\n  name: XmlNameTable\n  nameWithType: XmlNameTable\n  fullName: System.Xml.XmlNameTable\n- uid: System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: Add(XmlSchema)\n  nameWithType: XmlSchemaSet.Add(XmlSchema)\n  fullName: System.Xml.Schema.XmlSchemaSet.Add(XmlSchema)\n- uid: System.Xml.Schema.XmlSchema\n  parent: System.Xml.Schema\n  isExternal: true\n  name: XmlSchema\n  nameWithType: XmlSchema\n  fullName: System.Xml.Schema.XmlSchema\n- uid: System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: Add(XmlSchemaSet)\n  nameWithType: XmlSchemaSet.Add(XmlSchemaSet)\n  fullName: System.Xml.Schema.XmlSchemaSet.Add(XmlSchemaSet)\n- uid: System.Xml.Schema.XmlSchemaSet\n  parent: System.Xml.Schema\n  isExternal: false\n  name: XmlSchemaSet\n  nameWithType: XmlSchemaSet\n  fullName: System.Xml.Schema.XmlSchemaSet\n- uid: System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: Add(String,String)\n  nameWithType: XmlSchemaSet.Add(String,String)\n  fullName: System.Xml.Schema.XmlSchemaSet.Add(String,String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: Add(String,XmlReader)\n  nameWithType: XmlSchemaSet.Add(String,XmlReader)\n  fullName: System.Xml.Schema.XmlSchemaSet.Add(String,XmlReader)\n- uid: System.Xml.XmlReader\n  parent: System.Xml\n  isExternal: true\n  name: XmlReader\n  nameWithType: XmlReader\n  fullName: System.Xml.XmlReader\n- uid: System.Xml.Schema.XmlSchemaSet.CompilationSettings\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: CompilationSettings\n  nameWithType: XmlSchemaSet.CompilationSettings\n  fullName: System.Xml.Schema.XmlSchemaSet.CompilationSettings\n- uid: System.Xml.Schema.XmlSchemaCompilationSettings\n  parent: System.Xml.Schema\n  isExternal: false\n  name: XmlSchemaCompilationSettings\n  nameWithType: XmlSchemaCompilationSettings\n  fullName: System.Xml.Schema.XmlSchemaCompilationSettings\n- uid: System.Xml.Schema.XmlSchemaSet.Compile\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: Compile()\n  nameWithType: XmlSchemaSet.Compile()\n  fullName: System.Xml.Schema.XmlSchemaSet.Compile()\n- uid: System.Xml.Schema.XmlSchemaSet.Contains(System.String)\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: Contains(String)\n  nameWithType: XmlSchemaSet.Contains(String)\n  fullName: System.Xml.Schema.XmlSchemaSet.Contains(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: Contains(XmlSchema)\n  nameWithType: XmlSchemaSet.Contains(XmlSchema)\n  fullName: System.Xml.Schema.XmlSchemaSet.Contains(XmlSchema)\n- uid: System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: CopyTo(XmlSchema[],Int32)\n  nameWithType: XmlSchemaSet.CopyTo(XmlSchema[],Int32)\n  fullName: System.Xml.Schema.XmlSchemaSet.CopyTo(XmlSchema[],Int32)\n- uid: System.Xml.Schema.XmlSchema[]\n  parent: System.Xml.Schema\n  isExternal: true\n  name: XmlSchema\n  nameWithType: XmlSchema\n  fullName: System.Xml.Schema.XmlSchema[]\n  spec.csharp:\n  - uid: System.Xml.Schema.XmlSchema\n    name: XmlSchema\n    nameWithType: XmlSchema\n    fullName: XmlSchema[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Xml.Schema.XmlSchemaSet.Count\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: Count\n  nameWithType: XmlSchemaSet.Count\n  fullName: System.Xml.Schema.XmlSchemaSet.Count\n- uid: System.Xml.Schema.XmlSchemaSet.GlobalAttributes\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: GlobalAttributes\n  nameWithType: XmlSchemaSet.GlobalAttributes\n  fullName: System.Xml.Schema.XmlSchemaSet.GlobalAttributes\n- uid: System.Xml.Schema.XmlSchemaObjectTable\n  parent: System.Xml.Schema\n  isExternal: false\n  name: XmlSchemaObjectTable\n  nameWithType: XmlSchemaObjectTable\n  fullName: System.Xml.Schema.XmlSchemaObjectTable\n- uid: System.Xml.Schema.XmlSchemaSet.GlobalElements\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: GlobalElements\n  nameWithType: XmlSchemaSet.GlobalElements\n  fullName: System.Xml.Schema.XmlSchemaSet.GlobalElements\n- uid: System.Xml.Schema.XmlSchemaSet.GlobalTypes\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: GlobalTypes\n  nameWithType: XmlSchemaSet.GlobalTypes\n  fullName: System.Xml.Schema.XmlSchemaSet.GlobalTypes\n- uid: System.Xml.Schema.XmlSchemaSet.IsCompiled\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: IsCompiled\n  nameWithType: XmlSchemaSet.IsCompiled\n  fullName: System.Xml.Schema.XmlSchemaSet.IsCompiled\n- uid: System.Xml.Schema.XmlSchemaSet.NameTable\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: NameTable\n  nameWithType: XmlSchemaSet.NameTable\n  fullName: System.Xml.Schema.XmlSchemaSet.NameTable\n- uid: System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: Remove(XmlSchema)\n  nameWithType: XmlSchemaSet.Remove(XmlSchema)\n  fullName: System.Xml.Schema.XmlSchemaSet.Remove(XmlSchema)\n- uid: System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: RemoveRecursive(XmlSchema)\n  nameWithType: XmlSchemaSet.RemoveRecursive(XmlSchema)\n  fullName: System.Xml.Schema.XmlSchemaSet.RemoveRecursive(XmlSchema)\n- uid: System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: Reprocess(XmlSchema)\n  nameWithType: XmlSchemaSet.Reprocess(XmlSchema)\n  fullName: System.Xml.Schema.XmlSchemaSet.Reprocess(XmlSchema)\n- uid: System.Xml.Schema.XmlSchemaSet.Schemas\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: Schemas()\n  nameWithType: XmlSchemaSet.Schemas()\n  fullName: System.Xml.Schema.XmlSchemaSet.Schemas()\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: true\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n- uid: System.Xml.Schema.XmlSchemaSet.Schemas(System.String)\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: Schemas(String)\n  nameWithType: XmlSchemaSet.Schemas(String)\n  fullName: System.Xml.Schema.XmlSchemaSet.Schemas(String)\n- uid: System.Xml.Schema.XmlSchemaSet.ValidationEventHandler\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: ValidationEventHandler\n  nameWithType: XmlSchemaSet.ValidationEventHandler\n  fullName: System.Xml.Schema.XmlSchemaSet.ValidationEventHandler\n- uid: System.Xml.Schema.ValidationEventHandler\n  parent: System.Xml.Schema\n  isExternal: false\n  name: ValidationEventHandler\n  nameWithType: ValidationEventHandler\n  fullName: System.Xml.Schema.ValidationEventHandler\n- uid: System.Xml.Schema.XmlSchemaSet.XmlResolver\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: XmlResolver\n  nameWithType: XmlSchemaSet.XmlResolver\n  fullName: System.Xml.Schema.XmlSchemaSet.XmlResolver\n- uid: System.Xml.XmlResolver\n  parent: System.Xml\n  isExternal: false\n  name: XmlResolver\n  nameWithType: XmlResolver\n  fullName: System.Xml.XmlResolver\n- uid: System.Xml.Schema.XmlSchemaSet.#ctor*\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: XmlSchemaSet\n  nameWithType: XmlSchemaSet.XmlSchemaSet\n- uid: System.Xml.Schema.XmlSchemaSet.Add*\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: Add\n  nameWithType: XmlSchemaSet.Add\n- uid: System.Xml.Schema.XmlSchemaSet.CompilationSettings*\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: CompilationSettings\n  nameWithType: XmlSchemaSet.CompilationSettings\n- uid: System.Xml.Schema.XmlSchemaSet.Compile*\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: Compile\n  nameWithType: XmlSchemaSet.Compile\n- uid: System.Xml.Schema.XmlSchemaSet.Contains*\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: Contains\n  nameWithType: XmlSchemaSet.Contains\n- uid: System.Xml.Schema.XmlSchemaSet.CopyTo*\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: CopyTo\n  nameWithType: XmlSchemaSet.CopyTo\n- uid: System.Xml.Schema.XmlSchemaSet.Count*\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: Count\n  nameWithType: XmlSchemaSet.Count\n- uid: System.Xml.Schema.XmlSchemaSet.GlobalAttributes*\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: GlobalAttributes\n  nameWithType: XmlSchemaSet.GlobalAttributes\n- uid: System.Xml.Schema.XmlSchemaSet.GlobalElements*\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: GlobalElements\n  nameWithType: XmlSchemaSet.GlobalElements\n- uid: System.Xml.Schema.XmlSchemaSet.GlobalTypes*\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: GlobalTypes\n  nameWithType: XmlSchemaSet.GlobalTypes\n- uid: System.Xml.Schema.XmlSchemaSet.IsCompiled*\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: IsCompiled\n  nameWithType: XmlSchemaSet.IsCompiled\n- uid: System.Xml.Schema.XmlSchemaSet.NameTable*\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: NameTable\n  nameWithType: XmlSchemaSet.NameTable\n- uid: System.Xml.Schema.XmlSchemaSet.Remove*\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: Remove\n  nameWithType: XmlSchemaSet.Remove\n- uid: System.Xml.Schema.XmlSchemaSet.RemoveRecursive*\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: RemoveRecursive\n  nameWithType: XmlSchemaSet.RemoveRecursive\n- uid: System.Xml.Schema.XmlSchemaSet.Reprocess*\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: Reprocess\n  nameWithType: XmlSchemaSet.Reprocess\n- uid: System.Xml.Schema.XmlSchemaSet.Schemas*\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: Schemas\n  nameWithType: XmlSchemaSet.Schemas\n- uid: System.Xml.Schema.XmlSchemaSet.XmlResolver*\n  parent: System.Xml.Schema.XmlSchemaSet\n  isExternal: false\n  name: XmlResolver\n  nameWithType: XmlSchemaSet.XmlResolver\n"}