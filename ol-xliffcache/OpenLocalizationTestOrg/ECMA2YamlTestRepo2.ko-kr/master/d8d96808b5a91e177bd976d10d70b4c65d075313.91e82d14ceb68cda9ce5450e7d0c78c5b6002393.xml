{"nodes":[{"pos":[609,787],"content":"Specifies the key derivation function that the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.ECDiffieHellmanCng\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class will use to convert secret agreements into key material.","needQuote":true,"needEscape":true,"source":"Specifies the key derivation function that the <xref href=\"System.Security.Cryptography.ECDiffieHellmanCng\"></xref> class will use to convert secret agreements into key material."},{"pos":[800,1468],"content":"The ECDiffieHellmanKeyDerivationFunction enumeration defines the type of algorithm that will be used to transform a raw secret agreement into key material. The secret agreement is the value that is generated from a private key and the other party’s public key, as part of the key exchange. It is the seed value for the key material that is generated by the <xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial%2A> method.       The <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> property uses this enumeration to get the key derivation function for the <xref:System.Security.Cryptography.ECDiffieHellmanCng> class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ECDiffieHellmanKeyDerivationFunction enumeration defines the type of algorithm that will be used to transform a raw secret agreement into key material. The secret agreement is the value that is generated from a private key and the other party’s public key, as part of the key exchange. It is the seed value for the key material that is generated by the <xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial%2A> method.       The <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> property uses this enumeration to get the key derivation function for the <xref:System.Security.Cryptography.ECDiffieHellmanCng> class.","pos":[0,666],"nodes":[{"content":"The ECDiffieHellmanKeyDerivationFunction enumeration defines the type of algorithm that will be used to transform a raw secret agreement into key material.","pos":[0,155]},{"content":"The secret agreement is the value that is generated from a private key and the other party’s public key, as part of the key exchange.","pos":[156,289]},{"content":"It is the seed value for the key material that is generated by the &lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial%2A&gt; method.","pos":[290,440],"source":" It is the seed value for the key material that is generated by the <xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial%2A> method."},{"content":"The &lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt; property uses this enumeration to get the key derivation function for the &lt;xref:System.Security.Cryptography.ECDiffieHellmanCng&gt; class.","pos":[447,666],"source":"       The <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> property uses this enumeration to get the key derivation function for the <xref:System.Security.Cryptography.ECDiffieHellmanCng> class."}]}]},{"pos":[2032,2340],"content":"A hash algorithm is used to generate key material. The <xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm*> property specifies the name of the algorithm to use. If the algorithm name is not specified, <xref href=\"System.Security.Cryptography.SHA256\"></xref> is used as the default algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"A hash algorithm is used to generate key material.","pos":[0,50]},{"content":"The &lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm*&gt; property specifies the name of the algorithm to use.","pos":[51,177],"source":" The <xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm*> property specifies the name of the algorithm to use."},{"content":"If the algorithm name is not specified, <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.SHA256\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is used as the default algorithm.","pos":[178,308],"source":" If the algorithm name is not specified, <xref href=\"System.Security.Cryptography.SHA256\"></xref> is used as the default algorithm."}]},{"pos":[2353,2689],"content":"You can also specify the <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A> and <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> properties, but they are not required.       The amount of key material that is generated is equivalent to the size of the hash value for the specified algorithm.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can also specify the <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A> and <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> properties, but they are not required.       The amount of key material that is generated is equivalent to the size of the hash value for the specified algorithm.","pos":[0,334],"nodes":[{"content":"You can also specify the &lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A&gt; and &lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A&gt; properties, but they are not required.","pos":[0,210],"source":"You can also specify the <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A> and <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> properties, but they are not required."},{"content":"The amount of key material that is generated is equivalent to the size of the hash value for the specified algorithm.","pos":[217,334]}]}]},{"pos":[2828,2840],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3317,3910],"content":"A Hash-based Message Authentication Code (HMAC) algorithm is used to generate key material. The <xref:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey*> property specifies the key to use. Either this property must be set or the <xref:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey*> property must be set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>; otherwise, a <xref href=\"System.Security.Cryptography.CryptographicException\"></xref> is thrown when you use Hmac. If both properties are set, the secret agreement is used as the HMAC key.","needQuote":true,"needEscape":true,"nodes":[{"content":"A Hash-based Message Authentication Code (HMAC) algorithm is used to generate key material.","pos":[0,91]},{"content":"The &lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey<bpt id=\"p1\">*</bpt>&gt; property specifies the key to use. Either this property must be set or the &lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey<ept id=\"p1\">*</ept>&gt; property must be set to <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, a <bpt id=\"p3\">&lt;xref href=\"System.Security.Cryptography.CryptographicException\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> is thrown when you use Hmac.","pos":[92,519],"source":" The <xref:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey*> property specifies the key to use. Either this property must be set or the <xref:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey*> property must be set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>; otherwise, a <xref href=\"System.Security.Cryptography.CryptographicException\"></xref> is thrown when you use Hmac."},{"content":"If both properties are set, the secret agreement is used as the HMAC key.","pos":[520,593]}]},{"pos":[3923,4231],"content":"You can also specify the <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A> and <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> properties, but they are not required.       The amount of key material that is generated is equivalent to the size of the HMAC value.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can also specify the <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A> and <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> properties, but they are not required.       The amount of key material that is generated is equivalent to the size of the HMAC value.","pos":[0,306],"nodes":[{"content":"You can also specify the &lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A&gt; and &lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A&gt; properties, but they are not required.","pos":[0,210],"source":"You can also specify the <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A> and <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> properties, but they are not required."},{"content":"The amount of key material that is generated is equivalent to the size of the HMAC value.","pos":[217,306]}]}]},{"pos":[4370,4382],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4854,5200],"content":"The Transport Layer Security (TLS) protocol is used to generate key material. The <xref:System.Security.Cryptography.ECDiffieHellmanCng.Seed*> and <xref:System.Security.Cryptography.ECDiffieHellmanCng.Label*> properties must be set; otherwise, a <xref href=\"System.Security.Cryptography.CryptographicException\"></xref> is thrown when you use Tls.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Transport Layer Security (TLS) protocol is used to generate key material.","pos":[0,77]},{"content":"The &lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.Seed<bpt id=\"p1\">*</bpt>&gt; and &lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.Label<ept id=\"p1\">*</ept>&gt; properties must be set; otherwise, a <bpt id=\"p2\">&lt;xref href=\"System.Security.Cryptography.CryptographicException\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is thrown when you use Tls.","pos":[78,346],"source":" The <xref:System.Security.Cryptography.ECDiffieHellmanCng.Seed*> and <xref:System.Security.Cryptography.ECDiffieHellmanCng.Label*> properties must be set; otherwise, a <xref href=\"System.Security.Cryptography.CryptographicException\"></xref> is thrown when you use Tls."}]},{"pos":[5212,5258],"content":"This value generates 160 bits of key material.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This value generates 160 bits of key material.","pos":[0,46]}]},{"pos":[5395,5407],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction\n  id: ECDiffieHellmanKeyDerivationFunction\n  children:\n  - System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash\n  - System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac\n  - System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls\n  langs:\n  - csharp\n  name: ECDiffieHellmanKeyDerivationFunction\n  nameWithType: ECDiffieHellmanKeyDerivationFunction\n  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction\n  type: Enum\n  summary: Specifies the key derivation function that the <xref href=\"System.Security.Cryptography.ECDiffieHellmanCng\"></xref> class will use to convert secret agreements into key material.\n  remarks: \"The ECDiffieHellmanKeyDerivationFunction enumeration defines the type of algorithm that will be used to transform a raw secret agreement into key material. The secret agreement is the value that is generated from a private key and the other party’s public key, as part of the key exchange. It is the seed value for the key material that is generated by the <xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial%2A> method.  \\n  \\n The <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> property uses this enumeration to get the key derivation function for the <xref:System.Security.Cryptography.ECDiffieHellmanCng> class.\"\n  syntax:\n    content: public enum ECDiffieHellmanKeyDerivationFunction\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash\n  id: Hash\n  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction\n  langs:\n  - csharp\n  name: Hash\n  nameWithType: ECDiffieHellmanKeyDerivationFunction.Hash\n  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash\n  type: Field\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: A hash algorithm is used to generate key material. The <xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm*> property specifies the name of the algorithm to use. If the algorithm name is not specified, <xref href=\"System.Security.Cryptography.SHA256\"></xref> is used as the default algorithm.\n  remarks: \"You can also specify the <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A> and <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> properties, but they are not required.  \\n  \\n The amount of key material that is generated is equivalent to the size of the hash value for the specified algorithm.\"\n  syntax:\n    content: Hash\n    return:\n      type: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac\n  id: Hmac\n  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction\n  langs:\n  - csharp\n  name: Hmac\n  nameWithType: ECDiffieHellmanKeyDerivationFunction.Hmac\n  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac\n  type: Field\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: A Hash-based Message Authentication Code (HMAC) algorithm is used to generate key material. The <xref:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey*> property specifies the key to use. Either this property must be set or the <xref:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey*> property must be set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>; otherwise, a <xref href=\"System.Security.Cryptography.CryptographicException\"></xref> is thrown when you use Hmac. If both properties are set, the secret agreement is used as the HMAC key.\n  remarks: \"You can also specify the <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A> and <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> properties, but they are not required.  \\n  \\n The amount of key material that is generated is equivalent to the size of the HMAC value.\"\n  syntax:\n    content: Hmac\n    return:\n      type: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls\n  id: Tls\n  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction\n  langs:\n  - csharp\n  name: Tls\n  nameWithType: ECDiffieHellmanKeyDerivationFunction.Tls\n  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls\n  type: Field\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: The Transport Layer Security (TLS) protocol is used to generate key material. The <xref:System.Security.Cryptography.ECDiffieHellmanCng.Seed*> and <xref:System.Security.Cryptography.ECDiffieHellmanCng.Label*> properties must be set; otherwise, a <xref href=\"System.Security.Cryptography.CryptographicException\"></xref> is thrown when you use Tls.\n  remarks: This value generates 160 bits of key material.\n  syntax:\n    content: Tls\n    return:\n      type: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash\n  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction\n  isExternal: false\n  name: Hash\n  nameWithType: ECDiffieHellmanKeyDerivationFunction.Hash\n  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash\n- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECDiffieHellmanKeyDerivationFunction\n  nameWithType: ECDiffieHellmanKeyDerivationFunction\n  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction\n- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac\n  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction\n  isExternal: false\n  name: Hmac\n  nameWithType: ECDiffieHellmanKeyDerivationFunction.Hmac\n  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac\n- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls\n  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction\n  isExternal: false\n  name: Tls\n  nameWithType: ECDiffieHellmanKeyDerivationFunction.Tls\n  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls\n"}