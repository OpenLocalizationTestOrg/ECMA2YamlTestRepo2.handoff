{"nodes":[{"pos":[825,906],"content":"Specifies the editor to use to change a property. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the editor to use to change a property. This class cannot be inherited.","pos":[0,81],"nodes":[{"content":"Specifies the editor to use to change a property.","pos":[0,49]},{"content":"This class cannot be inherited.","pos":[50,81]}]}]},{"pos":[919,1655],"content":"When editing the property, a visual designer should create a new instance of the specified editor through a dialog box or drop-down window.       Use the <xref:System.ComponentModel.EditorAttribute.EditorBaseTypeName%2A> property to find this editor's base type. The only available base type is <xref:System.Drawing.Design.UITypeEditor>.       Use the <xref:System.ComponentModel.EditorAttribute.EditorTypeName%2A> property to get the name of the type of editor associated with this attribute.       For general information on using attributes. see [Attributes](~/add/includes/ajax-current-ext-md.md). For more information on design-time attributes, see [Attributes and Design-Time Support](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When editing the property, a visual designer should create a new instance of the specified editor through a dialog box or drop-down window.","pos":[0,139]},{"content":"Use the &lt;xref:System.ComponentModel.EditorAttribute.EditorBaseTypeName%2A&gt; property to find this editor's base type.","pos":[146,262],"source":"       Use the <xref:System.ComponentModel.EditorAttribute.EditorBaseTypeName%2A> property to find this editor's base type."},{"content":"The only available base type is &lt;xref:System.Drawing.Design.UITypeEditor&gt;.","pos":[263,337],"source":" The only available base type is <xref:System.Drawing.Design.UITypeEditor>."},{"content":"Use the &lt;xref:System.ComponentModel.EditorAttribute.EditorTypeName%2A&gt; property to get the name of the type of editor associated with this attribute.","pos":[344,493],"source":"       Use the <xref:System.ComponentModel.EditorAttribute.EditorTypeName%2A> property to get the name of the type of editor associated with this attribute."},{"content":"For general information on using attributes.","pos":[500,544]},{"content":"see <bpt id=\"p1\">[</bpt>Attributes<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[545,601],"source":" see [Attributes](~/add/includes/ajax-current-ext-md.md)."},{"content":"For more information on design-time attributes, see <bpt id=\"p1\">[</bpt>Attributes and Design-Time Support<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[602,730],"source":" For more information on design-time attributes, see [Attributes and Design-Time Support](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[3329,3472],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.EditorAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the default editor, which is no editor.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.EditorAttribute\"></xref> class with the default editor, which is no editor."},{"pos":[4104,4255],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.EditorAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the type name and base type name of the editor.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.EditorAttribute\"></xref> class with the type name and base type name of the editor."},{"pos":[4268,4830],"content":"The `typeName` parameter must be in the <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName> format.       The <xref:System.Type> represented by the `typeName` parameter must either derive from or implement the base class.       The <xref:System.Type> represented by the `baseTypeName` parameter is used as a key to find a particular editor, because a data type can have more than one editor associated with it. This can be any class, but is typically <xref:System.Drawing.Design.UITypeEditor> or <xref:System.ComponentModel.ComponentEditor>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`typeName`</ph> parameter must be in the &lt;xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName&gt; format.","pos":[0,116],"source":"The `typeName` parameter must be in the <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName> format."},{"content":"The &lt;xref:System.Type&gt; represented by the <ph id=\"ph1\">`typeName`</ph> parameter must either derive from or implement the base class.","pos":[123,238],"source":"       The <xref:System.Type> represented by the `typeName` parameter must either derive from or implement the base class."},{"content":"The &lt;xref:System.Type&gt; represented by the <ph id=\"ph1\">`baseTypeName`</ph> parameter is used as a key to find a particular editor, because a data type can have more than one editor associated with it.","pos":[245,427],"source":"       The <xref:System.Type> represented by the `baseTypeName` parameter is used as a key to find a particular editor, because a data type can have more than one editor associated with it."},{"content":"This can be any class, but is typically &lt;xref:System.Drawing.Design.UITypeEditor&gt; or &lt;xref:System.ComponentModel.ComponentEditor&gt;.","pos":[428,558],"source":" This can be any class, but is typically <xref:System.Drawing.Design.UITypeEditor> or <xref:System.ComponentModel.ComponentEditor>."}]},{"pos":[4998,5042],"content":"The fully qualified type name of the editor.","needQuote":true,"needEscape":true,"nodes":[{"content":"The fully qualified type name of the editor.","pos":[0,44]}]},{"pos":[5111,5301],"content":"The fully qualified type name of the base class or interface to use as a lookup key for the editor. This class must be or derive from <xref href=\"System.Drawing.Design.UITypeEditor\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The fully qualified type name of the base class or interface to use as a lookup key for the editor.","pos":[0,99]},{"content":"This class must be or derive from <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Design.UITypeEditor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[100,190],"source":" This class must be or derive from <xref href=\"System.Drawing.Design.UITypeEditor\"></xref>."}]},{"pos":[5854,5990],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.EditorAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the type name and the base type.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.EditorAttribute\"></xref> class with the type name and the base type."},{"pos":[6003,6382],"content":"The `typeName` parameter must be in the <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName> format.       The <xref:System.Type> represented by the `typeName` must either derive from or implement the base class.       The `baseType` parameter is used as a key to find a particular editor, because a data type can have more than one editor associated with it.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`typeName`</ph> parameter must be in the &lt;xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName&gt; format.","pos":[0,116],"source":"The `typeName` parameter must be in the <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName> format."},{"content":"The &lt;xref:System.Type&gt; represented by the <ph id=\"ph1\">`typeName`</ph> must either derive from or implement the base class.","pos":[123,228],"source":"       The <xref:System.Type> represented by the `typeName` must either derive from or implement the base class."},{"content":"The <ph id=\"ph1\">`baseType`</ph> parameter is used as a key to find a particular editor, because a data type can have more than one editor associated with it.","pos":[235,375],"source":"       The `baseType` parameter is used as a key to find a particular editor, because a data type can have more than one editor associated with it."}]},{"pos":[6544,6588],"content":"The fully qualified type name of the editor.","needQuote":true,"needEscape":true,"nodes":[{"content":"The fully qualified type name of the editor.","pos":[0,44]}]},{"pos":[6651,6834],"content":"The <xref:System.Type> of the base class or interface to use as a lookup key for the editor. This class must be or derive from <xref href=\"System.Drawing.Design.UITypeEditor\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the base class or interface to use as a lookup key for the editor.","pos":[0,92],"source":"The <xref:System.Type> of the base class or interface to use as a lookup key for the editor."},{"content":"This class must be or derive from <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Design.UITypeEditor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[93,183],"source":" This class must be or derive from <xref href=\"System.Drawing.Design.UITypeEditor\"></xref>."}]},{"pos":[7377,7508],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.EditorAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the type and the base type.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.EditorAttribute\"></xref> class with the type and the base type."},{"pos":[7521,7781],"content":"The <xref:System.Type> represented by the `type` parameter must either derive from or implement the base class.       The `baseType` parameter is used as a key to find a particular editor, because a data type can have more than one editor associated with it.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Type&gt; represented by the <ph id=\"ph1\">`type`</ph> parameter must either derive from or implement the base class.","pos":[0,111],"source":"The <xref:System.Type> represented by the `type` parameter must either derive from or implement the base class."},{"content":"The <ph id=\"ph1\">`baseType`</ph> parameter is used as a key to find a particular editor, because a data type can have more than one editor associated with it.","pos":[118,258],"source":"       The `baseType` parameter is used as a key to find a particular editor, because a data type can have more than one editor associated with it."}]},{"pos":[7931,7991],"content":"A <xref:System.Type> that represents the type of the editor.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; that represents the type of the editor.","pos":[0,60],"source":"A <xref:System.Type> that represents the type of the editor."}]},{"pos":[8054,8237],"content":"The <xref:System.Type> of the base class or interface to use as a lookup key for the editor. This class must be or derive from <xref href=\"System.Drawing.Design.UITypeEditor\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the base class or interface to use as a lookup key for the editor.","pos":[0,92],"source":"The <xref:System.Type> of the base class or interface to use as a lookup key for the editor."},{"content":"This class must be or derive from <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Design.UITypeEditor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[93,183],"source":" This class must be or derive from <xref href=\"System.Drawing.Design.UITypeEditor\"></xref>."}]},{"pos":[8727,8812],"content":"Gets the name of the base class or interface serving as a lookup key for this editor.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the base class or interface serving as a lookup key for this editor.","pos":[0,85]}]},{"pos":[8824,9110],"content":"The EditorBaseTypeName property is an assembly qualified type name. The [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] provides both <xref:System.Drawing.Design.UITypeEditor> and <xref:System.ComponentModel.ComponentEditor> as valid base classes, but any value is valid here.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The EditorBaseTypeName property is an assembly qualified type name.","pos":[0,67]},{"content":"The <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> provides both &lt;xref:System.Drawing.Design.UITypeEditor&gt; and &lt;xref:System.ComponentModel.ComponentEditor&gt; as valid base classes, but any value is valid here.","pos":[68,286],"source":" The [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] provides both <xref:System.Drawing.Design.UITypeEditor> and <xref:System.ComponentModel.ComponentEditor> as valid base classes, but any value is valid here."}]},{"pos":[9233,9313],"content":"The name of the base class or interface serving as a lookup key for this editor.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the base class or interface serving as a lookup key for this editor.","pos":[0,80]}]},{"pos":[9796,9919],"content":"Gets the name of the editor class in the &lt;xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName&gt; format.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the editor class in the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> format.","pos":[0,123],"source":"Gets the name of the editor class in the &lt;xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName&gt; format."}]},{"pos":[10038,10156],"content":"The name of the editor class in the &lt;xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName&gt; format.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the editor class in the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> format.","pos":[0,118],"source":"The name of the editor class in the &lt;xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName&gt; format."}]},{"pos":[10647,10776],"content":"Returns whether the value of the given object is equal to the current <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.EditorAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns whether the value of the given object is equal to the current <xref href=\"System.ComponentModel.EditorAttribute\"></xref>."},{"pos":[10917,10958],"content":"The object to test the value equality of.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to test the value equality of.","pos":[0,41]}]},{"pos":[11017,11225],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the value of the given object is equal to that of the current object; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value of the given object is equal to that of the current object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11685,11725],"content":"Returns the hash code for this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]},{"pos":[11860,11894],"content":"A 32-bit signed integer hash code.","needQuote":true,"needEscape":true,"nodes":[{"content":"A 32-bit signed integer hash code.","pos":[0,34]}]},{"pos":[12330,12371],"content":"Gets a unique ID for this attribute type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a unique ID for this attribute type.","pos":[0,41]}]},{"pos":[12383,12680],"content":"The TypeId property is used by filtering algorithms to identify two attributes that are the same type. For most attributes, this just returns the <xref:System.Type> instance for the attribute. <xref:System.ComponentModel.EditorAttribute> overrides this to include the type of the editor base type.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The TypeId property is used by filtering algorithms to identify two attributes that are the same type. For most attributes, this just returns the <xref:System.Type> instance for the attribute. <xref:System.ComponentModel.EditorAttribute> overrides this to include the type of the editor base type.","pos":[0,297],"nodes":[{"content":"The TypeId property is used by filtering algorithms to identify two attributes that are the same type.","pos":[0,102]},{"content":"For most attributes, this just returns the &lt;xref:System.Type&gt; instance for the attribute.","pos":[103,192],"source":" For most attributes, this just returns the <xref:System.Type> instance for the attribute."},{"content":"&lt;xref:System.ComponentModel.EditorAttribute&gt; overrides this to include the type of the editor base type.","pos":[193,297],"source":" <xref:System.ComponentModel.EditorAttribute> overrides this to include the type of the editor base type."}]}]},{"pos":[12800,12836],"content":"A unique ID for this attribute type.","needQuote":true,"needEscape":true,"nodes":[{"content":"A unique ID for this attribute type.","pos":[0,36]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.EditorAttribute\n  id: EditorAttribute\n  children:\n  - System.ComponentModel.EditorAttribute.#ctor\n  - System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)\n  - System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)\n  - System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)\n  - System.ComponentModel.EditorAttribute.EditorBaseTypeName\n  - System.ComponentModel.EditorAttribute.EditorTypeName\n  - System.ComponentModel.EditorAttribute.Equals(System.Object)\n  - System.ComponentModel.EditorAttribute.GetHashCode\n  - System.ComponentModel.EditorAttribute.TypeId\n  langs:\n  - csharp\n  name: EditorAttribute\n  nameWithType: EditorAttribute\n  fullName: System.ComponentModel.EditorAttribute\n  type: Class\n  summary: Specifies the editor to use to change a property. This class cannot be inherited.\n  remarks: \"When editing the property, a visual designer should create a new instance of the specified editor through a dialog box or drop-down window.  \\n  \\n Use the <xref:System.ComponentModel.EditorAttribute.EditorBaseTypeName%2A> property to find this editor's base type. The only available base type is <xref:System.Drawing.Design.UITypeEditor>.  \\n  \\n Use the <xref:System.ComponentModel.EditorAttribute.EditorTypeName%2A> property to get the name of the type of editor associated with this attribute.  \\n  \\n For general information on using attributes. see [Attributes](~/add/includes/ajax-current-ext-md.md). For more information on design-time attributes, see [Attributes and Design-Time Support](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following code example creates the `MyImage` class. The class is marked with an EditorAttribute that specifies the <xref:System.Drawing.Design.ImageEditor> as its editor.  \\n  \\n [!code-cs[Classic EditorAttribute Example#1](~/add/codesnippet/csharp/t-system.componentmodel._81_1.cs)]\\n [!code-cpp[Classic EditorAttribute Example#1](~/add/codesnippet/cpp/t-system.componentmodel._81_1.cpp)]\\n [!code-vb[Classic EditorAttribute Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._81_1.vb)]  \\n  \\n The following code example creates an instance of the `MyImage` class, gets the attributes for the class, and then prints the name of the editor used by `myNewImage`.  \\n  \\n [!code-cs[Classic EditorAttribute Example#2](~/add/codesnippet/csharp/t-system.componentmodel._81_2.cs)]\\n [!code-cpp[Classic EditorAttribute Example#2](~/add/codesnippet/cpp/t-system.componentmodel._81_2.cpp)]\\n [!code-vb[Classic EditorAttribute Example#2](~/add/codesnippet/visualbasic/t-system.componentmodel._81_2.vb)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.All, AllowMultiple=true, Inherited=true)]\n\n      public sealed class EditorAttribute : Attribute\n  inheritance:\n  - System.Attribute\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ComponentModel.EditorAttribute.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.EditorAttribute\n  langs:\n  - csharp\n  name: EditorAttribute()\n  nameWithType: EditorAttribute.EditorAttribute()\n  fullName: System.ComponentModel.EditorAttribute.EditorAttribute()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.EditorAttribute\"></xref> class with the default editor, which is no editor.\n  syntax:\n    content: public EditorAttribute ();\n    parameters: []\n  overload: System.ComponentModel.EditorAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.ComponentModel.EditorAttribute\n  langs:\n  - csharp\n  name: EditorAttribute(String,String)\n  nameWithType: EditorAttribute.EditorAttribute(String,String)\n  fullName: System.ComponentModel.EditorAttribute.EditorAttribute(String,String)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.EditorAttribute\"></xref> class with the type name and base type name of the editor.\n  remarks: \"The `typeName` parameter must be in the <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName> format.  \\n  \\n The <xref:System.Type> represented by the `typeName` parameter must either derive from or implement the base class.  \\n  \\n The <xref:System.Type> represented by the `baseTypeName` parameter is used as a key to find a particular editor, because a data type can have more than one editor associated with it. This can be any class, but is typically <xref:System.Drawing.Design.UITypeEditor> or <xref:System.ComponentModel.ComponentEditor>.\"\n  syntax:\n    content: public EditorAttribute (string typeName, string baseTypeName);\n    parameters:\n    - id: typeName\n      type: System.String\n      description: The fully qualified type name of the editor.\n    - id: baseTypeName\n      type: System.String\n      description: The fully qualified type name of the base class or interface to use as a lookup key for the editor. This class must be or derive from <xref href=\"System.Drawing.Design.UITypeEditor\"></xref>.\n  overload: System.ComponentModel.EditorAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)\n  id: '#ctor(System.String,System.Type)'\n  parent: System.ComponentModel.EditorAttribute\n  langs:\n  - csharp\n  name: EditorAttribute(String,Type)\n  nameWithType: EditorAttribute.EditorAttribute(String,Type)\n  fullName: System.ComponentModel.EditorAttribute.EditorAttribute(String,Type)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.EditorAttribute\"></xref> class with the type name and the base type.\n  remarks: \"The `typeName` parameter must be in the <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName> format.  \\n  \\n The <xref:System.Type> represented by the `typeName` must either derive from or implement the base class.  \\n  \\n The `baseType` parameter is used as a key to find a particular editor, because a data type can have more than one editor associated with it.\"\n  syntax:\n    content: public EditorAttribute (string typeName, Type baseType);\n    parameters:\n    - id: typeName\n      type: System.String\n      description: The fully qualified type name of the editor.\n    - id: baseType\n      type: System.Type\n      description: The <xref:System.Type> of the base class or interface to use as a lookup key for the editor. This class must be or derive from <xref href=\"System.Drawing.Design.UITypeEditor\"></xref>.\n  overload: System.ComponentModel.EditorAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)\n  id: '#ctor(System.Type,System.Type)'\n  parent: System.ComponentModel.EditorAttribute\n  langs:\n  - csharp\n  name: EditorAttribute(Type,Type)\n  nameWithType: EditorAttribute.EditorAttribute(Type,Type)\n  fullName: System.ComponentModel.EditorAttribute.EditorAttribute(Type,Type)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.EditorAttribute\"></xref> class with the type and the base type.\n  remarks: \"The <xref:System.Type> represented by the `type` parameter must either derive from or implement the base class.  \\n  \\n The `baseType` parameter is used as a key to find a particular editor, because a data type can have more than one editor associated with it.\"\n  syntax:\n    content: public EditorAttribute (Type type, Type baseType);\n    parameters:\n    - id: type\n      type: System.Type\n      description: A <xref:System.Type> that represents the type of the editor.\n    - id: baseType\n      type: System.Type\n      description: The <xref:System.Type> of the base class or interface to use as a lookup key for the editor. This class must be or derive from <xref href=\"System.Drawing.Design.UITypeEditor\"></xref>.\n  overload: System.ComponentModel.EditorAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.EditorAttribute.EditorBaseTypeName\n  id: EditorBaseTypeName\n  parent: System.ComponentModel.EditorAttribute\n  langs:\n  - csharp\n  name: EditorBaseTypeName\n  nameWithType: EditorAttribute.EditorBaseTypeName\n  fullName: System.ComponentModel.EditorAttribute.EditorBaseTypeName\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets the name of the base class or interface serving as a lookup key for this editor.\n  remarks: The EditorBaseTypeName property is an assembly qualified type name. The [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] provides both <xref:System.Drawing.Design.UITypeEditor> and <xref:System.ComponentModel.ComponentEditor> as valid base classes, but any value is valid here.\n  syntax:\n    content: public string EditorBaseTypeName { get; }\n    return:\n      type: System.String\n      description: The name of the base class or interface serving as a lookup key for this editor.\n  overload: System.ComponentModel.EditorAttribute.EditorBaseTypeName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.EditorAttribute.EditorTypeName\n  id: EditorTypeName\n  parent: System.ComponentModel.EditorAttribute\n  langs:\n  - csharp\n  name: EditorTypeName\n  nameWithType: EditorAttribute.EditorTypeName\n  fullName: System.ComponentModel.EditorAttribute.EditorTypeName\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets the name of the editor class in the &lt;xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName&gt; format.\n  syntax:\n    content: public string EditorTypeName { get; }\n    return:\n      type: System.String\n      description: The name of the editor class in the &lt;xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName&gt; format.\n  overload: System.ComponentModel.EditorAttribute.EditorTypeName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.EditorAttribute.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.ComponentModel.EditorAttribute\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: EditorAttribute.Equals(Object)\n  fullName: System.ComponentModel.EditorAttribute.Equals(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns whether the value of the given object is equal to the current <xref href=\"System.ComponentModel.EditorAttribute\"></xref>.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to test the value equality of.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value of the given object is equal to that of the current object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.EditorAttribute.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.EditorAttribute.GetHashCode\n  id: GetHashCode\n  parent: System.ComponentModel.EditorAttribute\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: EditorAttribute.GetHashCode()\n  fullName: System.ComponentModel.EditorAttribute.GetHashCode()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns the hash code for this instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer hash code.\n  overload: System.ComponentModel.EditorAttribute.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.EditorAttribute.TypeId\n  id: TypeId\n  parent: System.ComponentModel.EditorAttribute\n  langs:\n  - csharp\n  name: TypeId\n  nameWithType: EditorAttribute.TypeId\n  fullName: System.ComponentModel.EditorAttribute.TypeId\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets a unique ID for this attribute type.\n  remarks: The TypeId property is used by filtering algorithms to identify two attributes that are the same type. For most attributes, this just returns the <xref:System.Type> instance for the attribute. <xref:System.ComponentModel.EditorAttribute> overrides this to include the type of the editor base type.\n  syntax:\n    content: public override object TypeId { get; }\n    return:\n      type: System.Object\n      description: A unique ID for this attribute type.\n  overload: System.ComponentModel.EditorAttribute.TypeId*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Attribute\n  isExternal: false\n  name: System.Attribute\n- uid: System.ComponentModel.EditorAttribute.#ctor\n  parent: System.ComponentModel.EditorAttribute\n  isExternal: false\n  name: EditorAttribute()\n  nameWithType: EditorAttribute.EditorAttribute()\n  fullName: System.ComponentModel.EditorAttribute.EditorAttribute()\n- uid: System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)\n  parent: System.ComponentModel.EditorAttribute\n  isExternal: false\n  name: EditorAttribute(String,String)\n  nameWithType: EditorAttribute.EditorAttribute(String,String)\n  fullName: System.ComponentModel.EditorAttribute.EditorAttribute(String,String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)\n  parent: System.ComponentModel.EditorAttribute\n  isExternal: false\n  name: EditorAttribute(String,Type)\n  nameWithType: EditorAttribute.EditorAttribute(String,Type)\n  fullName: System.ComponentModel.EditorAttribute.EditorAttribute(String,Type)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)\n  parent: System.ComponentModel.EditorAttribute\n  isExternal: false\n  name: EditorAttribute(Type,Type)\n  nameWithType: EditorAttribute.EditorAttribute(Type,Type)\n  fullName: System.ComponentModel.EditorAttribute.EditorAttribute(Type,Type)\n- uid: System.ComponentModel.EditorAttribute.EditorBaseTypeName\n  parent: System.ComponentModel.EditorAttribute\n  isExternal: false\n  name: EditorBaseTypeName\n  nameWithType: EditorAttribute.EditorBaseTypeName\n  fullName: System.ComponentModel.EditorAttribute.EditorBaseTypeName\n- uid: System.ComponentModel.EditorAttribute.EditorTypeName\n  parent: System.ComponentModel.EditorAttribute\n  isExternal: false\n  name: EditorTypeName\n  nameWithType: EditorAttribute.EditorTypeName\n  fullName: System.ComponentModel.EditorAttribute.EditorTypeName\n- uid: System.ComponentModel.EditorAttribute.Equals(System.Object)\n  parent: System.ComponentModel.EditorAttribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: EditorAttribute.Equals(Object)\n  fullName: System.ComponentModel.EditorAttribute.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.EditorAttribute.GetHashCode\n  parent: System.ComponentModel.EditorAttribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: EditorAttribute.GetHashCode()\n  fullName: System.ComponentModel.EditorAttribute.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ComponentModel.EditorAttribute.TypeId\n  parent: System.ComponentModel.EditorAttribute\n  isExternal: false\n  name: TypeId\n  nameWithType: EditorAttribute.TypeId\n  fullName: System.ComponentModel.EditorAttribute.TypeId\n- uid: System.ComponentModel.EditorAttribute.#ctor*\n  parent: System.ComponentModel.EditorAttribute\n  isExternal: false\n  name: EditorAttribute\n  nameWithType: EditorAttribute.EditorAttribute\n- uid: System.ComponentModel.EditorAttribute.EditorBaseTypeName*\n  parent: System.ComponentModel.EditorAttribute\n  isExternal: false\n  name: EditorBaseTypeName\n  nameWithType: EditorAttribute.EditorBaseTypeName\n- uid: System.ComponentModel.EditorAttribute.EditorTypeName*\n  parent: System.ComponentModel.EditorAttribute\n  isExternal: false\n  name: EditorTypeName\n  nameWithType: EditorAttribute.EditorTypeName\n- uid: System.ComponentModel.EditorAttribute.Equals*\n  parent: System.ComponentModel.EditorAttribute\n  isExternal: false\n  name: Equals\n  nameWithType: EditorAttribute.Equals\n- uid: System.ComponentModel.EditorAttribute.GetHashCode*\n  parent: System.ComponentModel.EditorAttribute\n  isExternal: false\n  name: GetHashCode\n  nameWithType: EditorAttribute.GetHashCode\n- uid: System.ComponentModel.EditorAttribute.TypeId*\n  parent: System.ComponentModel.EditorAttribute\n  isExternal: false\n  name: TypeId\n  nameWithType: EditorAttribute.TypeId\n"}