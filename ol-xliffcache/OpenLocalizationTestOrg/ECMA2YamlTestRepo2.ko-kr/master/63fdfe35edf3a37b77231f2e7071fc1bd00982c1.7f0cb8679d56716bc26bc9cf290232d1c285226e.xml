{"nodes":[{"pos":[857,932],"content":"Provides a property and a method for accessing the computer's serial ports.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a property and a method for accessing the computer's serial ports.","pos":[0,75]}]},{"pos":[945,2038],"content":"The `My.Computer.Ports` object provides a straightforward entry point for accessing the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] serial port class, <xref:System.IO.Ports.SerialPort>.       The following table lists examples of tasks involving the `My.Computer.Ports` object.      |||   |-|-|   |To|See|   |Dial a modem attached to a serial port|[How to: Dial Modems Attached to Serial Ports](~/add/includes/ajax-current-ext-md.md)|   |Send a string to a serial port|[How to: Send Strings to Serial Ports](~/add/includes/ajax-current-ext-md.md)|   |Receive strings from a serial port|[How to: Receive Strings From Serial Ports](~/add/includes/ajax-current-ext-md.md)|   |Show available serial ports|[How to: Show Available Serial Ports](~/add/includes/ajax-current-ext-md.md)|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`My.Computer.Ports`</ph> object provides a straightforward entry point for accessing the <ph id=\"ph2\">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> serial port class, &lt;xref:System.IO.Ports.SerialPort&gt;.","pos":[0,199],"source":"The `My.Computer.Ports` object provides a straightforward entry point for accessing the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] serial port class, <xref:System.IO.Ports.SerialPort>."},{"content":"The following table lists examples of tasks involving the <ph id=\"ph1\">`My.Computer.Ports`</ph> object.","pos":[206,291],"source":"       The following table lists examples of tasks involving the `My.Computer.Ports` object."},{"content":"|||   |-|-|   |To|See|   |Dial a modem attached to a serial port|<bpt id=\"p1\">[</bpt>How to: Dial Modems Attached to Serial Ports<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>|   |Send a string to a serial port|<bpt id=\"p2\">[</bpt>How to: Send Strings to Serial Ports<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>|   |Receive strings from a serial port|<bpt id=\"p3\">[</bpt>How to: Receive Strings From Serial Ports<ept id=\"p3\">](~/add/includes/ajax-current-ext-md.md)</ept>|   |Show available serial ports|<bpt id=\"p4\">[</bpt>How to: Show Available Serial Ports<ept id=\"p4\">](~/add/includes/ajax-current-ext-md.md)</ept>|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|<bpt id=\"p5\">**</bpt>Yes<ept id=\"p5\">**</ept>|   |Class Library|<bpt id=\"p6\">**</bpt>Yes<ept id=\"p6\">**</ept>|   |Console Application|<bpt id=\"p7\">**</bpt>Yes<ept id=\"p7\">**</ept>|   |Windows Control Library|<bpt id=\"p8\">**</bpt>Yes<ept id=\"p8\">**</ept>|   |Web Control Library|No|   |Windows Service|<bpt id=\"p9\">**</bpt>Yes<ept id=\"p9\">**</ept>|   |Web Site|No|","pos":[297,1070],"source":"      |||   |-|-|   |To|See|   |Dial a modem attached to a serial port|[How to: Dial Modems Attached to Serial Ports](~/add/includes/ajax-current-ext-md.md)|   |Send a string to a serial port|[How to: Send Strings to Serial Ports](~/add/includes/ajax-current-ext-md.md)|   |Receive strings from a serial port|[How to: Receive Strings From Serial Ports](~/add/includes/ajax-current-ext-md.md)|   |Show available serial ports|[How to: Show Available Serial Ports](~/add/includes/ajax-current-ext-md.md)|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"}]},{"pos":[3283,3380],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"Microsoft.VisualBasic.Devices.Ports\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"Microsoft.VisualBasic.Devices.Ports\"></xref> class."},{"pos":[3966,4041],"content":"Creates and opens a <bpt id=\"p1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Creates and opens a <xref href=\"System.IO.Ports.SerialPort\"></xref> object."},{"pos":[4054,5387],"content":"The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object. The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object.       Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object. You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly. See the example in this topic for more information.       The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method.      |||   |-|-|   |To|See|   |Dial a modem attached to a serial port|[How to: Dial Modems Attached to Serial Ports](~/add/includes/ajax-current-ext-md.md)|   |Send a string to serial port|[How to: Send Strings to Serial Ports](~/add/includes/ajax-current-ext-md.md)|   |Receive strings from a serial port|[How to: Receive Strings From Serial Ports](~/add/includes/ajax-current-ext-md.md)|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`My.Computer.Ports.OpenSerialPort`</ph> method creates and opens a &lt;xref:System.IO.Ports.SerialPort&gt; object.","pos":[0,107],"source":"The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object."},{"content":"The arguments to the <ph id=\"ph1\">`OpenSerialPort`</ph> method determine the settings of the &lt;xref:System.IO.Ports.SerialPort&gt; object.","pos":[108,224],"source":" The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object."},{"content":"Your code should close the &lt;xref:System.IO.Ports.SerialPort&gt; object when it is finished using the object.","pos":[231,336],"source":"       Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object."},{"content":"You can use the &lt;xref:System.IO.Ports.SerialPort.Close%2A&gt; method to close the object explicitly or the <ph id=\"ph1\">`Using`</ph> statement to close it implicitly.","pos":[337,482],"source":" You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly."},{"content":"See the example in this topic for more information.","pos":[483,534]},{"content":"The following table lists examples of tasks involving the <ph id=\"ph1\">`My.Computer.Ports.OpenSerialPort`</ph> method.","pos":[541,641],"source":"       The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method."},{"content":"|||   |-|-|   |To|See|   |Dial a modem attached to a serial port|<bpt id=\"p1\">[</bpt>How to: Dial Modems Attached to Serial Ports<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>|   |Send a string to serial port|<bpt id=\"p2\">[</bpt>How to: Send Strings to Serial Ports<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>|   |Receive strings from a serial port|<bpt id=\"p3\">[</bpt>How to: Receive Strings From Serial Ports<ept id=\"p3\">](~/add/includes/ajax-current-ext-md.md)</ept>|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|<bpt id=\"p4\">**</bpt>Yes<ept id=\"p4\">**</ept>|   |Class Library|<bpt id=\"p5\">**</bpt>Yes<ept id=\"p5\">**</ept>|   |Console Application|<bpt id=\"p6\">**</bpt>Yes<ept id=\"p6\">**</ept>|   |Windows Control Library|<bpt id=\"p7\">**</bpt>Yes<ept id=\"p7\">**</ept>|   |Web Control Library|No|   |Windows Service|<bpt id=\"p8\">**</bpt>Yes<ept id=\"p8\">**</ept>|   |Web Site|No|","pos":[647,1309],"source":"      |||   |-|-|   |To|See|   |Dial a modem attached to a serial port|[How to: Dial Modems Attached to Serial Ports](~/add/includes/ajax-current-ext-md.md)|   |Send a string to serial port|[How to: Send Strings to Serial Ports](~/add/includes/ajax-current-ext-md.md)|   |Receive strings from a serial port|[How to: Receive Strings From Serial Ports](~/add/includes/ajax-current-ext-md.md)|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"}]},{"pos":[6320,6421],"content":"<xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref>. Required. Name of the port to open.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,65],"source":"<xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref>."},{"content":"Required.","pos":[66,75]},{"content":"Name of the port to open.","pos":[76,101]}]},{"pos":[6492,6595],"content":"An open <bpt id=\"p1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object, configured with the supplied arguments.","needQuote":true,"needEscape":true,"source":"An open <xref href=\"System.IO.Ports.SerialPort\"></xref> object, configured with the supplied arguments."},{"pos":[6776,6887],"content":"<ph id=\"ph1\">&lt;code&gt;portName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or an empty string.","needQuote":true,"needEscape":true,"source":"<code>portName</code> is <xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> or an empty string."},{"pos":[7386,7461],"content":"Creates and opens a <bpt id=\"p1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Creates and opens a <xref href=\"System.IO.Ports.SerialPort\"></xref> object."},{"pos":[7474,8807],"content":"The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object. The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object.       Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object. You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly. See the example in this topic for more information.       The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method.      |||   |-|-|   |To|See|   |Dial a modem attached to a serial port|[How to: Dial Modems Attached to Serial Ports](~/add/includes/ajax-current-ext-md.md)|   |Send a string to serial port|[How to: Send Strings to Serial Ports](~/add/includes/ajax-current-ext-md.md)|   |Receive strings from a serial port|[How to: Receive Strings From Serial Ports](~/add/includes/ajax-current-ext-md.md)|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`My.Computer.Ports.OpenSerialPort`</ph> method creates and opens a &lt;xref:System.IO.Ports.SerialPort&gt; object.","pos":[0,107],"source":"The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object."},{"content":"The arguments to the <ph id=\"ph1\">`OpenSerialPort`</ph> method determine the settings of the &lt;xref:System.IO.Ports.SerialPort&gt; object.","pos":[108,224],"source":" The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object."},{"content":"Your code should close the &lt;xref:System.IO.Ports.SerialPort&gt; object when it is finished using the object.","pos":[231,336],"source":"       Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object."},{"content":"You can use the &lt;xref:System.IO.Ports.SerialPort.Close%2A&gt; method to close the object explicitly or the <ph id=\"ph1\">`Using`</ph> statement to close it implicitly.","pos":[337,482],"source":" You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly."},{"content":"See the example in this topic for more information.","pos":[483,534]},{"content":"The following table lists examples of tasks involving the <ph id=\"ph1\">`My.Computer.Ports.OpenSerialPort`</ph> method.","pos":[541,641],"source":"       The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method."},{"content":"|||   |-|-|   |To|See|   |Dial a modem attached to a serial port|<bpt id=\"p1\">[</bpt>How to: Dial Modems Attached to Serial Ports<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>|   |Send a string to serial port|<bpt id=\"p2\">[</bpt>How to: Send Strings to Serial Ports<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>|   |Receive strings from a serial port|<bpt id=\"p3\">[</bpt>How to: Receive Strings From Serial Ports<ept id=\"p3\">](~/add/includes/ajax-current-ext-md.md)</ept>|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|<bpt id=\"p4\">**</bpt>Yes<ept id=\"p4\">**</ept>|   |Class Library|<bpt id=\"p5\">**</bpt>Yes<ept id=\"p5\">**</ept>|   |Console Application|<bpt id=\"p6\">**</bpt>Yes<ept id=\"p6\">**</ept>|   |Windows Control Library|<bpt id=\"p7\">**</bpt>Yes<ept id=\"p7\">**</ept>|   |Web Control Library|No|   |Windows Service|<bpt id=\"p8\">**</bpt>Yes<ept id=\"p8\">**</ept>|   |Web Site|No|","pos":[647,1309],"source":"      |||   |-|-|   |To|See|   |Dial a modem attached to a serial port|[How to: Dial Modems Attached to Serial Ports](~/add/includes/ajax-current-ext-md.md)|   |Send a string to serial port|[How to: Send Strings to Serial Ports](~/add/includes/ajax-current-ext-md.md)|   |Receive strings from a serial port|[How to: Receive Strings From Serial Ports](~/add/includes/ajax-current-ext-md.md)|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"}]},{"pos":[9754,9855],"content":"<xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref>. Required. Name of the port to open.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,65],"source":"<xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref>."},{"content":"Required.","pos":[66,75]},{"content":"Name of the port to open.","pos":[76,101]}]},{"pos":[9919,10009],"content":"<xref uid=\"langword_csharp_Integer\" name=\"Integer\" href=\"\"></xref>. Baud rate of the port.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Integer\" name=\"Integer\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,67],"source":"<xref uid=\"langword_csharp_Integer\" name=\"Integer\" href=\"\"></xref>."},{"content":"Baud rate of the port.","pos":[68,90]}]},{"pos":[10080,10183],"content":"An open <bpt id=\"p1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object, configured with the supplied arguments.","needQuote":true,"needEscape":true,"source":"An open <xref href=\"System.IO.Ports.SerialPort\"></xref> object, configured with the supplied arguments."},{"pos":[10364,10475],"content":"<ph id=\"ph1\">&lt;code&gt;portName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or an empty string.","needQuote":true,"needEscape":true,"source":"<code>portName</code> is <xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> or an empty string."},{"pos":[10570,10622],"content":"<ph id=\"ph1\">&lt;code&gt;baudRate&lt;/code&gt;</ph> is less than or equal to zero.","needQuote":true,"needEscape":true,"source":"<code>baudRate</code> is less than or equal to zero."},{"pos":[11188,11263],"content":"Creates and opens a <bpt id=\"p1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Creates and opens a <xref href=\"System.IO.Ports.SerialPort\"></xref> object."},{"pos":[11276,12609],"content":"The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object. The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object.       Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object. You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly. See the example in this topic for more information.       The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method.      |||   |-|-|   |To|See|   |Dial a modem attached to a serial port|[How to: Dial Modems Attached to Serial Ports](~/add/includes/ajax-current-ext-md.md)|   |Send a string to serial port|[How to: Send Strings to Serial Ports](~/add/includes/ajax-current-ext-md.md)|   |Receive strings from a serial port|[How to: Receive Strings From Serial Ports](~/add/includes/ajax-current-ext-md.md)|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`My.Computer.Ports.OpenSerialPort`</ph> method creates and opens a &lt;xref:System.IO.Ports.SerialPort&gt; object.","pos":[0,107],"source":"The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object."},{"content":"The arguments to the <ph id=\"ph1\">`OpenSerialPort`</ph> method determine the settings of the &lt;xref:System.IO.Ports.SerialPort&gt; object.","pos":[108,224],"source":" The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object."},{"content":"Your code should close the &lt;xref:System.IO.Ports.SerialPort&gt; object when it is finished using the object.","pos":[231,336],"source":"       Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object."},{"content":"You can use the &lt;xref:System.IO.Ports.SerialPort.Close%2A&gt; method to close the object explicitly or the <ph id=\"ph1\">`Using`</ph> statement to close it implicitly.","pos":[337,482],"source":" You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly."},{"content":"See the example in this topic for more information.","pos":[483,534]},{"content":"The following table lists examples of tasks involving the <ph id=\"ph1\">`My.Computer.Ports.OpenSerialPort`</ph> method.","pos":[541,641],"source":"       The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method."},{"content":"|||   |-|-|   |To|See|   |Dial a modem attached to a serial port|<bpt id=\"p1\">[</bpt>How to: Dial Modems Attached to Serial Ports<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>|   |Send a string to serial port|<bpt id=\"p2\">[</bpt>How to: Send Strings to Serial Ports<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>|   |Receive strings from a serial port|<bpt id=\"p3\">[</bpt>How to: Receive Strings From Serial Ports<ept id=\"p3\">](~/add/includes/ajax-current-ext-md.md)</ept>|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|<bpt id=\"p4\">**</bpt>Yes<ept id=\"p4\">**</ept>|   |Class Library|<bpt id=\"p5\">**</bpt>Yes<ept id=\"p5\">**</ept>|   |Console Application|<bpt id=\"p6\">**</bpt>Yes<ept id=\"p6\">**</ept>|   |Windows Control Library|<bpt id=\"p7\">**</bpt>Yes<ept id=\"p7\">**</ept>|   |Web Control Library|No|   |Windows Service|<bpt id=\"p8\">**</bpt>Yes<ept id=\"p8\">**</ept>|   |Web Site|No|","pos":[647,1309],"source":"      |||   |-|-|   |To|See|   |Dial a modem attached to a serial port|[How to: Dial Modems Attached to Serial Ports](~/add/includes/ajax-current-ext-md.md)|   |Send a string to serial port|[How to: Send Strings to Serial Ports](~/add/includes/ajax-current-ext-md.md)|   |Receive strings from a serial port|[How to: Receive Strings From Serial Ports](~/add/includes/ajax-current-ext-md.md)|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"}]},{"pos":[13587,13688],"content":"<xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref>. Required. Name of the port to open.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,65],"source":"<xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref>."},{"content":"Required.","pos":[66,75]},{"content":"Name of the port to open.","pos":[76,101]}]},{"pos":[13752,13842],"content":"<xref uid=\"langword_csharp_Integer\" name=\"Integer\" href=\"\"></xref>. Baud rate of the port.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Integer\" name=\"Integer\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,67],"source":"<xref uid=\"langword_csharp_Integer\" name=\"Integer\" href=\"\"></xref>."},{"content":"Baud rate of the port.","pos":[68,90]}]},{"pos":[13914,13978],"content":"<xref href=\"System.IO.Ports.Parity\"></xref>. Parity of the port.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref href=\"System.IO.Ports.Parity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,44],"source":"<xref href=\"System.IO.Ports.Parity\"></xref>."},{"content":"Parity of the port.","pos":[45,64]}]},{"pos":[14049,14152],"content":"An open <bpt id=\"p1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object, configured with the supplied arguments.","needQuote":true,"needEscape":true,"source":"An open <xref href=\"System.IO.Ports.SerialPort\"></xref> object, configured with the supplied arguments."},{"pos":[14333,14444],"content":"<ph id=\"ph1\">&lt;code&gt;portName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or an empty string.","needQuote":true,"needEscape":true,"source":"<code>portName</code> is <xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> or an empty string."},{"pos":[14539,14591],"content":"<ph id=\"ph1\">&lt;code&gt;baudRate&lt;/code&gt;</ph> is less than or equal to zero.","needQuote":true,"needEscape":true,"source":"<code>baudRate</code> is less than or equal to zero."},{"pos":[14738,14839],"content":"<ph id=\"ph1\">&lt;code&gt;parity&lt;/code&gt;</ph> is not one of the <bpt id=\"p1\">&lt;xref href=\"System.IO.Ports.Parity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration values.","needQuote":true,"needEscape":true,"source":"<code>parity</code> is not one of the <xref href=\"System.IO.Ports.Parity\"></xref> enumeration values."},{"pos":[15449,15524],"content":"Creates and opens a <bpt id=\"p1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Creates and opens a <xref href=\"System.IO.Ports.SerialPort\"></xref> object."},{"pos":[15537,16870],"content":"The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object. The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object.       Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object. You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly. See the example in this topic for more information.       The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method.      |||   |-|-|   |To|See|   |Dial a modem attached to a serial port|[How to: Dial Modems Attached to Serial Ports](~/add/includes/ajax-current-ext-md.md)|   |Send a string to serial port|[How to: Send Strings to Serial Ports](~/add/includes/ajax-current-ext-md.md)|   |Receive strings from a serial port|[How to: Receive Strings From Serial Ports](~/add/includes/ajax-current-ext-md.md)|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`My.Computer.Ports.OpenSerialPort`</ph> method creates and opens a &lt;xref:System.IO.Ports.SerialPort&gt; object.","pos":[0,107],"source":"The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object."},{"content":"The arguments to the <ph id=\"ph1\">`OpenSerialPort`</ph> method determine the settings of the &lt;xref:System.IO.Ports.SerialPort&gt; object.","pos":[108,224],"source":" The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object."},{"content":"Your code should close the &lt;xref:System.IO.Ports.SerialPort&gt; object when it is finished using the object.","pos":[231,336],"source":"       Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object."},{"content":"You can use the &lt;xref:System.IO.Ports.SerialPort.Close%2A&gt; method to close the object explicitly or the <ph id=\"ph1\">`Using`</ph> statement to close it implicitly.","pos":[337,482],"source":" You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly."},{"content":"See the example in this topic for more information.","pos":[483,534]},{"content":"The following table lists examples of tasks involving the <ph id=\"ph1\">`My.Computer.Ports.OpenSerialPort`</ph> method.","pos":[541,641],"source":"       The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method."},{"content":"|||   |-|-|   |To|See|   |Dial a modem attached to a serial port|<bpt id=\"p1\">[</bpt>How to: Dial Modems Attached to Serial Ports<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>|   |Send a string to serial port|<bpt id=\"p2\">[</bpt>How to: Send Strings to Serial Ports<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>|   |Receive strings from a serial port|<bpt id=\"p3\">[</bpt>How to: Receive Strings From Serial Ports<ept id=\"p3\">](~/add/includes/ajax-current-ext-md.md)</ept>|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|<bpt id=\"p4\">**</bpt>Yes<ept id=\"p4\">**</ept>|   |Class Library|<bpt id=\"p5\">**</bpt>Yes<ept id=\"p5\">**</ept>|   |Console Application|<bpt id=\"p6\">**</bpt>Yes<ept id=\"p6\">**</ept>|   |Windows Control Library|<bpt id=\"p7\">**</bpt>Yes<ept id=\"p7\">**</ept>|   |Web Control Library|No|   |Windows Service|<bpt id=\"p8\">**</bpt>Yes<ept id=\"p8\">**</ept>|   |Web Site|No|","pos":[647,1309],"source":"      |||   |-|-|   |To|See|   |Dial a modem attached to a serial port|[How to: Dial Modems Attached to Serial Ports](~/add/includes/ajax-current-ext-md.md)|   |Send a string to serial port|[How to: Send Strings to Serial Ports](~/add/includes/ajax-current-ext-md.md)|   |Receive strings from a serial port|[How to: Receive Strings From Serial Ports](~/add/includes/ajax-current-ext-md.md)|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"}]},{"pos":[17862,17963],"content":"<xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref>. Required. Name of the port to open.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,65],"source":"<xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref>."},{"content":"Required.","pos":[66,75]},{"content":"Name of the port to open.","pos":[76,101]}]},{"pos":[18027,18117],"content":"<xref uid=\"langword_csharp_Integer\" name=\"Integer\" href=\"\"></xref>. Baud rate of the port.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Integer\" name=\"Integer\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,67],"source":"<xref uid=\"langword_csharp_Integer\" name=\"Integer\" href=\"\"></xref>."},{"content":"Baud rate of the port.","pos":[68,90]}]},{"pos":[18189,18253],"content":"<xref href=\"System.IO.Ports.Parity\"></xref>. Parity of the port.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref href=\"System.IO.Ports.Parity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,44],"source":"<xref href=\"System.IO.Ports.Parity\"></xref>."},{"content":"Parity of the port.","pos":[45,64]}]},{"pos":[18317,18414],"content":"<xref uid=\"langword_csharp_Integer\" name=\"Integer\" href=\"\"></xref>. Data-bit setting of the port.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Integer\" name=\"Integer\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,67],"source":"<xref uid=\"langword_csharp_Integer\" name=\"Integer\" href=\"\"></xref>."},{"content":"Data-bit setting of the port.","pos":[68,97]}]},{"pos":[18485,18588],"content":"An open <bpt id=\"p1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object, configured with the supplied arguments.","needQuote":true,"needEscape":true,"source":"An open <xref href=\"System.IO.Ports.SerialPort\"></xref> object, configured with the supplied arguments."},{"pos":[18769,18880],"content":"<ph id=\"ph1\">&lt;code&gt;portName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or an empty string.","needQuote":true,"needEscape":true,"source":"<code>portName</code> is <xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> or an empty string."},{"pos":[18975,19027],"content":"<ph id=\"ph1\">&lt;code&gt;dataBits&lt;/code&gt;</ph> is less than or equal to zero.","needQuote":true,"needEscape":true,"source":"<code>dataBits</code> is less than or equal to zero."},{"pos":[19174,19275],"content":"<ph id=\"ph1\">&lt;code&gt;parity&lt;/code&gt;</ph> is not one of the <bpt id=\"p1\">&lt;xref href=\"System.IO.Ports.Parity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration values.","needQuote":true,"needEscape":true,"source":"<code>parity</code> is not one of the <xref href=\"System.IO.Ports.Parity\"></xref> enumeration values."},{"pos":[19962,20037],"content":"Creates and opens a <bpt id=\"p1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Creates and opens a <xref href=\"System.IO.Ports.SerialPort\"></xref> object."},{"pos":[20050,21383],"content":"The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object. The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object.       Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object. You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly. See the example in this topic for more information.       The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method.      |||   |-|-|   |To|See|   |Dial a modem attached to a serial port|[How to: Dial Modems Attached to Serial Ports](~/add/includes/ajax-current-ext-md.md)|   |Send a string to serial port|[How to: Send Strings to Serial Ports](~/add/includes/ajax-current-ext-md.md)|   |Receive strings from a serial port|[How to: Receive Strings From Serial Ports](~/add/includes/ajax-current-ext-md.md)|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`My.Computer.Ports.OpenSerialPort`</ph> method creates and opens a &lt;xref:System.IO.Ports.SerialPort&gt; object.","pos":[0,107],"source":"The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object."},{"content":"The arguments to the <ph id=\"ph1\">`OpenSerialPort`</ph> method determine the settings of the &lt;xref:System.IO.Ports.SerialPort&gt; object.","pos":[108,224],"source":" The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object."},{"content":"Your code should close the &lt;xref:System.IO.Ports.SerialPort&gt; object when it is finished using the object.","pos":[231,336],"source":"       Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object."},{"content":"You can use the &lt;xref:System.IO.Ports.SerialPort.Close%2A&gt; method to close the object explicitly or the <ph id=\"ph1\">`Using`</ph> statement to close it implicitly.","pos":[337,482],"source":" You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly."},{"content":"See the example in this topic for more information.","pos":[483,534]},{"content":"The following table lists examples of tasks involving the <ph id=\"ph1\">`My.Computer.Ports.OpenSerialPort`</ph> method.","pos":[541,641],"source":"       The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method."},{"content":"|||   |-|-|   |To|See|   |Dial a modem attached to a serial port|<bpt id=\"p1\">[</bpt>How to: Dial Modems Attached to Serial Ports<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>|   |Send a string to serial port|<bpt id=\"p2\">[</bpt>How to: Send Strings to Serial Ports<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>|   |Receive strings from a serial port|<bpt id=\"p3\">[</bpt>How to: Receive Strings From Serial Ports<ept id=\"p3\">](~/add/includes/ajax-current-ext-md.md)</ept>|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|<bpt id=\"p4\">**</bpt>Yes<ept id=\"p4\">**</ept>|   |Class Library|<bpt id=\"p5\">**</bpt>Yes<ept id=\"p5\">**</ept>|   |Console Application|<bpt id=\"p6\">**</bpt>Yes<ept id=\"p6\">**</ept>|   |Windows Control Library|<bpt id=\"p7\">**</bpt>Yes<ept id=\"p7\">**</ept>|   |Web Control Library|No|   |Windows Service|<bpt id=\"p8\">**</bpt>Yes<ept id=\"p8\">**</ept>|   |Web Site|No|","pos":[647,1309],"source":"      |||   |-|-|   |To|See|   |Dial a modem attached to a serial port|[How to: Dial Modems Attached to Serial Ports](~/add/includes/ajax-current-ext-md.md)|   |Send a string to serial port|[How to: Send Strings to Serial Ports](~/add/includes/ajax-current-ext-md.md)|   |Receive strings from a serial port|[How to: Receive Strings From Serial Ports](~/add/includes/ajax-current-ext-md.md)|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"}]},{"pos":[22410,22511],"content":"<xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref>. Required. Name of the port to open.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,65],"source":"<xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref>."},{"content":"Required.","pos":[66,75]},{"content":"Name of the port to open.","pos":[76,101]}]},{"pos":[22575,22665],"content":"<xref uid=\"langword_csharp_Integer\" name=\"Integer\" href=\"\"></xref>. Baud rate of the port.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Integer\" name=\"Integer\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,67],"source":"<xref uid=\"langword_csharp_Integer\" name=\"Integer\" href=\"\"></xref>."},{"content":"Baud rate of the port.","pos":[68,90]}]},{"pos":[22737,22801],"content":"<xref href=\"System.IO.Ports.Parity\"></xref>. Parity of the port.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref href=\"System.IO.Ports.Parity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,44],"source":"<xref href=\"System.IO.Ports.Parity\"></xref>."},{"content":"Parity of the port.","pos":[45,64]}]},{"pos":[22865,22962],"content":"<xref uid=\"langword_csharp_Integer\" name=\"Integer\" href=\"\"></xref>. Data-bit setting of the port.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Integer\" name=\"Integer\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,67],"source":"<xref uid=\"langword_csharp_Integer\" name=\"Integer\" href=\"\"></xref>."},{"content":"Data-bit setting of the port.","pos":[68,97]}]},{"pos":[23038,23114],"content":"<xref href=\"System.IO.Ports.StopBits\"></xref>. Stop-bit setting of the port.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref href=\"System.IO.Ports.StopBits\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,46],"source":"<xref href=\"System.IO.Ports.StopBits\"></xref>."},{"content":"Stop-bit setting of the port.","pos":[47,76]}]},{"pos":[23185,23288],"content":"An open <bpt id=\"p1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object, configured with the supplied arguments.","needQuote":true,"needEscape":true,"source":"An open <xref href=\"System.IO.Ports.SerialPort\"></xref> object, configured with the supplied arguments."},{"pos":[23469,23580],"content":"<ph id=\"ph1\">&lt;code&gt;portName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or an empty string.","needQuote":true,"needEscape":true,"source":"<code>portName</code> is <xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> or an empty string."},{"pos":[23675,23727],"content":"<ph id=\"ph1\">&lt;code&gt;dataBits&lt;/code&gt;</ph> is less than or equal to zero.","needQuote":true,"needEscape":true,"source":"<code>dataBits</code> is less than or equal to zero."},{"pos":[23874,23979],"content":"<ph id=\"ph1\">&lt;code&gt;stopBits&lt;/code&gt;</ph> is not one of the <bpt id=\"p1\">&lt;xref href=\"System.IO.Ports.StopBits\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration values.","needQuote":true,"needEscape":true,"source":"<code>stopBits</code> is not one of the <xref href=\"System.IO.Ports.StopBits\"></xref> enumeration values."},{"pos":[24387,24454],"content":"Gets a collection of the names of the serial ports on the computer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of the names of the serial ports on the computer.","pos":[0,67]}]},{"pos":[24467,25424],"content":"The `My.Computer.Ports.SerialPortNames` property gets a collection of the names of the serial ports on the computer.      > [!NOTE] >  The port names returned by `My.Computer.Ports.SerialPortNames` may be incorrect when run on Windows 98. To prevent application errors, use exception handling, such as the `Try...Catch...Finally` statement or the `Using` statement, when using the port names to open ports.       The following table lists an example of a task involving the `My.Computer.Ports.SerialPortNames` property.      |||   |-|-|   |To|See|   |Show available serial ports|[How to: Show Available Serial Ports](~/add/includes/ajax-current-ext-md.md)|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`My.Computer.Ports.SerialPortNames`</ph> property gets a collection of the names of the serial ports on the computer.","pos":[0,116],"source":"The `My.Computer.Ports.SerialPortNames` property gets a collection of the names of the serial ports on the computer."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The port names returned by <ph id=\"ph2\">`My.Computer.Ports.SerialPortNames`</ph> may be incorrect when run on Windows 98.","pos":[122,238],"source":"      > [!NOTE] >  The port names returned by `My.Computer.Ports.SerialPortNames` may be incorrect when run on Windows 98."},{"content":"To prevent application errors, use exception handling, such as the <ph id=\"ph1\">`Try...Catch...Finally`</ph> statement or the <ph id=\"ph2\">`Using`</ph> statement, when using the port names to open ports.","pos":[239,406],"source":" To prevent application errors, use exception handling, such as the `Try...Catch...Finally` statement or the `Using` statement, when using the port names to open ports."},{"content":"The following table lists an example of a task involving the <ph id=\"ph1\">`My.Computer.Ports.SerialPortNames`</ph> property.","pos":[413,519],"source":"       The following table lists an example of a task involving the `My.Computer.Ports.SerialPortNames` property."},{"content":"|||   |-|-|   |To|See|   |Show available serial ports|<bpt id=\"p1\">[</bpt>How to: Show Available Serial Ports<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|<bpt id=\"p2\">**</bpt>Yes<ept id=\"p2\">**</ept>|   |Class Library|<bpt id=\"p3\">**</bpt>Yes<ept id=\"p3\">**</ept>|   |Console Application|<bpt id=\"p4\">**</bpt>Yes<ept id=\"p4\">**</ept>|   |Windows Control Library|<bpt id=\"p5\">**</bpt>Yes<ept id=\"p5\">**</ept>|   |Web Control Library|No|   |Windows Service|<bpt id=\"p6\">**</bpt>Yes<ept id=\"p6\">**</ept>|   |Web Site|No|","pos":[525,934],"source":"      |||   |-|-|   |To|See|   |Show available serial ports|[How to: Show Available Serial Ports](~/add/includes/ajax-current-ext-md.md)|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"}]},{"pos":[26602,26664],"content":"A collection of the names of the serial ports on the computer.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of the names of the serial ports on the computer.","pos":[0,62]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualBasic.Devices.Ports\n  id: Ports\n  children:\n  - Microsoft.VisualBasic.Devices.Ports.#ctor\n  - Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String)\n  - Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32)\n  - Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity)\n  - Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)\n  - Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)\n  - Microsoft.VisualBasic.Devices.Ports.SerialPortNames\n  langs:\n  - csharp\n  name: Ports\n  nameWithType: Ports\n  fullName: Microsoft.VisualBasic.Devices.Ports\n  type: Class\n  summary: Provides a property and a method for accessing the computer's serial ports.\n  remarks: \"The `My.Computer.Ports` object provides a straightforward entry point for accessing the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] serial port class, <xref:System.IO.Ports.SerialPort>.  \\n  \\n The following table lists examples of tasks involving the `My.Computer.Ports` object.  \\n  \\n|||  \\n|-|-|  \\n|To|See|  \\n|Dial a modem attached to a serial port|[How to: Dial Modems Attached to Serial Ports](~/add/includes/ajax-current-ext-md.md)|  \\n|Send a string to a serial port|[How to: Send Strings to Serial Ports](~/add/includes/ajax-current-ext-md.md)|  \\n|Receive strings from a serial port|[How to: Receive Strings From Serial Ports](~/add/includes/ajax-current-ext-md.md)|  \\n|Show available serial ports|[How to: Show Available Serial Ports](~/add/includes/ajax-current-ext-md.md)|  \\n  \\n## Availability by Project Type  \\n  \\n|||  \\n|-|-|  \\n|Project type|Available|  \\n|Windows Application|**Yes**|  \\n|Class Library|**Yes**|  \\n|Console Application|**Yes**|  \\n|Windows Control Library|**Yes**|  \\n|Web Control Library|No|  \\n|Windows Service|**Yes**|  \\n|Web Site|No|\"\n  example:\n  - \"This example describes how to send strings to the computer's `COM1` serial port.  \\n  \\n The `Using` block allows the application to close the serial port even if it generates an exception. All code that manipulates the serial port should appear within this block, or within a `Try...Catch...Finally` block with a call to use the <xref:System.IO.Ports.SerialPort.Close%2A> method.  \\n  \\n The <xref:System.IO.Ports.SerialPort.WriteLine%2A> method sends the data to the serial port.  \\n  \\n [!code-vb[VbVbalrMyComputer#33](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#33)]  \\n  \\n For more information, see [How to: Send Strings to Serial Ports](../Topic/How%20to:%20Send%20Strings%20to%20Serial%20Ports%20in%20Visual%20Basic.md).\"\n  syntax:\n    content: public class Ports\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.Devices.Ports.#ctor\n  id: '#ctor'\n  parent: Microsoft.VisualBasic.Devices.Ports\n  langs:\n  - csharp\n  name: Ports()\n  nameWithType: Ports.Ports()\n  fullName: Microsoft.VisualBasic.Devices.Ports.Ports()\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Initializes a new instance of the <xref href=\"Microsoft.VisualBasic.Devices.Ports\"></xref> class.\n  syntax:\n    content: public Ports ();\n    parameters: []\n  overload: Microsoft.VisualBasic.Devices.Ports.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String)\n  id: OpenSerialPort(System.String)\n  parent: Microsoft.VisualBasic.Devices.Ports\n  langs:\n  - csharp\n  name: OpenSerialPort(String)\n  nameWithType: Ports.OpenSerialPort(String)\n  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Creates and opens a <xref href=\"System.IO.Ports.SerialPort\"></xref> object.\n  remarks: \"The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object. The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object.  \\n  \\n Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object. You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly. See the example in this topic for more information.  \\n  \\n The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method.  \\n  \\n|||  \\n|-|-|  \\n|To|See|  \\n|Dial a modem attached to a serial port|[How to: Dial Modems Attached to Serial Ports](~/add/includes/ajax-current-ext-md.md)|  \\n|Send a string to serial port|[How to: Send Strings to Serial Ports](~/add/includes/ajax-current-ext-md.md)|  \\n|Receive strings from a serial port|[How to: Receive Strings From Serial Ports](~/add/includes/ajax-current-ext-md.md)|  \\n  \\n## Availability by Project Type  \\n  \\n|||  \\n|-|-|  \\n|Project type|Available|  \\n|Windows Application|**Yes**|  \\n|Class Library|**Yes**|  \\n|Console Application|**Yes**|  \\n|Windows Control Library|**Yes**|  \\n|Web Control Library|No|  \\n|Windows Service|**Yes**|  \\n|Web Site|No|\"\n  example:\n  - \"This example describes how to send strings to the computer's `COM1` serial port.  \\n  \\n The `Using` block allows the application to close the serial port even if it generates an exception. All code that manipulates the serial port should appear within this block, or within a `Try...Catch...Finally` block with a call to use the <xref:System.IO.Ports.SerialPort.Close%2A> method.  \\n  \\n The <xref:System.IO.Ports.SerialPort.WriteLine%2A> method sends the data to the serial port.  \\n  \\n [!code-vb[VbVbalrMyComputer#33](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#33)]  \\n  \\n For more information, see [How to: Send Strings to Serial Ports](../Topic/How%20to:%20Send%20Strings%20to%20Serial%20Ports%20in%20Visual%20Basic.md).\"\n  syntax:\n    content: public System.IO.Ports.SerialPort OpenSerialPort (string portName);\n    parameters:\n    - id: portName\n      type: System.String\n      description: <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref>. Required. Name of the port to open.\n    return:\n      type: System.IO.Ports.SerialPort\n      description: An open <xref href=\"System.IO.Ports.SerialPort\"></xref> object, configured with the supplied arguments.\n  overload: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>portName</code> is <xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> or an empty string.\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32)\n  id: OpenSerialPort(System.String,System.Int32)\n  parent: Microsoft.VisualBasic.Devices.Ports\n  langs:\n  - csharp\n  name: OpenSerialPort(String,Int32)\n  nameWithType: Ports.OpenSerialPort(String,Int32)\n  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Creates and opens a <xref href=\"System.IO.Ports.SerialPort\"></xref> object.\n  remarks: \"The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object. The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object.  \\n  \\n Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object. You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly. See the example in this topic for more information.  \\n  \\n The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method.  \\n  \\n|||  \\n|-|-|  \\n|To|See|  \\n|Dial a modem attached to a serial port|[How to: Dial Modems Attached to Serial Ports](~/add/includes/ajax-current-ext-md.md)|  \\n|Send a string to serial port|[How to: Send Strings to Serial Ports](~/add/includes/ajax-current-ext-md.md)|  \\n|Receive strings from a serial port|[How to: Receive Strings From Serial Ports](~/add/includes/ajax-current-ext-md.md)|  \\n  \\n## Availability by Project Type  \\n  \\n|||  \\n|-|-|  \\n|Project type|Available|  \\n|Windows Application|**Yes**|  \\n|Class Library|**Yes**|  \\n|Console Application|**Yes**|  \\n|Windows Control Library|**Yes**|  \\n|Web Control Library|No|  \\n|Windows Service|**Yes**|  \\n|Web Site|No|\"\n  example:\n  - \"This example describes how to send strings to the computer's `COM1` serial port.  \\n  \\n The `Using` block allows the application to close the serial port even if it generates an exception. All code that manipulates the serial port should appear within this block, or within a `Try...Catch...Finally` block with a call to use the <xref:System.IO.Ports.SerialPort.Close%2A> method.  \\n  \\n The <xref:System.IO.Ports.SerialPort.WriteLine%2A> method sends the data to the serial port.  \\n  \\n [!code-vb[VbVbalrMyComputer#33](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#33)]  \\n  \\n For more information, see [How to: Send Strings to Serial Ports](../Topic/How%20to:%20Send%20Strings%20to%20Serial%20Ports%20in%20Visual%20Basic.md).\"\n  syntax:\n    content: public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate);\n    parameters:\n    - id: portName\n      type: System.String\n      description: <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref>. Required. Name of the port to open.\n    - id: baudRate\n      type: System.Int32\n      description: <xref uid=\"langword_csharp_Integer\" name=\"Integer\" href=\"\"></xref>. Baud rate of the port.\n    return:\n      type: System.IO.Ports.SerialPort\n      description: An open <xref href=\"System.IO.Ports.SerialPort\"></xref> object, configured with the supplied arguments.\n  overload: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>portName</code> is <xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> or an empty string.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>baudRate</code> is less than or equal to zero.\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity)\n  id: OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity)\n  parent: Microsoft.VisualBasic.Devices.Ports\n  langs:\n  - csharp\n  name: OpenSerialPort(String,Int32,Parity)\n  nameWithType: Ports.OpenSerialPort(String,Int32,Parity)\n  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32,Parity)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Creates and opens a <xref href=\"System.IO.Ports.SerialPort\"></xref> object.\n  remarks: \"The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object. The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object.  \\n  \\n Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object. You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly. See the example in this topic for more information.  \\n  \\n The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method.  \\n  \\n|||  \\n|-|-|  \\n|To|See|  \\n|Dial a modem attached to a serial port|[How to: Dial Modems Attached to Serial Ports](~/add/includes/ajax-current-ext-md.md)|  \\n|Send a string to serial port|[How to: Send Strings to Serial Ports](~/add/includes/ajax-current-ext-md.md)|  \\n|Receive strings from a serial port|[How to: Receive Strings From Serial Ports](~/add/includes/ajax-current-ext-md.md)|  \\n  \\n## Availability by Project Type  \\n  \\n|||  \\n|-|-|  \\n|Project type|Available|  \\n|Windows Application|**Yes**|  \\n|Class Library|**Yes**|  \\n|Console Application|**Yes**|  \\n|Windows Control Library|**Yes**|  \\n|Web Control Library|No|  \\n|Windows Service|**Yes**|  \\n|Web Site|No|\"\n  example:\n  - \"This example describes how to send strings to the computer's `COM1` serial port.  \\n  \\n The `Using` block allows the application to close the serial port even if it generates an exception. All code that manipulates the serial port should appear within this block, or within a `Try...Catch...Finally` block with a call to use the <xref:System.IO.Ports.SerialPort.Close%2A> method.  \\n  \\n The <xref:System.IO.Ports.SerialPort.WriteLine%2A> method sends the data to the serial port.  \\n  \\n [!code-vb[VbVbalrMyComputer#33](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#33)]  \\n  \\n For more information, see [How to: Send Strings to Serial Ports](../Topic/How%20to:%20Send%20Strings%20to%20Serial%20Ports%20in%20Visual%20Basic.md).\"\n  syntax:\n    content: public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity);\n    parameters:\n    - id: portName\n      type: System.String\n      description: <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref>. Required. Name of the port to open.\n    - id: baudRate\n      type: System.Int32\n      description: <xref uid=\"langword_csharp_Integer\" name=\"Integer\" href=\"\"></xref>. Baud rate of the port.\n    - id: parity\n      type: System.IO.Ports.Parity\n      description: <xref href=\"System.IO.Ports.Parity\"></xref>. Parity of the port.\n    return:\n      type: System.IO.Ports.SerialPort\n      description: An open <xref href=\"System.IO.Ports.SerialPort\"></xref> object, configured with the supplied arguments.\n  overload: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>portName</code> is <xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> or an empty string.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>baudRate</code> is less than or equal to zero.\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: <code>parity</code> is not one of the <xref href=\"System.IO.Ports.Parity\"></xref> enumeration values.\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)\n  id: OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)\n  parent: Microsoft.VisualBasic.Devices.Ports\n  langs:\n  - csharp\n  name: OpenSerialPort(String,Int32,Parity,Int32)\n  nameWithType: Ports.OpenSerialPort(String,Int32,Parity,Int32)\n  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32,Parity,Int32)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Creates and opens a <xref href=\"System.IO.Ports.SerialPort\"></xref> object.\n  remarks: \"The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object. The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object.  \\n  \\n Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object. You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly. See the example in this topic for more information.  \\n  \\n The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method.  \\n  \\n|||  \\n|-|-|  \\n|To|See|  \\n|Dial a modem attached to a serial port|[How to: Dial Modems Attached to Serial Ports](~/add/includes/ajax-current-ext-md.md)|  \\n|Send a string to serial port|[How to: Send Strings to Serial Ports](~/add/includes/ajax-current-ext-md.md)|  \\n|Receive strings from a serial port|[How to: Receive Strings From Serial Ports](~/add/includes/ajax-current-ext-md.md)|  \\n  \\n## Availability by Project Type  \\n  \\n|||  \\n|-|-|  \\n|Project type|Available|  \\n|Windows Application|**Yes**|  \\n|Class Library|**Yes**|  \\n|Console Application|**Yes**|  \\n|Windows Control Library|**Yes**|  \\n|Web Control Library|No|  \\n|Windows Service|**Yes**|  \\n|Web Site|No|\"\n  example:\n  - \"This example describes how to send strings to the computer's `COM1` serial port.  \\n  \\n The `Using` block allows the application to close the serial port even if it generates an exception. All code that manipulates the serial port should appear within this block, or within a `Try...Catch...Finally` block with a call to use the <xref:System.IO.Ports.SerialPort.Close%2A> method.  \\n  \\n The <xref:System.IO.Ports.SerialPort.WriteLine%2A> method sends the data to the serial port.  \\n  \\n [!code-vb[VbVbalrMyComputer#33](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#33)]  \\n  \\n For more information, see [How to: Send Strings to Serial Ports](../Topic/How%20to:%20Send%20Strings%20to%20Serial%20Ports%20in%20Visual%20Basic.md).\"\n  syntax:\n    content: public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits);\n    parameters:\n    - id: portName\n      type: System.String\n      description: <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref>. Required. Name of the port to open.\n    - id: baudRate\n      type: System.Int32\n      description: <xref uid=\"langword_csharp_Integer\" name=\"Integer\" href=\"\"></xref>. Baud rate of the port.\n    - id: parity\n      type: System.IO.Ports.Parity\n      description: <xref href=\"System.IO.Ports.Parity\"></xref>. Parity of the port.\n    - id: dataBits\n      type: System.Int32\n      description: <xref uid=\"langword_csharp_Integer\" name=\"Integer\" href=\"\"></xref>. Data-bit setting of the port.\n    return:\n      type: System.IO.Ports.SerialPort\n      description: An open <xref href=\"System.IO.Ports.SerialPort\"></xref> object, configured with the supplied arguments.\n  overload: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>portName</code> is <xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> or an empty string.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>dataBits</code> is less than or equal to zero.\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: <code>parity</code> is not one of the <xref href=\"System.IO.Ports.Parity\"></xref> enumeration values.\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)\n  id: OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)\n  parent: Microsoft.VisualBasic.Devices.Ports\n  langs:\n  - csharp\n  name: OpenSerialPort(String,Int32,Parity,Int32,StopBits)\n  nameWithType: Ports.OpenSerialPort(String,Int32,Parity,Int32,StopBits)\n  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32,Parity,Int32,StopBits)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Creates and opens a <xref href=\"System.IO.Ports.SerialPort\"></xref> object.\n  remarks: \"The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object. The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object.  \\n  \\n Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object. You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly. See the example in this topic for more information.  \\n  \\n The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method.  \\n  \\n|||  \\n|-|-|  \\n|To|See|  \\n|Dial a modem attached to a serial port|[How to: Dial Modems Attached to Serial Ports](~/add/includes/ajax-current-ext-md.md)|  \\n|Send a string to serial port|[How to: Send Strings to Serial Ports](~/add/includes/ajax-current-ext-md.md)|  \\n|Receive strings from a serial port|[How to: Receive Strings From Serial Ports](~/add/includes/ajax-current-ext-md.md)|  \\n  \\n## Availability by Project Type  \\n  \\n|||  \\n|-|-|  \\n|Project type|Available|  \\n|Windows Application|**Yes**|  \\n|Class Library|**Yes**|  \\n|Console Application|**Yes**|  \\n|Windows Control Library|**Yes**|  \\n|Web Control Library|No|  \\n|Windows Service|**Yes**|  \\n|Web Site|No|\"\n  example:\n  - \"This example describes how to send strings to the computer's `COM1` serial port.  \\n  \\n The `Using` block allows the application to close the serial port even if it generates an exception. All code that manipulates the serial port should appear within this block, or within a `Try...Catch...Finally` block with a call to use the <xref:System.IO.Ports.SerialPort.Close%2A> method.  \\n  \\n The <xref:System.IO.Ports.SerialPort.WriteLine%2A> method sends the data to the serial port.  \\n  \\n [!code-vb[VbVbalrMyComputer#33](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#33)]  \\n  \\n For more information, see [How to: Send Strings to Serial Ports](../Topic/How%20to:%20Send%20Strings%20to%20Serial%20Ports%20in%20Visual%20Basic.md).\"\n  syntax:\n    content: public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits, System.IO.Ports.StopBits stopBits);\n    parameters:\n    - id: portName\n      type: System.String\n      description: <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref>. Required. Name of the port to open.\n    - id: baudRate\n      type: System.Int32\n      description: <xref uid=\"langword_csharp_Integer\" name=\"Integer\" href=\"\"></xref>. Baud rate of the port.\n    - id: parity\n      type: System.IO.Ports.Parity\n      description: <xref href=\"System.IO.Ports.Parity\"></xref>. Parity of the port.\n    - id: dataBits\n      type: System.Int32\n      description: <xref uid=\"langword_csharp_Integer\" name=\"Integer\" href=\"\"></xref>. Data-bit setting of the port.\n    - id: stopBits\n      type: System.IO.Ports.StopBits\n      description: <xref href=\"System.IO.Ports.StopBits\"></xref>. Stop-bit setting of the port.\n    return:\n      type: System.IO.Ports.SerialPort\n      description: An open <xref href=\"System.IO.Ports.SerialPort\"></xref> object, configured with the supplied arguments.\n  overload: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>portName</code> is <xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> or an empty string.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>dataBits</code> is less than or equal to zero.\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: <code>stopBits</code> is not one of the <xref href=\"System.IO.Ports.StopBits\"></xref> enumeration values.\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.Devices.Ports.SerialPortNames\n  id: SerialPortNames\n  parent: Microsoft.VisualBasic.Devices.Ports\n  langs:\n  - csharp\n  name: SerialPortNames\n  nameWithType: Ports.SerialPortNames\n  fullName: Microsoft.VisualBasic.Devices.Ports.SerialPortNames\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Gets a collection of the names of the serial ports on the computer.\n  remarks: \"The `My.Computer.Ports.SerialPortNames` property gets a collection of the names of the serial ports on the computer.  \\n  \\n> [!NOTE]\\n>  The port names returned by `My.Computer.Ports.SerialPortNames` may be incorrect when run on Windows 98. To prevent application errors, use exception handling, such as the `Try...Catch...Finally` statement or the `Using` statement, when using the port names to open ports.  \\n  \\n The following table lists an example of a task involving the `My.Computer.Ports.SerialPortNames` property.  \\n  \\n|||  \\n|-|-|  \\n|To|See|  \\n|Show available serial ports|[How to: Show Available Serial Ports](~/add/includes/ajax-current-ext-md.md)|  \\n  \\n## Availability by Project Type  \\n  \\n|||  \\n|-|-|  \\n|Project type|Available|  \\n|Windows Application|**Yes**|  \\n|Class Library|**Yes**|  \\n|Console Application|**Yes**|  \\n|Windows Control Library|**Yes**|  \\n|Web Control Library|No|  \\n|Windows Service|**Yes**|  \\n|Web Site|No|\"\n  example:\n  - \"This example loops over all the strings that the `My.Computer.Ports.SerialPortNames` property returns. These strings are the names of the available serial ports on the computer.  \\n  \\n Typically, a user selects which serial port the application should use from the list of available ports. In this example, the serial port names are stored in a <xref:System.Windows.Forms.ListBox> control. For more information, see [ListBox Control](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-vb[VbVbalrMyComputer#45](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#45)]  \\n  \\n This example requires:  \\n  \\n-   A reference to the <xref:System?displayProperty=fullName> namespace.  \\n  \\n-   That your form have a <xref:System.Windows.Forms.ListBox> control named `ListBox1`.  \\n  \\n For more information, see [How to: Show Available Serial Ports](../Topic/How%20to:%20Show%20Available%20Serial%20Ports%20in%20Visual%20Basic.md).\"\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> SerialPortNames { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}\n      description: A collection of the names of the serial ports on the computer.\n  overload: Microsoft.VisualBasic.Devices.Ports.SerialPortNames*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ComponentModel.InvalidEnumArgumentException\n  parent: System.ComponentModel\n  isExternal: false\n  name: InvalidEnumArgumentException\n  nameWithType: InvalidEnumArgumentException\n  fullName: System.ComponentModel.InvalidEnumArgumentException\n- uid: Microsoft.VisualBasic.Devices.Ports.#ctor\n  parent: Microsoft.VisualBasic.Devices.Ports\n  isExternal: false\n  name: Ports()\n  nameWithType: Ports.Ports()\n  fullName: Microsoft.VisualBasic.Devices.Ports.Ports()\n- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String)\n  parent: Microsoft.VisualBasic.Devices.Ports\n  isExternal: false\n  name: OpenSerialPort(String)\n  nameWithType: Ports.OpenSerialPort(String)\n  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String)\n- uid: System.IO.Ports.SerialPort\n  parent: System.IO.Ports\n  isExternal: false\n  name: SerialPort\n  nameWithType: SerialPort\n  fullName: System.IO.Ports.SerialPort\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32)\n  parent: Microsoft.VisualBasic.Devices.Ports\n  isExternal: false\n  name: OpenSerialPort(String,Int32)\n  nameWithType: Ports.OpenSerialPort(String,Int32)\n  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity)\n  parent: Microsoft.VisualBasic.Devices.Ports\n  isExternal: false\n  name: OpenSerialPort(String,Int32,Parity)\n  nameWithType: Ports.OpenSerialPort(String,Int32,Parity)\n  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32,Parity)\n- uid: System.IO.Ports.Parity\n  parent: System.IO.Ports\n  isExternal: false\n  name: Parity\n  nameWithType: Parity\n  fullName: System.IO.Ports.Parity\n- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)\n  parent: Microsoft.VisualBasic.Devices.Ports\n  isExternal: false\n  name: OpenSerialPort(String,Int32,Parity,Int32)\n  nameWithType: Ports.OpenSerialPort(String,Int32,Parity,Int32)\n  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32,Parity,Int32)\n- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)\n  parent: Microsoft.VisualBasic.Devices.Ports\n  isExternal: false\n  name: OpenSerialPort(String,Int32,Parity,Int32,StopBits)\n  nameWithType: Ports.OpenSerialPort(String,Int32,Parity,Int32,StopBits)\n  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32,Parity,Int32,StopBits)\n- uid: System.IO.Ports.StopBits\n  parent: System.IO.Ports\n  isExternal: false\n  name: StopBits\n  nameWithType: StopBits\n  fullName: System.IO.Ports.StopBits\n- uid: Microsoft.VisualBasic.Devices.Ports.SerialPortNames\n  parent: Microsoft.VisualBasic.Devices.Ports\n  isExternal: false\n  name: SerialPortNames\n  nameWithType: Ports.SerialPortNames\n  fullName: Microsoft.VisualBasic.Devices.Ports.SerialPortNames\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<String>\n  nameWithType: ReadOnlyCollection<String>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.String>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.VisualBasic.Devices.Ports.#ctor*\n  parent: Microsoft.VisualBasic.Devices.Ports\n  isExternal: false\n  name: Ports\n  nameWithType: Ports.Ports\n- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort*\n  parent: Microsoft.VisualBasic.Devices.Ports\n  isExternal: false\n  name: OpenSerialPort\n  nameWithType: Ports.OpenSerialPort\n- uid: Microsoft.VisualBasic.Devices.Ports.SerialPortNames*\n  parent: Microsoft.VisualBasic.Devices.Ports\n  isExternal: false\n  name: SerialPortNames\n  nameWithType: Ports.SerialPortNames\n"}