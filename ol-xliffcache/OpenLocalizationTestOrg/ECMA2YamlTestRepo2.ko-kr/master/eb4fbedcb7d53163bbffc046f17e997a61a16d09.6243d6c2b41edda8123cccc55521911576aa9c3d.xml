{"nodes":[{"pos":[3430,3442],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4216,4228],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4843,4855],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4923,4935],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5527,5539],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5598,5610],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6439,6451],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7366,7378],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7446,7458],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8005,8017],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8895,8907],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9522,9534],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10166,10178],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10834,10846],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10928,10940],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11574,11586],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12240,12252],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12304,12316],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13209,13221],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13836,13848],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14368,14380],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15207,15219],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16038,16050],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16883,16895],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17676,17688],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18425,18437],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19234,19246],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19314,19326],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20118,20130],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20195,20207],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21045,21057],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21969,21981],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22049,22061],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22950,22962],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23747,23759],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24598,24610],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24692,24704],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25540,25552],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25610,25622],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26524,26536],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27321,27333],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28025,28037],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28772,28784],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29490,29502],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30411,30423],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30490,30502],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[31442,31454],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[31530,31542],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32427,32439],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32497,32509],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33397,33409],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33461,33473],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[34038,34050],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Linq.Table`1\n  id: Table`1\n  children:\n  - System.Data.Linq.Table`1.Attach(`0)\n  - System.Data.Linq.Table`1.Attach(`0,System.Boolean)\n  - System.Data.Linq.Table`1.Attach(`0,`0)\n  - System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)\n  - System.Data.Linq.Table`1.Context\n  - System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Data.Linq.Table`1.DeleteOnSubmit(`0)\n  - System.Data.Linq.Table`1.GetEnumerator\n  - System.Data.Linq.Table`1.GetModifiedMembers(`0)\n  - System.Data.Linq.Table`1.GetNewBindingList\n  - System.Data.Linq.Table`1.GetOriginalEntityState(`0)\n  - System.Data.Linq.Table`1.InsertAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Data.Linq.Table`1.InsertOnSubmit(`0)\n  - System.Data.Linq.Table`1.IsReadOnly\n  - System.Data.Linq.Table`1.System#Collections#Generic#IEnumerable{TEntity}#GetEnumerator\n  - System.Data.Linq.Table`1.System#Collections#IEnumerable#GetEnumerator\n  - System.Data.Linq.Table`1.System#ComponentModel#IListSource#ContainsListCollection\n  - System.Data.Linq.Table`1.System#ComponentModel#IListSource#GetList\n  - System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object)\n  - System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Boolean)\n  - System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Object)\n  - System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable)\n  - System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable,System.Boolean)\n  - System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteAllOnSubmit(System.Collections.IEnumerable)\n  - System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)\n  - System.Data.Linq.Table`1.System#Data#Linq#ITable#GetModifiedMembers(System.Object)\n  - System.Data.Linq.Table`1.System#Data#Linq#ITable#GetOriginalEntityState(System.Object)\n  - System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertAllOnSubmit(System.Collections.IEnumerable)\n  - System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertOnSubmit(System.Object)\n  - System.Data.Linq.Table`1.System#Linq#IQueryable#ElementType\n  - System.Data.Linq.Table`1.System#Linq#IQueryable#Expression\n  - System.Data.Linq.Table`1.System#Linq#IQueryable#Provider\n  - System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)\n  - System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)\n  - System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)\n  - System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)\n  - System.Data.Linq.Table`1.ToString\n  langs:\n  - csharp\n  name: Table<TEntity>\n  nameWithType: Table<TEntity>\n  fullName: System.Data.Linq.Table<TEntity>\n  type: Class\n  syntax:\n    content: 'public sealed class Table<TEntity> : System.Collections.Generic.IEnumerable<TEntity>, System.ComponentModel.IListSource, System.Data.Linq.ITable, System.Data.Linq.ITable<TEntity>, System.Linq.IQueryable<TEntity>, System.Linq.IQueryProvider where TEntity : class'\n    typeParameters:\n    - id: TEntity\n      description: To be added.\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.IEnumerable<TEntity>\n  - System.ComponentModel.IListSource\n  - System.Data.Linq.ITable\n  - System.Data.Linq.ITable<TEntity>\n  - System.Linq.IQueryable<TEntity>\n  - System.Linq.IQueryProvider\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Table`1.Attach(`0)\n  id: Attach(`0)\n  parent: System.Data.Linq.Table`1\n  langs:\n  - csharp\n  name: Attach(TEntity)\n  nameWithType: Table<TEntity>.Attach(TEntity)\n  fullName: System.Data.Linq.Table<TEntity>.Attach(TEntity)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public void Attach (TEntity entity);\n    parameters:\n    - id: entity\n      type: TEntity\n      description: To be added.\n  overload: System.Data.Linq.Table`1.Attach*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Table`1.Attach(`0,System.Boolean)\n  id: Attach(`0,System.Boolean)\n  parent: System.Data.Linq.Table`1\n  langs:\n  - csharp\n  name: Attach(TEntity,Boolean)\n  nameWithType: Table<TEntity>.Attach(TEntity,Boolean)\n  fullName: System.Data.Linq.Table<TEntity>.Attach(TEntity,Boolean)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public void Attach (TEntity entity, bool asModified);\n    parameters:\n    - id: entity\n      type: TEntity\n      description: To be added.\n    - id: asModified\n      type: System.Boolean\n      description: To be added.\n  overload: System.Data.Linq.Table`1.Attach*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Table`1.Attach(`0,`0)\n  id: Attach(`0,`0)\n  parent: System.Data.Linq.Table`1\n  langs:\n  - csharp\n  name: Attach(TEntity,TEntity)\n  nameWithType: Table<TEntity>.Attach(TEntity,TEntity)\n  fullName: System.Data.Linq.Table<TEntity>.Attach(TEntity,TEntity)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public void Attach (TEntity entity, TEntity original);\n    parameters:\n    - id: entity\n      type: TEntity\n      description: To be added.\n    - id: original\n      type: TEntity\n      description: To be added.\n  overload: System.Data.Linq.Table`1.Attach*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})\n  id: AttachAll``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Data.Linq.Table`1\n  langs:\n  - csharp\n  name: AttachAll(IEnumerable<TSubEntity>)\n  nameWithType: Table<TEntity>.AttachAll(IEnumerable<TSubEntity>)\n  fullName: System.Data.Linq.Table<TEntity>.AttachAll(IEnumerable<TSubEntity>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: 'public void AttachAll<TSubEntity> (System.Collections.Generic.IEnumerable<TSubEntity> entities) where TSubEntity : TEntity;'\n    parameters:\n    - id: entities\n      type: System.Collections.Generic.IEnumerable{TSubEntity}\n      description: To be added.\n  overload: System.Data.Linq.Table`1.AttachAll<TSubEntity>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)\n  id: AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)\n  parent: System.Data.Linq.Table`1\n  langs:\n  - csharp\n  name: AttachAll(IEnumerable<TSubEntity>,Boolean)\n  nameWithType: Table<TEntity>.AttachAll(IEnumerable<TSubEntity>,Boolean)\n  fullName: System.Data.Linq.Table<TEntity>.AttachAll(IEnumerable<TSubEntity>,Boolean)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: 'public void AttachAll<TSubEntity> (System.Collections.Generic.IEnumerable<TSubEntity> entities, bool asModified) where TSubEntity : TEntity;'\n    parameters:\n    - id: entities\n      type: System.Collections.Generic.IEnumerable{TSubEntity}\n      description: To be added.\n    - id: asModified\n      type: System.Boolean\n      description: To be added.\n  overload: System.Data.Linq.Table`1.AttachAll<TSubEntity>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Table`1.Context\n  id: Context\n  parent: System.Data.Linq.Table`1\n  langs:\n  - csharp\n  name: Context\n  nameWithType: Table<TEntity>.Context\n  fullName: System.Data.Linq.Table<TEntity>.Context\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public System.Data.Linq.DataContext Context { get; }\n    return:\n      type: System.Data.Linq.DataContext\n      description: To be added.\n  overload: System.Data.Linq.Table`1.Context*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})\n  id: DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Data.Linq.Table`1\n  langs:\n  - csharp\n  name: DeleteAllOnSubmit(IEnumerable<TSubEntity>)\n  nameWithType: Table<TEntity>.DeleteAllOnSubmit(IEnumerable<TSubEntity>)\n  fullName: System.Data.Linq.Table<TEntity>.DeleteAllOnSubmit(IEnumerable<TSubEntity>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: 'public void DeleteAllOnSubmit<TSubEntity> (System.Collections.Generic.IEnumerable<TSubEntity> entities) where TSubEntity : TEntity;'\n    parameters:\n    - id: entities\n      type: System.Collections.Generic.IEnumerable{TSubEntity}\n      description: To be added.\n  overload: System.Data.Linq.Table`1.DeleteAllOnSubmit<TSubEntity>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Table`1.DeleteOnSubmit(`0)\n  id: DeleteOnSubmit(`0)\n  parent: System.Data.Linq.Table`1\n  langs:\n  - csharp\n  name: DeleteOnSubmit(TEntity)\n  nameWithType: Table<TEntity>.DeleteOnSubmit(TEntity)\n  fullName: System.Data.Linq.Table<TEntity>.DeleteOnSubmit(TEntity)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public void DeleteOnSubmit (TEntity entity);\n    parameters:\n    - id: entity\n      type: TEntity\n      description: To be added.\n  overload: System.Data.Linq.Table`1.DeleteOnSubmit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Table`1.GetEnumerator\n  id: GetEnumerator\n  parent: System.Data.Linq.Table`1\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: Table<TEntity>.GetEnumerator()\n  fullName: System.Data.Linq.Table<TEntity>.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public System.Collections.Generic.IEnumerator<TEntity> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{TEntity}\n      description: To be added.\n  overload: System.Data.Linq.Table`1.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Table`1.GetModifiedMembers(`0)\n  id: GetModifiedMembers(`0)\n  parent: System.Data.Linq.Table`1\n  langs:\n  - csharp\n  name: GetModifiedMembers(TEntity)\n  nameWithType: Table<TEntity>.GetModifiedMembers(TEntity)\n  fullName: System.Data.Linq.Table<TEntity>.GetModifiedMembers(TEntity)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public System.Data.Linq.ModifiedMemberInfo[] GetModifiedMembers (TEntity entity);\n    parameters:\n    - id: entity\n      type: TEntity\n      description: To be added.\n    return:\n      type: System.Data.Linq.ModifiedMemberInfo[]\n      description: To be added.\n  overload: System.Data.Linq.Table`1.GetModifiedMembers*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Table`1.GetNewBindingList\n  id: GetNewBindingList\n  parent: System.Data.Linq.Table`1\n  langs:\n  - csharp\n  name: GetNewBindingList()\n  nameWithType: Table<TEntity>.GetNewBindingList()\n  fullName: System.Data.Linq.Table<TEntity>.GetNewBindingList()\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public System.ComponentModel.IBindingList GetNewBindingList ();\n    parameters: []\n    return:\n      type: System.ComponentModel.IBindingList\n      description: To be added.\n  overload: System.Data.Linq.Table`1.GetNewBindingList*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Table`1.GetOriginalEntityState(`0)\n  id: GetOriginalEntityState(`0)\n  parent: System.Data.Linq.Table`1\n  langs:\n  - csharp\n  name: GetOriginalEntityState(TEntity)\n  nameWithType: Table<TEntity>.GetOriginalEntityState(TEntity)\n  fullName: System.Data.Linq.Table<TEntity>.GetOriginalEntityState(TEntity)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public TEntity GetOriginalEntityState (TEntity entity);\n    parameters:\n    - id: entity\n      type: TEntity\n      description: To be added.\n    return:\n      type: TEntity\n      description: To be added.\n  overload: System.Data.Linq.Table`1.GetOriginalEntityState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Table`1.InsertAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})\n  id: InsertAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Data.Linq.Table`1\n  langs:\n  - csharp\n  name: InsertAllOnSubmit(IEnumerable<TSubEntity>)\n  nameWithType: Table<TEntity>.InsertAllOnSubmit(IEnumerable<TSubEntity>)\n  fullName: System.Data.Linq.Table<TEntity>.InsertAllOnSubmit(IEnumerable<TSubEntity>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: 'public void InsertAllOnSubmit<TSubEntity> (System.Collections.Generic.IEnumerable<TSubEntity> entities) where TSubEntity : TEntity;'\n    parameters:\n    - id: entities\n      type: System.Collections.Generic.IEnumerable{TSubEntity}\n      description: To be added.\n  overload: System.Data.Linq.Table`1.InsertAllOnSubmit<TSubEntity>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Table`1.InsertOnSubmit(`0)\n  id: InsertOnSubmit(`0)\n  parent: System.Data.Linq.Table`1\n  langs:\n  - csharp\n  name: InsertOnSubmit(TEntity)\n  nameWithType: Table<TEntity>.InsertOnSubmit(TEntity)\n  fullName: System.Data.Linq.Table<TEntity>.InsertOnSubmit(TEntity)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public void InsertOnSubmit (TEntity entity);\n    parameters:\n    - id: entity\n      type: TEntity\n      description: To be added.\n  overload: System.Data.Linq.Table`1.InsertOnSubmit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Table`1.IsReadOnly\n  id: IsReadOnly\n  parent: System.Data.Linq.Table`1\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: Table<TEntity>.IsReadOnly\n  fullName: System.Data.Linq.Table<TEntity>.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Data.Linq.Table`1.IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Table`1.System#Collections#Generic#IEnumerable{TEntity}#GetEnumerator\n  id: System#Collections#Generic#IEnumerable{TEntity}#GetEnumerator\n  isEii: true\n  parent: System.Data.Linq.Table`1\n  langs:\n  - csharp\n  name: System.Collections.Generic.IEnumerable()\n  nameWithType: Table<TEntity>.System.Collections.Generic.IEnumerable()\n  fullName: System.Data.Linq.Table<TEntity>.System.Collections.Generic.IEnumerable()\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: System.Collections.Generic.IEnumerator<TEntity> IEnumerable<TEntity>.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{TEntity}\n      description: To be added.\n  overload: System.Data.Linq.Table`1.System#Collections#Generic#IEnumerable<TEntity>#GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Table`1.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Data.Linq.Table`1\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: Table<TEntity>.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Data.Linq.Table<TEntity>.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: To be added.\n  overload: System.Data.Linq.Table`1.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Table`1.System#ComponentModel#IListSource#ContainsListCollection\n  id: System#ComponentModel#IListSource#ContainsListCollection\n  isEii: true\n  parent: System.Data.Linq.Table`1\n  langs:\n  - csharp\n  name: System.ComponentModel.IListSource.ContainsListCollection\n  nameWithType: Table<TEntity>.System.ComponentModel.IListSource.ContainsListCollection\n  fullName: System.Data.Linq.Table<TEntity>.System.ComponentModel.IListSource.ContainsListCollection\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: bool System.ComponentModel.IListSource.ContainsListCollection { get; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Data.Linq.Table`1.System#ComponentModel#IListSource#ContainsListCollection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Table`1.System#ComponentModel#IListSource#GetList\n  id: System#ComponentModel#IListSource#GetList\n  isEii: true\n  parent: System.Data.Linq.Table`1\n  langs:\n  - csharp\n  name: System.ComponentModel.IListSource.GetList()\n  nameWithType: Table<TEntity>.System.ComponentModel.IListSource.GetList()\n  fullName: System.Data.Linq.Table<TEntity>.System.ComponentModel.IListSource.GetList()\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: System.Collections.IList IListSource.GetList ();\n    parameters: []\n    return:\n      type: System.Collections.IList\n      description: To be added.\n  overload: System.Data.Linq.Table`1.System#ComponentModel#IListSource#GetList*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object)\n  id: System#Data#Linq#ITable#Attach(System.Object)\n  isEii: true\n  parent: System.Data.Linq.Table`1\n  langs:\n  - csharp\n  name: System.Data.Linq.ITable.Attach(Object)\n  nameWithType: Table<TEntity>.System.Data.Linq.ITable.Attach(Object)\n  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.Attach(Object)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: void ITable.Attach (object entity);\n    parameters:\n    - id: entity\n      type: System.Object\n      description: To be added.\n  overload: System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Boolean)\n  id: System#Data#Linq#ITable#Attach(System.Object,System.Boolean)\n  isEii: true\n  parent: System.Data.Linq.Table`1\n  langs:\n  - csharp\n  name: System.Data.Linq.ITable.Attach(Object,Boolean)\n  nameWithType: Table<TEntity>.System.Data.Linq.ITable.Attach(Object,Boolean)\n  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.Attach(Object,Boolean)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: void ITable.Attach (object entity, bool asModified);\n    parameters:\n    - id: entity\n      type: System.Object\n      description: To be added.\n    - id: asModified\n      type: System.Boolean\n      description: To be added.\n  overload: System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Object)\n  id: System#Data#Linq#ITable#Attach(System.Object,System.Object)\n  isEii: true\n  parent: System.Data.Linq.Table`1\n  langs:\n  - csharp\n  name: System.Data.Linq.ITable.Attach(Object,Object)\n  nameWithType: Table<TEntity>.System.Data.Linq.ITable.Attach(Object,Object)\n  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.Attach(Object,Object)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: void ITable.Attach (object entity, object original);\n    parameters:\n    - id: entity\n      type: System.Object\n      description: To be added.\n    - id: original\n      type: System.Object\n      description: To be added.\n  overload: System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable)\n  id: System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable)\n  isEii: true\n  parent: System.Data.Linq.Table`1\n  langs:\n  - csharp\n  name: System.Data.Linq.ITable.AttachAll(IEnumerable)\n  nameWithType: Table<TEntity>.System.Data.Linq.ITable.AttachAll(IEnumerable)\n  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.AttachAll(IEnumerable)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: void ITable.AttachAll (System.Collections.IEnumerable entities);\n    parameters:\n    - id: entities\n      type: System.Collections.IEnumerable\n      description: To be added.\n  overload: System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable,System.Boolean)\n  id: System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable,System.Boolean)\n  isEii: true\n  parent: System.Data.Linq.Table`1\n  langs:\n  - csharp\n  name: System.Data.Linq.ITable.AttachAll(IEnumerable,Boolean)\n  nameWithType: Table<TEntity>.System.Data.Linq.ITable.AttachAll(IEnumerable,Boolean)\n  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.AttachAll(IEnumerable,Boolean)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: void ITable.AttachAll (System.Collections.IEnumerable entities, bool asModified);\n    parameters:\n    - id: entities\n      type: System.Collections.IEnumerable\n      description: To be added.\n    - id: asModified\n      type: System.Boolean\n      description: To be added.\n  overload: System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteAllOnSubmit(System.Collections.IEnumerable)\n  id: System#Data#Linq#ITable#DeleteAllOnSubmit(System.Collections.IEnumerable)\n  isEii: true\n  parent: System.Data.Linq.Table`1\n  langs:\n  - csharp\n  name: System.Data.Linq.ITable.DeleteAllOnSubmit(IEnumerable)\n  nameWithType: Table<TEntity>.System.Data.Linq.ITable.DeleteAllOnSubmit(IEnumerable)\n  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.DeleteAllOnSubmit(IEnumerable)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: void ITable.DeleteAllOnSubmit (System.Collections.IEnumerable entities);\n    parameters:\n    - id: entities\n      type: System.Collections.IEnumerable\n      description: To be added.\n  overload: System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteAllOnSubmit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)\n  id: System#Data#Linq#ITable#DeleteOnSubmit(System.Object)\n  isEii: true\n  parent: System.Data.Linq.Table`1\n  langs:\n  - csharp\n  name: System.Data.Linq.ITable.DeleteOnSubmit(Object)\n  nameWithType: Table<TEntity>.System.Data.Linq.ITable.DeleteOnSubmit(Object)\n  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.DeleteOnSubmit(Object)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: void ITable.DeleteOnSubmit (object entity);\n    parameters:\n    - id: entity\n      type: System.Object\n      description: To be added.\n  overload: System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#GetModifiedMembers(System.Object)\n  id: System#Data#Linq#ITable#GetModifiedMembers(System.Object)\n  isEii: true\n  parent: System.Data.Linq.Table`1\n  langs:\n  - csharp\n  name: System.Data.Linq.ITable.GetModifiedMembers(Object)\n  nameWithType: Table<TEntity>.System.Data.Linq.ITable.GetModifiedMembers(Object)\n  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.GetModifiedMembers(Object)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: System.Data.Linq.ModifiedMemberInfo[] ITable.GetModifiedMembers (object entity);\n    parameters:\n    - id: entity\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.Data.Linq.ModifiedMemberInfo[]\n      description: To be added.\n  overload: System.Data.Linq.Table`1.System#Data#Linq#ITable#GetModifiedMembers*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#GetOriginalEntityState(System.Object)\n  id: System#Data#Linq#ITable#GetOriginalEntityState(System.Object)\n  isEii: true\n  parent: System.Data.Linq.Table`1\n  langs:\n  - csharp\n  name: System.Data.Linq.ITable.GetOriginalEntityState(Object)\n  nameWithType: Table<TEntity>.System.Data.Linq.ITable.GetOriginalEntityState(Object)\n  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.GetOriginalEntityState(Object)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: object ITable.GetOriginalEntityState (object entity);\n    parameters:\n    - id: entity\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.Object\n      description: To be added.\n  overload: System.Data.Linq.Table`1.System#Data#Linq#ITable#GetOriginalEntityState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertAllOnSubmit(System.Collections.IEnumerable)\n  id: System#Data#Linq#ITable#InsertAllOnSubmit(System.Collections.IEnumerable)\n  isEii: true\n  parent: System.Data.Linq.Table`1\n  langs:\n  - csharp\n  name: System.Data.Linq.ITable.InsertAllOnSubmit(IEnumerable)\n  nameWithType: Table<TEntity>.System.Data.Linq.ITable.InsertAllOnSubmit(IEnumerable)\n  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.InsertAllOnSubmit(IEnumerable)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: void ITable.InsertAllOnSubmit (System.Collections.IEnumerable entities);\n    parameters:\n    - id: entities\n      type: System.Collections.IEnumerable\n      description: To be added.\n  overload: System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertAllOnSubmit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertOnSubmit(System.Object)\n  id: System#Data#Linq#ITable#InsertOnSubmit(System.Object)\n  isEii: true\n  parent: System.Data.Linq.Table`1\n  langs:\n  - csharp\n  name: System.Data.Linq.ITable.InsertOnSubmit(Object)\n  nameWithType: Table<TEntity>.System.Data.Linq.ITable.InsertOnSubmit(Object)\n  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.InsertOnSubmit(Object)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: void ITable.InsertOnSubmit (object entity);\n    parameters:\n    - id: entity\n      type: System.Object\n      description: To be added.\n  overload: System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertOnSubmit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Table`1.System#Linq#IQueryable#ElementType\n  id: System#Linq#IQueryable#ElementType\n  isEii: true\n  parent: System.Data.Linq.Table`1\n  langs:\n  - csharp\n  name: System.Linq.IQueryable.ElementType\n  nameWithType: Table<TEntity>.System.Linq.IQueryable.ElementType\n  fullName: System.Data.Linq.Table<TEntity>.System.Linq.IQueryable.ElementType\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: Type System.Linq.IQueryable.ElementType { get; }\n    return:\n      type: System.Type\n      description: To be added.\n  overload: System.Data.Linq.Table`1.System#Linq#IQueryable#ElementType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Table`1.System#Linq#IQueryable#Expression\n  id: System#Linq#IQueryable#Expression\n  isEii: true\n  parent: System.Data.Linq.Table`1\n  langs:\n  - csharp\n  name: System.Linq.IQueryable.Expression\n  nameWithType: Table<TEntity>.System.Linq.IQueryable.Expression\n  fullName: System.Data.Linq.Table<TEntity>.System.Linq.IQueryable.Expression\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: System.Linq.Expressions.Expression System.Linq.IQueryable.Expression { get; }\n    return:\n      type: System.Linq.Expressions.Expression\n      description: To be added.\n  overload: System.Data.Linq.Table`1.System#Linq#IQueryable#Expression*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Table`1.System#Linq#IQueryable#Provider\n  id: System#Linq#IQueryable#Provider\n  isEii: true\n  parent: System.Data.Linq.Table`1\n  langs:\n  - csharp\n  name: System.Linq.IQueryable.Provider\n  nameWithType: Table<TEntity>.System.Linq.IQueryable.Provider\n  fullName: System.Data.Linq.Table<TEntity>.System.Linq.IQueryable.Provider\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: System.Linq.IQueryProvider System.Linq.IQueryable.Provider { get; }\n    return:\n      type: System.Linq.IQueryProvider\n      description: To be added.\n  overload: System.Data.Linq.Table`1.System#Linq#IQueryable#Provider*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)\n  id: System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)\n  isEii: true\n  parent: System.Data.Linq.Table`1\n  langs:\n  - csharp\n  name: System.Linq.IQueryProvider.CreateQuery(Expression)\n  nameWithType: Table<TEntity>.System.Linq.IQueryProvider.CreateQuery(Expression)\n  fullName: System.Data.Linq.Table<TEntity>.System.Linq.IQueryProvider.CreateQuery(Expression)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: System.Linq.IQueryable IQueryProvider.CreateQuery (System.Linq.Expressions.Expression expression);\n    parameters:\n    - id: expression\n      type: System.Linq.Expressions.Expression\n      description: To be added.\n    return:\n      type: System.Linq.IQueryable\n      description: To be added.\n  overload: System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)\n  id: System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)\n  isEii: true\n  parent: System.Data.Linq.Table`1\n  langs:\n  - csharp\n  name: System.Linq.IQueryProvider.CreateQuery(Expression)\n  nameWithType: Table<TEntity>.System.Linq.IQueryProvider.CreateQuery(Expression)\n  fullName: System.Data.Linq.Table<TEntity>.System.Linq.IQueryProvider.CreateQuery(Expression)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: System.Linq.IQueryable<TResult> IQueryProvider.CreateQuery<TResult> (System.Linq.Expressions.Expression expression);\n    parameters:\n    - id: expression\n      type: System.Linq.Expressions.Expression\n      description: To be added.\n    return:\n      type: System.Linq.IQueryable{TResult}\n      description: To be added.\n  overload: System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery<TResult>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)\n  id: System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)\n  isEii: true\n  parent: System.Data.Linq.Table`1\n  langs:\n  - csharp\n  name: System.Linq.IQueryProvider.Execute(Expression)\n  nameWithType: Table<TEntity>.System.Linq.IQueryProvider.Execute(Expression)\n  fullName: System.Data.Linq.Table<TEntity>.System.Linq.IQueryProvider.Execute(Expression)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: object IQueryProvider.Execute (System.Linq.Expressions.Expression expression);\n    parameters:\n    - id: expression\n      type: System.Linq.Expressions.Expression\n      description: To be added.\n    return:\n      type: System.Object\n      description: To be added.\n  overload: System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)\n  id: System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)\n  isEii: true\n  parent: System.Data.Linq.Table`1\n  langs:\n  - csharp\n  name: System.Linq.IQueryProvider.Execute(Expression)\n  nameWithType: Table<TEntity>.System.Linq.IQueryProvider.Execute(Expression)\n  fullName: System.Data.Linq.Table<TEntity>.System.Linq.IQueryProvider.Execute(Expression)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: TResult IQueryProvider.Execute<TResult> (System.Linq.Expressions.Expression expression);\n    parameters:\n    - id: expression\n      type: System.Linq.Expressions.Expression\n      description: To be added.\n    return:\n      type: TResult\n      description: To be added.\n  overload: System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute<TResult>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Table`1.ToString\n  id: ToString\n  parent: System.Data.Linq.Table`1\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Table<TEntity>.ToString()\n  fullName: System.Data.Linq.Table<TEntity>.ToString()\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: To be added.\n  overload: System.Data.Linq.Table`1.ToString*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Data.Linq.Table`1.Attach(`0)\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: Attach(TEntity)\n  nameWithType: Table<TEntity>.Attach(TEntity)\n  fullName: System.Data.Linq.Table<TEntity>.Attach(TEntity)\n- uid: TEntity\n  isExternal: true\n  name: TEntity\n  nameWithType: TEntity\n  fullName: TEntity\n- uid: System.Data.Linq.Table`1.Attach(`0,System.Boolean)\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: Attach(TEntity,Boolean)\n  nameWithType: Table<TEntity>.Attach(TEntity,Boolean)\n  fullName: System.Data.Linq.Table<TEntity>.Attach(TEntity,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Linq.Table`1.Attach(`0,`0)\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: Attach(TEntity,TEntity)\n  nameWithType: Table<TEntity>.Attach(TEntity,TEntity)\n  fullName: System.Data.Linq.Table<TEntity>.Attach(TEntity,TEntity)\n- uid: System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: AttachAll(IEnumerable<TSubEntity>)\n  nameWithType: Table<TEntity>.AttachAll(IEnumerable<TSubEntity>)\n  fullName: System.Data.Linq.Table<TEntity>.AttachAll(IEnumerable<TSubEntity>)\n- uid: System.Collections.Generic.IEnumerable{TSubEntity}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<TSubEntity>\n  nameWithType: IEnumerable<TSubEntity>\n  fullName: System.Collections.Generic.IEnumerable<TSubEntity>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<TSubEntity>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TSubEntity\n    name: TSubEntity\n    nameWithType: TSubEntity\n    fullName: TSubEntity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: AttachAll(IEnumerable<TSubEntity>,Boolean)\n  nameWithType: Table<TEntity>.AttachAll(IEnumerable<TSubEntity>,Boolean)\n  fullName: System.Data.Linq.Table<TEntity>.AttachAll(IEnumerable<TSubEntity>,Boolean)\n- uid: System.Data.Linq.Table`1.Context\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: Context\n  nameWithType: Table<TEntity>.Context\n  fullName: System.Data.Linq.Table<TEntity>.Context\n- uid: System.Data.Linq.DataContext\n  parent: System.Data.Linq\n  isExternal: false\n  name: DataContext\n  nameWithType: DataContext\n  fullName: System.Data.Linq.DataContext\n- uid: System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: DeleteAllOnSubmit(IEnumerable<TSubEntity>)\n  nameWithType: Table<TEntity>.DeleteAllOnSubmit(IEnumerable<TSubEntity>)\n  fullName: System.Data.Linq.Table<TEntity>.DeleteAllOnSubmit(IEnumerable<TSubEntity>)\n- uid: System.Data.Linq.Table`1.DeleteOnSubmit(`0)\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: DeleteOnSubmit(TEntity)\n  nameWithType: Table<TEntity>.DeleteOnSubmit(TEntity)\n  fullName: System.Data.Linq.Table<TEntity>.DeleteOnSubmit(TEntity)\n- uid: System.Data.Linq.Table`1.GetEnumerator\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: Table<TEntity>.GetEnumerator()\n  fullName: System.Data.Linq.Table<TEntity>.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator{TEntity}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerator<TEntity>\n  nameWithType: IEnumerator<TEntity>\n  fullName: System.Collections.Generic.IEnumerator<TEntity>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    nameWithType: IEnumerator\n    fullName: IEnumerator<TEntity>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TEntity\n    name: TEntity\n    nameWithType: TEntity\n    fullName: TEntity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Linq.Table`1.GetModifiedMembers(`0)\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: GetModifiedMembers(TEntity)\n  nameWithType: Table<TEntity>.GetModifiedMembers(TEntity)\n  fullName: System.Data.Linq.Table<TEntity>.GetModifiedMembers(TEntity)\n- uid: System.Data.Linq.ModifiedMemberInfo[]\n  parent: System.Data.Linq\n  isExternal: false\n  name: ModifiedMemberInfo\n  nameWithType: ModifiedMemberInfo\n  fullName: System.Data.Linq.ModifiedMemberInfo[]\n  spec.csharp:\n  - uid: System.Data.Linq.ModifiedMemberInfo\n    name: ModifiedMemberInfo\n    nameWithType: ModifiedMemberInfo\n    fullName: ModifiedMemberInfo[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.Linq.Table`1.GetNewBindingList\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: GetNewBindingList()\n  nameWithType: Table<TEntity>.GetNewBindingList()\n  fullName: System.Data.Linq.Table<TEntity>.GetNewBindingList()\n- uid: System.ComponentModel.IBindingList\n  parent: System.ComponentModel\n  isExternal: false\n  name: IBindingList\n  nameWithType: IBindingList\n  fullName: System.ComponentModel.IBindingList\n- uid: System.Data.Linq.Table`1.GetOriginalEntityState(`0)\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: GetOriginalEntityState(TEntity)\n  nameWithType: Table<TEntity>.GetOriginalEntityState(TEntity)\n  fullName: System.Data.Linq.Table<TEntity>.GetOriginalEntityState(TEntity)\n- uid: System.Data.Linq.Table`1.InsertAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: InsertAllOnSubmit(IEnumerable<TSubEntity>)\n  nameWithType: Table<TEntity>.InsertAllOnSubmit(IEnumerable<TSubEntity>)\n  fullName: System.Data.Linq.Table<TEntity>.InsertAllOnSubmit(IEnumerable<TSubEntity>)\n- uid: System.Data.Linq.Table`1.InsertOnSubmit(`0)\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: InsertOnSubmit(TEntity)\n  nameWithType: Table<TEntity>.InsertOnSubmit(TEntity)\n  fullName: System.Data.Linq.Table<TEntity>.InsertOnSubmit(TEntity)\n- uid: System.Data.Linq.Table`1.IsReadOnly\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: Table<TEntity>.IsReadOnly\n  fullName: System.Data.Linq.Table<TEntity>.IsReadOnly\n- uid: System.Data.Linq.Table`1.System#Collections#Generic#IEnumerable{TEntity}#GetEnumerator\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.Collections.Generic.IEnumerable()\n  nameWithType: Table<TEntity>.System.Collections.Generic.IEnumerable()\n  fullName: System.Data.Linq.Table<TEntity>.System.Collections.Generic.IEnumerable()\n- uid: System.Data.Linq.Table`1.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: Table<TEntity>.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Data.Linq.Table<TEntity>.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Data.Linq.Table`1.System#ComponentModel#IListSource#ContainsListCollection\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.ComponentModel.IListSource.ContainsListCollection\n  nameWithType: Table<TEntity>.System.ComponentModel.IListSource.ContainsListCollection\n  fullName: System.Data.Linq.Table<TEntity>.System.ComponentModel.IListSource.ContainsListCollection\n- uid: System.Data.Linq.Table`1.System#ComponentModel#IListSource#GetList\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.ComponentModel.IListSource.GetList()\n  nameWithType: Table<TEntity>.System.ComponentModel.IListSource.GetList()\n  fullName: System.Data.Linq.Table<TEntity>.System.ComponentModel.IListSource.GetList()\n- uid: System.Collections.IList\n  parent: System.Collections\n  isExternal: true\n  name: IList\n  nameWithType: IList\n  fullName: System.Collections.IList\n- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object)\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.Data.Linq.ITable.Attach(Object)\n  nameWithType: Table<TEntity>.System.Data.Linq.ITable.Attach(Object)\n  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.Attach(Object)\n- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Boolean)\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.Data.Linq.ITable.Attach(Object,Boolean)\n  nameWithType: Table<TEntity>.System.Data.Linq.ITable.Attach(Object,Boolean)\n  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.Attach(Object,Boolean)\n- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Object)\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.Data.Linq.ITable.Attach(Object,Object)\n  nameWithType: Table<TEntity>.System.Data.Linq.ITable.Attach(Object,Object)\n  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.Attach(Object,Object)\n- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable)\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.Data.Linq.ITable.AttachAll(IEnumerable)\n  nameWithType: Table<TEntity>.System.Data.Linq.ITable.AttachAll(IEnumerable)\n  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.AttachAll(IEnumerable)\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerable\n  nameWithType: IEnumerable\n  fullName: System.Collections.IEnumerable\n- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable,System.Boolean)\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.Data.Linq.ITable.AttachAll(IEnumerable,Boolean)\n  nameWithType: Table<TEntity>.System.Data.Linq.ITable.AttachAll(IEnumerable,Boolean)\n  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.AttachAll(IEnumerable,Boolean)\n- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteAllOnSubmit(System.Collections.IEnumerable)\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.Data.Linq.ITable.DeleteAllOnSubmit(IEnumerable)\n  nameWithType: Table<TEntity>.System.Data.Linq.ITable.DeleteAllOnSubmit(IEnumerable)\n  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.DeleteAllOnSubmit(IEnumerable)\n- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.Data.Linq.ITable.DeleteOnSubmit(Object)\n  nameWithType: Table<TEntity>.System.Data.Linq.ITable.DeleteOnSubmit(Object)\n  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.DeleteOnSubmit(Object)\n- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#GetModifiedMembers(System.Object)\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.Data.Linq.ITable.GetModifiedMembers(Object)\n  nameWithType: Table<TEntity>.System.Data.Linq.ITable.GetModifiedMembers(Object)\n  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.GetModifiedMembers(Object)\n- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#GetOriginalEntityState(System.Object)\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.Data.Linq.ITable.GetOriginalEntityState(Object)\n  nameWithType: Table<TEntity>.System.Data.Linq.ITable.GetOriginalEntityState(Object)\n  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.GetOriginalEntityState(Object)\n- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertAllOnSubmit(System.Collections.IEnumerable)\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.Data.Linq.ITable.InsertAllOnSubmit(IEnumerable)\n  nameWithType: Table<TEntity>.System.Data.Linq.ITable.InsertAllOnSubmit(IEnumerable)\n  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.InsertAllOnSubmit(IEnumerable)\n- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertOnSubmit(System.Object)\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.Data.Linq.ITable.InsertOnSubmit(Object)\n  nameWithType: Table<TEntity>.System.Data.Linq.ITable.InsertOnSubmit(Object)\n  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.InsertOnSubmit(Object)\n- uid: System.Data.Linq.Table`1.System#Linq#IQueryable#ElementType\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.Linq.IQueryable.ElementType\n  nameWithType: Table<TEntity>.System.Linq.IQueryable.ElementType\n  fullName: System.Data.Linq.Table<TEntity>.System.Linq.IQueryable.ElementType\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Data.Linq.Table`1.System#Linq#IQueryable#Expression\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.Linq.IQueryable.Expression\n  nameWithType: Table<TEntity>.System.Linq.IQueryable.Expression\n  fullName: System.Data.Linq.Table<TEntity>.System.Linq.IQueryable.Expression\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: true\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Data.Linq.Table`1.System#Linq#IQueryable#Provider\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.Linq.IQueryable.Provider\n  nameWithType: Table<TEntity>.System.Linq.IQueryable.Provider\n  fullName: System.Data.Linq.Table<TEntity>.System.Linq.IQueryable.Provider\n- uid: System.Linq.IQueryProvider\n  parent: System.Linq\n  isExternal: true\n  name: IQueryProvider\n  nameWithType: IQueryProvider\n  fullName: System.Linq.IQueryProvider\n- uid: System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.Linq.IQueryProvider.CreateQuery(Expression)\n  nameWithType: Table<TEntity>.System.Linq.IQueryProvider.CreateQuery(Expression)\n  fullName: System.Data.Linq.Table<TEntity>.System.Linq.IQueryProvider.CreateQuery(Expression)\n- uid: System.Linq.IQueryable\n  parent: System.Linq\n  isExternal: true\n  name: IQueryable\n  nameWithType: IQueryable\n  fullName: System.Linq.IQueryable\n- uid: System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.Linq.IQueryProvider.CreateQuery(Expression)\n  nameWithType: Table<TEntity>.System.Linq.IQueryProvider.CreateQuery(Expression)\n  fullName: System.Data.Linq.Table<TEntity>.System.Linq.IQueryProvider.CreateQuery(Expression)\n- uid: System.Linq.IQueryable{TResult}\n  parent: System.Linq\n  isExternal: true\n  name: IQueryable<TResult>\n  nameWithType: IQueryable<TResult>\n  fullName: System.Linq.IQueryable<TResult>\n  spec.csharp:\n  - uid: System.Linq.IQueryable`1\n    name: IQueryable\n    nameWithType: IQueryable\n    fullName: IQueryable<TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.Linq.IQueryProvider.Execute(Expression)\n  nameWithType: Table<TEntity>.System.Linq.IQueryProvider.Execute(Expression)\n  fullName: System.Data.Linq.Table<TEntity>.System.Linq.IQueryProvider.Execute(Expression)\n- uid: System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.Linq.IQueryProvider.Execute(Expression)\n  nameWithType: Table<TEntity>.System.Linq.IQueryProvider.Execute(Expression)\n  fullName: System.Data.Linq.Table<TEntity>.System.Linq.IQueryProvider.Execute(Expression)\n- uid: TResult\n  isExternal: true\n  name: TResult\n  nameWithType: TResult\n  fullName: TResult\n- uid: System.Data.Linq.Table`1.ToString\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: ToString()\n  nameWithType: Table<TEntity>.ToString()\n  fullName: System.Data.Linq.Table<TEntity>.ToString()\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Linq.Table`1.Attach*\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: Attach\n  nameWithType: Table<TEntity>.Attach\n- uid: System.Data.Linq.Table`1.AttachAll<TSubEntity>*\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: AttachAll<TSubEntity>\n  nameWithType: Table<TEntity>.AttachAll<TSubEntity>\n- uid: System.Data.Linq.Table`1.Context*\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: Context\n  nameWithType: Table<TEntity>.Context\n- uid: System.Data.Linq.Table`1.DeleteAllOnSubmit<TSubEntity>*\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: DeleteAllOnSubmit<TSubEntity>\n  nameWithType: Table<TEntity>.DeleteAllOnSubmit<TSubEntity>\n- uid: System.Data.Linq.Table`1.DeleteOnSubmit*\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: DeleteOnSubmit\n  nameWithType: Table<TEntity>.DeleteOnSubmit\n- uid: System.Data.Linq.Table`1.GetEnumerator*\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: Table<TEntity>.GetEnumerator\n- uid: System.Data.Linq.Table`1.GetModifiedMembers*\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: GetModifiedMembers\n  nameWithType: Table<TEntity>.GetModifiedMembers\n- uid: System.Data.Linq.Table`1.GetNewBindingList*\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: GetNewBindingList\n  nameWithType: Table<TEntity>.GetNewBindingList\n- uid: System.Data.Linq.Table`1.GetOriginalEntityState*\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: GetOriginalEntityState\n  nameWithType: Table<TEntity>.GetOriginalEntityState\n- uid: System.Data.Linq.Table`1.InsertAllOnSubmit<TSubEntity>*\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: InsertAllOnSubmit<TSubEntity>\n  nameWithType: Table<TEntity>.InsertAllOnSubmit<TSubEntity>\n- uid: System.Data.Linq.Table`1.InsertOnSubmit*\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: InsertOnSubmit\n  nameWithType: Table<TEntity>.InsertOnSubmit\n- uid: System.Data.Linq.Table`1.IsReadOnly*\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: Table<TEntity>.IsReadOnly\n- uid: System.Data.Linq.Table`1.System#Collections#Generic#IEnumerable<TEntity>#GetEnumerator*\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.Collections.Generic.IEnumerable<TEntity>.GetEnumerator\n  nameWithType: Table<TEntity>.System.Collections.Generic.IEnumerable<TEntity>.GetEnumerator\n- uid: System.Data.Linq.Table`1.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: Table<TEntity>.System.Collections.IEnumerable.GetEnumerator\n- uid: System.Data.Linq.Table`1.System#ComponentModel#IListSource#ContainsListCollection*\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.ComponentModel.IListSource.ContainsListCollection\n  nameWithType: Table<TEntity>.System.ComponentModel.IListSource.ContainsListCollection\n- uid: System.Data.Linq.Table`1.System#ComponentModel#IListSource#GetList*\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.ComponentModel.IListSource.GetList\n  nameWithType: Table<TEntity>.System.ComponentModel.IListSource.GetList\n- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach*\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.Data.Linq.ITable.Attach\n  nameWithType: Table<TEntity>.System.Data.Linq.ITable.Attach\n- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll*\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.Data.Linq.ITable.AttachAll\n  nameWithType: Table<TEntity>.System.Data.Linq.ITable.AttachAll\n- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteAllOnSubmit*\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.Data.Linq.ITable.DeleteAllOnSubmit\n  nameWithType: Table<TEntity>.System.Data.Linq.ITable.DeleteAllOnSubmit\n- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit*\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.Data.Linq.ITable.DeleteOnSubmit\n  nameWithType: Table<TEntity>.System.Data.Linq.ITable.DeleteOnSubmit\n- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#GetModifiedMembers*\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.Data.Linq.ITable.GetModifiedMembers\n  nameWithType: Table<TEntity>.System.Data.Linq.ITable.GetModifiedMembers\n- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#GetOriginalEntityState*\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.Data.Linq.ITable.GetOriginalEntityState\n  nameWithType: Table<TEntity>.System.Data.Linq.ITable.GetOriginalEntityState\n- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertAllOnSubmit*\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.Data.Linq.ITable.InsertAllOnSubmit\n  nameWithType: Table<TEntity>.System.Data.Linq.ITable.InsertAllOnSubmit\n- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertOnSubmit*\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.Data.Linq.ITable.InsertOnSubmit\n  nameWithType: Table<TEntity>.System.Data.Linq.ITable.InsertOnSubmit\n- uid: System.Data.Linq.Table`1.System#Linq#IQueryable#ElementType*\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.Linq.IQueryable.ElementType\n  nameWithType: Table<TEntity>.System.Linq.IQueryable.ElementType\n- uid: System.Data.Linq.Table`1.System#Linq#IQueryable#Expression*\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.Linq.IQueryable.Expression\n  nameWithType: Table<TEntity>.System.Linq.IQueryable.Expression\n- uid: System.Data.Linq.Table`1.System#Linq#IQueryable#Provider*\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.Linq.IQueryable.Provider\n  nameWithType: Table<TEntity>.System.Linq.IQueryable.Provider\n- uid: System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery*\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.Linq.IQueryProvider.CreateQuery\n  nameWithType: Table<TEntity>.System.Linq.IQueryProvider.CreateQuery\n- uid: System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery<TResult>*\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.Linq.IQueryProvider.CreateQuery<TResult>\n  nameWithType: Table<TEntity>.System.Linq.IQueryProvider.CreateQuery<TResult>\n- uid: System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute*\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.Linq.IQueryProvider.Execute\n  nameWithType: Table<TEntity>.System.Linq.IQueryProvider.Execute\n- uid: System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute<TResult>*\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: System.Linq.IQueryProvider.Execute<TResult>\n  nameWithType: Table<TEntity>.System.Linq.IQueryProvider.Execute<TResult>\n- uid: System.Data.Linq.Table`1.ToString*\n  parent: System.Data.Linq.Table`1\n  isExternal: false\n  name: ToString\n  nameWithType: Table<TEntity>.ToString\n"}