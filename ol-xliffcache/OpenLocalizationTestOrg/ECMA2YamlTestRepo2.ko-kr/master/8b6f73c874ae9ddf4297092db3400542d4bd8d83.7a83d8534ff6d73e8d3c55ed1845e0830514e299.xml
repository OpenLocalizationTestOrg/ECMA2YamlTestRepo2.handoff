{"nodes":[{"pos":[815,895],"content":"Provides programmatic access to an ASP.NET user control's output cache settings.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides programmatic access to an ASP.NET user control's output cache settings.","pos":[0,80]}]},{"pos":[908,3515],"content":"The ControlCachePolicy class is used by developers in programmatic user control scenarios to specify output caching settings for user controls (.ascx files). ASP.NET embeds user controls within a <xref:System.Web.UI.BasePartialCachingControl> instance. The <xref:System.Web.UI.BasePartialCachingControl> class represents a user control that has output caching enabled. When you access the <xref:System.Web.UI.BasePartialCachingControl.CachePolicy%2A?displayProperty=fullName> property of a <xref:System.Web.UI.PartialCachingControl> control, you will always receive a valid ControlCachePolicy object. However, if you access the <xref:System.Web.UI.UserControl.CachePolicy%2A?displayProperty=fullName> property of a <xref:System.Web.UI.UserControl> control, you receive a valid ControlCachePolicy object only if the user control is already wrapped by a <xref:System.Web.UI.BasePartialCachingControl> control. If it is not wrapped, the ControlCachePolicy object returned by the property will throw exceptions when you attempt to manipulate it because it does not have an associated <xref:System.Web.UI.BasePartialCachingControl>. To determine whether a <xref:System.Web.UI.UserControl> instance supports caching without generating exceptions, inspect the <xref:System.Web.UI.ControlCachePolicy.SupportsCaching%2A> property.       Using the ControlCachePolicy class is one of several ways you can enable output caching. The following list describes methods you can use to enable output caching:      -   Use the  directive to enable output caching in declarative scenarios.      -   Use the <xref:System.Web.UI.PartialCachingAttribute> attribute to enable caching for a user control in a code-behind file.      -   Use the ControlCachePolicy class to specify cache settings in programmatic scenarios in which you are working with <xref:System.Web.UI.BasePartialCachingControl> instances that have been cache-enabled using one of the previous methods and dynamically loaded using the <xref:System.Web.UI.TemplateControl.LoadControl%2A?displayProperty=fullName> method. A ControlCachePolicy instance can be successfully manipulated only between the `Init` and `PreRender` stages of the control life cycle. If you modify a ControlCachePolicy object after the `PreRender` phase, ASP.NET throws an exception, because any changes made after the control is rendered cannot actually affect cache settings (a control is cached during the `Render` stage). Finally, a user control instance (and therefore its ControlCachePolicy object) is only available for programmatic manipulation when it is actually rendered.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ControlCachePolicy class is used by developers in programmatic user control scenarios to specify output caching settings for user controls (.ascx files).","pos":[0,157]},{"content":"ASP.NET embeds user controls within a &lt;xref:System.Web.UI.BasePartialCachingControl&gt; instance.","pos":[158,252],"source":" ASP.NET embeds user controls within a <xref:System.Web.UI.BasePartialCachingControl> instance."},{"content":"The &lt;xref:System.Web.UI.BasePartialCachingControl&gt; class represents a user control that has output caching enabled.","pos":[253,368],"source":" The <xref:System.Web.UI.BasePartialCachingControl> class represents a user control that has output caching enabled."},{"content":"When you access the &lt;xref:System.Web.UI.BasePartialCachingControl.CachePolicy%2A?displayProperty=fullName&gt; property of a &lt;xref:System.Web.UI.PartialCachingControl&gt; control, you will always receive a valid ControlCachePolicy object.","pos":[369,600],"source":" When you access the <xref:System.Web.UI.BasePartialCachingControl.CachePolicy%2A?displayProperty=fullName> property of a <xref:System.Web.UI.PartialCachingControl> control, you will always receive a valid ControlCachePolicy object."},{"content":"However, if you access the &lt;xref:System.Web.UI.UserControl.CachePolicy%2A?displayProperty=fullName&gt; property of a &lt;xref:System.Web.UI.UserControl&gt; control, you receive a valid ControlCachePolicy object only if the user control is already wrapped by a &lt;xref:System.Web.UI.BasePartialCachingControl&gt; control.","pos":[601,907],"source":" However, if you access the <xref:System.Web.UI.UserControl.CachePolicy%2A?displayProperty=fullName> property of a <xref:System.Web.UI.UserControl> control, you receive a valid ControlCachePolicy object only if the user control is already wrapped by a <xref:System.Web.UI.BasePartialCachingControl> control."},{"content":"If it is not wrapped, the ControlCachePolicy object returned by the property will throw exceptions when you attempt to manipulate it because it does not have an associated &lt;xref:System.Web.UI.BasePartialCachingControl&gt;.","pos":[908,1127],"source":" If it is not wrapped, the ControlCachePolicy object returned by the property will throw exceptions when you attempt to manipulate it because it does not have an associated <xref:System.Web.UI.BasePartialCachingControl>."},{"content":"To determine whether a &lt;xref:System.Web.UI.UserControl&gt; instance supports caching without generating exceptions, inspect the &lt;xref:System.Web.UI.ControlCachePolicy.SupportsCaching%2A&gt; property.","pos":[1128,1321],"source":" To determine whether a <xref:System.Web.UI.UserControl> instance supports caching without generating exceptions, inspect the <xref:System.Web.UI.ControlCachePolicy.SupportsCaching%2A> property."},{"content":"Using the ControlCachePolicy class is one of several ways you can enable output caching.","pos":[1328,1416]},{"content":"The following list describes methods you can use to enable output caching:      -   Use the  directive to enable output caching in declarative scenarios.","pos":[1417,1570]},{"content":"-   Use the &lt;xref:System.Web.UI.PartialCachingAttribute&gt; attribute to enable caching for a user control in a code-behind file.","pos":[1576,1702],"source":"      -   Use the <xref:System.Web.UI.PartialCachingAttribute> attribute to enable caching for a user control in a code-behind file."},{"content":"-   Use the ControlCachePolicy class to specify cache settings in programmatic scenarios in which you are working with &lt;xref:System.Web.UI.BasePartialCachingControl&gt; instances that have been cache-enabled using one of the previous methods and dynamically loaded using the &lt;xref:System.Web.UI.TemplateControl.LoadControl%2A?displayProperty=fullName&gt; method.","pos":[1708,2064],"source":"      -   Use the ControlCachePolicy class to specify cache settings in programmatic scenarios in which you are working with <xref:System.Web.UI.BasePartialCachingControl> instances that have been cache-enabled using one of the previous methods and dynamically loaded using the <xref:System.Web.UI.TemplateControl.LoadControl%2A?displayProperty=fullName> method."},{"content":"A ControlCachePolicy instance can be successfully manipulated only between the <ph id=\"ph1\">`Init`</ph> and <ph id=\"ph2\">`PreRender`</ph> stages of the control life cycle.","pos":[2065,2200],"source":" A ControlCachePolicy instance can be successfully manipulated only between the `Init` and `PreRender` stages of the control life cycle."},{"content":"If you modify a ControlCachePolicy object after the <ph id=\"ph1\">`PreRender`</ph> phase, ASP.NET throws an exception, because any changes made after the control is rendered cannot actually affect cache settings (a control is cached during the <ph id=\"ph2\">`Render`</ph> stage).","pos":[2201,2442],"source":" If you modify a ControlCachePolicy object after the `PreRender` phase, ASP.NET throws an exception, because any changes made after the control is rendered cannot actually affect cache settings (a control is cached during the `Render` stage)."},{"content":"Finally, a user control instance (and therefore its ControlCachePolicy object) is only available for programmatic manipulation when it is actually rendered.","pos":[2443,2599]}]},{"pos":[5905,5994],"content":"Gets or sets a value indicating whether fragment caching is enabled for the user control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether fragment caching is enabled for the user control.","pos":[0,89]}]},{"pos":[6109,6284],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the user control's output is cached; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user control's output is cached; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7053,7194],"content":"Gets or sets an instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Caching.CacheDependency\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class associated with the cached user control output.","needQuote":true,"needEscape":true,"source":"Gets or sets an instance of the <xref href=\"System.Web.Caching.CacheDependency\"></xref> class associated with the cached user control output."},{"pos":[7206,7527],"content":"The Dependency property delegates to the <xref:System.Web.UI.BasePartialCachingControl.Dependency%2A> property of the <xref:System.Web.UI.BasePartialCachingControl> control that wraps the user control. When the <xref:System.Web.Caching.CacheDependency> instance is invalidated, the user control is removed from the cache.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Dependency property delegates to the <xref:System.Web.UI.BasePartialCachingControl.Dependency%2A> property of the <xref:System.Web.UI.BasePartialCachingControl> control that wraps the user control. When the <xref:System.Web.Caching.CacheDependency> instance is invalidated, the user control is removed from the cache.","pos":[0,321],"nodes":[{"content":"The Dependency property delegates to the &lt;xref:System.Web.UI.BasePartialCachingControl.Dependency%2A&gt; property of the &lt;xref:System.Web.UI.BasePartialCachingControl&gt; control that wraps the user control.","pos":[0,201],"source":"The Dependency property delegates to the <xref:System.Web.UI.BasePartialCachingControl.Dependency%2A> property of the <xref:System.Web.UI.BasePartialCachingControl> control that wraps the user control."},{"content":"When the &lt;xref:System.Web.Caching.CacheDependency&gt; instance is invalidated, the user control is removed from the cache.","pos":[202,321],"source":" When the <xref:System.Web.Caching.CacheDependency> instance is invalidated, the user control is removed from the cache."}]}]},{"pos":[7696,7861],"content":"The <xref href=\"System.Web.Caching.CacheDependency\"></xref> associated with the control. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.Caching.CacheDependency\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> associated with the control.","pos":[0,88],"source":"The <xref href=\"System.Web.Caching.CacheDependency\"></xref> associated with the control."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[89,165],"source":" The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[8628,8712],"content":"Gets or sets the amount of time that cached items are to remain in the output cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the amount of time that cached items are to remain in the output cache.","pos":[0,84]}]},{"pos":[8724,8934],"content":"If an absolute expiration policy is set using the <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> method, the Duration property returns the amount of time remaining until cache entry expiration.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If an absolute expiration policy is set using the &lt;xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A&gt; method, the Duration property returns the amount of time remaining until cache entry expiration.","pos":[0,210],"source":"If an absolute expiration policy is set using the <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> method, the Duration property returns the amount of time remaining until cache entry expiration."}]},{"pos":[10151,10298],"content":"A <xref:System.TimeSpan> that represents the amount of time a user control is to remain in the output cache. The default is <xref:System.TimeSpan>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <xref:System.TimeSpan> that represents the amount of time a user control is to remain in the output cache. The default is <xref:System.TimeSpan>.","pos":[0,147],"nodes":[{"content":"A &lt;xref:System.TimeSpan&gt; that represents the amount of time a user control is to remain in the output cache.","pos":[0,108],"source":"A <xref:System.TimeSpan> that represents the amount of time a user control is to remain in the output cache."},{"content":"The default is &lt;xref:System.TimeSpan&gt;.","pos":[109,147],"source":" The default is <xref:System.TimeSpan>."}]}]},{"pos":[11081,11175],"content":"Gets or sets the name of the output-cache provider that is associated with a control instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the output-cache provider that is associated with a control instance.","pos":[0,94]}]},{"pos":[11187,11487],"content":"The ProviderName property enables you to specify the current output-cache provider that is associated with a control, by using the <xref:System.Web.UI.ControlCachePolicy> instance. This property can be set only before the <xref:System.Web.UI.Control.PreRender> event occurs in the control life cycle.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ProviderName property enables you to specify the current output-cache provider that is associated with a control, by using the <xref:System.Web.UI.ControlCachePolicy> instance. This property can be set only before the <xref:System.Web.UI.Control.PreRender> event occurs in the control life cycle.","pos":[0,300],"nodes":[{"content":"The ProviderName property enables you to specify the current output-cache provider that is associated with a control, by using the &lt;xref:System.Web.UI.ControlCachePolicy&gt; instance.","pos":[0,180],"source":"The ProviderName property enables you to specify the current output-cache provider that is associated with a control, by using the <xref:System.Web.UI.ControlCachePolicy> instance."},{"content":"This property can be set only before the &lt;xref:System.Web.UI.Control.PreRender&gt; event occurs in the control life cycle.","pos":[181,300],"source":" This property can be set only before the <xref:System.Web.UI.Control.PreRender> event occurs in the control life cycle."}]}]},{"pos":[11609,11634],"content":"The name of the provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the provider.","pos":[0,25]}]},{"pos":[11848,11880],"content":"The provider name was not found.","needQuote":true,"needEscape":true,"nodes":[{"content":"The provider name was not found.","pos":[0,32]}]},{"pos":[11975,12107],"content":"An attempt was made to set the ProviderName property during or after the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Control.PreRender\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"An attempt was made to set the ProviderName property during or after the <xref href=\"System.Web.UI.Control.PreRender\"></xref> event."},{"pos":[12529,12697],"content":"Instructs the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.BasePartialCachingControl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control that wraps the user control to expire the cache entry at the specified date and time.","needQuote":true,"needEscape":true,"source":"Instructs the <xref href=\"System.Web.UI.BasePartialCachingControl\"></xref> control that wraps the user control to expire the cache entry at the specified date and time."},{"pos":[12709,13169],"content":"Use the SetExpires and <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> methods (passing `true`) to instruct the <xref:System.Web.UI.BasePartialCachingControl> control that wraps the user control to use a sliding expiration caching policy instead of an absolute expiration policy. Use the SetExpires method and the <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> method (passing `false`) to specify an absolute expiration policy.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the SetExpires and &lt;xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A&gt; methods (passing <ph id=\"ph1\">`true`</ph>) to instruct the &lt;xref:System.Web.UI.BasePartialCachingControl&gt; control that wraps the user control to use a sliding expiration caching policy instead of an absolute expiration policy.","pos":[0,295],"source":"Use the SetExpires and <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> methods (passing `true`) to instruct the <xref:System.Web.UI.BasePartialCachingControl> control that wraps the user control to use a sliding expiration caching policy instead of an absolute expiration policy."},{"content":"Use the SetExpires method and the &lt;xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A&gt; method (passing <ph id=\"ph1\">`false`</ph>) to specify an absolute expiration policy.","pos":[296,460],"source":" Use the SetExpires method and the <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> method (passing `false`) to specify an absolute expiration policy."}]},{"pos":[14560,14622],"content":"A <xref:System.DateTime> after which the cached entry expires.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.DateTime&gt; after which the cached entry expires.","pos":[0,62],"source":"A <xref:System.DateTime> after which the cached entry expires."}]},{"pos":[14788,14912],"content":"The user control is not associated with a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.BasePartialCachingControl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and is not cacheable.","needQuote":true,"needEscape":true,"source":"The user control is not associated with a <xref href=\"System.Web.UI.BasePartialCachingControl\"></xref> and is not cacheable."},{"pos":[15379,15566],"content":"Instructs the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.BasePartialCachingControl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control that wraps the user control to set the user control's cache entry to use sliding or absolute expiration.","needQuote":true,"needEscape":true,"source":"Instructs the <xref href=\"System.Web.UI.BasePartialCachingControl\"></xref> control that wraps the user control to set the user control's cache entry to use sliding or absolute expiration."},{"pos":[15578,16038],"content":"Use the <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> and SetSlidingExpiration methods (passing `true`) to instruct the <xref:System.Web.UI.BasePartialCachingControl> control that wraps the user control to use a sliding expiration caching policy instead of an absolute expiration policy. Use the <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> method and the SetSlidingExpiration method (passing `false`) to specify an absolute expiration policy.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the &lt;xref:System.Web.UI.ControlCachePolicy.SetExpires%2A&gt; and SetSlidingExpiration methods (passing <ph id=\"ph1\">`true`</ph>) to instruct the &lt;xref:System.Web.UI.BasePartialCachingControl&gt; control that wraps the user control to use a sliding expiration caching policy instead of an absolute expiration policy.","pos":[0,295],"source":"Use the <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> and SetSlidingExpiration methods (passing `true`) to instruct the <xref:System.Web.UI.BasePartialCachingControl> control that wraps the user control to use a sliding expiration caching policy instead of an absolute expiration policy."},{"content":"Use the &lt;xref:System.Web.UI.ControlCachePolicy.SetExpires%2A&gt; method and the SetSlidingExpiration method (passing <ph id=\"ph1\">`false`</ph>) to specify an absolute expiration policy.","pos":[296,460],"source":" Use the <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> method and the SetSlidingExpiration method (passing `false`) to specify an absolute expiration policy."}]},{"pos":[17290,17489],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use sliding cache expiration instead of absolute expiration; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use sliding cache expiration instead of absolute expiration; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[17665,17789],"content":"The user control is not associated with a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.BasePartialCachingControl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and is not cacheable.","needQuote":true,"needEscape":true,"source":"The user control is not associated with a <xref href=\"System.Web.UI.BasePartialCachingControl\"></xref> and is not cacheable."},{"pos":[18226,18312],"content":"Sets a list of custom strings that the output cache will use to vary the user control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets a list of custom strings that the output cache will use to vary the user control.","pos":[0,86]}]},{"pos":[18324,18617],"content":"If you pass \"browser\" as the `varyByCustom` parameter, the user control will be varied by browser type and major version number. If another custom string is entered, you must override the <xref:System.Web.HttpApplication.GetVaryByCustomString%2A> method in your application's Global.asax file.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If you pass \"browser\" as the <ph id=\"ph1\">`varyByCustom`</ph> parameter, the user control will be varied by browser type and major version number.","pos":[0,128],"source":"If you pass \"browser\" as the `varyByCustom` parameter, the user control will be varied by browser type and major version number."},{"content":"If another custom string is entered, you must override the &lt;xref:System.Web.HttpApplication.GetVaryByCustomString%2A&gt; method in your application's Global.asax file.","pos":[129,293],"source":" If another custom string is entered, you must override the <xref:System.Web.HttpApplication.GetVaryByCustomString%2A> method in your application's Global.asax file."}]},{"pos":[18776,18803],"content":"The list of custom strings.","needQuote":true,"needEscape":true,"nodes":[{"content":"The list of custom strings.","pos":[0,27]}]},{"pos":[18974,19098],"content":"The user control is not associated with a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.BasePartialCachingControl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and is not cacheable.","needQuote":true,"needEscape":true,"source":"The user control is not associated with a <xref href=\"System.Web.UI.BasePartialCachingControl\"></xref> and is not cacheable."},{"pos":[19483,19549],"content":"Gets a value indicating whether the user control supports caching.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the user control supports caching.","pos":[0,66]}]},{"pos":[19561,19846],"content":"A user control supports caching if it is associated with a <xref:System.Web.UI.BasePartialCachingControl> instance, which signals that either an  directive was parsed by the ASP.NET parser or the user control was decorated with a <xref:System.Web.UI.PartialCachingAttribute> attribute.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A user control supports caching if it is associated with a &lt;xref:System.Web.UI.BasePartialCachingControl&gt; instance, which signals that either an  directive was parsed by the ASP.NET parser or the user control was decorated with a &lt;xref:System.Web.UI.PartialCachingAttribute&gt; attribute.","pos":[0,285],"source":"A user control supports caching if it is associated with a <xref:System.Web.UI.BasePartialCachingControl> instance, which signals that either an  directive was parsed by the ASP.NET parser or the user control was decorated with a <xref:System.Web.UI.PartialCachingAttribute> attribute."}]},{"pos":[19965,20138],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the user control supports caching; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user control supports caching; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[20592,20664],"content":"Gets or sets a list of control identifiers to vary the cached output by.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a list of control identifiers to vary the cached output by.","pos":[0,72]}]},{"pos":[20787,21002],"content":"A semicolon-separated list of strings used to vary a user control's output cache. These strings represent the <xref:System.Web.UI.Control.ID*> property values of ASP.NET server controls declared in the user control.","needQuote":true,"needEscape":true,"nodes":[{"content":"A semicolon-separated list of strings used to vary a user control's output cache. These strings represent the <xref:System.Web.UI.Control.ID*> property values of ASP.NET server controls declared in the user control.","pos":[0,215],"nodes":[{"content":"A semicolon-separated list of strings used to vary a user control's output cache.","pos":[0,81]},{"content":"These strings represent the &lt;xref:System.Web.UI.Control.ID*&gt; property values of ASP.NET server controls declared in the user control.","pos":[82,215],"source":" These strings represent the <xref:System.Web.UI.Control.ID*> property values of ASP.NET server controls declared in the user control."}]}]},{"pos":[21795,21986],"content":"Gets or sets a list of <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_GET\" name=\"GET\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_POST\" name=\"POST\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> parameter names to vary the cached output by.","needQuote":true,"needEscape":true,"source":"Gets or sets a list of <xref uid=\"langword_csharp_GET\" name=\"GET\" href=\"\"></xref> or <xref uid=\"langword_csharp_POST\" name=\"POST\" href=\"\"></xref> parameter names to vary the cached output by."},{"pos":[21998,22381],"content":"By default, these strings correspond to a query string value sent with the GET method or to a parameter sent using the POST method. When the VaryByParams property is set to multiple parameters, the output cache contains a different version of the requested document for each specified parameter. Possible values include \"none\", \"*\", and any valid query string or POST parameter name.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"By default, these strings correspond to a query string value sent with the GET method or to a parameter sent using the POST method. When the VaryByParams property is set to multiple parameters, the output cache contains a different version of the requested document for each specified parameter. Possible values include \"none\", \"*\", and any valid query string or POST parameter name.","pos":[0,383],"nodes":[{"content":"By default, these strings correspond to a query string value sent with the GET method or to a parameter sent using the POST method.","pos":[0,131]},{"content":"When the VaryByParams property is set to multiple parameters, the output cache contains a different version of the requested document for each specified parameter.","pos":[132,295]},{"content":"Possible values include \"none\", \"*\", and any valid query string or POST parameter name.","pos":[296,383]}]}]},{"pos":[22543,22611],"content":"A semicolon-separated list of strings used to vary the output cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"A semicolon-separated list of strings used to vary the output cache.","pos":[0,68]}]},{"pos":[22779,22903],"content":"The user control is not associated with a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.BasePartialCachingControl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and is not cacheable.","needQuote":true,"needEscape":true,"source":"The user control is not associated with a <xref href=\"System.Web.UI.BasePartialCachingControl\"></xref> and is not cacheable."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.ControlCachePolicy\n  id: ControlCachePolicy\n  children:\n  - System.Web.UI.ControlCachePolicy.Cached\n  - System.Web.UI.ControlCachePolicy.Dependency\n  - System.Web.UI.ControlCachePolicy.Duration\n  - System.Web.UI.ControlCachePolicy.ProviderName\n  - System.Web.UI.ControlCachePolicy.SetExpires(System.DateTime)\n  - System.Web.UI.ControlCachePolicy.SetSlidingExpiration(System.Boolean)\n  - System.Web.UI.ControlCachePolicy.SetVaryByCustom(System.String)\n  - System.Web.UI.ControlCachePolicy.SupportsCaching\n  - System.Web.UI.ControlCachePolicy.VaryByControl\n  - System.Web.UI.ControlCachePolicy.VaryByParams\n  langs:\n  - csharp\n  name: ControlCachePolicy\n  nameWithType: ControlCachePolicy\n  fullName: System.Web.UI.ControlCachePolicy\n  type: Class\n  summary: Provides programmatic access to an ASP.NET user control's output cache settings.\n  remarks: \"The ControlCachePolicy class is used by developers in programmatic user control scenarios to specify output caching settings for user controls (.ascx files). ASP.NET embeds user controls within a <xref:System.Web.UI.BasePartialCachingControl> instance. The <xref:System.Web.UI.BasePartialCachingControl> class represents a user control that has output caching enabled. When you access the <xref:System.Web.UI.BasePartialCachingControl.CachePolicy%2A?displayProperty=fullName> property of a <xref:System.Web.UI.PartialCachingControl> control, you will always receive a valid ControlCachePolicy object. However, if you access the <xref:System.Web.UI.UserControl.CachePolicy%2A?displayProperty=fullName> property of a <xref:System.Web.UI.UserControl> control, you receive a valid ControlCachePolicy object only if the user control is already wrapped by a <xref:System.Web.UI.BasePartialCachingControl> control. If it is not wrapped, the ControlCachePolicy object returned by the property will throw exceptions when you attempt to manipulate it because it does not have an associated <xref:System.Web.UI.BasePartialCachingControl>. To determine whether a <xref:System.Web.UI.UserControl> instance supports caching without generating exceptions, inspect the <xref:System.Web.UI.ControlCachePolicy.SupportsCaching%2A> property.  \\n  \\n Using the ControlCachePolicy class is one of several ways you can enable output caching. The following list describes methods you can use to enable output caching:  \\n  \\n-   Use the  directive to enable output caching in declarative scenarios.  \\n  \\n-   Use the <xref:System.Web.UI.PartialCachingAttribute> attribute to enable caching for a user control in a code-behind file.  \\n  \\n-   Use the ControlCachePolicy class to specify cache settings in programmatic scenarios in which you are working with <xref:System.Web.UI.BasePartialCachingControl> instances that have been cache-enabled using one of the previous methods and dynamically loaded using the <xref:System.Web.UI.TemplateControl.LoadControl%2A?displayProperty=fullName> method. A ControlCachePolicy instance can be successfully manipulated only between the `Init` and `PreRender` stages of the control life cycle. If you modify a ControlCachePolicy object after the `PreRender` phase, ASP.NET throws an exception, because any changes made after the control is rendered cannot actually affect cache settings (a control is cached during the `Render` stage). Finally, a user control instance (and therefore its ControlCachePolicy object) is only available for programmatic manipulation when it is actually rendered.\"\n  example:\n  - \"The following code example demonstrates how a user control can be loaded dynamically and manipulated programmatically at run time. The <xref:System.Web.UI.PartialCachingAttribute> attribute is applied to a user control named `SimpleControl`, which means the user control is wrapped by a <xref:System.Web.UI.PartialCachingControl> control at run time. The `SimpleControl` object's caching settings can be programmatically manipulated through its associated ControlCachePolicy object, which is available through a reference to the <xref:System.Web.UI.PartialCachingControl> control that wraps it. In this example, the <xref:System.Web.UI.ControlCachePolicy.Duration%2A> property is examined during page initialization and changed using the <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> and <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> methods if some conditions are met.  \\n  \\n [!code-cs[System.Web.UI.ControlCachePolicy_2#1](~/add/codesnippet/csharp/t-system.web.ui.controlc_1_1.aspx)]\\n [!code-vb[System.Web.UI.ControlCachePolicy_2#1](~/add/codesnippet/visualbasic/t-system.web.ui.controlc_1_1.aspx)]  \\n  \\n The following code example demonstrates using the `SimpleControl` user control from a Web Forms page. To run this example successfully, make sure the user control file (.ascx), its code-behind file (.cs or .vb), and the Web Forms page that hosts the user control (.aspx) are in the same directory.  \\n  \\n [!code-cs[System.Web.UI.ControlCachePolicy_2#2](~/add/codesnippet/csharp/t-system.web.ui.controlc_1_2.cs)]\\n [!code-vb[System.Web.UI.ControlCachePolicy_2#2](~/add/codesnippet/visualbasic/t-system.web.ui.controlc_1_2.vb)]  \\n  \\n [!code-cs[System.Web.UI.ControlCachePolicy_2#3](~/add/codesnippet/csharp/t-system.web.ui.controlc_1_3.ascx)]\\n [!code-vb[System.Web.UI.ControlCachePolicy_2#3](~/add/codesnippet/visualbasic/t-system.web.ui.controlc_1_3.ascx)]\"\n  syntax:\n    content: public sealed class ControlCachePolicy\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.UI.ControlCachePolicy.Cached\n  id: Cached\n  parent: System.Web.UI.ControlCachePolicy\n  langs:\n  - csharp\n  name: Cached\n  nameWithType: ControlCachePolicy.Cached\n  fullName: System.Web.UI.ControlCachePolicy.Cached\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets or sets a value indicating whether fragment caching is enabled for the user control.\n  syntax:\n    content: public bool Cached { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user control's output is cached; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.ControlCachePolicy.Cached*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: \"The user control is not associated with a <xref href=\\\"System.Web.UI.BasePartialCachingControl\\\"></xref> and is not cacheable.  \\n  \\n \\\\- or -  \\n  \\n The Cached property is set outside of the initialization and rendering stages of the control.\"\n  platform:\n  - net462\n- uid: System.Web.UI.ControlCachePolicy.Dependency\n  id: Dependency\n  parent: System.Web.UI.ControlCachePolicy\n  langs:\n  - csharp\n  name: Dependency\n  nameWithType: ControlCachePolicy.Dependency\n  fullName: System.Web.UI.ControlCachePolicy.Dependency\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets or sets an instance of the <xref href=\"System.Web.Caching.CacheDependency\"></xref> class associated with the cached user control output.\n  remarks: The Dependency property delegates to the <xref:System.Web.UI.BasePartialCachingControl.Dependency%2A> property of the <xref:System.Web.UI.BasePartialCachingControl> control that wraps the user control. When the <xref:System.Web.Caching.CacheDependency> instance is invalidated, the user control is removed from the cache.\n  syntax:\n    content: public System.Web.Caching.CacheDependency Dependency { get; set; }\n    return:\n      type: System.Web.Caching.CacheDependency\n      description: The <xref href=\"System.Web.Caching.CacheDependency\"></xref> associated with the control. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Web.UI.ControlCachePolicy.Dependency*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: \"The user control is not associated with a <xref href=\\\"System.Web.UI.BasePartialCachingControl\\\"></xref> and is not cacheable.  \\n  \\n \\\\- or -  \\n  \\n The Dependency property is set outside of the initialization and rendering stages of the control.\"\n  platform:\n  - net462\n- uid: System.Web.UI.ControlCachePolicy.Duration\n  id: Duration\n  parent: System.Web.UI.ControlCachePolicy\n  langs:\n  - csharp\n  name: Duration\n  nameWithType: ControlCachePolicy.Duration\n  fullName: System.Web.UI.ControlCachePolicy.Duration\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets or sets the amount of time that cached items are to remain in the output cache.\n  remarks: If an absolute expiration policy is set using the <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> method, the Duration property returns the amount of time remaining until cache entry expiration.\n  example:\n  - \"The following code example demonstrates how a user control can be loaded dynamically and manipulated programmatically at run time. The <xref:System.Web.UI.PartialCachingAttribute> attribute is applied to a user control named `SimpleControl`, which means it is wrapped by a <xref:System.Web.UI.PartialCachingControl> control at run time. The `SimpleControl` object's caching settings can be programmatically manipulated through its associated <xref:System.Web.UI.ControlCachePolicy> object, which is available through a reference to the <xref:System.Web.UI.PartialCachingControl> control that wraps it. In this example, the Duration property is examined during page initialization and cache expiration is changed if some conditions are met. This example is part of a larger example provided for the <xref:System.Web.UI.ControlCachePolicy> class.  \\n  \\n [!code-cs[System.Web.UI.ControlCachePolicy_2#1](~/add/codesnippet/csharp/p-system.web.ui.controlc_0_1.aspx)]\\n [!code-vb[System.Web.UI.ControlCachePolicy_2#1](~/add/codesnippet/visualbasic/p-system.web.ui.controlc_0_1.aspx)]\"\n  syntax:\n    content: public TimeSpan Duration { get; set; }\n    return:\n      type: System.TimeSpan\n      description: A <xref:System.TimeSpan> that represents the amount of time a user control is to remain in the output cache. The default is <xref:System.TimeSpan>.\n  overload: System.Web.UI.ControlCachePolicy.Duration*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: \"The user control is not associated with a <xref href=\\\"System.Web.UI.BasePartialCachingControl\\\"></xref> and is not cacheable.  \\n  \\n \\\\- or -  \\n  \\n The Duration property is set outside of the initialization and rendering stages of the control.\"\n  platform:\n  - net462\n- uid: System.Web.UI.ControlCachePolicy.ProviderName\n  id: ProviderName\n  parent: System.Web.UI.ControlCachePolicy\n  langs:\n  - csharp\n  name: ProviderName\n  nameWithType: ControlCachePolicy.ProviderName\n  fullName: System.Web.UI.ControlCachePolicy.ProviderName\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets or sets the name of the output-cache provider that is associated with a control instance.\n  remarks: The ProviderName property enables you to specify the current output-cache provider that is associated with a control, by using the <xref:System.Web.UI.ControlCachePolicy> instance. This property can be set only before the <xref:System.Web.UI.Control.PreRender> event occurs in the control life cycle.\n  syntax:\n    content: public string ProviderName { get; set; }\n    return:\n      type: System.String\n      description: The name of the provider.\n  overload: System.Web.UI.ControlCachePolicy.ProviderName*\n  exceptions:\n  - type: System.Configuration.Provider.ProviderException\n    commentId: T:System.Configuration.Provider.ProviderException\n    description: The provider name was not found.\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: An attempt was made to set the ProviderName property during or after the <xref href=\"System.Web.UI.Control.PreRender\"></xref> event.\n  platform:\n  - net462\n- uid: System.Web.UI.ControlCachePolicy.SetExpires(System.DateTime)\n  id: SetExpires(System.DateTime)\n  parent: System.Web.UI.ControlCachePolicy\n  langs:\n  - csharp\n  name: SetExpires(DateTime)\n  nameWithType: ControlCachePolicy.SetExpires(DateTime)\n  fullName: System.Web.UI.ControlCachePolicy.SetExpires(DateTime)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Instructs the <xref href=\"System.Web.UI.BasePartialCachingControl\"></xref> control that wraps the user control to expire the cache entry at the specified date and time.\n  remarks: Use the SetExpires and <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> methods (passing `true`) to instruct the <xref:System.Web.UI.BasePartialCachingControl> control that wraps the user control to use a sliding expiration caching policy instead of an absolute expiration policy. Use the SetExpires method and the <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> method (passing `false`) to specify an absolute expiration policy.\n  example:\n  - \"The following code example demonstrates how a user control can be loaded dynamically and manipulated programmatically at run time. The <xref:System.Web.UI.PartialCachingAttribute> attribute is applied to a user control named `SimpleControl`, which means the user control is wrapped by a <xref:System.Web.UI.PartialCachingControl> control at run time. The `SimpleControl` object's caching settings can be programmatically manipulated through its associated <xref:System.Web.UI.ControlCachePolicy> object, which is available through a reference to the <xref:System.Web.UI.PartialCachingControl> control that wraps it. In this example, the <xref:System.Web.UI.ControlCachePolicy.Duration%2A> property is examined during page initialization and changed using the <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> and SetExpires methods if some conditions are met. This example is part of a larger example provided for the <xref:System.Web.UI.ControlCachePolicy> class.  \\n  \\n [!code-cs[System.Web.UI.ControlCachePolicy_2#1](~/add/codesnippet/csharp/m-system.web.ui.controlc_2_1.aspx)]\\n [!code-vb[System.Web.UI.ControlCachePolicy_2#1](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_2_1.aspx)]\"\n  syntax:\n    content: public void SetExpires (DateTime expirationTime);\n    parameters:\n    - id: expirationTime\n      type: System.DateTime\n      description: A <xref:System.DateTime> after which the cached entry expires.\n  overload: System.Web.UI.ControlCachePolicy.SetExpires*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: The user control is not associated with a <xref href=\"System.Web.UI.BasePartialCachingControl\"></xref> and is not cacheable.\n  platform:\n  - net462\n- uid: System.Web.UI.ControlCachePolicy.SetSlidingExpiration(System.Boolean)\n  id: SetSlidingExpiration(System.Boolean)\n  parent: System.Web.UI.ControlCachePolicy\n  langs:\n  - csharp\n  name: SetSlidingExpiration(Boolean)\n  nameWithType: ControlCachePolicy.SetSlidingExpiration(Boolean)\n  fullName: System.Web.UI.ControlCachePolicy.SetSlidingExpiration(Boolean)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Instructs the <xref href=\"System.Web.UI.BasePartialCachingControl\"></xref> control that wraps the user control to set the user control's cache entry to use sliding or absolute expiration.\n  remarks: Use the <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> and SetSlidingExpiration methods (passing `true`) to instruct the <xref:System.Web.UI.BasePartialCachingControl> control that wraps the user control to use a sliding expiration caching policy instead of an absolute expiration policy. Use the <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> method and the SetSlidingExpiration method (passing `false`) to specify an absolute expiration policy.\n  example:\n  - \"The following code example demonstrates how a user control can be loaded dynamically and manipulated programmatically at run time. A user control named `SimpleControl` is decorated with a <xref:System.Web.UI.PartialCachingAttribute> attribute, which means it is wrapped by a <xref:System.Web.UI.PartialCachingControl> control at run time. The `SimpleControl` object's caching settings can be programmatically manipulated through its associated <xref:System.Web.UI.ControlCachePolicy> object, which is available through a reference to the <xref:System.Web.UI.PartialCachingControl> control that wraps it. In this example, caching settings are examined during page initialization and changed if some conditions are met. This example is part of a larger example provided for the <xref:System.Web.UI.ControlCachePolicy> class.  \\n  \\n [!code-cs[System.Web.UI.ControlCachePolicy_2#1](~/add/codesnippet/csharp/m-system.web.ui.controlc_8_1.aspx)]\\n [!code-vb[System.Web.UI.ControlCachePolicy_2#1](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_8_1.aspx)]\"\n  syntax:\n    content: public void SetSlidingExpiration (bool useSlidingExpiration);\n    parameters:\n    - id: useSlidingExpiration\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use sliding cache expiration instead of absolute expiration; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.ControlCachePolicy.SetSlidingExpiration*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: The user control is not associated with a <xref href=\"System.Web.UI.BasePartialCachingControl\"></xref> and is not cacheable.\n  platform:\n  - net462\n- uid: System.Web.UI.ControlCachePolicy.SetVaryByCustom(System.String)\n  id: SetVaryByCustom(System.String)\n  parent: System.Web.UI.ControlCachePolicy\n  langs:\n  - csharp\n  name: SetVaryByCustom(String)\n  nameWithType: ControlCachePolicy.SetVaryByCustom(String)\n  fullName: System.Web.UI.ControlCachePolicy.SetVaryByCustom(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Sets a list of custom strings that the output cache will use to vary the user control.\n  remarks: If you pass \"browser\" as the `varyByCustom` parameter, the user control will be varied by browser type and major version number. If another custom string is entered, you must override the <xref:System.Web.HttpApplication.GetVaryByCustomString%2A> method in your application's Global.asax file.\n  syntax:\n    content: public void SetVaryByCustom (string varyByCustom);\n    parameters:\n    - id: varyByCustom\n      type: System.String\n      description: The list of custom strings.\n  overload: System.Web.UI.ControlCachePolicy.SetVaryByCustom*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: The user control is not associated with a <xref href=\"System.Web.UI.BasePartialCachingControl\"></xref> and is not cacheable.\n  platform:\n  - net462\n- uid: System.Web.UI.ControlCachePolicy.SupportsCaching\n  id: SupportsCaching\n  parent: System.Web.UI.ControlCachePolicy\n  langs:\n  - csharp\n  name: SupportsCaching\n  nameWithType: ControlCachePolicy.SupportsCaching\n  fullName: System.Web.UI.ControlCachePolicy.SupportsCaching\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets a value indicating whether the user control supports caching.\n  remarks: A user control supports caching if it is associated with a <xref:System.Web.UI.BasePartialCachingControl> instance, which signals that either an  directive was parsed by the ASP.NET parser or the user control was decorated with a <xref:System.Web.UI.PartialCachingAttribute> attribute.\n  syntax:\n    content: public bool SupportsCaching { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user control supports caching; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.ControlCachePolicy.SupportsCaching*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.ControlCachePolicy.VaryByControl\n  id: VaryByControl\n  parent: System.Web.UI.ControlCachePolicy\n  langs:\n  - csharp\n  name: VaryByControl\n  nameWithType: ControlCachePolicy.VaryByControl\n  fullName: System.Web.UI.ControlCachePolicy.VaryByControl\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets or sets a list of control identifiers to vary the cached output by.\n  syntax:\n    content: public string VaryByControl { get; set; }\n    return:\n      type: System.String\n      description: A semicolon-separated list of strings used to vary a user control's output cache. These strings represent the <xref:System.Web.UI.Control.ID*> property values of ASP.NET server controls declared in the user control.\n  overload: System.Web.UI.ControlCachePolicy.VaryByControl*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: \"The user control is not associated with a <xref href=\\\"System.Web.UI.BasePartialCachingControl\\\"></xref> and is not cacheable.  \\n  \\n \\\\- or -  \\n  \\n The VaryByControl property is set outside of the initialization and rendering stages of the control.\"\n  platform:\n  - net462\n- uid: System.Web.UI.ControlCachePolicy.VaryByParams\n  id: VaryByParams\n  parent: System.Web.UI.ControlCachePolicy\n  langs:\n  - csharp\n  name: VaryByParams\n  nameWithType: ControlCachePolicy.VaryByParams\n  fullName: System.Web.UI.ControlCachePolicy.VaryByParams\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets or sets a list of <xref uid=\"langword_csharp_GET\" name=\"GET\" href=\"\"></xref> or <xref uid=\"langword_csharp_POST\" name=\"POST\" href=\"\"></xref> parameter names to vary the cached output by.\n  remarks: By default, these strings correspond to a query string value sent with the GET method or to a parameter sent using the POST method. When the VaryByParams property is set to multiple parameters, the output cache contains a different version of the requested document for each specified parameter. Possible values include \"none\", \"*\", and any valid query string or POST parameter name.\n  syntax:\n    content: public System.Web.HttpCacheVaryByParams VaryByParams { get; }\n    return:\n      type: System.Web.HttpCacheVaryByParams\n      description: A semicolon-separated list of strings used to vary the output cache.\n  overload: System.Web.UI.ControlCachePolicy.VaryByParams*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: The user control is not associated with a <xref href=\"System.Web.UI.BasePartialCachingControl\"></xref> and is not cacheable.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Web.HttpException\n  parent: System.Web\n  isExternal: false\n  name: HttpException\n  nameWithType: HttpException\n  fullName: System.Web.HttpException\n- uid: System.Configuration.Provider.ProviderException\n  parent: System.Configuration.Provider\n  isExternal: false\n  name: ProviderException\n  nameWithType: ProviderException\n  fullName: System.Configuration.Provider.ProviderException\n- uid: System.Web.UI.ControlCachePolicy.Cached\n  parent: System.Web.UI.ControlCachePolicy\n  isExternal: false\n  name: Cached\n  nameWithType: ControlCachePolicy.Cached\n  fullName: System.Web.UI.ControlCachePolicy.Cached\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.UI.ControlCachePolicy.Dependency\n  parent: System.Web.UI.ControlCachePolicy\n  isExternal: false\n  name: Dependency\n  nameWithType: ControlCachePolicy.Dependency\n  fullName: System.Web.UI.ControlCachePolicy.Dependency\n- uid: System.Web.Caching.CacheDependency\n  parent: System.Web.Caching\n  isExternal: false\n  name: CacheDependency\n  nameWithType: CacheDependency\n  fullName: System.Web.Caching.CacheDependency\n- uid: System.Web.UI.ControlCachePolicy.Duration\n  parent: System.Web.UI.ControlCachePolicy\n  isExternal: false\n  name: Duration\n  nameWithType: ControlCachePolicy.Duration\n  fullName: System.Web.UI.ControlCachePolicy.Duration\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Web.UI.ControlCachePolicy.ProviderName\n  parent: System.Web.UI.ControlCachePolicy\n  isExternal: false\n  name: ProviderName\n  nameWithType: ControlCachePolicy.ProviderName\n  fullName: System.Web.UI.ControlCachePolicy.ProviderName\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.ControlCachePolicy.SetExpires(System.DateTime)\n  parent: System.Web.UI.ControlCachePolicy\n  isExternal: false\n  name: SetExpires(DateTime)\n  nameWithType: ControlCachePolicy.SetExpires(DateTime)\n  fullName: System.Web.UI.ControlCachePolicy.SetExpires(DateTime)\n- uid: System.DateTime\n  parent: System\n  isExternal: true\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.Web.UI.ControlCachePolicy.SetSlidingExpiration(System.Boolean)\n  parent: System.Web.UI.ControlCachePolicy\n  isExternal: false\n  name: SetSlidingExpiration(Boolean)\n  nameWithType: ControlCachePolicy.SetSlidingExpiration(Boolean)\n  fullName: System.Web.UI.ControlCachePolicy.SetSlidingExpiration(Boolean)\n- uid: System.Web.UI.ControlCachePolicy.SetVaryByCustom(System.String)\n  parent: System.Web.UI.ControlCachePolicy\n  isExternal: false\n  name: SetVaryByCustom(String)\n  nameWithType: ControlCachePolicy.SetVaryByCustom(String)\n  fullName: System.Web.UI.ControlCachePolicy.SetVaryByCustom(String)\n- uid: System.Web.UI.ControlCachePolicy.SupportsCaching\n  parent: System.Web.UI.ControlCachePolicy\n  isExternal: false\n  name: SupportsCaching\n  nameWithType: ControlCachePolicy.SupportsCaching\n  fullName: System.Web.UI.ControlCachePolicy.SupportsCaching\n- uid: System.Web.UI.ControlCachePolicy.VaryByControl\n  parent: System.Web.UI.ControlCachePolicy\n  isExternal: false\n  name: VaryByControl\n  nameWithType: ControlCachePolicy.VaryByControl\n  fullName: System.Web.UI.ControlCachePolicy.VaryByControl\n- uid: System.Web.UI.ControlCachePolicy.VaryByParams\n  parent: System.Web.UI.ControlCachePolicy\n  isExternal: false\n  name: VaryByParams\n  nameWithType: ControlCachePolicy.VaryByParams\n  fullName: System.Web.UI.ControlCachePolicy.VaryByParams\n- uid: System.Web.HttpCacheVaryByParams\n  parent: System.Web\n  isExternal: false\n  name: HttpCacheVaryByParams\n  nameWithType: HttpCacheVaryByParams\n  fullName: System.Web.HttpCacheVaryByParams\n- uid: System.Web.UI.ControlCachePolicy.Cached*\n  parent: System.Web.UI.ControlCachePolicy\n  isExternal: false\n  name: Cached\n  nameWithType: ControlCachePolicy.Cached\n- uid: System.Web.UI.ControlCachePolicy.Dependency*\n  parent: System.Web.UI.ControlCachePolicy\n  isExternal: false\n  name: Dependency\n  nameWithType: ControlCachePolicy.Dependency\n- uid: System.Web.UI.ControlCachePolicy.Duration*\n  parent: System.Web.UI.ControlCachePolicy\n  isExternal: false\n  name: Duration\n  nameWithType: ControlCachePolicy.Duration\n- uid: System.Web.UI.ControlCachePolicy.ProviderName*\n  parent: System.Web.UI.ControlCachePolicy\n  isExternal: false\n  name: ProviderName\n  nameWithType: ControlCachePolicy.ProviderName\n- uid: System.Web.UI.ControlCachePolicy.SetExpires*\n  parent: System.Web.UI.ControlCachePolicy\n  isExternal: false\n  name: SetExpires\n  nameWithType: ControlCachePolicy.SetExpires\n- uid: System.Web.UI.ControlCachePolicy.SetSlidingExpiration*\n  parent: System.Web.UI.ControlCachePolicy\n  isExternal: false\n  name: SetSlidingExpiration\n  nameWithType: ControlCachePolicy.SetSlidingExpiration\n- uid: System.Web.UI.ControlCachePolicy.SetVaryByCustom*\n  parent: System.Web.UI.ControlCachePolicy\n  isExternal: false\n  name: SetVaryByCustom\n  nameWithType: ControlCachePolicy.SetVaryByCustom\n- uid: System.Web.UI.ControlCachePolicy.SupportsCaching*\n  parent: System.Web.UI.ControlCachePolicy\n  isExternal: false\n  name: SupportsCaching\n  nameWithType: ControlCachePolicy.SupportsCaching\n- uid: System.Web.UI.ControlCachePolicy.VaryByControl*\n  parent: System.Web.UI.ControlCachePolicy\n  isExternal: false\n  name: VaryByControl\n  nameWithType: ControlCachePolicy.VaryByControl\n- uid: System.Web.UI.ControlCachePolicy.VaryByParams*\n  parent: System.Web.UI.ControlCachePolicy\n  isExternal: false\n  name: VaryByParams\n  nameWithType: ControlCachePolicy.VaryByParams\n"}