<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fc1970092afb442a23f25a322e7924a8f0482677</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Net.HttpListenerRequest.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c34f44d409f31893ffc87d204355050f321253ba</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f15bd1c597320fef61767c81dabaa52b4c1538df</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Describes an incoming HTTP request to an <bpt id="p1">&lt;xref href="System.Net.HttpListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a client makes a request to a Uniform Resource Identifier (URI) handled by an &lt;xref:System.Net.HttpListener&gt; object, the &lt;xref:System.Net.HttpListener&gt; provides a &lt;xref:System.Net.HttpListenerContext&gt; object that contains information about the sender, the request, and the response that is sent to the client.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Net.HttpListenerContext.Request%2A?displayProperty=fullName&gt; property returns the HttpListenerRequest object that describes the request.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The HttpListenerRequest object contains information about the request, such as the request &lt;xref:System.Net.HttpListenerRequest.HttpMethod%2A&gt; string, &lt;xref:System.Net.HttpListenerRequest.UserAgent%2A&gt; string, and request body data (see the &lt;xref:System.Net.HttpListenerRequest.InputStream%2A&gt; property).</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>To reply to the request, you must get the associated response using the &lt;xref:System.Net.HttpListenerContext.Response%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Gets the MIME types accepted by the client.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Accept`</ph> header is a string of space-separated Multipurpose Internet Mail Extensions (MIME) type names (for example, <ph id="ph2">`image/jpeg`</ph>), which indicate the MIME types that the client is prepared to accept and process in a response.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`*/*`</ph> entry indicates that the client accepts any MIME type.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a detailed description of the <ph id="ph1">`Accept`</ph> header, see RFC 2616, available at <bpt id="p1">[</bpt>http://www.rfc-editor.org<ept id="p1">](http://www.rfc-editor.org/)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a complete list of request headers, see the &lt;xref:System.Net.HttpRequestHeader&gt; enumeration.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; array that contains the type names specified in the request's <bpt id="p1">&lt;xref uid="langword_csharp_Accept" name="Accept" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> header or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the client request did not include an <bpt id="p3">&lt;xref uid="langword_csharp_Accept" name="Accept" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> header.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous request for the client's X.509 v.3 certificate.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.AsyncCallback&gt; delegate that references the method to invoke when the operation is complete.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A user-defined object that contains information about the operation.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This object is passed to the callback delegate when the operation completes.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; that indicates the status of the operation.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Gets an error code that identifies a problem with the <bpt id="p1">&lt;xref href="System.Security.Cryptography.X509Certificates.X509Certificate"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> provided by the client.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property contains a Windows error code returned by the Secure Channel (Schannel) Security Support Provider Interface (SSPI), which is used to validate the certificate.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about SSPI support for Schannel, see "Creating a Secure Connection Using Schannel" in the Security documentation at <bpt id="p1">[</bpt>http://msdn.microsoft.com/library<ept id="p1">](http://msdn.microsoft.com/library)</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Int32&gt; value that contains a Windows error code.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The client certificate has not been initialized yet by a call to the &lt;xref:System.Net.HttpListenerRequest.BeginGetClientCertificate<bpt id="p1">*</bpt>&gt; or &lt;xref:System.Net.HttpListenerRequest.GetClientCertificate<ept id="p1">*</ept>&gt; methods       -or -       The operation is still in progress.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets the content encoding that can be used with data sent with the request</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>An &lt;xref:System.Text.Encoding&gt; object can be used to convert byte sequences into character sets (code pages) and characters into byte sequences.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property uses the charset value from the <ph id="ph1">`Content-Type`</ph> header to determine the encoding.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>If that information is not available, this property returns &lt;xref:System.Text.Encoding.Default%2A?displayProperty=fullName&gt;.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Text.Encoding&gt; object suitable for use with the data in the &lt;xref:System.Net.HttpListenerRequest.InputStream*&gt; property.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets the length of the body data included in the request.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Content-Length`</ph> header expresses the length, in bytes, of the body data that accompanies the request.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a complete list of request headers, see the &lt;xref:System.Net.HttpRequestHeader&gt; enumeration.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The value from the request's <bpt id="p1">&lt;xref uid="langword_csharp_Content-Length" name="Content-Length" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> header.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This value is -1 if the content length is not known.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets the MIME type of the body data included in the request.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a client includes body data in a request, it declares the Multipurpose Internet Mail Extensions (MIME) type of the body data in the <ph id="ph1">`Content-Type`</ph> header.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the default MIME type of data returned from a Web form using the <ph id="ph1">`POST`</ph> method is <ph id="ph2">`application/x-www-form-urlencoded`</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a complete list of request headers, see the &lt;xref:System.Net.HttpRequestHeader&gt; enumeration and RFC 2616, available at <bpt id="p1">[</bpt>http://www.rfc-editor.org<ept id="p1">](http://www.rfc-editor.org/)</ept>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ContentType is null when there is no <ph id="ph1">`Content-Type`</ph> header in the request.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; that contains the text of the request's <bpt id="p1">&lt;xref uid="langword_csharp_Content-Type" name="Content-Type" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> header.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets the cookies sent with the request.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>A cookie is name/value text data from a Web server that is stored on the local (client) computer.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Net.CookieCollection&gt; that contains cookies that accompany the request.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This property returns an empty collection if the request does not contain cookies.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Ends an asynchronous request for the client's X.509 v.3 certificate.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The pending request for the certificate.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; object that is returned when the operation started.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph> was not obtained by calling <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest.BeginGetClientCertificate*&gt;</ph><ph id="ph3">&lt;code&gt;e.&lt;/code&gt;</ph></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This method was already called for the operation identified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">asyncResult</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Retrieves the client's X.509 v.3 certificate.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks until the certificate is retrieved.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Cryptography.X509Certificates"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains the client's X.509 v.3 certificate.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A call to this method to retrieve the client's X.509 v.3 certificate is in progress and therefore another call to this method cannot be made.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Retrieves the client's X.509 v.3 certificate as an asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned &lt;xref:System.Threading.Tasks.Task%601&gt; object will complete when the certificate has been retrieved.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a call to this method to retrieve the client's X.509 v.3 certificate is in progress, then another call to this method cannot be made.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&amp;lt;</ph>xref:System.Threading.Tasks.Task%601<ph id="ph2">&amp;gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&amp;lt;</ph>xref:System.Threading.Tasks.Task%601.Result%2A<ph id="ph2">&amp;gt;</ph> property on the task object returns a <bpt id="p1">&lt;xref href="System.Security.Cryptography.X509Certificates"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains the client's X.509 v.3 certificate.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Gets a &lt;xref:System.Boolean&gt; value that indicates whether the request has associated body data.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>A request that sends data to the server using the <ph id="ph1">`POST`</ph> method, for example, should have an entity body.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the request has associated body data; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Gets the collection of header name/value pairs sent in the request.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>Request headers contain metadata information.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, headers can contain the Uniform Resource Identifier (URI) of the resource that referred the client to the server, the identity of the user agent employed by the client, and the acceptable MIME types for data in the response body.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a complete list of request headers, see the &lt;xref:System.Net.HttpRequestHeader&gt; enumeration.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Net.WebHeaderCollection&gt; that contains the HTTP headers included in the request.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Gets the HTTP method specified by the client.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The HTTP method is typically GET or POST, depending on the action desired by the client.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; that contains the method used in the request.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Gets a stream that contains the body data sent by the client.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the client transmits data (for example, using the HTTP <ph id="ph1">`POST`</ph> method), the stream returned by this method contains that data.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Closing the request does not close the stream returned by this property.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you no longer need the stream, you should close it by calling the &lt;xref:System.IO.Stream.Close%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>A readable &lt;xref:System.IO.Stream&gt; object that contains the bytes sent by the client in the body of the request.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>This property returns &lt;xref:System.IO.Stream&gt; if no data is sent with the request.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Gets a &lt;xref:System.Boolean&gt; value that indicates whether the client sending this request is authenticated.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your application requests client authentication using the &lt;xref:System.Net.HttpListener.AuthenticationSchemes%2A&gt; or &lt;xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your application does not receive an &lt;xref:System.Net.HttpListenerContext&gt; for requests from clients that are not successfully authenticated.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the client was authenticated; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Gets a &lt;xref:System.Boolean&gt; value that indicates whether the request is sent from the local computer.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications can use this property to perform special processing when requests are from the local computer.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the request originated on the same computer as the <bpt id="p2">&lt;xref href="System.Net.HttpListener"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object that provided the request; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Gets a &lt;xref:System.Boolean&gt; value that indicates whether the TCP connection used to send the request is using the Secure Sockets Layer (SSL) protocol.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>To request a secure connection, the client request uses &lt;xref:System.Uri.UriSchemeHttps&gt; instead of &lt;xref:System.Uri.UriSchemeHttp&gt;.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection cannot be established using SSL, the client receives a &lt;xref:System.Net.WebException&gt; that provides information about the error.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the TCP connection is using SSL; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Gets a &lt;xref:System.Boolean&gt; value that indicates whether the TCP connection was  a WebSocket request.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Returns &lt;xref:System.Boolean&gt;.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the TCP connection is a WebSocket request; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Gets a &lt;xref:System.Boolean&gt; value that indicates whether the client requests a persistent connection.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an HTTP client and server expect to exchange data multiple times in a short time period, a persistent connection speeds up their communications by allowing them to avoid the overhead required to open and close a TCP connection for each message.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>For clients using HTTP/1.1, the default value for this property is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the connection should be kept open; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Get the server IP address and port number to which the request is directed.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is useful when you want to respond to requests based on the way they are addressed.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Net.IPEndPoint&gt; that represents the IP address that the request is sent to.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Gets the HTTP version used by the requesting client.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>The capabilities of different HTTP versions are specified in the documents available at <bpt id="p1">[</bpt>http://www.rfc-editor.org<ept id="p1">](http://www.rfc-editor.org/)</ept>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Version&gt; that identifies the client's version of HTTP.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Gets the query string included in the request.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a URL, the query information is separated from the path information by a question mark (?).</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>Name/value pairs are separated by an equals sign (=).</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>To access the query data as a single string, get the &lt;xref:System.Uri.Query%2A&gt; property value from the &lt;xref:System.Uri&gt; object returned by &lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Queries without an equal sign (example: <bpt id="p1">[</bpt>http://www.contoso.com/query.htm?Name<ept id="p1">](http://www.contoso.com/query.htm?Name)</ept> ) are added to the <ph id="ph2">`null`</ph> key in the &lt;xref:System.Collections.Specialized.NameValueCollection&gt;.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameValueCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains the query data included in the request &lt;xref:System.Net.HttpListenerRequest.Url*&gt;.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Gets the URL information (without the host and port) requested by the client.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>The raw URL is defined as the part of the URL following the domain information.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the URL string <ph id="ph1">`http://www.contoso.com/articles/recent.aspx`</ph>, the raw URL is <ph id="ph2">`/articles/recent.aspx`</ph>.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>The raw URL includes the query string, if present.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>To obtain the host and port information, use the &lt;xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; that contains the raw URL for this request.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Gets the client IP address and port number from which the request originated.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Net.IPEndPoint&gt; that represents the IP address and port number from which the request originated.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Gets the request identifier of the incoming HTTP request.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Guid&gt; object that contains the identifier of the HTTP request.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Gets the Service Provider Name (SPN) that the client sent on the request.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application could use the ServiceName property to perform custom Service Provide Name (SPN) validation.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; that contains the SPN the client sent on the request.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Gets the &lt;xref:System.Net.TransportContext&gt; for the client request.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Net.TransportContext&gt; property can be used to retrieve the channel binding token (CBT) for an &lt;xref:System.Net.HttpListenerRequest&gt; which was sent using HTTPS.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application could use the &lt;xref:System.Net.TransportContext&gt; property to perform custom authentication using calls to the native Win32 <bpt id="p1">[</bpt>AcceptSecurityContext<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=147021)</ept> function.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an application attempts to retrieve the channel binding token (CBT) from this TransportContext property using the &lt;xref:System.Net.TransportContext.GetChannelBinding%2A&gt; method and the &lt;xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind&gt; is not &lt;xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind&gt;, then the &lt;xref:System.Net.HttpListenerRequest&gt; will throw &lt;xref:System.NotSupportedException&gt;.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Net.HttpListenerRequest&gt; overrides the &lt;xref:System.Net.TransportContext.GetChannelBinding%2A&gt; method with an internal implementation.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Net.TransportContext&gt; object for the client request.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Gets the &lt;xref:System.Uri&gt; object requested by the client.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Url property allows you to obtain all the information available from a &lt;xref:System.Uri&gt; object.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need to know only the raw text of the URI request, consider using the &lt;xref:System.Net.HttpListenerRequest.RawUrl%2A&gt; property instead.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Url property is null if the &lt;xref:System.Uri&gt; from the client could not be parsed.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A&gt; property indicates if &lt;xref:System.Net.HttpListener&gt; uses the raw unescaped URI instead of the converted URI where any percent-encoded values are converted and other normalization steps are taken.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a &lt;xref:System.Net.HttpListener&gt; instance receives a request through the <ph id="ph1">`http.sys`</ph> service, it creates an instance of the URI string provided by <ph id="ph2">`http.sys`</ph>, and exposes it as the Url property.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`http.sys`</ph> service exposes two request URI strings:      -   Raw URI      -   Converted URI       The raw URI is the &lt;xref:System.Uri?displayProperty=fullName&gt; provided in the request line of a HTTP request:       <ph id="ph2">`GET /path/`</ph>       <ph id="ph3">`Host: www.contoso.com`</ph>       The raw URI provided by <ph id="ph4">`http.sys`</ph> for the request mentioned above, is "/path/".</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>This represents the string following the HTTP verb as it was sent over the network.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`http.sys`</ph> service creates a converted URI from the information provided in the request using the URI provided in the HTTP request line and the Host header to determine the origin server the request should be forwarded to.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is done by comparing the information from the request with a set of registered URI prefixes.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to be able to compare those values, some normalization to the request needs to be done.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the sample above the converted URI would be as follows:       <ph id="ph1">`http://www.contoso.com/path/`</ph>       The <ph id="ph2">`http.sys`</ph> service combines the &lt;xref:System.Uri.Host%2A?displayProperty=fullName&gt; property value and the string in the request line to create a converted URI.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, <ph id="ph1">`http.sys`</ph> and the &lt;xref:System.Uri?displayProperty=fullName&gt; class also do the following:      -   Un-escapes all percent encoded values.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Converts percent-encoded non-ASCII characters into a UTF-16 character representation.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that UTF-8 and ANSI/DBCS characters are supported as well as Unicode characters (Unicode encoding using the %uXXXX format).</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Executes other normalization steps, like path compression.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>Since the request doesn't contain any information about the encoding used for percent-encoded values, it may not be possible to determine the correct encoding just by parsing the percent-encoded values.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore <ph id="ph1">`http.sys`</ph> provides two registry keys for modifying the process:      |Registry Key|Default Value|Description|   |------------------|-------------------|-----------------|   |EnableNonUTF8|1|If zero, <ph id="ph2">`http.sys`</ph> accepts only UTF-8-encoded URLs.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>If non-zero, <ph id="ph1">`http.sys`</ph> also accepts ANSI-encoded or DBCS-encoded URLs in requests.|   |FavorUTF8|1|If non-zero, <ph id="ph2">`http.sys`</ph> always tries to decode a URL as UTF-8 first; if that conversion fails and EnableNonUTF8 is non-zero, Http.sys then tries to decode it as ANSI or DBCS.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>If zero (and EnableNonUTF8 is non-zero), <ph id="ph1">`http.sys`</ph> tries to decode it as ANSI or DBCS; if that is not successful, it tries a UTF-8 conversion.|       When &lt;xref:System.Net.HttpListener&gt; receives a request, it uses the converted URI from <ph id="ph2">`http.sys`</ph> as input to the Url property.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is a need for supporting characters besides characters and numbers in URIs.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example is the following URI, which is used to retrieve customer information for customer number "1/3812":       <ph id="ph1">`http://www.contoso.com/Customer('1%2F3812')/`</ph>       Note the percent-encoded slash in the Uri (%2F).</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is necessary, since in this case the slash character represents data and not a path delimiter.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>Passing the string to Uri constructor will lead to the following URI:       <ph id="ph1">`http://www.contoso.com/Customer('1/3812')/`</ph>       Splitting the path into its segments would result in the following elements:       <ph id="ph2">`Customer('1`</ph>       <ph id="ph3">`3812')`</ph>       This is not the intent of the sender of the request.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A&gt; property is set to false, then when the &lt;xref:System.Net.HttpListener&gt; receives a request, it uses the raw URI instead of the converted URI from <ph id="ph1">`http.sys`</ph> as input to the Url property.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Uri&gt; object that identifies the resource requested by the client.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Gets the Uniform Resource Identifier (URI) of the resource that referred the client to the server.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a client has followed a hyperlink to the requested URI, its request might contain a <ph id="ph1">`Referrer`</ph> header that identifies the URI of the resource that contained the hyperlink.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clients can falsify or choose not to present a &lt;xref:System.Net.HttpRequestHeader&gt; header.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, while the UrlReferrer property can be useful for identifying basic trends in Web traffic; you should not use it as part of an authorization scheme to control access to data.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a complete list of request headers, see the &lt;xref:System.Net.HttpRequestHeader&gt; enumeration.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>The UrlReferrer is null when there is no <ph id="ph1">`Referrer`</ph> header in the request or when the <ph id="ph2">`Referrer`</ph> header is present in the request but does not parse to a valid &lt;xref:System.Uri&gt;.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Uri&gt; object that contains the text of the request's &lt;xref:System.Net.HttpRequestHeader&gt; header, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the header was not included in the request.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Gets the user agent presented by the client.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`User-Agent`</ph> header typically contains text that identifies the name and version number of the software used to generate the request.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a complete list of request headers, see the &lt;xref:System.Net.HttpRequestHeader&gt; enumeration.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>The UserAgent is null when there is no <ph id="ph1">`User-Agent`</ph> header in the request.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; object that contains the text of the request's <bpt id="p1">&lt;xref uid="langword_csharp_User-Agent" name="User-Agent" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> header.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Gets the server IP address and port number to which the request is directed.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>The information returned by this property is also available in the &lt;xref:System.Net.HttpListenerRequest.LocalEndPoint%2A&gt; property value.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; that contains the host address information.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Gets the DNS name and, if provided, the port number specified by the client.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Host`</ph> header contains the requested server host name and port number, if specified, separated by a colon (for example, <ph id="ph2">`www.contoso.com:8080`</ph>).</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this property to return different responses depending on the host name specified in the request.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a complete list of request headers, see the &lt;xref:System.Net.HttpRequestHeader&gt; enumeration.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; value that contains the text of the request's <bpt id="p1">&lt;xref uid="langword_csharp_Host" name="Host" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> header.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Gets the natural languages that are preferred for the response.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a detailed description of the <ph id="ph1">`Accept-Language`</ph> header, see RFC 2616 Section 14.4, available at <bpt id="p1">[</bpt>http://www.rfc-editor.org<ept id="p1">](http://www.rfc-editor.org/)</ept>.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a complete list of request headers, see the &lt;xref:System.Net.HttpRequestHeader&gt; enumeration.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; array that contains the languages specified in the request's &lt;xref:System.Net.HttpRequestHeader&gt; header or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the client request did not include an &lt;xref:System.Net.HttpRequestHeader&gt; header.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>