{"nodes":[{"pos":[585,815],"content":"Represents a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;KeyName&amp;gt;\" name=\"&amp;lt;KeyName&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> subelement of an XMLDSIG or XML Encryption <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_&amp;lt;KeyInfo&amp;gt;\" name=\"&amp;lt;KeyInfo&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> element.","needQuote":true,"needEscape":true,"source":"Represents a <xref uid=\"langword_csharp_&lt;KeyName&gt;\" name=\"&lt;KeyName&gt;\" href=\"\"></xref> subelement of an XMLDSIG or XML Encryption <xref uid=\"langword_csharp_&lt;KeyInfo&gt;\" name=\"&lt;KeyInfo&gt;\" href=\"\"></xref> element."},{"pos":[828,1638],"content":"The `<KeyName>` element contains a string identifier that the party validating or decrypting an XML document uses to identify the corresponding key.  For example, if you receive an encrypted or signed XML document that has a `<KeyName>` element value of \"AsymmetricKey1\", you will use a key that you and the sender have named \"AsymmetricKey1\" to decrypt or verify the document.  Both parties must agree on a key name mapping ahead of time.  Note that the actual key is not imbedded in the XML document.       For more information about the `<KeyName>` element, see Section 4.4.1 of the XMLDSIG specification, which is available from the World Wide Web Consortium (W3C) at www.w3.org/TR/xmldsig-core/, or see the XML Encryption specification, which is available from the W3C at www.w3.org/TR/xmlenc-core/.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`&lt;KeyName&gt;`</ph> element contains a string identifier that the party validating or decrypting an XML document uses to identify the corresponding key.","pos":[0,148],"source":"The `<KeyName>` element contains a string identifier that the party validating or decrypting an XML document uses to identify the corresponding key."},{"content":"For example, if you receive an encrypted or signed XML document that has a <ph id=\"ph1\">`&lt;KeyName&gt;`</ph> element value of \"AsymmetricKey1\", you will use a key that you and the sender have named \"AsymmetricKey1\" to decrypt or verify the document.","pos":[150,377],"source":"  For example, if you receive an encrypted or signed XML document that has a `<KeyName>` element value of \"AsymmetricKey1\", you will use a key that you and the sender have named \"AsymmetricKey1\" to decrypt or verify the document."},{"content":"Both parties must agree on a key name mapping ahead of time.","pos":[379,439]},{"content":"Note that the actual key is not imbedded in the XML document.","pos":[441,502]},{"content":"For more information about the <ph id=\"ph1\">`&lt;KeyName&gt;`</ph> element, see Section 4.4.1 of the XMLDSIG specification, which is available from the World Wide Web Consortium (W3C) at www.w3.org/TR/xmldsig-core/, or see the XML Encryption specification, which is available from the W3C at www.w3.org/TR/xmlenc-core/.","pos":[509,804],"source":"       For more information about the `<KeyName>` element, see Section 4.4.1 of the XMLDSIG specification, which is available from the World Wide Web Consortium (W3C) at www.w3.org/TR/xmldsig-core/, or see the XML Encryption specification, which is available from the W3C at www.w3.org/TR/xmlenc-core/."}]},{"pos":[4389,4495],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"></xref> class."},{"pos":[7402,7660],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by specifying the string identifier that is the value of the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_&amp;lt;KeyName&amp;gt;\" name=\"&amp;lt;KeyName&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> element.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"></xref> class by specifying the string identifier that is the value of the <xref uid=\"langword_csharp_&lt;KeyName&gt;\" name=\"&lt;KeyName&gt;\" href=\"\"></xref> element."},{"pos":[7673,7963],"content":"The `keyName` parameter can contain any string; the interpretation of the string is specific to the application. White space is significant in the string value.       The `keyName` parameter specifies the value of the <xref:System.Security.Cryptography.Xml.KeyInfoName.Value%2A> property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`keyName`</ph> parameter can contain any string; the interpretation of the string is specific to the application.","pos":[0,112],"source":"The `keyName` parameter can contain any string; the interpretation of the string is specific to the application."},{"content":"White space is significant in the string value.","pos":[113,160]},{"content":"The <ph id=\"ph1\">`keyName`</ph> parameter specifies the value of the &lt;xref:System.Security.Cryptography.Xml.KeyInfoName.Value%2A&gt; property.","pos":[167,288],"source":"       The `keyName` parameter specifies the value of the <xref:System.Security.Cryptography.Xml.KeyInfoName.Value%2A> property."}]},{"pos":[8104,8242],"content":"The string identifier that is the value of the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;KeyName&amp;gt;\" name=\"&amp;lt;KeyName&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element.","needQuote":true,"needEscape":true,"source":"The string identifier that is the value of the <xref uid=\"langword_csharp_&lt;KeyName&gt;\" name=\"&lt;KeyName&gt;\" href=\"\"></xref> element."},{"pos":[8720,8830],"content":"Returns an XML representation of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Returns an XML representation of the <xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"></xref> object."},{"pos":[8842,8994],"content":"The &lt;xref:System.Xml.XmlElement&gt; object returned by this method is suitable for use as a subelement of an XMLDSIG or XML Encryption <ph id=\"ph1\">`&lt;KeyInfo&gt;`</ph> element.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The <xref:System.Xml.XmlElement> object returned by this method is suitable for use as a subelement of an XMLDSIG or XML Encryption `<KeyInfo>` element."},{"pos":[9151,9253],"content":"An XML representation of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An XML representation of the <xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"></xref> object."},{"pos":[9813,10003],"content":"Parses the input <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object and configures the internal state of the <bpt id=\"p2\">&lt;xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object to match.","needQuote":true,"needEscape":true,"source":"Parses the input <xref href=\"System.Xml.XmlElement\"></xref> object and configures the internal state of the <xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"></xref> object to match."},{"pos":[10015,10113],"content":"The LoadXml method is typically used to process a <ph id=\"ph1\">`&lt;KeyName&gt;`</ph> subelement of a <ph id=\"ph2\">`&lt;KeyInfo&gt;`</ph> element.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The LoadXml method is typically used to process a `<KeyName>` subelement of a `<KeyInfo>` element."},{"pos":[10282,10441],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that specifies the state of the <bpt id=\"p2\">&lt;xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Xml.XmlElement\"></xref> object that specifies the state of the <xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"></xref> object."},{"pos":[10624,10721],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>value</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[11109,11254],"content":"Gets or sets the string identifier contained within a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;KeyName&amp;gt;\" name=\"&amp;lt;KeyName&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element.","needQuote":true,"needEscape":true,"source":"Gets or sets the string identifier contained within a <xref uid=\"langword_csharp_&lt;KeyName&gt;\" name=\"&lt;KeyName&gt;\" href=\"\"></xref> element."},{"pos":[11266,11421],"content":"The Value property can contain any string; the interpretation of the string is specific to the application. White space is significant in the string value.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Value property can contain any string; the interpretation of the string is specific to the application. White space is significant in the string value.","pos":[0,155],"nodes":[{"content":"The Value property can contain any string; the interpretation of the string is specific to the application.","pos":[0,107]},{"content":"White space is significant in the string value.","pos":[108,155]}]}]},{"pos":[13806,13944],"content":"The string identifier that is the value of the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;KeyName&amp;gt;\" name=\"&amp;lt;KeyName&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element.","needQuote":true,"needEscape":true,"source":"The string identifier that is the value of the <xref uid=\"langword_csharp_&lt;KeyName&gt;\" name=\"&lt;KeyName&gt;\" href=\"\"></xref> element."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.Xml.KeyInfoName\n  id: KeyInfoName\n  children:\n  - System.Security.Cryptography.Xml.KeyInfoName.#ctor\n  - System.Security.Cryptography.Xml.KeyInfoName.#ctor(System.String)\n  - System.Security.Cryptography.Xml.KeyInfoName.GetXml\n  - System.Security.Cryptography.Xml.KeyInfoName.LoadXml(System.Xml.XmlElement)\n  - System.Security.Cryptography.Xml.KeyInfoName.Value\n  langs:\n  - csharp\n  name: KeyInfoName\n  nameWithType: KeyInfoName\n  fullName: System.Security.Cryptography.Xml.KeyInfoName\n  type: Class\n  summary: Represents a <xref uid=\"langword_csharp_&lt;KeyName&gt;\" name=\"&lt;KeyName&gt;\" href=\"\"></xref> subelement of an XMLDSIG or XML Encryption <xref uid=\"langword_csharp_&lt;KeyInfo&gt;\" name=\"&lt;KeyInfo&gt;\" href=\"\"></xref> element.\n  remarks: \"The `<KeyName>` element contains a string identifier that the party validating or decrypting an XML document uses to identify the corresponding key.  For example, if you receive an encrypted or signed XML document that has a `<KeyName>` element value of \\\"AsymmetricKey1\\\", you will use a key that you and the sender have named \\\"AsymmetricKey1\\\" to decrypt or verify the document.  Both parties must agree on a key name mapping ahead of time.  Note that the actual key is not imbedded in the XML document.  \\n  \\n For more information about the `<KeyName>` element, see Section 4.4.1 of the XMLDSIG specification, which is available from the World Wide Web Consortium (W3C) at www.w3.org/TR/xmldsig-core/, or see the XML Encryption specification, which is available from the W3C at www.w3.org/TR/xmlenc-core/.\"\n  example:\n  - \"The following code example uses the KeyInfoName object when signing a resource represented by a Universal Resource Identifier (URI).  This example saves the signature in a new file.  \\n  \\n [!code-cs[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/csharp/t-system.security.crypto_38_1.cs)]\\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/visualbasic/t-system.security.crypto_38_1.vb)]\\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/cpp/t-system.security.crypto_38_1.cpp)]  \\n  \\n The following code example uses the KeyInfoName object when signing an XML document.  This example saves the signature in a new file.  \\n  \\n [!code-cs[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/csharp/t-system.security.crypto_38_2.cs)]\\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/cpp/t-system.security.crypto_38_2.cpp)]\\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/visualbasic/t-system.security.crypto_38_2.vb)]  \\n  \\n The following code example uses the KeyInfoName object when encrypting an XML document. This example embeds an encrypted key within the encrypted XML document.  \\n  \\n [!code-cs[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/csharp/t-system.security.crypto_38_3.cs)]\\n [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/visualbasic/t-system.security.crypto_38_3.vb)]\\n [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/cpp/t-system.security.crypto_38_3.cpp)]  \\n  \\n The following code example uses the KeyInfoName object when encrypting an XML document. This example maps a name to a symmetric key to identify it to the decryption method.  \\n  \\n [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/visualbasic/t-system.security.crypto_38_4.vb)]\\n [!code-cs[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/csharp/t-system.security.crypto_38_4.cs)]\\n [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/cpp/t-system.security.crypto_38_4.cpp)]\"\n  syntax:\n    content: 'public class KeyInfoName : System.Security.Cryptography.Xml.KeyInfoClause'\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.Xml.KeyInfoClause\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.KeyInfoName.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.Xml.KeyInfoName\n  langs:\n  - csharp\n  name: KeyInfoName()\n  nameWithType: KeyInfoName.KeyInfoName()\n  fullName: System.Security.Cryptography.Xml.KeyInfoName.KeyInfoName()\n  type: Constructor\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfoName> object when signing a resource represented by a Universal Resource Identifier (URI).  This example saves the signature in a new file.  \\n  \\n [!code-cs[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/csharp/m-system.security.crypto_113_1.cs)]\\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/visualbasic/m-system.security.crypto_113_1.vb)]\\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/cpp/m-system.security.crypto_113_1.cpp)]  \\n  \\n The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfoName> object when signing an XML document.  This example saves the signature in a new file.  \\n  \\n [!code-cs[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/csharp/m-system.security.crypto_113_2.cs)]\\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/cpp/m-system.security.crypto_113_2.cpp)]\\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/visualbasic/m-system.security.crypto_113_2.vb)]  \\n  \\n The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfoName> object when encrypting an XML document. This example embeds an encrypted key within the encrypted XML document.  \\n  \\n [!code-cs[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/csharp/m-system.security.crypto_113_3.cs)]\\n [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/visualbasic/m-system.security.crypto_113_3.vb)]\\n [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/cpp/m-system.security.crypto_113_3.cpp)]  \\n  \\n The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfoName> object when encrypting an XML document. This example maps a name to a symmetric key to identify it to the decryption method.  \\n  \\n [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/visualbasic/m-system.security.crypto_113_4.vb)]\\n [!code-cs[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/csharp/m-system.security.crypto_113_4.cs)]\\n [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/cpp/m-system.security.crypto_113_4.cpp)]\"\n  syntax:\n    content: public KeyInfoName ();\n    parameters: []\n  overload: System.Security.Cryptography.Xml.KeyInfoName.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.KeyInfoName.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Security.Cryptography.Xml.KeyInfoName\n  langs:\n  - csharp\n  name: KeyInfoName(String)\n  nameWithType: KeyInfoName.KeyInfoName(String)\n  fullName: System.Security.Cryptography.Xml.KeyInfoName.KeyInfoName(String)\n  type: Constructor\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"></xref> class by specifying the string identifier that is the value of the <xref uid=\"langword_csharp_&lt;KeyName&gt;\" name=\"&lt;KeyName&gt;\" href=\"\"></xref> element.\n  remarks: \"The `keyName` parameter can contain any string; the interpretation of the string is specific to the application. White space is significant in the string value.  \\n  \\n The `keyName` parameter specifies the value of the <xref:System.Security.Cryptography.Xml.KeyInfoName.Value%2A> property.\"\n  syntax:\n    content: public KeyInfoName (string keyName);\n    parameters:\n    - id: keyName\n      type: System.String\n      description: The string identifier that is the value of the <xref uid=\"langword_csharp_&lt;KeyName&gt;\" name=\"&lt;KeyName&gt;\" href=\"\"></xref> element.\n  overload: System.Security.Cryptography.Xml.KeyInfoName.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.KeyInfoName.GetXml\n  id: GetXml\n  parent: System.Security.Cryptography.Xml.KeyInfoName\n  langs:\n  - csharp\n  name: GetXml()\n  nameWithType: KeyInfoName.GetXml()\n  fullName: System.Security.Cryptography.Xml.KeyInfoName.GetXml()\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Returns an XML representation of the <xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"></xref> object.\n  remarks: The <xref:System.Xml.XmlElement> object returned by this method is suitable for use as a subelement of an XMLDSIG or XML Encryption `<KeyInfo>` element.\n  syntax:\n    content: public override System.Xml.XmlElement GetXml ();\n    parameters: []\n    return:\n      type: System.Xml.XmlElement\n      description: An XML representation of the <xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"></xref> object.\n  overload: System.Security.Cryptography.Xml.KeyInfoName.GetXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.KeyInfoName.LoadXml(System.Xml.XmlElement)\n  id: LoadXml(System.Xml.XmlElement)\n  parent: System.Security.Cryptography.Xml.KeyInfoName\n  langs:\n  - csharp\n  name: LoadXml(XmlElement)\n  nameWithType: KeyInfoName.LoadXml(XmlElement)\n  fullName: System.Security.Cryptography.Xml.KeyInfoName.LoadXml(XmlElement)\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Parses the input <xref href=\"System.Xml.XmlElement\"></xref> object and configures the internal state of the <xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"></xref> object to match.\n  remarks: The LoadXml method is typically used to process a `<KeyName>` subelement of a `<KeyInfo>` element.\n  syntax:\n    content: public override void LoadXml (System.Xml.XmlElement value);\n    parameters:\n    - id: value\n      type: System.Xml.XmlElement\n      description: The <xref href=\"System.Xml.XmlElement\"></xref> object that specifies the state of the <xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"></xref> object.\n  overload: System.Security.Cryptography.Xml.KeyInfoName.LoadXml*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>value</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.KeyInfoName.Value\n  id: Value\n  parent: System.Security.Cryptography.Xml.KeyInfoName\n  langs:\n  - csharp\n  name: Value\n  nameWithType: KeyInfoName.Value\n  fullName: System.Security.Cryptography.Xml.KeyInfoName.Value\n  type: Property\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Gets or sets the string identifier contained within a <xref uid=\"langword_csharp_&lt;KeyName&gt;\" name=\"&lt;KeyName&gt;\" href=\"\"></xref> element.\n  remarks: The Value property can contain any string; the interpretation of the string is specific to the application. White space is significant in the string value.\n  example:\n  - \"The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfoName> object when signing a resource represented by a Universal Resource Identifier (URI).  This example saves the signature in a new file.  \\n  \\n [!code-cs[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/csharp/p-system.security.crypto_73_1.cs)]\\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/visualbasic/p-system.security.crypto_73_1.vb)]\\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/cpp/p-system.security.crypto_73_1.cpp)]  \\n  \\n The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfoName> object when signing an XML document.  This example saves the signature in a new file.  \\n  \\n [!code-cs[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/csharp/p-system.security.crypto_73_2.cs)]\\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/cpp/p-system.security.crypto_73_2.cpp)]\\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/visualbasic/p-system.security.crypto_73_2.vb)]  \\n  \\n The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfoName> object when encrypting an XML document. This example embeds an encrypted key within the encrypted XML document.  \\n  \\n [!code-cs[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/csharp/p-system.security.crypto_73_3.cs)]\\n [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/visualbasic/p-system.security.crypto_73_3.vb)]\\n [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/cpp/p-system.security.crypto_73_3.cpp)]  \\n  \\n The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfoName> object when encrypting an XML document. This example maps a name to a symmetric key to identify it to the decryption method.  \\n  \\n [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/visualbasic/p-system.security.crypto_73_4.vb)]\\n [!code-cs[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/csharp/p-system.security.crypto_73_4.cs)]\\n [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/cpp/p-system.security.crypto_73_4.cpp)]\"\n  syntax:\n    content: public string Value { get; set; }\n    return:\n      type: System.String\n      description: The string identifier that is the value of the <xref uid=\"langword_csharp_&lt;KeyName&gt;\" name=\"&lt;KeyName&gt;\" href=\"\"></xref> element.\n  overload: System.Security.Cryptography.Xml.KeyInfoName.Value*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.Cryptography.Xml.KeyInfoClause\n  isExternal: false\n  name: System.Security.Cryptography.Xml.KeyInfoClause\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Security.Cryptography.Xml.KeyInfoName.#ctor\n  parent: System.Security.Cryptography.Xml.KeyInfoName\n  isExternal: false\n  name: KeyInfoName()\n  nameWithType: KeyInfoName.KeyInfoName()\n  fullName: System.Security.Cryptography.Xml.KeyInfoName.KeyInfoName()\n- uid: System.Security.Cryptography.Xml.KeyInfoName.#ctor(System.String)\n  parent: System.Security.Cryptography.Xml.KeyInfoName\n  isExternal: false\n  name: KeyInfoName(String)\n  nameWithType: KeyInfoName.KeyInfoName(String)\n  fullName: System.Security.Cryptography.Xml.KeyInfoName.KeyInfoName(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.Xml.KeyInfoName.GetXml\n  parent: System.Security.Cryptography.Xml.KeyInfoName\n  isExternal: false\n  name: GetXml()\n  nameWithType: KeyInfoName.GetXml()\n  fullName: System.Security.Cryptography.Xml.KeyInfoName.GetXml()\n- uid: System.Xml.XmlElement\n  parent: System.Xml\n  isExternal: false\n  name: XmlElement\n  nameWithType: XmlElement\n  fullName: System.Xml.XmlElement\n- uid: System.Security.Cryptography.Xml.KeyInfoName.LoadXml(System.Xml.XmlElement)\n  parent: System.Security.Cryptography.Xml.KeyInfoName\n  isExternal: false\n  name: LoadXml(XmlElement)\n  nameWithType: KeyInfoName.LoadXml(XmlElement)\n  fullName: System.Security.Cryptography.Xml.KeyInfoName.LoadXml(XmlElement)\n- uid: System.Security.Cryptography.Xml.KeyInfoName.Value\n  parent: System.Security.Cryptography.Xml.KeyInfoName\n  isExternal: false\n  name: Value\n  nameWithType: KeyInfoName.Value\n  fullName: System.Security.Cryptography.Xml.KeyInfoName.Value\n- uid: System.Security.Cryptography.Xml.KeyInfoName.#ctor*\n  parent: System.Security.Cryptography.Xml.KeyInfoName\n  isExternal: false\n  name: KeyInfoName\n  nameWithType: KeyInfoName.KeyInfoName\n- uid: System.Security.Cryptography.Xml.KeyInfoName.GetXml*\n  parent: System.Security.Cryptography.Xml.KeyInfoName\n  isExternal: false\n  name: GetXml\n  nameWithType: KeyInfoName.GetXml\n- uid: System.Security.Cryptography.Xml.KeyInfoName.LoadXml*\n  parent: System.Security.Cryptography.Xml.KeyInfoName\n  isExternal: false\n  name: LoadXml\n  nameWithType: KeyInfoName.LoadXml\n- uid: System.Security.Cryptography.Xml.KeyInfoName.Value*\n  parent: System.Security.Cryptography.Xml.KeyInfoName\n  isExternal: false\n  name: Value\n  nameWithType: KeyInfoName.Value\n"}