{"nodes":[{"pos":[697,857],"content":"Defines the types of culture lists that can be retrieved using the &lt;xref:System.Globalization.CultureInfo.GetCultures%2A?displayProperty=fullName&gt; method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines the types of culture lists that can be retrieved using the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Globalization.CultureInfo.GetCultures%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> method.","pos":[0,160],"source":"Defines the types of culture lists that can be retrieved using the &lt;xref:System.Globalization.CultureInfo.GetCultures%2A?displayProperty=fullName&gt; method."}]},{"pos":[870,1511],"content":"These culture type values are returned by the <xref:System.Globalization.CultureInfo.CultureTypes%2A?displayProperty=fullName> property, and also serve as a filter that limits the cultures returned by the <xref:System.Globalization.CultureInfo.GetCultures%2A?displayProperty=fullName> method. For more information on cultures, see <xref:System.Globalization.CultureInfo>.       Generally, your application should enumerate all cultures, using the AllCultures value. This allows enumeration of custom cultures, as well as the other culture types.       Note that the FrameworkCultures and WindowsOnlyCultures members have been deprecated.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"These culture type values are returned by the <xref:System.Globalization.CultureInfo.CultureTypes%2A?displayProperty=fullName> property, and also serve as a filter that limits the cultures returned by the <xref:System.Globalization.CultureInfo.GetCultures%2A?displayProperty=fullName> method. For more information on cultures, see <xref:System.Globalization.CultureInfo>.       Generally, your application should enumerate all cultures, using the AllCultures value. This allows enumeration of custom cultures, as well as the other culture types.       Note that the FrameworkCultures and WindowsOnlyCultures members have been deprecated.","pos":[0,637],"nodes":[{"content":"These culture type values are returned by the &lt;xref:System.Globalization.CultureInfo.CultureTypes%2A?displayProperty=fullName&gt; property, and also serve as a filter that limits the cultures returned by the &lt;xref:System.Globalization.CultureInfo.GetCultures%2A?displayProperty=fullName&gt; method.","pos":[0,292],"source":"These culture type values are returned by the <xref:System.Globalization.CultureInfo.CultureTypes%2A?displayProperty=fullName> property, and also serve as a filter that limits the cultures returned by the <xref:System.Globalization.CultureInfo.GetCultures%2A?displayProperty=fullName> method."},{"content":"For more information on cultures, see &lt;xref:System.Globalization.CultureInfo&gt;.","pos":[293,371],"source":" For more information on cultures, see <xref:System.Globalization.CultureInfo>."},{"content":"Generally, your application should enumerate all cultures, using the AllCultures value.","pos":[378,465]},{"content":"This allows enumeration of custom cultures, as well as the other culture types.","pos":[466,545]},{"content":"Note that the FrameworkCultures and WindowsOnlyCultures members have been deprecated.","pos":[552,637]}]}]},{"pos":[2983,3293],"content":"All cultures that ship with the .NET Framework, including neutral and specific cultures, cultures installed in the Windows operating system, and custom cultures created by the user.       AllCultures is a composite field that includes the NeutralCultures, SpecificCultures, and InstalledWin32Cultures values.","needQuote":false,"needEscape":true,"nodes":[{"content":"All cultures that ship with the .NET Framework, including neutral and specific cultures, cultures installed in the Windows operating system, and custom cultures created by the user.       AllCultures is a composite field that includes the NeutralCultures, SpecificCultures, and InstalledWin32Cultures values.","pos":[0,308],"nodes":[{"content":"All cultures that ship with the .NET Framework, including neutral and specific cultures, cultures installed in the Windows operating system, and custom cultures created by the user.","pos":[0,181]},{"content":"AllCultures is a composite field that includes the NeutralCultures, SpecificCultures, and InstalledWin32Cultures values.","pos":[188,308]}]}]},{"pos":[3407,3419],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3830,4039],"content":"This member is deprecated; using this value with &lt;xref:System.Globalization.CultureInfo.GetCultures%2A?displayProperty=fullName&gt; returns neutral and specific cultures shipped with the .NET Framework 2.0.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member is deprecated; using this value with <ph id=\"ph1\">&amp;lt;</ph>xref:System.Globalization.CultureInfo.GetCultures%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> returns neutral and specific cultures shipped with the .NET Framework 2.0.","pos":[0,209],"source":"This member is deprecated; using this value with &lt;xref:System.Globalization.CultureInfo.GetCultures%2A?displayProperty=fullName&gt; returns neutral and specific cultures shipped with the .NET Framework 2.0."}]},{"pos":[4158,4170],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4606,4768],"content":"All cultures that are installed in the Windows operating system. Note that not all cultures supported by the .NET Framework are installed in the operating system.","needQuote":true,"needEscape":true,"nodes":[{"content":"All cultures that are installed in the Windows operating system. Note that not all cultures supported by the .NET Framework are installed in the operating system.","pos":[0,162],"nodes":[{"content":"All cultures that are installed in the Windows operating system.","pos":[0,64]},{"content":"Note that not all cultures supported by the .NET Framework are installed in the operating system.","pos":[65,162]}]}]},{"pos":[4892,4904],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5306,5544],"content":"Cultures that are associated with a language but are not specific to a country/region. The names of .NET Framework cultures consist of the lowercase two-letter code derived from ISO 639-1. For example: \"en\" (English) is a neutral culture.","needQuote":false,"needEscape":true,"nodes":[{"content":"Cultures that are associated with a language but are not specific to a country/region. The names of .NET Framework cultures consist of the lowercase two-letter code derived from ISO 639-1. For example: \"en\" (English) is a neutral culture.","pos":[0,238],"nodes":[{"content":"Cultures that are associated with a language but are not specific to a country/region.","pos":[0,86]},{"content":"The names of .NET Framework cultures consist of the lowercase two-letter code derived from ISO 639-1.","pos":[87,188]},{"content":"For example: \"en\" (English) is a neutral culture.","pos":[189,238]}]}]},{"pos":[5558,5832],"content":"Custom cultures can have any user-specified name, not just a two-letter code.       The invariant culture is included in the array of cultures returned by the <xref:System.Globalization.CultureInfo.GetCultures%2A?displayProperty=fullName> method that specifies this value.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Custom cultures can have any user-specified name, not just a two-letter code.       The invariant culture is included in the array of cultures returned by the <xref:System.Globalization.CultureInfo.GetCultures%2A?displayProperty=fullName> method that specifies this value.","pos":[0,272],"nodes":[{"content":"Custom cultures can have any user-specified name, not just a two-letter code.","pos":[0,77]},{"content":"The invariant culture is included in the array of cultures returned by the &lt;xref:System.Globalization.CultureInfo.GetCultures%2A?displayProperty=fullName&gt; method that specifies this value.","pos":[84,272],"source":"       The invariant culture is included in the array of cultures returned by the <xref:System.Globalization.CultureInfo.GetCultures%2A?displayProperty=fullName> method that specifies this value."}]}]},{"pos":[5950,5962],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6383,6473],"content":"Custom cultures created by the user that replace cultures shipped with the .NET Framework.","needQuote":true,"needEscape":true,"nodes":[{"content":"Custom cultures created by the user that replace cultures shipped with the .NET Framework.","pos":[0,90]}]},{"pos":[6594,6606],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7012,7438],"content":"Cultures that are specific to a country/region. The names of these cultures follow RFC 4646 (Windows Vista and later). The format is \"&lt;languagecode2&gt;-&lt;country/regioncode2&gt;\", where &lt;languagecode2&gt; is a lowercase two-letter code derived from ISO 639-1 and &lt;country/regioncode2&gt; is an uppercase two-letter code derived from ISO 3166. For example, \"en-US\" for English (United States) is a specific culture.","needQuote":true,"needEscape":true,"nodes":[{"content":"Cultures that are specific to a country/region. The names of these cultures follow RFC 4646 (Windows Vista and later). The format is \"&lt;languagecode2&gt;-&lt;country/regioncode2&gt;\", where &lt;languagecode2&gt; is a lowercase two-letter code derived from ISO 639-1 and &lt;country/regioncode2&gt; is an uppercase two-letter code derived from ISO 3166. For example, \"en-US\" for English (United States) is a specific culture.","pos":[0,426],"nodes":[{"content":"Cultures that are specific to a country/region.","pos":[0,47]},{"content":"The names of these cultures follow RFC 4646 (Windows Vista and later).","pos":[48,118]},{"content":"The format is \"<ph id=\"ph1\">&amp;lt;</ph>languagecode2<ph id=\"ph2\">&amp;gt;</ph><ph id=\"ph3\">-</ph><ph id=\"ph4\">&amp;lt;</ph>country/regioncode2<ph id=\"ph5\">&amp;gt;</ph>\", where <ph id=\"ph6\">&amp;lt;</ph>languagecode2<ph id=\"ph7\">&amp;gt;</ph> is a lowercase two-letter code derived from ISO 639-1 and <ph id=\"ph8\">&amp;lt;</ph>country/regioncode2<ph id=\"ph9\">&amp;gt;</ph> is an uppercase two-letter code derived from ISO 3166.","pos":[119,354],"source":" The format is \"&lt;languagecode2&gt;-&lt;country/regioncode2&gt;\", where &lt;languagecode2&gt; is a lowercase two-letter code derived from ISO 639-1 and &lt;country/regioncode2&gt; is an uppercase two-letter code derived from ISO 3166."},{"content":"For example, \"en-US\" for English (United States) is a specific culture.","pos":[355,426]}]}]},{"pos":[7450,7535],"content":"Custom cultures can have any user-specified name, not just a standard-compliant name.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Custom cultures can have any user-specified name, not just a standard-compliant name.","pos":[0,85]}]},{"pos":[7653,7665],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8076,8112],"content":"Custom cultures created by the user.","needQuote":true,"needEscape":true,"nodes":[{"content":"Custom cultures created by the user.","pos":[0,36]}]},{"pos":[8125,9177],"content":"In Windows versions prior to Windows 10, the UserCustomCulture value is assigned to custom cultures created by the developer. In Windows 10, the UserCustomCulture value is also assigned to system cultures that are not backed by a complete set of cultural data and that do not have unique local identifiers. (All cultures of type UserCustomCulture share a <xref:System.Globalization.CultureInfo.LCID%2A?displayProperty=fullName> value of `LOCALE_CUSTOM_UNSPECIFIED` (0x1000, or 4096). As a result, code such as       [!code-vb[System.Globalization.CultureTypes#2](~/add/codesnippet/visualbasic/t-system.globalization.c_1_3.vb)]  [!code-cs[System.Globalization.CultureTypes#2](~/add/codesnippet/csharp/t-system.globalization.c_1_3.cs)]       or       [!code-vb[System.Globalization.CultureTypes#3](~/add/codesnippet/visualbasic/t-system.globalization.c_1_4.vb)]  [!code-cs[System.Globalization.CultureTypes#3](~/add/codesnippet/csharp/t-system.globalization.c_1_4.cs)]       will return different sets of cultures on different Windows versions.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"In Windows versions prior to Windows 10, the UserCustomCulture value is assigned to custom cultures created by the developer.","pos":[0,125]},{"content":"In Windows 10, the UserCustomCulture value is also assigned to system cultures that are not backed by a complete set of cultural data and that do not have unique local identifiers.","pos":[126,306]},{"content":"(All cultures of type UserCustomCulture share a &lt;xref:System.Globalization.CultureInfo.LCID%2A?displayProperty=fullName&gt; value of <ph id=\"ph1\">`LOCALE_CUSTOM_UNSPECIFIED`</ph> (0x1000, or 4096).","pos":[307,483],"source":" (All cultures of type UserCustomCulture share a <xref:System.Globalization.CultureInfo.LCID%2A?displayProperty=fullName> value of `LOCALE_CUSTOM_UNSPECIFIED` (0x1000, or 4096)."},{"content":"As a result, code such as       <bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>System.Globalization.CultureTypes#2<ept id=\"p2\">](~/add/codesnippet/visualbasic/t-system.globalization.c_1_3.vb)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-cs</bpt><bpt id=\"p4\">[</bpt>System.Globalization.CultureTypes#2<ept id=\"p4\">](~/add/codesnippet/csharp/t-system.globalization.c_1_3.cs)</ept><ept id=\"p3\">]</ept>       or       <bpt id=\"p5\">[!code-vb</bpt><bpt id=\"p6\">[</bpt>System.Globalization.CultureTypes#3<ept id=\"p6\">](~/add/codesnippet/visualbasic/t-system.globalization.c_1_4.vb)</ept><ept id=\"p5\">]</ept>  <bpt id=\"p7\">[!code-cs</bpt><bpt id=\"p8\">[</bpt>System.Globalization.CultureTypes#3<ept id=\"p8\">](~/add/codesnippet/csharp/t-system.globalization.c_1_4.cs)</ept><ept id=\"p7\">]</ept>       will return different sets of cultures on different Windows versions.","pos":[484,1042],"source":" As a result, code such as       [!code-vb[System.Globalization.CultureTypes#2](~/add/codesnippet/visualbasic/t-system.globalization.c_1_3.vb)]  [!code-cs[System.Globalization.CultureTypes#2](~/add/codesnippet/csharp/t-system.globalization.c_1_3.cs)]       or       [!code-vb[System.Globalization.CultureTypes#3](~/add/codesnippet/visualbasic/t-system.globalization.c_1_4.vb)]  [!code-cs[System.Globalization.CultureTypes#3](~/add/codesnippet/csharp/t-system.globalization.c_1_4.cs)]       will return different sets of cultures on different Windows versions."}]},{"pos":[9297,9309],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9730,9921],"content":"This member is deprecated. If it is used as an argument to the &lt;xref:System.Globalization.CultureInfo.GetCultures%2A?displayProperty=fullName&gt; method, the method returns an empty array.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member is deprecated. If it is used as an argument to the &lt;xref:System.Globalization.CultureInfo.GetCultures%2A?displayProperty=fullName&gt; method, the method returns an empty array.","pos":[0,191],"nodes":[{"content":"This member is deprecated.","pos":[0,26]},{"content":"If it is used as an argument to the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Globalization.CultureInfo.GetCultures%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> method, the method returns an empty array.","pos":[27,191],"source":" If it is used as an argument to the &lt;xref:System.Globalization.CultureInfo.GetCultures%2A?displayProperty=fullName&gt; method, the method returns an empty array."}]}]},{"pos":[10042,10054],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Globalization.CultureTypes\n  id: CultureTypes\n  children:\n  - System.Globalization.CultureTypes.AllCultures\n  - System.Globalization.CultureTypes.FrameworkCultures\n  - System.Globalization.CultureTypes.InstalledWin32Cultures\n  - System.Globalization.CultureTypes.NeutralCultures\n  - System.Globalization.CultureTypes.ReplacementCultures\n  - System.Globalization.CultureTypes.SpecificCultures\n  - System.Globalization.CultureTypes.UserCustomCulture\n  - System.Globalization.CultureTypes.WindowsOnlyCultures\n  langs:\n  - csharp\n  name: CultureTypes\n  nameWithType: CultureTypes\n  fullName: System.Globalization.CultureTypes\n  type: Enum\n  summary: Defines the types of culture lists that can be retrieved using the &lt;xref:System.Globalization.CultureInfo.GetCultures%2A?displayProperty=fullName&gt; method.\n  remarks: \"These culture type values are returned by the <xref:System.Globalization.CultureInfo.CultureTypes%2A?displayProperty=fullName> property, and also serve as a filter that limits the cultures returned by the <xref:System.Globalization.CultureInfo.GetCultures%2A?displayProperty=fullName> method. For more information on cultures, see <xref:System.Globalization.CultureInfo>.  \\n  \\n Generally, your application should enumerate all cultures, using the AllCultures value. This allows enumeration of custom cultures, as well as the other culture types.  \\n  \\n Note that the FrameworkCultures and WindowsOnlyCultures members have been deprecated.\"\n  example:\n  - \"The following example demonstrates the CultureTypes enumeration and the <xref:System.Globalization.CultureInfo.CultureTypes%2A> property.  \\n  \\n [!code-cs[System.Globalization.CultureTypes#1](~/add/codesnippet/csharp/t-system.globalization.c_1_1.cs)]\\n [!code-cpp[System.Globalization.CultureTypes#1](~/add/codesnippet/cpp/t-system.globalization.c_1_1.cpp)]\\n [!code-vb[System.Globalization.CultureTypes#1](~/add/codesnippet/visualbasic/t-system.globalization.c_1_1.vb)]  \\n  \\n The following example displays several properties of the neutral cultures.  \\n  \\n [!code-cs[System.Globalization.CultureInfo.GetCultures#1](~/add/codesnippet/csharp/t-system.globalization.c_1_2.cs)]\\n [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/add/codesnippet/cpp/t-system.globalization.c_1_2.cpp)]\\n [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/add/codesnippet/visualbasic/t-system.globalization.c_1_2.vb)]\"\n  syntax:\n    content: >-\n      [System.Flags]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public enum CultureTypes\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.Globalization.CultureTypes.AllCultures\n  id: AllCultures\n  parent: System.Globalization.CultureTypes\n  langs:\n  - csharp\n  name: AllCultures\n  nameWithType: CultureTypes.AllCultures\n  fullName: System.Globalization.CultureTypes.AllCultures\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Globalization\n  summary: \"All cultures that ship with the .NET Framework, including neutral and specific cultures, cultures installed in the Windows operating system, and custom cultures created by the user.  \\n  \\n AllCultures is a composite field that includes the NeutralCultures, SpecificCultures, and InstalledWin32Cultures values.\"\n  syntax:\n    content: AllCultures\n    return:\n      type: System.Globalization.CultureTypes\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Globalization.CultureTypes.FrameworkCultures\n  id: FrameworkCultures\n  parent: System.Globalization.CultureTypes\n  langs:\n  - csharp\n  name: FrameworkCultures\n  nameWithType: CultureTypes.FrameworkCultures\n  fullName: System.Globalization.CultureTypes.FrameworkCultures\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Globalization\n  summary: This member is deprecated; using this value with &lt;xref:System.Globalization.CultureInfo.GetCultures%2A?displayProperty=fullName&gt; returns neutral and specific cultures shipped with the .NET Framework 2.0.\n  syntax:\n    content: FrameworkCultures\n    return:\n      type: System.Globalization.CultureTypes\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Globalization.CultureTypes.InstalledWin32Cultures\n  id: InstalledWin32Cultures\n  parent: System.Globalization.CultureTypes\n  langs:\n  - csharp\n  name: InstalledWin32Cultures\n  nameWithType: CultureTypes.InstalledWin32Cultures\n  fullName: System.Globalization.CultureTypes.InstalledWin32Cultures\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Globalization\n  summary: All cultures that are installed in the Windows operating system. Note that not all cultures supported by the .NET Framework are installed in the operating system.\n  syntax:\n    content: InstalledWin32Cultures\n    return:\n      type: System.Globalization.CultureTypes\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Globalization.CultureTypes.NeutralCultures\n  id: NeutralCultures\n  parent: System.Globalization.CultureTypes\n  langs:\n  - csharp\n  name: NeutralCultures\n  nameWithType: CultureTypes.NeutralCultures\n  fullName: System.Globalization.CultureTypes.NeutralCultures\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Globalization\n  summary: 'Cultures that are associated with a language but are not specific to a country/region. The names of .NET Framework cultures consist of the lowercase two-letter code derived from ISO 639-1. For example: \"en\" (English) is a neutral culture.'\n  remarks: \"Custom cultures can have any user-specified name, not just a two-letter code.  \\n  \\n The invariant culture is included in the array of cultures returned by the <xref:System.Globalization.CultureInfo.GetCultures%2A?displayProperty=fullName> method that specifies this value.\"\n  syntax:\n    content: NeutralCultures\n    return:\n      type: System.Globalization.CultureTypes\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Globalization.CultureTypes.ReplacementCultures\n  id: ReplacementCultures\n  parent: System.Globalization.CultureTypes\n  langs:\n  - csharp\n  name: ReplacementCultures\n  nameWithType: CultureTypes.ReplacementCultures\n  fullName: System.Globalization.CultureTypes.ReplacementCultures\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Globalization\n  summary: Custom cultures created by the user that replace cultures shipped with the .NET Framework.\n  syntax:\n    content: ReplacementCultures\n    return:\n      type: System.Globalization.CultureTypes\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Globalization.CultureTypes.SpecificCultures\n  id: SpecificCultures\n  parent: System.Globalization.CultureTypes\n  langs:\n  - csharp\n  name: SpecificCultures\n  nameWithType: CultureTypes.SpecificCultures\n  fullName: System.Globalization.CultureTypes.SpecificCultures\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Globalization\n  summary: Cultures that are specific to a country/region. The names of these cultures follow RFC 4646 (Windows Vista and later). The format is \"&lt;languagecode2&gt;-&lt;country/regioncode2&gt;\", where &lt;languagecode2&gt; is a lowercase two-letter code derived from ISO 639-1 and &lt;country/regioncode2&gt; is an uppercase two-letter code derived from ISO 3166. For example, \"en-US\" for English (United States) is a specific culture.\n  remarks: Custom cultures can have any user-specified name, not just a standard-compliant name.\n  syntax:\n    content: SpecificCultures\n    return:\n      type: System.Globalization.CultureTypes\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Globalization.CultureTypes.UserCustomCulture\n  id: UserCustomCulture\n  parent: System.Globalization.CultureTypes\n  langs:\n  - csharp\n  name: UserCustomCulture\n  nameWithType: CultureTypes.UserCustomCulture\n  fullName: System.Globalization.CultureTypes.UserCustomCulture\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Globalization\n  summary: Custom cultures created by the user.\n  remarks: \"In Windows versions prior to Windows 10, the UserCustomCulture value is assigned to custom cultures created by the developer. In Windows 10, the UserCustomCulture value is also assigned to system cultures that are not backed by a complete set of cultural data and that do not have unique local identifiers. (All cultures of type UserCustomCulture share a <xref:System.Globalization.CultureInfo.LCID%2A?displayProperty=fullName> value of `LOCALE_CUSTOM_UNSPECIFIED` (0x1000, or 4096). As a result, code such as  \\n  \\n [!code-vb[System.Globalization.CultureTypes#2](~/add/codesnippet/visualbasic/t-system.globalization.c_1_3.vb)]\\n [!code-cs[System.Globalization.CultureTypes#2](~/add/codesnippet/csharp/t-system.globalization.c_1_3.cs)]  \\n  \\n or  \\n  \\n [!code-vb[System.Globalization.CultureTypes#3](~/add/codesnippet/visualbasic/t-system.globalization.c_1_4.vb)]\\n [!code-cs[System.Globalization.CultureTypes#3](~/add/codesnippet/csharp/t-system.globalization.c_1_4.cs)]  \\n  \\n will return different sets of cultures on different Windows versions.\"\n  syntax:\n    content: UserCustomCulture\n    return:\n      type: System.Globalization.CultureTypes\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Globalization.CultureTypes.WindowsOnlyCultures\n  id: WindowsOnlyCultures\n  parent: System.Globalization.CultureTypes\n  langs:\n  - csharp\n  name: WindowsOnlyCultures\n  nameWithType: CultureTypes.WindowsOnlyCultures\n  fullName: System.Globalization.CultureTypes.WindowsOnlyCultures\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Globalization\n  summary: This member is deprecated. If it is used as an argument to the &lt;xref:System.Globalization.CultureInfo.GetCultures%2A?displayProperty=fullName&gt; method, the method returns an empty array.\n  syntax:\n    content: WindowsOnlyCultures\n    return:\n      type: System.Globalization.CultureTypes\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.Globalization.CultureTypes.AllCultures\n  parent: System.Globalization.CultureTypes\n  isExternal: false\n  name: AllCultures\n  nameWithType: CultureTypes.AllCultures\n  fullName: System.Globalization.CultureTypes.AllCultures\n- uid: System.Globalization.CultureTypes\n  parent: System.Globalization\n  isExternal: false\n  name: CultureTypes\n  nameWithType: CultureTypes\n  fullName: System.Globalization.CultureTypes\n- uid: System.Globalization.CultureTypes.FrameworkCultures\n  parent: System.Globalization.CultureTypes\n  isExternal: false\n  name: FrameworkCultures\n  nameWithType: CultureTypes.FrameworkCultures\n  fullName: System.Globalization.CultureTypes.FrameworkCultures\n- uid: System.Globalization.CultureTypes.InstalledWin32Cultures\n  parent: System.Globalization.CultureTypes\n  isExternal: false\n  name: InstalledWin32Cultures\n  nameWithType: CultureTypes.InstalledWin32Cultures\n  fullName: System.Globalization.CultureTypes.InstalledWin32Cultures\n- uid: System.Globalization.CultureTypes.NeutralCultures\n  parent: System.Globalization.CultureTypes\n  isExternal: false\n  name: NeutralCultures\n  nameWithType: CultureTypes.NeutralCultures\n  fullName: System.Globalization.CultureTypes.NeutralCultures\n- uid: System.Globalization.CultureTypes.ReplacementCultures\n  parent: System.Globalization.CultureTypes\n  isExternal: false\n  name: ReplacementCultures\n  nameWithType: CultureTypes.ReplacementCultures\n  fullName: System.Globalization.CultureTypes.ReplacementCultures\n- uid: System.Globalization.CultureTypes.SpecificCultures\n  parent: System.Globalization.CultureTypes\n  isExternal: false\n  name: SpecificCultures\n  nameWithType: CultureTypes.SpecificCultures\n  fullName: System.Globalization.CultureTypes.SpecificCultures\n- uid: System.Globalization.CultureTypes.UserCustomCulture\n  parent: System.Globalization.CultureTypes\n  isExternal: false\n  name: UserCustomCulture\n  nameWithType: CultureTypes.UserCustomCulture\n  fullName: System.Globalization.CultureTypes.UserCustomCulture\n- uid: System.Globalization.CultureTypes.WindowsOnlyCultures\n  parent: System.Globalization.CultureTypes\n  isExternal: false\n  name: WindowsOnlyCultures\n  nameWithType: CultureTypes.WindowsOnlyCultures\n  fullName: System.Globalization.CultureTypes.WindowsOnlyCultures\n"}