{"nodes":[{"pos":[911,1007],"content":"Defines the direction and the property name to be used as the criteria for sorting a collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines the direction and the property name to be used as the criteria for sorting a collection.","pos":[0,96]}]},{"pos":[1692,1795],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.SortDescription\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.SortDescription\"></xref> structure."},{"pos":[2000,2045],"content":"The name of the property to sort the list by.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the property to sort the list by.","pos":[0,45]}]},{"pos":[2137,2152],"content":"The sort order.","needQuote":true,"needEscape":true,"nodes":[{"content":"The sort order.","pos":[0,15]}]},{"pos":[2326,2381],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">propertyName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter cannot be null.","needQuote":true,"needEscape":true,"source":"The <code>propertyName</code> parameter cannot be null."},{"pos":[2476,2531],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">propertyName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter cannot be empty","needQuote":true,"needEscape":true,"source":"The <code>propertyName</code> parameter cannot be empty"},{"pos":[2678,2746],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">direction</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter does not specify a valid value.","needQuote":true,"needEscape":true,"source":"The <code>direction</code> parameter does not specify a valid value."},{"pos":[3122,3207],"content":"Gets or sets a value that indicates whether to sort in ascending or descending order.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether to sort in ascending or descending order.","pos":[0,85]}]},{"pos":[3385,3515],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ListSortDirection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value to indicate whether to sort in ascending or descending order.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.ComponentModel.ListSortDirection\"></xref> value to indicate whether to sort in ascending or descending order."},{"pos":[4006,4144],"content":"Compares the specified instance and the current instance of <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.SortDescription\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for value equality.","needQuote":true,"needEscape":true,"source":"Compares the specified instance and the current instance of <xref href=\"System.ComponentModel.SortDescription\"></xref> for value equality."},{"pos":[4285,4368],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.SortDescription\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance to compare.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.SortDescription\"></xref> instance to compare."},{"pos":[4427,4609],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p2\">&lt;/code&gt;</ept> and this instance of <bpt id=\"p3\">&lt;xref href=\"System.ComponentModel.SortDescription\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> have the same values.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>obj</code> and this instance of <xref href=\"System.ComponentModel.SortDescription\"></xref> have the same values."},{"pos":[5074,5176],"content":"Returns the hash code for this instance of <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.SortDescription\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the hash code for this instance of <xref href=\"System.ComponentModel.SortDescription\"></xref>."},{"pos":[5311,5405],"content":"The hash code for this instance of <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.SortDescription\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The hash code for this instance of <xref href=\"System.ComponentModel.SortDescription\"></xref>."},{"pos":[5856,5929],"content":"Gets a value that indicates whether this object is in an immutable state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether this object is in an immutable state.","pos":[0,73]}]},{"pos":[6041,6202],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this object is in use; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this object is in use; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6918,7017],"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.SortDescription\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects for value equality.","needQuote":true,"needEscape":true,"source":"Compares two <xref href=\"System.ComponentModel.SortDescription\"></xref> objects for value equality."},{"pos":[7259,7289],"content":"The first instance to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first instance to compare.","pos":[0,30]}]},{"pos":[7373,7404],"content":"The second instance to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second instance to compare.","pos":[0,31]}]},{"pos":[7463,7628],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two objects are equal; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two objects are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8357,8458],"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.SortDescription\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects for value inequality.","needQuote":true,"needEscape":true,"source":"Compares two <xref href=\"System.ComponentModel.SortDescription\"></xref> objects for value inequality."},{"pos":[8702,8732],"content":"The first instance to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first instance to compare.","pos":[0,30]}]},{"pos":[8816,8847],"content":"The second instance to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second instance to compare.","pos":[0,31]}]},{"pos":[8906,9070],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the values are not equal; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the values are not equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9543,9609],"content":"Gets or sets the property name being used as the sorting criteria.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the property name being used as the sorting criteria.","pos":[0,66]}]},{"pos":[9622,10487],"content":"This property should be a public property of the items in the underlying collection.       The string is interpreted by the particular <xref:System.ComponentModel.ICollectionView> object involved in the sorting. <xref:System.Windows.Data.BindingListCollectionView> only supports simple column names. <xref:System.Windows.Data.ListCollectionView> supports general property paths and `XPath` for [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] data. Therefore, when the view is a <xref:System.Windows.Data.ListCollectionView> object, you can sort [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)] nodes in an <xref:System.Windows.Data.XmlDataProvider> based on an attribute of those nodes. For example, if the attribute name is `Cost`, you would specify \"@Cost\" for the PropertyName in the <xref:System.ComponentModel.SortDescription>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property should be a public property of the items in the underlying collection.","pos":[0,84]},{"content":"The string is interpreted by the particular &lt;xref:System.ComponentModel.ICollectionView&gt; object involved in the sorting.","pos":[91,211],"source":"       The string is interpreted by the particular <xref:System.ComponentModel.ICollectionView> object involved in the sorting."},{"content":"&lt;xref:System.Windows.Data.BindingListCollectionView&gt; only supports simple column names.","pos":[212,299],"source":" <xref:System.Windows.Data.BindingListCollectionView> only supports simple column names."},{"content":"&lt;xref:System.Windows.Data.ListCollectionView&gt; supports general property paths and <ph id=\"ph1\">`XPath`</ph> for <ph id=\"ph2\">[!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)]</ph> data.","pos":[300,461],"source":" <xref:System.Windows.Data.ListCollectionView> supports general property paths and `XPath` for [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] data."},{"content":"Therefore, when the view is a &lt;xref:System.Windows.Data.ListCollectionView&gt; object, you can sort <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph> nodes in an &lt;xref:System.Windows.Data.XmlDataProvider&gt; based on an attribute of those nodes.","pos":[462,715],"source":" Therefore, when the view is a <xref:System.Windows.Data.ListCollectionView> object, you can sort [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)] nodes in an <xref:System.Windows.Data.XmlDataProvider> based on an attribute of those nodes."},{"content":"For example, if the attribute name is <ph id=\"ph1\">`Cost`</ph>, you would specify \"<ph id=\"ph2\">@Cost</ph>\" for the PropertyName in the &lt;xref:System.ComponentModel.SortDescription&gt;.","pos":[716,861],"source":" For example, if the attribute name is `Cost`, you would specify \"@Cost\" for the PropertyName in the <xref:System.ComponentModel.SortDescription>."}]},{"pos":[10610,10636],"content":"The default value is null.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default value is null.","pos":[0,26]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.SortDescription\n  id: SortDescription\n  children:\n  - System.ComponentModel.SortDescription.#ctor(System.String,System.ComponentModel.ListSortDirection)\n  - System.ComponentModel.SortDescription.Direction\n  - System.ComponentModel.SortDescription.Equals(System.Object)\n  - System.ComponentModel.SortDescription.GetHashCode\n  - System.ComponentModel.SortDescription.IsSealed\n  - System.ComponentModel.SortDescription.op_Equality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)\n  - System.ComponentModel.SortDescription.op_Inequality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)\n  - System.ComponentModel.SortDescription.PropertyName\n  langs:\n  - csharp\n  name: SortDescription\n  nameWithType: SortDescription\n  fullName: System.ComponentModel.SortDescription\n  type: Struct\n  summary: Defines the direction and the property name to be used as the criteria for sorting a collection.\n  syntax:\n    content: public struct SortDescription\n  inheritance:\n  - System.ValueType\n  implements: []\n  platform:\n  - net462\n- uid: System.ComponentModel.SortDescription.#ctor(System.String,System.ComponentModel.ListSortDirection)\n  id: '#ctor(System.String,System.ComponentModel.ListSortDirection)'\n  parent: System.ComponentModel.SortDescription\n  langs:\n  - csharp\n  name: SortDescription(String,ListSortDirection)\n  nameWithType: SortDescription.SortDescription(String,ListSortDirection)\n  fullName: System.ComponentModel.SortDescription.SortDescription(String,ListSortDirection)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.SortDescription\"></xref> structure.\n  syntax:\n    content: public SortDescription (string propertyName, System.ComponentModel.ListSortDirection direction);\n    parameters:\n    - id: propertyName\n      type: System.String\n      description: The name of the property to sort the list by.\n    - id: direction\n      type: System.ComponentModel.ListSortDirection\n      description: The sort order.\n  overload: System.ComponentModel.SortDescription.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>propertyName</code> parameter cannot be null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>propertyName</code> parameter cannot be empty\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The <code>direction</code> parameter does not specify a valid value.\n  platform:\n  - net462\n- uid: System.ComponentModel.SortDescription.Direction\n  id: Direction\n  parent: System.ComponentModel.SortDescription\n  langs:\n  - csharp\n  name: Direction\n  nameWithType: SortDescription.Direction\n  fullName: System.ComponentModel.SortDescription.Direction\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Gets or sets a value that indicates whether to sort in ascending or descending order.\n  syntax:\n    content: public System.ComponentModel.ListSortDirection Direction { get; set; }\n    return:\n      type: System.ComponentModel.ListSortDirection\n      description: A <xref href=\"System.ComponentModel.ListSortDirection\"></xref> value to indicate whether to sort in ascending or descending order.\n  overload: System.ComponentModel.SortDescription.Direction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.SortDescription.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.ComponentModel.SortDescription\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: SortDescription.Equals(Object)\n  fullName: System.ComponentModel.SortDescription.Equals(Object)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Compares the specified instance and the current instance of <xref href=\"System.ComponentModel.SortDescription\"></xref> for value equality.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The <xref href=\"System.ComponentModel.SortDescription\"></xref> instance to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>obj</code> and this instance of <xref href=\"System.ComponentModel.SortDescription\"></xref> have the same values.\n  overload: System.ComponentModel.SortDescription.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.SortDescription.GetHashCode\n  id: GetHashCode\n  parent: System.ComponentModel.SortDescription\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: SortDescription.GetHashCode()\n  fullName: System.ComponentModel.SortDescription.GetHashCode()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Returns the hash code for this instance of <xref href=\"System.ComponentModel.SortDescription\"></xref>.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code for this instance of <xref href=\"System.ComponentModel.SortDescription\"></xref>.\n  overload: System.ComponentModel.SortDescription.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.SortDescription.IsSealed\n  id: IsSealed\n  parent: System.ComponentModel.SortDescription\n  langs:\n  - csharp\n  name: IsSealed\n  nameWithType: SortDescription.IsSealed\n  fullName: System.ComponentModel.SortDescription.IsSealed\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Gets a value that indicates whether this object is in an immutable state.\n  syntax:\n    content: public bool IsSealed { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this object is in use; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.SortDescription.IsSealed*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.SortDescription.op_Equality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)\n  id: op_Equality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)\n  parent: System.ComponentModel.SortDescription\n  langs:\n  - csharp\n  name: op_Equality(SortDescription,SortDescription)\n  nameWithType: SortDescription.op_Equality(SortDescription,SortDescription)\n  fullName: System.ComponentModel.SortDescription.op_Equality(SortDescription,SortDescription)\n  type: Operator\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Compares two <xref href=\"System.ComponentModel.SortDescription\"></xref> objects for value equality.\n  syntax:\n    content: public static bool op_Equality (System.ComponentModel.SortDescription sd1, System.ComponentModel.SortDescription sd2);\n    parameters:\n    - id: sd1\n      type: System.ComponentModel.SortDescription\n      description: The first instance to compare.\n    - id: sd2\n      type: System.ComponentModel.SortDescription\n      description: The second instance to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two objects are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.SortDescription.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.SortDescription.op_Inequality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)\n  id: op_Inequality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)\n  parent: System.ComponentModel.SortDescription\n  langs:\n  - csharp\n  name: op_Inequality(SortDescription,SortDescription)\n  nameWithType: SortDescription.op_Inequality(SortDescription,SortDescription)\n  fullName: System.ComponentModel.SortDescription.op_Inequality(SortDescription,SortDescription)\n  type: Operator\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Compares two <xref href=\"System.ComponentModel.SortDescription\"></xref> objects for value inequality.\n  syntax:\n    content: public static bool op_Inequality (System.ComponentModel.SortDescription sd1, System.ComponentModel.SortDescription sd2);\n    parameters:\n    - id: sd1\n      type: System.ComponentModel.SortDescription\n      description: The first instance to compare.\n    - id: sd2\n      type: System.ComponentModel.SortDescription\n      description: The second instance to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the values are not equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.SortDescription.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.SortDescription.PropertyName\n  id: PropertyName\n  parent: System.ComponentModel.SortDescription\n  langs:\n  - csharp\n  name: PropertyName\n  nameWithType: SortDescription.PropertyName\n  fullName: System.ComponentModel.SortDescription.PropertyName\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Gets or sets the property name being used as the sorting criteria.\n  remarks: \"This property should be a public property of the items in the underlying collection.  \\n  \\n The string is interpreted by the particular <xref:System.ComponentModel.ICollectionView> object involved in the sorting. <xref:System.Windows.Data.BindingListCollectionView> only supports simple column names. <xref:System.Windows.Data.ListCollectionView> supports general property paths and `XPath` for [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] data. Therefore, when the view is a <xref:System.Windows.Data.ListCollectionView> object, you can sort [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)] nodes in an <xref:System.Windows.Data.XmlDataProvider> based on an attribute of those nodes. For example, if the attribute name is `Cost`, you would specify \\\"@Cost\\\" for the PropertyName in the <xref:System.ComponentModel.SortDescription>.\"\n  syntax:\n    content: public string PropertyName { get; set; }\n    return:\n      type: System.String\n      description: The default value is null.\n  overload: System.ComponentModel.SortDescription.PropertyName*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ComponentModel.InvalidEnumArgumentException\n  parent: System.ComponentModel\n  isExternal: false\n  name: InvalidEnumArgumentException\n  nameWithType: InvalidEnumArgumentException\n  fullName: System.ComponentModel.InvalidEnumArgumentException\n- uid: System.ComponentModel.SortDescription.#ctor(System.String,System.ComponentModel.ListSortDirection)\n  parent: System.ComponentModel.SortDescription\n  isExternal: false\n  name: SortDescription(String,ListSortDirection)\n  nameWithType: SortDescription.SortDescription(String,ListSortDirection)\n  fullName: System.ComponentModel.SortDescription.SortDescription(String,ListSortDirection)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.ListSortDirection\n  parent: System.ComponentModel\n  isExternal: false\n  name: ListSortDirection\n  nameWithType: ListSortDirection\n  fullName: System.ComponentModel.ListSortDirection\n- uid: System.ComponentModel.SortDescription.Direction\n  parent: System.ComponentModel.SortDescription\n  isExternal: false\n  name: Direction\n  nameWithType: SortDescription.Direction\n  fullName: System.ComponentModel.SortDescription.Direction\n- uid: System.ComponentModel.SortDescription.Equals(System.Object)\n  parent: System.ComponentModel.SortDescription\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: SortDescription.Equals(Object)\n  fullName: System.ComponentModel.SortDescription.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.SortDescription.GetHashCode\n  parent: System.ComponentModel.SortDescription\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: SortDescription.GetHashCode()\n  fullName: System.ComponentModel.SortDescription.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ComponentModel.SortDescription.IsSealed\n  parent: System.ComponentModel.SortDescription\n  isExternal: false\n  name: IsSealed\n  nameWithType: SortDescription.IsSealed\n  fullName: System.ComponentModel.SortDescription.IsSealed\n- uid: System.ComponentModel.SortDescription.op_Equality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)\n  parent: System.ComponentModel.SortDescription\n  isExternal: false\n  name: op_Equality(SortDescription,SortDescription)\n  nameWithType: SortDescription.op_Equality(SortDescription,SortDescription)\n  fullName: System.ComponentModel.SortDescription.op_Equality(SortDescription,SortDescription)\n- uid: System.ComponentModel.SortDescription\n  parent: System.ComponentModel\n  isExternal: false\n  name: SortDescription\n  nameWithType: SortDescription\n  fullName: System.ComponentModel.SortDescription\n- uid: System.ComponentModel.SortDescription.op_Inequality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)\n  parent: System.ComponentModel.SortDescription\n  isExternal: false\n  name: op_Inequality(SortDescription,SortDescription)\n  nameWithType: SortDescription.op_Inequality(SortDescription,SortDescription)\n  fullName: System.ComponentModel.SortDescription.op_Inequality(SortDescription,SortDescription)\n- uid: System.ComponentModel.SortDescription.PropertyName\n  parent: System.ComponentModel.SortDescription\n  isExternal: false\n  name: PropertyName\n  nameWithType: SortDescription.PropertyName\n  fullName: System.ComponentModel.SortDescription.PropertyName\n- uid: System.ComponentModel.SortDescription.#ctor*\n  parent: System.ComponentModel.SortDescription\n  isExternal: false\n  name: SortDescription\n  nameWithType: SortDescription.SortDescription\n- uid: System.ComponentModel.SortDescription.Direction*\n  parent: System.ComponentModel.SortDescription\n  isExternal: false\n  name: Direction\n  nameWithType: SortDescription.Direction\n- uid: System.ComponentModel.SortDescription.Equals*\n  parent: System.ComponentModel.SortDescription\n  isExternal: false\n  name: Equals\n  nameWithType: SortDescription.Equals\n- uid: System.ComponentModel.SortDescription.GetHashCode*\n  parent: System.ComponentModel.SortDescription\n  isExternal: false\n  name: GetHashCode\n  nameWithType: SortDescription.GetHashCode\n- uid: System.ComponentModel.SortDescription.IsSealed*\n  parent: System.ComponentModel.SortDescription\n  isExternal: false\n  name: IsSealed\n  nameWithType: SortDescription.IsSealed\n- uid: System.ComponentModel.SortDescription.op_Equality*\n  parent: System.ComponentModel.SortDescription\n  isExternal: false\n  name: op_Equality\n  nameWithType: SortDescription.op_Equality\n- uid: System.ComponentModel.SortDescription.op_Inequality*\n  parent: System.ComponentModel.SortDescription\n  isExternal: false\n  name: op_Inequality\n  nameWithType: SortDescription.op_Inequality\n- uid: System.ComponentModel.SortDescription.PropertyName*\n  parent: System.ComponentModel.SortDescription\n  isExternal: false\n  name: PropertyName\n  nameWithType: SortDescription.PropertyName\n"}