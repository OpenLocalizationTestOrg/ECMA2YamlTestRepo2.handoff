{"nodes":[{"pos":[751,931],"content":"Allows security actions for <xref href=\"System.Security.Permissions.EnvironmentPermission\"></xref> to be applied to code using declarative security. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Allows security actions for <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.EnvironmentPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to be applied to code using declarative security.","pos":[0,148],"source":"Allows security actions for <xref href=\"System.Security.Permissions.EnvironmentPermission\"></xref> to be applied to code using declarative security."},{"content":"This class cannot be inherited.","pos":[149,180]}]},{"pos":[944,1525],"content":"The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> that is used.       The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time. Security attributes are used only for declarative security. For imperative security, use the corresponding permission class.       Environment variable names are case-insensitive. Multiple environment variable names are specified by separating the names using <xref:System.IO.Path.PathSeparator>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> that is used.       The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time. Security attributes are used only for declarative security. For imperative security, use the corresponding permission class.       Environment variable names are case-insensitive. Multiple environment variable names are specified by separating the names using <xref:System.IO.Path.PathSeparator>.","pos":[0,577],"nodes":[{"content":"The scope of the declaration that is allowed depends on the &lt;xref:System.Security.Permissions.SecurityAction&gt; that is used.","pos":[0,123],"source":"The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> that is used."},{"content":"The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time.","pos":[130,280]},{"content":"Security attributes are used only for declarative security.","pos":[281,340]},{"content":"For imperative security, use the corresponding permission class.","pos":[341,405]},{"content":"Environment variable names are case-insensitive.","pos":[412,460]},{"content":"Multiple environment variable names are specified by separating the names using &lt;xref:System.IO.Path.PathSeparator&gt;.","pos":[461,577],"source":" Multiple environment variable names are specified by separating the names using <xref:System.IO.Path.PathSeparator>."}]}]},{"pos":[2918,3121],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.EnvironmentPermissionAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified <bpt id=\"p2\">&lt;xref href=\"System.Security.Permissions.SecurityAction\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.EnvironmentPermissionAttribute\"></xref> class with the specified <xref href=\"System.Security.Permissions.SecurityAction\"></xref>."},{"pos":[3343,3425],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.SecurityAction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Security.Permissions.SecurityAction\"></xref> values."},{"pos":[3612,3734],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">action</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid value of <bpt id=\"p2\">&lt;xref href=\"System.Security.Permissions.SecurityAction\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>action</code> parameter is not a valid value of <xref href=\"System.Security.Permissions.SecurityAction\"></xref>."},{"pos":[4161,4238],"content":"Sets full access for the environment variables specified by the string value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets full access for the environment variables specified by the string value.","pos":[0,77]}]},{"pos":[4250,4415],"content":"Environment variable names are case-insensitive. Multiple environment variable names are specified by separating the names using <xref:System.IO.Path.PathSeparator>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Environment variable names are case-insensitive. Multiple environment variable names are specified by separating the names using <xref:System.IO.Path.PathSeparator>.","pos":[0,165],"nodes":[{"content":"Environment variable names are case-insensitive.","pos":[0,48]},{"content":"Multiple environment variable names are specified by separating the names using &lt;xref:System.IO.Path.PathSeparator&gt;.","pos":[49,165],"source":" Multiple environment variable names are specified by separating the names using <xref:System.IO.Path.PathSeparator>."}]}]},{"pos":[4528,4576],"content":"A list of environment variables for full access.","needQuote":true,"needEscape":true,"nodes":[{"content":"A list of environment variables for full access.","pos":[0,48]}]},{"pos":[4769,4819],"content":"The get method is not supported for this property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The get method is not supported for this property.","pos":[0,50]}]},{"pos":[5315,5412],"content":"Creates and returns a new <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.EnvironmentPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates and returns a new <xref href=\"System.Security.Permissions.EnvironmentPermission\"></xref>."},{"pos":[5425,5739],"content":"This method should only be called by the security system, never by application code.       At compile time, attributes convert security declarations to a serialized form in metadata. Declarative security data in metadata is created from the permission that this method returns that corresponds to this attribute.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method should only be called by the security system, never by application code.       At compile time, attributes convert security declarations to a serialized form in metadata. Declarative security data in metadata is created from the permission that this method returns that corresponds to this attribute.","pos":[0,312],"nodes":[{"content":"This method should only be called by the security system, never by application code.","pos":[0,84]},{"content":"At compile time, attributes convert security declarations to a serialized form in metadata.","pos":[91,182]},{"content":"Declarative security data in metadata is created from the permission that this method returns that corresponds to this attribute.","pos":[183,312]}]}]},{"pos":[5919,6028],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.EnvironmentPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that corresponds to this attribute.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Security.Permissions.EnvironmentPermission\"></xref> that corresponds to this attribute."},{"pos":[6566,6651],"content":"Gets or sets read access for the environment variables specified by the string value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets read access for the environment variables specified by the string value.","pos":[0,85]}]},{"pos":[6663,6828],"content":"Environment variable names are case-insensitive. Multiple environment variable names are specified by separating the names using <xref:System.IO.Path.PathSeparator>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Environment variable names are case-insensitive. Multiple environment variable names are specified by separating the names using <xref:System.IO.Path.PathSeparator>.","pos":[0,165],"nodes":[{"content":"Environment variable names are case-insensitive.","pos":[0,48]},{"content":"Multiple environment variable names are specified by separating the names using &lt;xref:System.IO.Path.PathSeparator&gt;.","pos":[49,165],"source":" Multiple environment variable names are specified by separating the names using <xref:System.IO.Path.PathSeparator>."}]}]},{"pos":[6942,6990],"content":"A list of environment variables for read access.","needQuote":true,"needEscape":true,"nodes":[{"content":"A list of environment variables for read access.","pos":[0,48]}]},{"pos":[7521,7607],"content":"Gets or sets write access for the environment variables specified by the string value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets write access for the environment variables specified by the string value.","pos":[0,86]}]},{"pos":[7619,7784],"content":"Environment variable names are case-insensitive. Multiple environment variable names are specified by separating the names using <xref:System.IO.Path.PathSeparator>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Environment variable names are case-insensitive. Multiple environment variable names are specified by separating the names using <xref:System.IO.Path.PathSeparator>.","pos":[0,165],"nodes":[{"content":"Environment variable names are case-insensitive.","pos":[0,48]},{"content":"Multiple environment variable names are specified by separating the names using &lt;xref:System.IO.Path.PathSeparator&gt;.","pos":[49,165],"source":" Multiple environment variable names are specified by separating the names using <xref:System.IO.Path.PathSeparator>."}]}]},{"pos":[7899,7948],"content":"A list of environment variables for write access.","needQuote":true,"needEscape":true,"nodes":[{"content":"A list of environment variables for write access.","pos":[0,49]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.EnvironmentPermissionAttribute\n  id: EnvironmentPermissionAttribute\n  children:\n  - System.Security.Permissions.EnvironmentPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  - System.Security.Permissions.EnvironmentPermissionAttribute.All\n  - System.Security.Permissions.EnvironmentPermissionAttribute.CreatePermission\n  - System.Security.Permissions.EnvironmentPermissionAttribute.Read\n  - System.Security.Permissions.EnvironmentPermissionAttribute.Write\n  langs:\n  - csharp\n  name: EnvironmentPermissionAttribute\n  nameWithType: EnvironmentPermissionAttribute\n  fullName: System.Security.Permissions.EnvironmentPermissionAttribute\n  type: Class\n  summary: Allows security actions for <xref href=\"System.Security.Permissions.EnvironmentPermission\"></xref> to be applied to code using declarative security. This class cannot be inherited.\n  remarks: \"The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> that is used.  \\n  \\n The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time. Security attributes are used only for declarative security. For imperative security, use the corresponding permission class.  \\n  \\n Environment variable names are case-insensitive. Multiple environment variable names are specified by separating the names using <xref:System.IO.Path.PathSeparator>.\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class EnvironmentPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute\n  inheritance:\n  - System.Attribute\n  - System.Security.Permissions.SecurityAttribute\n  - System.Security.Permissions.CodeAccessSecurityAttribute\n  implements: []\n  inheritedMembers:\n  - System.Security.Permissions.SecurityAttribute.Action\n  - System.Security.Permissions.SecurityAttribute.Unrestricted\n  platform:\n  - net462\n- uid: System.Security.Permissions.EnvironmentPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  id: '#ctor(System.Security.Permissions.SecurityAction)'\n  parent: System.Security.Permissions.EnvironmentPermissionAttribute\n  langs:\n  - csharp\n  name: EnvironmentPermissionAttribute(SecurityAction)\n  nameWithType: EnvironmentPermissionAttribute.EnvironmentPermissionAttribute(SecurityAction)\n  fullName: System.Security.Permissions.EnvironmentPermissionAttribute.EnvironmentPermissionAttribute(SecurityAction)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.EnvironmentPermissionAttribute\"></xref> class with the specified <xref href=\"System.Security.Permissions.SecurityAction\"></xref>.\n  syntax:\n    content: public EnvironmentPermissionAttribute (System.Security.Permissions.SecurityAction action);\n    parameters:\n    - id: action\n      type: System.Security.Permissions.SecurityAction\n      description: One of the <xref href=\"System.Security.Permissions.SecurityAction\"></xref> values.\n  overload: System.Security.Permissions.EnvironmentPermissionAttribute.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>action</code> parameter is not a valid value of <xref href=\"System.Security.Permissions.SecurityAction\"></xref>.\n  platform:\n  - net462\n- uid: System.Security.Permissions.EnvironmentPermissionAttribute.All\n  id: All\n  parent: System.Security.Permissions.EnvironmentPermissionAttribute\n  langs:\n  - csharp\n  name: All\n  nameWithType: EnvironmentPermissionAttribute.All\n  fullName: System.Security.Permissions.EnvironmentPermissionAttribute.All\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Sets full access for the environment variables specified by the string value.\n  remarks: Environment variable names are case-insensitive. Multiple environment variable names are specified by separating the names using <xref:System.IO.Path.PathSeparator>.\n  syntax:\n    content: public string All { get; set; }\n    return:\n      type: System.String\n      description: A list of environment variables for full access.\n  overload: System.Security.Permissions.EnvironmentPermissionAttribute.All*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The get method is not supported for this property.\n  platform:\n  - net462\n- uid: System.Security.Permissions.EnvironmentPermissionAttribute.CreatePermission\n  id: CreatePermission\n  parent: System.Security.Permissions.EnvironmentPermissionAttribute\n  langs:\n  - csharp\n  name: CreatePermission()\n  nameWithType: EnvironmentPermissionAttribute.CreatePermission()\n  fullName: System.Security.Permissions.EnvironmentPermissionAttribute.CreatePermission()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Creates and returns a new <xref href=\"System.Security.Permissions.EnvironmentPermission\"></xref>.\n  remarks: \"This method should only be called by the security system, never by application code.  \\n  \\n At compile time, attributes convert security declarations to a serialized form in metadata. Declarative security data in metadata is created from the permission that this method returns that corresponds to this attribute.\"\n  syntax:\n    content: public override System.Security.IPermission CreatePermission ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: An <xref href=\"System.Security.Permissions.EnvironmentPermission\"></xref> that corresponds to this attribute.\n  overload: System.Security.Permissions.EnvironmentPermissionAttribute.CreatePermission*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.EnvironmentPermissionAttribute.Read\n  id: Read\n  parent: System.Security.Permissions.EnvironmentPermissionAttribute\n  langs:\n  - csharp\n  name: Read\n  nameWithType: EnvironmentPermissionAttribute.Read\n  fullName: System.Security.Permissions.EnvironmentPermissionAttribute.Read\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Gets or sets read access for the environment variables specified by the string value.\n  remarks: Environment variable names are case-insensitive. Multiple environment variable names are specified by separating the names using <xref:System.IO.Path.PathSeparator>.\n  syntax:\n    content: public string Read { get; set; }\n    return:\n      type: System.String\n      description: A list of environment variables for read access.\n  overload: System.Security.Permissions.EnvironmentPermissionAttribute.Read*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.EnvironmentPermissionAttribute.Write\n  id: Write\n  parent: System.Security.Permissions.EnvironmentPermissionAttribute\n  langs:\n  - csharp\n  name: Write\n  nameWithType: EnvironmentPermissionAttribute.Write\n  fullName: System.Security.Permissions.EnvironmentPermissionAttribute.Write\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Gets or sets write access for the environment variables specified by the string value.\n  remarks: Environment variable names are case-insensitive. Multiple environment variable names are specified by separating the names using <xref:System.IO.Path.PathSeparator>.\n  syntax:\n    content: public string Write { get; set; }\n    return:\n      type: System.String\n      description: A list of environment variables for write access.\n  overload: System.Security.Permissions.EnvironmentPermissionAttribute.Write*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.Permissions.CodeAccessSecurityAttribute\n  isExternal: false\n  name: System.Security.Permissions.CodeAccessSecurityAttribute\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.Security.Permissions.EnvironmentPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  parent: System.Security.Permissions.EnvironmentPermissionAttribute\n  isExternal: false\n  name: EnvironmentPermissionAttribute(SecurityAction)\n  nameWithType: EnvironmentPermissionAttribute.EnvironmentPermissionAttribute(SecurityAction)\n  fullName: System.Security.Permissions.EnvironmentPermissionAttribute.EnvironmentPermissionAttribute(SecurityAction)\n- uid: System.Security.Permissions.SecurityAction\n  parent: System.Security.Permissions\n  isExternal: false\n  name: SecurityAction\n  nameWithType: SecurityAction\n  fullName: System.Security.Permissions.SecurityAction\n- uid: System.Security.Permissions.EnvironmentPermissionAttribute.All\n  parent: System.Security.Permissions.EnvironmentPermissionAttribute\n  isExternal: false\n  name: All\n  nameWithType: EnvironmentPermissionAttribute.All\n  fullName: System.Security.Permissions.EnvironmentPermissionAttribute.All\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Permissions.EnvironmentPermissionAttribute.CreatePermission\n  parent: System.Security.Permissions.EnvironmentPermissionAttribute\n  isExternal: false\n  name: CreatePermission()\n  nameWithType: EnvironmentPermissionAttribute.CreatePermission()\n  fullName: System.Security.Permissions.EnvironmentPermissionAttribute.CreatePermission()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.EnvironmentPermissionAttribute.Read\n  parent: System.Security.Permissions.EnvironmentPermissionAttribute\n  isExternal: false\n  name: Read\n  nameWithType: EnvironmentPermissionAttribute.Read\n  fullName: System.Security.Permissions.EnvironmentPermissionAttribute.Read\n- uid: System.Security.Permissions.EnvironmentPermissionAttribute.Write\n  parent: System.Security.Permissions.EnvironmentPermissionAttribute\n  isExternal: false\n  name: Write\n  nameWithType: EnvironmentPermissionAttribute.Write\n  fullName: System.Security.Permissions.EnvironmentPermissionAttribute.Write\n- uid: System.Security.Permissions.EnvironmentPermissionAttribute.#ctor*\n  parent: System.Security.Permissions.EnvironmentPermissionAttribute\n  isExternal: false\n  name: EnvironmentPermissionAttribute\n  nameWithType: EnvironmentPermissionAttribute.EnvironmentPermissionAttribute\n- uid: System.Security.Permissions.EnvironmentPermissionAttribute.All*\n  parent: System.Security.Permissions.EnvironmentPermissionAttribute\n  isExternal: false\n  name: All\n  nameWithType: EnvironmentPermissionAttribute.All\n- uid: System.Security.Permissions.EnvironmentPermissionAttribute.CreatePermission*\n  parent: System.Security.Permissions.EnvironmentPermissionAttribute\n  isExternal: false\n  name: CreatePermission\n  nameWithType: EnvironmentPermissionAttribute.CreatePermission\n- uid: System.Security.Permissions.EnvironmentPermissionAttribute.Read*\n  parent: System.Security.Permissions.EnvironmentPermissionAttribute\n  isExternal: false\n  name: Read\n  nameWithType: EnvironmentPermissionAttribute.Read\n- uid: System.Security.Permissions.EnvironmentPermissionAttribute.Write*\n  parent: System.Security.Permissions.EnvironmentPermissionAttribute\n  isExternal: false\n  name: Write\n  nameWithType: EnvironmentPermissionAttribute.Write\n"}