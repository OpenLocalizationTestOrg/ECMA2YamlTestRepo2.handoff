{"nodes":[{"pos":[3794,3806],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5868,5880],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7078,7090],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8149,8161],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8905,8917],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9685,9697],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10830,10842],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10901,10913],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11944,11956],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12015,12027],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13908,13920],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14033,14045],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15215,15227],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15340,15352],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16597,16609],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16717,16729],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18030,18042],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18101,18113],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18221,18233],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19389,19401],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19460,19472],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20518,20530],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20589,20601],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21476,21488],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22735,22747],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22855,22867],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24168,24180],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24239,24251],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24359,24371],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25539,25551],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25610,25622],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26682,26694],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26753,26765],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27971,27983],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28035,28047],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29276,29288],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29340,29352],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30788,30800],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  id: ConstContainerBidirectionalIterator`1\n  children:\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode`1)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.Clone\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.container\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.next\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1@)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1@,System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Implicit\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1@)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1@,System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.prev\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.valid\n  langs:\n  - csharp\n  name: ConstContainerBidirectionalIterator<TValue>\n  nameWithType: ConstContainerBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>\n  type: Class\n  syntax:\n    content: 'public class ConstContainerBidirectionalIterator<TValue> : Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue>'\n    typeParameters:\n    - id: TValue\n      description: To be added.\n  inheritance:\n  - System.Object\n  implements:\n  - Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue>\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor\n  id: '#ctor'\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: ConstContainerBidirectionalIterator()\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.ConstContainerBidirectionalIterator()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.ConstContainerBidirectionalIterator()\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public ConstContainerBidirectionalIterator ();\n    parameters: []\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  id: '#ctor(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)'\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: ConstContainerBidirectionalIterator(ConstContainerBidirectionalIterator)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.ConstContainerBidirectionalIterator(ConstContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.ConstContainerBidirectionalIterator(ConstContainerBidirectionalIterator)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public ConstContainerBidirectionalIterator (Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  id: '#ctor(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)'\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: ConstContainerBidirectionalIterator(ContainerBidirectionalIterator)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.ConstContainerBidirectionalIterator(ContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.ConstContainerBidirectionalIterator(ContainerBidirectionalIterator)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public ConstContainerBidirectionalIterator (Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode`1)\n  id: '#ctor(Microsoft.VisualC.StlClr.Generic.INode`1)'\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: ConstContainerBidirectionalIterator(INode<TValue>)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.ConstContainerBidirectionalIterator(INode<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.ConstContainerBidirectionalIterator(INode<TValue>)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public ConstContainerBidirectionalIterator (Microsoft.VisualC.StlClr.Generic.INode<TValue> _Node);\n    parameters:\n    - id: _Node\n      type: Microsoft.VisualC.StlClr.Generic.INode`1\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.Clone\n  id: Clone\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.Clone()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.Clone()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual object Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.container\n  id: container\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: container()\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.container()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.container()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual object container ();\n    parameters: []\n    return:\n      type: System.Object\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.container*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  id: equal_to(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: equal_to(ConstContainerBidirectionalIterator)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.equal_to(ConstContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.equal_to(ConstContainerBidirectionalIterator)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool equal_to (Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  id: equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: equal_to(IInputIterator<TValue>)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.equal_to(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.equal_to(IInputIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual bool equal_to (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.next\n  id: next\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: next()\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.next()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.next()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual void next ();\n    parameters: []\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.next*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  id: op_Assign(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Assign(ConstContainerBidirectionalIterator)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Assign(ConstContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Assign(ConstContainerBidirectionalIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator op_Assign (Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator\n      description: To be added.\n    return:\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  id: op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Assign(ContainerBidirectionalIterator)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Assign(ContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Assign(ContainerBidirectionalIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator op_Assign (Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n      description: To be added.\n    return:\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1@)\n  id: op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Decrement(ConstContainerBidirectionalIterator<TValue>)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Decrement(ConstContainerBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Decrement(ConstContainerBidirectionalIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Decrement (ref Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1@,System.Int32)\n  id: op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Decrement(ConstContainerBidirectionalIterator<TValue>,Int32)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Decrement(ConstContainerBidirectionalIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Decrement(ConstContainerBidirectionalIterator<TValue>,Int32)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Decrement (ref Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue> , int A_0);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n      description: To be added.\n    - id: A_0\n      type: System.Int32\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  id: op_Equality(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Equality(ConstContainerBidirectionalIterator)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Equality(ConstContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Equality(ConstContainerBidirectionalIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_Equality (Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  id: op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Equality(IInputIterator<TValue>)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Equality(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Equality(IInputIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_Equality (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Implicit\n  id: op_Implicit\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Implicit\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Implicit\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Implicit\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue> op_Implicit ();\n    parameters: []\n    return:\n      type: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1@)\n  id: op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Increment(ConstContainerBidirectionalIterator<TValue>)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Increment(ConstContainerBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Increment(ConstContainerBidirectionalIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Increment (ref Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1@,System.Int32)\n  id: op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Increment(ConstContainerBidirectionalIterator<TValue>,Int32)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Increment(ConstContainerBidirectionalIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Increment(ConstContainerBidirectionalIterator<TValue>,Int32)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Increment (ref Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue> , int A_0);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n      description: To be added.\n    - id: A_0\n      type: System.Int32\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  id: op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Inequality(ConstContainerBidirectionalIterator)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Inequality(ConstContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Inequality(ConstContainerBidirectionalIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_Inequality (Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  id: op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Inequality(IInputIterator<TValue>)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Inequality(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Inequality(IInputIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_Inequality (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  id: op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_MemberSelection(ConstContainerBidirectionalIterator)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_MemberSelection(ConstContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_MemberSelection(ConstContainerBidirectionalIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public static TValue op_MemberSelection (Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator _Left);\n    parameters:\n    - id: _Left\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator\n      description: To be added.\n    return:\n      type: TValue@\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_MemberSelection*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  id: op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_PointerDereference(ConstContainerBidirectionalIterator)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_PointerDereference(ConstContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_PointerDereference(ConstContainerBidirectionalIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public static TValue op_PointerDereference (Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator _Left);\n    parameters:\n    - id: _Left\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator\n      description: To be added.\n    return:\n      type: TValue@\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_PointerDereference*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.prev\n  id: prev\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: prev()\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.prev()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.prev()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual void prev ();\n    parameters: []\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.prev*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.valid\n  id: valid\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: valid()\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.valid()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.valid()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual bool valid ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.valid*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: ConstContainerBidirectionalIterator()\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.ConstContainerBidirectionalIterator()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.ConstContainerBidirectionalIterator()\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: ConstContainerBidirectionalIterator(ConstContainerBidirectionalIterator)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.ConstContainerBidirectionalIterator(ConstContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.ConstContainerBidirectionalIterator(ConstContainerBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ConstContainerBidirectionalIterator\n  nameWithType: ConstContainerBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: ConstContainerBidirectionalIterator(ContainerBidirectionalIterator)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.ConstContainerBidirectionalIterator(ContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.ConstContainerBidirectionalIterator(ContainerBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerBidirectionalIterator\n  nameWithType: ContainerBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: ConstContainerBidirectionalIterator(INode<TValue>)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.ConstContainerBidirectionalIterator(INode<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.ConstContainerBidirectionalIterator(INode<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.INode`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: INode<TValue>\n  nameWithType: INode<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.INode<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.Clone\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: Clone()\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.Clone()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.Clone()\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.container\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: container()\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.container()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.container()\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: equal_to(ConstContainerBidirectionalIterator)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.equal_to(ConstContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.equal_to(ConstContainerBidirectionalIterator)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: equal_to(IInputIterator<TValue>)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.equal_to(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.equal_to(IInputIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IInputIterator<TValue>\n  nameWithType: IInputIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.next\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: next()\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.next()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.next()\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Assign(ConstContainerBidirectionalIterator)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Assign(ConstContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Assign(ConstContainerBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Assign(ContainerBidirectionalIterator)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Assign(ContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Assign(ContainerBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Decrement(ConstContainerBidirectionalIterator<TValue>)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Decrement(ConstContainerBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Decrement(ConstContainerBidirectionalIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ConstContainerBidirectionalIterator<TValue>\n  nameWithType: ConstContainerBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Decrement(ConstContainerBidirectionalIterator<TValue>,Int32)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Decrement(ConstContainerBidirectionalIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Decrement(ConstContainerBidirectionalIterator<TValue>,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Equality(ConstContainerBidirectionalIterator)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Equality(ConstContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Equality(ConstContainerBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Equality(IInputIterator<TValue>)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Equality(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Equality(IInputIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Implicit\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Implicit\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Implicit\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Implicit\n- uid: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IBidirectionalIterator<TValue>\n  nameWithType: IBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Increment(ConstContainerBidirectionalIterator<TValue>)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Increment(ConstContainerBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Increment(ConstContainerBidirectionalIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Increment(ConstContainerBidirectionalIterator<TValue>,Int32)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Increment(ConstContainerBidirectionalIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Increment(ConstContainerBidirectionalIterator<TValue>,Int32)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Inequality(ConstContainerBidirectionalIterator)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Inequality(ConstContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Inequality(ConstContainerBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Inequality(IInputIterator<TValue>)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Inequality(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Inequality(IInputIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_MemberSelection(ConstContainerBidirectionalIterator)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_MemberSelection(ConstContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_MemberSelection(ConstContainerBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_PointerDereference(ConstContainerBidirectionalIterator)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_PointerDereference(ConstContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_PointerDereference(ConstContainerBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.prev\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: prev()\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.prev()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.prev()\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.valid\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: valid()\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.valid()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.valid()\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: ConstContainerBidirectionalIterator<TValue>\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.ConstContainerBidirectionalIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.Clone*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: Clone\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.Clone\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.container*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: container\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.container\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: equal_to\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.equal_to\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.next*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: next\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.next\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Assign\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Assign\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Decrement\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Decrement\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Equality\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Equality\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Implicit*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Implicit\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Implicit\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Increment\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Increment\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Inequality\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Inequality\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_MemberSelection*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_MemberSelection\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_MemberSelection\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_PointerDereference*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_PointerDereference\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_PointerDereference\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.prev*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: prev\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.prev\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.valid*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: valid\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.valid\n"}