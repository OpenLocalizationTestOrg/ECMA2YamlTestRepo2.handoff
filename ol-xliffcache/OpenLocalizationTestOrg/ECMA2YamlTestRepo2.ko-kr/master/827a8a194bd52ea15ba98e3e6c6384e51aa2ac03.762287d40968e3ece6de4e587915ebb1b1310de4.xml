{"nodes":[{"pos":[615,627],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[665,677],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2198,2210],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2897,2909],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3532,3544],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.ActivityFunc`2\n  id: ActivityFunc`2\n  children:\n  - System.Activities.ActivityFunc`2.#ctor\n  - System.Activities.ActivityFunc`2.Argument\n  - System.Activities.ActivityFunc`2.GetResultArgument\n  - System.Activities.ActivityFunc`2.Result\n  langs:\n  - csharp\n  name: ActivityFunc<T,TResult>\n  nameWithType: ActivityFunc<T,TResult>\n  fullName: System.Activities.ActivityFunc<T,TResult>\n  type: Class\n  syntax:\n    content: 'public sealed class ActivityFunc<T,TResult> : System.Activities.ActivityDelegate'\n    typeParameters:\n    - id: T\n      description: To be added.\n    - id: TResult\n      description: To be added.\n  inheritance:\n  - System.Object\n  - System.Activities.ActivityDelegate\n  implements: []\n  inheritedMembers:\n  - System.Activities.ActivityDelegate.DisplayName\n  - System.Activities.ActivityDelegate.Handler\n  - System.Activities.ActivityDelegate.OnGetRuntimeDelegateArguments(System.Collections.Generic.IList{System.Activities.RuntimeDelegateArgument})\n  - System.Activities.ActivityDelegate.ShouldSerializeDisplayName\n  - System.Activities.ActivityDelegate.ToString\n  platform:\n  - net462\n- uid: System.Activities.ActivityFunc`2.#ctor\n  id: '#ctor'\n  parent: System.Activities.ActivityFunc`2\n  langs:\n  - csharp\n  name: ActivityFunc()\n  nameWithType: ActivityFunc<T,TResult>.ActivityFunc()\n  fullName: System.Activities.ActivityFunc<T,TResult>.ActivityFunc()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public ActivityFunc ();\n    parameters: []\n  overload: System.Activities.ActivityFunc`2.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityFunc`2.Argument\n  id: Argument\n  parent: System.Activities.ActivityFunc`2\n  langs:\n  - csharp\n  name: Argument\n  nameWithType: ActivityFunc<T,TResult>.Argument\n  fullName: System.Activities.ActivityFunc<T,TResult>.Argument\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public System.Activities.DelegateInArgument<T> Argument { get; set; }\n    return:\n      type: System.Activities.DelegateInArgument`1\n      description: To be added.\n  overload: System.Activities.ActivityFunc`2.Argument*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityFunc`2.GetResultArgument\n  id: GetResultArgument\n  parent: System.Activities.ActivityFunc`2\n  langs:\n  - csharp\n  name: GetResultArgument()\n  nameWithType: ActivityFunc<T,TResult>.GetResultArgument()\n  fullName: System.Activities.ActivityFunc<T,TResult>.GetResultArgument()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: protected override System.Activities.DelegateOutArgument GetResultArgument ();\n    parameters: []\n    return:\n      type: System.Activities.DelegateOutArgument\n      description: To be added.\n  overload: System.Activities.ActivityFunc`2.GetResultArgument*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityFunc`2.Result\n  id: Result\n  parent: System.Activities.ActivityFunc`2\n  langs:\n  - csharp\n  name: Result\n  nameWithType: ActivityFunc<T,TResult>.Result\n  fullName: System.Activities.ActivityFunc<T,TResult>.Result\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public System.Activities.DelegateOutArgument<TResult> Result { get; set; }\n    return:\n      type: System.Activities.DelegateOutArgument{TResult}\n      description: To be added.\n  overload: System.Activities.ActivityFunc`2.Result*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.ActivityDelegate\n  isExternal: false\n  name: System.Activities.ActivityDelegate\n- uid: System.Activities.ActivityFunc`2.#ctor\n  parent: System.Activities.ActivityFunc`2\n  isExternal: false\n  name: ActivityFunc()\n  nameWithType: ActivityFunc<T,TResult>.ActivityFunc()\n  fullName: System.Activities.ActivityFunc<T,TResult>.ActivityFunc()\n- uid: System.Activities.ActivityFunc`2.Argument\n  parent: System.Activities.ActivityFunc`2\n  isExternal: false\n  name: Argument\n  nameWithType: ActivityFunc<T,TResult>.Argument\n  fullName: System.Activities.ActivityFunc<T,TResult>.Argument\n- uid: System.Activities.DelegateInArgument`1\n  parent: System.Activities\n  isExternal: false\n  name: DelegateInArgument<T>\n  nameWithType: DelegateInArgument<T>\n  fullName: System.Activities.DelegateInArgument<T>\n- uid: System.Activities.ActivityFunc`2.GetResultArgument\n  parent: System.Activities.ActivityFunc`2\n  isExternal: false\n  name: GetResultArgument()\n  nameWithType: ActivityFunc<T,TResult>.GetResultArgument()\n  fullName: System.Activities.ActivityFunc<T,TResult>.GetResultArgument()\n- uid: System.Activities.DelegateOutArgument\n  parent: System.Activities\n  isExternal: false\n  name: DelegateOutArgument\n  nameWithType: DelegateOutArgument\n  fullName: System.Activities.DelegateOutArgument\n- uid: System.Activities.ActivityFunc`2.Result\n  parent: System.Activities.ActivityFunc`2\n  isExternal: false\n  name: Result\n  nameWithType: ActivityFunc<T,TResult>.Result\n  fullName: System.Activities.ActivityFunc<T,TResult>.Result\n- uid: System.Activities.DelegateOutArgument{TResult}\n  parent: System.Activities\n  isExternal: false\n  name: DelegateOutArgument<TResult>\n  nameWithType: DelegateOutArgument<TResult>\n  fullName: System.Activities.DelegateOutArgument<TResult>\n  spec.csharp:\n  - uid: System.Activities.DelegateOutArgument`1\n    name: DelegateOutArgument\n    nameWithType: DelegateOutArgument\n    fullName: DelegateOutArgument<TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.ActivityFunc`2.#ctor*\n  parent: System.Activities.ActivityFunc`2\n  isExternal: false\n  name: ActivityFunc<T,TResult>\n  nameWithType: ActivityFunc<T,TResult>.ActivityFunc<T,TResult>\n- uid: System.Activities.ActivityFunc`2.Argument*\n  parent: System.Activities.ActivityFunc`2\n  isExternal: false\n  name: Argument\n  nameWithType: ActivityFunc<T,TResult>.Argument\n- uid: System.Activities.ActivityFunc`2.GetResultArgument*\n  parent: System.Activities.ActivityFunc`2\n  isExternal: false\n  name: GetResultArgument\n  nameWithType: ActivityFunc<T,TResult>.GetResultArgument\n- uid: System.Activities.ActivityFunc`2.Result*\n  parent: System.Activities.ActivityFunc`2\n  isExternal: false\n  name: Result\n  nameWithType: ActivityFunc<T,TResult>.Result\n"}