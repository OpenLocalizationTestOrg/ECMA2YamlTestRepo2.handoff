{"nodes":[{"pos":[1429,1549],"content":"Provides a top-level mapping layer between a COM object and a <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.TypeDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Provides a top-level mapping layer between a COM object and a <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>."},{"pos":[2530,2578],"content":"Gets the attributes for the specified component.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the attributes for the specified component.","pos":[0,48]}]},{"pos":[2922,2958],"content":"The component to get attributes for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The component to get attributes for.","pos":[0,36]}]},{"pos":[3044,3098],"content":"A collection of attributes for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">component</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A collection of attributes for <code>component</code>."},{"pos":[3678,3726],"content":"Gets the class name for the specified component.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the class name for the specified component.","pos":[0,48]}]},{"pos":[4034,4074],"content":"The component to get the class name for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The component to get the class name for.","pos":[0,40]}]},{"pos":[4132,4199],"content":"The name of the class that corresponds with <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">component</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The name of the class that corresponds with <code>component</code>."},{"pos":[4778,4830],"content":"Gets the type converter for the specified component.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the type converter for the specified component.","pos":[0,52]}]},{"pos":[5167,5253],"content":"The component to get the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.TypeConverter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for.","needQuote":true,"needEscape":true,"source":"The component to get the <xref href=\"System.ComponentModel.TypeConverter\"></xref> for."},{"pos":[5333,5421],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.TypeConverter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">component</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.TypeConverter\"></xref> for <code>component</code>."},{"pos":[6015,6066],"content":"Gets the default event for the specified component.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the default event for the specified component.","pos":[0,51]}]},{"pos":[6408,6451],"content":"The component to get the default event for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The component to get the default event for.","pos":[0,43]}]},{"pos":[6533,6650],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.EventDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">component</ph><ept id=\"p2\">&lt;/code&gt;</ept>'s default event.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.EventDescriptor\"></xref> that represents <code>component</code>'s default event."},{"pos":[7262,7316],"content":"Gets the default property for the specified component.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the default property for the specified component.","pos":[0,54]}]},{"pos":[7664,7710],"content":"The component to get the default property for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The component to get the default property for.","pos":[0,46]}]},{"pos":[7795,7917],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">component</ph><ept id=\"p2\">&lt;/code&gt;</ept>'s default property.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> that represents <code>component</code>'s default property."},{"pos":[8526,8570],"content":"Gets the editor for the specified component.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the editor for the specified component.","pos":[0,44]}]},{"pos":[8896,8932],"content":"The component to get the editor for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The component to get the editor for.","pos":[0,36]}]},{"pos":[9001,9045],"content":"The base type of the editor for <ph id=\"ph1\">`component`</ph>.","needQuote":true,"needEscape":true,"source":"The base type of the editor for `component`."},{"pos":[9103,9141],"content":"The editor for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">component</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The editor for <code>component</code>."},{"pos":[9702,9746],"content":"Gets the events for the specified component.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the events for the specified component.","pos":[0,44]}]},{"pos":[10092,10124],"content":"The component to get events for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The component to get events for.","pos":[0,32]}]},{"pos":[10216,10277],"content":"A collection of event descriptors for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">component</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A collection of event descriptors for <code>component</code>."},{"pos":[10912,10986],"content":"Gets the events with the specified attributes for the specified component.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the events with the specified attributes for the specified component.","pos":[0,74]}]},{"pos":[11356,11388],"content":"The component to get events for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The component to get events for.","pos":[0,32]}]},{"pos":[11460,11497],"content":"The attributes used to filter events.","needQuote":true,"needEscape":true,"nodes":[{"content":"The attributes used to filter events.","pos":[0,37]}]},{"pos":[11589,11650],"content":"A collection of event descriptors for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">component</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A collection of event descriptors for <code>component</code>."},{"pos":[12201,12242],"content":"Gets the name of the specified component.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the specified component.","pos":[0,41]}]},{"pos":[12545,12578],"content":"The component to get the name of.","needQuote":true,"needEscape":true,"nodes":[{"content":"The component to get the name of.","pos":[0,33]}]},{"pos":[12636,12671],"content":"The name of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">component</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The name of <code>component</code>."},{"pos":[13324,13402],"content":"Gets the properties with the specified attributes for the specified component.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the properties with the specified attributes for the specified component.","pos":[0,78]}]},{"pos":[13779,13811],"content":"The component to get events for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The component to get events for.","pos":[0,32]}]},{"pos":[13883,13924],"content":"The attributes used to filter properties.","needQuote":true,"needEscape":true,"nodes":[{"content":"The attributes used to filter properties.","pos":[0,41]}]},{"pos":[14019,14083],"content":"A collection of property descriptors for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">component</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A collection of property descriptors for <code>component</code>."},{"pos":[14783,14857],"content":"Gets the value of the property that has the specified dispatch identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the property that has the specified dispatch identifier.","pos":[0,74]}]},{"pos":[15199,15240],"content":"The object to which the property belongs.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to which the property belongs.","pos":[0,41]}]},{"pos":[15302,15326],"content":"The dispatch identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The dispatch identifier.","pos":[0,24]}]},{"pos":[15391,15488],"content":"A <xref:System.Boolean>, passed by reference, that represents whether the property was retrieved.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Boolean&gt;, passed by reference, that represents whether the property was retrieved.","pos":[0,97],"source":"A <xref:System.Boolean>, passed by reference, that represents whether the property was retrieved."}]},{"pos":[15546,15615],"content":"The value of the property that has the specified dispatch identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the property that has the specified dispatch identifier.","pos":[0,69]}]},{"pos":[16323,16382],"content":"Gets the value of the property that has the specified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the property that has the specified name.","pos":[0,59]}]},{"pos":[16733,16774],"content":"The object to which the property belongs.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to which the property belongs.","pos":[0,41]}]},{"pos":[16843,16868],"content":"The name of the property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the property.","pos":[0,25]}]},{"pos":[16933,17030],"content":"A <xref:System.Boolean>, passed by reference, that represents whether the property was retrieved.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Boolean&gt;, passed by reference, that represents whether the property was retrieved.","pos":[0,97],"source":"A <xref:System.Boolean>, passed by reference, that represents whether the property was retrieved."}]},{"pos":[17088,17142],"content":"The value of the property that has the specified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the property that has the specified name.","pos":[0,54]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.IComNativeDescriptorHandler\n  id: IComNativeDescriptorHandler\n  children:\n  - System.ComponentModel.IComNativeDescriptorHandler.GetAttributes(System.Object)\n  - System.ComponentModel.IComNativeDescriptorHandler.GetClassName(System.Object)\n  - System.ComponentModel.IComNativeDescriptorHandler.GetConverter(System.Object)\n  - System.ComponentModel.IComNativeDescriptorHandler.GetDefaultEvent(System.Object)\n  - System.ComponentModel.IComNativeDescriptorHandler.GetDefaultProperty(System.Object)\n  - System.ComponentModel.IComNativeDescriptorHandler.GetEditor(System.Object,System.Type)\n  - System.ComponentModel.IComNativeDescriptorHandler.GetEvents(System.Object)\n  - System.ComponentModel.IComNativeDescriptorHandler.GetEvents(System.Object,System.Attribute[])\n  - System.ComponentModel.IComNativeDescriptorHandler.GetName(System.Object)\n  - System.ComponentModel.IComNativeDescriptorHandler.GetProperties(System.Object,System.Attribute[])\n  - System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue(System.Object,System.Int32,System.Boolean@)\n  - System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue(System.Object,System.String,System.Boolean@)\n  langs:\n  - csharp\n  name: IComNativeDescriptorHandler\n  nameWithType: IComNativeDescriptorHandler\n  fullName: System.ComponentModel.IComNativeDescriptorHandler\n  type: Interface\n  summary: Provides a top-level mapping layer between a COM object and a <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>.\n  remarks: >-\n    > [!NOTE]\n\n    >  This API is now obsolete. Add a <xref:System.ComponentModel.TypeDescriptionProvider> to handle a <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> instead.\n  syntax:\n    content: >-\n      [System.Obsolete(\"This interface has been deprecated. Add a TypeDescriptionProvider to handle type TypeDescriptor.ComObjectType instead.  http://go.microsoft.com/fwlink/?linkid=14202\")]\n\n      public interface IComNativeDescriptorHandler\n  implements: []\n  platform:\n  - net462\n- uid: System.ComponentModel.IComNativeDescriptorHandler.GetAttributes(System.Object)\n  id: GetAttributes(System.Object)\n  parent: System.ComponentModel.IComNativeDescriptorHandler\n  langs:\n  - csharp\n  name: GetAttributes(Object)\n  nameWithType: IComNativeDescriptorHandler.GetAttributes(Object)\n  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetAttributes(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets the attributes for the specified component.\n  remarks: >-\n    > [!NOTE]\n\n    >  This API is now obsolete. The non-obsolete alternative is <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.\n  syntax:\n    content: public System.ComponentModel.AttributeCollection GetAttributes (object component);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The component to get attributes for.\n    return:\n      type: System.ComponentModel.AttributeCollection\n      description: A collection of attributes for <code>component</code>.\n  overload: System.ComponentModel.IComNativeDescriptorHandler.GetAttributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.IComNativeDescriptorHandler.GetClassName(System.Object)\n  id: GetClassName(System.Object)\n  parent: System.ComponentModel.IComNativeDescriptorHandler\n  langs:\n  - csharp\n  name: GetClassName(Object)\n  nameWithType: IComNativeDescriptorHandler.GetClassName(Object)\n  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetClassName(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets the class name for the specified component.\n  remarks: >-\n    > [!NOTE]\n\n    >  This API is now obsolete. The non-obsolete alternative is <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.\n  syntax:\n    content: public string GetClassName (object component);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The component to get the class name for.\n    return:\n      type: System.String\n      description: The name of the class that corresponds with <code>component</code>.\n  overload: System.ComponentModel.IComNativeDescriptorHandler.GetClassName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.IComNativeDescriptorHandler.GetConverter(System.Object)\n  id: GetConverter(System.Object)\n  parent: System.ComponentModel.IComNativeDescriptorHandler\n  langs:\n  - csharp\n  name: GetConverter(Object)\n  nameWithType: IComNativeDescriptorHandler.GetConverter(Object)\n  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetConverter(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets the type converter for the specified component.\n  remarks: >-\n    > [!NOTE]\n\n    >  This API is now obsolete. The non-obsolete alternative is <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.\n  syntax:\n    content: public System.ComponentModel.TypeConverter GetConverter (object component);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The component to get the <xref href=\"System.ComponentModel.TypeConverter\"></xref> for.\n    return:\n      type: System.ComponentModel.TypeConverter\n      description: The <xref href=\"System.ComponentModel.TypeConverter\"></xref> for <code>component</code>.\n  overload: System.ComponentModel.IComNativeDescriptorHandler.GetConverter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.IComNativeDescriptorHandler.GetDefaultEvent(System.Object)\n  id: GetDefaultEvent(System.Object)\n  parent: System.ComponentModel.IComNativeDescriptorHandler\n  langs:\n  - csharp\n  name: GetDefaultEvent(Object)\n  nameWithType: IComNativeDescriptorHandler.GetDefaultEvent(Object)\n  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetDefaultEvent(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets the default event for the specified component.\n  remarks: >-\n    > [!NOTE]\n\n    >  This API is now obsolete. The non-obsolete alternative is <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.\n  syntax:\n    content: public System.ComponentModel.EventDescriptor GetDefaultEvent (object component);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The component to get the default event for.\n    return:\n      type: System.ComponentModel.EventDescriptor\n      description: An <xref href=\"System.ComponentModel.EventDescriptor\"></xref> that represents <code>component</code>'s default event.\n  overload: System.ComponentModel.IComNativeDescriptorHandler.GetDefaultEvent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.IComNativeDescriptorHandler.GetDefaultProperty(System.Object)\n  id: GetDefaultProperty(System.Object)\n  parent: System.ComponentModel.IComNativeDescriptorHandler\n  langs:\n  - csharp\n  name: GetDefaultProperty(Object)\n  nameWithType: IComNativeDescriptorHandler.GetDefaultProperty(Object)\n  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetDefaultProperty(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets the default property for the specified component.\n  remarks: >-\n    > [!NOTE]\n\n    >  This API is now obsolete. The non-obsolete alternative is <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.\n  syntax:\n    content: public System.ComponentModel.PropertyDescriptor GetDefaultProperty (object component);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The component to get the default property for.\n    return:\n      type: System.ComponentModel.PropertyDescriptor\n      description: A <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> that represents <code>component</code>'s default property.\n  overload: System.ComponentModel.IComNativeDescriptorHandler.GetDefaultProperty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.IComNativeDescriptorHandler.GetEditor(System.Object,System.Type)\n  id: GetEditor(System.Object,System.Type)\n  parent: System.ComponentModel.IComNativeDescriptorHandler\n  langs:\n  - csharp\n  name: GetEditor(Object,Type)\n  nameWithType: IComNativeDescriptorHandler.GetEditor(Object,Type)\n  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetEditor(Object,Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets the editor for the specified component.\n  remarks: >-\n    > [!NOTE]\n\n    >  This API is now obsolete. The non-obsolete alternative is <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.\n  syntax:\n    content: public object GetEditor (object component, Type baseEditorType);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The component to get the editor for.\n    - id: baseEditorType\n      type: System.Type\n      description: The base type of the editor for `component`.\n    return:\n      type: System.Object\n      description: The editor for <code>component</code>.\n  overload: System.ComponentModel.IComNativeDescriptorHandler.GetEditor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.IComNativeDescriptorHandler.GetEvents(System.Object)\n  id: GetEvents(System.Object)\n  parent: System.ComponentModel.IComNativeDescriptorHandler\n  langs:\n  - csharp\n  name: GetEvents(Object)\n  nameWithType: IComNativeDescriptorHandler.GetEvents(Object)\n  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetEvents(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets the events for the specified component.\n  remarks: >-\n    > [!NOTE]\n\n    >  This API is now obsolete. The non-obsolete alternative is <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.\n  syntax:\n    content: public System.ComponentModel.EventDescriptorCollection GetEvents (object component);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The component to get events for.\n    return:\n      type: System.ComponentModel.EventDescriptorCollection\n      description: A collection of event descriptors for <code>component</code>.\n  overload: System.ComponentModel.IComNativeDescriptorHandler.GetEvents*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.IComNativeDescriptorHandler.GetEvents(System.Object,System.Attribute[])\n  id: GetEvents(System.Object,System.Attribute[])\n  parent: System.ComponentModel.IComNativeDescriptorHandler\n  langs:\n  - csharp\n  name: GetEvents(Object,Attribute[])\n  nameWithType: IComNativeDescriptorHandler.GetEvents(Object,Attribute[])\n  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetEvents(Object,Attribute[])\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets the events with the specified attributes for the specified component.\n  remarks: >-\n    > [!NOTE]\n\n    >  This API is now obsolete. The non-obsolete alternative is <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.\n  syntax:\n    content: public System.ComponentModel.EventDescriptorCollection GetEvents (object component, Attribute[] attributes);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The component to get events for.\n    - id: attributes\n      type: System.Attribute[]\n      description: The attributes used to filter events.\n    return:\n      type: System.ComponentModel.EventDescriptorCollection\n      description: A collection of event descriptors for <code>component</code>.\n  overload: System.ComponentModel.IComNativeDescriptorHandler.GetEvents*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.IComNativeDescriptorHandler.GetName(System.Object)\n  id: GetName(System.Object)\n  parent: System.ComponentModel.IComNativeDescriptorHandler\n  langs:\n  - csharp\n  name: GetName(Object)\n  nameWithType: IComNativeDescriptorHandler.GetName(Object)\n  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetName(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets the name of the specified component.\n  remarks: >-\n    > [!NOTE]\n\n    >  This API is now obsolete. The non-obsolete alternative is <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.\n  syntax:\n    content: public string GetName (object component);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The component to get the name of.\n    return:\n      type: System.String\n      description: The name of <code>component</code>.\n  overload: System.ComponentModel.IComNativeDescriptorHandler.GetName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.IComNativeDescriptorHandler.GetProperties(System.Object,System.Attribute[])\n  id: GetProperties(System.Object,System.Attribute[])\n  parent: System.ComponentModel.IComNativeDescriptorHandler\n  langs:\n  - csharp\n  name: GetProperties(Object,Attribute[])\n  nameWithType: IComNativeDescriptorHandler.GetProperties(Object,Attribute[])\n  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetProperties(Object,Attribute[])\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets the properties with the specified attributes for the specified component.\n  remarks: >-\n    > [!NOTE]\n\n    >  This API is now obsolete. The non-obsolete alternative is <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.\n  syntax:\n    content: public System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, Attribute[] attributes);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The component to get events for.\n    - id: attributes\n      type: System.Attribute[]\n      description: The attributes used to filter properties.\n    return:\n      type: System.ComponentModel.PropertyDescriptorCollection\n      description: A collection of property descriptors for <code>component</code>.\n  overload: System.ComponentModel.IComNativeDescriptorHandler.GetProperties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue(System.Object,System.Int32,System.Boolean@)\n  id: GetPropertyValue(System.Object,System.Int32,System.Boolean@)\n  parent: System.ComponentModel.IComNativeDescriptorHandler\n  langs:\n  - csharp\n  name: GetPropertyValue(Object,Int32,Boolean)\n  nameWithType: IComNativeDescriptorHandler.GetPropertyValue(Object,Int32,Boolean)\n  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue(Object,Int32,Boolean)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets the value of the property that has the specified dispatch identifier.\n  remarks: >-\n    > [!NOTE]\n\n    >  This API is now obsolete. The non-obsolete alternative is <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.\n  syntax:\n    content: public object GetPropertyValue (object component, int dispid, ref bool success);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The object to which the property belongs.\n    - id: dispid\n      type: System.Int32\n      description: The dispatch identifier.\n    - id: success\n      type: System.Boolean\n      description: A <xref:System.Boolean>, passed by reference, that represents whether the property was retrieved.\n    return:\n      type: System.Object\n      description: The value of the property that has the specified dispatch identifier.\n  overload: System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue(System.Object,System.String,System.Boolean@)\n  id: GetPropertyValue(System.Object,System.String,System.Boolean@)\n  parent: System.ComponentModel.IComNativeDescriptorHandler\n  langs:\n  - csharp\n  name: GetPropertyValue(Object,String,Boolean)\n  nameWithType: IComNativeDescriptorHandler.GetPropertyValue(Object,String,Boolean)\n  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue(Object,String,Boolean)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets the value of the property that has the specified name.\n  remarks: >-\n    > [!NOTE]\n\n    >  This API is now obsolete. The non-obsolete alternative is <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.\n  syntax:\n    content: public object GetPropertyValue (object component, string propertyName, ref bool success);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The object to which the property belongs.\n    - id: propertyName\n      type: System.String\n      description: The name of the property.\n    - id: success\n      type: System.Boolean\n      description: A <xref:System.Boolean>, passed by reference, that represents whether the property was retrieved.\n    return:\n      type: System.Object\n      description: The value of the property that has the specified name.\n  overload: System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.IComNativeDescriptorHandler.GetAttributes(System.Object)\n  parent: System.ComponentModel.IComNativeDescriptorHandler\n  isExternal: false\n  name: GetAttributes(Object)\n  nameWithType: IComNativeDescriptorHandler.GetAttributes(Object)\n  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetAttributes(Object)\n- uid: System.ComponentModel.AttributeCollection\n  parent: System.ComponentModel\n  isExternal: false\n  name: AttributeCollection\n  nameWithType: AttributeCollection\n  fullName: System.ComponentModel.AttributeCollection\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.IComNativeDescriptorHandler.GetClassName(System.Object)\n  parent: System.ComponentModel.IComNativeDescriptorHandler\n  isExternal: false\n  name: GetClassName(Object)\n  nameWithType: IComNativeDescriptorHandler.GetClassName(Object)\n  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetClassName(Object)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.IComNativeDescriptorHandler.GetConverter(System.Object)\n  parent: System.ComponentModel.IComNativeDescriptorHandler\n  isExternal: false\n  name: GetConverter(Object)\n  nameWithType: IComNativeDescriptorHandler.GetConverter(Object)\n  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetConverter(Object)\n- uid: System.ComponentModel.TypeConverter\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeConverter\n  nameWithType: TypeConverter\n  fullName: System.ComponentModel.TypeConverter\n- uid: System.ComponentModel.IComNativeDescriptorHandler.GetDefaultEvent(System.Object)\n  parent: System.ComponentModel.IComNativeDescriptorHandler\n  isExternal: false\n  name: GetDefaultEvent(Object)\n  nameWithType: IComNativeDescriptorHandler.GetDefaultEvent(Object)\n  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetDefaultEvent(Object)\n- uid: System.ComponentModel.EventDescriptor\n  parent: System.ComponentModel\n  isExternal: false\n  name: EventDescriptor\n  nameWithType: EventDescriptor\n  fullName: System.ComponentModel.EventDescriptor\n- uid: System.ComponentModel.IComNativeDescriptorHandler.GetDefaultProperty(System.Object)\n  parent: System.ComponentModel.IComNativeDescriptorHandler\n  isExternal: false\n  name: GetDefaultProperty(Object)\n  nameWithType: IComNativeDescriptorHandler.GetDefaultProperty(Object)\n  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetDefaultProperty(Object)\n- uid: System.ComponentModel.PropertyDescriptor\n  parent: System.ComponentModel\n  isExternal: false\n  name: PropertyDescriptor\n  nameWithType: PropertyDescriptor\n  fullName: System.ComponentModel.PropertyDescriptor\n- uid: System.ComponentModel.IComNativeDescriptorHandler.GetEditor(System.Object,System.Type)\n  parent: System.ComponentModel.IComNativeDescriptorHandler\n  isExternal: false\n  name: GetEditor(Object,Type)\n  nameWithType: IComNativeDescriptorHandler.GetEditor(Object,Type)\n  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetEditor(Object,Type)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.IComNativeDescriptorHandler.GetEvents(System.Object)\n  parent: System.ComponentModel.IComNativeDescriptorHandler\n  isExternal: false\n  name: GetEvents(Object)\n  nameWithType: IComNativeDescriptorHandler.GetEvents(Object)\n  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetEvents(Object)\n- uid: System.ComponentModel.EventDescriptorCollection\n  parent: System.ComponentModel\n  isExternal: false\n  name: EventDescriptorCollection\n  nameWithType: EventDescriptorCollection\n  fullName: System.ComponentModel.EventDescriptorCollection\n- uid: System.ComponentModel.IComNativeDescriptorHandler.GetEvents(System.Object,System.Attribute[])\n  parent: System.ComponentModel.IComNativeDescriptorHandler\n  isExternal: false\n  name: GetEvents(Object,Attribute[])\n  nameWithType: IComNativeDescriptorHandler.GetEvents(Object,Attribute[])\n  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetEvents(Object,Attribute[])\n- uid: System.Attribute[]\n  parent: System\n  isExternal: true\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute[]\n  spec.csharp:\n  - uid: System.Attribute\n    name: Attribute\n    nameWithType: Attribute\n    fullName: Attribute[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ComponentModel.IComNativeDescriptorHandler.GetName(System.Object)\n  parent: System.ComponentModel.IComNativeDescriptorHandler\n  isExternal: false\n  name: GetName(Object)\n  nameWithType: IComNativeDescriptorHandler.GetName(Object)\n  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetName(Object)\n- uid: System.ComponentModel.IComNativeDescriptorHandler.GetProperties(System.Object,System.Attribute[])\n  parent: System.ComponentModel.IComNativeDescriptorHandler\n  isExternal: false\n  name: GetProperties(Object,Attribute[])\n  nameWithType: IComNativeDescriptorHandler.GetProperties(Object,Attribute[])\n  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetProperties(Object,Attribute[])\n- uid: System.ComponentModel.PropertyDescriptorCollection\n  parent: System.ComponentModel\n  isExternal: false\n  name: PropertyDescriptorCollection\n  nameWithType: PropertyDescriptorCollection\n  fullName: System.ComponentModel.PropertyDescriptorCollection\n- uid: System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue(System.Object,System.Int32,System.Boolean@)\n  parent: System.ComponentModel.IComNativeDescriptorHandler\n  isExternal: false\n  name: GetPropertyValue(Object,Int32,Boolean)\n  nameWithType: IComNativeDescriptorHandler.GetPropertyValue(Object,Int32,Boolean)\n  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue(Object,Int32,Boolean)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue(System.Object,System.String,System.Boolean@)\n  parent: System.ComponentModel.IComNativeDescriptorHandler\n  isExternal: false\n  name: GetPropertyValue(Object,String,Boolean)\n  nameWithType: IComNativeDescriptorHandler.GetPropertyValue(Object,String,Boolean)\n  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue(Object,String,Boolean)\n- uid: System.ComponentModel.IComNativeDescriptorHandler.GetAttributes*\n  parent: System.ComponentModel.IComNativeDescriptorHandler\n  isExternal: false\n  name: GetAttributes\n  nameWithType: IComNativeDescriptorHandler.GetAttributes\n- uid: System.ComponentModel.IComNativeDescriptorHandler.GetClassName*\n  parent: System.ComponentModel.IComNativeDescriptorHandler\n  isExternal: false\n  name: GetClassName\n  nameWithType: IComNativeDescriptorHandler.GetClassName\n- uid: System.ComponentModel.IComNativeDescriptorHandler.GetConverter*\n  parent: System.ComponentModel.IComNativeDescriptorHandler\n  isExternal: false\n  name: GetConverter\n  nameWithType: IComNativeDescriptorHandler.GetConverter\n- uid: System.ComponentModel.IComNativeDescriptorHandler.GetDefaultEvent*\n  parent: System.ComponentModel.IComNativeDescriptorHandler\n  isExternal: false\n  name: GetDefaultEvent\n  nameWithType: IComNativeDescriptorHandler.GetDefaultEvent\n- uid: System.ComponentModel.IComNativeDescriptorHandler.GetDefaultProperty*\n  parent: System.ComponentModel.IComNativeDescriptorHandler\n  isExternal: false\n  name: GetDefaultProperty\n  nameWithType: IComNativeDescriptorHandler.GetDefaultProperty\n- uid: System.ComponentModel.IComNativeDescriptorHandler.GetEditor*\n  parent: System.ComponentModel.IComNativeDescriptorHandler\n  isExternal: false\n  name: GetEditor\n  nameWithType: IComNativeDescriptorHandler.GetEditor\n- uid: System.ComponentModel.IComNativeDescriptorHandler.GetEvents*\n  parent: System.ComponentModel.IComNativeDescriptorHandler\n  isExternal: false\n  name: GetEvents\n  nameWithType: IComNativeDescriptorHandler.GetEvents\n- uid: System.ComponentModel.IComNativeDescriptorHandler.GetName*\n  parent: System.ComponentModel.IComNativeDescriptorHandler\n  isExternal: false\n  name: GetName\n  nameWithType: IComNativeDescriptorHandler.GetName\n- uid: System.ComponentModel.IComNativeDescriptorHandler.GetProperties*\n  parent: System.ComponentModel.IComNativeDescriptorHandler\n  isExternal: false\n  name: GetProperties\n  nameWithType: IComNativeDescriptorHandler.GetProperties\n- uid: System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue*\n  parent: System.ComponentModel.IComNativeDescriptorHandler\n  isExternal: false\n  name: GetPropertyValue\n  nameWithType: IComNativeDescriptorHandler.GetPropertyValue\n"}