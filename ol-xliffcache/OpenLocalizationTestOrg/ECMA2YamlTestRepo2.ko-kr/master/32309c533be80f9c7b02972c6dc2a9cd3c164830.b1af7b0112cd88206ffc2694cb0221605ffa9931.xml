{"nodes":[{"pos":[511,735],"content":"Indicates that a property or field is written by the method or property that this attribute is applied to. This information is used by the rules engine to determine dependencies between rules. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates that a property or field is written by the method or property that this attribute is applied to. This information is used by the rules engine to determine dependencies between rules. This class cannot be inherited.","pos":[0,224],"nodes":[{"content":"Indicates that a property or field is written by the method or property that this attribute is applied to.","pos":[0,106]},{"content":"This information is used by the rules engine to determine dependencies between rules.","pos":[107,192]},{"content":"This class cannot be inherited.","pos":[193,224]}]}]},{"pos":[747,1205],"content":"This attribute is used to support a forward chaining model that causes the re-evaluation of rules based on changes to fields and properties. The <xref:System.Workflow.Activities.Rules.RuleReadAttribute> and RuleWriteAttribute indicate the properties read or written by the property or method the attribute is applied to. `RuleInvokeAttributes` are used to indicate that this property or method uses other methods, which must also be checked for dependencies.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This attribute is used to support a forward chaining model that causes the re-evaluation of rules based on changes to fields and properties.","pos":[0,140]},{"content":"The &lt;xref:System.Workflow.Activities.Rules.RuleReadAttribute&gt; and RuleWriteAttribute indicate the properties read or written by the property or method the attribute is applied to.","pos":[141,320],"source":" The <xref:System.Workflow.Activities.Rules.RuleReadAttribute> and RuleWriteAttribute indicate the properties read or written by the property or method the attribute is applied to."},{"content":"<ph id=\"ph1\">`RuleInvokeAttributes`</ph> are used to indicate that this property or method uses other methods, which must also be checked for dependencies.","pos":[321,458],"source":"`RuleInvokeAttributes` are used to indicate that this property or method uses other methods, which must also be checked for dependencies."}]},{"pos":[2293,2406],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleWriteAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.Rules.RuleWriteAttribute\"></xref> class."},{"pos":[2418,2625],"content":"To specify that the method or property writes to a field or property on one of the parameters, you must use &lt;xref:System.Workflow.Activities.Rules.RuleWriteAttribute&gt; (path, <ph id=\"ph1\">`RuleAttributeTarget.Parameter`</ph>).","needQuote":true,"needEscape":true,"extradata":"MT","source":"To specify that the method or property writes to a field or property on one of the parameters, you must use <xref:System.Workflow.Activities.Rules.RuleWriteAttribute> (path, `RuleAttributeTarget.Parameter`)."},{"pos":[2766,2874],"content":"The field or property that is on the same class as the method or property that this attribute is applied to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The field or property that is on the same class as the method or property that this attribute is applied to.","pos":[0,108]}]},{"pos":[3653,3766],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleWriteAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.Rules.RuleWriteAttribute\"></xref> class."},{"pos":[3778,3985],"content":"To specify that the method or property writes to a field or property on one of the parameters, you must use &lt;xref:System.Workflow.Activities.Rules.RuleWriteAttribute&gt; (path, <ph id=\"ph1\">`RuleAttributeTarget.Parameter`</ph>).","needQuote":true,"needEscape":true,"extradata":"MT","source":"To specify that the method or property writes to a field or property on one of the parameters, you must use <xref:System.Workflow.Activities.Rules.RuleWriteAttribute> (path, `RuleAttributeTarget.Parameter`)."},{"pos":[4187,4295],"content":"The field or property that is on the same class as the method or property that this attribute is applied to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The field or property that is on the same class as the method or property that this attribute is applied to.","pos":[0,108]}]},{"pos":[4397,4536],"content":"<bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleAttributeTarget\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration value that determines how to use path to find target.","needQuote":true,"needEscape":true,"source":"<xref href=\"System.Workflow.Activities.Rules.RuleAttributeTarget\"></xref> enumeration value that determines how to use path to find target."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.Activities.Rules.RuleWriteAttribute\n  id: RuleWriteAttribute\n  children:\n  - System.Workflow.Activities.Rules.RuleWriteAttribute.#ctor(System.String)\n  - System.Workflow.Activities.Rules.RuleWriteAttribute.#ctor(System.String,System.Workflow.Activities.Rules.RuleAttributeTarget)\n  langs:\n  - csharp\n  name: RuleWriteAttribute\n  nameWithType: RuleWriteAttribute\n  fullName: System.Workflow.Activities.Rules.RuleWriteAttribute\n  type: Class\n  summary: Indicates that a property or field is written by the method or property that this attribute is applied to. This information is used by the rules engine to determine dependencies between rules. This class cannot be inherited.\n  remarks: This attribute is used to support a forward chaining model that causes the re-evaluation of rules based on changes to fields and properties. The <xref:System.Workflow.Activities.Rules.RuleReadAttribute> and RuleWriteAttribute indicate the properties read or written by the property or method the attribute is applied to. `RuleInvokeAttributes` are used to indicate that this property or method uses other methods, which must also be checked for dependencies.\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Method | System.AttributeTargets.Property, AllowMultiple=true)]\n\n      public sealed class RuleWriteAttribute : System.Workflow.Activities.Rules.RuleReadWriteAttribute\n  inheritance:\n  - System.Attribute\n  - System.Workflow.Activities.Rules.RuleAttribute\n  - System.Workflow.Activities.Rules.RuleReadWriteAttribute\n  implements: []\n  inheritedMembers:\n  - System.Workflow.Activities.Rules.RuleReadWriteAttribute.Path\n  - System.Workflow.Activities.Rules.RuleReadWriteAttribute.Target\n  platform:\n  - net462\n- uid: System.Workflow.Activities.Rules.RuleWriteAttribute.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Workflow.Activities.Rules.RuleWriteAttribute\n  langs:\n  - csharp\n  name: RuleWriteAttribute(String)\n  nameWithType: RuleWriteAttribute.RuleWriteAttribute(String)\n  fullName: System.Workflow.Activities.Rules.RuleWriteAttribute.RuleWriteAttribute(String)\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.Rules.RuleWriteAttribute\"></xref> class.\n  remarks: To specify that the method or property writes to a field or property on one of the parameters, you must use <xref:System.Workflow.Activities.Rules.RuleWriteAttribute> (path, `RuleAttributeTarget.Parameter`).\n  syntax:\n    content: public RuleWriteAttribute (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: The field or property that is on the same class as the method or property that this attribute is applied to.\n  overload: System.Workflow.Activities.Rules.RuleWriteAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.Rules.RuleWriteAttribute.#ctor(System.String,System.Workflow.Activities.Rules.RuleAttributeTarget)\n  id: '#ctor(System.String,System.Workflow.Activities.Rules.RuleAttributeTarget)'\n  parent: System.Workflow.Activities.Rules.RuleWriteAttribute\n  langs:\n  - csharp\n  name: RuleWriteAttribute(String,RuleAttributeTarget)\n  nameWithType: RuleWriteAttribute.RuleWriteAttribute(String,RuleAttributeTarget)\n  fullName: System.Workflow.Activities.Rules.RuleWriteAttribute.RuleWriteAttribute(String,RuleAttributeTarget)\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.Rules.RuleWriteAttribute\"></xref> class.\n  remarks: To specify that the method or property writes to a field or property on one of the parameters, you must use <xref:System.Workflow.Activities.Rules.RuleWriteAttribute> (path, `RuleAttributeTarget.Parameter`).\n  syntax:\n    content: public RuleWriteAttribute (string path, System.Workflow.Activities.Rules.RuleAttributeTarget target);\n    parameters:\n    - id: path\n      type: System.String\n      description: The field or property that is on the same class as the method or property that this attribute is applied to.\n    - id: target\n      type: System.Workflow.Activities.Rules.RuleAttributeTarget\n      description: <xref href=\"System.Workflow.Activities.Rules.RuleAttributeTarget\"></xref> enumeration value that determines how to use path to find target.\n  overload: System.Workflow.Activities.Rules.RuleWriteAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Workflow.Activities.Rules.RuleReadWriteAttribute\n  isExternal: false\n  name: System.Workflow.Activities.Rules.RuleReadWriteAttribute\n- uid: System.Workflow.Activities.Rules.RuleWriteAttribute.#ctor(System.String)\n  parent: System.Workflow.Activities.Rules.RuleWriteAttribute\n  isExternal: false\n  name: RuleWriteAttribute(String)\n  nameWithType: RuleWriteAttribute.RuleWriteAttribute(String)\n  fullName: System.Workflow.Activities.Rules.RuleWriteAttribute.RuleWriteAttribute(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Workflow.Activities.Rules.RuleWriteAttribute.#ctor(System.String,System.Workflow.Activities.Rules.RuleAttributeTarget)\n  parent: System.Workflow.Activities.Rules.RuleWriteAttribute\n  isExternal: false\n  name: RuleWriteAttribute(String,RuleAttributeTarget)\n  nameWithType: RuleWriteAttribute.RuleWriteAttribute(String,RuleAttributeTarget)\n  fullName: System.Workflow.Activities.Rules.RuleWriteAttribute.RuleWriteAttribute(String,RuleAttributeTarget)\n- uid: System.Workflow.Activities.Rules.RuleAttributeTarget\n  parent: System.Workflow.Activities.Rules\n  isExternal: false\n  name: RuleAttributeTarget\n  nameWithType: RuleAttributeTarget\n  fullName: System.Workflow.Activities.Rules.RuleAttributeTarget\n- uid: System.Workflow.Activities.Rules.RuleWriteAttribute.#ctor*\n  parent: System.Workflow.Activities.Rules.RuleWriteAttribute\n  isExternal: false\n  name: RuleWriteAttribute\n  nameWithType: RuleWriteAttribute.RuleWriteAttribute\n"}