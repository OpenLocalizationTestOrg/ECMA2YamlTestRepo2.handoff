{"nodes":[{"pos":[594,677],"content":"Represents a collection of <bpt id=\"p1\">&lt;xref href=\"System.Windows.TriggerBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"Represents a collection of <xref href=\"System.Windows.TriggerBase\"></xref> objects."},{"pos":[2249,2261],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2335,2347],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2782,2869],"content":"Gets a value that indicates whether this collection is read-only and cannot be changed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether this collection is read-only and cannot be changed.","pos":[0,87]}]},{"pos":[2881,2984],"content":"If this property returns <ph id=\"ph1\">`true`</ph> and you try to modify the state of this object, an exception is thrown.","needQuote":true,"needEscape":true,"extradata":"MT","source":"If this property returns `true` and you try to modify the state of this object, an exception is thrown."},{"pos":[3096,3264],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this collection is read-only; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this collection is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[3890,3902],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4635,4647],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4721,4733],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.TriggerCollection\n  id: TriggerCollection\n  children:\n  - System.Windows.TriggerCollection.ClearItems\n  - System.Windows.TriggerCollection.InsertItem(System.Int32,System.Windows.TriggerBase)\n  - System.Windows.TriggerCollection.IsSealed\n  - System.Windows.TriggerCollection.RemoveItem(System.Int32)\n  - System.Windows.TriggerCollection.SetItem(System.Int32,System.Windows.TriggerBase)\n  langs:\n  - csharp\n  name: TriggerCollection\n  nameWithType: TriggerCollection\n  fullName: System.Windows.TriggerCollection\n  type: Class\n  summary: Represents a collection of <xref href=\"System.Windows.TriggerBase\"></xref> objects.\n  syntax:\n    content: >-\n      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]\n\n      public sealed class TriggerCollection : System.Collections.ObjectModel.Collection<System.Windows.TriggerBase>\n  inheritance:\n  - System.Collections.ObjectModel.Collection`1\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.TriggerCollection.ClearItems\n  id: ClearItems\n  parent: System.Windows.TriggerCollection\n  langs:\n  - csharp\n  name: ClearItems()\n  nameWithType: TriggerCollection.ClearItems()\n  fullName: System.Windows.TriggerCollection.ClearItems()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: protected override void ClearItems ();\n    parameters: []\n  overload: System.Windows.TriggerCollection.ClearItems*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.TriggerCollection.InsertItem(System.Int32,System.Windows.TriggerBase)\n  id: InsertItem(System.Int32,System.Windows.TriggerBase)\n  parent: System.Windows.TriggerCollection\n  langs:\n  - csharp\n  name: InsertItem(Int32,TriggerBase)\n  nameWithType: TriggerCollection.InsertItem(Int32,TriggerBase)\n  fullName: System.Windows.TriggerCollection.InsertItem(Int32,TriggerBase)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: protected override void InsertItem (int index, System.Windows.TriggerBase item);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: To be added.\n    - id: item\n      type: System.Windows.TriggerBase\n      description: To be added.\n  overload: System.Windows.TriggerCollection.InsertItem*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.TriggerCollection.IsSealed\n  id: IsSealed\n  parent: System.Windows.TriggerCollection\n  langs:\n  - csharp\n  name: IsSealed\n  nameWithType: TriggerCollection.IsSealed\n  fullName: System.Windows.TriggerCollection.IsSealed\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets a value that indicates whether this collection is read-only and cannot be changed.\n  remarks: If this property returns `true` and you try to modify the state of this object, an exception is thrown.\n  syntax:\n    content: public bool IsSealed { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this collection is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.TriggerCollection.IsSealed*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.TriggerCollection.RemoveItem(System.Int32)\n  id: RemoveItem(System.Int32)\n  parent: System.Windows.TriggerCollection\n  langs:\n  - csharp\n  name: RemoveItem(Int32)\n  nameWithType: TriggerCollection.RemoveItem(Int32)\n  fullName: System.Windows.TriggerCollection.RemoveItem(Int32)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: protected override void RemoveItem (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: To be added.\n  overload: System.Windows.TriggerCollection.RemoveItem*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.TriggerCollection.SetItem(System.Int32,System.Windows.TriggerBase)\n  id: SetItem(System.Int32,System.Windows.TriggerBase)\n  parent: System.Windows.TriggerCollection\n  langs:\n  - csharp\n  name: SetItem(Int32,TriggerBase)\n  nameWithType: TriggerCollection.SetItem(Int32,TriggerBase)\n  fullName: System.Windows.TriggerCollection.SetItem(Int32,TriggerBase)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: protected override void SetItem (int index, System.Windows.TriggerBase item);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: To be added.\n    - id: item\n      type: System.Windows.TriggerBase\n      description: To be added.\n  overload: System.Windows.TriggerCollection.SetItem*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: System.Collections.ObjectModel.Collection<System.Windows.TriggerBase>\n- uid: System.Windows.TriggerCollection.ClearItems\n  parent: System.Windows.TriggerCollection\n  isExternal: false\n  name: ClearItems()\n  nameWithType: TriggerCollection.ClearItems()\n  fullName: System.Windows.TriggerCollection.ClearItems()\n- uid: System.Windows.TriggerCollection.InsertItem(System.Int32,System.Windows.TriggerBase)\n  parent: System.Windows.TriggerCollection\n  isExternal: false\n  name: InsertItem(Int32,TriggerBase)\n  nameWithType: TriggerCollection.InsertItem(Int32,TriggerBase)\n  fullName: System.Windows.TriggerCollection.InsertItem(Int32,TriggerBase)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.TriggerBase\n  parent: System.Windows\n  isExternal: false\n  name: TriggerBase\n  nameWithType: TriggerBase\n  fullName: System.Windows.TriggerBase\n- uid: System.Windows.TriggerCollection.IsSealed\n  parent: System.Windows.TriggerCollection\n  isExternal: false\n  name: IsSealed\n  nameWithType: TriggerCollection.IsSealed\n  fullName: System.Windows.TriggerCollection.IsSealed\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.TriggerCollection.RemoveItem(System.Int32)\n  parent: System.Windows.TriggerCollection\n  isExternal: false\n  name: RemoveItem(Int32)\n  nameWithType: TriggerCollection.RemoveItem(Int32)\n  fullName: System.Windows.TriggerCollection.RemoveItem(Int32)\n- uid: System.Windows.TriggerCollection.SetItem(System.Int32,System.Windows.TriggerBase)\n  parent: System.Windows.TriggerCollection\n  isExternal: false\n  name: SetItem(Int32,TriggerBase)\n  nameWithType: TriggerCollection.SetItem(Int32,TriggerBase)\n  fullName: System.Windows.TriggerCollection.SetItem(Int32,TriggerBase)\n- uid: System.Windows.TriggerCollection.ClearItems*\n  parent: System.Windows.TriggerCollection\n  isExternal: false\n  name: ClearItems\n  nameWithType: TriggerCollection.ClearItems\n- uid: System.Windows.TriggerCollection.InsertItem*\n  parent: System.Windows.TriggerCollection\n  isExternal: false\n  name: InsertItem\n  nameWithType: TriggerCollection.InsertItem\n- uid: System.Windows.TriggerCollection.IsSealed*\n  parent: System.Windows.TriggerCollection\n  isExternal: false\n  name: IsSealed\n  nameWithType: TriggerCollection.IsSealed\n- uid: System.Windows.TriggerCollection.RemoveItem*\n  parent: System.Windows.TriggerCollection\n  isExternal: false\n  name: RemoveItem\n  nameWithType: TriggerCollection.RemoveItem\n- uid: System.Windows.TriggerCollection.SetItem*\n  parent: System.Windows.TriggerCollection\n  isExternal: false\n  name: SetItem\n  nameWithType: TriggerCollection.SetItem\n"}