{"nodes":[{"pos":[2260,2329],"content":"Represents a field that is displayed as text in a data-bound control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a field that is displayed as text in a data-bound control.","pos":[0,69]}]},{"pos":[2342,6745],"content":"The BoundField class is used by data-bound controls (such as <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>) to display the value of a field as text. The BoundField object is displayed differently depending on the data-bound control in which it is used. For example, the <xref:System.Web.UI.WebControls.GridView> control displays a BoundField object as a column, while the <xref:System.Web.UI.WebControls.DetailsView> control displays it as a row.       To specify the field to display in a BoundField object, set the <xref:System.Web.UI.WebControls.BoundField.DataField%2A> property to the field's name. The field's value can be HTML-encoded before it is displayed by setting the <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> property to `true`. You can apply a custom formatting string to the field's value by setting the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property. When the <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> property is `true`, the encoded string value of the field is used in the custom format string. By default, the formatting string is applied to field values only when the data-bound control is in read-only mode. To apply the formatting string to values displayed while the data-bound control is in edit mode, set the <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> property to `true`. If a field's value is null, you can display a custom caption by setting the <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> property. The BoundField object can also automatically convert empty string (\"\") field values to null values by setting the <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> property to `true`.       You can hide a BoundField object in a data-bound control by setting the <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> property to `false`. To prevent the value of a field from being modified in edit mode, set the <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> property to `true`. In data-bound controls that support inserting records (such as the <xref:System.Web.UI.WebControls.DetailsView> control), you can hide a BoundField object by setting the <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> property to `false`. This is commonly done when you want to hide an automatically generated key field in insert mode.       You can customize the header and footer sections of a BoundField object. To display a caption in the header or footer sections, set the <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> or <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> properties, respectively. Instead of displaying text in the header section, you can display an image by setting the <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> property. The header section can be hidden in the BoundField object by setting the <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> property to `false`.      > [!NOTE] >  Some data-bound controls (such as the <xref:System.Web.UI.WebControls.GridView> control) can show or hide only the entire header section of the control. These data-bound controls do not support the <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> property for an individual bound field. To show or hide the entire header section of a data-bound control (if available), use the control's `ShowHeader` property.       You also can customize the appearance of the BoundField object (font color, background color, and so on) by setting the style properties for the different parts of the field. The following table lists the different style properties.      |Style property|Description|   |--------------------|-----------------|   |<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|The style settings for the child Web server controls of the BoundField object.|   |<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|The style settings for the footer section of the BoundField object.|   |<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|The style settings for the header section of the BoundField object.|   |<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|The style settings for the data items in the BoundField object.|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The BoundField class is used by data-bound controls (such as &lt;xref:System.Web.UI.WebControls.GridView&gt; and &lt;xref:System.Web.UI.WebControls.DetailsView&gt;) to display the value of a field as text.","pos":[0,193],"source":"The BoundField class is used by data-bound controls (such as <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>) to display the value of a field as text."},{"content":"The BoundField object is displayed differently depending on the data-bound control in which it is used.","pos":[194,297]},{"content":"For example, the &lt;xref:System.Web.UI.WebControls.GridView&gt; control displays a BoundField object as a column, while the &lt;xref:System.Web.UI.WebControls.DetailsView&gt; control displays it as a row.","pos":[298,491],"source":" For example, the <xref:System.Web.UI.WebControls.GridView> control displays a BoundField object as a column, while the <xref:System.Web.UI.WebControls.DetailsView> control displays it as a row."},{"content":"To specify the field to display in a BoundField object, set the &lt;xref:System.Web.UI.WebControls.BoundField.DataField%2A&gt; property to the field's name.","pos":[498,648],"source":"       To specify the field to display in a BoundField object, set the <xref:System.Web.UI.WebControls.BoundField.DataField%2A> property to the field's name."},{"content":"The field's value can be HTML-encoded before it is displayed by setting the &lt;xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A&gt; property to <ph id=\"ph1\">`true`</ph>.","pos":[649,802],"source":" The field's value can be HTML-encoded before it is displayed by setting the <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> property to `true`."},{"content":"You can apply a custom formatting string to the field's value by setting the &lt;xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A&gt; property.","pos":[803,953],"source":" You can apply a custom formatting string to the field's value by setting the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property."},{"content":"When the &lt;xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A&gt; property is <ph id=\"ph1\">`true`</ph>, the encoded string value of the field is used in the custom format string.","pos":[954,1115],"source":" When the <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> property is `true`, the encoded string value of the field is used in the custom format string."},{"content":"By default, the formatting string is applied to field values only when the data-bound control is in read-only mode.","pos":[1116,1231]},{"content":"To apply the formatting string to values displayed while the data-bound control is in edit mode, set the &lt;xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A&gt; property to <ph id=\"ph1\">`true`</ph>.","pos":[1232,1425],"source":" To apply the formatting string to values displayed while the data-bound control is in edit mode, set the <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> property to `true`."},{"content":"If a field's value is null, you can display a custom caption by setting the &lt;xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A&gt; property.","pos":[1426,1574],"source":" If a field's value is null, you can display a custom caption by setting the <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> property."},{"content":"The BoundField object can also automatically convert empty string (\"\") field values to null values by setting the &lt;xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A&gt; property to <ph id=\"ph1\">`true`</ph>.","pos":[1575,1780],"source":" The BoundField object can also automatically convert empty string (\"\") field values to null values by setting the <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> property to `true`."},{"content":"You can hide a BoundField object in a data-bound control by setting the &lt;xref:System.Web.UI.WebControls.DataControlField.Visible%2A&gt; property to <ph id=\"ph1\">`false`</ph>.","pos":[1787,1940],"source":"       You can hide a BoundField object in a data-bound control by setting the <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> property to `false`."},{"content":"To prevent the value of a field from being modified in edit mode, set the &lt;xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A&gt; property to <ph id=\"ph1\">`true`</ph>.","pos":[1941,2090],"source":" To prevent the value of a field from being modified in edit mode, set the <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> property to `true`."},{"content":"In data-bound controls that support inserting records (such as the &lt;xref:System.Web.UI.WebControls.DetailsView&gt; control), you can hide a BoundField object by setting the &lt;xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A&gt; property to <ph id=\"ph1\">`false`</ph>.","pos":[2091,2348],"source":" In data-bound controls that support inserting records (such as the <xref:System.Web.UI.WebControls.DetailsView> control), you can hide a BoundField object by setting the <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> property to `false`."},{"content":"This is commonly done when you want to hide an automatically generated key field in insert mode.","pos":[2349,2445]},{"content":"You can customize the header and footer sections of a BoundField object.","pos":[2452,2524]},{"content":"To display a caption in the header or footer sections, set the &lt;xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A&gt; or &lt;xref:System.Web.UI.WebControls.DataControlField.FooterText%2A&gt; properties, respectively.","pos":[2525,2744],"source":" To display a caption in the header or footer sections, set the <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> or <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> properties, respectively."},{"content":"Instead of displaying text in the header section, you can display an image by setting the &lt;xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A&gt; property.","pos":[2745,2912],"source":" Instead of displaying text in the header section, you can display an image by setting the <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> property."},{"content":"The header section can be hidden in the BoundField object by setting the &lt;xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A&gt; property to <ph id=\"ph1\">`false`</ph>.","pos":[2913,3070],"source":" The header section can be hidden in the BoundField object by setting the <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> property to `false`."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Some data-bound controls (such as the &lt;xref:System.Web.UI.WebControls.GridView&gt; control) can show or hide only the entire header section of the control.","pos":[3076,3241],"source":"      > [!NOTE] >  Some data-bound controls (such as the <xref:System.Web.UI.WebControls.GridView> control) can show or hide only the entire header section of the control."},{"content":"These data-bound controls do not support the &lt;xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A&gt; property for an individual bound field.","pos":[3242,3390],"source":" These data-bound controls do not support the <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> property for an individual bound field."},{"content":"To show or hide the entire header section of a data-bound control (if available), use the control's <ph id=\"ph1\">`ShowHeader`</ph> property.","pos":[3391,3513],"source":" To show or hide the entire header section of a data-bound control (if available), use the control's `ShowHeader` property."},{"content":"You also can customize the appearance of the BoundField object (font color, background color, and so on) by setting the style properties for the different parts of the field.","pos":[3520,3694]},{"content":"The following table lists the different style properties.","pos":[3695,3752]},{"content":"|Style property|Description|   |--------------------|-----------------|   |&lt;xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A&gt;|The style settings for the child Web server controls of the BoundField object.|   |&lt;xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A&gt;|The style settings for the footer section of the BoundField object.|   |&lt;xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A&gt;|The style settings for the header section of the BoundField object.|   |&lt;xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A&gt;|The style settings for the data items in the BoundField object.|","pos":[3758,4383],"source":"      |Style property|Description|   |--------------------|-----------------|   |<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|The style settings for the child Web server controls of the BoundField object.|   |<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|The style settings for the footer section of the BoundField object.|   |<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|The style settings for the header section of the BoundField object.|   |<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|The style settings for the data items in the BoundField object.|"}]},{"pos":[9385,9483],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.BoundField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.BoundField\"></xref> class."},{"pos":[9496,10469],"content":"Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.BoundField> class. This constructor is commonly used when adding fields to a dynamically created data-bound control.       To dynamically add a <xref:System.Web.UI.WebControls.BoundField> object to a data-bound control, create a new <xref:System.Web.UI.WebControls.BoundField> object, set its properties, and then add it to the data-bound control's field collection. For example, if you are using the <xref:System.Web.UI.WebControls.GridView> control, add the <xref:System.Web.UI.WebControls.BoundField> object to the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection.      > [!NOTE] >  Although you can dynamically add fields to a data-bound control, it is strongly recommended that fields be statically declared and then shown or hidden, as appropriate. Statically declaring all of your fields reduces the size of the view state for the parent data-bound control.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this constructor to initialize a new instance of the &lt;xref:System.Web.UI.WebControls.BoundField&gt; class.","pos":[0,107],"source":"Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.BoundField> class."},{"content":"This constructor is commonly used when adding fields to a dynamically created data-bound control.","pos":[108,205]},{"content":"To dynamically add a &lt;xref:System.Web.UI.WebControls.BoundField&gt; object to a data-bound control, create a new &lt;xref:System.Web.UI.WebControls.BoundField&gt; object, set its properties, and then add it to the data-bound control's field collection.","pos":[212,455],"source":"       To dynamically add a <xref:System.Web.UI.WebControls.BoundField> object to a data-bound control, create a new <xref:System.Web.UI.WebControls.BoundField> object, set its properties, and then add it to the data-bound control's field collection."},{"content":"For example, if you are using the &lt;xref:System.Web.UI.WebControls.GridView&gt; control, add the &lt;xref:System.Web.UI.WebControls.BoundField&gt; object to the &lt;xref:System.Web.UI.WebControls.GridView.Columns%2A&gt; collection.","pos":[456,671],"source":" For example, if you are using the <xref:System.Web.UI.WebControls.GridView> control, add the <xref:System.Web.UI.WebControls.BoundField> object to the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Although you can dynamically add fields to a data-bound control, it is strongly recommended that fields be statically declared and then shown or hidden, as appropriate.","pos":[677,858],"source":"      > [!NOTE] >  Although you can dynamically add fields to a data-bound control, it is strongly recommended that fields be statically declared and then shown or hidden, as appropriate."},{"content":"Statically declaring all of your fields reduces the size of the view state for the parent data-bound control.","pos":[859,968]}]},{"pos":[11447,11751],"content":"Gets or sets a value indicating whether the formatting string specified by the &lt;xref:System.Web.UI.WebControls.BoundField.DataFormatString*&gt; property is applied to field values when the data-bound control that contains the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.BoundField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is in edit mode.","needQuote":true,"needEscape":true,"source":"Gets or sets a value indicating whether the formatting string specified by the <xref:System.Web.UI.WebControls.BoundField.DataFormatString*> property is applied to field values when the data-bound control that contains the <xref href=\"System.Web.UI.WebControls.BoundField\"></xref> object is in edit mode."},{"pos":[11764,12649],"content":"Data-bound controls (such as <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.FormView>, and <xref:System.Web.UI.WebControls.GridView>) have different display modes that allow the user to read, edit, or insert records. By default, the formatting string specified by the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property is applied to field values only when the data-bound control is in read-only mode. To apply the formatting string to values displayed while the data-bound control is in edit mode, set the ApplyFormatInEditMode property to `true`.      > [!NOTE] >  A <xref:System.Web.UI.WebControls.BoundField> object does not automatically remove the formatting when the field is updated in the data source. If you do not want the formatting as part of the value stored, you will need to remove the formatting programmatically.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Data-bound controls (such as &lt;xref:System.Web.UI.WebControls.DetailsView&gt;, &lt;xref:System.Web.UI.WebControls.FormView&gt;, and &lt;xref:System.Web.UI.WebControls.GridView&gt;) have different display modes that allow the user to read, edit, or insert records.","pos":[0,247],"source":"Data-bound controls (such as <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.FormView>, and <xref:System.Web.UI.WebControls.GridView>) have different display modes that allow the user to read, edit, or insert records."},{"content":"By default, the formatting string specified by the &lt;xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A&gt; property is applied to field values only when the data-bound control is in read-only mode.","pos":[248,453],"source":" By default, the formatting string specified by the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property is applied to field values only when the data-bound control is in read-only mode."},{"content":"To apply the formatting string to values displayed while the data-bound control is in edit mode, set the ApplyFormatInEditMode property to <ph id=\"ph1\">`true`</ph>.","pos":[454,600],"source":" To apply the formatting string to values displayed while the data-bound control is in edit mode, set the ApplyFormatInEditMode property to `true`."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  A &lt;xref:System.Web.UI.WebControls.BoundField&gt; object does not automatically remove the formatting when the field is updated in the data source.","pos":[606,762],"source":"      > [!NOTE] >  A <xref:System.Web.UI.WebControls.BoundField> object does not automatically remove the formatting when the field is updated in the data source."},{"content":"If you do not want the formatting as part of the value stored, you will need to remove the formatting programmatically.","pos":[763,882]}]},{"pos":[13342,13617],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to apply the formatting string to field values in edit mode; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to apply the formatting string to field values in edit mode; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,196],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to apply the formatting string to field values in edit mode; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[197,275],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[14152,14310],"content":"Gets or sets a value indicating whether empty string values (\"\") are automatically converted to null values when the data field is updated in the data source.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether empty string values (\"\") are automatically converted to null values when the data field is updated in the data source.","pos":[0,158]}]},{"pos":[14323,14828],"content":"Sometimes the user might enter an empty string for a field value when updating or inserting records. Use the ConvertEmptyStringToNull property to specify whether an empty string value is automatically converted to null when the data field is updated in the data source.      > [!NOTE] >  By default, a <xref:System.Web.UI.WebControls.BoundField> object displays null values as empty strings. To display a different value, set the <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Sometimes the user might enter an empty string for a field value when updating or inserting records.","pos":[0,100]},{"content":"Use the ConvertEmptyStringToNull property to specify whether an empty string value is automatically converted to null when the data field is updated in the data source.","pos":[101,269]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  By default, a &lt;xref:System.Web.UI.WebControls.BoundField&gt; object displays null values as empty strings.","pos":[275,391],"source":"      > [!NOTE] >  By default, a <xref:System.Web.UI.WebControls.BoundField> object displays null values as empty strings."},{"content":"To display a different value, set the &lt;xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A&gt; property.","pos":[392,502],"source":" To display a different value, set the <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> property."}]},{"pos":[15409,15686],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to automatically convert empty string values to null values; otherwise, the <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to automatically convert empty string values to null values; otherwise, the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,200],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to automatically convert empty string values to null values; otherwise, the <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[201,277],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[16314,16504],"content":"Copies the properties of the current <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.BoundField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to the specified <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.DataControlField\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Copies the properties of the current <xref href=\"System.Web.UI.WebControls.BoundField\"></xref> object to the specified <xref href=\"System.Web.UI.WebControls.DataControlField\"></xref> object."},{"pos":[16516,16844],"content":"The CopyProperties method is a helper method used by the <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName> method to copy the properties of the current <xref:System.Web.UI.WebControls.BoundField> object to the <xref:System.Web.UI.WebControls.DataControlField> object created by the method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The CopyProperties method is a helper method used by the &lt;xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName&gt; method to copy the properties of the current &lt;xref:System.Web.UI.WebControls.BoundField&gt; object to the &lt;xref:System.Web.UI.WebControls.DataControlField&gt; object created by the method.","pos":[0,328],"source":"The CopyProperties method is a helper method used by the <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName> method to copy the properties of the current <xref:System.Web.UI.WebControls.BoundField> object to the <xref:System.Web.UI.WebControls.DataControlField> object created by the method."}]},{"pos":[17071,17238],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.DataControlField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to copy the properties of the current <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.BoundField\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.WebControls.DataControlField\"></xref> to copy the properties of the current <xref href=\"System.Web.UI.WebControls.BoundField\"></xref> to."},{"pos":[17705,17787],"content":"Creates an empty <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.BoundField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Creates an empty <xref href=\"System.Web.UI.WebControls.BoundField\"></xref> object."},{"pos":[17799,18111],"content":"The CreateField method is a helper method used by the <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName> method to create an empty <xref:System.Web.UI.WebControls.BoundField> object to copy the properties of the current <xref:System.Web.UI.WebControls.BoundField> object to.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The CreateField method is a helper method used by the &lt;xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName&gt; method to create an empty &lt;xref:System.Web.UI.WebControls.BoundField&gt; object to copy the properties of the current &lt;xref:System.Web.UI.WebControls.BoundField&gt; object to.","pos":[0,312],"source":"The CreateField method is a helper method used by the <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName> method to create an empty <xref:System.Web.UI.WebControls.BoundField> object to copy the properties of the current <xref:System.Web.UI.WebControls.BoundField> object to."}]},{"pos":[18318,18385],"content":"An empty <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.BoundField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An empty <xref href=\"System.Web.UI.WebControls.BoundField\"></xref>."},{"pos":[18835,18955],"content":"Gets or sets the name of the data field to bind to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.BoundField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets or sets the name of the data field to bind to the <xref href=\"System.Web.UI.WebControls.BoundField\"></xref> object."},{"pos":[18968,19573],"content":"Use the DataField property to specify the name of the data field to bind to the <xref:System.Web.UI.WebControls.BoundField> object. The values of the specified field are displayed in the <xref:System.Web.UI.WebControls.BoundField> object as text. You can optionally format the displayed text by setting the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property.      > [!NOTE] >  If a field's value is null, an empty string (\"\") is displayed for the value by default. To specify an alternate caption, set the <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the DataField property to specify the name of the data field to bind to the &lt;xref:System.Web.UI.WebControls.BoundField&gt; object.","pos":[0,131],"source":"Use the DataField property to specify the name of the data field to bind to the <xref:System.Web.UI.WebControls.BoundField> object."},{"content":"The values of the specified field are displayed in the &lt;xref:System.Web.UI.WebControls.BoundField&gt; object as text.","pos":[132,246],"source":" The values of the specified field are displayed in the <xref:System.Web.UI.WebControls.BoundField> object as text."},{"content":"You can optionally format the displayed text by setting the &lt;xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A&gt; property.","pos":[247,380],"source":" You can optionally format the displayed text by setting the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If a field's value is null, an empty string (\"\") is displayed for the value by default.","pos":[386,486],"source":"      > [!NOTE] >  If a field's value is null, an empty string (\"\") is displayed for the value by default."},{"content":"To specify an alternate caption, set the &lt;xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A&gt; property.","pos":[487,600],"source":" To specify an alternate caption, set the <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> property."}]},{"pos":[20133,20317],"content":"The name of the data field to bind to the <xref href=\"System.Web.UI.WebControls.BoundField\"></xref>. The default is an empty string (\"\"), which indicates that this property is not set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the data field to bind to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.BoundField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,100],"source":"The name of the data field to bind to the <xref href=\"System.Web.UI.WebControls.BoundField\"></xref>."},{"content":"The default is an empty string (\"\"), which indicates that this property is not set.","pos":[101,184]}]},{"pos":[20800,20885],"content":"Gets or sets the string that specifies the display format for the value of the field.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the string that specifies the display format for the value of the field.","pos":[0,85]}]},{"pos":[20898,28764],"content":"Use the DataFormatString property to specify a custom display format for the values that are displayed in the <xref:System.Web.UI.WebControls.BoundField> object. If the DataFormatString property is not set, the field's value is displayed without any special formatting.      > [!NOTE] >  In versions of ASP.NET earlier than 3.5, you must set the <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> property to `false` in order to format fields that are not string data types. Otherwise, the field value is converted to a string by the default conversion method before the format string that is stored in the DataFormatString property is applied.       By default, the formatting string is applied to the field value only when the data-bound control that contains the <xref:System.Web.UI.WebControls.BoundField> object is in read-only mode. To apply the formatting string to field values while in edit mode, set the <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> property to `true`.       The formatting string can be any literal string and usually includes a placeholder for the field's value. For example, in the formatting string `Item Value: {0}`, the field's value is substituted for the {0} placeholder when the string is displayed in the <xref:System.Web.UI.WebControls.BoundField> object. The rest of the formatting string is displayed as literal text.       If the formatting string does not include a placeholder, only the formatting string itself is included in the final display text (the field's value from the data source is not included). If the placeholder is a 0 (zero) enclosed in curly braces as shown in the preceding example, the field value is converted to a string by the default method. You can append to the zero a string that specifies how the field value should be formatted. For example, the placeholder `{0:C}` for a numeric field specifies that value of the field should be converted to a currency format.       Formatting is applied by using the <xref:System.String.Format%2A> method. The number that follows the left curly brace is part of the syntax used by that method and indicates which one of a series of values the placeholder should use. Because there is only one field value in each cell, the number that follows the left curly brace can only be set to 0.       The following table lists the standard format characters for numeric fields. These format characters are not case-sensitive, except for `X`, which displays hexadecimal characters in the case that is specified. You can append a number to most format characters in order to specify how many significant digits or decimal places you want to display.      > [!NOTE] >  In most cases, formatting depends on the server's culture setting. The examples are for a culture setting of `en-US`.      |Format character|Description|Example|   |----------------------|-----------------|-------------|   |`C` or `c`|Displays numeric values in currency format. You can specify the number of decimal places.|Format: `{0:C}`<br /><br /> 123.456 -> $123.46<br /><br /> Format: `{0:C3}`<br /><br /> 123.456  -> $123.456|   |`D` or `d`|Displays integer values in decimal format. You can specify the number of digits. (Although the type is referred to as \"decimal\", the numbers are formatted as integers.)|Format: `{0:D}`<br /><br /> 1234 -> 1234<br /><br /> Format: `{0:D6}`<br /><br /> 1234  -> 001234|   |`E` or `e`|Displays numeric values in scientific (exponential) format. You can specify the number of decimal places.|Format: `{0:E}`<br /><br /> 1052.0329112756 -> 1.052033E+003<br /><br /> Format: `{0:E2}`<br /><br /> -1052.0329112756 -> -1.05e+003|   |`F` or `f`|Displays numeric values in fixed format. You can specify the number of decimal places.|Format: `{0:F}`<br /><br /> 1234.567 -> 1234.57<br /><br /> Format: `{0:F3}`<br /><br /> 1234.567 -> 1234.567|   |`G` or `g`|Displays numeric values in general format (the most compact of either fixed-point or scientific notation). You can specify the number of significant digits.|Format: `{0:G}`<br /><br /> -123.456 -> -123.456<br /><br /> Format: `{0:G2}`<br /><br /> -123.456 -> -120|   |`N` or `n`|Displays numeric values in number format (including group separators and optional negative sign). You can specify the number of decimal places.|Format: `{0:N}`<br /><br /> 1234.567 -> 1,234.57<br /><br /> Format: `{0:N4}`<br /><br /> 1234.567 -> 1,234.5670|   |`P` or `p`|Displays numeric values in percent format. You can specify the number of decimal places.|Format: `{0:P}`<br /><br /> 1 -> 100.00%<br /><br /> Format: `{0:P1}`<br /><br /> .5 -> 50.0%|   |`R` or `r`|Displays <xref:System.Single>, <xref:System.Double>, or `BigInteger` values in round-trip format.|Format: `{0:R}`<br /><br /> 123456789.12345678 -> 123456789.12345678|   |`X` or `x`|Displays integer values in hexadecimal format. You can specify the number of digits.|Format: `{0:X}`<br /><br /> 255 -> FF<br /><br /> Format: `{0:x4}`<br /><br /> 255  -> 00ff|       For more information and for examples that show formatting for other culture values, see [Standard Numeric Format Strings](~/add/includes/ajax-current-ext-md.md). You can also create custom numeric format strings. For more information, see [Custom Numeric Format Strings](~/add/includes/ajax-current-ext-md.md).       The following table lists format characters for <xref:System.DateTime> fields. Most of these formatting specifications result in a different output depending on culture settings. The examples are for a <xref:System.DateTime> value of 6/15/2009 1:45:30 PM with a culture setting of `en-US`.      |Format character|Description|Example|   |----------------------|-----------------|-------------|   |`d`|Short date pattern.|Format: `{0:d}`<br /><br /> 6/15/2009 1:45:30 PM -> 6/15/2009|   |`D`|Long date pattern.|Format: `{0:D}`<br /><br /> 6/15/2009 1:45:30 PM ->Monday, June 15, 2009|   |`f`|Full date/time pattern (short time).|Format: `{0:f}`<br /><br /> 6/15/2009 1:45:30 PM -> Monday, June 15, 2009 1:45 PM|   |`F`|Full date/time pattern (long time).|Format: `{0:F}`<br /><br /> 6/15/2009 1:45:30 PM -> Monday, June 15, 2009 1:45:30 PM|   |`g`|General date/time pattern (short time).|Format: `{0:g}`<br /><br /> 6/15/2009 1:45:30 PM -> 6/15/2009 1:45 PM|   |`G`|General date/time pattern (long time).|Format: `{0:G}`<br /><br /> 6/15/2009 1:45:30 PM -> 6/15/2009 1:45:30 PM|   |`M` or `m`|Month/day pattern.|Format: `{0:M}`<br /><br /> 6/15/2009 1:45:30 PM -> June 15|   |`O` or `o`|Round-trip date/time pattern.|Format: `{0:o}`<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15T13:45:30.0900000|   |`R` or `r`|RFC1123 pattern (for information, see <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A?displayProperty=fullName>).|Format: `{0:R}`<br /><br /> 6/15/2009 1:45:30 PM -> Mon, 15 Jun 2009 20:45:30 GMT|   |`s`|Sortable date/time pattern.|Format: `{0:s}`<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15T13:45:30|   |`t`|Short time pattern.|Format: `{0:t}`<br /><br /> 6/15/2009 1:45:30 PM -> 1:45 PM|   |`T`|Long time pattern.|Format: `{0:T}`<br /><br /> 6/15/2009 1:45:30 PM -> 1:45:30 PM|   |`u`|Universal sortable date/time pattern.|Format: `{0:u}`<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15 20:45:30Z|   |`U`|Universal full date/time pattern.|Format: `{0:U}`<br /><br /> 6/15/2009 1:45:30 PM -> Monday, June 15, 2009 8:45:30 PM|   |`Y` or `y`|Year month pattern.|Format: `{0:Y}`<br /><br /> 6/15/2009 1:45:30 PM -> June, 2009|       For more information and for examples that show formatting for other culture values, see [Standard Date and Time Format Strings](~/add/includes/ajax-current-ext-md.md). You can also create custom date and time format strings. For more information, see [Custom Date and Time Format Strings](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the DataFormatString property to specify a custom display format for the values that are displayed in the <xref:System.Web.UI.WebControls.BoundField> object. If the DataFormatString property is not set, the field's value is displayed without any special formatting.      > [!NOTE] >  In versions of ASP.NET earlier than 3.5, you must set the <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> property to `false` in order to format fields that are not string data types. Otherwise, the field value is converted to a string by the default conversion method before the format string that is stored in the DataFormatString property is applied.       By default, the formatting string is applied to the field value only when the data-bound control that contains the <xref:System.Web.UI.WebControls.BoundField> object is in read-only mode. To apply the formatting string to field values while in edit mode, set the <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> property to `true`.       The formatting string can be any literal string and usually includes a placeholder for the field's value. For example, in the formatting string `Item Value: {0}`, the field's value is substituted for the {0} placeholder when the string is displayed in the <xref:System.Web.UI.WebControls.BoundField> object. The rest of the formatting string is displayed as literal text.       If the formatting string does not include a placeholder, only the formatting string itself is included in the final display text (the field's value from the data source is not included). If the placeholder is a 0 (zero) enclosed in curly braces as shown in the preceding example, the field value is converted to a string by the default method. You can append to the zero a string that specifies how the field value should be formatted. For example, the placeholder `{0:C}` for a numeric field specifies that value of the field should be converted to a currency format.       Formatting is applied by using the <xref:System.String.Format%2A> method. The number that follows the left curly brace is part of the syntax used by that method and indicates which one of a series of values the placeholder should use. Because there is only one field value in each cell, the number that follows the left curly brace can only be set to 0.       The following table lists the standard format characters for numeric fields. These format characters are not case-sensitive, except for `X`, which displays hexadecimal characters in the case that is specified. You can append a number to most format characters in order to specify how many significant digits or decimal places you want to display.      > [!NOTE] >  In most cases, formatting depends on the server's culture setting. The examples are for a culture setting of `en-US`.      |Format character|Description|Example|   |----------------------|-----------------|-------------|   |`C` or `c`|Displays numeric values in currency format. You can specify the number of decimal places.|Format: `{0:C}`","pos":[0,3034],"nodes":[{"content":"Use the DataFormatString property to specify a custom display format for the values that are displayed in the &lt;xref:System.Web.UI.WebControls.BoundField&gt; object.","pos":[0,161],"source":"Use the DataFormatString property to specify a custom display format for the values that are displayed in the <xref:System.Web.UI.WebControls.BoundField> object."},{"content":"If the DataFormatString property is not set, the field's value is displayed without any special formatting.","pos":[162,269]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  In versions of ASP.NET earlier than 3.5, you must set the &lt;xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A&gt; property to <ph id=\"ph2\">`false`</ph> in order to format fields that are not string data types.","pos":[275,481],"source":"      > [!NOTE] >  In versions of ASP.NET earlier than 3.5, you must set the <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> property to `false` in order to format fields that are not string data types."},{"content":"Otherwise, the field value is converted to a string by the default conversion method before the format string that is stored in the DataFormatString property is applied.","pos":[482,651]},{"content":"By default, the formatting string is applied to the field value only when the data-bound control that contains the &lt;xref:System.Web.UI.WebControls.BoundField&gt; object is in read-only mode.","pos":[658,845],"source":"       By default, the formatting string is applied to the field value only when the data-bound control that contains the <xref:System.Web.UI.WebControls.BoundField> object is in read-only mode."},{"content":"To apply the formatting string to field values while in edit mode, set the &lt;xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A&gt; property to <ph id=\"ph1\">`true`</ph>.","pos":[846,1009],"source":" To apply the formatting string to field values while in edit mode, set the <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> property to `true`."},{"content":"The formatting string can be any literal string and usually includes a placeholder for the field's value.","pos":[1016,1121]},{"content":"For example, in the formatting string <ph id=\"ph1\">`Item Value: {0}`</ph>, the field's value is substituted for the {0} placeholder when the string is displayed in the &lt;xref:System.Web.UI.WebControls.BoundField&gt; object.","pos":[1122,1323],"source":" For example, in the formatting string `Item Value: {0}`, the field's value is substituted for the {0} placeholder when the string is displayed in the <xref:System.Web.UI.WebControls.BoundField> object."},{"content":"The rest of the formatting string is displayed as literal text.","pos":[1324,1387]},{"content":"If the formatting string does not include a placeholder, only the formatting string itself is included in the final display text (the field's value from the data source is not included).","pos":[1394,1580]},{"content":"If the placeholder is a 0 (zero) enclosed in curly braces as shown in the preceding example, the field value is converted to a string by the default method.","pos":[1581,1737]},{"content":"You can append to the zero a string that specifies how the field value should be formatted.","pos":[1738,1829]},{"content":"For example, the placeholder <ph id=\"ph1\">`{0:C}`</ph> for a numeric field specifies that value of the field should be converted to a currency format.","pos":[1830,1962],"source":" For example, the placeholder `{0:C}` for a numeric field specifies that value of the field should be converted to a currency format."},{"content":"Formatting is applied by using the &lt;xref:System.String.Format%2A&gt; method.","pos":[1969,2042],"source":"       Formatting is applied by using the <xref:System.String.Format%2A> method."},{"content":"The number that follows the left curly brace is part of the syntax used by that method and indicates which one of a series of values the placeholder should use.","pos":[2043,2203]},{"content":"Because there is only one field value in each cell, the number that follows the left curly brace can only be set to 0.","pos":[2204,2322]},{"content":"The following table lists the standard format characters for numeric fields.","pos":[2329,2405]},{"content":"These format characters are not case-sensitive, except for <ph id=\"ph1\">`X`</ph>, which displays hexadecimal characters in the case that is specified.","pos":[2406,2538],"source":" These format characters are not case-sensitive, except for `X`, which displays hexadecimal characters in the case that is specified."},{"content":"You can append a number to most format characters in order to specify how many significant digits or decimal places you want to display.","pos":[2539,2675]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  In most cases, formatting depends on the server's culture setting.","pos":[2681,2760],"source":"      > [!NOTE] >  In most cases, formatting depends on the server's culture setting."},{"content":"The examples are for a culture setting of <ph id=\"ph1\">`en-US`</ph>.","pos":[2761,2811],"source":" The examples are for a culture setting of `en-US`."},{"content":"|Format character|Description|Example|   |----------------------|-----------------|-------------|   |<ph id=\"ph1\">`C`</ph> or <ph id=\"ph2\">`c`</ph>|Displays numeric values in currency format.","pos":[2817,2972],"source":"      |Format character|Description|Example|   |----------------------|-----------------|-------------|   |`C` or `c`|Displays numeric values in currency format."},{"content":"You can specify the number of decimal places.|Format: <ph id=\"ph1\">`{0:C}`</ph>","pos":[2973,3034],"source":" You can specify the number of decimal places.|Format: `{0:C}`"}]},{"content":"123.456 -&gt; $123.46","pos":[3047,3065],"source":" 123.456 -> $123.46"},{"content":"Format: <ph id=\"ph1\">`{0:C3}`</ph>","pos":[3078,3094],"source":" Format: `{0:C3}`"},{"content":" 123.456  -> $123.456|   |`D` or `d`|Displays integer values in decimal format. You can specify the number of digits. (Although the type is referred to as \"decimal\", the numbers are formatted as integers.)|Format: `{0:D}`","pos":[3106,3327],"nodes":[{"content":"123.456  -&gt; $123.456|   |<ph id=\"ph1\">`D`</ph> or <ph id=\"ph2\">`d`</ph>|Displays integer values in decimal format.","pos":[1,79],"source":" 123.456  -> $123.456|   |`D` or `d`|Displays integer values in decimal format."},{"content":"You can specify the number of digits.","pos":[80,117]},{"content":"(Although the type is referred to as \"decimal\", the numbers are formatted as integers.)|Format: <ph id=\"ph1\">`{0:D}`</ph>","pos":[118,221],"source":" (Although the type is referred to as \"decimal\", the numbers are formatted as integers.)|Format: `{0:D}`"}]},{"content":"1234 -&gt; 1234","pos":[3340,3352],"source":" 1234 -> 1234"},{"content":"Format: <ph id=\"ph1\">`{0:D6}`</ph>","pos":[3365,3381],"source":" Format: `{0:D6}`"},{"content":" 1234  -> 001234|   |`E` or `e`|Displays numeric values in scientific (exponential) format. You can specify the number of decimal places.|Format: `{0:E}`","pos":[3393,3546],"nodes":[{"content":"1234  -&gt; 001234|   |<ph id=\"ph1\">`E`</ph> or <ph id=\"ph2\">`e`</ph>|Displays numeric values in scientific (exponential) format.","pos":[1,91],"source":" 1234  -> 001234|   |`E` or `e`|Displays numeric values in scientific (exponential) format."},{"content":"You can specify the number of decimal places.|Format: <ph id=\"ph1\">`{0:E}`</ph>","pos":[92,153],"source":" You can specify the number of decimal places.|Format: `{0:E}`"}]},{"content":"1052.0329112756 -&gt; 1.052033E+003","pos":[3559,3591],"source":" 1052.0329112756 -> 1.052033E+003"},{"content":"Format: <ph id=\"ph1\">`{0:E2}`</ph>","pos":[3604,3620],"source":" Format: `{0:E2}`"},{"content":" -1052.0329112756 -> -1.05e+003|   |`F` or `f`|Displays numeric values in fixed format. You can specify the number of decimal places.|Format: `{0:F}`","pos":[3632,3781],"nodes":[{"content":"-1052.0329112756 -&gt; -1.05e+003|   |<ph id=\"ph1\">`F`</ph> or <ph id=\"ph2\">`f`</ph>|Displays numeric values in fixed format.","pos":[1,87],"source":" -1052.0329112756 -> -1.05e+003|   |`F` or `f`|Displays numeric values in fixed format."},{"content":"You can specify the number of decimal places.|Format: <ph id=\"ph1\">`{0:F}`</ph>","pos":[88,149],"source":" You can specify the number of decimal places.|Format: `{0:F}`"}]},{"content":"1234.567 -&gt; 1234.57","pos":[3794,3813],"source":" 1234.567 -> 1234.57"},{"content":"Format: <ph id=\"ph1\">`{0:F3}`</ph>","pos":[3826,3842],"source":" Format: `{0:F3}`"},{"content":" 1234.567 -> 1234.567|   |`G` or `g`|Displays numeric values in general format (the most compact of either fixed-point or scientific notation). You can specify the number of significant digits.|Format: `{0:G}`","pos":[3854,4063],"nodes":[{"content":"1234.567 -&gt; 1234.567|   |<ph id=\"ph1\">`G`</ph> or <ph id=\"ph2\">`g`</ph>|Displays numeric values in general format (the most compact of either fixed-point or scientific notation).","pos":[1,143],"source":" 1234.567 -> 1234.567|   |`G` or `g`|Displays numeric values in general format (the most compact of either fixed-point or scientific notation)."},{"content":"You can specify the number of significant digits.|Format: <ph id=\"ph1\">`{0:G}`</ph>","pos":[144,209],"source":" You can specify the number of significant digits.|Format: `{0:G}`"}]},{"content":"-123.456 -&gt; -123.456","pos":[4076,4096],"source":" -123.456 -> -123.456"},{"content":"Format: <ph id=\"ph1\">`{0:G2}`</ph>","pos":[4109,4125],"source":" Format: `{0:G2}`"},{"content":" -123.456 -> -120|   |`N` or `n`|Displays numeric values in number format (including group separators and optional negative sign). You can specify the number of decimal places.|Format: `{0:N}`","pos":[4137,4329],"nodes":[{"content":"-123.456 -&gt; -120|   |<ph id=\"ph1\">`N`</ph> or <ph id=\"ph2\">`n`</ph>|Displays numeric values in number format (including group separators and optional negative sign).","pos":[1,130],"source":" -123.456 -> -120|   |`N` or `n`|Displays numeric values in number format (including group separators and optional negative sign)."},{"content":"You can specify the number of decimal places.|Format: <ph id=\"ph1\">`{0:N}`</ph>","pos":[131,192],"source":" You can specify the number of decimal places.|Format: `{0:N}`"}]},{"content":"1234.567 -&gt; 1,234.57","pos":[4342,4362],"source":" 1234.567 -> 1,234.57"},{"content":"Format: <ph id=\"ph1\">`{0:N4}`</ph>","pos":[4375,4391],"source":" Format: `{0:N4}`"},{"content":" 1234.567 -> 1,234.5670|   |`P` or `p`|Displays numeric values in percent format. You can specify the number of decimal places.|Format: `{0:P}`","pos":[4403,4546],"nodes":[{"content":"1234.567 -&gt; 1,234.5670|   |<ph id=\"ph1\">`P`</ph> or <ph id=\"ph2\">`p`</ph>|Displays numeric values in percent format.","pos":[1,81],"source":" 1234.567 -> 1,234.5670|   |`P` or `p`|Displays numeric values in percent format."},{"content":"You can specify the number of decimal places.|Format: <ph id=\"ph1\">`{0:P}`</ph>","pos":[82,143],"source":" You can specify the number of decimal places.|Format: `{0:P}`"}]},{"content":"1 -&gt; 100.00%","pos":[4559,4571],"source":" 1 -> 100.00%"},{"content":"Format: <ph id=\"ph1\">`{0:P1}`</ph>","pos":[4584,4600],"source":" Format: `{0:P1}`"},{"content":".5 -&gt; 50.0%|   |<ph id=\"ph1\">`R`</ph> or <ph id=\"ph2\">`r`</ph>|Displays &lt;xref:System.Single&gt;, &lt;xref:System.Double&gt;, or <ph id=\"ph3\">`BigInteger`</ph> values in round-trip format.|Format: <ph id=\"ph4\">`{0:R}`</ph>","pos":[4613,4753],"source":" .5 -> 50.0%|   |`R` or `r`|Displays <xref:System.Single>, <xref:System.Double>, or `BigInteger` values in round-trip format.|Format: `{0:R}`"},{"content":" 123456789.12345678 -> 123456789.12345678|   |`X` or `x`|Displays integer values in hexadecimal format. You can specify the number of digits.|Format: `{0:X}`","pos":[4765,4922],"nodes":[{"content":"123456789.12345678 -&gt; 123456789.12345678|   |<ph id=\"ph1\">`X`</ph> or <ph id=\"ph2\">`x`</ph>|Displays integer values in hexadecimal format.","pos":[1,103],"source":" 123456789.12345678 -> 123456789.12345678|   |`X` or `x`|Displays integer values in hexadecimal format."},{"content":"You can specify the number of digits.|Format: <ph id=\"ph1\">`{0:X}`</ph>","pos":[104,157],"source":" You can specify the number of digits.|Format: `{0:X}`"}]},{"content":"255 -&gt; FF","pos":[4935,4944],"source":" 255 -> FF"},{"content":"Format: <ph id=\"ph1\">`{0:x4}`</ph>","pos":[4957,4973],"source":" Format: `{0:x4}`"},{"content":" 255  -> 00ff|       For more information and for examples that show formatting for other culture values, see [Standard Numeric Format Strings](~/add/includes/ajax-current-ext-md.md). You can also create custom numeric format strings. For more information, see [Custom Numeric Format Strings](~/add/includes/ajax-current-ext-md.md).       The following table lists format characters for <xref:System.DateTime> fields. Most of these formatting specifications result in a different output depending on culture settings. The examples are for a <xref:System.DateTime> value of 6/15/2009 1:45:30 PM with a culture setting of `en-US`.      |Format character|Description|Example|   |----------------------|-----------------|-------------|   |`d`|Short date pattern.|Format: `{0:d}`","pos":[4985,5759],"nodes":[{"content":"255  -&gt; 00ff|       For more information and for examples that show formatting for other culture values, see <bpt id=\"p1\">[</bpt>Standard Numeric Format Strings<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1,183],"source":" 255  -> 00ff|       For more information and for examples that show formatting for other culture values, see [Standard Numeric Format Strings](~/add/includes/ajax-current-ext-md.md)."},{"content":"You can also create custom numeric format strings.","pos":[184,234]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Custom Numeric Format Strings<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[235,332],"source":" For more information, see [Custom Numeric Format Strings](~/add/includes/ajax-current-ext-md.md)."},{"content":"The following table lists format characters for &lt;xref:System.DateTime&gt; fields.","pos":[339,417],"source":"       The following table lists format characters for <xref:System.DateTime> fields."},{"content":"Most of these formatting specifications result in a different output depending on culture settings.","pos":[418,517]},{"content":"The examples are for a &lt;xref:System.DateTime&gt; value of 6/15/2009 1:45:30 PM with a culture setting of <ph id=\"ph1\">`en-US`</ph>.","pos":[518,628],"source":" The examples are for a <xref:System.DateTime> value of 6/15/2009 1:45:30 PM with a culture setting of `en-US`."},{"content":"|Format character|Description|Example|   |----------------------|-----------------|-------------|   |<ph id=\"ph1\">`d`</ph>|Short date pattern.|Format: <ph id=\"ph2\">`{0:d}`</ph>","pos":[634,774],"source":"      |Format character|Description|Example|   |----------------------|-----------------|-------------|   |`d`|Short date pattern.|Format: `{0:d}`"}]},{"content":"6/15/2009 1:45:30 PM -&gt; 6/15/2009|   |<ph id=\"ph1\">`D`</ph>|Long date pattern.|Format: <ph id=\"ph2\">`{0:D}`</ph>","pos":[5772,5848],"source":" 6/15/2009 1:45:30 PM -> 6/15/2009|   |`D`|Long date pattern.|Format: `{0:D}`"},{"content":"6/15/2009 1:45:30 PM -&gt;Monday, June 15, 2009|   |<ph id=\"ph1\">`f`</ph>|Full date/time pattern (short time).|Format: <ph id=\"ph2\">`{0:f}`</ph>","pos":[5861,5966],"source":" 6/15/2009 1:45:30 PM ->Monday, June 15, 2009|   |`f`|Full date/time pattern (short time).|Format: `{0:f}`"},{"content":"6/15/2009 1:45:30 PM -&gt; Monday, June 15, 2009 1:45 PM|   |<ph id=\"ph1\">`F`</ph>|Full date/time pattern (long time).|Format: <ph id=\"ph2\">`{0:F}`</ph>","pos":[5979,6092],"source":" 6/15/2009 1:45:30 PM -> Monday, June 15, 2009 1:45 PM|   |`F`|Full date/time pattern (long time).|Format: `{0:F}`"},{"content":"6/15/2009 1:45:30 PM -&gt; Monday, June 15, 2009 1:45:30 PM|   |<ph id=\"ph1\">`g`</ph>|General date/time pattern (short time).|Format: <ph id=\"ph2\">`{0:g}`</ph>","pos":[6105,6225],"source":" 6/15/2009 1:45:30 PM -> Monday, June 15, 2009 1:45:30 PM|   |`g`|General date/time pattern (short time).|Format: `{0:g}`"},{"content":"6/15/2009 1:45:30 PM -&gt; 6/15/2009 1:45 PM|   |<ph id=\"ph1\">`G`</ph>|General date/time pattern (long time).|Format: <ph id=\"ph2\">`{0:G}`</ph>","pos":[6238,6342],"source":" 6/15/2009 1:45:30 PM -> 6/15/2009 1:45 PM|   |`G`|General date/time pattern (long time).|Format: `{0:G}`"},{"content":"6/15/2009 1:45:30 PM -&gt; 6/15/2009 1:45:30 PM|   |<ph id=\"ph1\">`M`</ph> or <ph id=\"ph2\">`m`</ph>|Month/day pattern.|Format: <ph id=\"ph3\">`{0:M}`</ph>","pos":[6355,6449],"source":" 6/15/2009 1:45:30 PM -> 6/15/2009 1:45:30 PM|   |`M` or `m`|Month/day pattern.|Format: `{0:M}`"},{"content":"6/15/2009 1:45:30 PM -&gt; June 15|   |<ph id=\"ph1\">`O`</ph> or <ph id=\"ph2\">`o`</ph>|Round-trip date/time pattern.|Format: <ph id=\"ph3\">`{0:o}`</ph>","pos":[6462,6554],"source":" 6/15/2009 1:45:30 PM -> June 15|   |`O` or `o`|Round-trip date/time pattern.|Format: `{0:o}`"},{"content":"6/15/2009 1:45:30 PM -&gt; 2009-06-15T13:45:30.0900000|   |<ph id=\"ph1\">`R`</ph> or <ph id=\"ph2\">`r`</ph>|RFC1123 pattern (for information, see &lt;xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A?displayProperty=fullName&gt;).|Format: <ph id=\"ph3\">`{0:R}`</ph>","pos":[6567,6779],"source":" 6/15/2009 1:45:30 PM -> 2009-06-15T13:45:30.0900000|   |`R` or `r`|RFC1123 pattern (for information, see <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A?displayProperty=fullName>).|Format: `{0:R}`"},{"content":"6/15/2009 1:45:30 PM -&gt; Mon, 15 Jun 2009 20:45:30 GMT|   |<ph id=\"ph1\">`s`</ph>|Sortable date/time pattern.|Format: <ph id=\"ph2\">`{0:s}`</ph>","pos":[6792,6897],"source":" 6/15/2009 1:45:30 PM -> Mon, 15 Jun 2009 20:45:30 GMT|   |`s`|Sortable date/time pattern.|Format: `{0:s}`"},{"content":"6/15/2009 1:45:30 PM -&gt; 2009-06-15T13:45:30|   |<ph id=\"ph1\">`t`</ph>|Short time pattern.|Format: <ph id=\"ph2\">`{0:t}`</ph>","pos":[6910,6997],"source":" 6/15/2009 1:45:30 PM -> 2009-06-15T13:45:30|   |`t`|Short time pattern.|Format: `{0:t}`"},{"content":"6/15/2009 1:45:30 PM -&gt; 1:45 PM|   |<ph id=\"ph1\">`T`</ph>|Long time pattern.|Format: <ph id=\"ph2\">`{0:T}`</ph>","pos":[7010,7084],"source":" 6/15/2009 1:45:30 PM -> 1:45 PM|   |`T`|Long time pattern.|Format: `{0:T}`"},{"content":"6/15/2009 1:45:30 PM -&gt; 1:45:30 PM|   |<ph id=\"ph1\">`u`</ph>|Universal sortable date/time pattern.|Format: <ph id=\"ph2\">`{0:u}`</ph>","pos":[7097,7193],"source":" 6/15/2009 1:45:30 PM -> 1:45:30 PM|   |`u`|Universal sortable date/time pattern.|Format: `{0:u}`"},{"content":"6/15/2009 1:45:30 PM -&gt; 2009-06-15 20:45:30Z|   |<ph id=\"ph1\">`U`</ph>|Universal full date/time pattern.|Format: <ph id=\"ph2\">`{0:U}`</ph>","pos":[7206,7308],"source":" 6/15/2009 1:45:30 PM -> 2009-06-15 20:45:30Z|   |`U`|Universal full date/time pattern.|Format: `{0:U}`"},{"content":"6/15/2009 1:45:30 PM -&gt; Monday, June 15, 2009 8:45:30 PM|   |<ph id=\"ph1\">`Y`</ph> or <ph id=\"ph2\">`y`</ph>|Year month pattern.|Format: <ph id=\"ph3\">`{0:Y}`</ph>","pos":[7321,7428],"source":" 6/15/2009 1:45:30 PM -> Monday, June 15, 2009 8:45:30 PM|   |`Y` or `y`|Year month pattern.|Format: `{0:Y}`"},{"content":" 6/15/2009 1:45:30 PM -> June, 2009|       For more information and for examples that show formatting for other culture values, see [Standard Date and Time Format Strings](~/add/includes/ajax-current-ext-md.md). You can also create custom date and time format strings. For more information, see [Custom Date and Time Format Strings](~/add/includes/ajax-current-ext-md.md).","pos":[7440,7812],"nodes":[{"content":"6/15/2009 1:45:30 PM -&gt; June, 2009|       For more information and for examples that show formatting for other culture values, see <bpt id=\"p1\">[</bpt>Standard Date and Time Format Strings<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1,211],"source":" 6/15/2009 1:45:30 PM -> June, 2009|       For more information and for examples that show formatting for other culture values, see [Standard Date and Time Format Strings](~/add/includes/ajax-current-ext-md.md)."},{"content":"You can also create custom date and time format strings.","pos":[212,268]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Custom Date and Time Format Strings<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[269,372],"source":" For more information, see [Custom Date and Time Format Strings](~/add/includes/ajax-current-ext-md.md)."}]}]},{"pos":[29678,29870],"content":"A formatting string that specifies the display format for the value of the field. The default is an empty string (\"\"), which indicates that no special formatting is applied to the field value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A formatting string that specifies the display format for the value of the field. The default is an empty string (\"\"), which indicates that no special formatting is applied to the field value.","pos":[0,192],"nodes":[{"content":"A formatting string that specifies the display format for the value of the field.","pos":[0,81]},{"content":"The default is an empty string (\"\"), which indicates that no special formatting is applied to the field value.","pos":[82,192]}]}]},{"pos":[30908,31103],"content":"Fills the specified <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.IDictionary?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> object with the values from the specified <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TableCell\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Fills the specified &lt;xref:System.Collections.IDictionary?displayProperty=fullName&gt; object with the values from the specified <xref href=\"System.Web.UI.WebControls.TableCell\"></xref> object."},{"pos":[31116,31991],"content":"The ExtractValuesFromCell method is provided as a convenient way to retrieve the values of the fields from the specified <xref:System.Web.UI.WebControls.TableCell> object in a <xref:System.Web.UI.WebControls.BoundField> object.      > [!NOTE] >  This method is used primarily by control developers.       This method does not have a return value. Instead, the field values are returned by reference through the <xref:System.Collections.IDictionary?displayProperty=fullName> object passed in for the `dictionary` parameter. After the method has been called, iterate through the <xref:System.Collections.IDictionary?displayProperty=fullName> object to access the field values.      > [!NOTE] >  If the <xref:System.Web.UI.WebControls.TableCell> object contains read-only field values, you must pass in `true` for the `includeReadOnly` parameter to include those values.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ExtractValuesFromCell method is provided as a convenient way to retrieve the values of the fields from the specified &lt;xref:System.Web.UI.WebControls.TableCell&gt; object in a &lt;xref:System.Web.UI.WebControls.BoundField&gt; object.","pos":[0,227],"source":"The ExtractValuesFromCell method is provided as a convenient way to retrieve the values of the fields from the specified <xref:System.Web.UI.WebControls.TableCell> object in a <xref:System.Web.UI.WebControls.BoundField> object."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This method is used primarily by control developers.","pos":[233,298],"source":"      > [!NOTE] >  This method is used primarily by control developers."},{"content":"This method does not have a return value.","pos":[305,346]},{"content":"Instead, the field values are returned by reference through the &lt;xref:System.Collections.IDictionary?displayProperty=fullName&gt; object passed in for the <ph id=\"ph1\">`dictionary`</ph> parameter.","pos":[347,522],"source":" Instead, the field values are returned by reference through the <xref:System.Collections.IDictionary?displayProperty=fullName> object passed in for the `dictionary` parameter."},{"content":"After the method has been called, iterate through the &lt;xref:System.Collections.IDictionary?displayProperty=fullName&gt; object to access the field values.","pos":[523,674],"source":" After the method has been called, iterate through the <xref:System.Collections.IDictionary?displayProperty=fullName> object to access the field values."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If the &lt;xref:System.Web.UI.WebControls.TableCell&gt; object contains read-only field values, you must pass in <ph id=\"ph2\">`true`</ph> for the <ph id=\"ph3\">`includeReadOnly`</ph> parameter to include those values.","pos":[680,867],"source":"      > [!NOTE] >  If the <xref:System.Web.UI.WebControls.TableCell> object contains read-only field values, you must pass in `true` for the `includeReadOnly` parameter to include those values."}]},{"pos":[32372,32490],"content":"A &lt;xref:System.Collections.IDictionary?displayProperty=fullName&gt; used to store the values of the specified cell.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.IDictionary?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> used to store the values of the specified cell.","pos":[0,118],"source":"A &lt;xref:System.Collections.IDictionary?displayProperty=fullName&gt; used to store the values of the specified cell."}]},{"pos":[32584,32682],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TableCell\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the values to retrieve.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.WebControls.TableCell\"></xref> that contains the values to retrieve."},{"pos":[32779,32864],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.DataControlRowState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Web.UI.WebControls.DataControlRowState\"></xref> values."},{"pos":[32937,33115],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to include the values of read-only fields; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to include the values of read-only fields; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[33711,33828],"content":"Formats the specified field value for a cell in the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.BoundField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Formats the specified field value for a cell in the <xref href=\"System.Web.UI.WebControls.BoundField\"></xref> object."},{"pos":[33841,34225],"content":"The FormatDataValue method is a helper method used to transform a field value to the format specified by the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property. If a field value is null, the value of the <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> property is returned.      > [!NOTE] >  This method is used primarily by control developers.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The FormatDataValue method is a helper method used to transform a field value to the format specified by the &lt;xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A&gt; property.","pos":[0,182],"source":"The FormatDataValue method is a helper method used to transform a field value to the format specified by the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property."},{"content":"If a field value is null, the value of the &lt;xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A&gt; property is returned.","pos":[183,310],"source":" If a field value is null, the value of the <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> property is returned."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This method is used primarily by control developers.","pos":[316,381],"source":"      > [!NOTE] >  This method is used primarily by control developers."}]},{"pos":[34405,34431],"content":"The field value to format.","needQuote":true,"needEscape":true,"nodes":[{"content":"The field value to format.","pos":[0,26]}]},{"pos":[34495,34651],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to encode the value; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to encode the value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[34709,34824],"content":"The field value converted to the format specified by <xref:System.Web.UI.WebControls.BoundField.DataFormatString*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The field value converted to the format specified by &lt;xref:System.Web.UI.WebControls.BoundField.DataFormatString*&gt;.","pos":[0,115],"source":"The field value converted to the format specified by <xref:System.Web.UI.WebControls.BoundField.DataFormatString*>."}]},{"pos":[35327,35470],"content":"Retrieves the value used for a field's value when rendering the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.BoundField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object in a designer.","needQuote":true,"needEscape":true,"source":"Retrieves the value used for a field's value when rendering the <xref href=\"System.Web.UI.WebControls.BoundField\"></xref> object in a designer."},{"pos":[35483,35868],"content":"The GetDesignTimeValue method is a helper method used to determine what value to display for a field when rendering the <xref:System.Web.UI.WebControls.BoundField> object in a designer. If real data cannot be retrieved from the data source at design time, the value returned by this method is displayed instead.      > [!NOTE] >  This method is used primarily by control developers.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetDesignTimeValue method is a helper method used to determine what value to display for a field when rendering the &lt;xref:System.Web.UI.WebControls.BoundField&gt; object in a designer.","pos":[0,185],"source":"The GetDesignTimeValue method is a helper method used to determine what value to display for a field when rendering the <xref:System.Web.UI.WebControls.BoundField> object in a designer."},{"content":"If real data cannot be retrieved from the data source at design time, the value returned by this method is displayed instead.","pos":[186,311]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This method is used primarily by control developers.","pos":[317,382],"source":"      > [!NOTE] >  This method is used primarily by control developers."}]},{"pos":[36017,36075],"content":"The value to display in the designer as the field's value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to display in the designer as the field's value.","pos":[0,58]}]},{"pos":[36598,36709],"content":"Retrieves the value of the field bound to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.BoundField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Retrieves the value of the field bound to the <xref href=\"System.Web.UI.WebControls.BoundField\"></xref> object."},{"pos":[36722,37170],"content":"The GetValue method is a helper method used to determine the value of a field. If the <xref:System.Web.UI.WebControls.BoundField> object is being displayed in a designer and the field value cannot be determined at design time, the value returned from the <xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> method is returned instead of the actual field value.      > [!NOTE] >  This method is used primarily by control developers.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetValue method is a helper method used to determine the value of a field.","pos":[0,78]},{"content":"If the &lt;xref:System.Web.UI.WebControls.BoundField&gt; object is being displayed in a designer and the field value cannot be determined at design time, the value returned from the &lt;xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A&gt; method is returned instead of the actual field value.","pos":[79,374],"source":" If the <xref:System.Web.UI.WebControls.BoundField> object is being displayed in a designer and the field value cannot be determined at design time, the value returned from the <xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> method is returned instead of the actual field value."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This method is used primarily by control developers.","pos":[380,445],"source":"      > [!NOTE] >  This method is used primarily by control developers."}]},{"pos":[37367,37401],"content":"The container for the field value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The container for the field value.","pos":[0,34]}]},{"pos":[37459,37553],"content":"The value of the field bound to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.BoundField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The value of the field bound to the <xref href=\"System.Web.UI.WebControls.BoundField\"></xref>."},{"pos":[38418,38490],"content":"Gets or sets the text that is displayed in the header of a data control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the text that is displayed in the header of a data control.","pos":[0,72]}]},{"pos":[38502,38807],"content":"Use the HeaderText property to identify a field in a data control with a friendly name. The most common application of the HeaderText property is to provide meaningful column names to data-bound fields in a <xref:System.Web.UI.WebControls.GridView> or <xref:System.Web.UI.WebControls.DetailsView> control.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the HeaderText property to identify a field in a data control with a friendly name. The most common application of the HeaderText property is to provide meaningful column names to data-bound fields in a <xref:System.Web.UI.WebControls.GridView> or <xref:System.Web.UI.WebControls.DetailsView> control.","pos":[0,305],"nodes":[{"content":"Use the HeaderText property to identify a field in a data control with a friendly name.","pos":[0,87]},{"content":"The most common application of the HeaderText property is to provide meaningful column names to data-bound fields in a &lt;xref:System.Web.UI.WebControls.GridView&gt; or &lt;xref:System.Web.UI.WebControls.DetailsView&gt; control.","pos":[88,305],"source":" The most common application of the HeaderText property is to provide meaningful column names to data-bound fields in a <xref:System.Web.UI.WebControls.GridView> or <xref:System.Web.UI.WebControls.DetailsView> control."}]}]},{"pos":[38936,39030],"content":"The text displayed in the header of a data control. The default value is an empty string (\"\").","needQuote":true,"needEscape":true,"nodes":[{"content":"The text displayed in the header of a data control. The default value is an empty string (\"\").","pos":[0,94],"nodes":[{"content":"The text displayed in the header of a data control.","pos":[0,51]},{"content":"The default value is an empty string (\"\").","pos":[52,94]}]}]},{"pos":[39484,39650],"content":"Gets or sets a value indicating whether field values are HTML-encoded before they are displayed in a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.BoundField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets or sets a value indicating whether field values are HTML-encoded before they are displayed in a <xref href=\"System.Web.UI.WebControls.BoundField\"></xref> object."},{"pos":[40795,41137],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if field values are HTML-encoded before they are displayed in a <xref href=\"System.Web.UI.WebControls.BoundField\"></xref> object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if field values are HTML-encoded before they are displayed in a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.BoundField\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,265],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if field values are HTML-encoded before they are displayed in a <xref href=\"System.Web.UI.WebControls.BoundField\"></xref> object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[266,342],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[41651,41918],"content":"Gets or sets a value that indicates whether text that is created by applying the &lt;xref:System.Web.UI.WebControls.BoundField.DataFormatString*&gt; property to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.BoundField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value should be HTML encoded when it is displayed.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that indicates whether text that is created by applying the <xref:System.Web.UI.WebControls.BoundField.DataFormatString*> property to the <xref href=\"System.Web.UI.WebControls.BoundField\"></xref> value should be HTML encoded when it is displayed."},{"pos":[42714,42962],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the text should be HTML-encoded; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the text should be HTML-encoded; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,171],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the text should be HTML-encoded; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[172,248],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[43553,43634],"content":"Initializes the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.BoundField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Initializes the <xref href=\"System.Web.UI.WebControls.BoundField\"></xref> object."},{"pos":[43647,44734],"content":"The Initialize method is called by the data control with which the <xref:System.Web.UI.WebControls.BoundField> object is associated to perform basic object initialization for instances of the field, before the field is ever added to a rows collection. Data controls such as <xref:System.Web.UI.WebControls.DetailsView> and <xref:System.Web.UI.WebControls.GridView> call the <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> method in their `CreateChildControls` methods before other methods such as `CreateRow` are called to create specific rows with data.       Call this method when you are writing a custom data-bound control that uses <xref:System.Web.UI.WebControls.TableCell> objects to perform basic initialization for a <xref:System.Web.UI.WebControls.BoundField> object. Implement this method if your <xref:System.Web.UI.WebControls.BoundField>-derived type requires any object initialization before it populates <xref:System.Web.UI.WebControls.TableCell> objects with data or controls in the <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Initialize method is called by the data control with which the &lt;xref:System.Web.UI.WebControls.BoundField&gt; object is associated to perform basic object initialization for instances of the field, before the field is ever added to a rows collection.","pos":[0,251],"source":"The Initialize method is called by the data control with which the <xref:System.Web.UI.WebControls.BoundField> object is associated to perform basic object initialization for instances of the field, before the field is ever added to a rows collection."},{"content":"Data controls such as &lt;xref:System.Web.UI.WebControls.DetailsView&gt; and &lt;xref:System.Web.UI.WebControls.GridView&gt; call the &lt;xref:System.Web.UI.WebControls.DataControlField.Initialize%2A&gt; method in their <ph id=\"ph1\">`CreateChildControls`</ph> methods before other methods such as <ph id=\"ph2\">`CreateRow`</ph> are called to create specific rows with data.","pos":[252,570],"source":" Data controls such as <xref:System.Web.UI.WebControls.DetailsView> and <xref:System.Web.UI.WebControls.GridView> call the <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> method in their `CreateChildControls` methods before other methods such as `CreateRow` are called to create specific rows with data."},{"content":"Call this method when you are writing a custom data-bound control that uses &lt;xref:System.Web.UI.WebControls.TableCell&gt; objects to perform basic initialization for a &lt;xref:System.Web.UI.WebControls.BoundField&gt; object.","pos":[577,793],"source":"       Call this method when you are writing a custom data-bound control that uses <xref:System.Web.UI.WebControls.TableCell> objects to perform basic initialization for a <xref:System.Web.UI.WebControls.BoundField> object."},{"content":"Implement this method if your &lt;xref:System.Web.UI.WebControls.BoundField&gt;-derived type requires any object initialization before it populates &lt;xref:System.Web.UI.WebControls.TableCell&gt; objects with data or controls in the &lt;xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A&gt; method.","pos":[794,1085],"source":" Implement this method if your <xref:System.Web.UI.WebControls.BoundField>-derived type requires any object initialization before it populates <xref:System.Web.UI.WebControls.TableCell> objects with data or controls in the <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> method."}]},{"pos":[44930,45090],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if sorting is supported; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if sorting is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[45162,45251],"content":"The data control that owns the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.BoundField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The data control that owns the <xref href=\"System.Web.UI.WebControls.BoundField\"></xref>."},{"pos":[45310,45386],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in all cases.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> in all cases."},{"pos":[46368,46485],"content":"Initializes the specified <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TableCell\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to the specified row state.","needQuote":true,"needEscape":true,"source":"Initializes the specified <xref href=\"System.Web.UI.WebControls.TableCell\"></xref> object to the specified row state."},{"pos":[46498,47366],"content":"The InitializeCell method is implemented by <xref:System.Web.UI.WebControls.BoundField>-derived types to add text and controls to a <xref:System.Web.UI.WebControls.TableCell> object of a data control that uses tables to display a user interface (UI). These data controls create the complete table structure row-by-row when the control's `CreateChildControls` method is called. The InitializeCell method is called by the `InitializeRow` method of data controls such as <xref:System.Web.UI.WebControls.DetailsView> and <xref:System.Web.UI.WebControls.GridView>.       Call this method when you are writing a custom data-bound control that uses <xref:System.Web.UI.WebControls.TableCell> objects to initialize the cells of the table structure with data or controls. Implement this method when you are writing a <xref:System.Web.UI.WebControls.BoundField>-derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The InitializeCell method is implemented by &lt;xref:System.Web.UI.WebControls.BoundField&gt;-derived types to add text and controls to a &lt;xref:System.Web.UI.WebControls.TableCell&gt; object of a data control that uses tables to display a user interface (UI).","pos":[0,250],"source":"The InitializeCell method is implemented by <xref:System.Web.UI.WebControls.BoundField>-derived types to add text and controls to a <xref:System.Web.UI.WebControls.TableCell> object of a data control that uses tables to display a user interface (UI)."},{"content":"These data controls create the complete table structure row-by-row when the control's <ph id=\"ph1\">`CreateChildControls`</ph> method is called.","pos":[251,376],"source":" These data controls create the complete table structure row-by-row when the control's `CreateChildControls` method is called."},{"content":"The InitializeCell method is called by the <ph id=\"ph1\">`InitializeRow`</ph> method of data controls such as &lt;xref:System.Web.UI.WebControls.DetailsView&gt; and &lt;xref:System.Web.UI.WebControls.GridView&gt;.","pos":[377,559],"source":" The InitializeCell method is called by the `InitializeRow` method of data controls such as <xref:System.Web.UI.WebControls.DetailsView> and <xref:System.Web.UI.WebControls.GridView>."},{"content":"Call this method when you are writing a custom data-bound control that uses &lt;xref:System.Web.UI.WebControls.TableCell&gt; objects to initialize the cells of the table structure with data or controls.","pos":[566,762],"source":"       Call this method when you are writing a custom data-bound control that uses <xref:System.Web.UI.WebControls.TableCell> objects to initialize the cells of the table structure with data or controls."},{"content":"Implement this method when you are writing a &lt;xref:System.Web.UI.WebControls.BoundField&gt;-derived class.","pos":[763,866],"source":" Implement this method when you are writing a <xref:System.Web.UI.WebControls.BoundField>-derived class."}]},{"pos":[47717,47792],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TableCell\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to initialize.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.WebControls.TableCell\"></xref> to initialize."},{"pos":[47889,47974],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.DataControlCellType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Web.UI.WebControls.DataControlCellType\"></xref> values."},{"pos":[48071,48156],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.DataControlRowState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Web.UI.WebControls.DataControlRowState\"></xref> values."},{"pos":[48220,48252],"content":"The zero-based index of the row.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the row.","pos":[0,32]}]},{"pos":[49062,49179],"content":"Initializes the specified <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TableCell\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to the specified row state.","needQuote":true,"needEscape":true,"source":"Initializes the specified <xref href=\"System.Web.UI.WebControls.TableCell\"></xref> object to the specified row state."},{"pos":[49191,49324],"content":"The InitializeDataCell method is a helper method used to initialize a cell in the <xref:System.Web.UI.WebControls.BoundField> object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The InitializeDataCell method is a helper method used to initialize a cell in the &lt;xref:System.Web.UI.WebControls.BoundField&gt; object.","pos":[0,133],"source":"The InitializeDataCell method is a helper method used to initialize a cell in the <xref:System.Web.UI.WebControls.BoundField> object."}]},{"pos":[49610,49685],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TableCell\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to initialize.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.WebControls.TableCell\"></xref> to initialize."},{"pos":[49782,49867],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.DataControlRowState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Web.UI.WebControls.DataControlRowState\"></xref> values."},{"pos":[50396,50465],"content":"Restores the previously stored view-state information for this field.","needQuote":true,"needEscape":true,"nodes":[{"content":"Restores the previously stored view-state information for this field.","pos":[0,69]}]},{"pos":[50620,50664],"content":"Represents the control state to be restored.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the control state to be restored.","pos":[0,44]}]},{"pos":[51146,51224],"content":"Gets or sets the caption displayed for a field when the field's value is null.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the caption displayed for a field when the field's value is null.","pos":[0,78]}]},{"pos":[51237,51938],"content":"Sometimes a field's value is stored as null in the data source. You can specify a custom caption to display for fields that have a null value by setting the NullDisplayText property. If this property is not set, null field values are displayed as empty strings (\"\"). When a record is being updated or inserted in a data-bound control, if the user enters the value specified by this property (other than an empty string) for a field in a data-bound control, that value is automatically converted to null in the data source.      > [!NOTE] >  To convert an empty string field value to a null value, set the <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> property to `true`.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Sometimes a field's value is stored as null in the data source.","pos":[0,63]},{"content":"You can specify a custom caption to display for fields that have a null value by setting the NullDisplayText property.","pos":[64,182]},{"content":"If this property is not set, null field values are displayed as empty strings (\"\").","pos":[183,266]},{"content":"When a record is being updated or inserted in a data-bound control, if the user enters the value specified by this property (other than an empty string) for a field in a data-bound control, that value is automatically converted to null in the data source.","pos":[267,522]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  To convert an empty string field value to a null value, set the &lt;xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A&gt; property to <ph id=\"ph2\">`true`</ph>.","pos":[528,696],"source":"      > [!NOTE] >  To convert an empty string field value to a null value, set the <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> property to `true`."}]},{"pos":[52452,52601],"content":"The caption displayed for a field when the field's value is null. The default is an empty string (\"\"), which indicates that this property is not set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The caption displayed for a field when the field's value is null. The default is an empty string (\"\"), which indicates that this property is not set.","pos":[0,149],"nodes":[{"content":"The caption displayed for a field when the field's value is null.","pos":[0,65]},{"content":"The default is an empty string (\"\"), which indicates that this property is not set.","pos":[66,149]}]}]},{"pos":[53201,53300],"content":"Binds the value of a field to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.BoundField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Binds the value of a field to the <xref href=\"System.Web.UI.WebControls.BoundField\"></xref> object."},{"pos":[53312,53543],"content":"The <xref:System.Web.UI.WebControls.CheckBoxField.OnDataBindField%2A> method is a helper method used to bind the value of a field in the data source to a corresponding cell in the <xref:System.Web.UI.WebControls.BoundField> object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.UI.WebControls.CheckBoxField.OnDataBindField%2A&gt; method is a helper method used to bind the value of a field in the data source to a corresponding cell in the &lt;xref:System.Web.UI.WebControls.BoundField&gt; object.","pos":[0,231],"source":"The <xref:System.Web.UI.WebControls.CheckBoxField.OnDataBindField%2A> method is a helper method used to bind the value of a field in the data source to a corresponding cell in the <xref:System.Web.UI.WebControls.BoundField> object."}]},{"pos":[53714,53738],"content":"The source of the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The source of the event.","pos":[0,24]}]},{"pos":[53799,53855],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[54030,54202],"content":"The control to which the field value is bound is not a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.TableCell\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The control to which the field value is bound is not a <xref href=\"System.Web.UI.WebControls.TextBox\"></xref> or a <xref href=\"System.Web.UI.WebControls.TableCell\"></xref>."},{"pos":[54568,54660],"content":"Gets or sets a value indicating whether the value of the field can be modified in edit mode.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the value of the field can be modified in edit mode.","pos":[0,92]}]},{"pos":[54673,55140],"content":"Use the ReadOnly property to prevent the values displayed in a <xref:System.Web.UI.WebControls.BoundField> object from being modified. When a data-bound control is in edit mode, fields that are read-only are displayed as plain text, without any editing controls.      > [!NOTE] >  The ReadOnly property applies only to edit mode. To prevent fields from showing up in insert mode, use the <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the ReadOnly property to prevent the values displayed in a &lt;xref:System.Web.UI.WebControls.BoundField&gt; object from being modified.","pos":[0,134],"source":"Use the ReadOnly property to prevent the values displayed in a <xref:System.Web.UI.WebControls.BoundField> object from being modified."},{"content":"When a data-bound control is in edit mode, fields that are read-only are displayed as plain text, without any editing controls.","pos":[135,262]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The ReadOnly property applies only to edit mode.","pos":[268,329],"source":"      > [!NOTE] >  The ReadOnly property applies only to edit mode."},{"content":"To prevent fields from showing up in insert mode, use the &lt;xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A&gt; property.","pos":[330,464],"source":" To prevent fields from showing up in insert mode, use the <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> property."}]},{"pos":[55684,55966],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to prevent the value of the field from being modified in edit mode; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to prevent the value of the field from being modified in edit mode; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,203],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to prevent the value of the field from being modified in edit mode; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[204,282],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[56458,56587],"content":"Gets a value indicating whether HTML encoding is supported by a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.BoundField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether HTML encoding is supported by a <xref href=\"System.Web.UI.WebControls.BoundField\"></xref> object."},{"pos":[56599,56795],"content":"The SupportsHtmlEncode property is a helper property used by the <xref:System.Web.UI.WebControls.BoundField> class and derived classes to determine whether HTML encoding is supported by the class.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The SupportsHtmlEncode property is a helper property used by the &lt;xref:System.Web.UI.WebControls.BoundField&gt; class and derived classes to determine whether HTML encoding is supported by the class.","pos":[0,196],"source":"The SupportsHtmlEncode property is a helper property used by the <xref:System.Web.UI.WebControls.BoundField> class and derived classes to determine whether HTML encoding is supported by the class."}]},{"pos":[56928,57111],"content":"Always returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to indicate that HTML encoding is supported by a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.BoundField\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Always returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate that HTML encoding is supported by a <xref href=\"System.Web.UI.WebControls.BoundField\"></xref>."},{"pos":[57590,57623],"content":"Represents the \"this\" expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the \"this\" expression.","pos":[0,33]}]},{"pos":[57636,57946],"content":"This field is used to indicate that the <xref:System.Web.UI.WebControls.BoundField> object should bind against the data source itself, rather than a field of the data source. In this case, the object's `ToString` value will be displayed in the field.       This field is used primarily by control developers.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This field is used to indicate that the &lt;xref:System.Web.UI.WebControls.BoundField&gt; object should bind against the data source itself, rather than a field of the data source.","pos":[0,174],"source":"This field is used to indicate that the <xref:System.Web.UI.WebControls.BoundField> object should bind against the data source itself, rather than a field of the data source."},{"content":"In this case, the object's <ph id=\"ph1\">`ToString`</ph> value will be displayed in the field.","pos":[175,250],"source":" In this case, the object's `ToString` value will be displayed in the field."},{"content":"This field is used primarily by control developers.","pos":[257,308]}]},{"pos":[58074,58086],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[58524,58611],"content":"Gets or sets a value that determines whether the control validates client input or not.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that determines whether the control validates client input or not.","pos":[0,87]}]},{"pos":[58787,58932],"content":"A value that determines whether the control validates client input or not. The default is <xref href=\"System.Web.UI.ValidateRequestMode\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value that determines whether the control validates client input or not.","pos":[0,74]},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ValidateRequestMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[75,145],"source":" The default is <xref href=\"System.Web.UI.ValidateRequestMode\"></xref>."}]},{"pos":[59469,59599],"content":"Determines whether the controls contained in a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.BoundField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object support callbacks.","needQuote":true,"needEscape":true,"source":"Determines whether the controls contained in a <xref href=\"System.Web.UI.WebControls.BoundField\"></xref> object support callbacks."},{"pos":[59612,60000],"content":"The ValidateSupportsCallback method is a helper method used to determine whether the controls contained in a <xref:System.Web.UI.WebControls.BoundField> object support callbacks. This method has been implemented as an empty method (a method that does not contain any code) to indicate that callbacks are supported.      > [!NOTE] >  This method is used primarily by control developers.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ValidateSupportsCallback method is a helper method used to determine whether the controls contained in a &lt;xref:System.Web.UI.WebControls.BoundField&gt; object support callbacks.","pos":[0,178],"source":"The ValidateSupportsCallback method is a helper method used to determine whether the controls contained in a <xref:System.Web.UI.WebControls.BoundField> object support callbacks."},{"content":"This method has been implemented as an empty method (a method that does not contain any code) to indicate that callbacks are supported.","pos":[179,314]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This method is used primarily by control developers.","pos":[320,385],"source":"      > [!NOTE] >  This method is used primarily by control developers."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.WebControls.BoundField\n  id: BoundField\n  children:\n  - System.Web.UI.WebControls.BoundField.#ctor\n  - System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode\n  - System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull\n  - System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)\n  - System.Web.UI.WebControls.BoundField.CreateField\n  - System.Web.UI.WebControls.BoundField.DataField\n  - System.Web.UI.WebControls.BoundField.DataFormatString\n  - System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)\n  - System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)\n  - System.Web.UI.WebControls.BoundField.GetDesignTimeValue\n  - System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)\n  - System.Web.UI.WebControls.BoundField.HeaderText\n  - System.Web.UI.WebControls.BoundField.HtmlEncode\n  - System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString\n  - System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)\n  - System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)\n  - System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)\n  - System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)\n  - System.Web.UI.WebControls.BoundField.NullDisplayText\n  - System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)\n  - System.Web.UI.WebControls.BoundField.ReadOnly\n  - System.Web.UI.WebControls.BoundField.SupportsHtmlEncode\n  - System.Web.UI.WebControls.BoundField.ThisExpression\n  - System.Web.UI.WebControls.BoundField.ValidateRequestMode\n  - System.Web.UI.WebControls.BoundField.ValidateSupportsCallback\n  langs:\n  - csharp\n  name: BoundField\n  nameWithType: BoundField\n  fullName: System.Web.UI.WebControls.BoundField\n  type: Class\n  summary: Represents a field that is displayed as text in a data-bound control.\n  remarks: \"The BoundField class is used by data-bound controls (such as <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>) to display the value of a field as text. The BoundField object is displayed differently depending on the data-bound control in which it is used. For example, the <xref:System.Web.UI.WebControls.GridView> control displays a BoundField object as a column, while the <xref:System.Web.UI.WebControls.DetailsView> control displays it as a row.  \\n  \\n To specify the field to display in a BoundField object, set the <xref:System.Web.UI.WebControls.BoundField.DataField%2A> property to the field's name. The field's value can be HTML-encoded before it is displayed by setting the <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> property to `true`. You can apply a custom formatting string to the field's value by setting the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property. When the <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> property is `true`, the encoded string value of the field is used in the custom format string. By default, the formatting string is applied to field values only when the data-bound control is in read-only mode. To apply the formatting string to values displayed while the data-bound control is in edit mode, set the <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> property to `true`. If a field's value is null, you can display a custom caption by setting the <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> property. The BoundField object can also automatically convert empty string (\\\"\\\") field values to null values by setting the <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> property to `true`.  \\n  \\n You can hide a BoundField object in a data-bound control by setting the <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> property to `false`. To prevent the value of a field from being modified in edit mode, set the <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> property to `true`. In data-bound controls that support inserting records (such as the <xref:System.Web.UI.WebControls.DetailsView> control), you can hide a BoundField object by setting the <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> property to `false`. This is commonly done when you want to hide an automatically generated key field in insert mode.  \\n  \\n You can customize the header and footer sections of a BoundField object. To display a caption in the header or footer sections, set the <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> or <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> properties, respectively. Instead of displaying text in the header section, you can display an image by setting the <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> property. The header section can be hidden in the BoundField object by setting the <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> property to `false`.  \\n  \\n> [!NOTE]\\n>  Some data-bound controls (such as the <xref:System.Web.UI.WebControls.GridView> control) can show or hide only the entire header section of the control. These data-bound controls do not support the <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> property for an individual bound field. To show or hide the entire header section of a data-bound control (if available), use the control's `ShowHeader` property.  \\n  \\n You also can customize the appearance of the BoundField object (font color, background color, and so on) by setting the style properties for the different parts of the field. The following table lists the different style properties.  \\n  \\n|Style property|Description|  \\n|--------------------|-----------------|  \\n|<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|The style settings for the child Web server controls of the BoundField object.|  \\n|<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|The style settings for the footer section of the BoundField object.|  \\n|<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|The style settings for the header section of the BoundField object.|  \\n|<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|The style settings for the data items in the BoundField object.|\"\n  example:\n  - \"The following code example demonstrates how to use a BoundField object to display the values of a field in a <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n [!code-vb[BoundField#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_236_1.aspx)]\\n [!code-cs[BoundField#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_236_1.aspx)]\"\n  syntax:\n    content: 'public class BoundField : System.Web.UI.WebControls.DataControlField'\n  inheritance:\n  - System.Object\n  - System.Web.UI.WebControls.DataControlField\n  implements: []\n  inheritedMembers:\n  - System.Web.UI.WebControls.DataControlField.AccessibleHeaderText\n  - System.Web.UI.WebControls.DataControlField.CloneField\n  - System.Web.UI.WebControls.DataControlField.Control\n  - System.Web.UI.WebControls.DataControlField.ControlStyle\n  - System.Web.UI.WebControls.DataControlField.DesignMode\n  - System.Web.UI.WebControls.DataControlField.FooterStyle\n  - System.Web.UI.WebControls.DataControlField.FooterText\n  - System.Web.UI.WebControls.DataControlField.HeaderImageUrl\n  - System.Web.UI.WebControls.DataControlField.HeaderStyle\n  - System.Web.UI.WebControls.DataControlField.InsertVisible\n  - System.Web.UI.WebControls.DataControlField.IsTrackingViewState\n  - System.Web.UI.WebControls.DataControlField.ItemStyle\n  - System.Web.UI.WebControls.DataControlField.OnFieldChanged\n  - System.Web.UI.WebControls.DataControlField.SaveViewState\n  - System.Web.UI.WebControls.DataControlField.ShowHeader\n  - System.Web.UI.WebControls.DataControlField.SortExpression\n  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema\n  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState\n  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)\n  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState\n  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState\n  - System.Web.UI.WebControls.DataControlField.ToString\n  - System.Web.UI.WebControls.DataControlField.TrackViewState\n  - System.Web.UI.WebControls.DataControlField.ViewState\n  - System.Web.UI.WebControls.DataControlField.Visible\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BoundField.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.WebControls.BoundField\n  langs:\n  - csharp\n  name: BoundField()\n  nameWithType: BoundField.BoundField()\n  fullName: System.Web.UI.WebControls.BoundField.BoundField()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.BoundField\"></xref> class.\n  remarks: \"Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.BoundField> class. This constructor is commonly used when adding fields to a dynamically created data-bound control.  \\n  \\n To dynamically add a <xref:System.Web.UI.WebControls.BoundField> object to a data-bound control, create a new <xref:System.Web.UI.WebControls.BoundField> object, set its properties, and then add it to the data-bound control's field collection. For example, if you are using the <xref:System.Web.UI.WebControls.GridView> control, add the <xref:System.Web.UI.WebControls.BoundField> object to the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection.  \\n  \\n> [!NOTE]\\n>  Although you can dynamically add fields to a data-bound control, it is strongly recommended that fields be statically declared and then shown or hidden, as appropriate. Statically declaring all of your fields reduces the size of the view state for the parent data-bound control.\"\n  example:\n  - \"The following code example demonstrates how to use the constructor to dynamically add a <xref:System.Web.UI.WebControls.BoundField> object to a <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n [!code-cs[BoundFieldCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_150_1.aspx)]\\n [!code-vb[BoundFieldCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_150_1.aspx)]\"\n  syntax:\n    content: public BoundField ();\n    parameters: []\n  overload: System.Web.UI.WebControls.BoundField.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode\n  id: ApplyFormatInEditMode\n  parent: System.Web.UI.WebControls.BoundField\n  langs:\n  - csharp\n  name: ApplyFormatInEditMode\n  nameWithType: BoundField.ApplyFormatInEditMode\n  fullName: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value indicating whether the formatting string specified by the <xref:System.Web.UI.WebControls.BoundField.DataFormatString*> property is applied to field values when the data-bound control that contains the <xref href=\"System.Web.UI.WebControls.BoundField\"></xref> object is in edit mode.\n  remarks: \"Data-bound controls (such as <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.FormView>, and <xref:System.Web.UI.WebControls.GridView>) have different display modes that allow the user to read, edit, or insert records. By default, the formatting string specified by the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property is applied to field values only when the data-bound control is in read-only mode. To apply the formatting string to values displayed while the data-bound control is in edit mode, set the ApplyFormatInEditMode property to `true`.  \\n  \\n> [!NOTE]\\n>  A <xref:System.Web.UI.WebControls.BoundField> object does not automatically remove the formatting when the field is updated in the data source. If you do not want the formatting as part of the value stored, you will need to remove the formatting programmatically.\"\n  example:\n  - \"The following code example demonstrates how to use the ApplyFormatInEditMode property to apply the formatting string to field values while a <xref:System.Web.UI.WebControls.GridView> control is in edit mode. The formatting is then programmatically removed before the value is updated in the data source.  \\n  \\n [!code-vb[BoundFieldApplyFormatInEditMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1333_1.aspx)]\\n [!code-cs[BoundFieldApplyFormatInEditMode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1333_1.aspx)]\"\n  syntax:\n    content: public virtual bool ApplyFormatInEditMode { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to apply the formatting string to field values in edit mode; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull\n  id: ConvertEmptyStringToNull\n  parent: System.Web.UI.WebControls.BoundField\n  langs:\n  - csharp\n  name: ConvertEmptyStringToNull\n  nameWithType: BoundField.ConvertEmptyStringToNull\n  fullName: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value indicating whether empty string values (\"\") are automatically converted to null values when the data field is updated in the data source.\n  remarks: \"Sometimes the user might enter an empty string for a field value when updating or inserting records. Use the ConvertEmptyStringToNull property to specify whether an empty string value is automatically converted to null when the data field is updated in the data source.  \\n  \\n> [!NOTE]\\n>  By default, a <xref:System.Web.UI.WebControls.BoundField> object displays null values as empty strings. To display a different value, set the <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> property.\"\n  example:\n  - \"The following code example demonstrates how to use the ConvertEmptyStringToNull property to specify that an empty string (\\\"\\\") field value should automatically be converted to null.  \\n  \\n [!code-vb[BoundFieldConvertEmptyStringToNull#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1108_1.aspx)]\\n [!code-cs[BoundFieldConvertEmptyStringToNull#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1108_1.aspx)]\"\n  syntax:\n    content: public virtual bool ConvertEmptyStringToNull { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to automatically convert empty string values to null values; otherwise, the <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)\n  id: CopyProperties(System.Web.UI.WebControls.DataControlField)\n  parent: System.Web.UI.WebControls.BoundField\n  langs:\n  - csharp\n  name: CopyProperties(DataControlField)\n  nameWithType: BoundField.CopyProperties(DataControlField)\n  fullName: System.Web.UI.WebControls.BoundField.CopyProperties(DataControlField)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Copies the properties of the current <xref href=\"System.Web.UI.WebControls.BoundField\"></xref> object to the specified <xref href=\"System.Web.UI.WebControls.DataControlField\"></xref> object.\n  remarks: The CopyProperties method is a helper method used by the <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName> method to copy the properties of the current <xref:System.Web.UI.WebControls.BoundField> object to the <xref:System.Web.UI.WebControls.DataControlField> object created by the method.\n  syntax:\n    content: protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);\n    parameters:\n    - id: newField\n      type: System.Web.UI.WebControls.DataControlField\n      description: The <xref href=\"System.Web.UI.WebControls.DataControlField\"></xref> to copy the properties of the current <xref href=\"System.Web.UI.WebControls.BoundField\"></xref> to.\n  overload: System.Web.UI.WebControls.BoundField.CopyProperties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BoundField.CreateField\n  id: CreateField\n  parent: System.Web.UI.WebControls.BoundField\n  langs:\n  - csharp\n  name: CreateField()\n  nameWithType: BoundField.CreateField()\n  fullName: System.Web.UI.WebControls.BoundField.CreateField()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Creates an empty <xref href=\"System.Web.UI.WebControls.BoundField\"></xref> object.\n  remarks: The CreateField method is a helper method used by the <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName> method to create an empty <xref:System.Web.UI.WebControls.BoundField> object to copy the properties of the current <xref:System.Web.UI.WebControls.BoundField> object to.\n  syntax:\n    content: protected override System.Web.UI.WebControls.DataControlField CreateField ();\n    parameters: []\n    return:\n      type: System.Web.UI.WebControls.DataControlField\n      description: An empty <xref href=\"System.Web.UI.WebControls.BoundField\"></xref>.\n  overload: System.Web.UI.WebControls.BoundField.CreateField*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BoundField.DataField\n  id: DataField\n  parent: System.Web.UI.WebControls.BoundField\n  langs:\n  - csharp\n  name: DataField\n  nameWithType: BoundField.DataField\n  fullName: System.Web.UI.WebControls.BoundField.DataField\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the name of the data field to bind to the <xref href=\"System.Web.UI.WebControls.BoundField\"></xref> object.\n  remarks: \"Use the DataField property to specify the name of the data field to bind to the <xref:System.Web.UI.WebControls.BoundField> object. The values of the specified field are displayed in the <xref:System.Web.UI.WebControls.BoundField> object as text. You can optionally format the displayed text by setting the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property.  \\n  \\n> [!NOTE]\\n>  If a field's value is null, an empty string (\\\"\\\") is displayed for the value by default. To specify an alternate caption, set the <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> property.\"\n  example:\n  - \"The following code example demonstrates how to use the DataField property to specify which field to display in a <xref:System.Web.UI.WebControls.BoundField> field column of a <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n [!code-vb[BoundField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_680_1.aspx)]\\n [!code-cs[BoundField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_680_1.aspx)]\"\n  syntax:\n    content: public virtual string DataField { get; set; }\n    return:\n      type: System.String\n      description: The name of the data field to bind to the <xref href=\"System.Web.UI.WebControls.BoundField\"></xref>. The default is an empty string (\"\"), which indicates that this property is not set.\n  overload: System.Web.UI.WebControls.BoundField.DataField*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BoundField.DataFormatString\n  id: DataFormatString\n  parent: System.Web.UI.WebControls.BoundField\n  langs:\n  - csharp\n  name: DataFormatString\n  nameWithType: BoundField.DataFormatString\n  fullName: System.Web.UI.WebControls.BoundField.DataFormatString\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the string that specifies the display format for the value of the field.\n  remarks: \"Use the DataFormatString property to specify a custom display format for the values that are displayed in the <xref:System.Web.UI.WebControls.BoundField> object. If the DataFormatString property is not set, the field's value is displayed without any special formatting.  \\n  \\n> [!NOTE]\\n>  In versions of ASP.NET earlier than 3.5, you must set the <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> property to `false` in order to format fields that are not string data types. Otherwise, the field value is converted to a string by the default conversion method before the format string that is stored in the DataFormatString property is applied.  \\n  \\n By default, the formatting string is applied to the field value only when the data-bound control that contains the <xref:System.Web.UI.WebControls.BoundField> object is in read-only mode. To apply the formatting string to field values while in edit mode, set the <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> property to `true`.  \\n  \\n The formatting string can be any literal string and usually includes a placeholder for the field's value. For example, in the formatting string `Item Value: {0}`, the field's value is substituted for the {0} placeholder when the string is displayed in the <xref:System.Web.UI.WebControls.BoundField> object. The rest of the formatting string is displayed as literal text.  \\n  \\n If the formatting string does not include a placeholder, only the formatting string itself is included in the final display text (the field's value from the data source is not included). If the placeholder is a 0 (zero) enclosed in curly braces as shown in the preceding example, the field value is converted to a string by the default method. You can append to the zero a string that specifies how the field value should be formatted. For example, the placeholder `{0:C}` for a numeric field specifies that value of the field should be converted to a currency format.  \\n  \\n Formatting is applied by using the <xref:System.String.Format%2A> method. The number that follows the left curly brace is part of the syntax used by that method and indicates which one of a series of values the placeholder should use. Because there is only one field value in each cell, the number that follows the left curly brace can only be set to 0.  \\n  \\n The following table lists the standard format characters for numeric fields. These format characters are not case-sensitive, except for `X`, which displays hexadecimal characters in the case that is specified. You can append a number to most format characters in order to specify how many significant digits or decimal places you want to display.  \\n  \\n> [!NOTE]\\n>  In most cases, formatting depends on the server's culture setting. The examples are for a culture setting of `en-US`.  \\n  \\n|Format character|Description|Example|  \\n|----------------------|-----------------|-------------|  \\n|`C` or `c`|Displays numeric values in currency format. You can specify the number of decimal places.|Format: `{0:C}`<br /><br /> 123.456 -> $123.46<br /><br /> Format: `{0:C3}`<br /><br /> 123.456  -> $123.456|  \\n|`D` or `d`|Displays integer values in decimal format. You can specify the number of digits. (Although the type is referred to as \\\"decimal\\\", the numbers are formatted as integers.)|Format: `{0:D}`<br /><br /> 1234 -> 1234<br /><br /> Format: `{0:D6}`<br /><br /> 1234  -> 001234|  \\n|`E` or `e`|Displays numeric values in scientific (exponential) format. You can specify the number of decimal places.|Format: `{0:E}`<br /><br /> 1052.0329112756 -> 1.052033E+003<br /><br /> Format: `{0:E2}`<br /><br /> -1052.0329112756 -> -1.05e+003|  \\n|`F` or `f`|Displays numeric values in fixed format. You can specify the number of decimal places.|Format: `{0:F}`<br /><br /> 1234.567 -> 1234.57<br /><br /> Format: `{0:F3}`<br /><br /> 1234.567 -> 1234.567|  \\n|`G` or `g`|Displays numeric values in general format (the most compact of either fixed-point or scientific notation). You can specify the number of significant digits.|Format: `{0:G}`<br /><br /> -123.456 -> -123.456<br /><br /> Format: `{0:G2}`<br /><br /> -123.456 -> -120|  \\n|`N` or `n`|Displays numeric values in number format (including group separators and optional negative sign). You can specify the number of decimal places.|Format: `{0:N}`<br /><br /> 1234.567 -> 1,234.57<br /><br /> Format: `{0:N4}`<br /><br /> 1234.567 -> 1,234.5670|  \\n|`P` or `p`|Displays numeric values in percent format. You can specify the number of decimal places.|Format: `{0:P}`<br /><br /> 1 -> 100.00%<br /><br /> Format: `{0:P1}`<br /><br /> .5 -> 50.0%|  \\n|`R` or `r`|Displays <xref:System.Single>, <xref:System.Double>, or `BigInteger` values in round-trip format.|Format: `{0:R}`<br /><br /> 123456789.12345678 -> 123456789.12345678|  \\n|`X` or `x`|Displays integer values in hexadecimal format. You can specify the number of digits.|Format: `{0:X}`<br /><br /> 255 -> FF<br /><br /> Format: `{0:x4}`<br /><br /> 255  -> 00ff|  \\n  \\n For more information and for examples that show formatting for other culture values, see [Standard Numeric Format Strings](~/add/includes/ajax-current-ext-md.md). You can also create custom numeric format strings. For more information, see [Custom Numeric Format Strings](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The following table lists format characters for <xref:System.DateTime> fields. Most of these formatting specifications result in a different output depending on culture settings. The examples are for a <xref:System.DateTime> value of 6/15/2009 1:45:30 PM with a culture setting of `en-US`.  \\n  \\n|Format character|Description|Example|  \\n|----------------------|-----------------|-------------|  \\n|`d`|Short date pattern.|Format: `{0:d}`<br /><br /> 6/15/2009 1:45:30 PM -> 6/15/2009|  \\n|`D`|Long date pattern.|Format: `{0:D}`<br /><br /> 6/15/2009 1:45:30 PM ->Monday, June 15, 2009|  \\n|`f`|Full date/time pattern (short time).|Format: `{0:f}`<br /><br /> 6/15/2009 1:45:30 PM -> Monday, June 15, 2009 1:45 PM|  \\n|`F`|Full date/time pattern (long time).|Format: `{0:F}`<br /><br /> 6/15/2009 1:45:30 PM -> Monday, June 15, 2009 1:45:30 PM|  \\n|`g`|General date/time pattern (short time).|Format: `{0:g}`<br /><br /> 6/15/2009 1:45:30 PM -> 6/15/2009 1:45 PM|  \\n|`G`|General date/time pattern (long time).|Format: `{0:G}`<br /><br /> 6/15/2009 1:45:30 PM -> 6/15/2009 1:45:30 PM|  \\n|`M` or `m`|Month/day pattern.|Format: `{0:M}`<br /><br /> 6/15/2009 1:45:30 PM -> June 15|  \\n|`O` or `o`|Round-trip date/time pattern.|Format: `{0:o}`<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15T13:45:30.0900000|  \\n|`R` or `r`|RFC1123 pattern (for information, see <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A?displayProperty=fullName>).|Format: `{0:R}`<br /><br /> 6/15/2009 1:45:30 PM -> Mon, 15 Jun 2009 20:45:30 GMT|  \\n|`s`|Sortable date/time pattern.|Format: `{0:s}`<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15T13:45:30|  \\n|`t`|Short time pattern.|Format: `{0:t}`<br /><br /> 6/15/2009 1:45:30 PM -> 1:45 PM|  \\n|`T`|Long time pattern.|Format: `{0:T}`<br /><br /> 6/15/2009 1:45:30 PM -> 1:45:30 PM|  \\n|`u`|Universal sortable date/time pattern.|Format: `{0:u}`<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15 20:45:30Z|  \\n|`U`|Universal full date/time pattern.|Format: `{0:U}`<br /><br /> 6/15/2009 1:45:30 PM -> Monday, June 15, 2009 8:45:30 PM|  \\n|`Y` or `y`|Year month pattern.|Format: `{0:Y}`<br /><br /> 6/15/2009 1:45:30 PM -> June, 2009|  \\n  \\n For more information and for examples that show formatting for other culture values, see [Standard Date and Time Format Strings](~/add/includes/ajax-current-ext-md.md). You can also create custom date and time format strings. For more information, see [Custom Date and Time Format Strings](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=191889).  \\n  \\n The following example shows how to use the DataFormatString property to specify a custom display format for the values of a field.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \\n  \\n The following example shows one row of the output that is produced by this example.  \\n  \\n|ProductID|Name|ProductNumber|ListPrice|Weight|ModifiedDate|  \\n|---------------|----------|-------------------|---------------|------------|------------------|  \\n|`000680`|`HL Road Frame - Black, 58`|`#FR-R92B-58`|`$1,431.50`|`1016.040`|`3/11/2004`|\"\n  syntax:\n    content: public virtual string DataFormatString { get; set; }\n    return:\n      type: System.String\n      description: A formatting string that specifies the display format for the value of the field. The default is an empty string (\"\"), which indicates that no special formatting is applied to the field value.\n  overload: System.Web.UI.WebControls.BoundField.DataFormatString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)\n  id: ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)\n  parent: System.Web.UI.WebControls.BoundField\n  langs:\n  - csharp\n  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)\n  nameWithType: BoundField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)\n  fullName: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Fills the specified &lt;xref:System.Collections.IDictionary?displayProperty=fullName&gt; object with the values from the specified <xref href=\"System.Web.UI.WebControls.TableCell\"></xref> object.\n  remarks: \"The ExtractValuesFromCell method is provided as a convenient way to retrieve the values of the fields from the specified <xref:System.Web.UI.WebControls.TableCell> object in a <xref:System.Web.UI.WebControls.BoundField> object.  \\n  \\n> [!NOTE]\\n>  This method is used primarily by control developers.  \\n  \\n This method does not have a return value. Instead, the field values are returned by reference through the <xref:System.Collections.IDictionary?displayProperty=fullName> object passed in for the `dictionary` parameter. After the method has been called, iterate through the <xref:System.Collections.IDictionary?displayProperty=fullName> object to access the field values.  \\n  \\n> [!NOTE]\\n>  If the <xref:System.Web.UI.WebControls.TableCell> object contains read-only field values, you must pass in `true` for the `includeReadOnly` parameter to include those values.\"\n  syntax:\n    content: public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);\n    parameters:\n    - id: dictionary\n      type: System.Collections.Specialized.IOrderedDictionary\n      description: A &lt;xref:System.Collections.IDictionary?displayProperty=fullName&gt; used to store the values of the specified cell.\n    - id: cell\n      type: System.Web.UI.WebControls.DataControlFieldCell\n      description: The <xref href=\"System.Web.UI.WebControls.TableCell\"></xref> that contains the values to retrieve.\n    - id: rowState\n      type: System.Web.UI.WebControls.DataControlRowState\n      description: One of the <xref href=\"System.Web.UI.WebControls.DataControlRowState\"></xref> values.\n    - id: includeReadOnly\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to include the values of read-only fields; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)\n  id: FormatDataValue(System.Object,System.Boolean)\n  parent: System.Web.UI.WebControls.BoundField\n  langs:\n  - csharp\n  name: FormatDataValue(Object,Boolean)\n  nameWithType: BoundField.FormatDataValue(Object,Boolean)\n  fullName: System.Web.UI.WebControls.BoundField.FormatDataValue(Object,Boolean)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Formats the specified field value for a cell in the <xref href=\"System.Web.UI.WebControls.BoundField\"></xref> object.\n  remarks: \"The FormatDataValue method is a helper method used to transform a field value to the format specified by the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property. If a field value is null, the value of the <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> property is returned.  \\n  \\n> [!NOTE]\\n>  This method is used primarily by control developers.\"\n  syntax:\n    content: protected virtual string FormatDataValue (object dataValue, bool encode);\n    parameters:\n    - id: dataValue\n      type: System.Object\n      description: The field value to format.\n    - id: encode\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to encode the value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.String\n      description: The field value converted to the format specified by <xref:System.Web.UI.WebControls.BoundField.DataFormatString*>.\n  overload: System.Web.UI.WebControls.BoundField.FormatDataValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BoundField.GetDesignTimeValue\n  id: GetDesignTimeValue\n  parent: System.Web.UI.WebControls.BoundField\n  langs:\n  - csharp\n  name: GetDesignTimeValue()\n  nameWithType: BoundField.GetDesignTimeValue()\n  fullName: System.Web.UI.WebControls.BoundField.GetDesignTimeValue()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Retrieves the value used for a field's value when rendering the <xref href=\"System.Web.UI.WebControls.BoundField\"></xref> object in a designer.\n  remarks: \"The GetDesignTimeValue method is a helper method used to determine what value to display for a field when rendering the <xref:System.Web.UI.WebControls.BoundField> object in a designer. If real data cannot be retrieved from the data source at design time, the value returned by this method is displayed instead.  \\n  \\n> [!NOTE]\\n>  This method is used primarily by control developers.\"\n  syntax:\n    content: protected virtual object GetDesignTimeValue ();\n    parameters: []\n    return:\n      type: System.Object\n      description: The value to display in the designer as the field's value.\n  overload: System.Web.UI.WebControls.BoundField.GetDesignTimeValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)\n  id: GetValue(System.Web.UI.Control)\n  parent: System.Web.UI.WebControls.BoundField\n  langs:\n  - csharp\n  name: GetValue(Control)\n  nameWithType: BoundField.GetValue(Control)\n  fullName: System.Web.UI.WebControls.BoundField.GetValue(Control)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Retrieves the value of the field bound to the <xref href=\"System.Web.UI.WebControls.BoundField\"></xref> object.\n  remarks: \"The GetValue method is a helper method used to determine the value of a field. If the <xref:System.Web.UI.WebControls.BoundField> object is being displayed in a designer and the field value cannot be determined at design time, the value returned from the <xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> method is returned instead of the actual field value.  \\n  \\n> [!NOTE]\\n>  This method is used primarily by control developers.\"\n  syntax:\n    content: protected virtual object GetValue (System.Web.UI.Control controlContainer);\n    parameters:\n    - id: controlContainer\n      type: System.Web.UI.Control\n      description: The container for the field value.\n    return:\n      type: System.Object\n      description: The value of the field bound to the <xref href=\"System.Web.UI.WebControls.BoundField\"></xref>.\n  overload: System.Web.UI.WebControls.BoundField.GetValue*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: \"The container specified by the <code>controlContainer</code> parameter is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n \\\\- or -  \\n  \\n The container specified by the <code>controlContainer</code> parameter does not have a data item.  \\n  \\n \\\\- or -  \\n  \\n The data field was not found.\"\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BoundField.HeaderText\n  id: HeaderText\n  parent: System.Web.UI.WebControls.BoundField\n  langs:\n  - csharp\n  name: HeaderText\n  nameWithType: BoundField.HeaderText\n  fullName: System.Web.UI.WebControls.BoundField.HeaderText\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the text that is displayed in the header of a data control.\n  remarks: Use the HeaderText property to identify a field in a data control with a friendly name. The most common application of the HeaderText property is to provide meaningful column names to data-bound fields in a <xref:System.Web.UI.WebControls.GridView> or <xref:System.Web.UI.WebControls.DetailsView> control.\n  syntax:\n    content: public override string HeaderText { get; set; }\n    return:\n      type: System.String\n      description: The text displayed in the header of a data control. The default value is an empty string (\"\").\n  overload: System.Web.UI.WebControls.BoundField.HeaderText*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BoundField.HtmlEncode\n  id: HtmlEncode\n  parent: System.Web.UI.WebControls.BoundField\n  langs:\n  - csharp\n  name: HtmlEncode\n  nameWithType: BoundField.HtmlEncode\n  fullName: System.Web.UI.WebControls.BoundField.HtmlEncode\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value indicating whether field values are HTML-encoded before they are displayed in a <xref href=\"System.Web.UI.WebControls.BoundField\"></xref> object.\n  remarks: \"Use the HtmlEncode property to specify whether field values are HTML-encoded to their respective string representations before they are displayed in a <xref:System.Web.UI.WebControls.BoundField> object. For example, if this property is `true`, a string value of \\\"\\\\<script>\\\" would be rendered as \\\"&lt;script&gt;\\\". If this property is `false`, the string would be rendered unchanged.  \\n  \\n> [!NOTE]\\n>  HTML-encoding field values helps to prevent cross-site scripting attacks and malicious content from being displayed. This property should be enabled whenever possible.\"\n  example:\n  - \"The following code example demonstrates how to use the HtmlEncode property to prevent field values from being HTML-encoded before being displayed in a <xref:System.Web.UI.WebControls.BoundField> object.  \\n  \\n [!code-cs[BoundFieldHtmlEncode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_606_1.aspx)]\\n [!code-vb[BoundFieldHtmlEncode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_606_1.aspx)]\"\n  syntax:\n    content: public virtual bool HtmlEncode { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if field values are HTML-encoded before they are displayed in a <xref href=\"System.Web.UI.WebControls.BoundField\"></xref> object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.BoundField.HtmlEncode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString\n  id: HtmlEncodeFormatString\n  parent: System.Web.UI.WebControls.BoundField\n  langs:\n  - csharp\n  name: HtmlEncodeFormatString\n  nameWithType: BoundField.HtmlEncodeFormatString\n  fullName: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value that indicates whether text that is created by applying the <xref:System.Web.UI.WebControls.BoundField.DataFormatString*> property to the <xref href=\"System.Web.UI.WebControls.BoundField\"></xref> value should be HTML encoded when it is displayed.\n  remarks: \"HTML-encoding values can help prevent cross-site scripting attacks and malicious content from being displayed. HTML encoding is also useful when you want to display HTML code in the browser, such as displaying the string \\\"\\\\<br/>\\\" instead of inserting a line break (`<br/>` element) in the page.  \\n  \\n> [!NOTE]\\n>  This property is new in ASP.NET 3.5. Setting this property to `false` restores the default behavior of the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property in versions of ASP.NET earlier than 3.5. For more information, see the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property.\"\n  syntax:\n    content: public virtual bool HtmlEncodeFormatString { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the text should be HTML-encoded; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)\n  id: Initialize(System.Boolean,System.Web.UI.Control)\n  parent: System.Web.UI.WebControls.BoundField\n  langs:\n  - csharp\n  name: Initialize(Boolean,Control)\n  nameWithType: BoundField.Initialize(Boolean,Control)\n  fullName: System.Web.UI.WebControls.BoundField.Initialize(Boolean,Control)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Initializes the <xref href=\"System.Web.UI.WebControls.BoundField\"></xref> object.\n  remarks: \"The Initialize method is called by the data control with which the <xref:System.Web.UI.WebControls.BoundField> object is associated to perform basic object initialization for instances of the field, before the field is ever added to a rows collection. Data controls such as <xref:System.Web.UI.WebControls.DetailsView> and <xref:System.Web.UI.WebControls.GridView> call the <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> method in their `CreateChildControls` methods before other methods such as `CreateRow` are called to create specific rows with data.  \\n  \\n Call this method when you are writing a custom data-bound control that uses <xref:System.Web.UI.WebControls.TableCell> objects to perform basic initialization for a <xref:System.Web.UI.WebControls.BoundField> object. Implement this method if your <xref:System.Web.UI.WebControls.BoundField>-derived type requires any object initialization before it populates <xref:System.Web.UI.WebControls.TableCell> objects with data or controls in the <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> method.\"\n  syntax:\n    content: public override bool Initialize (bool enableSorting, System.Web.UI.Control control);\n    parameters:\n    - id: enableSorting\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if sorting is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: control\n      type: System.Web.UI.Control\n      description: The data control that owns the <xref href=\"System.Web.UI.WebControls.BoundField\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> in all cases.\n  overload: System.Web.UI.WebControls.BoundField.Initialize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)\n  id: InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)\n  parent: System.Web.UI.WebControls.BoundField\n  langs:\n  - csharp\n  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)\n  nameWithType: BoundField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)\n  fullName: System.Web.UI.WebControls.BoundField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Initializes the specified <xref href=\"System.Web.UI.WebControls.TableCell\"></xref> object to the specified row state.\n  remarks: \"The InitializeCell method is implemented by <xref:System.Web.UI.WebControls.BoundField>-derived types to add text and controls to a <xref:System.Web.UI.WebControls.TableCell> object of a data control that uses tables to display a user interface (UI). These data controls create the complete table structure row-by-row when the control's `CreateChildControls` method is called. The InitializeCell method is called by the `InitializeRow` method of data controls such as <xref:System.Web.UI.WebControls.DetailsView> and <xref:System.Web.UI.WebControls.GridView>.  \\n  \\n Call this method when you are writing a custom data-bound control that uses <xref:System.Web.UI.WebControls.TableCell> objects to initialize the cells of the table structure with data or controls. Implement this method when you are writing a <xref:System.Web.UI.WebControls.BoundField>-derived class.\"\n  syntax:\n    content: public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);\n    parameters:\n    - id: cell\n      type: System.Web.UI.WebControls.DataControlFieldCell\n      description: The <xref href=\"System.Web.UI.WebControls.TableCell\"></xref> to initialize.\n    - id: cellType\n      type: System.Web.UI.WebControls.DataControlCellType\n      description: One of the <xref href=\"System.Web.UI.WebControls.DataControlCellType\"></xref> values.\n    - id: rowState\n      type: System.Web.UI.WebControls.DataControlRowState\n      description: One of the <xref href=\"System.Web.UI.WebControls.DataControlRowState\"></xref> values.\n    - id: rowIndex\n      type: System.Int32\n      description: The zero-based index of the row.\n  overload: System.Web.UI.WebControls.BoundField.InitializeCell*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)\n  id: InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)\n  parent: System.Web.UI.WebControls.BoundField\n  langs:\n  - csharp\n  name: InitializeDataCell(DataControlFieldCell,DataControlRowState)\n  nameWithType: BoundField.InitializeDataCell(DataControlFieldCell,DataControlRowState)\n  fullName: System.Web.UI.WebControls.BoundField.InitializeDataCell(DataControlFieldCell,DataControlRowState)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Initializes the specified <xref href=\"System.Web.UI.WebControls.TableCell\"></xref> object to the specified row state.\n  remarks: The InitializeDataCell method is a helper method used to initialize a cell in the <xref:System.Web.UI.WebControls.BoundField> object.\n  syntax:\n    content: protected virtual void InitializeDataCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState);\n    parameters:\n    - id: cell\n      type: System.Web.UI.WebControls.DataControlFieldCell\n      description: The <xref href=\"System.Web.UI.WebControls.TableCell\"></xref> to initialize.\n    - id: rowState\n      type: System.Web.UI.WebControls.DataControlRowState\n      description: One of the <xref href=\"System.Web.UI.WebControls.DataControlRowState\"></xref> values.\n  overload: System.Web.UI.WebControls.BoundField.InitializeDataCell*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)\n  id: LoadViewState(System.Object)\n  parent: System.Web.UI.WebControls.BoundField\n  langs:\n  - csharp\n  name: LoadViewState(Object)\n  nameWithType: BoundField.LoadViewState(Object)\n  fullName: System.Web.UI.WebControls.BoundField.LoadViewState(Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Restores the previously stored view-state information for this field.\n  syntax:\n    content: protected override void LoadViewState (object state);\n    parameters:\n    - id: state\n      type: System.Object\n      description: Represents the control state to be restored.\n  overload: System.Web.UI.WebControls.BoundField.LoadViewState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BoundField.NullDisplayText\n  id: NullDisplayText\n  parent: System.Web.UI.WebControls.BoundField\n  langs:\n  - csharp\n  name: NullDisplayText\n  nameWithType: BoundField.NullDisplayText\n  fullName: System.Web.UI.WebControls.BoundField.NullDisplayText\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the caption displayed for a field when the field's value is null.\n  remarks: \"Sometimes a field's value is stored as null in the data source. You can specify a custom caption to display for fields that have a null value by setting the NullDisplayText property. If this property is not set, null field values are displayed as empty strings (\\\"\\\"). When a record is being updated or inserted in a data-bound control, if the user enters the value specified by this property (other than an empty string) for a field in a data-bound control, that value is automatically converted to null in the data source.  \\n  \\n> [!NOTE]\\n>  To convert an empty string field value to a null value, set the <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> property to `true`.\"\n  example:\n  - \"The following code example demonstrates how to use the NullDisplayText property to specify a custom caption to display for null field values.  \\n  \\n [!code-vb[BoundFieldNullDisplayText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1327_1.aspx)]\\n [!code-cs[BoundFieldNullDisplayText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1327_1.aspx)]\"\n  syntax:\n    content: public virtual string NullDisplayText { get; set; }\n    return:\n      type: System.String\n      description: The caption displayed for a field when the field's value is null. The default is an empty string (\"\"), which indicates that this property is not set.\n  overload: System.Web.UI.WebControls.BoundField.NullDisplayText*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)\n  id: OnDataBindField(System.Object,System.EventArgs)\n  parent: System.Web.UI.WebControls.BoundField\n  langs:\n  - csharp\n  name: OnDataBindField(Object,EventArgs)\n  nameWithType: BoundField.OnDataBindField(Object,EventArgs)\n  fullName: System.Web.UI.WebControls.BoundField.OnDataBindField(Object,EventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Binds the value of a field to the <xref href=\"System.Web.UI.WebControls.BoundField\"></xref> object.\n  remarks: The <xref:System.Web.UI.WebControls.CheckBoxField.OnDataBindField%2A> method is a helper method used to bind the value of a field in the data source to a corresponding cell in the <xref:System.Web.UI.WebControls.BoundField> object.\n  syntax:\n    content: protected virtual void OnDataBindField (object sender, EventArgs e);\n    parameters:\n    - id: sender\n      type: System.Object\n      description: The source of the event.\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.Web.UI.WebControls.BoundField.OnDataBindField*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: The control to which the field value is bound is not a <xref href=\"System.Web.UI.WebControls.TextBox\"></xref> or a <xref href=\"System.Web.UI.WebControls.TableCell\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BoundField.ReadOnly\n  id: ReadOnly\n  parent: System.Web.UI.WebControls.BoundField\n  langs:\n  - csharp\n  name: ReadOnly\n  nameWithType: BoundField.ReadOnly\n  fullName: System.Web.UI.WebControls.BoundField.ReadOnly\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value indicating whether the value of the field can be modified in edit mode.\n  remarks: \"Use the ReadOnly property to prevent the values displayed in a <xref:System.Web.UI.WebControls.BoundField> object from being modified. When a data-bound control is in edit mode, fields that are read-only are displayed as plain text, without any editing controls.  \\n  \\n> [!NOTE]\\n>  The ReadOnly property applies only to edit mode. To prevent fields from showing up in insert mode, use the <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> property.\"\n  example:\n  - \"The following code example demonstrates how to use the ReadOnly property to prevent the values of the key field displayed in a <xref:System.Web.UI.WebControls.BoundField> object from being modified in edit mode.  \\n  \\n [!code-vb[BoundField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_208_1.aspx)]\\n [!code-cs[BoundField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_208_1.aspx)]\"\n  syntax:\n    content: public virtual bool ReadOnly { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to prevent the value of the field from being modified in edit mode; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.BoundField.ReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode\n  id: SupportsHtmlEncode\n  parent: System.Web.UI.WebControls.BoundField\n  langs:\n  - csharp\n  name: SupportsHtmlEncode\n  nameWithType: BoundField.SupportsHtmlEncode\n  fullName: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a value indicating whether HTML encoding is supported by a <xref href=\"System.Web.UI.WebControls.BoundField\"></xref> object.\n  remarks: The SupportsHtmlEncode property is a helper property used by the <xref:System.Web.UI.WebControls.BoundField> class and derived classes to determine whether HTML encoding is supported by the class.\n  syntax:\n    content: protected virtual bool SupportsHtmlEncode { get; }\n    return:\n      type: System.Boolean\n      description: Always returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate that HTML encoding is supported by a <xref href=\"System.Web.UI.WebControls.BoundField\"></xref>.\n  overload: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BoundField.ThisExpression\n  id: ThisExpression\n  parent: System.Web.UI.WebControls.BoundField\n  langs:\n  - csharp\n  name: ThisExpression\n  nameWithType: BoundField.ThisExpression\n  fullName: System.Web.UI.WebControls.BoundField.ThisExpression\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Represents the \"this\" expression.\n  remarks: \"This field is used to indicate that the <xref:System.Web.UI.WebControls.BoundField> object should bind against the data source itself, rather than a field of the data source. In this case, the object's `ToString` value will be displayed in the field.  \\n  \\n This field is used primarily by control developers.\"\n  syntax:\n    content: public static readonly string ThisExpression;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BoundField.ValidateRequestMode\n  id: ValidateRequestMode\n  parent: System.Web.UI.WebControls.BoundField\n  langs:\n  - csharp\n  name: ValidateRequestMode\n  nameWithType: BoundField.ValidateRequestMode\n  fullName: System.Web.UI.WebControls.BoundField.ValidateRequestMode\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value that determines whether the control validates client input or not.\n  syntax:\n    content: public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }\n    return:\n      type: System.Web.UI.ValidateRequestMode\n      description: A value that determines whether the control validates client input or not. The default is <xref href=\"System.Web.UI.ValidateRequestMode\"></xref>.\n  overload: System.Web.UI.WebControls.BoundField.ValidateRequestMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback\n  id: ValidateSupportsCallback\n  parent: System.Web.UI.WebControls.BoundField\n  langs:\n  - csharp\n  name: ValidateSupportsCallback()\n  nameWithType: BoundField.ValidateSupportsCallback()\n  fullName: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Determines whether the controls contained in a <xref href=\"System.Web.UI.WebControls.BoundField\"></xref> object support callbacks.\n  remarks: \"The ValidateSupportsCallback method is a helper method used to determine whether the controls contained in a <xref:System.Web.UI.WebControls.BoundField> object support callbacks. This method has been implemented as an empty method (a method that does not contain any code) to indicate that callbacks are supported.  \\n  \\n> [!NOTE]\\n>  This method is used primarily by control developers.\"\n  syntax:\n    content: public override void ValidateSupportsCallback ();\n    parameters: []\n  overload: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.UI.WebControls.DataControlField\n  isExternal: false\n  name: System.Web.UI.WebControls.DataControlField\n- uid: System.Web.HttpException\n  parent: System.Web\n  isExternal: false\n  name: HttpException\n  nameWithType: HttpException\n  fullName: System.Web.HttpException\n- uid: System.Web.UI.WebControls.BoundField.#ctor\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: BoundField()\n  nameWithType: BoundField.BoundField()\n  fullName: System.Web.UI.WebControls.BoundField.BoundField()\n- uid: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: ApplyFormatInEditMode\n  nameWithType: BoundField.ApplyFormatInEditMode\n  fullName: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: ConvertEmptyStringToNull\n  nameWithType: BoundField.ConvertEmptyStringToNull\n  fullName: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull\n- uid: System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: CopyProperties(DataControlField)\n  nameWithType: BoundField.CopyProperties(DataControlField)\n  fullName: System.Web.UI.WebControls.BoundField.CopyProperties(DataControlField)\n- uid: System.Web.UI.WebControls.BoundField.CreateField\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: CreateField()\n  nameWithType: BoundField.CreateField()\n  fullName: System.Web.UI.WebControls.BoundField.CreateField()\n- uid: System.Web.UI.WebControls.BoundField.DataField\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: DataField\n  nameWithType: BoundField.DataField\n  fullName: System.Web.UI.WebControls.BoundField.DataField\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.WebControls.BoundField.DataFormatString\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: DataFormatString\n  nameWithType: BoundField.DataFormatString\n  fullName: System.Web.UI.WebControls.BoundField.DataFormatString\n- uid: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)\n  nameWithType: BoundField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)\n  fullName: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)\n- uid: System.Collections.Specialized.IOrderedDictionary\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: IOrderedDictionary\n  nameWithType: IOrderedDictionary\n  fullName: System.Collections.Specialized.IOrderedDictionary\n- uid: System.Web.UI.WebControls.DataControlFieldCell\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: DataControlFieldCell\n  nameWithType: DataControlFieldCell\n  fullName: System.Web.UI.WebControls.DataControlFieldCell\n- uid: System.Web.UI.WebControls.DataControlRowState\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: DataControlRowState\n  nameWithType: DataControlRowState\n  fullName: System.Web.UI.WebControls.DataControlRowState\n- uid: System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: FormatDataValue(Object,Boolean)\n  nameWithType: BoundField.FormatDataValue(Object,Boolean)\n  fullName: System.Web.UI.WebControls.BoundField.FormatDataValue(Object,Boolean)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.UI.WebControls.BoundField.GetDesignTimeValue\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: GetDesignTimeValue()\n  nameWithType: BoundField.GetDesignTimeValue()\n  fullName: System.Web.UI.WebControls.BoundField.GetDesignTimeValue()\n- uid: System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: GetValue(Control)\n  nameWithType: BoundField.GetValue(Control)\n  fullName: System.Web.UI.WebControls.BoundField.GetValue(Control)\n- uid: System.Web.UI.Control\n  parent: System.Web.UI\n  isExternal: false\n  name: Control\n  nameWithType: Control\n  fullName: System.Web.UI.Control\n- uid: System.Web.UI.WebControls.BoundField.HeaderText\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: HeaderText\n  nameWithType: BoundField.HeaderText\n  fullName: System.Web.UI.WebControls.BoundField.HeaderText\n- uid: System.Web.UI.WebControls.BoundField.HtmlEncode\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: HtmlEncode\n  nameWithType: BoundField.HtmlEncode\n  fullName: System.Web.UI.WebControls.BoundField.HtmlEncode\n- uid: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: HtmlEncodeFormatString\n  nameWithType: BoundField.HtmlEncodeFormatString\n  fullName: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString\n- uid: System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: Initialize(Boolean,Control)\n  nameWithType: BoundField.Initialize(Boolean,Control)\n  fullName: System.Web.UI.WebControls.BoundField.Initialize(Boolean,Control)\n- uid: System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)\n  nameWithType: BoundField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)\n  fullName: System.Web.UI.WebControls.BoundField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)\n- uid: System.Web.UI.WebControls.DataControlCellType\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: DataControlCellType\n  nameWithType: DataControlCellType\n  fullName: System.Web.UI.WebControls.DataControlCellType\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: InitializeDataCell(DataControlFieldCell,DataControlRowState)\n  nameWithType: BoundField.InitializeDataCell(DataControlFieldCell,DataControlRowState)\n  fullName: System.Web.UI.WebControls.BoundField.InitializeDataCell(DataControlFieldCell,DataControlRowState)\n- uid: System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: LoadViewState(Object)\n  nameWithType: BoundField.LoadViewState(Object)\n  fullName: System.Web.UI.WebControls.BoundField.LoadViewState(Object)\n- uid: System.Web.UI.WebControls.BoundField.NullDisplayText\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: NullDisplayText\n  nameWithType: BoundField.NullDisplayText\n  fullName: System.Web.UI.WebControls.BoundField.NullDisplayText\n- uid: System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: OnDataBindField(Object,EventArgs)\n  nameWithType: BoundField.OnDataBindField(Object,EventArgs)\n  fullName: System.Web.UI.WebControls.BoundField.OnDataBindField(Object,EventArgs)\n- uid: System.EventArgs\n  parent: System\n  isExternal: true\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Web.UI.WebControls.BoundField.ReadOnly\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: ReadOnly\n  nameWithType: BoundField.ReadOnly\n  fullName: System.Web.UI.WebControls.BoundField.ReadOnly\n- uid: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: SupportsHtmlEncode\n  nameWithType: BoundField.SupportsHtmlEncode\n  fullName: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode\n- uid: System.Web.UI.WebControls.BoundField.ThisExpression\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: ThisExpression\n  nameWithType: BoundField.ThisExpression\n  fullName: System.Web.UI.WebControls.BoundField.ThisExpression\n- uid: System.Web.UI.WebControls.BoundField.ValidateRequestMode\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: ValidateRequestMode\n  nameWithType: BoundField.ValidateRequestMode\n  fullName: System.Web.UI.WebControls.BoundField.ValidateRequestMode\n- uid: System.Web.UI.ValidateRequestMode\n  parent: System.Web.UI\n  isExternal: false\n  name: ValidateRequestMode\n  nameWithType: ValidateRequestMode\n  fullName: System.Web.UI.ValidateRequestMode\n- uid: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: ValidateSupportsCallback()\n  nameWithType: BoundField.ValidateSupportsCallback()\n  fullName: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback()\n- uid: System.Web.UI.WebControls.BoundField.#ctor*\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: BoundField\n  nameWithType: BoundField.BoundField\n- uid: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode*\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: ApplyFormatInEditMode\n  nameWithType: BoundField.ApplyFormatInEditMode\n- uid: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull*\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: ConvertEmptyStringToNull\n  nameWithType: BoundField.ConvertEmptyStringToNull\n- uid: System.Web.UI.WebControls.BoundField.CopyProperties*\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: CopyProperties\n  nameWithType: BoundField.CopyProperties\n- uid: System.Web.UI.WebControls.BoundField.CreateField*\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: CreateField\n  nameWithType: BoundField.CreateField\n- uid: System.Web.UI.WebControls.BoundField.DataField*\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: DataField\n  nameWithType: BoundField.DataField\n- uid: System.Web.UI.WebControls.BoundField.DataFormatString*\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: DataFormatString\n  nameWithType: BoundField.DataFormatString\n- uid: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell*\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: ExtractValuesFromCell\n  nameWithType: BoundField.ExtractValuesFromCell\n- uid: System.Web.UI.WebControls.BoundField.FormatDataValue*\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: FormatDataValue\n  nameWithType: BoundField.FormatDataValue\n- uid: System.Web.UI.WebControls.BoundField.GetDesignTimeValue*\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: GetDesignTimeValue\n  nameWithType: BoundField.GetDesignTimeValue\n- uid: System.Web.UI.WebControls.BoundField.GetValue*\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: GetValue\n  nameWithType: BoundField.GetValue\n- uid: System.Web.UI.WebControls.BoundField.HeaderText*\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: HeaderText\n  nameWithType: BoundField.HeaderText\n- uid: System.Web.UI.WebControls.BoundField.HtmlEncode*\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: HtmlEncode\n  nameWithType: BoundField.HtmlEncode\n- uid: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString*\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: HtmlEncodeFormatString\n  nameWithType: BoundField.HtmlEncodeFormatString\n- uid: System.Web.UI.WebControls.BoundField.Initialize*\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: Initialize\n  nameWithType: BoundField.Initialize\n- uid: System.Web.UI.WebControls.BoundField.InitializeCell*\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: InitializeCell\n  nameWithType: BoundField.InitializeCell\n- uid: System.Web.UI.WebControls.BoundField.InitializeDataCell*\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: InitializeDataCell\n  nameWithType: BoundField.InitializeDataCell\n- uid: System.Web.UI.WebControls.BoundField.LoadViewState*\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: LoadViewState\n  nameWithType: BoundField.LoadViewState\n- uid: System.Web.UI.WebControls.BoundField.NullDisplayText*\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: NullDisplayText\n  nameWithType: BoundField.NullDisplayText\n- uid: System.Web.UI.WebControls.BoundField.OnDataBindField*\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: OnDataBindField\n  nameWithType: BoundField.OnDataBindField\n- uid: System.Web.UI.WebControls.BoundField.ReadOnly*\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: ReadOnly\n  nameWithType: BoundField.ReadOnly\n- uid: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode*\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: SupportsHtmlEncode\n  nameWithType: BoundField.SupportsHtmlEncode\n- uid: System.Web.UI.WebControls.BoundField.ValidateRequestMode*\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: ValidateRequestMode\n  nameWithType: BoundField.ValidateRequestMode\n- uid: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback*\n  parent: System.Web.UI.WebControls.BoundField\n  isExternal: false\n  name: ValidateSupportsCallback\n  nameWithType: BoundField.ValidateSupportsCallback\n"}