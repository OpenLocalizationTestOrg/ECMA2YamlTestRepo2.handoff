{"nodes":[{"pos":[423,518],"content":"Implements the basic functionality required by expressions that accept two expression operands.","needQuote":true,"needEscape":true,"nodes":[{"content":"Implements the basic functionality required by expressions that accept two expression operands.","pos":[0,95]}]},{"pos":[4368,4482],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that defines the left argument.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that defines the left argument."},{"pos":[4494,4989],"content":"Derived expression types might perform stricter type checks when the Left property is set. For example, <xref:System.Data.Common.CommandTrees.DbUnionAllExpression> requires that its left expression has a collection result type, while <xref:System.Data.Common.CommandTrees.DbAndExpression> requires a Boolean result type. Typically, derived expression types will not allow Left to be set to an expression with a result type that is not equal or promotable to the result type of the current value.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Derived expression types might perform stricter type checks when the Left property is set. For example, <xref:System.Data.Common.CommandTrees.DbUnionAllExpression> requires that its left expression has a collection result type, while <xref:System.Data.Common.CommandTrees.DbAndExpression> requires a Boolean result type. Typically, derived expression types will not allow Left to be set to an expression with a result type that is not equal or promotable to the result type of the current value.","pos":[0,495],"nodes":[{"content":"Derived expression types might perform stricter type checks when the Left property is set.","pos":[0,90]},{"content":"For example, &lt;xref:System.Data.Common.CommandTrees.DbUnionAllExpression&gt; requires that its left expression has a collection result type, while &lt;xref:System.Data.Common.CommandTrees.DbAndExpression&gt; requires a Boolean result type.","pos":[91,320],"source":" For example, <xref:System.Data.Common.CommandTrees.DbUnionAllExpression> requires that its left expression has a collection result type, while <xref:System.Data.Common.CommandTrees.DbAndExpression> requires a Boolean result type."},{"content":"Typically, derived expression types will not allow Left to be set to an expression with a result type that is not equal or promotable to the result type of the current value.","pos":[321,495]}]}]},{"pos":[5167,5268],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that defines the left argument.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that defines the left argument."},{"pos":[5454,5533],"content":"The expression is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The expression is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[5629,5863],"content":"The expression is not associated with the command tree of the <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbBinaryExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>,       or its result type is not equal or promotable to the required type for the left argument.","needQuote":false,"needEscape":true,"source":"The expression is not associated with the command tree of the <xref href=\"System.Data.Common.CommandTrees.DbBinaryExpression\"></xref>,       or its result type is not equal or promotable to the required type for the left argument."},{"pos":[6279,6394],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that defines the right argument.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that defines the right argument."},{"pos":[6406,6904],"content":"Derived expression types might perform stricter type checks when the Right property is set. For example, <xref:System.Data.Common.CommandTrees.DbUnionAllExpression> requires that its right expression has a collection result type, while <xref:System.Data.Common.CommandTrees.DbAndExpression> requires a Boolean result type. Typically, derived expression types will not allow Right to be set to an expression with a result type that is not equal or promotable to the result type of the current value.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Derived expression types might perform stricter type checks when the Right property is set. For example, <xref:System.Data.Common.CommandTrees.DbUnionAllExpression> requires that its right expression has a collection result type, while <xref:System.Data.Common.CommandTrees.DbAndExpression> requires a Boolean result type. Typically, derived expression types will not allow Right to be set to an expression with a result type that is not equal or promotable to the result type of the current value.","pos":[0,498],"nodes":[{"content":"Derived expression types might perform stricter type checks when the Right property is set.","pos":[0,91]},{"content":"For example, &lt;xref:System.Data.Common.CommandTrees.DbUnionAllExpression&gt; requires that its right expression has a collection result type, while &lt;xref:System.Data.Common.CommandTrees.DbAndExpression&gt; requires a Boolean result type.","pos":[92,322],"source":" For example, <xref:System.Data.Common.CommandTrees.DbUnionAllExpression> requires that its right expression has a collection result type, while <xref:System.Data.Common.CommandTrees.DbAndExpression> requires a Boolean result type."},{"content":"Typically, derived expression types will not allow Right to be set to an expression with a result type that is not equal or promotable to the result type of the current value.","pos":[323,498]}]}]},{"pos":[7083,7185],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that defines the right argument.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that defines the right argument."},{"pos":[7372,7451],"content":"The expression is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The expression is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[7547,7782],"content":"The expression is not associated with the command tree of the <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbBinaryExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>,       or its result type is not equal or promotable to the required type for the right argument.","needQuote":false,"needEscape":true,"source":"The expression is not associated with the command tree of the <xref href=\"System.Data.Common.CommandTrees.DbBinaryExpression\"></xref>,       or its result type is not equal or promotable to the required type for the right argument."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Common.CommandTrees.DbBinaryExpression\n  id: DbBinaryExpression\n  children:\n  - System.Data.Common.CommandTrees.DbBinaryExpression.Left\n  - System.Data.Common.CommandTrees.DbBinaryExpression.Right\n  langs:\n  - csharp\n  name: DbBinaryExpression\n  nameWithType: DbBinaryExpression\n  fullName: System.Data.Common.CommandTrees.DbBinaryExpression\n  type: Class\n  summary: Implements the basic functionality required by expressions that accept two expression operands.\n  syntax:\n    content: 'public abstract class DbBinaryExpression : System.Data.Common.CommandTrees.DbExpression'\n  inheritance:\n  - System.Object\n  - System.Data.Common.CommandTrees.DbExpression\n  implements: []\n  inheritedMembers:\n  - System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)\n  - System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)\n  - System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)\n  - System.Data.Common.CommandTrees.DbExpression.ExpressionKind\n  - System.Data.Common.CommandTrees.DbExpression.FromBinary(System.Byte[])\n  - System.Data.Common.CommandTrees.DbExpression.FromBoolean(System.Nullable{System.Boolean})\n  - System.Data.Common.CommandTrees.DbExpression.FromByte(System.Nullable{System.Byte})\n  - System.Data.Common.CommandTrees.DbExpression.FromDateTime(System.Nullable{System.DateTime})\n  - System.Data.Common.CommandTrees.DbExpression.FromDateTimeOffset(System.Nullable{System.DateTimeOffset})\n  - System.Data.Common.CommandTrees.DbExpression.FromDecimal(System.Nullable{System.Decimal})\n  - System.Data.Common.CommandTrees.DbExpression.FromDouble(System.Nullable{System.Double})\n  - System.Data.Common.CommandTrees.DbExpression.FromGeography(System.Data.Spatial.DbGeography)\n  - System.Data.Common.CommandTrees.DbExpression.FromGeometry(System.Data.Spatial.DbGeometry)\n  - System.Data.Common.CommandTrees.DbExpression.FromGuid(System.Nullable{System.Guid})\n  - System.Data.Common.CommandTrees.DbExpression.FromInt16(System.Nullable{System.Int16})\n  - System.Data.Common.CommandTrees.DbExpression.FromInt32(System.Nullable{System.Int32})\n  - System.Data.Common.CommandTrees.DbExpression.FromInt64(System.Nullable{System.Int64})\n  - System.Data.Common.CommandTrees.DbExpression.FromSingle(System.Nullable{System.Single})\n  - System.Data.Common.CommandTrees.DbExpression.FromString(System.String)\n  - System.Data.Common.CommandTrees.DbExpression.GetHashCode\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Byte[])\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Data.Spatial.DbGeography)\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Data.Spatial.DbGeometry)\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Boolean})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Byte})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.DateTime})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.DateTimeOffset})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Decimal})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Double})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Guid})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int16})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int32})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int64})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Single})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.String)\n  - System.Data.Common.CommandTrees.DbExpression.ResultType\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbBinaryExpression.Left\n  id: Left\n  parent: System.Data.Common.CommandTrees.DbBinaryExpression\n  langs:\n  - csharp\n  name: Left\n  nameWithType: DbBinaryExpression.Left\n  fullName: System.Data.Common.CommandTrees.DbBinaryExpression.Left\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Gets or sets the <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that defines the left argument.\n  remarks: Derived expression types might perform stricter type checks when the Left property is set. For example, <xref:System.Data.Common.CommandTrees.DbUnionAllExpression> requires that its left expression has a collection result type, while <xref:System.Data.Common.CommandTrees.DbAndExpression> requires a Boolean result type. Typically, derived expression types will not allow Left to be set to an expression with a result type that is not equal or promotable to the result type of the current value.\n  syntax:\n    content: public System.Data.Common.CommandTrees.DbExpression Left { get; }\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that defines the left argument.\n  overload: System.Data.Common.CommandTrees.DbBinaryExpression.Left*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The expression is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The expression is not associated with the command tree of the <xref href=\\\"System.Data.Common.CommandTrees.DbBinaryExpression\\\"></xref>,  \\n  \\n or its result type is not equal or promotable to the required type for the left argument.\"\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbBinaryExpression.Right\n  id: Right\n  parent: System.Data.Common.CommandTrees.DbBinaryExpression\n  langs:\n  - csharp\n  name: Right\n  nameWithType: DbBinaryExpression.Right\n  fullName: System.Data.Common.CommandTrees.DbBinaryExpression.Right\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Gets or sets the <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that defines the right argument.\n  remarks: Derived expression types might perform stricter type checks when the Right property is set. For example, <xref:System.Data.Common.CommandTrees.DbUnionAllExpression> requires that its right expression has a collection result type, while <xref:System.Data.Common.CommandTrees.DbAndExpression> requires a Boolean result type. Typically, derived expression types will not allow Right to be set to an expression with a result type that is not equal or promotable to the result type of the current value.\n  syntax:\n    content: public System.Data.Common.CommandTrees.DbExpression Right { get; }\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that defines the right argument.\n  overload: System.Data.Common.CommandTrees.DbBinaryExpression.Right*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The expression is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The expression is not associated with the command tree of the <xref href=\\\"System.Data.Common.CommandTrees.DbBinaryExpression\\\"></xref>,  \\n  \\n or its result type is not equal or promotable to the required type for the right argument.\"\n  platform:\n  - net462\nreferences:\n- uid: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: System.Data.Common.CommandTrees.DbExpression\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Data.Common.CommandTrees.DbBinaryExpression.Left\n  parent: System.Data.Common.CommandTrees.DbBinaryExpression\n  isExternal: false\n  name: Left\n  nameWithType: DbBinaryExpression.Left\n  fullName: System.Data.Common.CommandTrees.DbBinaryExpression.Left\n- uid: System.Data.Common.CommandTrees.DbBinaryExpression.Right\n  parent: System.Data.Common.CommandTrees.DbBinaryExpression\n  isExternal: false\n  name: Right\n  nameWithType: DbBinaryExpression.Right\n  fullName: System.Data.Common.CommandTrees.DbBinaryExpression.Right\n- uid: System.Data.Common.CommandTrees.DbBinaryExpression.Left*\n  parent: System.Data.Common.CommandTrees.DbBinaryExpression\n  isExternal: false\n  name: Left\n  nameWithType: DbBinaryExpression.Left\n- uid: System.Data.Common.CommandTrees.DbBinaryExpression.Right*\n  parent: System.Data.Common.CommandTrees.DbBinaryExpression\n  isExternal: false\n  name: Right\n  nameWithType: DbBinaryExpression.Right\n"}