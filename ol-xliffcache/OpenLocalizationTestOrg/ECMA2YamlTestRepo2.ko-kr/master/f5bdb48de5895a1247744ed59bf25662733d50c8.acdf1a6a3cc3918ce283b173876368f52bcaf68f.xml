{"nodes":[{"pos":[2698,2808],"content":"Provides several methods for using and publishing remoted objects and proxies. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides several methods for using and publishing remoted objects and proxies. This class cannot be inherited.","pos":[0,110],"nodes":[{"content":"Provides several methods for using and publishing remoted objects and proxies.","pos":[0,78]},{"content":"This class cannot be inherited.","pos":[79,110]}]}]},{"pos":[2820,3237],"content":"Unless you are a service provider dealing with issues such as activation, lifetime management, or transactions, you do not need to distinguish between proxy references and object references. The remoting infrastructure uses transparent proxies that give the impression that the remote objects reside in the client's space. Proxies achieve this by forwarding calls made on them to the real objects at remote locations.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Unless you are a service provider dealing with issues such as activation, lifetime management, or transactions, you do not need to distinguish between proxy references and object references. The remoting infrastructure uses transparent proxies that give the impression that the remote objects reside in the client's space. Proxies achieve this by forwarding calls made on them to the real objects at remote locations.","pos":[0,417],"nodes":[{"content":"Unless you are a service provider dealing with issues such as activation, lifetime management, or transactions, you do not need to distinguish between proxy references and object references.","pos":[0,190]},{"content":"The remoting infrastructure uses transparent proxies that give the impression that the remote objects reside in the client's space.","pos":[191,322]},{"content":"Proxies achieve this by forwarding calls made on them to the real objects at remote locations.","pos":[323,417]}]}]},{"pos":[3902,3980],"content":"Creates a proxy for a well-known object, given the <xref:System.Type> and URL.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a proxy for a well-known object, given the &lt;xref:System.Type&gt; and URL.","pos":[0,78],"source":"Creates a proxy for a well-known object, given the <xref:System.Type> and URL."}]},{"pos":[3992,4159],"content":"The returned proxy object points to an endpoint served by the specified well-known object. No messages are sent over the network until a method is called on the proxy.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The returned proxy object points to an endpoint served by the specified well-known object. No messages are sent over the network until a method is called on the proxy.","pos":[0,167],"nodes":[{"content":"The returned proxy object points to an endpoint served by the specified well-known object.","pos":[0,90]},{"content":"No messages are sent over the network until a method is called on the proxy.","pos":[91,167]}]}]},{"pos":[4781,4874],"content":"The <xref:System.Type> of a well-known object on the server end to which you want to connect.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of a well-known object on the server end to which you want to connect.","pos":[0,93],"source":"The <xref:System.Type> of a well-known object on the server end to which you want to connect."}]},{"pos":[4934,4962],"content":"The URL of the server class.","needQuote":true,"needEscape":true,"nodes":[{"content":"The URL of the server class.","pos":[0,28]}]},{"pos":[5020,5118],"content":"A proxy to the remote object that points to an endpoint served by the specified well-known object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A proxy to the remote object that points to an endpoint served by the specified well-known object.","pos":[0,98]}]},{"pos":[5307,5394],"content":"The immediate caller does not have permission to configure remoting types and channels.","needQuote":true,"needEscape":true,"nodes":[{"content":"The immediate caller does not have permission to configure remoting types and channels.","pos":[0,87]}]},{"pos":[5909,6011],"content":"Creates a proxy for a well-known object, given the <xref:System.Type>, URL, and channel-specific data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a proxy for a well-known object, given the &lt;xref:System.Type&gt;, URL, and channel-specific data.","pos":[0,102],"source":"Creates a proxy for a well-known object, given the <xref:System.Type>, URL, and channel-specific data."}]},{"pos":[6024,6398],"content":"The returned proxy object points to an endpoint served by the specified well-known object. No messages are sent over the network until a method is called on the proxy.       The `data` object is used to communicate information to the channel, and is passed to the <xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=fullName> method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The returned proxy object points to an endpoint served by the specified well-known object.","pos":[0,90]},{"content":"No messages are sent over the network until a method is called on the proxy.","pos":[91,167]},{"content":"The <ph id=\"ph1\">`data`</ph> object is used to communicate information to the channel, and is passed to the &lt;xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=fullName&gt; method.","pos":[174,372],"source":"       The `data` object is used to communicate information to the channel, and is passed to the <xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=fullName> method."}]},{"pos":[6580,6657],"content":"The <xref:System.Type> of the well-known object to which you want to connect.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the well-known object to which you want to connect.","pos":[0,77],"source":"The <xref:System.Type> of the well-known object to which you want to connect."}]},{"pos":[6717,6750],"content":"The URL of the well-known object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The URL of the well-known object.","pos":[0,33]}]},{"pos":[6811,6902],"content":"Channel specific data. Can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Channel specific data.","pos":[0,22]},{"content":"Can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[23,91],"source":" Can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[6960,7045],"content":"A proxy that points to an endpoint that is served by the requested well-known object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A proxy that points to an endpoint that is served by the requested well-known object.","pos":[0,85]}]},{"pos":[7234,7321],"content":"The immediate caller does not have permission to configure remoting types and channels.","needQuote":true,"needEscape":true,"nodes":[{"content":"The immediate caller does not have permission to configure remoting types and channels.","pos":[0,87]}]},{"pos":[7823,7916],"content":"Stops an object from receiving any further messages through the registered remoting channels.","needQuote":true,"needEscape":true,"nodes":[{"content":"Stops an object from receiving any further messages through the registered remoting channels.","pos":[0,93]}]},{"pos":[8561,8599],"content":"Object to disconnect from its channel.","needQuote":true,"needEscape":true,"nodes":[{"content":"Object to disconnect from its channel.","pos":[0,38]}]},{"pos":[8658,8876],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the object was disconnected from the registered remoting channels successfully; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the object was disconnected from the registered remoting channels successfully; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9058,9153],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>obj</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[9248,9290],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is a proxy.","needQuote":true,"needEscape":true,"source":"The <code>obj</code> parameter is a proxy."},{"pos":[9403,9490],"content":"The immediate caller does not have permission to configure remoting types and channels.","needQuote":true,"needEscape":true,"nodes":[{"content":"The immediate caller does not have permission to configure remoting types and channels.","pos":[0,87]}]},{"pos":[10175,10322],"content":"Connects to the specified remote object, and executes the provided <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.Messaging.IMethodCallMessage\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> on it.","needQuote":true,"needEscape":true,"source":"Connects to the specified remote object, and executes the provided <xref href=\"System.Runtime.Remoting.Messaging.IMethodCallMessage\"></xref> on it."},{"pos":[10334,10543],"content":"The current method is used in special cases by the server to forward the specified method call to another, possibly remote, object. This method can be called only when the caller is in the appropriate context.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The current method is used in special cases by the server to forward the specified method call to another, possibly remote, object. This method can be called only when the caller is in the appropriate context.","pos":[0,209],"nodes":[{"content":"The current method is used in special cases by the server to forward the specified method call to another, possibly remote, object.","pos":[0,131]},{"content":"This method can be called only when the caller is in the appropriate context.","pos":[132,209]}]}]},{"pos":[11290,11338],"content":"The remote object whose method you want to call.","needQuote":true,"needEscape":true,"nodes":[{"content":"The remote object whose method you want to call.","pos":[0,48]}]},{"pos":[11440,11502],"content":"A method call message to the specified remote object's method.","needQuote":true,"needEscape":true,"nodes":[{"content":"A method call message to the specified remote object's method.","pos":[0,62]}]},{"pos":[11601,11635],"content":"The response of the remote method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The response of the remote method.","pos":[0,34]}]},{"pos":[11831,11892],"content":"The immediate caller does not have infrastructure permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The immediate caller does not have infrastructure permission.","pos":[0,61]}]},{"pos":[12021,12102],"content":"The method was called from a context other than the native context of the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method was called from a context other than the native context of the object.","pos":[0,81]}]},{"pos":[12659,12788],"content":"Returns a chain of envoy sinks that should be used when sending messages to the remote object represented by the specified proxy.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a chain of envoy sinks that should be used when sending messages to the remote object represented by the specified proxy.","pos":[0,129]}]},{"pos":[12800,13078],"content":"Envoy sinks are sinks sent along with the <xref:System.Runtime.Remoting.ObjRef> of an object that is used when returning messages to that object. The current method returns the envoy sinks that are used during communication between the proxy of the object and the object itself.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Envoy sinks are sinks sent along with the <xref:System.Runtime.Remoting.ObjRef> of an object that is used when returning messages to that object. The current method returns the envoy sinks that are used during communication between the proxy of the object and the object itself.","pos":[0,278],"nodes":[{"content":"Envoy sinks are sinks sent along with the &lt;xref:System.Runtime.Remoting.ObjRef&gt; of an object that is used when returning messages to that object.","pos":[0,145],"source":"Envoy sinks are sinks sent along with the <xref:System.Runtime.Remoting.ObjRef> of an object that is used when returning messages to that object."},{"content":"The current method returns the envoy sinks that are used during communication between the proxy of the object and the object itself.","pos":[146,278]}]}]},{"pos":[13298,13376],"content":"The proxy of the remote object that requested envoy sinks are associated with.","needQuote":true,"needEscape":true,"nodes":[{"content":"The proxy of the remote object that requested envoy sinks are associated with.","pos":[0,78]}]},{"pos":[13467,13526],"content":"A chain of envoy sinks associated with the specified proxy.","needQuote":true,"needEscape":true,"nodes":[{"content":"A chain of envoy sinks associated with the specified proxy.","pos":[0,59]}]},{"pos":[13729,13790],"content":"The immediate caller does not have infrastructure permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The immediate caller does not have infrastructure permission.","pos":[0,61]}]},{"pos":[14332,14424],"content":"Returns a lifetime service object that controls the lifetime policy of the specified object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a lifetime service object that controls the lifetime policy of the specified object.","pos":[0,92]}]},{"pos":[14436,14623],"content":"For the default lifetime service the returned object will be an object of type <xref:System.Runtime.Remoting.Lifetime.ILease>. If the `obj` parameter is `null`, the method returns `null`.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"For the default lifetime service the returned object will be an object of type &lt;xref:System.Runtime.Remoting.Lifetime.ILease&gt;.","pos":[0,126],"source":"For the default lifetime service the returned object will be an object of type <xref:System.Runtime.Remoting.Lifetime.ILease>."},{"content":"If the <ph id=\"ph1\">`obj`</ph> parameter is <ph id=\"ph2\">`null`</ph>, the method returns <ph id=\"ph3\">`null`</ph>.","pos":[127,187],"source":" If the `obj` parameter is `null`, the method returns `null`."}]},{"pos":[15933,15975],"content":"The object to obtain lifetime service for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to obtain lifetime service for.","pos":[0,42]}]},{"pos":[16033,16091],"content":"The object that controls the lifetime of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The object that controls the lifetime of <code>obj</code>."},{"pos":[16291,16352],"content":"The immediate caller does not have infrastructure permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The immediate caller does not have infrastructure permission.","pos":[0,61]}]},{"pos":[16988,17097],"content":"Returns the method base from the given <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.Messaging.IMethodMessage\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the method base from the given <xref href=\"System.Runtime.Remoting.Messaging.IMethodMessage\"></xref>."},{"pos":[17109,17748],"content":"This determines the method base from the <xref:System.Runtime.Remoting.Messaging.IMethodMessage.TypeName%2A>, <xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodName%2A>, and <xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodSignature%2A> properties of <xref:System.Runtime.Remoting.Messaging.IMethodMessage> and is used by classes implementing the <xref:System.Runtime.Remoting.Messaging.IMethodMessage> interface. Consumers of <xref:System.Runtime.Remoting.Messaging.IMethodMessage> classes should reference the <xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodBase%2A?displayProperty=fullName> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This determines the method base from the <xref:System.Runtime.Remoting.Messaging.IMethodMessage.TypeName%2A>, <xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodName%2A>, and <xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodSignature%2A> properties of <xref:System.Runtime.Remoting.Messaging.IMethodMessage> and is used by classes implementing the <xref:System.Runtime.Remoting.Messaging.IMethodMessage> interface. Consumers of <xref:System.Runtime.Remoting.Messaging.IMethodMessage> classes should reference the <xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodBase%2A?displayProperty=fullName> property.","pos":[0,639],"nodes":[{"content":"This determines the method base from the &lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage.TypeName%2A&gt;, &lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodName%2A&gt;, and &lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodSignature%2A&gt; properties of &lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage&gt; and is used by classes implementing the &lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage&gt; interface.","pos":[0,436],"source":"This determines the method base from the <xref:System.Runtime.Remoting.Messaging.IMethodMessage.TypeName%2A>, <xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodName%2A>, and <xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodSignature%2A> properties of <xref:System.Runtime.Remoting.Messaging.IMethodMessage> and is used by classes implementing the <xref:System.Runtime.Remoting.Messaging.IMethodMessage> interface."},{"content":"Consumers of &lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage&gt; classes should reference the &lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodBase%2A?displayProperty=fullName&gt; property.","pos":[437,639],"source":" Consumers of <xref:System.Runtime.Remoting.Messaging.IMethodMessage> classes should reference the <xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodBase%2A?displayProperty=fullName> property."}]}]},{"pos":[18012,18063],"content":"The method message to extract the method base from.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method message to extract the method base from.","pos":[0,51]}]},{"pos":[18136,18198],"content":"The method base extracted from the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">msg</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"The method base extracted from the <code>msg</code> parameter."},{"pos":[18410,18614],"content":"Either the immediate caller does not have infrastructure permission, or at least one of the callers higher in the callstack does not have permission to retrieve the type information of non-public members.","needQuote":true,"needEscape":true,"nodes":[{"content":"Either the immediate caller does not have infrastructure permission, or at least one of the callers higher in the callstack does not have permission to retrieve the type information of non-public members.","pos":[0,204]}]},{"pos":[19362,19501],"content":"Serializes the specified marshal by reference object into the provided <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Serializes the specified marshal by reference object into the provided <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref>."},{"pos":[19755,19779],"content":"The object to serialize.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to serialize.","pos":[0,24]}]},{"pos":[19873,19981],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> into which the object is serialized.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> into which the object is serialized."},{"pos":[20077,20125],"content":"The source and destination of the serialization.","needQuote":true,"needEscape":true,"nodes":[{"content":"The source and destination of the serialization.","pos":[0,48]}]},{"pos":[20310,20426],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">info</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>obj</code> or <code>info</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[20539,20600],"content":"The immediate caller does not have infrastructure permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The immediate caller does not have infrastructure permission.","pos":[0,61]}]},{"pos":[21112,21155],"content":"Retrieves the URI for the specified object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the URI for the specified object.","pos":[0,43]}]},{"pos":[21712,21792],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.MarshalByRefObject\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for which a URI is requested.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.MarshalByRefObject\"></xref> for which a URI is requested."},{"pos":[21850,22002],"content":"The URI of the specified object if it has one, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the object has not yet been marshaled.","needQuote":true,"needEscape":true,"source":"The URI of the specified object if it has one, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the object has not yet been marshaled."},{"pos":[22196,22257],"content":"The immediate caller does not have infrastructure permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The immediate caller does not have infrastructure permission.","pos":[0,61]}]},{"pos":[22794,22917],"content":"Returns the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.ObjRef\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the remote object from the specified proxy.","needQuote":true,"needEscape":true,"source":"Returns the <xref href=\"System.Runtime.Remoting.ObjRef\"></xref> that represents the remote object from the specified proxy."},{"pos":[22930,24093],"content":"A <xref:System.Runtime.Remoting.ObjRef> is a serializable representation of an object used to transfer an object reference across an application domain boundary. Creating a <xref:System.Runtime.Remoting.ObjRef> for an object is known as marshaling. The <xref:System.Runtime.Remoting.ObjRef> can be transferred through a channel into another application domain (possibly on another process or computer). Once in the other application domain, the <xref:System.Runtime.Remoting.ObjRef> must be parsed to create a proxy for the object, generally connected to the real object. This operation is known as unmarshaling. During unmarshaling, the <xref:System.Runtime.Remoting.ObjRef> is parsed to extract the method information of the remote object and both the transparent proxy and <xref:System.Runtime.Remoting.Proxies.RealProxy> objects are created.       A <xref:System.Runtime.Remoting.ObjRef> contains information that describes the <xref:System.Type> and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remote application where the object is located.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A <xref:System.Runtime.Remoting.ObjRef> is a serializable representation of an object used to transfer an object reference across an application domain boundary. Creating a <xref:System.Runtime.Remoting.ObjRef> for an object is known as marshaling. The <xref:System.Runtime.Remoting.ObjRef> can be transferred through a channel into another application domain (possibly on another process or computer). Once in the other application domain, the <xref:System.Runtime.Remoting.ObjRef> must be parsed to create a proxy for the object, generally connected to the real object. This operation is known as unmarshaling. During unmarshaling, the <xref:System.Runtime.Remoting.ObjRef> is parsed to extract the method information of the remote object and both the transparent proxy and <xref:System.Runtime.Remoting.Proxies.RealProxy> objects are created.       A <xref:System.Runtime.Remoting.ObjRef> contains information that describes the <xref:System.Type> and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remote application where the object is located.","pos":[0,1161],"nodes":[{"content":"A &lt;xref:System.Runtime.Remoting.ObjRef&gt; is a serializable representation of an object used to transfer an object reference across an application domain boundary.","pos":[0,161],"source":"A <xref:System.Runtime.Remoting.ObjRef> is a serializable representation of an object used to transfer an object reference across an application domain boundary."},{"content":"Creating a &lt;xref:System.Runtime.Remoting.ObjRef&gt; for an object is known as marshaling.","pos":[162,248],"source":" Creating a <xref:System.Runtime.Remoting.ObjRef> for an object is known as marshaling."},{"content":"The &lt;xref:System.Runtime.Remoting.ObjRef&gt; can be transferred through a channel into another application domain (possibly on another process or computer).","pos":[249,402],"source":" The <xref:System.Runtime.Remoting.ObjRef> can be transferred through a channel into another application domain (possibly on another process or computer)."},{"content":"Once in the other application domain, the &lt;xref:System.Runtime.Remoting.ObjRef&gt; must be parsed to create a proxy for the object, generally connected to the real object.","pos":[403,571],"source":" Once in the other application domain, the <xref:System.Runtime.Remoting.ObjRef> must be parsed to create a proxy for the object, generally connected to the real object."},{"content":"This operation is known as unmarshaling.","pos":[572,612]},{"content":"During unmarshaling, the &lt;xref:System.Runtime.Remoting.ObjRef&gt; is parsed to extract the method information of the remote object and both the transparent proxy and &lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt; objects are created.","pos":[613,845],"source":" During unmarshaling, the <xref:System.Runtime.Remoting.ObjRef> is parsed to extract the method information of the remote object and both the transparent proxy and <xref:System.Runtime.Remoting.Proxies.RealProxy> objects are created."},{"content":"A &lt;xref:System.Runtime.Remoting.ObjRef&gt; contains information that describes the &lt;xref:System.Type&gt; and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remote application where the object is located.","pos":[852,1161],"source":"       A <xref:System.Runtime.Remoting.ObjRef> contains information that describes the <xref:System.Type> and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remote application where the object is located."}]}]},{"pos":[24768,24877],"content":"A proxy connected to the object you want to create a <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.ObjRef\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for.","needQuote":true,"needEscape":true,"source":"A proxy connected to the object you want to create a <xref href=\"System.Runtime.Remoting.ObjRef\"></xref> for."},{"pos":[24952,25188],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.ObjRef\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the remote object the specified proxy is connected to, or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the object or proxy have not been marshaled.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Runtime.Remoting.ObjRef\"></xref> that represents the remote object the specified proxy is connected to, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the object or proxy have not been marshaled."},{"pos":[25387,25448],"content":"The immediate caller does not have infrastructure permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The immediate caller does not have infrastructure permission.","pos":[0,61]}]},{"pos":[25900,25963],"content":"Returns the real proxy backing the specified transparent proxy.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the real proxy backing the specified transparent proxy.","pos":[0,63]}]},{"pos":[25976,26883],"content":"A client that uses an object across any kind of remoting boundary is actually using a transparent proxy for the object. The transparent proxy gives the impression that the actual object resides in the client's space. It achieves this by forwarding calls made on it to the real object using the remoting infrastructure.       The transparent proxy is backed by an instance of a managed runtime class of type <xref:System.Runtime.Remoting.Proxies.RealProxy>. The <xref:System.Runtime.Remoting.Proxies.RealProxy> implements a part of the functionality needed to forward the operations from the transparent proxy.       A proxy object inherits the associated semantics of managed objects such as garbage collection, support for members and methods, and can be extended to form new classes. The proxy acts as an object of the same class as the remote object (transparent proxy), and is also a managed object.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A client that uses an object across any kind of remoting boundary is actually using a transparent proxy for the object. The transparent proxy gives the impression that the actual object resides in the client's space. It achieves this by forwarding calls made on it to the real object using the remoting infrastructure.       The transparent proxy is backed by an instance of a managed runtime class of type <xref:System.Runtime.Remoting.Proxies.RealProxy>. The <xref:System.Runtime.Remoting.Proxies.RealProxy> implements a part of the functionality needed to forward the operations from the transparent proxy.       A proxy object inherits the associated semantics of managed objects such as garbage collection, support for members and methods, and can be extended to form new classes. The proxy acts as an object of the same class as the remote object (transparent proxy), and is also a managed object.","pos":[0,903],"nodes":[{"content":"A client that uses an object across any kind of remoting boundary is actually using a transparent proxy for the object.","pos":[0,119]},{"content":"The transparent proxy gives the impression that the actual object resides in the client's space.","pos":[120,216]},{"content":"It achieves this by forwarding calls made on it to the real object using the remoting infrastructure.","pos":[217,318]},{"content":"The transparent proxy is backed by an instance of a managed runtime class of type &lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;.","pos":[325,456],"source":"       The transparent proxy is backed by an instance of a managed runtime class of type <xref:System.Runtime.Remoting.Proxies.RealProxy>."},{"content":"The &lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt; implements a part of the functionality needed to forward the operations from the transparent proxy.","pos":[457,609],"source":" The <xref:System.Runtime.Remoting.Proxies.RealProxy> implements a part of the functionality needed to forward the operations from the transparent proxy."},{"content":"A proxy object inherits the associated semantics of managed objects such as garbage collection, support for members and methods, and can be extended to form new classes.","pos":[616,785]},{"content":"The proxy acts as an object of the same class as the remote object (transparent proxy), and is also a managed object.","pos":[786,903]}]}]},{"pos":[27070,27090],"content":"A transparent proxy.","needQuote":true,"needEscape":true,"nodes":[{"content":"A transparent proxy.","pos":[0,20]}]},{"pos":[27176,27230],"content":"The real proxy instance backing the transparent proxy.","needQuote":true,"needEscape":true,"nodes":[{"content":"The real proxy instance backing the transparent proxy.","pos":[0,54]}]},{"pos":[27424,27485],"content":"The immediate caller does not have infrastructure permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The immediate caller does not have infrastructure permission.","pos":[0,61]}]},{"pos":[27972,28040],"content":"Returns the <xref:System.Type> of the object with the specified URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the &lt;xref:System.Type&gt; of the object with the specified URI.","pos":[0,68],"source":"Returns the <xref:System.Type> of the object with the specified URI."}]},{"pos":[28052,28412],"content":"Because remoting identifies endpoints using URIs, the GetServerTypeForUri method is very useful in the pluggable parts of the remoting infrastructure (for example, channel sinks, dynamic sinks, and context sinks) that use <xref:System.Runtime.Remoting.Messaging.IMessage> objects, because the current method will return the associated type object from the URI.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Because remoting identifies endpoints using URIs, the GetServerTypeForUri method is very useful in the pluggable parts of the remoting infrastructure (for example, channel sinks, dynamic sinks, and context sinks) that use &lt;xref:System.Runtime.Remoting.Messaging.IMessage&gt; objects, because the current method will return the associated type object from the URI.","pos":[0,360],"source":"Because remoting identifies endpoints using URIs, the GetServerTypeForUri method is very useful in the pluggable parts of the remoting infrastructure (for example, channel sinks, dynamic sinks, and context sinks) that use <xref:System.Runtime.Remoting.Messaging.IMessage> objects, because the current method will return the associated type object from the URI."}]},{"pos":[28942,29002],"content":"The URI of the object whose <xref:System.Type> is requested.","needQuote":true,"needEscape":true,"nodes":[{"content":"The URI of the object whose &lt;xref:System.Type&gt; is requested.","pos":[0,60],"source":"The URI of the object whose <xref:System.Type> is requested."}]},{"pos":[29058,29118],"content":"The <xref:System.Type> of the object with the specified URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the object with the specified URI.","pos":[0,60],"source":"The <xref:System.Type> of the object with the specified URI."}]},{"pos":[29319,29523],"content":"Either the immediate caller does not have infrastructure permission, or at least one of the callers higher in the callstack does not have permission to retrieve the type information of non-public members.","needQuote":true,"needEscape":true,"nodes":[{"content":"Either the immediate caller does not have infrastructure permission, or at least one of the callers higher in the callstack does not have permission to retrieve the type information of non-public members.","pos":[0,204]}]},{"pos":[30149,30186],"content":"Retrieves a session ID for a message.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves a session ID for a message.","pos":[0,37]}]},{"pos":[30199,30535],"content":"The same session ID might be returned for objects in the same application, but this method will never return the same session ID for two objects in different remote applications.       For more information about identifying sessions and session IDs, see ASP.Net [ASP.NET Session State Overview](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The same session ID might be returned for objects in the same application, but this method will never return the same session ID for two objects in different remote applications.","pos":[0,178]},{"content":"For more information about identifying sessions and session IDs, see ASP.Net <bpt id=\"p1\">[</bpt>ASP.NET Session State Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[185,334],"source":"       For more information about identifying sessions and session IDs, see ASP.Net [ASP.NET Session State Overview](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[31213,31323],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.Messaging.IMethodMessage\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for which a session ID is requested.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Runtime.Remoting.Messaging.IMethodMessage\"></xref> for which a session ID is requested."},{"pos":[31381,31446],"content":"A session ID string that uniquely identifies the current session.","needQuote":true,"needEscape":true,"nodes":[{"content":"A session ID string that uniquely identifies the current session.","pos":[0,65]}]},{"pos":[31656,31717],"content":"The immediate caller does not have infrastructure permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The immediate caller does not have infrastructure permission.","pos":[0,61]}]},{"pos":[32293,32386],"content":"Returns a Boolean value that indicates whether the method in the given message is overloaded.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a Boolean value that indicates whether the method in the given message is overloaded.","pos":[0,93]}]},{"pos":[32614,32673],"content":"The message that contains a call to the method in question.","needQuote":true,"needEscape":true,"nodes":[{"content":"The message that contains a call to the method in question.","pos":[0,59]}]},{"pos":[32732,32923],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the method called in <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">msg</ph><ept id=\"p2\">&lt;/code&gt;</ept> is overloaded; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the method called in <code>msg</code> is overloaded; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[33123,33184],"content":"The immediate caller does not have infrastructure permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The immediate caller does not have infrastructure permission.","pos":[0,61]}]},{"pos":[33686,33879],"content":"Returns a Boolean value that indicates whether the object specified by the given transparent proxy is contained in a different application domain than the object that called the current method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a Boolean value that indicates whether the object specified by the given transparent proxy is contained in a different application domain than the object that called the current method.","pos":[0,193]}]},{"pos":[33891,34030],"content":"For information about application domains, see <bpt id=\"p1\">[</bpt>Application Domains<ept id=\"p1\">](http://msdn.microsoft.com/en-us/39e57d07-a740-4cd4-ae82-e119ea3856c1)</ept>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"For information about application domains, see [Application Domains](http://msdn.microsoft.com/en-us/39e57d07-a740-4cd4-ae82-e119ea3856c1)."},{"pos":[34546,34566],"content":"The object to check.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to check.","pos":[0,20]}]},{"pos":[34625,34816],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the object is out of the current application domain; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the object is out of the current application domain; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[35402,35574],"content":"Returns a Boolean value that indicates whether the object represented by the given proxy is contained in a different context than the object that called the current method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a Boolean value that indicates whether the object represented by the given proxy is contained in a different context than the object that called the current method.","pos":[0,172]}]},{"pos":[35586,35945],"content":"A context is an ordered sequence of properties that define an environment for the objects that reside inside it. Contexts are created during the activation process for objects that are configured to require certain automatic services such synchronization, transactions, just-in-time activation, security, and so on. Multiple objects can live inside a context.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A context is an ordered sequence of properties that define an environment for the objects that reside inside it. Contexts are created during the activation process for objects that are configured to require certain automatic services such synchronization, transactions, just-in-time activation, security, and so on. Multiple objects can live inside a context.","pos":[0,359],"nodes":[{"content":"A context is an ordered sequence of properties that define an environment for the objects that reside inside it.","pos":[0,112]},{"content":"Contexts are created during the activation process for objects that are configured to require certain automatic services such synchronization, transactions, just-in-time activation, security, and so on.","pos":[113,315]},{"content":"Multiple objects can live inside a context.","pos":[316,359]}]}]},{"pos":[36456,36476],"content":"The object to check.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to check.","pos":[0,20]}]},{"pos":[36535,36715],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the object is out of the current context; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the object is out of the current context; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[37281,37479],"content":"Returns a Boolean value that indicates whether the client that called the method specified in the given message is waiting for the server to finish processing the method before continuing execution.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a Boolean value that indicates whether the client that called the method specified in the given message is waiting for the server to finish processing the method before continuing execution.","pos":[0,198]}]},{"pos":[37492,37901],"content":"When a one-way method is called, the client does not wait for the server to finish processing the message. The client method returns to the application with no knowledge of whether or not the server will successfully process the message. Methods are marked as one way using the <xref:System.Runtime.Remoting.Messaging.OneWayAttribute>.       One-way methods cannot have a return value or any out parameters.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When a one-way method is called, the client does not wait for the server to finish processing the message. The client method returns to the application with no knowledge of whether or not the server will successfully process the message. Methods are marked as one way using the <xref:System.Runtime.Remoting.Messaging.OneWayAttribute>.       One-way methods cannot have a return value or any out parameters.","pos":[0,407],"nodes":[{"content":"When a one-way method is called, the client does not wait for the server to finish processing the message.","pos":[0,106]},{"content":"The client method returns to the application with no knowledge of whether or not the server will successfully process the message.","pos":[107,237]},{"content":"Methods are marked as one way using the &lt;xref:System.Runtime.Remoting.Messaging.OneWayAttribute&gt;.","pos":[238,335],"source":" Methods are marked as one way using the <xref:System.Runtime.Remoting.Messaging.OneWayAttribute>."},{"content":"One-way methods cannot have a return value or any out parameters.","pos":[342,407]}]}]},{"pos":[38455,38478],"content":"The method in question.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method in question.","pos":[0,23]}]},{"pos":[38537,38698],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the method is one way; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the method is one way; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[38888,38949],"content":"The immediate caller does not have infrastructure permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The immediate caller does not have infrastructure permission.","pos":[0,61]}]},{"pos":[39431,39535],"content":"Returns a Boolean value that indicates whether the given object is a transparent proxy or a real object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a Boolean value that indicates whether the given object is a transparent proxy or a real object.","pos":[0,104]}]},{"pos":[39548,40857],"content":"A client that uses an object across any kind of a remoting boundary is actually using a transparent proxy for the object. The transparent proxy gives the impression that the actual object resides in the client's space. It achieves this by forwarding calls made on it to the real object using the remoting infrastructure.       The transparent proxy is itself housed by an instance of a managed runtime class of type <xref:System.Runtime.Remoting.Proxies.RealProxy>. The <xref:System.Runtime.Remoting.Proxies.RealProxy> implements a part of the functionality needed to forward the operations from the transparent proxy. A proxy object inherits the associated semantics of managed objects such as garbage collection, support for members and methods, and can be extended to form new classes. Thus the proxy has a dual nature; on the one hand it needs to act as an object of the same class as the remote object (transparent proxy), and on the other it is a managed object itself.       A proxy object can be used without regard to any remoting subdivisions within a <xref:System.AppDomain>. Applications need not distinguish between proxy references and object references. However, service providers dealing with issues such as activation, lifetime management, and transactions need to make such distinctions.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A client that uses an object across any kind of a remoting boundary is actually using a transparent proxy for the object. The transparent proxy gives the impression that the actual object resides in the client's space. It achieves this by forwarding calls made on it to the real object using the remoting infrastructure.       The transparent proxy is itself housed by an instance of a managed runtime class of type <xref:System.Runtime.Remoting.Proxies.RealProxy>. The <xref:System.Runtime.Remoting.Proxies.RealProxy> implements a part of the functionality needed to forward the operations from the transparent proxy. A proxy object inherits the associated semantics of managed objects such as garbage collection, support for members and methods, and can be extended to form new classes. Thus the proxy has a dual nature; on the one hand it needs to act as an object of the same class as the remote object (transparent proxy), and on the other it is a managed object itself.       A proxy object can be used without regard to any remoting subdivisions within a <xref:System.AppDomain>. Applications need not distinguish between proxy references and object references. However, service providers dealing with issues such as activation, lifetime management, and transactions need to make such distinctions.","pos":[0,1305],"nodes":[{"content":"A client that uses an object across any kind of a remoting boundary is actually using a transparent proxy for the object.","pos":[0,121]},{"content":"The transparent proxy gives the impression that the actual object resides in the client's space.","pos":[122,218]},{"content":"It achieves this by forwarding calls made on it to the real object using the remoting infrastructure.","pos":[219,320]},{"content":"The transparent proxy is itself housed by an instance of a managed runtime class of type &lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;.","pos":[327,465],"source":"       The transparent proxy is itself housed by an instance of a managed runtime class of type <xref:System.Runtime.Remoting.Proxies.RealProxy>."},{"content":"The &lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt; implements a part of the functionality needed to forward the operations from the transparent proxy.","pos":[466,618],"source":" The <xref:System.Runtime.Remoting.Proxies.RealProxy> implements a part of the functionality needed to forward the operations from the transparent proxy."},{"content":"A proxy object inherits the associated semantics of managed objects such as garbage collection, support for members and methods, and can be extended to form new classes.","pos":[619,788]},{"content":"Thus the proxy has a dual nature; on the one hand it needs to act as an object of the same class as the remote object (transparent proxy), and on the other it is a managed object itself.","pos":[789,975]},{"content":"A proxy object can be used without regard to any remoting subdivisions within a &lt;xref:System.AppDomain&gt;.","pos":[982,1086],"source":"       A proxy object can be used without regard to any remoting subdivisions within a <xref:System.AppDomain>."},{"content":"Applications need not distinguish between proxy references and object references.","pos":[1087,1168]},{"content":"However, service providers dealing with issues such as activation, lifetime management, and transactions need to make such distinctions.","pos":[1169,1305]}]}]},{"pos":[41593,41630],"content":"The reference to the object to check.","needQuote":true,"needEscape":true,"nodes":[{"content":"The reference to the object to check.","pos":[0,37]}]},{"pos":[41689,41825],"content":"A Boolean value that indicates whether the object specified in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">proxy</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is a transparent proxy or a real object.","needQuote":true,"needEscape":true,"source":"A Boolean value that indicates whether the object specified in the <code>proxy</code> parameter is a transparent proxy or a real object."},{"pos":[42382,42444],"content":"Logs the stage in a remoting exchange to an external debugger.","needQuote":true,"needEscape":true,"nodes":[{"content":"Logs the stage in a remoting exchange to an external debugger.","pos":[0,62]}]},{"pos":[42456,42592],"content":"A <ph id=\"ph1\">`\"REMOTING_PERF\"`</ph> preprocessing symbol is applied to the method by using the &lt;xref:System.Diagnostics.ConditionalAttribute&gt; attribute.","needQuote":true,"needEscape":true,"extradata":"MT","source":"A `\"REMOTING_PERF\"` preprocessing symbol is applied to the method by using the <xref:System.Diagnostics.ConditionalAttribute> attribute."},{"pos":[42741,42821],"content":"An internally defined constant that identifies the stage in a remoting exchange.","needQuote":true,"needEscape":true,"nodes":[{"content":"An internally defined constant that identifies the stage in a remoting exchange.","pos":[0,80]}]},{"pos":[43396,43597],"content":"Takes a <bpt id=\"p1\">&lt;xref href=\"System.MarshalByRefObject\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, registers it with the remoting infrastructure, and converts it into an instance of the <bpt id=\"p2\">&lt;xref href=\"System.Runtime.Remoting.ObjRef\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Takes a <xref href=\"System.MarshalByRefObject\"></xref>, registers it with the remoting infrastructure, and converts it into an instance of the <xref href=\"System.Runtime.Remoting.ObjRef\"></xref> class."},{"pos":[43610,45269],"content":"A <xref:System.Runtime.Remoting.ObjRef> is a serializable representation of an object used to transfer an object reference across an application domain boundary. Creating a <xref:System.Runtime.Remoting.ObjRef> for an object is known as marshaling. The <xref:System.Runtime.Remoting.ObjRef> can be transferred through a channel into another application domain (possibly on another process or computer). Once in the other application domain, the <xref:System.Runtime.Remoting.ObjRef> must be parsed to create a proxy for the object, generally connected to the real object. This operation is known as unmarshaling.       A <xref:System.Runtime.Remoting.ObjRef> contains information that describes the <xref:System.Type> and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located.       During marshaling, the context from the current thread is used, not the context that was active when the object was created. If a URI was not explicitly set by the <xref:System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal%2A> method, it is automatically generated by the remoting identity infrastructure.       You cannot associate a URI with a proxy for one of two reasons: either the URI was generated at the server side for the object it represents, or the object is well known, in which case the URI is known. For this reason, if the `Obj` parameter is a proxy, an exception will be thrown. For custom proxies this restriction is relaxed because the transparent proxy is treated as the server object.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A &lt;xref:System.Runtime.Remoting.ObjRef&gt; is a serializable representation of an object used to transfer an object reference across an application domain boundary.","pos":[0,161],"source":"A <xref:System.Runtime.Remoting.ObjRef> is a serializable representation of an object used to transfer an object reference across an application domain boundary."},{"content":"Creating a &lt;xref:System.Runtime.Remoting.ObjRef&gt; for an object is known as marshaling.","pos":[162,248],"source":" Creating a <xref:System.Runtime.Remoting.ObjRef> for an object is known as marshaling."},{"content":"The &lt;xref:System.Runtime.Remoting.ObjRef&gt; can be transferred through a channel into another application domain (possibly on another process or computer).","pos":[249,402],"source":" The <xref:System.Runtime.Remoting.ObjRef> can be transferred through a channel into another application domain (possibly on another process or computer)."},{"content":"Once in the other application domain, the &lt;xref:System.Runtime.Remoting.ObjRef&gt; must be parsed to create a proxy for the object, generally connected to the real object.","pos":[403,571],"source":" Once in the other application domain, the <xref:System.Runtime.Remoting.ObjRef> must be parsed to create a proxy for the object, generally connected to the real object."},{"content":"This operation is known as unmarshaling.","pos":[572,612]},{"content":"A &lt;xref:System.Runtime.Remoting.ObjRef&gt; contains information that describes the &lt;xref:System.Type&gt; and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located.","pos":[619,930],"source":"       A <xref:System.Runtime.Remoting.ObjRef> contains information that describes the <xref:System.Type> and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located."},{"content":"During marshaling, the context from the current thread is used, not the context that was active when the object was created.","pos":[937,1061]},{"content":"If a URI was not explicitly set by the &lt;xref:System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal%2A&gt; method, it is automatically generated by the remoting identity infrastructure.","pos":[1062,1253],"source":" If a URI was not explicitly set by the <xref:System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal%2A> method, it is automatically generated by the remoting identity infrastructure."},{"content":"You cannot associate a URI with a proxy for one of two reasons: either the URI was generated at the server side for the object it represents, or the object is well known, in which case the URI is known.","pos":[1260,1462]},{"content":"For this reason, if the <ph id=\"ph1\">`Obj`</ph> parameter is a proxy, an exception will be thrown.","pos":[1463,1543],"source":" For this reason, if the `Obj` parameter is a proxy, an exception will be thrown."},{"content":"For custom proxies this restriction is relaxed because the transparent proxy is treated as the server object.","pos":[1544,1653]}]},{"pos":[45460,45482],"content":"The object to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to convert.","pos":[0,22]}]},{"pos":[45557,45705],"content":"An instance of the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.ObjRef\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that represents the object specified in the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">Obj</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"An instance of the <xref href=\"System.Runtime.Remoting.ObjRef\"></xref> class that represents the object specified in the <code>Obj</code> parameter."},{"pos":[45910,45960],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">Obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is an object proxy.","needQuote":true,"needEscape":true,"source":"The <code>Obj</code> parameter is an object proxy."},{"pos":[46073,46191],"content":"At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.","needQuote":true,"needEscape":true,"nodes":[{"content":"At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.","pos":[0,118]}]},{"pos":[46727,46898],"content":"Converts the given <bpt id=\"p1\">&lt;xref href=\"System.MarshalByRefObject\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> into an instance of the <bpt id=\"p2\">&lt;xref href=\"System.Runtime.Remoting.ObjRef\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> class with the specified URI.","needQuote":true,"needEscape":true,"source":"Converts the given <xref href=\"System.MarshalByRefObject\"></xref> into an instance of the <xref href=\"System.Runtime.Remoting.ObjRef\"></xref> class with the specified URI."},{"pos":[46911,48378],"content":"A <xref:System.Runtime.Remoting.ObjRef> is a serializable representation of an object used to transfer an object reference across an application domain boundary. Creating a <xref:System.Runtime.Remoting.ObjRef> for an object is known as marshaling. The <xref:System.Runtime.Remoting.ObjRef> can be transferred through a channel into another application domain (possibly on another process or computer). Once in the other application domain, the <xref:System.Runtime.Remoting.ObjRef> must be parsed to create a proxy for the object, generally connected to the real object. This operation is known as unmarshaling.       A <xref:System.Runtime.Remoting.ObjRef> contains information that describes the <xref:System.Type> and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located.       During marshaling, the context from the current thread is used, not the context that was active when the object was created.       You cannot associate a URI with a proxy for one of two reasons: either the URI was generated at the server side for the object it represents, or the object is well known, in which case the URI is known. For this reason, if the `Obj` parameter is a proxy, an exception will be thrown. For custom proxies this restriction is relaxed because the transparent proxy is treated as the server object.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A &lt;xref:System.Runtime.Remoting.ObjRef&gt; is a serializable representation of an object used to transfer an object reference across an application domain boundary.","pos":[0,161],"source":"A <xref:System.Runtime.Remoting.ObjRef> is a serializable representation of an object used to transfer an object reference across an application domain boundary."},{"content":"Creating a &lt;xref:System.Runtime.Remoting.ObjRef&gt; for an object is known as marshaling.","pos":[162,248],"source":" Creating a <xref:System.Runtime.Remoting.ObjRef> for an object is known as marshaling."},{"content":"The &lt;xref:System.Runtime.Remoting.ObjRef&gt; can be transferred through a channel into another application domain (possibly on another process or computer).","pos":[249,402],"source":" The <xref:System.Runtime.Remoting.ObjRef> can be transferred through a channel into another application domain (possibly on another process or computer)."},{"content":"Once in the other application domain, the &lt;xref:System.Runtime.Remoting.ObjRef&gt; must be parsed to create a proxy for the object, generally connected to the real object.","pos":[403,571],"source":" Once in the other application domain, the <xref:System.Runtime.Remoting.ObjRef> must be parsed to create a proxy for the object, generally connected to the real object."},{"content":"This operation is known as unmarshaling.","pos":[572,612]},{"content":"A &lt;xref:System.Runtime.Remoting.ObjRef&gt; contains information that describes the &lt;xref:System.Type&gt; and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located.","pos":[619,930],"source":"       A <xref:System.Runtime.Remoting.ObjRef> contains information that describes the <xref:System.Type> and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located."},{"content":"During marshaling, the context from the current thread is used, not the context that was active when the object was created.","pos":[937,1061]},{"content":"You cannot associate a URI with a proxy for one of two reasons: either the URI was generated at the server side for the object it represents, or the object is well known, in which case the URI is known.","pos":[1068,1270]},{"content":"For this reason, if the <ph id=\"ph1\">`Obj`</ph> parameter is a proxy, an exception will be thrown.","pos":[1271,1351],"source":" For this reason, if the `Obj` parameter is a proxy, an exception will be thrown."},{"content":"For custom proxies this restriction is relaxed because the transparent proxy is treated as the server object.","pos":[1352,1461]}]},{"pos":[49071,49093],"content":"The object to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to convert.","pos":[0,22]}]},{"pos":[49153,49325],"content":"The specified URI with which to initialize the new <xref href=\"System.Runtime.Remoting.ObjRef\"></xref>. Can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified URI with which to initialize the new <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.ObjRef\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,103],"source":"The specified URI with which to initialize the new <xref href=\"System.Runtime.Remoting.ObjRef\"></xref>."},{"content":"Can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[104,172],"source":" Can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[49400,49548],"content":"An instance of the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.ObjRef\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that represents the object specified in the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">Obj</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"An instance of the <xref href=\"System.Runtime.Remoting.ObjRef\"></xref> class that represents the object specified in the <code>Obj</code> parameter."},{"pos":[49753,49893],"content":"<ph id=\"ph1\">&lt;code&gt;Obj&lt;/code&gt;</ph> is an object proxy, and the <ph id=\"ph2\">&lt;code&gt;URI&lt;/code&gt;</ph> parameter is not <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>Obj</code> is an object proxy, and the <code>URI</code> parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[50006,50124],"content":"At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.","needQuote":true,"needEscape":true,"nodes":[{"content":"At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.","pos":[0,118]}]},{"pos":[50699,50912],"content":"Takes a <bpt id=\"p1\">&lt;xref href=\"System.MarshalByRefObject\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and converts it into an instance of the <bpt id=\"p2\">&lt;xref href=\"System.Runtime.Remoting.ObjRef\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> class with the specified URI, and the provided &lt;xref:System.Type&gt;.","needQuote":true,"needEscape":true,"source":"Takes a <xref href=\"System.MarshalByRefObject\"></xref> and converts it into an instance of the <xref href=\"System.Runtime.Remoting.ObjRef\"></xref> class with the specified URI, and the provided <xref:System.Type>."},{"pos":[50925,52738],"content":"A <xref:System.Runtime.Remoting.ObjRef> is a serializable representation of an object used to transfer an object reference across an application domain boundary. Creating a <xref:System.Runtime.Remoting.ObjRef> for an object is known as marshaling. The <xref:System.Runtime.Remoting.ObjRef> can be transferred through a channel into another application domain (possibly on another process or computer). Once in the other application domain, the <xref:System.Runtime.Remoting.ObjRef> must be parsed to create a proxy for the object, generally connected to the real object. This operation is known as unmarshaling.       A <xref:System.Runtime.Remoting.ObjRef> contains information that describes the <xref:System.Type> and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located.       The specified <xref:System.Type> is used by the remoting infrastructure to limit the scope of the exposed type hierarchy. For example, if object A derives from object B, which derives from object C, and <xref:System.Runtime.Remoting.RemotingServices.Marshal%2A> is called, then the client can cast the proxy between C and B but not to A.       During marshaling, the context from the current thread is used, not the context that was active when the object was created.       You cannot associate a URI with a proxy for one of two reasons: either the URI was generated at the server side for the object it represents, or the object is well known, in which case the URI is known. For this reason, if the `Obj` parameter is a proxy, an exception will be thrown. For custom proxies this restriction is relaxed because the transparent proxy is treated as the server object.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A &lt;xref:System.Runtime.Remoting.ObjRef&gt; is a serializable representation of an object used to transfer an object reference across an application domain boundary.","pos":[0,161],"source":"A <xref:System.Runtime.Remoting.ObjRef> is a serializable representation of an object used to transfer an object reference across an application domain boundary."},{"content":"Creating a &lt;xref:System.Runtime.Remoting.ObjRef&gt; for an object is known as marshaling.","pos":[162,248],"source":" Creating a <xref:System.Runtime.Remoting.ObjRef> for an object is known as marshaling."},{"content":"The &lt;xref:System.Runtime.Remoting.ObjRef&gt; can be transferred through a channel into another application domain (possibly on another process or computer).","pos":[249,402],"source":" The <xref:System.Runtime.Remoting.ObjRef> can be transferred through a channel into another application domain (possibly on another process or computer)."},{"content":"Once in the other application domain, the &lt;xref:System.Runtime.Remoting.ObjRef&gt; must be parsed to create a proxy for the object, generally connected to the real object.","pos":[403,571],"source":" Once in the other application domain, the <xref:System.Runtime.Remoting.ObjRef> must be parsed to create a proxy for the object, generally connected to the real object."},{"content":"This operation is known as unmarshaling.","pos":[572,612]},{"content":"A &lt;xref:System.Runtime.Remoting.ObjRef&gt; contains information that describes the &lt;xref:System.Type&gt; and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located.","pos":[619,930],"source":"       A <xref:System.Runtime.Remoting.ObjRef> contains information that describes the <xref:System.Type> and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located."},{"content":"The specified &lt;xref:System.Type&gt; is used by the remoting infrastructure to limit the scope of the exposed type hierarchy.","pos":[937,1058],"source":"       The specified <xref:System.Type> is used by the remoting infrastructure to limit the scope of the exposed type hierarchy."},{"content":"For example, if object A derives from object B, which derives from object C, and &lt;xref:System.Runtime.Remoting.RemotingServices.Marshal%2A&gt; is called, then the client can cast the proxy between C and B but not to A.       During marshaling, the context from the current thread is used, not the context that was active when the object was created.","pos":[1059,1405],"source":" For example, if object A derives from object B, which derives from object C, and <xref:System.Runtime.Remoting.RemotingServices.Marshal%2A> is called, then the client can cast the proxy between C and B but not to A.       During marshaling, the context from the current thread is used, not the context that was active when the object was created."},{"content":"You cannot associate a URI with a proxy for one of two reasons: either the URI was generated at the server side for the object it represents, or the object is well known, in which case the URI is known.","pos":[1412,1614]},{"content":"For this reason, if the <ph id=\"ph1\">`Obj`</ph> parameter is a proxy, an exception will be thrown.","pos":[1615,1695],"source":" For this reason, if the `Obj` parameter is a proxy, an exception will be thrown."},{"content":"For custom proxies this restriction is relaxed because the transparent proxy is treated as the server object.","pos":[1696,1805]}]},{"pos":[52964,53045],"content":"The object to convert into a <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.ObjRef\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The object to convert into a <xref href=\"System.Runtime.Remoting.ObjRef\"></xref>."},{"pos":[53108,53247],"content":"The URI the object specified in the `Obj` parameter is marshaled with. Can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The URI the object specified in the <ph id=\"ph1\">`Obj`</ph> parameter is marshaled with.","pos":[0,70],"source":"The URI the object specified in the `Obj` parameter is marshaled with."},{"content":"Can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[71,139],"source":" Can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[53315,53428],"content":"The <xref:System.Type>`Obj` is marshaled as. Can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt;<ph id=\"ph1\">`Obj`</ph> is marshaled as.","pos":[0,44],"source":"The <xref:System.Type>`Obj` is marshaled as."},{"content":"Can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[45,113],"source":" Can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[53503,53651],"content":"An instance of the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.ObjRef\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that represents the object specified in the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">Obj</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"An instance of the <xref href=\"System.Runtime.Remoting.ObjRef\"></xref> class that represents the object specified in the <code>Obj</code> parameter."},{"pos":[53856,54010],"content":"<ph id=\"ph1\">&lt;code&gt;Obj&lt;/code&gt;</ph> is a proxy of a remote object, and the <ph id=\"ph2\">&lt;code&gt;ObjUri&lt;/code&gt;</ph> parameter is not <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>Obj</code> is a proxy of a remote object, and the <code>ObjUri</code> parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[54123,54241],"content":"At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.","needQuote":true,"needEscape":true,"nodes":[{"content":"At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.","pos":[0,118]}]},{"pos":[54852,54960],"content":"Sets the URI for the subsequent call to the <xref:System.Runtime.Remoting.RemotingServices.Marshal*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the URI for the subsequent call to the &lt;xref:System.Runtime.Remoting.RemotingServices.Marshal*&gt; method.","pos":[0,108],"source":"Sets the URI for the subsequent call to the <xref:System.Runtime.Remoting.RemotingServices.Marshal*> method."}]},{"pos":[56432,56460],"content":"The object to set a URI for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to set a URI for.","pos":[0,28]}]},{"pos":[56520,56562],"content":"The URI to assign to the specified object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The URI to assign to the specified object.","pos":[0,42]}]},{"pos":[56782,56899],"content":"<ph id=\"ph1\">&lt;code&gt;obj&lt;/code&gt;</ph> is not a local object, has already been marshaled, or the current method has already been called on.","needQuote":true,"needEscape":true,"source":"<code>obj</code> is not a local object, has already been marshaled, or the current method has already been called on."},{"pos":[57012,57130],"content":"At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.","needQuote":true,"needEscape":true,"nodes":[{"content":"At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.","pos":[0,118]}]},{"pos":[57601,57698],"content":"Takes a <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.ObjRef\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and creates a proxy object out of it.","needQuote":true,"needEscape":true,"source":"Takes a <xref href=\"System.Runtime.Remoting.ObjRef\"></xref> and creates a proxy object out of it."},{"pos":[57711,59051],"content":"A <xref:System.Runtime.Remoting.ObjRef> is a serializable representation of an object used to transfer an object reference across an application domain boundary. Creating a <xref:System.Runtime.Remoting.ObjRef> for an object is known as marshaling. The <xref:System.Runtime.Remoting.ObjRef> can be transferred through a channel into another application domain (possibly on another process or computer). Once in the other application domain, the <xref:System.Runtime.Remoting.ObjRef> must be parsed to create a proxy for the object, generally connected to the real object. This operation is known as unmarshaling. During unmarshaling, the <xref:System.Runtime.Remoting.ObjRef> is parsed to extract the method information of the remote object and both the transparent proxy and <xref:System.Runtime.Remoting.Proxies.RealProxy> objects are created. The content of the parsed <xref:System.Runtime.Remoting.ObjRef> is added to the transparent proxy before the transparent proxy is registered with the common language runtime.       A <xref:System.Runtime.Remoting.ObjRef> contains information that describes the <xref:System.Type> and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A <xref:System.Runtime.Remoting.ObjRef> is a serializable representation of an object used to transfer an object reference across an application domain boundary. Creating a <xref:System.Runtime.Remoting.ObjRef> for an object is known as marshaling. The <xref:System.Runtime.Remoting.ObjRef> can be transferred through a channel into another application domain (possibly on another process or computer). Once in the other application domain, the <xref:System.Runtime.Remoting.ObjRef> must be parsed to create a proxy for the object, generally connected to the real object. This operation is known as unmarshaling. During unmarshaling, the <xref:System.Runtime.Remoting.ObjRef> is parsed to extract the method information of the remote object and both the transparent proxy and <xref:System.Runtime.Remoting.Proxies.RealProxy> objects are created. The content of the parsed <xref:System.Runtime.Remoting.ObjRef> is added to the transparent proxy before the transparent proxy is registered with the common language runtime.       A <xref:System.Runtime.Remoting.ObjRef> contains information that describes the <xref:System.Type> and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located.","pos":[0,1338],"nodes":[{"content":"A &lt;xref:System.Runtime.Remoting.ObjRef&gt; is a serializable representation of an object used to transfer an object reference across an application domain boundary.","pos":[0,161],"source":"A <xref:System.Runtime.Remoting.ObjRef> is a serializable representation of an object used to transfer an object reference across an application domain boundary."},{"content":"Creating a &lt;xref:System.Runtime.Remoting.ObjRef&gt; for an object is known as marshaling.","pos":[162,248],"source":" Creating a <xref:System.Runtime.Remoting.ObjRef> for an object is known as marshaling."},{"content":"The &lt;xref:System.Runtime.Remoting.ObjRef&gt; can be transferred through a channel into another application domain (possibly on another process or computer).","pos":[249,402],"source":" The <xref:System.Runtime.Remoting.ObjRef> can be transferred through a channel into another application domain (possibly on another process or computer)."},{"content":"Once in the other application domain, the &lt;xref:System.Runtime.Remoting.ObjRef&gt; must be parsed to create a proxy for the object, generally connected to the real object.","pos":[403,571],"source":" Once in the other application domain, the <xref:System.Runtime.Remoting.ObjRef> must be parsed to create a proxy for the object, generally connected to the real object."},{"content":"This operation is known as unmarshaling.","pos":[572,612]},{"content":"During unmarshaling, the &lt;xref:System.Runtime.Remoting.ObjRef&gt; is parsed to extract the method information of the remote object and both the transparent proxy and &lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt; objects are created.","pos":[613,845],"source":" During unmarshaling, the <xref:System.Runtime.Remoting.ObjRef> is parsed to extract the method information of the remote object and both the transparent proxy and <xref:System.Runtime.Remoting.Proxies.RealProxy> objects are created."},{"content":"The content of the parsed &lt;xref:System.Runtime.Remoting.ObjRef&gt; is added to the transparent proxy before the transparent proxy is registered with the common language runtime.","pos":[846,1020],"source":" The content of the parsed <xref:System.Runtime.Remoting.ObjRef> is added to the transparent proxy before the transparent proxy is registered with the common language runtime."},{"content":"A &lt;xref:System.Runtime.Remoting.ObjRef&gt; contains information that describes the &lt;xref:System.Type&gt; and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located.","pos":[1027,1338],"source":"       A <xref:System.Runtime.Remoting.ObjRef> contains information that describes the <xref:System.Type> and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located."}]}]},{"pos":[59641,59768],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.ObjRef\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the remote object for which the proxy is being created.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Runtime.Remoting.ObjRef\"></xref> that represents the remote object for which the proxy is being created."},{"pos":[59826,59926],"content":"A proxy to the object that the given <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.ObjRef\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> represents.","needQuote":true,"needEscape":true,"source":"A proxy to the object that the given <xref href=\"System.Runtime.Remoting.ObjRef\"></xref> represents."},{"pos":[60099,60233],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.ObjRef\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance specified in the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">objectRef</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is not well-formed.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Runtime.Remoting.ObjRef\"></xref> instance specified in the <code>objectRef</code> parameter is not well-formed."},{"pos":[60346,60464],"content":"At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.","needQuote":true,"needEscape":true,"nodes":[{"content":"At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.","pos":[0,118]}]},{"pos":[60989,61125],"content":"Takes a <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.ObjRef\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and creates a proxy object out of it, refining it to the type on the server.","needQuote":true,"needEscape":true,"source":"Takes a <xref href=\"System.Runtime.Remoting.ObjRef\"></xref> and creates a proxy object out of it, refining it to the type on the server."},{"pos":[61138,62701],"content":"A <xref:System.Runtime.Remoting.ObjRef> is a serializable representation of an object used to transfer an object reference across an application domain boundary. Creating a <xref:System.Runtime.Remoting.ObjRef> for an object is known as marshaling. The <xref:System.Runtime.Remoting.ObjRef> can be transferred through a channel into another application domain (possibly on another process or computer). Once in the other application domain, the <xref:System.Runtime.Remoting.ObjRef> must be parsed to create a proxy for the object, generally connected to the real object. This operation is known as unmarshaling. During unmarshaling, the <xref:System.Runtime.Remoting.ObjRef> is parsed to extract the method information of the remote object and both the transparent proxy and <xref:System.Runtime.Remoting.Proxies.RealProxy> objects are created. The content of the parsed <xref:System.Runtime.Remoting.ObjRef> is added to the transparent proxy before the transparent proxy is registered with the common language runtime.       A <xref:System.Runtime.Remoting.ObjRef> contains information that describes the <xref:System.Type> and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located.       When first created, the proxy is of type <xref:System.MarshalByRefObject>. As you cast it into different types, the remoting infrastructure keeps track of the most used type to avoid loading the type unnecessarily.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A <xref:System.Runtime.Remoting.ObjRef> is a serializable representation of an object used to transfer an object reference across an application domain boundary. Creating a <xref:System.Runtime.Remoting.ObjRef> for an object is known as marshaling. The <xref:System.Runtime.Remoting.ObjRef> can be transferred through a channel into another application domain (possibly on another process or computer). Once in the other application domain, the <xref:System.Runtime.Remoting.ObjRef> must be parsed to create a proxy for the object, generally connected to the real object. This operation is known as unmarshaling. During unmarshaling, the <xref:System.Runtime.Remoting.ObjRef> is parsed to extract the method information of the remote object and both the transparent proxy and <xref:System.Runtime.Remoting.Proxies.RealProxy> objects are created. The content of the parsed <xref:System.Runtime.Remoting.ObjRef> is added to the transparent proxy before the transparent proxy is registered with the common language runtime.       A <xref:System.Runtime.Remoting.ObjRef> contains information that describes the <xref:System.Type> and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located.       When first created, the proxy is of type <xref:System.MarshalByRefObject>. As you cast it into different types, the remoting infrastructure keeps track of the most used type to avoid loading the type unnecessarily.","pos":[0,1559],"nodes":[{"content":"A &lt;xref:System.Runtime.Remoting.ObjRef&gt; is a serializable representation of an object used to transfer an object reference across an application domain boundary.","pos":[0,161],"source":"A <xref:System.Runtime.Remoting.ObjRef> is a serializable representation of an object used to transfer an object reference across an application domain boundary."},{"content":"Creating a &lt;xref:System.Runtime.Remoting.ObjRef&gt; for an object is known as marshaling.","pos":[162,248],"source":" Creating a <xref:System.Runtime.Remoting.ObjRef> for an object is known as marshaling."},{"content":"The &lt;xref:System.Runtime.Remoting.ObjRef&gt; can be transferred through a channel into another application domain (possibly on another process or computer).","pos":[249,402],"source":" The <xref:System.Runtime.Remoting.ObjRef> can be transferred through a channel into another application domain (possibly on another process or computer)."},{"content":"Once in the other application domain, the &lt;xref:System.Runtime.Remoting.ObjRef&gt; must be parsed to create a proxy for the object, generally connected to the real object.","pos":[403,571],"source":" Once in the other application domain, the <xref:System.Runtime.Remoting.ObjRef> must be parsed to create a proxy for the object, generally connected to the real object."},{"content":"This operation is known as unmarshaling.","pos":[572,612]},{"content":"During unmarshaling, the &lt;xref:System.Runtime.Remoting.ObjRef&gt; is parsed to extract the method information of the remote object and both the transparent proxy and &lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt; objects are created.","pos":[613,845],"source":" During unmarshaling, the <xref:System.Runtime.Remoting.ObjRef> is parsed to extract the method information of the remote object and both the transparent proxy and <xref:System.Runtime.Remoting.Proxies.RealProxy> objects are created."},{"content":"The content of the parsed &lt;xref:System.Runtime.Remoting.ObjRef&gt; is added to the transparent proxy before the transparent proxy is registered with the common language runtime.","pos":[846,1020],"source":" The content of the parsed <xref:System.Runtime.Remoting.ObjRef> is added to the transparent proxy before the transparent proxy is registered with the common language runtime."},{"content":"A &lt;xref:System.Runtime.Remoting.ObjRef&gt; contains information that describes the &lt;xref:System.Type&gt; and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located.","pos":[1027,1338],"source":"       A <xref:System.Runtime.Remoting.ObjRef> contains information that describes the <xref:System.Type> and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located."},{"content":"When first created, the proxy is of type &lt;xref:System.MarshalByRefObject&gt;.","pos":[1345,1419],"source":"       When first created, the proxy is of type <xref:System.MarshalByRefObject>."},{"content":"As you cast it into different types, the remoting infrastructure keeps track of the most used type to avoid loading the type unnecessarily.","pos":[1420,1559]}]}]},{"pos":[62913,63040],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.ObjRef\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the remote object for which the proxy is being created.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Runtime.Remoting.ObjRef\"></xref> that represents the remote object for which the proxy is being created."},{"pos":[63105,63287],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to refine the proxy to the type on the server; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to refine the proxy to the type on the server; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[63345,63445],"content":"A proxy to the object that the given <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.ObjRef\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> represents.","needQuote":true,"needEscape":true,"source":"A proxy to the object that the given <xref href=\"System.Runtime.Remoting.ObjRef\"></xref> represents."},{"pos":[63618,63752],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.ObjRef\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance specified in the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">objectRef</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is not well-formed.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Runtime.Remoting.ObjRef\"></xref> instance specified in the <code>objectRef</code> parameter is not well-formed."},{"pos":[63865,63983],"content":"At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.","needQuote":true,"needEscape":true,"nodes":[{"content":"At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.","pos":[0,118]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.RemotingServices\n  id: RemotingServices\n  children:\n  - System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String)\n  - System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String,System.Object)\n  - System.Runtime.Remoting.RemotingServices.Disconnect(System.MarshalByRefObject)\n  - System.Runtime.Remoting.RemotingServices.ExecuteMessage(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMethodCallMessage)\n  - System.Runtime.Remoting.RemotingServices.GetEnvoyChainForProxy(System.MarshalByRefObject)\n  - System.Runtime.Remoting.RemotingServices.GetLifetimeService(System.MarshalByRefObject)\n  - System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)\n  - System.Runtime.Remoting.RemotingServices.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Runtime.Remoting.RemotingServices.GetObjectUri(System.MarshalByRefObject)\n  - System.Runtime.Remoting.RemotingServices.GetObjRefForProxy(System.MarshalByRefObject)\n  - System.Runtime.Remoting.RemotingServices.GetRealProxy(System.Object)\n  - System.Runtime.Remoting.RemotingServices.GetServerTypeForUri(System.String)\n  - System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)\n  - System.Runtime.Remoting.RemotingServices.IsMethodOverloaded(System.Runtime.Remoting.Messaging.IMethodMessage)\n  - System.Runtime.Remoting.RemotingServices.IsObjectOutOfAppDomain(System.Object)\n  - System.Runtime.Remoting.RemotingServices.IsObjectOutOfContext(System.Object)\n  - System.Runtime.Remoting.RemotingServices.IsOneWay(System.Reflection.MethodBase)\n  - System.Runtime.Remoting.RemotingServices.IsTransparentProxy(System.Object)\n  - System.Runtime.Remoting.RemotingServices.LogRemotingStage(System.Int32)\n  - System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject)\n  - System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String)\n  - System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String,System.Type)\n  - System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal(System.MarshalByRefObject,System.String)\n  - System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef)\n  - System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef,System.Boolean)\n  langs:\n  - csharp\n  name: RemotingServices\n  nameWithType: RemotingServices\n  fullName: System.Runtime.Remoting.RemotingServices\n  type: Class\n  summary: Provides several methods for using and publishing remoted objects and proxies. This class cannot be inherited.\n  remarks: Unless you are a service provider dealing with issues such as activation, lifetime management, or transactions, you do not need to distinguish between proxy references and object references. The remoting infrastructure uses transparent proxies that give the impression that the remote objects reside in the client's space. Proxies achieve this by forwarding calls made on them to the real objects at remote locations.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public static class RemotingServices\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String)\n  id: Connect(System.Type,System.String)\n  parent: System.Runtime.Remoting.RemotingServices\n  langs:\n  - csharp\n  name: Connect(Type,String)\n  nameWithType: RemotingServices.Connect(Type,String)\n  fullName: System.Runtime.Remoting.RemotingServices.Connect(Type,String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Creates a proxy for a well-known object, given the <xref:System.Type> and URL.\n  remarks: The returned proxy object points to an endpoint served by the specified well-known object. No messages are sent over the network until a method is called on the proxy.\n  example:\n  - \"The following code example demonstrates how to use the Connect method to create a proxy to a well-known object.  \\n  \\n [!code-cpp[RemotingServices.BasicSample#1](~/add/codesnippet/cpp/m-system.runtime.remotin_104_1.cpp)]\\n [!code-cs[RemotingServices.BasicSample#1](~/add/codesnippet/csharp/m-system.runtime.remotin_104_1.cs)]\\n [!code-vb[RemotingServices.BasicSample#1](~/add/codesnippet/visualbasic/m-system.runtime.remotin_104_1.vb)]\"\n  syntax:\n    content: public static object Connect (Type classToProxy, string url);\n    parameters:\n    - id: classToProxy\n      type: System.Type\n      description: The <xref:System.Type> of a well-known object on the server end to which you want to connect.\n    - id: url\n      type: System.String\n      description: The URL of the server class.\n    return:\n      type: System.Object\n      description: A proxy to the remote object that points to an endpoint served by the specified well-known object.\n  overload: System.Runtime.Remoting.RemotingServices.Connect*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller does not have permission to configure remoting types and channels.\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String,System.Object)\n  id: Connect(System.Type,System.String,System.Object)\n  parent: System.Runtime.Remoting.RemotingServices\n  langs:\n  - csharp\n  name: Connect(Type,String,Object)\n  nameWithType: RemotingServices.Connect(Type,String,Object)\n  fullName: System.Runtime.Remoting.RemotingServices.Connect(Type,String,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Creates a proxy for a well-known object, given the <xref:System.Type>, URL, and channel-specific data.\n  remarks: \"The returned proxy object points to an endpoint served by the specified well-known object. No messages are sent over the network until a method is called on the proxy.  \\n  \\n The `data` object is used to communicate information to the channel, and is passed to the <xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=fullName> method.\"\n  syntax:\n    content: public static object Connect (Type classToProxy, string url, object data);\n    parameters:\n    - id: classToProxy\n      type: System.Type\n      description: The <xref:System.Type> of the well-known object to which you want to connect.\n    - id: url\n      type: System.String\n      description: The URL of the well-known object.\n    - id: data\n      type: System.Object\n      description: Channel specific data. Can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    return:\n      type: System.Object\n      description: A proxy that points to an endpoint that is served by the requested well-known object.\n  overload: System.Runtime.Remoting.RemotingServices.Connect*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller does not have permission to configure remoting types and channels.\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.RemotingServices.Disconnect(System.MarshalByRefObject)\n  id: Disconnect(System.MarshalByRefObject)\n  parent: System.Runtime.Remoting.RemotingServices\n  langs:\n  - csharp\n  name: Disconnect(MarshalByRefObject)\n  nameWithType: RemotingServices.Disconnect(MarshalByRefObject)\n  fullName: System.Runtime.Remoting.RemotingServices.Disconnect(MarshalByRefObject)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Stops an object from receiving any further messages through the registered remoting channels.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to use the Disconnect method to disconnect an object from the remoting channels.  \\n  \\n [!code-cpp[RemotingServices.BasicSample#2](~/add/codesnippet/cpp/m-system.runtime.remotin_81_1.cpp)]\\n [!code-cs[RemotingServices.BasicSample#2](~/add/codesnippet/csharp/m-system.runtime.remotin_81_1.cs)]\\n [!code-vb[RemotingServices.BasicSample#2](~/add/codesnippet/visualbasic/m-system.runtime.remotin_81_1.vb)]\"\n  syntax:\n    content: public static bool Disconnect (MarshalByRefObject obj);\n    parameters:\n    - id: obj\n      type: System.MarshalByRefObject\n      description: Object to disconnect from its channel.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the object was disconnected from the registered remoting channels successfully; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.Remoting.RemotingServices.Disconnect*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>obj</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>obj</code> parameter is a proxy.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller does not have permission to configure remoting types and channels.\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.RemotingServices.ExecuteMessage(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMethodCallMessage)\n  id: ExecuteMessage(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMethodCallMessage)\n  parent: System.Runtime.Remoting.RemotingServices\n  langs:\n  - csharp\n  name: ExecuteMessage(MarshalByRefObject,IMethodCallMessage)\n  nameWithType: RemotingServices.ExecuteMessage(MarshalByRefObject,IMethodCallMessage)\n  fullName: System.Runtime.Remoting.RemotingServices.ExecuteMessage(MarshalByRefObject,IMethodCallMessage)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Connects to the specified remote object, and executes the provided <xref href=\"System.Runtime.Remoting.Messaging.IMethodCallMessage\"></xref> on it.\n  remarks: The current method is used in special cases by the server to forward the specified method call to another, possibly remote, object. This method can be called only when the caller is in the appropriate context.\n  example:\n  - \"The following code example demonstrates how to use the ExecuteMessage method to forward method calls to remote objects.  \\n  \\n [!code-cs[RemotingServices.ExecuteMessage#1](~/add/codesnippet/csharp/491f5c62-582d-42d8-b526-_1.cs)]\\n [!code-cpp[RemotingServices.ExecuteMessage#1](~/add/codesnippet/cpp/491f5c62-582d-42d8-b526-_1.cpp)]\\n [!code-vb[RemotingServices.ExecuteMessage#1](~/add/codesnippet/visualbasic/491f5c62-582d-42d8-b526-_1.vb)]\"\n  syntax:\n    content: public static System.Runtime.Remoting.Messaging.IMethodReturnMessage ExecuteMessage (MarshalByRefObject target, System.Runtime.Remoting.Messaging.IMethodCallMessage reqMsg);\n    parameters:\n    - id: target\n      type: System.MarshalByRefObject\n      description: The remote object whose method you want to call.\n    - id: reqMsg\n      type: System.Runtime.Remoting.Messaging.IMethodCallMessage\n      description: A method call message to the specified remote object's method.\n    return:\n      type: System.Runtime.Remoting.Messaging.IMethodReturnMessage\n      description: The response of the remote method.\n  overload: System.Runtime.Remoting.RemotingServices.ExecuteMessage*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller does not have infrastructure permission.\n  - type: System.Runtime.Remoting.RemotingException\n    commentId: T:System.Runtime.Remoting.RemotingException\n    description: The method was called from a context other than the native context of the object.\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.RemotingServices.GetEnvoyChainForProxy(System.MarshalByRefObject)\n  id: GetEnvoyChainForProxy(System.MarshalByRefObject)\n  parent: System.Runtime.Remoting.RemotingServices\n  langs:\n  - csharp\n  name: GetEnvoyChainForProxy(MarshalByRefObject)\n  nameWithType: RemotingServices.GetEnvoyChainForProxy(MarshalByRefObject)\n  fullName: System.Runtime.Remoting.RemotingServices.GetEnvoyChainForProxy(MarshalByRefObject)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Returns a chain of envoy sinks that should be used when sending messages to the remote object represented by the specified proxy.\n  remarks: Envoy sinks are sinks sent along with the <xref:System.Runtime.Remoting.ObjRef> of an object that is used when returning messages to that object. The current method returns the envoy sinks that are used during communication between the proxy of the object and the object itself.\n  syntax:\n    content: public static System.Runtime.Remoting.Messaging.IMessageSink GetEnvoyChainForProxy (MarshalByRefObject obj);\n    parameters:\n    - id: obj\n      type: System.MarshalByRefObject\n      description: The proxy of the remote object that requested envoy sinks are associated with.\n    return:\n      type: System.Runtime.Remoting.Messaging.IMessageSink\n      description: A chain of envoy sinks associated with the specified proxy.\n  overload: System.Runtime.Remoting.RemotingServices.GetEnvoyChainForProxy*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller does not have infrastructure permission.\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.RemotingServices.GetLifetimeService(System.MarshalByRefObject)\n  id: GetLifetimeService(System.MarshalByRefObject)\n  parent: System.Runtime.Remoting.RemotingServices\n  langs:\n  - csharp\n  name: GetLifetimeService(MarshalByRefObject)\n  nameWithType: RemotingServices.GetLifetimeService(MarshalByRefObject)\n  fullName: System.Runtime.Remoting.RemotingServices.GetLifetimeService(MarshalByRefObject)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Returns a lifetime service object that controls the lifetime policy of the specified object.\n  remarks: For the default lifetime service the returned object will be an object of type <xref:System.Runtime.Remoting.Lifetime.ILease>. If the `obj` parameter is `null`, the method returns `null`.\n  example:\n  - \"The following code example demonstrates how to use the GetLifetimeService method to get a lifetime lease for the specified object.  \\n  \\n [!code-cpp[RemotingServices.TimerSample#1](~/add/codesnippet/cpp/a7d2891c-3dad-448c-949c-_1.cpp)]\\n [!code-cs[RemotingServices.TimerSample#1](~/add/codesnippet/csharp/a7d2891c-3dad-448c-949c-_1.cs)]\\n [!code-vb[RemotingServices.TimerSample#1](~/add/codesnippet/visualbasic/a7d2891c-3dad-448c-949c-_1.vb)]  \\n  \\n To compile and run this example, you will need to compile and run a server, timerserver.exe, and compile a shared library, timerservice.dll.  \\n  \\n The source for timerserver.exe follows:  \\n  \\n [!code-vb[RemotingServices.TimerSample#2](~/add/codesnippet/visualbasic/a7d2891c-3dad-448c-949c-_2.vb)]\\n [!code-cs[RemotingServices.TimerSample#2](~/add/codesnippet/csharp/a7d2891c-3dad-448c-949c-_2.cs)]  \\n  \\n The source for timerservice.dll follows:  \\n  \\n [!code-vb[RemotingServices.TimerSample#3](~/add/codesnippet/visualbasic/a7d2891c-3dad-448c-949c-_3.vb)]\\n [!code-cs[RemotingServices.TimerSample#3](~/add/codesnippet/csharp/a7d2891c-3dad-448c-949c-_3.cs)]\"\n  syntax:\n    content: public static object GetLifetimeService (MarshalByRefObject obj);\n    parameters:\n    - id: obj\n      type: System.MarshalByRefObject\n      description: The object to obtain lifetime service for.\n    return:\n      type: System.Object\n      description: The object that controls the lifetime of <code>obj</code>.\n  overload: System.Runtime.Remoting.RemotingServices.GetLifetimeService*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller does not have infrastructure permission.\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)\n  id: GetMethodBaseFromMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)\n  parent: System.Runtime.Remoting.RemotingServices\n  langs:\n  - csharp\n  name: GetMethodBaseFromMethodMessage(IMethodMessage)\n  nameWithType: RemotingServices.GetMethodBaseFromMethodMessage(IMethodMessage)\n  fullName: System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage(IMethodMessage)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Returns the method base from the given <xref href=\"System.Runtime.Remoting.Messaging.IMethodMessage\"></xref>.\n  remarks: This determines the method base from the <xref:System.Runtime.Remoting.Messaging.IMethodMessage.TypeName%2A>, <xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodName%2A>, and <xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodSignature%2A> properties of <xref:System.Runtime.Remoting.Messaging.IMethodMessage> and is used by classes implementing the <xref:System.Runtime.Remoting.Messaging.IMethodMessage> interface. Consumers of <xref:System.Runtime.Remoting.Messaging.IMethodMessage> classes should reference the <xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodBase%2A?displayProperty=fullName> property.\n  syntax:\n    content: public static System.Reflection.MethodBase GetMethodBaseFromMethodMessage (System.Runtime.Remoting.Messaging.IMethodMessage msg);\n    parameters:\n    - id: msg\n      type: System.Runtime.Remoting.Messaging.IMethodMessage\n      description: The method message to extract the method base from.\n    return:\n      type: System.Reflection.MethodBase\n      description: The method base extracted from the <code>msg</code> parameter.\n  overload: System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: Either the immediate caller does not have infrastructure permission, or at least one of the callers higher in the callstack does not have permission to retrieve the type information of non-public members.\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.RemotingServices.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Runtime.Remoting.RemotingServices\n  langs:\n  - csharp\n  name: GetObjectData(Object,SerializationInfo,StreamingContext)\n  nameWithType: RemotingServices.GetObjectData(Object,SerializationInfo,StreamingContext)\n  fullName: System.Runtime.Remoting.RemotingServices.GetObjectData(Object,SerializationInfo,StreamingContext)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Serializes the specified marshal by reference object into the provided <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref>.\n  syntax:\n    content: public static void GetObjectData (object obj, System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to serialize.\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> into which the object is serialized.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The source and destination of the serialization.\n  overload: System.Runtime.Remoting.RemotingServices.GetObjectData*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>obj</code> or <code>info</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller does not have infrastructure permission.\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.RemotingServices.GetObjectUri(System.MarshalByRefObject)\n  id: GetObjectUri(System.MarshalByRefObject)\n  parent: System.Runtime.Remoting.RemotingServices\n  langs:\n  - csharp\n  name: GetObjectUri(MarshalByRefObject)\n  nameWithType: RemotingServices.GetObjectUri(MarshalByRefObject)\n  fullName: System.Runtime.Remoting.RemotingServices.GetObjectUri(MarshalByRefObject)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Retrieves the URI for the specified object.\n  remarks: ''\n  example:\n  - >-\n    [!code-vb[System.Runtime.Remoting.RemotingServices#18](~/add/codesnippet/visualbasic/318892c3-7b62-40bd-9e3b-_1.vb)]\n     [!code-cs[System.Runtime.Remoting.RemotingServices#18](~/add/codesnippet/csharp/318892c3-7b62-40bd-9e3b-_1.cs)]\n     [!code-cpp[System.Runtime.Remoting.RemotingServices#18](~/add/codesnippet/cpp/318892c3-7b62-40bd-9e3b-_1.cpp)]\n  syntax:\n    content: public static string GetObjectUri (MarshalByRefObject obj);\n    parameters:\n    - id: obj\n      type: System.MarshalByRefObject\n      description: The <xref href=\"System.MarshalByRefObject\"></xref> for which a URI is requested.\n    return:\n      type: System.String\n      description: The URI of the specified object if it has one, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the object has not yet been marshaled.\n  overload: System.Runtime.Remoting.RemotingServices.GetObjectUri*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller does not have infrastructure permission.\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.RemotingServices.GetObjRefForProxy(System.MarshalByRefObject)\n  id: GetObjRefForProxy(System.MarshalByRefObject)\n  parent: System.Runtime.Remoting.RemotingServices\n  langs:\n  - csharp\n  name: GetObjRefForProxy(MarshalByRefObject)\n  nameWithType: RemotingServices.GetObjRefForProxy(MarshalByRefObject)\n  fullName: System.Runtime.Remoting.RemotingServices.GetObjRefForProxy(MarshalByRefObject)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Returns the <xref href=\"System.Runtime.Remoting.ObjRef\"></xref> that represents the remote object from the specified proxy.\n  remarks: \"A <xref:System.Runtime.Remoting.ObjRef> is a serializable representation of an object used to transfer an object reference across an application domain boundary. Creating a <xref:System.Runtime.Remoting.ObjRef> for an object is known as marshaling. The <xref:System.Runtime.Remoting.ObjRef> can be transferred through a channel into another application domain (possibly on another process or computer). Once in the other application domain, the <xref:System.Runtime.Remoting.ObjRef> must be parsed to create a proxy for the object, generally connected to the real object. This operation is known as unmarshaling. During unmarshaling, the <xref:System.Runtime.Remoting.ObjRef> is parsed to extract the method information of the remote object and both the transparent proxy and <xref:System.Runtime.Remoting.Proxies.RealProxy> objects are created.  \\n  \\n A <xref:System.Runtime.Remoting.ObjRef> contains information that describes the <xref:System.Type> and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remote application where the object is located.\"\n  example:\n  - \"The following code example demonstrates how to get a <xref:System.Runtime.Remoting.ObjRef> instance for the specified object.  \\n  \\n [!code-cpp[RemotingServices.GetObjRefForProxy#1](~/add/codesnippet/cpp/d6ce9a9a-8ec9-4559-9b2d-_1.cpp)]\\n [!code-vb[RemotingServices.GetObjRefForProxy#1](~/add/codesnippet/visualbasic/d6ce9a9a-8ec9-4559-9b2d-_1.vb)]\\n [!code-cs[RemotingServices.GetObjRefForProxy#1](~/add/codesnippet/csharp/d6ce9a9a-8ec9-4559-9b2d-_1.cs)]\"\n  syntax:\n    content: public static System.Runtime.Remoting.ObjRef GetObjRefForProxy (MarshalByRefObject obj);\n    parameters:\n    - id: obj\n      type: System.MarshalByRefObject\n      description: A proxy connected to the object you want to create a <xref href=\"System.Runtime.Remoting.ObjRef\"></xref> for.\n    return:\n      type: System.Runtime.Remoting.ObjRef\n      description: A <xref href=\"System.Runtime.Remoting.ObjRef\"></xref> that represents the remote object the specified proxy is connected to, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the object or proxy have not been marshaled.\n  overload: System.Runtime.Remoting.RemotingServices.GetObjRefForProxy*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller does not have infrastructure permission.\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.RemotingServices.GetRealProxy(System.Object)\n  id: GetRealProxy(System.Object)\n  parent: System.Runtime.Remoting.RemotingServices\n  langs:\n  - csharp\n  name: GetRealProxy(Object)\n  nameWithType: RemotingServices.GetRealProxy(Object)\n  fullName: System.Runtime.Remoting.RemotingServices.GetRealProxy(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Returns the real proxy backing the specified transparent proxy.\n  remarks: \"A client that uses an object across any kind of remoting boundary is actually using a transparent proxy for the object. The transparent proxy gives the impression that the actual object resides in the client's space. It achieves this by forwarding calls made on it to the real object using the remoting infrastructure.  \\n  \\n The transparent proxy is backed by an instance of a managed runtime class of type <xref:System.Runtime.Remoting.Proxies.RealProxy>. The <xref:System.Runtime.Remoting.Proxies.RealProxy> implements a part of the functionality needed to forward the operations from the transparent proxy.  \\n  \\n A proxy object inherits the associated semantics of managed objects such as garbage collection, support for members and methods, and can be extended to form new classes. The proxy acts as an object of the same class as the remote object (transparent proxy), and is also a managed object.\"\n  syntax:\n    content: public static System.Runtime.Remoting.Proxies.RealProxy GetRealProxy (object proxy);\n    parameters:\n    - id: proxy\n      type: System.Object\n      description: A transparent proxy.\n    return:\n      type: System.Runtime.Remoting.Proxies.RealProxy\n      description: The real proxy instance backing the transparent proxy.\n  overload: System.Runtime.Remoting.RemotingServices.GetRealProxy*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller does not have infrastructure permission.\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.RemotingServices.GetServerTypeForUri(System.String)\n  id: GetServerTypeForUri(System.String)\n  parent: System.Runtime.Remoting.RemotingServices\n  langs:\n  - csharp\n  name: GetServerTypeForUri(String)\n  nameWithType: RemotingServices.GetServerTypeForUri(String)\n  fullName: System.Runtime.Remoting.RemotingServices.GetServerTypeForUri(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Returns the <xref:System.Type> of the object with the specified URI.\n  remarks: Because remoting identifies endpoints using URIs, the GetServerTypeForUri method is very useful in the pluggable parts of the remoting infrastructure (for example, channel sinks, dynamic sinks, and context sinks) that use <xref:System.Runtime.Remoting.Messaging.IMessage> objects, because the current method will return the associated type object from the URI.\n  example:\n  - >-\n    [!code-vb[System.Runtime.Remoting.RemotingServices#7](~/add/codesnippet/visualbasic/m-system.runtime.remotin_84_1.vb)]\n     [!code-cs[System.Runtime.Remoting.RemotingServices#7](~/add/codesnippet/csharp/m-system.runtime.remotin_84_1.cs)]\n     [!code-cpp[System.Runtime.Remoting.RemotingServices#7](~/add/codesnippet/cpp/m-system.runtime.remotin_84_1.cpp)]\n  syntax:\n    content: public static Type GetServerTypeForUri (string URI);\n    parameters:\n    - id: URI\n      type: System.String\n      description: The URI of the object whose <xref:System.Type> is requested.\n    return:\n      type: System.Type\n      description: The <xref:System.Type> of the object with the specified URI.\n  overload: System.Runtime.Remoting.RemotingServices.GetServerTypeForUri*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: Either the immediate caller does not have infrastructure permission, or at least one of the callers higher in the callstack does not have permission to retrieve the type information of non-public members.\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)\n  id: GetSessionIdForMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)\n  parent: System.Runtime.Remoting.RemotingServices\n  langs:\n  - csharp\n  name: GetSessionIdForMethodMessage(IMethodMessage)\n  nameWithType: RemotingServices.GetSessionIdForMethodMessage(IMethodMessage)\n  fullName: System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage(IMethodMessage)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Retrieves a session ID for a message.\n  remarks: \"The same session ID might be returned for objects in the same application, but this method will never return the same session ID for two objects in different remote applications.  \\n  \\n For more information about identifying sessions and session IDs, see ASP.Net [ASP.NET Session State Overview](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following code example demonstrates how to get the session ID string for the current session.  \\n  \\n [!code-cs[RemotingServices.ExecuteMessage#1](~/add/codesnippet/csharp/b83444fc-48c3-47e9-b264-_1.cs)]\\n [!code-cpp[RemotingServices.ExecuteMessage#1](~/add/codesnippet/cpp/b83444fc-48c3-47e9-b264-_1.cpp)]\\n [!code-vb[RemotingServices.ExecuteMessage#1](~/add/codesnippet/visualbasic/b83444fc-48c3-47e9-b264-_1.vb)]\"\n  syntax:\n    content: public static string GetSessionIdForMethodMessage (System.Runtime.Remoting.Messaging.IMethodMessage msg);\n    parameters:\n    - id: msg\n      type: System.Runtime.Remoting.Messaging.IMethodMessage\n      description: The <xref href=\"System.Runtime.Remoting.Messaging.IMethodMessage\"></xref> for which a session ID is requested.\n    return:\n      type: System.String\n      description: A session ID string that uniquely identifies the current session.\n  overload: System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller does not have infrastructure permission.\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.RemotingServices.IsMethodOverloaded(System.Runtime.Remoting.Messaging.IMethodMessage)\n  id: IsMethodOverloaded(System.Runtime.Remoting.Messaging.IMethodMessage)\n  parent: System.Runtime.Remoting.RemotingServices\n  langs:\n  - csharp\n  name: IsMethodOverloaded(IMethodMessage)\n  nameWithType: RemotingServices.IsMethodOverloaded(IMethodMessage)\n  fullName: System.Runtime.Remoting.RemotingServices.IsMethodOverloaded(IMethodMessage)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Returns a Boolean value that indicates whether the method in the given message is overloaded.\n  syntax:\n    content: public static bool IsMethodOverloaded (System.Runtime.Remoting.Messaging.IMethodMessage msg);\n    parameters:\n    - id: msg\n      type: System.Runtime.Remoting.Messaging.IMethodMessage\n      description: The message that contains a call to the method in question.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the method called in <code>msg</code> is overloaded; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.Remoting.RemotingServices.IsMethodOverloaded*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller does not have infrastructure permission.\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.RemotingServices.IsObjectOutOfAppDomain(System.Object)\n  id: IsObjectOutOfAppDomain(System.Object)\n  parent: System.Runtime.Remoting.RemotingServices\n  langs:\n  - csharp\n  name: IsObjectOutOfAppDomain(Object)\n  nameWithType: RemotingServices.IsObjectOutOfAppDomain(Object)\n  fullName: System.Runtime.Remoting.RemotingServices.IsObjectOutOfAppDomain(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Returns a Boolean value that indicates whether the object specified by the given transparent proxy is contained in a different application domain than the object that called the current method.\n  remarks: For information about application domains, see [Application Domains](http://msdn.microsoft.com/en-us/39e57d07-a740-4cd4-ae82-e119ea3856c1).\n  example:\n  - >-\n    [!code-cpp[RemotingServices IsObject Snippets#1](~/add/codesnippet/cpp/m-system.runtime.remotin_103_1.cpp)]\n     [!code-vb[RemotingServices IsObject Snippets#1](~/add/codesnippet/visualbasic/m-system.runtime.remotin_103_1.vb)]\n     [!code-cs[RemotingServices IsObject Snippets#1](~/add/codesnippet/csharp/m-system.runtime.remotin_103_1.cs)]\n  syntax:\n    content: public static bool IsObjectOutOfAppDomain (object tp);\n    parameters:\n    - id: tp\n      type: System.Object\n      description: The object to check.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the object is out of the current application domain; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.Remoting.RemotingServices.IsObjectOutOfAppDomain*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.RemotingServices.IsObjectOutOfContext(System.Object)\n  id: IsObjectOutOfContext(System.Object)\n  parent: System.Runtime.Remoting.RemotingServices\n  langs:\n  - csharp\n  name: IsObjectOutOfContext(Object)\n  nameWithType: RemotingServices.IsObjectOutOfContext(Object)\n  fullName: System.Runtime.Remoting.RemotingServices.IsObjectOutOfContext(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Returns a Boolean value that indicates whether the object represented by the given proxy is contained in a different context than the object that called the current method.\n  remarks: A context is an ordered sequence of properties that define an environment for the objects that reside inside it. Contexts are created during the activation process for objects that are configured to require certain automatic services such synchronization, transactions, just-in-time activation, security, and so on. Multiple objects can live inside a context.\n  example:\n  - >-\n    [!code-cpp[RemotingServices IsObject Snippets#1](~/add/codesnippet/cpp/m-system.runtime.remotin_37_1.cpp)]\n     [!code-vb[RemotingServices IsObject Snippets#1](~/add/codesnippet/visualbasic/m-system.runtime.remotin_37_1.vb)]\n     [!code-cs[RemotingServices IsObject Snippets#1](~/add/codesnippet/csharp/m-system.runtime.remotin_37_1.cs)]\n  syntax:\n    content: public static bool IsObjectOutOfContext (object tp);\n    parameters:\n    - id: tp\n      type: System.Object\n      description: The object to check.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the object is out of the current context; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.Remoting.RemotingServices.IsObjectOutOfContext*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.RemotingServices.IsOneWay(System.Reflection.MethodBase)\n  id: IsOneWay(System.Reflection.MethodBase)\n  parent: System.Runtime.Remoting.RemotingServices\n  langs:\n  - csharp\n  name: IsOneWay(MethodBase)\n  nameWithType: RemotingServices.IsOneWay(MethodBase)\n  fullName: System.Runtime.Remoting.RemotingServices.IsOneWay(MethodBase)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Returns a Boolean value that indicates whether the client that called the method specified in the given message is waiting for the server to finish processing the method before continuing execution.\n  remarks: \"When a one-way method is called, the client does not wait for the server to finish processing the message. The client method returns to the application with no knowledge of whether or not the server will successfully process the message. Methods are marked as one way using the <xref:System.Runtime.Remoting.Messaging.OneWayAttribute>.  \\n  \\n One-way methods cannot have a return value or any out parameters.\"\n  example:\n  - >-\n    [!code-vb[System.Runtime.Remoting.RemotingServices#2](~/add/codesnippet/visualbasic/e9c4a9fc-d92a-4e43-97a5-_1.vb)]\n     [!code-cs[System.Runtime.Remoting.RemotingServices#2](~/add/codesnippet/csharp/e9c4a9fc-d92a-4e43-97a5-_1.cs)]\n     [!code-cpp[System.Runtime.Remoting.RemotingServices#2](~/add/codesnippet/cpp/e9c4a9fc-d92a-4e43-97a5-_1.cpp)]\n  syntax:\n    content: public static bool IsOneWay (System.Reflection.MethodBase method);\n    parameters:\n    - id: method\n      type: System.Reflection.MethodBase\n      description: The method in question.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the method is one way; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.Remoting.RemotingServices.IsOneWay*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller does not have infrastructure permission.\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.RemotingServices.IsTransparentProxy(System.Object)\n  id: IsTransparentProxy(System.Object)\n  parent: System.Runtime.Remoting.RemotingServices\n  langs:\n  - csharp\n  name: IsTransparentProxy(Object)\n  nameWithType: RemotingServices.IsTransparentProxy(Object)\n  fullName: System.Runtime.Remoting.RemotingServices.IsTransparentProxy(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Returns a Boolean value that indicates whether the given object is a transparent proxy or a real object.\n  remarks: \"A client that uses an object across any kind of a remoting boundary is actually using a transparent proxy for the object. The transparent proxy gives the impression that the actual object resides in the client's space. It achieves this by forwarding calls made on it to the real object using the remoting infrastructure.  \\n  \\n The transparent proxy is itself housed by an instance of a managed runtime class of type <xref:System.Runtime.Remoting.Proxies.RealProxy>. The <xref:System.Runtime.Remoting.Proxies.RealProxy> implements a part of the functionality needed to forward the operations from the transparent proxy. A proxy object inherits the associated semantics of managed objects such as garbage collection, support for members and methods, and can be extended to form new classes. Thus the proxy has a dual nature; on the one hand it needs to act as an object of the same class as the remote object (transparent proxy), and on the other it is a managed object itself.  \\n  \\n A proxy object can be used without regard to any remoting subdivisions within a <xref:System.AppDomain>. Applications need not distinguish between proxy references and object references. However, service providers dealing with issues such as activation, lifetime management, and transactions need to make such distinctions.\"\n  example:\n  - \"The following code example demonstrates the use of the IsTransparentProxy method to determine whether an object is a proxy or a real object. For the complete example code, see the example for the <xref:System.Runtime.Remoting.Messaging.AsyncResult> class.  \\n  \\n [!code-cpp[AsyncResult.NewExamples#6](~/add/codesnippet/cpp/m-system.runtime.remotin_47_1.cpp)]\\n [!code-vb[AsyncResult.NewExamples#6](~/add/codesnippet/visualbasic/m-system.runtime.remotin_47_1.vb)]\\n [!code-cs[AsyncResult.NewExamples#6](~/add/codesnippet/csharp/m-system.runtime.remotin_47_1.cs)]\"\n  syntax:\n    content: public static bool IsTransparentProxy (object proxy);\n    parameters:\n    - id: proxy\n      type: System.Object\n      description: The reference to the object to check.\n    return:\n      type: System.Boolean\n      description: A Boolean value that indicates whether the object specified in the <code>proxy</code> parameter is a transparent proxy or a real object.\n  overload: System.Runtime.Remoting.RemotingServices.IsTransparentProxy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.RemotingServices.LogRemotingStage(System.Int32)\n  id: LogRemotingStage(System.Int32)\n  parent: System.Runtime.Remoting.RemotingServices\n  langs:\n  - csharp\n  name: LogRemotingStage(Int32)\n  nameWithType: RemotingServices.LogRemotingStage(Int32)\n  fullName: System.Runtime.Remoting.RemotingServices.LogRemotingStage(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Logs the stage in a remoting exchange to an external debugger.\n  remarks: A `\"REMOTING_PERF\"` preprocessing symbol is applied to the method by using the <xref:System.Diagnostics.ConditionalAttribute> attribute.\n  syntax:\n    content: public static void LogRemotingStage (int stage);\n    parameters:\n    - id: stage\n      type: System.Int32\n      description: An internally defined constant that identifies the stage in a remoting exchange.\n  overload: System.Runtime.Remoting.RemotingServices.LogRemotingStage*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject)\n  id: Marshal(System.MarshalByRefObject)\n  parent: System.Runtime.Remoting.RemotingServices\n  langs:\n  - csharp\n  name: Marshal(MarshalByRefObject)\n  nameWithType: RemotingServices.Marshal(MarshalByRefObject)\n  fullName: System.Runtime.Remoting.RemotingServices.Marshal(MarshalByRefObject)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Takes a <xref href=\"System.MarshalByRefObject\"></xref>, registers it with the remoting infrastructure, and converts it into an instance of the <xref href=\"System.Runtime.Remoting.ObjRef\"></xref> class.\n  remarks: \"A <xref:System.Runtime.Remoting.ObjRef> is a serializable representation of an object used to transfer an object reference across an application domain boundary. Creating a <xref:System.Runtime.Remoting.ObjRef> for an object is known as marshaling. The <xref:System.Runtime.Remoting.ObjRef> can be transferred through a channel into another application domain (possibly on another process or computer). Once in the other application domain, the <xref:System.Runtime.Remoting.ObjRef> must be parsed to create a proxy for the object, generally connected to the real object. This operation is known as unmarshaling.  \\n  \\n A <xref:System.Runtime.Remoting.ObjRef> contains information that describes the <xref:System.Type> and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located.  \\n  \\n During marshaling, the context from the current thread is used, not the context that was active when the object was created. If a URI was not explicitly set by the <xref:System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal%2A> method, it is automatically generated by the remoting identity infrastructure.  \\n  \\n You cannot associate a URI with a proxy for one of two reasons: either the URI was generated at the server side for the object it represents, or the object is well known, in which case the URI is known. For this reason, if the `Obj` parameter is a proxy, an exception will be thrown. For custom proxies this restriction is relaxed because the transparent proxy is treated as the server object.\"\n  syntax:\n    content: public static System.Runtime.Remoting.ObjRef Marshal (MarshalByRefObject Obj);\n    parameters:\n    - id: Obj\n      type: System.MarshalByRefObject\n      description: The object to convert.\n    return:\n      type: System.Runtime.Remoting.ObjRef\n      description: An instance of the <xref href=\"System.Runtime.Remoting.ObjRef\"></xref> class that represents the object specified in the <code>Obj</code> parameter.\n  overload: System.Runtime.Remoting.RemotingServices.Marshal*\n  exceptions:\n  - type: System.Runtime.Remoting.RemotingException\n    commentId: T:System.Runtime.Remoting.RemotingException\n    description: The <code>Obj</code> parameter is an object proxy.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String)\n  id: Marshal(System.MarshalByRefObject,System.String)\n  parent: System.Runtime.Remoting.RemotingServices\n  langs:\n  - csharp\n  name: Marshal(MarshalByRefObject,String)\n  nameWithType: RemotingServices.Marshal(MarshalByRefObject,String)\n  fullName: System.Runtime.Remoting.RemotingServices.Marshal(MarshalByRefObject,String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Converts the given <xref href=\"System.MarshalByRefObject\"></xref> into an instance of the <xref href=\"System.Runtime.Remoting.ObjRef\"></xref> class with the specified URI.\n  remarks: \"A <xref:System.Runtime.Remoting.ObjRef> is a serializable representation of an object used to transfer an object reference across an application domain boundary. Creating a <xref:System.Runtime.Remoting.ObjRef> for an object is known as marshaling. The <xref:System.Runtime.Remoting.ObjRef> can be transferred through a channel into another application domain (possibly on another process or computer). Once in the other application domain, the <xref:System.Runtime.Remoting.ObjRef> must be parsed to create a proxy for the object, generally connected to the real object. This operation is known as unmarshaling.  \\n  \\n A <xref:System.Runtime.Remoting.ObjRef> contains information that describes the <xref:System.Type> and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located.  \\n  \\n During marshaling, the context from the current thread is used, not the context that was active when the object was created.  \\n  \\n You cannot associate a URI with a proxy for one of two reasons: either the URI was generated at the server side for the object it represents, or the object is well known, in which case the URI is known. For this reason, if the `Obj` parameter is a proxy, an exception will be thrown. For custom proxies this restriction is relaxed because the transparent proxy is treated as the server object.\"\n  example:\n  - \"The following code example demonstrates how to use the current <xref:System.Runtime.Remoting.RemotingServices.Marshal%2A> method to marshal a specified object.  \\n  \\n [!code-cpp[RemotingServices.BasicSample#2](~/add/codesnippet/cpp/01236a8e-f8c3-4b7b-875d-_1.cpp)]\\n [!code-cs[RemotingServices.BasicSample#2](~/add/codesnippet/csharp/01236a8e-f8c3-4b7b-875d-_1.cs)]\\n [!code-vb[RemotingServices.BasicSample#2](~/add/codesnippet/visualbasic/01236a8e-f8c3-4b7b-875d-_1.vb)]\"\n  syntax:\n    content: public static System.Runtime.Remoting.ObjRef Marshal (MarshalByRefObject Obj, string URI);\n    parameters:\n    - id: Obj\n      type: System.MarshalByRefObject\n      description: The object to convert.\n    - id: URI\n      type: System.String\n      description: The specified URI with which to initialize the new <xref href=\"System.Runtime.Remoting.ObjRef\"></xref>. Can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    return:\n      type: System.Runtime.Remoting.ObjRef\n      description: An instance of the <xref href=\"System.Runtime.Remoting.ObjRef\"></xref> class that represents the object specified in the <code>Obj</code> parameter.\n  overload: System.Runtime.Remoting.RemotingServices.Marshal*\n  exceptions:\n  - type: System.Runtime.Remoting.RemotingException\n    commentId: T:System.Runtime.Remoting.RemotingException\n    description: <code>Obj</code> is an object proxy, and the <code>URI</code> parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String,System.Type)\n  id: Marshal(System.MarshalByRefObject,System.String,System.Type)\n  parent: System.Runtime.Remoting.RemotingServices\n  langs:\n  - csharp\n  name: Marshal(MarshalByRefObject,String,Type)\n  nameWithType: RemotingServices.Marshal(MarshalByRefObject,String,Type)\n  fullName: System.Runtime.Remoting.RemotingServices.Marshal(MarshalByRefObject,String,Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Takes a <xref href=\"System.MarshalByRefObject\"></xref> and converts it into an instance of the <xref href=\"System.Runtime.Remoting.ObjRef\"></xref> class with the specified URI, and the provided <xref:System.Type>.\n  remarks: \"A <xref:System.Runtime.Remoting.ObjRef> is a serializable representation of an object used to transfer an object reference across an application domain boundary. Creating a <xref:System.Runtime.Remoting.ObjRef> for an object is known as marshaling. The <xref:System.Runtime.Remoting.ObjRef> can be transferred through a channel into another application domain (possibly on another process or computer). Once in the other application domain, the <xref:System.Runtime.Remoting.ObjRef> must be parsed to create a proxy for the object, generally connected to the real object. This operation is known as unmarshaling.  \\n  \\n A <xref:System.Runtime.Remoting.ObjRef> contains information that describes the <xref:System.Type> and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located.  \\n  \\n The specified <xref:System.Type> is used by the remoting infrastructure to limit the scope of the exposed type hierarchy. For example, if object A derives from object B, which derives from object C, and <xref:System.Runtime.Remoting.RemotingServices.Marshal%2A> is called, then the client can cast the proxy between C and B but not to A.  \\n  \\n During marshaling, the context from the current thread is used, not the context that was active when the object was created.  \\n  \\n You cannot associate a URI with a proxy for one of two reasons: either the URI was generated at the server side for the object it represents, or the object is well known, in which case the URI is known. For this reason, if the `Obj` parameter is a proxy, an exception will be thrown. For custom proxies this restriction is relaxed because the transparent proxy is treated as the server object.\"\n  syntax:\n    content: public static System.Runtime.Remoting.ObjRef Marshal (MarshalByRefObject Obj, string ObjURI, Type RequestedType);\n    parameters:\n    - id: Obj\n      type: System.MarshalByRefObject\n      description: The object to convert into a <xref href=\"System.Runtime.Remoting.ObjRef\"></xref>.\n    - id: ObjURI\n      type: System.String\n      description: The URI the object specified in the `Obj` parameter is marshaled with. Can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    - id: RequestedType\n      type: System.Type\n      description: The <xref:System.Type>`Obj` is marshaled as. Can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    return:\n      type: System.Runtime.Remoting.ObjRef\n      description: An instance of the <xref href=\"System.Runtime.Remoting.ObjRef\"></xref> class that represents the object specified in the <code>Obj</code> parameter.\n  overload: System.Runtime.Remoting.RemotingServices.Marshal*\n  exceptions:\n  - type: System.Runtime.Remoting.RemotingException\n    commentId: T:System.Runtime.Remoting.RemotingException\n    description: <code>Obj</code> is a proxy of a remote object, and the <code>ObjUri</code> parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal(System.MarshalByRefObject,System.String)\n  id: SetObjectUriForMarshal(System.MarshalByRefObject,System.String)\n  parent: System.Runtime.Remoting.RemotingServices\n  langs:\n  - csharp\n  name: SetObjectUriForMarshal(MarshalByRefObject,String)\n  nameWithType: RemotingServices.SetObjectUriForMarshal(MarshalByRefObject,String)\n  fullName: System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal(MarshalByRefObject,String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Sets the URI for the subsequent call to the <xref:System.Runtime.Remoting.RemotingServices.Marshal*> method.\n  remarks: \"The URI set by the current method is used when marshaling the given object.  \\n  \\n After marshaling, the URI of the specified object is set to the string in the `uri` parameter appended onto the <xref:System.Guid> of the current <xref:System.AppDomain>.  \\n  \\n If the current application is listening on an HTTP port, then both the string specified in the `uri` parameter and the `uri` string appended onto the <xref:System.Guid> of the current <xref:System.AppDomain> route to the specified object. For example, if the application is listening on HTTP port 9000, then both http://localhost:9000/objectUri, and http://localhost:9000/\\\\<appdomainguid>/objectUri route to the object specified in the `obj` parameter.\"\n  example:\n  - \"The following code example demonstrates how to set the URI that will be used by the <xref:System.Runtime.Remoting.RemotingServices.Marshal%2A> method when marshaling the specified object.  \\n  \\n [!code-cpp[RemotingServices.SetObjectUriForMarshal#1](~/add/codesnippet/cpp/2ed6d271-806d-4778-95aa-_1.cpp)]\\n [!code-cs[RemotingServices.SetObjectUriForMarshal#1](~/add/codesnippet/csharp/2ed6d271-806d-4778-95aa-_1.cs)]\\n [!code-vb[RemotingServices.SetObjectUriForMarshal#1](~/add/codesnippet/visualbasic/2ed6d271-806d-4778-95aa-_1.vb)]\"\n  syntax:\n    content: public static void SetObjectUriForMarshal (MarshalByRefObject obj, string uri);\n    parameters:\n    - id: obj\n      type: System.MarshalByRefObject\n      description: The object to set a URI for.\n    - id: uri\n      type: System.String\n      description: The URI to assign to the specified object.\n  overload: System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal*\n  exceptions:\n  - type: System.Runtime.Remoting.RemotingException\n    commentId: T:System.Runtime.Remoting.RemotingException\n    description: <code>obj</code> is not a local object, has already been marshaled, or the current method has already been called on.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef)\n  id: Unmarshal(System.Runtime.Remoting.ObjRef)\n  parent: System.Runtime.Remoting.RemotingServices\n  langs:\n  - csharp\n  name: Unmarshal(ObjRef)\n  nameWithType: RemotingServices.Unmarshal(ObjRef)\n  fullName: System.Runtime.Remoting.RemotingServices.Unmarshal(ObjRef)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Takes a <xref href=\"System.Runtime.Remoting.ObjRef\"></xref> and creates a proxy object out of it.\n  remarks: \"A <xref:System.Runtime.Remoting.ObjRef> is a serializable representation of an object used to transfer an object reference across an application domain boundary. Creating a <xref:System.Runtime.Remoting.ObjRef> for an object is known as marshaling. The <xref:System.Runtime.Remoting.ObjRef> can be transferred through a channel into another application domain (possibly on another process or computer). Once in the other application domain, the <xref:System.Runtime.Remoting.ObjRef> must be parsed to create a proxy for the object, generally connected to the real object. This operation is known as unmarshaling. During unmarshaling, the <xref:System.Runtime.Remoting.ObjRef> is parsed to extract the method information of the remote object and both the transparent proxy and <xref:System.Runtime.Remoting.Proxies.RealProxy> objects are created. The content of the parsed <xref:System.Runtime.Remoting.ObjRef> is added to the transparent proxy before the transparent proxy is registered with the common language runtime.  \\n  \\n A <xref:System.Runtime.Remoting.ObjRef> contains information that describes the <xref:System.Type> and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located.\"\n  example:\n  - \"The following code example demonstrates how to unmarshal an object.  \\n  \\n [!code-vb[RemotingServices.Unmarshal#2](~/add/codesnippet/visualbasic/b4be8871-533a-4641-8763-_1.vb)]\\n [!code-cpp[RemotingServices.Unmarshal#2](~/add/codesnippet/cpp/b4be8871-533a-4641-8763-_1.cpp)]\\n [!code-cs[RemotingServices.Unmarshal#2](~/add/codesnippet/csharp/b4be8871-533a-4641-8763-_1.cs)]\"\n  syntax:\n    content: public static object Unmarshal (System.Runtime.Remoting.ObjRef objectRef);\n    parameters:\n    - id: objectRef\n      type: System.Runtime.Remoting.ObjRef\n      description: The <xref href=\"System.Runtime.Remoting.ObjRef\"></xref> that represents the remote object for which the proxy is being created.\n    return:\n      type: System.Object\n      description: A proxy to the object that the given <xref href=\"System.Runtime.Remoting.ObjRef\"></xref> represents.\n  overload: System.Runtime.Remoting.RemotingServices.Unmarshal*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <xref href=\"System.Runtime.Remoting.ObjRef\"></xref> instance specified in the <code>objectRef</code> parameter is not well-formed.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef,System.Boolean)\n  id: Unmarshal(System.Runtime.Remoting.ObjRef,System.Boolean)\n  parent: System.Runtime.Remoting.RemotingServices\n  langs:\n  - csharp\n  name: Unmarshal(ObjRef,Boolean)\n  nameWithType: RemotingServices.Unmarshal(ObjRef,Boolean)\n  fullName: System.Runtime.Remoting.RemotingServices.Unmarshal(ObjRef,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Takes a <xref href=\"System.Runtime.Remoting.ObjRef\"></xref> and creates a proxy object out of it, refining it to the type on the server.\n  remarks: \"A <xref:System.Runtime.Remoting.ObjRef> is a serializable representation of an object used to transfer an object reference across an application domain boundary. Creating a <xref:System.Runtime.Remoting.ObjRef> for an object is known as marshaling. The <xref:System.Runtime.Remoting.ObjRef> can be transferred through a channel into another application domain (possibly on another process or computer). Once in the other application domain, the <xref:System.Runtime.Remoting.ObjRef> must be parsed to create a proxy for the object, generally connected to the real object. This operation is known as unmarshaling. During unmarshaling, the <xref:System.Runtime.Remoting.ObjRef> is parsed to extract the method information of the remote object and both the transparent proxy and <xref:System.Runtime.Remoting.Proxies.RealProxy> objects are created. The content of the parsed <xref:System.Runtime.Remoting.ObjRef> is added to the transparent proxy before the transparent proxy is registered with the common language runtime.  \\n  \\n A <xref:System.Runtime.Remoting.ObjRef> contains information that describes the <xref:System.Type> and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located.  \\n  \\n When first created, the proxy is of type <xref:System.MarshalByRefObject>. As you cast it into different types, the remoting infrastructure keeps track of the most used type to avoid loading the type unnecessarily.\"\n  syntax:\n    content: public static object Unmarshal (System.Runtime.Remoting.ObjRef objectRef, bool fRefine);\n    parameters:\n    - id: objectRef\n      type: System.Runtime.Remoting.ObjRef\n      description: The <xref href=\"System.Runtime.Remoting.ObjRef\"></xref> that represents the remote object for which the proxy is being created.\n    - id: fRefine\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to refine the proxy to the type on the server; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Object\n      description: A proxy to the object that the given <xref href=\"System.Runtime.Remoting.ObjRef\"></xref> represents.\n  overload: System.Runtime.Remoting.RemotingServices.Unmarshal*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <xref href=\"System.Runtime.Remoting.ObjRef\"></xref> instance specified in the <code>objectRef</code> parameter is not well-formed.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Security.SecurityException\n  isExternal: true\n  name: System.Security.SecurityException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Runtime.Remoting.RemotingException\n  parent: System.Runtime.Remoting\n  isExternal: false\n  name: RemotingException\n  nameWithType: RemotingException\n  fullName: System.Runtime.Remoting.RemotingException\n- uid: System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String)\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: Connect(Type,String)\n  nameWithType: RemotingServices.Connect(Type,String)\n  fullName: System.Runtime.Remoting.RemotingServices.Connect(Type,String)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String,System.Object)\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: Connect(Type,String,Object)\n  nameWithType: RemotingServices.Connect(Type,String,Object)\n  fullName: System.Runtime.Remoting.RemotingServices.Connect(Type,String,Object)\n- uid: System.Runtime.Remoting.RemotingServices.Disconnect(System.MarshalByRefObject)\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: Disconnect(MarshalByRefObject)\n  nameWithType: RemotingServices.Disconnect(MarshalByRefObject)\n  fullName: System.Runtime.Remoting.RemotingServices.Disconnect(MarshalByRefObject)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.MarshalByRefObject\n  parent: System\n  isExternal: false\n  name: MarshalByRefObject\n  nameWithType: MarshalByRefObject\n  fullName: System.MarshalByRefObject\n- uid: System.Runtime.Remoting.RemotingServices.ExecuteMessage(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMethodCallMessage)\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: ExecuteMessage(MarshalByRefObject,IMethodCallMessage)\n  nameWithType: RemotingServices.ExecuteMessage(MarshalByRefObject,IMethodCallMessage)\n  fullName: System.Runtime.Remoting.RemotingServices.ExecuteMessage(MarshalByRefObject,IMethodCallMessage)\n- uid: System.Runtime.Remoting.Messaging.IMethodReturnMessage\n  parent: System.Runtime.Remoting.Messaging\n  isExternal: false\n  name: IMethodReturnMessage\n  nameWithType: IMethodReturnMessage\n  fullName: System.Runtime.Remoting.Messaging.IMethodReturnMessage\n- uid: System.Runtime.Remoting.Messaging.IMethodCallMessage\n  parent: System.Runtime.Remoting.Messaging\n  isExternal: false\n  name: IMethodCallMessage\n  nameWithType: IMethodCallMessage\n  fullName: System.Runtime.Remoting.Messaging.IMethodCallMessage\n- uid: System.Runtime.Remoting.RemotingServices.GetEnvoyChainForProxy(System.MarshalByRefObject)\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: GetEnvoyChainForProxy(MarshalByRefObject)\n  nameWithType: RemotingServices.GetEnvoyChainForProxy(MarshalByRefObject)\n  fullName: System.Runtime.Remoting.RemotingServices.GetEnvoyChainForProxy(MarshalByRefObject)\n- uid: System.Runtime.Remoting.Messaging.IMessageSink\n  parent: System.Runtime.Remoting.Messaging\n  isExternal: false\n  name: IMessageSink\n  nameWithType: IMessageSink\n  fullName: System.Runtime.Remoting.Messaging.IMessageSink\n- uid: System.Runtime.Remoting.RemotingServices.GetLifetimeService(System.MarshalByRefObject)\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: GetLifetimeService(MarshalByRefObject)\n  nameWithType: RemotingServices.GetLifetimeService(MarshalByRefObject)\n  fullName: System.Runtime.Remoting.RemotingServices.GetLifetimeService(MarshalByRefObject)\n- uid: System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: GetMethodBaseFromMethodMessage(IMethodMessage)\n  nameWithType: RemotingServices.GetMethodBaseFromMethodMessage(IMethodMessage)\n  fullName: System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage(IMethodMessage)\n- uid: System.Reflection.MethodBase\n  parent: System.Reflection\n  isExternal: true\n  name: MethodBase\n  nameWithType: MethodBase\n  fullName: System.Reflection.MethodBase\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage\n  parent: System.Runtime.Remoting.Messaging\n  isExternal: false\n  name: IMethodMessage\n  nameWithType: IMethodMessage\n  fullName: System.Runtime.Remoting.Messaging.IMethodMessage\n- uid: System.Runtime.Remoting.RemotingServices.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: GetObjectData(Object,SerializationInfo,StreamingContext)\n  nameWithType: RemotingServices.GetObjectData(Object,SerializationInfo,StreamingContext)\n  fullName: System.Runtime.Remoting.RemotingServices.GetObjectData(Object,SerializationInfo,StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: true\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Runtime.Remoting.RemotingServices.GetObjectUri(System.MarshalByRefObject)\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: GetObjectUri(MarshalByRefObject)\n  nameWithType: RemotingServices.GetObjectUri(MarshalByRefObject)\n  fullName: System.Runtime.Remoting.RemotingServices.GetObjectUri(MarshalByRefObject)\n- uid: System.Runtime.Remoting.RemotingServices.GetObjRefForProxy(System.MarshalByRefObject)\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: GetObjRefForProxy(MarshalByRefObject)\n  nameWithType: RemotingServices.GetObjRefForProxy(MarshalByRefObject)\n  fullName: System.Runtime.Remoting.RemotingServices.GetObjRefForProxy(MarshalByRefObject)\n- uid: System.Runtime.Remoting.ObjRef\n  parent: System.Runtime.Remoting\n  isExternal: false\n  name: ObjRef\n  nameWithType: ObjRef\n  fullName: System.Runtime.Remoting.ObjRef\n- uid: System.Runtime.Remoting.RemotingServices.GetRealProxy(System.Object)\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: GetRealProxy(Object)\n  nameWithType: RemotingServices.GetRealProxy(Object)\n  fullName: System.Runtime.Remoting.RemotingServices.GetRealProxy(Object)\n- uid: System.Runtime.Remoting.Proxies.RealProxy\n  parent: System.Runtime.Remoting.Proxies\n  isExternal: false\n  name: RealProxy\n  nameWithType: RealProxy\n  fullName: System.Runtime.Remoting.Proxies.RealProxy\n- uid: System.Runtime.Remoting.RemotingServices.GetServerTypeForUri(System.String)\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: GetServerTypeForUri(String)\n  nameWithType: RemotingServices.GetServerTypeForUri(String)\n  fullName: System.Runtime.Remoting.RemotingServices.GetServerTypeForUri(String)\n- uid: System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: GetSessionIdForMethodMessage(IMethodMessage)\n  nameWithType: RemotingServices.GetSessionIdForMethodMessage(IMethodMessage)\n  fullName: System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage(IMethodMessage)\n- uid: System.Runtime.Remoting.RemotingServices.IsMethodOverloaded(System.Runtime.Remoting.Messaging.IMethodMessage)\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: IsMethodOverloaded(IMethodMessage)\n  nameWithType: RemotingServices.IsMethodOverloaded(IMethodMessage)\n  fullName: System.Runtime.Remoting.RemotingServices.IsMethodOverloaded(IMethodMessage)\n- uid: System.Runtime.Remoting.RemotingServices.IsObjectOutOfAppDomain(System.Object)\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: IsObjectOutOfAppDomain(Object)\n  nameWithType: RemotingServices.IsObjectOutOfAppDomain(Object)\n  fullName: System.Runtime.Remoting.RemotingServices.IsObjectOutOfAppDomain(Object)\n- uid: System.Runtime.Remoting.RemotingServices.IsObjectOutOfContext(System.Object)\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: IsObjectOutOfContext(Object)\n  nameWithType: RemotingServices.IsObjectOutOfContext(Object)\n  fullName: System.Runtime.Remoting.RemotingServices.IsObjectOutOfContext(Object)\n- uid: System.Runtime.Remoting.RemotingServices.IsOneWay(System.Reflection.MethodBase)\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: IsOneWay(MethodBase)\n  nameWithType: RemotingServices.IsOneWay(MethodBase)\n  fullName: System.Runtime.Remoting.RemotingServices.IsOneWay(MethodBase)\n- uid: System.Runtime.Remoting.RemotingServices.IsTransparentProxy(System.Object)\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: IsTransparentProxy(Object)\n  nameWithType: RemotingServices.IsTransparentProxy(Object)\n  fullName: System.Runtime.Remoting.RemotingServices.IsTransparentProxy(Object)\n- uid: System.Runtime.Remoting.RemotingServices.LogRemotingStage(System.Int32)\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: LogRemotingStage(Int32)\n  nameWithType: RemotingServices.LogRemotingStage(Int32)\n  fullName: System.Runtime.Remoting.RemotingServices.LogRemotingStage(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject)\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: Marshal(MarshalByRefObject)\n  nameWithType: RemotingServices.Marshal(MarshalByRefObject)\n  fullName: System.Runtime.Remoting.RemotingServices.Marshal(MarshalByRefObject)\n- uid: System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String)\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: Marshal(MarshalByRefObject,String)\n  nameWithType: RemotingServices.Marshal(MarshalByRefObject,String)\n  fullName: System.Runtime.Remoting.RemotingServices.Marshal(MarshalByRefObject,String)\n- uid: System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String,System.Type)\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: Marshal(MarshalByRefObject,String,Type)\n  nameWithType: RemotingServices.Marshal(MarshalByRefObject,String,Type)\n  fullName: System.Runtime.Remoting.RemotingServices.Marshal(MarshalByRefObject,String,Type)\n- uid: System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal(System.MarshalByRefObject,System.String)\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: SetObjectUriForMarshal(MarshalByRefObject,String)\n  nameWithType: RemotingServices.SetObjectUriForMarshal(MarshalByRefObject,String)\n  fullName: System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal(MarshalByRefObject,String)\n- uid: System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef)\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: Unmarshal(ObjRef)\n  nameWithType: RemotingServices.Unmarshal(ObjRef)\n  fullName: System.Runtime.Remoting.RemotingServices.Unmarshal(ObjRef)\n- uid: System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef,System.Boolean)\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: Unmarshal(ObjRef,Boolean)\n  nameWithType: RemotingServices.Unmarshal(ObjRef,Boolean)\n  fullName: System.Runtime.Remoting.RemotingServices.Unmarshal(ObjRef,Boolean)\n- uid: System.Runtime.Remoting.RemotingServices.Connect*\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: Connect\n  nameWithType: RemotingServices.Connect\n- uid: System.Runtime.Remoting.RemotingServices.Disconnect*\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: Disconnect\n  nameWithType: RemotingServices.Disconnect\n- uid: System.Runtime.Remoting.RemotingServices.ExecuteMessage*\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: ExecuteMessage\n  nameWithType: RemotingServices.ExecuteMessage\n- uid: System.Runtime.Remoting.RemotingServices.GetEnvoyChainForProxy*\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: GetEnvoyChainForProxy\n  nameWithType: RemotingServices.GetEnvoyChainForProxy\n- uid: System.Runtime.Remoting.RemotingServices.GetLifetimeService*\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: GetLifetimeService\n  nameWithType: RemotingServices.GetLifetimeService\n- uid: System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage*\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: GetMethodBaseFromMethodMessage\n  nameWithType: RemotingServices.GetMethodBaseFromMethodMessage\n- uid: System.Runtime.Remoting.RemotingServices.GetObjectData*\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: GetObjectData\n  nameWithType: RemotingServices.GetObjectData\n- uid: System.Runtime.Remoting.RemotingServices.GetObjectUri*\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: GetObjectUri\n  nameWithType: RemotingServices.GetObjectUri\n- uid: System.Runtime.Remoting.RemotingServices.GetObjRefForProxy*\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: GetObjRefForProxy\n  nameWithType: RemotingServices.GetObjRefForProxy\n- uid: System.Runtime.Remoting.RemotingServices.GetRealProxy*\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: GetRealProxy\n  nameWithType: RemotingServices.GetRealProxy\n- uid: System.Runtime.Remoting.RemotingServices.GetServerTypeForUri*\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: GetServerTypeForUri\n  nameWithType: RemotingServices.GetServerTypeForUri\n- uid: System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage*\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: GetSessionIdForMethodMessage\n  nameWithType: RemotingServices.GetSessionIdForMethodMessage\n- uid: System.Runtime.Remoting.RemotingServices.IsMethodOverloaded*\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: IsMethodOverloaded\n  nameWithType: RemotingServices.IsMethodOverloaded\n- uid: System.Runtime.Remoting.RemotingServices.IsObjectOutOfAppDomain*\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: IsObjectOutOfAppDomain\n  nameWithType: RemotingServices.IsObjectOutOfAppDomain\n- uid: System.Runtime.Remoting.RemotingServices.IsObjectOutOfContext*\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: IsObjectOutOfContext\n  nameWithType: RemotingServices.IsObjectOutOfContext\n- uid: System.Runtime.Remoting.RemotingServices.IsOneWay*\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: IsOneWay\n  nameWithType: RemotingServices.IsOneWay\n- uid: System.Runtime.Remoting.RemotingServices.IsTransparentProxy*\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: IsTransparentProxy\n  nameWithType: RemotingServices.IsTransparentProxy\n- uid: System.Runtime.Remoting.RemotingServices.LogRemotingStage*\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: LogRemotingStage\n  nameWithType: RemotingServices.LogRemotingStage\n- uid: System.Runtime.Remoting.RemotingServices.Marshal*\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: Marshal\n  nameWithType: RemotingServices.Marshal\n- uid: System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal*\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: SetObjectUriForMarshal\n  nameWithType: RemotingServices.SetObjectUriForMarshal\n- uid: System.Runtime.Remoting.RemotingServices.Unmarshal*\n  parent: System.Runtime.Remoting.RemotingServices\n  isExternal: false\n  name: Unmarshal\n  nameWithType: RemotingServices.Unmarshal\n"}