{"nodes":[{"pos":[517,695],"content":"Provides information about the status and data resulting from a &lt;xref:System.Net.NetworkInformation.Ping.Send<bpt id=\"p1\">*</bpt>&gt; or &lt;xref:System.Net.NetworkInformation.Ping.SendAsync<ept id=\"p1\">*</ept>&gt; operation.","needQuote":true,"needEscape":true,"source":"Provides information about the status and data resulting from a <xref:System.Net.NetworkInformation.Ping.Send*> or <xref:System.Net.NetworkInformation.Ping.SendAsync*> operation."},{"pos":[708,2284],"content":"The <xref:System.Net.NetworkInformation.Ping> class attempts to send an Internet Control Message Protocol (ICMP) echo request to a remote computer and receive information back from the computer via an ICMP echo reply message. The <xref:System.Net.NetworkInformation.Ping> class uses instances of the PingReply class to return information about the operation, such as its status and the time taken to send the request and receive the reply.       The <xref:System.Net.NetworkInformation.Ping.Send%2A> methods return instances of the PingReply class directly. The <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods return a PingReply in the <xref:System.Net.NetworkInformation.PingCompletedEventHandler> method's <xref:System.Net.NetworkInformation.PingCompletedEventArgs> parameter. The PingReply is accessed through the <xref:System.Net.NetworkInformation.PingCompletedEventArgs.Reply%2A> property.       If the value of <xref:System.Net.NetworkInformation.PingReply.Status%2A> is not <xref:System.Net.NetworkInformation.IPStatus>, you should not use the values returned by the <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A> or <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> properties. The <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> property will return zero, the <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> property will return an empty array, and the <xref:System.Net.NetworkInformation.PingReply.Options%2A> property will return `null`.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Net.NetworkInformation.Ping&gt; class attempts to send an Internet Control Message Protocol (ICMP) echo request to a remote computer and receive information back from the computer via an ICMP echo reply message.","pos":[0,225],"source":"The <xref:System.Net.NetworkInformation.Ping> class attempts to send an Internet Control Message Protocol (ICMP) echo request to a remote computer and receive information back from the computer via an ICMP echo reply message."},{"content":"The &lt;xref:System.Net.NetworkInformation.Ping&gt; class uses instances of the PingReply class to return information about the operation, such as its status and the time taken to send the request and receive the reply.","pos":[226,439],"source":" The <xref:System.Net.NetworkInformation.Ping> class uses instances of the PingReply class to return information about the operation, such as its status and the time taken to send the request and receive the reply."},{"content":"The &lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt; methods return instances of the PingReply class directly.","pos":[446,557],"source":"       The <xref:System.Net.NetworkInformation.Ping.Send%2A> methods return instances of the PingReply class directly."},{"content":"The &lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt; methods return a PingReply in the &lt;xref:System.Net.NetworkInformation.PingCompletedEventHandler&gt; method's &lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt; parameter.","pos":[558,793],"source":" The <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods return a PingReply in the <xref:System.Net.NetworkInformation.PingCompletedEventHandler> method's <xref:System.Net.NetworkInformation.PingCompletedEventArgs> parameter."},{"content":"The PingReply is accessed through the &lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs.Reply%2A&gt; property.","pos":[794,910],"source":" The PingReply is accessed through the <xref:System.Net.NetworkInformation.PingCompletedEventArgs.Reply%2A> property."},{"content":"If the value of &lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt; is not &lt;xref:System.Net.NetworkInformation.IPStatus&gt;, you should not use the values returned by the &lt;xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A&gt;, &lt;xref:System.Net.NetworkInformation.PingReply.Options%2A&gt; or &lt;xref:System.Net.NetworkInformation.PingReply.Buffer%2A&gt; properties.","pos":[917,1284],"source":"       If the value of <xref:System.Net.NetworkInformation.PingReply.Status%2A> is not <xref:System.Net.NetworkInformation.IPStatus>, you should not use the values returned by the <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A> or <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> properties."},{"content":"The &lt;xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A&gt; property will return zero, the &lt;xref:System.Net.NetworkInformation.PingReply.Buffer%2A&gt; property will return an empty array, and the &lt;xref:System.Net.NetworkInformation.PingReply.Options%2A&gt; property will return <ph id=\"ph1\">`null`</ph>.","pos":[1285,1572],"source":" The <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> property will return zero, the <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> property will return an empty array, and the <xref:System.Net.NetworkInformation.PingReply.Options%2A> property will return `null`."}]},{"pos":[3130,3226],"content":"Gets the address of the host that sends the Internet Control Message Protocol (ICMP) echo reply.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the address of the host that sends the Internet Control Message Protocol (ICMP) echo reply.","pos":[0,96]}]},{"pos":[3238,3519],"content":"The Address returned by any of the <xref:System.Net.NetworkInformation.Ping.Send%2A> overloads can originate from a malicious remote computer. Do not connect to the remote computer using this address. Use DNS to determine the IP address of the machine to which you want to connect.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Address returned by any of the <xref:System.Net.NetworkInformation.Ping.Send%2A> overloads can originate from a malicious remote computer. Do not connect to the remote computer using this address. Use DNS to determine the IP address of the machine to which you want to connect.","pos":[0,281],"nodes":[{"content":"The Address returned by any of the &lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt; overloads can originate from a malicious remote computer.","pos":[0,142],"source":"The Address returned by any of the <xref:System.Net.NetworkInformation.Ping.Send%2A> overloads can originate from a malicious remote computer."},{"content":"Do not connect to the remote computer using this address.","pos":[143,200]},{"content":"Use DNS to determine the IP address of the machine to which you want to connect.","pos":[201,281]}]}]},{"pos":[3961,4045],"content":"An <xref:System.Net.IPAddress> containing the destination for the ICMP echo message.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Net.IPAddress&gt; containing the destination for the ICMP echo message.","pos":[0,84],"source":"An <xref:System.Net.IPAddress> containing the destination for the ICMP echo message."}]},{"pos":[4487,4586],"content":"Gets the buffer of data received in an Internet Control Message Protocol (ICMP) echo reply message.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the buffer of data received in an Internet Control Message Protocol (ICMP) echo reply message.","pos":[0,99]}]},{"pos":[4599,5274],"content":"The data buffer sent with the ICMP echo request is returned to the sender in the echo reply so the roundtrip travel time for a packet of a known size can be computed. The data buffer, combined with the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> option, can be used to discover the maximum transmission unit for the network path between the source and destination computers. For additional information, see \"Traceroute\" in RFC 1574, Section 3.2, available at http://www.ietf.org.       The default buffer used with <xref:System.Net.NetworkInformation.Ping.Send%2A> and <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> contains 32 bytes of data.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The data buffer sent with the ICMP echo request is returned to the sender in the echo reply so the roundtrip travel time for a packet of a known size can be computed. The data buffer, combined with the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> option, can be used to discover the maximum transmission unit for the network path between the source and destination computers. For additional information, see \"Traceroute\" in RFC 1574, Section 3.2, available at http://www.ietf.org.       The default buffer used with <xref:System.Net.NetworkInformation.Ping.Send%2A> and <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> contains 32 bytes of data.","pos":[0,671],"nodes":[{"content":"The data buffer sent with the ICMP echo request is returned to the sender in the echo reply so the roundtrip travel time for a packet of a known size can be computed.","pos":[0,166]},{"content":"The data buffer, combined with the &lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt; option, can be used to discover the maximum transmission unit for the network path between the source and destination computers.","pos":[167,395],"source":" The data buffer, combined with the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> option, can be used to discover the maximum transmission unit for the network path between the source and destination computers."},{"content":"For additional information, see \"Traceroute\" in RFC 1574, Section 3.2, available at http://www.ietf.org.","pos":[396,500]},{"content":"The default buffer used with &lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt; and &lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt; contains 32 bytes of data.","pos":[507,671],"source":"       The default buffer used with <xref:System.Net.NetworkInformation.Ping.Send%2A> and <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> contains 32 bytes of data."}]}]},{"pos":[5717,5848],"content":"A <xref:System.Byte> array containing the data received in an ICMP echo reply message, or an empty array, if no reply was received.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Byte&gt; array containing the data received in an ICMP echo reply message, or an empty array, if no reply was received.","pos":[0,131],"source":"A <xref:System.Byte> array containing the data received in an ICMP echo reply message, or an empty array, if no reply was received."}]},{"pos":[6294,6398],"content":"Gets the options used to transmit the reply to an Internet Control Message Protocol (ICMP) echo request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the options used to transmit the reply to an Internet Control Message Protocol (ICMP) echo request.","pos":[0,104]}]},{"pos":[6411,7087],"content":"The TTL defines the number of times nodes can forward a packet as it travels between its source and destination. If the number of forwards, also known as hops, exceeds the value specified for the TTL, the packet is deemed undeliverable and is discarded.       The <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> value specified in the ICMP echo request controls packet fragmentation. If <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the packet size exceeds the maximum transmission unit of the network path taken by the packet, the packet is discarded and the <xref:System.Net.NetworkInformation.IPStatus> error is returned.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The TTL defines the number of times nodes can forward a packet as it travels between its source and destination.","pos":[0,112]},{"content":"If the number of forwards, also known as hops, exceeds the value specified for the TTL, the packet is deemed undeliverable and is discarded.","pos":[113,253]},{"content":"The &lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt; value specified in the ICMP echo request controls packet fragmentation.","pos":[260,400],"source":"       The <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> value specified in the ICMP echo request controls packet fragmentation."},{"content":"If &lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt; is <ph id=\"ph1\">`true`</ph> and the packet size exceeds the maximum transmission unit of the network path taken by the packet, the packet is discarded and the &lt;xref:System.Net.NetworkInformation.IPStatus&gt; error is returned.","pos":[401,674],"source":" If <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the packet size exceeds the maximum transmission unit of the network path taken by the packet, the packet is discarded and the <xref:System.Net.NetworkInformation.IPStatus> error is returned."}]},{"pos":[7652,8019],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Net.NetworkInformation.PingOptions\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the Time to Live (TTL) and the fragmentation directive used for transmitting the reply if &lt;xref:System.Net.NetworkInformation.PingReply.Status*&gt; is <bpt id=\"p2\">&lt;xref href=\"System.Net.NetworkInformation.IPStatus\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Net.NetworkInformation.PingOptions\"></xref> object that contains the Time to Live (TTL) and the fragmentation directive used for transmitting the reply if <xref:System.Net.NetworkInformation.PingReply.Status*> is <xref href=\"System.Net.NetworkInformation.IPStatus\"></xref>; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[8496,8653],"content":"Gets the number of milliseconds taken to send an Internet Control Message Protocol (ICMP) echo request and receive the corresponding ICMP echo reply message.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of milliseconds taken to send an Internet Control Message Protocol (ICMP) echo request and receive the corresponding ICMP echo reply message.","pos":[0,157]}]},{"pos":[8665,8939],"content":"If the Echo request fails, the RoundtripTime time is reported as 0, which is also a valid value when the request succeeds. You must check the <xref:System.Net.NetworkInformation.PingReply.Status%2A> to determine whether the value returned by this property should be ignored.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the Echo request fails, the RoundtripTime time is reported as 0, which is also a valid value when the request succeeds. You must check the <xref:System.Net.NetworkInformation.PingReply.Status%2A> to determine whether the value returned by this property should be ignored.","pos":[0,274],"nodes":[{"content":"If the Echo request fails, the RoundtripTime time is reported as 0, which is also a valid value when the request succeeds.","pos":[0,122]},{"content":"You must check the &lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt; to determine whether the value returned by this property should be ignored.","pos":[123,274],"source":" You must check the <xref:System.Net.NetworkInformation.PingReply.Status%2A> to determine whether the value returned by this property should be ignored."}]}]},{"pos":[9385,9460],"content":"An <xref:System.Int64> that specifies the round trip time, in milliseconds.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Int64&gt; that specifies the round trip time, in milliseconds.","pos":[0,75],"source":"An <xref:System.Int64> that specifies the round trip time, in milliseconds."}]},{"pos":[9908,10057],"content":"Gets the status of an attempt to send an Internet Control Message Protocol (ICMP) echo request and receive the corresponding ICMP echo reply message.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the status of an attempt to send an Internet Control Message Protocol (ICMP) echo request and receive the corresponding ICMP echo reply message.","pos":[0,149]}]},{"pos":[10069,10639],"content":"If the value of Status is not <xref:System.Net.NetworkInformation.IPStatus>, you should not use the values returned by the <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A> or <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> properties. The <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> and <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> properties will return zero, and the <xref:System.Net.NetworkInformation.PingReply.Options%2A> property will return `null`.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the value of Status is not &lt;xref:System.Net.NetworkInformation.IPStatus&gt;, you should not use the values returned by the &lt;xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A&gt;, &lt;xref:System.Net.NetworkInformation.PingReply.Options%2A&gt; or &lt;xref:System.Net.NetworkInformation.PingReply.Buffer%2A&gt; properties.","pos":[0,317],"source":"If the value of Status is not <xref:System.Net.NetworkInformation.IPStatus>, you should not use the values returned by the <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A> or <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> properties."},{"content":"The &lt;xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A&gt; and &lt;xref:System.Net.NetworkInformation.PingReply.Buffer%2A&gt; properties will return zero, and the &lt;xref:System.Net.NetworkInformation.PingReply.Options%2A&gt; property will return <ph id=\"ph1\">`null`</ph>.","pos":[318,570],"source":" The <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> and <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> properties will return zero, and the <xref:System.Net.NetworkInformation.PingReply.Options%2A> property will return `null`."}]},{"pos":[11164,11270],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Net.NetworkInformation.IPStatus\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value indicating the result of the request.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Net.NetworkInformation.IPStatus\"></xref> value indicating the result of the request."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.NetworkInformation.PingReply\n  id: PingReply\n  children:\n  - System.Net.NetworkInformation.PingReply.Address\n  - System.Net.NetworkInformation.PingReply.Buffer\n  - System.Net.NetworkInformation.PingReply.Options\n  - System.Net.NetworkInformation.PingReply.RoundtripTime\n  - System.Net.NetworkInformation.PingReply.Status\n  langs:\n  - csharp\n  name: PingReply\n  nameWithType: PingReply\n  fullName: System.Net.NetworkInformation.PingReply\n  type: Class\n  summary: Provides information about the status and data resulting from a <xref:System.Net.NetworkInformation.Ping.Send*> or <xref:System.Net.NetworkInformation.Ping.SendAsync*> operation.\n  remarks: \"The <xref:System.Net.NetworkInformation.Ping> class attempts to send an Internet Control Message Protocol (ICMP) echo request to a remote computer and receive information back from the computer via an ICMP echo reply message. The <xref:System.Net.NetworkInformation.Ping> class uses instances of the PingReply class to return information about the operation, such as its status and the time taken to send the request and receive the reply.  \\n  \\n The <xref:System.Net.NetworkInformation.Ping.Send%2A> methods return instances of the PingReply class directly. The <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods return a PingReply in the <xref:System.Net.NetworkInformation.PingCompletedEventHandler> method's <xref:System.Net.NetworkInformation.PingCompletedEventArgs> parameter. The PingReply is accessed through the <xref:System.Net.NetworkInformation.PingCompletedEventArgs.Reply%2A> property.  \\n  \\n If the value of <xref:System.Net.NetworkInformation.PingReply.Status%2A> is not <xref:System.Net.NetworkInformation.IPStatus>, you should not use the values returned by the <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A> or <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> properties. The <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> property will return zero, the <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> property will return an empty array, and the <xref:System.Net.NetworkInformation.PingReply.Options%2A> property will return `null`.\"\n  example:\n  - \"The following code example demonstrates using <xref:System.Net.NetworkInformation.Ping> class to send an ICMP echo request synchronously and display the response.  \\n  \\n [!code-cs[NCLPingSync#1](~/add/codesnippet/csharp/t-system.net.networkinfo_6_1.cs)]\\n [!code-cpp[NCLPingSync#1](~/add/codesnippet/cpp/t-system.net.networkinfo_6_1.cpp)]\"\n  syntax:\n    content: public class PingReply\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Net.NetworkInformation.PingReply.Address\n  id: Address\n  parent: System.Net.NetworkInformation.PingReply\n  langs:\n  - csharp\n  name: Address\n  nameWithType: PingReply.Address\n  fullName: System.Net.NetworkInformation.PingReply.Address\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.NetworkInformation\n  summary: Gets the address of the host that sends the Internet Control Message Protocol (ICMP) echo reply.\n  remarks: The Address returned by any of the <xref:System.Net.NetworkInformation.Ping.Send%2A> overloads can originate from a malicious remote computer. Do not connect to the remote computer using this address. Use DNS to determine the IP address of the machine to which you want to connect.\n  example:\n  - \"The following code example sends an ICMP echo request synchronously and displays the value of this property.  \\n  \\n [!code-cs[NclPingSampler#2](~/add/codesnippet/csharp/p-system.net.networkinfo_2_1.cs)]\\n [!code-cpp[NclPingSampler#2](~/add/codesnippet/cpp/p-system.net.networkinfo_2_1.cpp)]\"\n  syntax:\n    content: public System.Net.IPAddress Address { get; }\n    return:\n      type: System.Net.IPAddress\n      description: An <xref:System.Net.IPAddress> containing the destination for the ICMP echo message.\n  overload: System.Net.NetworkInformation.PingReply.Address*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.NetworkInformation.PingReply.Buffer\n  id: Buffer\n  parent: System.Net.NetworkInformation.PingReply\n  langs:\n  - csharp\n  name: Buffer\n  nameWithType: PingReply.Buffer\n  fullName: System.Net.NetworkInformation.PingReply.Buffer\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.NetworkInformation\n  summary: Gets the buffer of data received in an Internet Control Message Protocol (ICMP) echo reply message.\n  remarks: \"The data buffer sent with the ICMP echo request is returned to the sender in the echo reply so the roundtrip travel time for a packet of a known size can be computed. The data buffer, combined with the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> option, can be used to discover the maximum transmission unit for the network path between the source and destination computers. For additional information, see \\\"Traceroute\\\" in RFC 1574, Section 3.2, available at http://www.ietf.org.  \\n  \\n The default buffer used with <xref:System.Net.NetworkInformation.Ping.Send%2A> and <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> contains 32 bytes of data.\"\n  example:\n  - \"The following code example sends an ICMP echo request synchronously and displays the size of the buffer returned by this property.  \\n  \\n [!code-cs[NclPingSampler#4](~/add/codesnippet/csharp/p-system.net.networkinfo_1_1.cs)]\\n [!code-cpp[NclPingSampler#4](~/add/codesnippet/cpp/p-system.net.networkinfo_1_1.cpp)]\"\n  syntax:\n    content: public byte[] Buffer { get; }\n    return:\n      type: System.Byte[]\n      description: A <xref:System.Byte> array containing the data received in an ICMP echo reply message, or an empty array, if no reply was received.\n  overload: System.Net.NetworkInformation.PingReply.Buffer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.NetworkInformation.PingReply.Options\n  id: Options\n  parent: System.Net.NetworkInformation.PingReply\n  langs:\n  - csharp\n  name: Options\n  nameWithType: PingReply.Options\n  fullName: System.Net.NetworkInformation.PingReply.Options\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.NetworkInformation\n  summary: Gets the options used to transmit the reply to an Internet Control Message Protocol (ICMP) echo request.\n  remarks: \"The TTL defines the number of times nodes can forward a packet as it travels between its source and destination. If the number of forwards, also known as hops, exceeds the value specified for the TTL, the packet is deemed undeliverable and is discarded.  \\n  \\n The <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> value specified in the ICMP echo request controls packet fragmentation. If <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the packet size exceeds the maximum transmission unit of the network path taken by the packet, the packet is discarded and the <xref:System.Net.NetworkInformation.IPStatus> error is returned.\"\n  example:\n  - \"The following code example sends an ICMP echo request synchronously and displays the values stored in the <xref:System.Net.NetworkInformation.PingOptions> object returned by this property.  \\n  \\n [!code-cs[NclPingSampler#3](~/add/codesnippet/csharp/p-system.net.networkinfo_3_1.cs)]\\n [!code-cpp[NclPingSampler#3](~/add/codesnippet/cpp/p-system.net.networkinfo_3_1.cpp)]\"\n  syntax:\n    content: public System.Net.NetworkInformation.PingOptions Options { get; }\n    return:\n      type: System.Net.NetworkInformation.PingOptions\n      description: A <xref href=\"System.Net.NetworkInformation.PingOptions\"></xref> object that contains the Time to Live (TTL) and the fragmentation directive used for transmitting the reply if <xref:System.Net.NetworkInformation.PingReply.Status*> is <xref href=\"System.Net.NetworkInformation.IPStatus\"></xref>; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Net.NetworkInformation.PingReply.Options*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.NetworkInformation.PingReply.RoundtripTime\n  id: RoundtripTime\n  parent: System.Net.NetworkInformation.PingReply\n  langs:\n  - csharp\n  name: RoundtripTime\n  nameWithType: PingReply.RoundtripTime\n  fullName: System.Net.NetworkInformation.PingReply.RoundtripTime\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.NetworkInformation\n  summary: Gets the number of milliseconds taken to send an Internet Control Message Protocol (ICMP) echo request and receive the corresponding ICMP echo reply message.\n  remarks: If the Echo request fails, the RoundtripTime time is reported as 0, which is also a valid value when the request succeeds. You must check the <xref:System.Net.NetworkInformation.PingReply.Status%2A> to determine whether the value returned by this property should be ignored.\n  example:\n  - \"The following code example sends an ICMP echo request synchronously and displays the size of the buffer returned by this property.  \\n  \\n [!code-cs[NclPingSampler#4](~/add/codesnippet/csharp/p-system.net.networkinfo_4_1.cs)]\\n [!code-cpp[NclPingSampler#4](~/add/codesnippet/cpp/p-system.net.networkinfo_4_1.cpp)]\"\n  syntax:\n    content: public long RoundtripTime { get; }\n    return:\n      type: System.Int64\n      description: An <xref:System.Int64> that specifies the round trip time, in milliseconds.\n  overload: System.Net.NetworkInformation.PingReply.RoundtripTime*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.NetworkInformation.PingReply.Status\n  id: Status\n  parent: System.Net.NetworkInformation.PingReply\n  langs:\n  - csharp\n  name: Status\n  nameWithType: PingReply.Status\n  fullName: System.Net.NetworkInformation.PingReply.Status\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.NetworkInformation\n  summary: Gets the status of an attempt to send an Internet Control Message Protocol (ICMP) echo request and receive the corresponding ICMP echo reply message.\n  remarks: If the value of Status is not <xref:System.Net.NetworkInformation.IPStatus>, you should not use the values returned by the <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A> or <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> properties. The <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> and <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> properties will return zero, and the <xref:System.Net.NetworkInformation.PingReply.Options%2A> property will return `null`.\n  example:\n  - \"The following code example demonstrates using <xref:System.Net.NetworkInformation.Ping> class to send an ICMP echo request synchronously and display the response.  \\n  \\n [!code-cs[NCLPingSync#1](~/add/codesnippet/csharp/p-system.net.networkinfo_8_1.cs)]\\n [!code-cpp[NCLPingSync#1](~/add/codesnippet/cpp/p-system.net.networkinfo_8_1.cpp)]\"\n  syntax:\n    content: public System.Net.NetworkInformation.IPStatus Status { get; }\n    return:\n      type: System.Net.NetworkInformation.IPStatus\n      description: An <xref href=\"System.Net.NetworkInformation.IPStatus\"></xref> value indicating the result of the request.\n  overload: System.Net.NetworkInformation.PingReply.Status*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Net.NetworkInformation.PingReply.Address\n  parent: System.Net.NetworkInformation.PingReply\n  isExternal: false\n  name: Address\n  nameWithType: PingReply.Address\n  fullName: System.Net.NetworkInformation.PingReply.Address\n- uid: System.Net.IPAddress\n  parent: System.Net\n  isExternal: true\n  name: IPAddress\n  nameWithType: IPAddress\n  fullName: System.Net.IPAddress\n- uid: System.Net.NetworkInformation.PingReply.Buffer\n  parent: System.Net.NetworkInformation.PingReply\n  isExternal: false\n  name: Buffer\n  nameWithType: PingReply.Buffer\n  fullName: System.Net.NetworkInformation.PingReply.Buffer\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Net.NetworkInformation.PingReply.Options\n  parent: System.Net.NetworkInformation.PingReply\n  isExternal: false\n  name: Options\n  nameWithType: PingReply.Options\n  fullName: System.Net.NetworkInformation.PingReply.Options\n- uid: System.Net.NetworkInformation.PingOptions\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: PingOptions\n  nameWithType: PingOptions\n  fullName: System.Net.NetworkInformation.PingOptions\n- uid: System.Net.NetworkInformation.PingReply.RoundtripTime\n  parent: System.Net.NetworkInformation.PingReply\n  isExternal: false\n  name: RoundtripTime\n  nameWithType: PingReply.RoundtripTime\n  fullName: System.Net.NetworkInformation.PingReply.RoundtripTime\n- uid: System.Int64\n  parent: System\n  isExternal: true\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Net.NetworkInformation.PingReply.Status\n  parent: System.Net.NetworkInformation.PingReply\n  isExternal: false\n  name: Status\n  nameWithType: PingReply.Status\n  fullName: System.Net.NetworkInformation.PingReply.Status\n- uid: System.Net.NetworkInformation.IPStatus\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: IPStatus\n  nameWithType: IPStatus\n  fullName: System.Net.NetworkInformation.IPStatus\n- uid: System.Net.NetworkInformation.PingReply.Address*\n  parent: System.Net.NetworkInformation.PingReply\n  isExternal: false\n  name: Address\n  nameWithType: PingReply.Address\n- uid: System.Net.NetworkInformation.PingReply.Buffer*\n  parent: System.Net.NetworkInformation.PingReply\n  isExternal: false\n  name: Buffer\n  nameWithType: PingReply.Buffer\n- uid: System.Net.NetworkInformation.PingReply.Options*\n  parent: System.Net.NetworkInformation.PingReply\n  isExternal: false\n  name: Options\n  nameWithType: PingReply.Options\n- uid: System.Net.NetworkInformation.PingReply.RoundtripTime*\n  parent: System.Net.NetworkInformation.PingReply\n  isExternal: false\n  name: RoundtripTime\n  nameWithType: PingReply.RoundtripTime\n- uid: System.Net.NetworkInformation.PingReply.Status*\n  parent: System.Net.NetworkInformation.PingReply\n  isExternal: false\n  name: Status\n  nameWithType: PingReply.Status\n"}