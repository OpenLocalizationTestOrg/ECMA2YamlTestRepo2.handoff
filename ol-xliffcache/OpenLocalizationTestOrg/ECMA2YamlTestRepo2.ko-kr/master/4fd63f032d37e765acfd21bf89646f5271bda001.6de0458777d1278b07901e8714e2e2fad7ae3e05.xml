{"nodes":[{"pos":[910,975],"content":"Publishes authenticated, encrypted SOAP virtual roots on servers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Publishes authenticated, encrypted SOAP virtual roots on servers.","pos":[0,65]}]},{"pos":[988,1197],"content":"See <xref:System.EnterpriseServices.Internal.SoapServerVRoot> for the default implementation.       ISoapServerVRoot is used internally by the .NET Framework. You do not need to use it directly in your code.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"See <xref:System.EnterpriseServices.Internal.SoapServerVRoot> for the default implementation.       ISoapServerVRoot is used internally by the .NET Framework. You do not need to use it directly in your code.","pos":[0,207],"nodes":[{"content":"See &lt;xref:System.EnterpriseServices.Internal.SoapServerVRoot&gt; for the default implementation.","pos":[0,93],"source":"See <xref:System.EnterpriseServices.Internal.SoapServerVRoot> for the default implementation."},{"content":"ISoapServerVRoot is used internally by the .NET Framework.","pos":[100,158]},{"content":"You do not need to use it directly in your code.","pos":[159,207]}]}]},{"pos":[2410,2460],"content":"Creates a SOAP virtual root with security options.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a SOAP virtual root with security options.","pos":[0,50]}]},{"pos":[2832,2852],"content":"The root Web server.","needQuote":true,"needEscape":true,"nodes":[{"content":"The root Web server.","pos":[0,20]}]},{"pos":[2918,2962],"content":"The base URL that contains the virtual root.","needQuote":true,"needEscape":true,"nodes":[{"content":"The base URL that contains the virtual root.","pos":[0,44]}]},{"pos":[3032,3061],"content":"The name of the virtual root.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the virtual root.","pos":[0,29]}]},{"pos":[3126,3376],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_EnableDefaultDoc\" name=\"EnableDefaultDoc\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> property is to be set; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref uid=\"langword_csharp_EnableDefaultDoc\" name=\"EnableDefaultDoc\" href=\"\"></xref> property is to be set; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[3442,3768],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a default discovery file is to be created; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if there is to be no discovery file. If <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> and a Default.disco file exists, the file is deleted.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a default discovery file is to be created; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if there is to be no discovery file.","pos":[0,206],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a default discovery file is to be created; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if there is to be no discovery file."},{"content":"If <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and a Default.disco file exists, the file is deleted.","pos":[207,326],"source":" If <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> and a Default.disco file exists, the file is deleted."}]},{"pos":[3838,4004],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if SSL encryption is required; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if SSL encryption is required; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[4075,4183],"content":"Specify \"anonymous\" if no authentication is to be used (anonymous user). Otherwise, specify an empty string.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specify \"anonymous\" if no authentication is to be used (anonymous user). Otherwise, specify an empty string.","pos":[0,108],"nodes":[{"content":"Specify \"anonymous\" if no authentication is to be used (anonymous user).","pos":[0,72]},{"content":"Otherwise, specify an empty string.","pos":[73,108]}]}]},{"pos":[4249,4347],"content":"Not used. Specify <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> for this parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not used.","pos":[0,9]},{"content":"Specify <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for this parameter.","pos":[10,98],"source":" Specify <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> for this parameter."}]},{"pos":[4411,4474],"content":"When this method returns, this parameter contains the base URL.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, this parameter contains the base URL.","pos":[0,63]}]},{"pos":[4542,4621],"content":"When this method returns, this parameter contains the name of the virtual root.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, this parameter contains the name of the virtual root.","pos":[0,79]}]},{"pos":[4690,4787],"content":"When this method returns, this parameter contains the disk address of the Virtual Root directory.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, this parameter contains the disk address of the Virtual Root directory.","pos":[0,97]}]},{"pos":[4999,5076],"content":"A caller in the call chain does not have permission to access unmanaged code.","needQuote":true,"needEscape":true,"nodes":[{"content":"A caller in the call chain does not have permission to access unmanaged code.","pos":[0,77]}]},{"pos":[5195,5229],"content":"The SOAP utility is not available.","needQuote":true,"needEscape":true,"nodes":[{"content":"The SOAP utility is not available.","pos":[0,34]}]},{"pos":[5875,5921],"content":"Deletes a virtual root. Not fully implemented.","needQuote":true,"needEscape":true,"nodes":[{"content":"Deletes a virtual root. Not fully implemented.","pos":[0,46],"nodes":[{"content":"Deletes a virtual root.","pos":[0,23]},{"content":"Not fully implemented.","pos":[24,46]}]}]},{"pos":[5933,6097],"content":"The functionality to delete a virtual root is not currently available in the implementation of this interface. The implementation returns without deleting the root.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The functionality to delete a virtual root is not currently available in the implementation of this interface. The implementation returns without deleting the root.","pos":[0,164],"nodes":[{"content":"The functionality to delete a virtual root is not currently available in the implementation of this interface.","pos":[0,110]},{"content":"The implementation returns without deleting the root.","pos":[111,164]}]}]},{"pos":[6298,6318],"content":"The root Web server.","needQuote":true,"needEscape":true,"nodes":[{"content":"The root Web server.","pos":[0,20]}]},{"pos":[6382,6426],"content":"The base URL that contains the virtual root.","needQuote":true,"needEscape":true,"nodes":[{"content":"The base URL that contains the virtual root.","pos":[0,44]}]},{"pos":[6494,6523],"content":"The name of the virtual root.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the virtual root.","pos":[0,29]}]},{"pos":[6735,6812],"content":"A caller in the call chain does not have permission to access unmanaged code.","needQuote":true,"needEscape":true,"nodes":[{"content":"A caller in the call chain does not have permission to access unmanaged code.","pos":[0,77]}]},{"pos":[6931,6965],"content":"The SOAP utility is not available.","needQuote":true,"needEscape":true,"nodes":[{"content":"The SOAP utility is not available.","pos":[0,34]}]},{"pos":[7116,7165],"content":"The call to identify the system directory failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The call to identify the system directory failed.","pos":[0,49]}]},{"pos":[8275,8336],"content":"Returns the security status of an existing SOAP virtual root.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the security status of an existing SOAP virtual root.","pos":[0,61]}]},{"pos":[8745,8765],"content":"The root Web server.","needQuote":true,"needEscape":true,"nodes":[{"content":"The root Web server.","pos":[0,20]}]},{"pos":[8831,8875],"content":"The base URL that contains the virtual root.","needQuote":true,"needEscape":true,"nodes":[{"content":"The base URL that contains the virtual root.","pos":[0,44]}]},{"pos":[8945,8974],"content":"The name of the virtual root.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the virtual root.","pos":[0,29]}]},{"pos":[9037,9257],"content":"When this method returns, this parameter contains a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the virtual directory exists; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"When this method returns, this parameter contains a <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the virtual directory exists; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9327,9545],"content":"When this method returns, this parameter contains a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if SSL encryption is required; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"When this method returns, this parameter contains a <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if SSL encryption is required; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9613,9832],"content":"When this method returns, this parameter contains <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if Windows authentication is set, otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"When this method returns, this parameter contains <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if Windows authentication is set, otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9898,10129],"content":"When this method returns, this parameter contains <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if no authentication is set (anonymous user); otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"When this method returns, this parameter contains <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if no authentication is set (anonymous user); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10194,10515],"content":"When this method returns, this parameter contains a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the Virtual Root directory's <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_EnableDefaultDoc\" name=\"EnableDefaultDoc\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> property is set; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"When this method returns, this parameter contains a <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the Virtual Root directory's <xref uid=\"langword_csharp_EnableDefaultDoc\" name=\"EnableDefaultDoc\" href=\"\"></xref> property is set; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10581,10800],"content":"When this method returns, this parameter contains a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a Default.disco file exists; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"When this method returns, this parameter contains a <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a Default.disco file exists; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10869,10966],"content":"When this method returns, this parameter contains the disk address of the Virtual Root directory.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, this parameter contains the disk address of the Virtual Root directory.","pos":[0,97]}]},{"pos":[11030,11093],"content":"When this method returns, this parameter contains the base URL.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, this parameter contains the base URL.","pos":[0,63]}]},{"pos":[11161,11240],"content":"When this method returns, this parameter contains the name of the virtual root.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, this parameter contains the name of the virtual root.","pos":[0,79]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.EnterpriseServices.Internal.ISoapServerVRoot\n  id: ISoapServerVRoot\n  children:\n  - System.EnterpriseServices.Internal.ISoapServerVRoot.CreateVirtualRootEx(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)\n  - System.EnterpriseServices.Internal.ISoapServerVRoot.DeleteVirtualRootEx(System.String,System.String,System.String)\n  - System.EnterpriseServices.Internal.ISoapServerVRoot.GetVirtualRootStatus(System.String,System.String,System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)\n  langs:\n  - csharp\n  name: ISoapServerVRoot\n  nameWithType: ISoapServerVRoot\n  fullName: System.EnterpriseServices.Internal.ISoapServerVRoot\n  type: Interface\n  summary: Publishes authenticated, encrypted SOAP virtual roots on servers.\n  remarks: \"See <xref:System.EnterpriseServices.Internal.SoapServerVRoot> for the default implementation.  \\n  \\n ISoapServerVRoot is used internally by the .NET Framework. You do not need to use it directly in your code.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.Guid(\"A31B6577-71D2-4344-AEDF-ADC1B0DC5347\")]\n\n      public interface ISoapServerVRoot\n  implements: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.Internal.ISoapServerVRoot.CreateVirtualRootEx(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)\n  id: CreateVirtualRootEx(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)\n  parent: System.EnterpriseServices.Internal.ISoapServerVRoot\n  langs:\n  - csharp\n  name: CreateVirtualRootEx(String,String,String,String,String,String,String,String,String,String,String)\n  nameWithType: ISoapServerVRoot.CreateVirtualRootEx(String,String,String,String,String,String,String,String,String,String,String)\n  fullName: System.EnterpriseServices.Internal.ISoapServerVRoot.CreateVirtualRootEx(String,String,String,String,String,String,String,String,String,String,String)\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.Internal\n  summary: Creates a SOAP virtual root with security options.\n  syntax:\n    content: public void CreateVirtualRootEx (string rootWebServer, string inBaseUrl, string inVirtualRoot, string homePage, string discoFile, string secureSockets, string authentication, string operation, out string baseUrl, out string virtualRoot, out string physicalPath);\n    parameters:\n    - id: rootWebServer\n      type: System.String\n      description: The root Web server.\n    - id: inBaseUrl\n      type: System.String\n      description: The base URL that contains the virtual root.\n    - id: inVirtualRoot\n      type: System.String\n      description: The name of the virtual root.\n    - id: homePage\n      type: System.String\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref uid=\"langword_csharp_EnableDefaultDoc\" name=\"EnableDefaultDoc\" href=\"\"></xref> property is to be set; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: discoFile\n      type: System.String\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a default discovery file is to be created; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if there is to be no discovery file. If <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> and a Default.disco file exists, the file is deleted.\n    - id: secureSockets\n      type: System.String\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if SSL encryption is required; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: authentication\n      type: System.String\n      description: Specify \"anonymous\" if no authentication is to be used (anonymous user). Otherwise, specify an empty string.\n    - id: operation\n      type: System.String\n      description: Not used. Specify <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> for this parameter.\n    - id: baseUrl\n      type: System.String\n      description: When this method returns, this parameter contains the base URL.\n    - id: virtualRoot\n      type: System.String\n      description: When this method returns, this parameter contains the name of the virtual root.\n    - id: physicalPath\n      type: System.String\n      description: When this method returns, this parameter contains the disk address of the Virtual Root directory.\n  overload: System.EnterpriseServices.Internal.ISoapServerVRoot.CreateVirtualRootEx*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: A caller in the call chain does not have permission to access unmanaged code.\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: The SOAP utility is not available.\n  platform:\n  - net462\n- uid: System.EnterpriseServices.Internal.ISoapServerVRoot.DeleteVirtualRootEx(System.String,System.String,System.String)\n  id: DeleteVirtualRootEx(System.String,System.String,System.String)\n  parent: System.EnterpriseServices.Internal.ISoapServerVRoot\n  langs:\n  - csharp\n  name: DeleteVirtualRootEx(String,String,String)\n  nameWithType: ISoapServerVRoot.DeleteVirtualRootEx(String,String,String)\n  fullName: System.EnterpriseServices.Internal.ISoapServerVRoot.DeleteVirtualRootEx(String,String,String)\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.Internal\n  summary: Deletes a virtual root. Not fully implemented.\n  remarks: The functionality to delete a virtual root is not currently available in the implementation of this interface. The implementation returns without deleting the root.\n  syntax:\n    content: public void DeleteVirtualRootEx (string rootWebServer, string baseUrl, string virtualRoot);\n    parameters:\n    - id: rootWebServer\n      type: System.String\n      description: The root Web server.\n    - id: baseUrl\n      type: System.String\n      description: The base URL that contains the virtual root.\n    - id: virtualRoot\n      type: System.String\n      description: The name of the virtual root.\n  overload: System.EnterpriseServices.Internal.ISoapServerVRoot.DeleteVirtualRootEx*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: A caller in the call chain does not have permission to access unmanaged code.\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: The SOAP utility is not available.\n  - type: System.EnterpriseServices.ServicedComponentException\n    commentId: T:System.EnterpriseServices.ServicedComponentException\n    description: The call to identify the system directory failed.\n  platform:\n  - net462\n- uid: System.EnterpriseServices.Internal.ISoapServerVRoot.GetVirtualRootStatus(System.String,System.String,System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)\n  id: GetVirtualRootStatus(System.String,System.String,System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)\n  parent: System.EnterpriseServices.Internal.ISoapServerVRoot\n  langs:\n  - csharp\n  name: GetVirtualRootStatus(String,String,String,String,String,String,String,String,String,String,String,String)\n  nameWithType: ISoapServerVRoot.GetVirtualRootStatus(String,String,String,String,String,String,String,String,String,String,String,String)\n  fullName: System.EnterpriseServices.Internal.ISoapServerVRoot.GetVirtualRootStatus(String,String,String,String,String,String,String,String,String,String,String,String)\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices.Internal\n  summary: Returns the security status of an existing SOAP virtual root.\n  syntax:\n    content: public void GetVirtualRootStatus (string rootWebServer, string inBaseUrl, string inVirtualRoot, out string exists, out string secureSockets, out string windowsAuth, out string anonymous, out string homePage, out string discoFile, out string physicalPath, out string baseUrl, out string virtualRoot);\n    parameters:\n    - id: rootWebServer\n      type: System.String\n      description: The root Web server.\n    - id: inBaseUrl\n      type: System.String\n      description: The base URL that contains the virtual root.\n    - id: inVirtualRoot\n      type: System.String\n      description: The name of the virtual root.\n    - id: exists\n      type: System.String\n      description: When this method returns, this parameter contains a <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the virtual directory exists; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: secureSockets\n      type: System.String\n      description: When this method returns, this parameter contains a <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if SSL encryption is required; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: windowsAuth\n      type: System.String\n      description: When this method returns, this parameter contains <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if Windows authentication is set, otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: anonymous\n      type: System.String\n      description: When this method returns, this parameter contains <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if no authentication is set (anonymous user); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: homePage\n      type: System.String\n      description: When this method returns, this parameter contains a <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the Virtual Root directory's <xref uid=\"langword_csharp_EnableDefaultDoc\" name=\"EnableDefaultDoc\" href=\"\"></xref> property is set; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: discoFile\n      type: System.String\n      description: When this method returns, this parameter contains a <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a Default.disco file exists; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: physicalPath\n      type: System.String\n      description: When this method returns, this parameter contains the disk address of the Virtual Root directory.\n    - id: baseUrl\n      type: System.String\n      description: When this method returns, this parameter contains the base URL.\n    - id: virtualRoot\n      type: System.String\n      description: When this method returns, this parameter contains the name of the virtual root.\n  overload: System.EnterpriseServices.Internal.ISoapServerVRoot.GetVirtualRootStatus*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.SecurityException\n  isExternal: true\n  name: System.Security.SecurityException\n- uid: System.PlatformNotSupportedException\n  isExternal: true\n  name: System.PlatformNotSupportedException\n- uid: System.EnterpriseServices.ServicedComponentException\n  parent: System.EnterpriseServices\n  isExternal: false\n  name: ServicedComponentException\n  nameWithType: ServicedComponentException\n  fullName: System.EnterpriseServices.ServicedComponentException\n- uid: System.EnterpriseServices.Internal.ISoapServerVRoot.CreateVirtualRootEx(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)\n  parent: System.EnterpriseServices.Internal.ISoapServerVRoot\n  isExternal: false\n  name: CreateVirtualRootEx(String,String,String,String,String,String,String,String,String,String,String)\n  nameWithType: ISoapServerVRoot.CreateVirtualRootEx(String,String,String,String,String,String,String,String,String,String,String)\n  fullName: System.EnterpriseServices.Internal.ISoapServerVRoot.CreateVirtualRootEx(String,String,String,String,String,String,String,String,String,String,String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.EnterpriseServices.Internal.ISoapServerVRoot.DeleteVirtualRootEx(System.String,System.String,System.String)\n  parent: System.EnterpriseServices.Internal.ISoapServerVRoot\n  isExternal: false\n  name: DeleteVirtualRootEx(String,String,String)\n  nameWithType: ISoapServerVRoot.DeleteVirtualRootEx(String,String,String)\n  fullName: System.EnterpriseServices.Internal.ISoapServerVRoot.DeleteVirtualRootEx(String,String,String)\n- uid: System.EnterpriseServices.Internal.ISoapServerVRoot.GetVirtualRootStatus(System.String,System.String,System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)\n  parent: System.EnterpriseServices.Internal.ISoapServerVRoot\n  isExternal: false\n  name: GetVirtualRootStatus(String,String,String,String,String,String,String,String,String,String,String,String)\n  nameWithType: ISoapServerVRoot.GetVirtualRootStatus(String,String,String,String,String,String,String,String,String,String,String,String)\n  fullName: System.EnterpriseServices.Internal.ISoapServerVRoot.GetVirtualRootStatus(String,String,String,String,String,String,String,String,String,String,String,String)\n- uid: System.EnterpriseServices.Internal.ISoapServerVRoot.CreateVirtualRootEx*\n  parent: System.EnterpriseServices.Internal.ISoapServerVRoot\n  isExternal: false\n  name: CreateVirtualRootEx\n  nameWithType: ISoapServerVRoot.CreateVirtualRootEx\n- uid: System.EnterpriseServices.Internal.ISoapServerVRoot.DeleteVirtualRootEx*\n  parent: System.EnterpriseServices.Internal.ISoapServerVRoot\n  isExternal: false\n  name: DeleteVirtualRootEx\n  nameWithType: ISoapServerVRoot.DeleteVirtualRootEx\n- uid: System.EnterpriseServices.Internal.ISoapServerVRoot.GetVirtualRootStatus*\n  parent: System.EnterpriseServices.Internal.ISoapServerVRoot\n  isExternal: false\n  name: GetVirtualRootStatus\n  nameWithType: ISoapServerVRoot.GetVirtualRootStatus\n"}