{"nodes":[{"pos":[1104,1148],"content":"Provides information about an imaging codec.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides information about an imaging codec.","pos":[0,44]}]},{"pos":[1160,1436],"content":"A BitmapCodecInfo can be obtain for each codec in <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> by using the &lt;xref:System.Windows.Media.Imaging.BitmapDecoder.CodecInfo%2A&gt; or the &lt;xref:System.Windows.Media.Imaging.BitmapEncoder.CodecInfo%2A&gt; properties.","needQuote":true,"needEscape":true,"extradata":"MT","source":"A BitmapCodecInfo can be obtain for each codec in [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] by using the <xref:System.Windows.Media.Imaging.BitmapDecoder.CodecInfo%2A> or the <xref:System.Windows.Media.Imaging.BitmapEncoder.CodecInfo%2A> properties."},{"pos":[2396,2492],"content":"Initializes a new instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Imaging.BitmapCodecInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of <xref href=\"System.Windows.Media.Imaging.BitmapCodecInfo\"></xref>."},{"pos":[3039,3092],"content":"Gets a value that identifies the author of the codec.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that identifies the author of the codec.","pos":[0,53]}]},{"pos":[3566,3590],"content":"The author of the codec.","needQuote":true,"needEscape":true,"nodes":[{"content":"The author of the codec.","pos":[0,24]}]},{"pos":[4111,4175],"content":"Gets a value that identifies the container format for the codec.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that identifies the container format for the codec.","pos":[0,64]}]},{"pos":[4810,4844],"content":"The container format of the codec.","needQuote":true,"needEscape":true,"nodes":[{"content":"The container format of the codec.","pos":[0,34]}]},{"pos":[5389,5455],"content":"Gets a value that identifies the device manufacturer of the codec.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that identifies the device manufacturer of the codec.","pos":[0,66]}]},{"pos":[6097,6134],"content":"The device manufacturer of the codec.","needQuote":true,"needEscape":true,"nodes":[{"content":"The device manufacturer of the codec.","pos":[0,37]}]},{"pos":[6652,6712],"content":"Gets a value that identifies the device models of the codec.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that identifies the device models of the codec.","pos":[0,60]}]},{"pos":[7348,7378],"content":"The device model of the codec.","needQuote":true,"needEscape":true,"nodes":[{"content":"The device model of the codec.","pos":[0,30]}]},{"pos":[7900,7975],"content":"Gets a value that identifies the file extensions associated with the codec.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that identifies the file extensions associated with the codec.","pos":[0,75]}]},{"pos":[8613,8659],"content":"The file extensions associated with the codec.","needQuote":true,"needEscape":true,"nodes":[{"content":"The file extensions associated with the codec.","pos":[0,46]}]},{"pos":[9173,9233],"content":"Gets a value that represents the friendly name of the codec.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that represents the friendly name of the codec.","pos":[0,60]}]},{"pos":[9869,9900],"content":"The friendly name of the codec.","needQuote":true,"needEscape":true,"nodes":[{"content":"The friendly name of the codec.","pos":[0,31]}]},{"pos":[10397,10520],"content":"Gets a value that identifies the <ph id=\"ph1\">[!INCLUDE[TLA#tla_mime](~/add/includes/tlasharptla-mime-md.md)]</ph> associated with the codec.","needQuote":true,"needEscape":true,"source":"Gets a value that identifies the [!INCLUDE[TLA#tla_mime](~/add/includes/tlasharptla-mime-md.md)] associated with the codec."},{"pos":[11153,11253],"content":"The <ph id=\"ph1\">[!INCLUDE[TLA#tla_mime](~/add/includes/tlasharptla-mime-md.md)]</ph> types associated with the codec.","needQuote":true,"needEscape":true,"source":"The [!INCLUDE[TLA#tla_mime](~/add/includes/tlasharptla-mime-md.md)] types associated with the codec."},{"pos":[11802,11870],"content":"Gets a value that identifies the specification version of the codec.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that identifies the specification version of the codec.","pos":[0,68]}]},{"pos":[12516,12555],"content":"The specification version of the codec.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specification version of the codec.","pos":[0,39]}]},{"pos":[13100,13165],"content":"Gets a value that indicates whether the codec supports animation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the codec supports animation.","pos":[0,65]}]},{"pos":[13294,13462],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the codec supports animation; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the codec supports animation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[13999,14073],"content":"Gets a value that indicates whether the codec supports lossless of images.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the codec supports lossless of images.","pos":[0,74]}]},{"pos":[14201,14378],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the codec supports lossless of images; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the codec supports lossless of images; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[14944,15016],"content":"Gets a value that identifies whether the codec supports multiple frames.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that identifies whether the codec supports multiple frames.","pos":[0,72]}]},{"pos":[15150,15324],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the codec supports multiple frames; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the codec supports multiple frames; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[15821,15875],"content":"Gets a value that identifies the version of the codec.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that identifies the version of the codec.","pos":[0,54]}]},{"pos":[16508,16533],"content":"The version of the codec.","needQuote":true,"needEscape":true,"nodes":[{"content":"The version of the codec.","pos":[0,25]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo\n  id: BitmapCodecInfo\n  children:\n  - System.Windows.Media.Imaging.BitmapCodecInfo.#ctor\n  - System.Windows.Media.Imaging.BitmapCodecInfo.Author\n  - System.Windows.Media.Imaging.BitmapCodecInfo.ContainerFormat\n  - System.Windows.Media.Imaging.BitmapCodecInfo.DeviceManufacturer\n  - System.Windows.Media.Imaging.BitmapCodecInfo.DeviceModels\n  - System.Windows.Media.Imaging.BitmapCodecInfo.FileExtensions\n  - System.Windows.Media.Imaging.BitmapCodecInfo.FriendlyName\n  - System.Windows.Media.Imaging.BitmapCodecInfo.MimeTypes\n  - System.Windows.Media.Imaging.BitmapCodecInfo.SpecificationVersion\n  - System.Windows.Media.Imaging.BitmapCodecInfo.SupportsAnimation\n  - System.Windows.Media.Imaging.BitmapCodecInfo.SupportsLossless\n  - System.Windows.Media.Imaging.BitmapCodecInfo.SupportsMultipleFrames\n  - System.Windows.Media.Imaging.BitmapCodecInfo.Version\n  langs:\n  - csharp\n  name: BitmapCodecInfo\n  nameWithType: BitmapCodecInfo\n  fullName: System.Windows.Media.Imaging.BitmapCodecInfo\n  type: Class\n  summary: Provides information about an imaging codec.\n  remarks: A BitmapCodecInfo can be obtain for each codec in [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] by using the <xref:System.Windows.Media.Imaging.BitmapDecoder.CodecInfo%2A> or the <xref:System.Windows.Media.Imaging.BitmapEncoder.CodecInfo%2A> properties.\n  example:\n  - \"The following example demonstrates how to retrieve the <xref:System.Windows.Media.Imaging.BitmapCodecInfo.Author%2A> property of a given <xref:System.Windows.Media.Imaging.BitmapEncoder>.  \\n  \\n [!code-vb[BitmapFrameExample#3](~/add/codesnippet/visualbasic/BitmapFrame/BitmapFrame.vb#3)]\\n [!code-cs[BitmapFrameExample#3](~/add/codesnippet/csharp/BitmapFrame/BitmapFrame.cs#3)]\"\n  syntax:\n    content: public abstract class BitmapCodecInfo\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  langs:\n  - csharp\n  name: BitmapCodecInfo()\n  nameWithType: BitmapCodecInfo.BitmapCodecInfo()\n  fullName: System.Windows.Media.Imaging.BitmapCodecInfo.BitmapCodecInfo()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Initializes a new instance of <xref href=\"System.Windows.Media.Imaging.BitmapCodecInfo\"></xref>.\n  syntax:\n    content: protected BitmapCodecInfo ();\n    parameters: []\n  overload: System.Windows.Media.Imaging.BitmapCodecInfo.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.Author\n  id: Author\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  langs:\n  - csharp\n  name: Author\n  nameWithType: BitmapCodecInfo.Author\n  fullName: System.Windows.Media.Imaging.BitmapCodecInfo.Author\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets a value that identifies the author of the codec.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to retrieve the Author property of a given <xref:System.Windows.Media.Imaging.BitmapEncoder>.  \\n  \\n [!code-vb[BitmapFrameExample#3](~/add/codesnippet/visualbasic/BitmapFrame/BitmapFrame.vb#3)]\\n [!code-cs[BitmapFrameExample#3](~/add/codesnippet/csharp/BitmapFrame/BitmapFrame.cs#3)]\"\n  syntax:\n    content: public virtual string Author { get; }\n    return:\n      type: System.String\n      description: The author of the codec.\n  overload: System.Windows.Media.Imaging.BitmapCodecInfo.Author*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.ContainerFormat\n  id: ContainerFormat\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  langs:\n  - csharp\n  name: ContainerFormat\n  nameWithType: BitmapCodecInfo.ContainerFormat\n  fullName: System.Windows.Media.Imaging.BitmapCodecInfo.ContainerFormat\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets a value that identifies the container format for the codec.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to retrieve the <xref:System.Windows.Media.Imaging.BitmapCodecInfo.Author%2A> property of a given <xref:System.Windows.Media.Imaging.BitmapEncoder>. You can use the same approach to retrieve other <xref:System.Windows.Media.Imaging.BitmapCodecInfo>.  \\n  \\n [!code-vb[BitmapFrameExample#3](~/add/codesnippet/visualbasic/BitmapFrame/BitmapFrame.vb#3)]\\n [!code-cs[BitmapFrameExample#3](~/add/codesnippet/csharp/BitmapFrame/BitmapFrame.cs#3)]\"\n  syntax:\n    content: public virtual Guid ContainerFormat { get; }\n    return:\n      type: System.Guid\n      description: The container format of the codec.\n  overload: System.Windows.Media.Imaging.BitmapCodecInfo.ContainerFormat*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.DeviceManufacturer\n  id: DeviceManufacturer\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  langs:\n  - csharp\n  name: DeviceManufacturer\n  nameWithType: BitmapCodecInfo.DeviceManufacturer\n  fullName: System.Windows.Media.Imaging.BitmapCodecInfo.DeviceManufacturer\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets a value that identifies the device manufacturer of the codec.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to retrieve the <xref:System.Windows.Media.Imaging.BitmapCodecInfo.Author%2A> property of a given <xref:System.Windows.Media.Imaging.BitmapEncoder>. You can use the same approach to retrieve other <xref:System.Windows.Media.Imaging.BitmapCodecInfo>.  \\n  \\n [!code-vb[BitmapFrameExample#3](~/add/codesnippet/visualbasic/BitmapFrame/BitmapFrame.vb#3)]\\n [!code-cs[BitmapFrameExample#3](~/add/codesnippet/csharp/BitmapFrame/BitmapFrame.cs#3)]\"\n  syntax:\n    content: public virtual string DeviceManufacturer { get; }\n    return:\n      type: System.String\n      description: The device manufacturer of the codec.\n  overload: System.Windows.Media.Imaging.BitmapCodecInfo.DeviceManufacturer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.DeviceModels\n  id: DeviceModels\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  langs:\n  - csharp\n  name: DeviceModels\n  nameWithType: BitmapCodecInfo.DeviceModels\n  fullName: System.Windows.Media.Imaging.BitmapCodecInfo.DeviceModels\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets a value that identifies the device models of the codec.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to retrieve the <xref:System.Windows.Media.Imaging.BitmapCodecInfo.Author%2A> property of a given <xref:System.Windows.Media.Imaging.BitmapEncoder>. You can use the same approach to retrieve other <xref:System.Windows.Media.Imaging.BitmapCodecInfo>.  \\n  \\n [!code-vb[BitmapFrameExample#3](~/add/codesnippet/visualbasic/BitmapFrame/BitmapFrame.vb#3)]\\n [!code-cs[BitmapFrameExample#3](~/add/codesnippet/csharp/BitmapFrame/BitmapFrame.cs#3)]\"\n  syntax:\n    content: public virtual string DeviceModels { get; }\n    return:\n      type: System.String\n      description: The device model of the codec.\n  overload: System.Windows.Media.Imaging.BitmapCodecInfo.DeviceModels*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.FileExtensions\n  id: FileExtensions\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  langs:\n  - csharp\n  name: FileExtensions\n  nameWithType: BitmapCodecInfo.FileExtensions\n  fullName: System.Windows.Media.Imaging.BitmapCodecInfo.FileExtensions\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets a value that identifies the file extensions associated with the codec.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to retrieve the <xref:System.Windows.Media.Imaging.BitmapCodecInfo.Author%2A> property of a given <xref:System.Windows.Media.Imaging.BitmapEncoder>. You can use the same approach to retrieve other <xref:System.Windows.Media.Imaging.BitmapCodecInfo>.  \\n  \\n [!code-vb[BitmapFrameExample#3](~/add/codesnippet/visualbasic/BitmapFrame/BitmapFrame.vb#3)]\\n [!code-cs[BitmapFrameExample#3](~/add/codesnippet/csharp/BitmapFrame/BitmapFrame.cs#3)]\"\n  syntax:\n    content: public virtual string FileExtensions { get; }\n    return:\n      type: System.String\n      description: The file extensions associated with the codec.\n  overload: System.Windows.Media.Imaging.BitmapCodecInfo.FileExtensions*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.FriendlyName\n  id: FriendlyName\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  langs:\n  - csharp\n  name: FriendlyName\n  nameWithType: BitmapCodecInfo.FriendlyName\n  fullName: System.Windows.Media.Imaging.BitmapCodecInfo.FriendlyName\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets a value that represents the friendly name of the codec.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to retrieve the <xref:System.Windows.Media.Imaging.BitmapCodecInfo.Author%2A> property of a given <xref:System.Windows.Media.Imaging.BitmapEncoder>. You can use the same approach to retrieve other <xref:System.Windows.Media.Imaging.BitmapCodecInfo>.  \\n  \\n [!code-vb[BitmapFrameExample#3](~/add/codesnippet/visualbasic/BitmapFrame/BitmapFrame.vb#3)]\\n [!code-cs[BitmapFrameExample#3](~/add/codesnippet/csharp/BitmapFrame/BitmapFrame.cs#3)]\"\n  syntax:\n    content: public virtual string FriendlyName { get; }\n    return:\n      type: System.String\n      description: The friendly name of the codec.\n  overload: System.Windows.Media.Imaging.BitmapCodecInfo.FriendlyName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.MimeTypes\n  id: MimeTypes\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  langs:\n  - csharp\n  name: MimeTypes\n  nameWithType: BitmapCodecInfo.MimeTypes\n  fullName: System.Windows.Media.Imaging.BitmapCodecInfo.MimeTypes\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets a value that identifies the [!INCLUDE[TLA#tla_mime](~/add/includes/tlasharptla-mime-md.md)] associated with the codec.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to retrieve the <xref:System.Windows.Media.Imaging.BitmapCodecInfo.Author%2A> property of a given <xref:System.Windows.Media.Imaging.BitmapEncoder>. You can use the same approach to retrieve other <xref:System.Windows.Media.Imaging.BitmapCodecInfo>.  \\n  \\n [!code-vb[BitmapFrameExample#3](~/add/codesnippet/visualbasic/BitmapFrame/BitmapFrame.vb#3)]\\n [!code-cs[BitmapFrameExample#3](~/add/codesnippet/csharp/BitmapFrame/BitmapFrame.cs#3)]\"\n  syntax:\n    content: public virtual string MimeTypes { get; }\n    return:\n      type: System.String\n      description: The [!INCLUDE[TLA#tla_mime](~/add/includes/tlasharptla-mime-md.md)] types associated with the codec.\n  overload: System.Windows.Media.Imaging.BitmapCodecInfo.MimeTypes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.SpecificationVersion\n  id: SpecificationVersion\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  langs:\n  - csharp\n  name: SpecificationVersion\n  nameWithType: BitmapCodecInfo.SpecificationVersion\n  fullName: System.Windows.Media.Imaging.BitmapCodecInfo.SpecificationVersion\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets a value that identifies the specification version of the codec.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to retrieve the <xref:System.Windows.Media.Imaging.BitmapCodecInfo.Author%2A> property of a given <xref:System.Windows.Media.Imaging.BitmapEncoder>. You can use the same approach to retrieve other <xref:System.Windows.Media.Imaging.BitmapCodecInfo>.  \\n  \\n [!code-vb[BitmapFrameExample#3](~/add/codesnippet/visualbasic/BitmapFrame/BitmapFrame.vb#3)]\\n [!code-cs[BitmapFrameExample#3](~/add/codesnippet/csharp/BitmapFrame/BitmapFrame.cs#3)]\"\n  syntax:\n    content: public virtual Version SpecificationVersion { get; }\n    return:\n      type: System.Version\n      description: The specification version of the codec.\n  overload: System.Windows.Media.Imaging.BitmapCodecInfo.SpecificationVersion*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.SupportsAnimation\n  id: SupportsAnimation\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  langs:\n  - csharp\n  name: SupportsAnimation\n  nameWithType: BitmapCodecInfo.SupportsAnimation\n  fullName: System.Windows.Media.Imaging.BitmapCodecInfo.SupportsAnimation\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets a value that indicates whether the codec supports animation.\n  syntax:\n    content: public virtual bool SupportsAnimation { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the codec supports animation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.Imaging.BitmapCodecInfo.SupportsAnimation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.SupportsLossless\n  id: SupportsLossless\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  langs:\n  - csharp\n  name: SupportsLossless\n  nameWithType: BitmapCodecInfo.SupportsLossless\n  fullName: System.Windows.Media.Imaging.BitmapCodecInfo.SupportsLossless\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets a value that indicates whether the codec supports lossless of images.\n  syntax:\n    content: public virtual bool SupportsLossless { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the codec supports lossless of images; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.Imaging.BitmapCodecInfo.SupportsLossless*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.SupportsMultipleFrames\n  id: SupportsMultipleFrames\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  langs:\n  - csharp\n  name: SupportsMultipleFrames\n  nameWithType: BitmapCodecInfo.SupportsMultipleFrames\n  fullName: System.Windows.Media.Imaging.BitmapCodecInfo.SupportsMultipleFrames\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets a value that identifies whether the codec supports multiple frames.\n  syntax:\n    content: public virtual bool SupportsMultipleFrames { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the codec supports multiple frames; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.Imaging.BitmapCodecInfo.SupportsMultipleFrames*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.Version\n  id: Version\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  langs:\n  - csharp\n  name: Version\n  nameWithType: BitmapCodecInfo.Version\n  fullName: System.Windows.Media.Imaging.BitmapCodecInfo.Version\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets a value that identifies the version of the codec.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to retrieve the <xref:System.Windows.Media.Imaging.BitmapCodecInfo.Author%2A> property of a given <xref:System.Windows.Media.Imaging.BitmapEncoder>. You can use the same approach to retrieve other <xref:System.Windows.Media.Imaging.BitmapCodecInfo>.  \\n  \\n [!code-vb[BitmapFrameExample#3](~/add/codesnippet/visualbasic/BitmapFrame/BitmapFrame.vb#3)]\\n [!code-cs[BitmapFrameExample#3](~/add/codesnippet/csharp/BitmapFrame/BitmapFrame.cs#3)]\"\n  syntax:\n    content: public virtual Version Version { get; }\n    return:\n      type: System.Version\n      description: The version of the codec.\n  overload: System.Windows.Media.Imaging.BitmapCodecInfo.Version*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.#ctor\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: BitmapCodecInfo()\n  nameWithType: BitmapCodecInfo.BitmapCodecInfo()\n  fullName: System.Windows.Media.Imaging.BitmapCodecInfo.BitmapCodecInfo()\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.Author\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: Author\n  nameWithType: BitmapCodecInfo.Author\n  fullName: System.Windows.Media.Imaging.BitmapCodecInfo.Author\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.ContainerFormat\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: ContainerFormat\n  nameWithType: BitmapCodecInfo.ContainerFormat\n  fullName: System.Windows.Media.Imaging.BitmapCodecInfo.ContainerFormat\n- uid: System.Guid\n  parent: System\n  isExternal: true\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.DeviceManufacturer\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: DeviceManufacturer\n  nameWithType: BitmapCodecInfo.DeviceManufacturer\n  fullName: System.Windows.Media.Imaging.BitmapCodecInfo.DeviceManufacturer\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.DeviceModels\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: DeviceModels\n  nameWithType: BitmapCodecInfo.DeviceModels\n  fullName: System.Windows.Media.Imaging.BitmapCodecInfo.DeviceModels\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.FileExtensions\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: FileExtensions\n  nameWithType: BitmapCodecInfo.FileExtensions\n  fullName: System.Windows.Media.Imaging.BitmapCodecInfo.FileExtensions\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.FriendlyName\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: FriendlyName\n  nameWithType: BitmapCodecInfo.FriendlyName\n  fullName: System.Windows.Media.Imaging.BitmapCodecInfo.FriendlyName\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.MimeTypes\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: MimeTypes\n  nameWithType: BitmapCodecInfo.MimeTypes\n  fullName: System.Windows.Media.Imaging.BitmapCodecInfo.MimeTypes\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.SpecificationVersion\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: SpecificationVersion\n  nameWithType: BitmapCodecInfo.SpecificationVersion\n  fullName: System.Windows.Media.Imaging.BitmapCodecInfo.SpecificationVersion\n- uid: System.Version\n  parent: System\n  isExternal: true\n  name: Version\n  nameWithType: Version\n  fullName: System.Version\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.SupportsAnimation\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: SupportsAnimation\n  nameWithType: BitmapCodecInfo.SupportsAnimation\n  fullName: System.Windows.Media.Imaging.BitmapCodecInfo.SupportsAnimation\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.SupportsLossless\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: SupportsLossless\n  nameWithType: BitmapCodecInfo.SupportsLossless\n  fullName: System.Windows.Media.Imaging.BitmapCodecInfo.SupportsLossless\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.SupportsMultipleFrames\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: SupportsMultipleFrames\n  nameWithType: BitmapCodecInfo.SupportsMultipleFrames\n  fullName: System.Windows.Media.Imaging.BitmapCodecInfo.SupportsMultipleFrames\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.Version\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: Version\n  nameWithType: BitmapCodecInfo.Version\n  fullName: System.Windows.Media.Imaging.BitmapCodecInfo.Version\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.#ctor*\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: BitmapCodecInfo\n  nameWithType: BitmapCodecInfo.BitmapCodecInfo\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.Author*\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: Author\n  nameWithType: BitmapCodecInfo.Author\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.ContainerFormat*\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: ContainerFormat\n  nameWithType: BitmapCodecInfo.ContainerFormat\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.DeviceManufacturer*\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: DeviceManufacturer\n  nameWithType: BitmapCodecInfo.DeviceManufacturer\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.DeviceModels*\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: DeviceModels\n  nameWithType: BitmapCodecInfo.DeviceModels\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.FileExtensions*\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: FileExtensions\n  nameWithType: BitmapCodecInfo.FileExtensions\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.FriendlyName*\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: FriendlyName\n  nameWithType: BitmapCodecInfo.FriendlyName\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.MimeTypes*\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: MimeTypes\n  nameWithType: BitmapCodecInfo.MimeTypes\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.SpecificationVersion*\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: SpecificationVersion\n  nameWithType: BitmapCodecInfo.SpecificationVersion\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.SupportsAnimation*\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: SupportsAnimation\n  nameWithType: BitmapCodecInfo.SupportsAnimation\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.SupportsLossless*\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: SupportsLossless\n  nameWithType: BitmapCodecInfo.SupportsLossless\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.SupportsMultipleFrames*\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: SupportsMultipleFrames\n  nameWithType: BitmapCodecInfo.SupportsMultipleFrames\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.Version*\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: Version\n  nameWithType: BitmapCodecInfo.Version\n"}