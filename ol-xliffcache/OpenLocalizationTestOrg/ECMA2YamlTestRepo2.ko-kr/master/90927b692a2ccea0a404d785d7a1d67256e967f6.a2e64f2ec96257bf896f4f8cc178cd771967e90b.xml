{"nodes":[{"pos":[716,825],"content":"Represents the restriction of the number of elements in the argument collection to the specified limit value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the restriction of the number of elements in the argument collection to the specified limit value.","pos":[0,109]}]},{"pos":[837,1700],"content":"A DbLimitExpression can be applied to any <xref:System.Data.Common.CommandTrees.DbExpression> with a collection result type, including <xref:System.Data.Common.CommandTrees.DbSkipExpression>. DbLimitExpression provides the equivalent of the Top operation. It does not require an ordering operation to have been performed on its input. It has two `Expression` properties, <xref:System.Data.Common.CommandTrees.DbLimitExpression.Argument%2A> and <xref:System.Data.Common.CommandTrees.DbLimitExpression.Limit%2A>, that specify the collection and the number of rows to return respectively. DbLimitExpression also has a `Boolean`<xref:System.Data.Common.CommandTrees.DbLimitExpression.WithTies%2A> property that controls whether rows equal in rank to the final row are returned. <xref:System.Data.Common.CommandTrees.DbLimitExpression.WithTies%2A> defaults to `false`.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A DbLimitExpression can be applied to any &lt;xref:System.Data.Common.CommandTrees.DbExpression&gt; with a collection result type, including &lt;xref:System.Data.Common.CommandTrees.DbSkipExpression&gt;.","pos":[0,191],"source":"A DbLimitExpression can be applied to any <xref:System.Data.Common.CommandTrees.DbExpression> with a collection result type, including <xref:System.Data.Common.CommandTrees.DbSkipExpression>."},{"content":"DbLimitExpression provides the equivalent of the Top operation.","pos":[192,255]},{"content":"It does not require an ordering operation to have been performed on its input.","pos":[256,334]},{"content":"It has two <ph id=\"ph1\">`Expression`</ph> properties, &lt;xref:System.Data.Common.CommandTrees.DbLimitExpression.Argument%2A&gt; and &lt;xref:System.Data.Common.CommandTrees.DbLimitExpression.Limit%2A&gt;, that specify the collection and the number of rows to return respectively.","pos":[335,585],"source":" It has two `Expression` properties, <xref:System.Data.Common.CommandTrees.DbLimitExpression.Argument%2A> and <xref:System.Data.Common.CommandTrees.DbLimitExpression.Limit%2A>, that specify the collection and the number of rows to return respectively."},{"content":"DbLimitExpression also has a <ph id=\"ph1\">`Boolean`</ph>&lt;xref:System.Data.Common.CommandTrees.DbLimitExpression.WithTies%2A&gt; property that controls whether rows equal in rank to the final row are returned.","pos":[586,773],"source":" DbLimitExpression also has a `Boolean`<xref:System.Data.Common.CommandTrees.DbLimitExpression.WithTies%2A> property that controls whether rows equal in rank to the final row are returned."},{"content":"&lt;xref:System.Data.Common.CommandTrees.DbLimitExpression.WithTies%2A&gt; defaults to <ph id=\"ph1\">`false`</ph>.","pos":[774,863],"source":" <xref:System.Data.Common.CommandTrees.DbLimitExpression.WithTies%2A> defaults to `false`."}]},{"pos":[5497,5579],"content":"Implements the visitor pattern for expressions that do not produce a result value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Implements the visitor pattern for expressions that do not produce a result value.","pos":[0,82]}]},{"pos":[5811,5899],"content":"An instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionVisitor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An instance of <xref href=\"System.Data.Common.CommandTrees.DbExpressionVisitor\"></xref>."},{"pos":[6086,6171],"content":"<ph id=\"ph1\">&lt;code&gt;visitor&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>visitor</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[7058,7070],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7126,7138],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7664,7727],"content":"Gets or sets an expression that specifies the input collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets an expression that specifies the input collection.","pos":[0,63]}]},{"pos":[7909,7959],"content":"An expression that specifies the input collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"An expression that specifies the input collection.","pos":[0,50]}]},{"pos":[8148,8227],"content":"The expression is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The expression is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[8322,8500],"content":"The expression is not associated with the command tree of the <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbLimitExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, or its result type is not a collection type.","needQuote":true,"needEscape":true,"source":"The expression is not associated with the command tree of the <xref href=\"System.Data.Common.CommandTrees.DbLimitExpression\"></xref>, or its result type is not a collection type."},{"pos":[8911,9024],"content":"Gets or sets an expression that specifies the limit on the number of elements returned from the input collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets an expression that specifies the limit on the number of elements returned from the input collection.","pos":[0,113]}]},{"pos":[9203,9303],"content":"An expression that specifies the limit on the number of elements returned from the input collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"An expression that specifies the limit on the number of elements returned from the input collection.","pos":[0,100]}]},{"pos":[9489,9568],"content":"The expression is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The expression is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[9663,10047],"content":"The expression is not associated with the command tree of the <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbLimitExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, or is not one of <bpt id=\"p2\">&lt;xref href=\"System.Data.Common.CommandTrees.DbConstantExpression\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> or <bpt id=\"p3\">&lt;xref href=\"System.Data.Common.CommandTrees.DbParameterReferenceExpression\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, or its result type is not equal or promotable to a 64-bit integer type.","needQuote":true,"needEscape":true,"source":"The expression is not associated with the command tree of the <xref href=\"System.Data.Common.CommandTrees.DbLimitExpression\"></xref>, or is not one of <xref href=\"System.Data.Common.CommandTrees.DbConstantExpression\"></xref> or <xref href=\"System.Data.Common.CommandTrees.DbParameterReferenceExpression\"></xref>, or its result type is not equal or promotable to a 64-bit integer type."},{"pos":[10473,10675],"content":"Gets whether the limit operation will include tied results. Including tied results might produce more results than specified by the <xref:System.Data.Common.CommandTrees.DbLimitExpression.Limit*> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets whether the limit operation will include tied results. Including tied results might produce more results than specified by the <xref:System.Data.Common.CommandTrees.DbLimitExpression.Limit*> value.","pos":[0,202],"nodes":[{"content":"Gets whether the limit operation will include tied results.","pos":[0,59]},{"content":"Including tied results might produce more results than specified by the &lt;xref:System.Data.Common.CommandTrees.DbLimitExpression.Limit*&gt; value.","pos":[60,202],"source":" Including tied results might produce more results than specified by the <xref:System.Data.Common.CommandTrees.DbLimitExpression.Limit*> value."}]}]},{"pos":[10687,10775],"content":"The WithTies property controls whether rows equal in rank to the final row are returned.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The WithTies property controls whether rows equal in rank to the final row are returned.","pos":[0,88]}]},{"pos":[10887,11151],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the limit operation will include tied results; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the limit operation will include tied results; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,185],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the limit operation will include tied results; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[186,264],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Common.CommandTrees.DbLimitExpression\n  id: DbLimitExpression\n  children:\n  - System.Data.Common.CommandTrees.DbLimitExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)\n  - System.Data.Common.CommandTrees.DbLimitExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)\n  - System.Data.Common.CommandTrees.DbLimitExpression.Argument\n  - System.Data.Common.CommandTrees.DbLimitExpression.Limit\n  - System.Data.Common.CommandTrees.DbLimitExpression.WithTies\n  langs:\n  - csharp\n  name: DbLimitExpression\n  nameWithType: DbLimitExpression\n  fullName: System.Data.Common.CommandTrees.DbLimitExpression\n  type: Class\n  summary: Represents the restriction of the number of elements in the argument collection to the specified limit value.\n  remarks: A DbLimitExpression can be applied to any <xref:System.Data.Common.CommandTrees.DbExpression> with a collection result type, including <xref:System.Data.Common.CommandTrees.DbSkipExpression>. DbLimitExpression provides the equivalent of the Top operation. It does not require an ordering operation to have been performed on its input. It has two `Expression` properties, <xref:System.Data.Common.CommandTrees.DbLimitExpression.Argument%2A> and <xref:System.Data.Common.CommandTrees.DbLimitExpression.Limit%2A>, that specify the collection and the number of rows to return respectively. DbLimitExpression also has a `Boolean`<xref:System.Data.Common.CommandTrees.DbLimitExpression.WithTies%2A> property that controls whether rows equal in rank to the final row are returned. <xref:System.Data.Common.CommandTrees.DbLimitExpression.WithTies%2A> defaults to `false`.\n  syntax:\n    content: 'public sealed class DbLimitExpression : System.Data.Common.CommandTrees.DbExpression'\n  inheritance:\n  - System.Object\n  - System.Data.Common.CommandTrees.DbExpression\n  implements: []\n  inheritedMembers:\n  - System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)\n  - System.Data.Common.CommandTrees.DbExpression.ExpressionKind\n  - System.Data.Common.CommandTrees.DbExpression.FromBinary(System.Byte[])\n  - System.Data.Common.CommandTrees.DbExpression.FromBoolean(System.Nullable{System.Boolean})\n  - System.Data.Common.CommandTrees.DbExpression.FromByte(System.Nullable{System.Byte})\n  - System.Data.Common.CommandTrees.DbExpression.FromDateTime(System.Nullable{System.DateTime})\n  - System.Data.Common.CommandTrees.DbExpression.FromDateTimeOffset(System.Nullable{System.DateTimeOffset})\n  - System.Data.Common.CommandTrees.DbExpression.FromDecimal(System.Nullable{System.Decimal})\n  - System.Data.Common.CommandTrees.DbExpression.FromDouble(System.Nullable{System.Double})\n  - System.Data.Common.CommandTrees.DbExpression.FromGeography(System.Data.Spatial.DbGeography)\n  - System.Data.Common.CommandTrees.DbExpression.FromGeometry(System.Data.Spatial.DbGeometry)\n  - System.Data.Common.CommandTrees.DbExpression.FromGuid(System.Nullable{System.Guid})\n  - System.Data.Common.CommandTrees.DbExpression.FromInt16(System.Nullable{System.Int16})\n  - System.Data.Common.CommandTrees.DbExpression.FromInt32(System.Nullable{System.Int32})\n  - System.Data.Common.CommandTrees.DbExpression.FromInt64(System.Nullable{System.Int64})\n  - System.Data.Common.CommandTrees.DbExpression.FromSingle(System.Nullable{System.Single})\n  - System.Data.Common.CommandTrees.DbExpression.FromString(System.String)\n  - System.Data.Common.CommandTrees.DbExpression.GetHashCode\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Byte[])\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Data.Spatial.DbGeography)\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Data.Spatial.DbGeometry)\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Boolean})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Byte})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.DateTime})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.DateTimeOffset})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Decimal})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Double})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Guid})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int16})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int32})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int64})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Single})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.String)\n  - System.Data.Common.CommandTrees.DbExpression.ResultType\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbLimitExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)\n  id: Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)\n  parent: System.Data.Common.CommandTrees.DbLimitExpression\n  langs:\n  - csharp\n  name: Accept(DbExpressionVisitor)\n  nameWithType: DbLimitExpression.Accept(DbExpressionVisitor)\n  fullName: System.Data.Common.CommandTrees.DbLimitExpression.Accept(DbExpressionVisitor)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for expressions that do not produce a result value.\n  syntax:\n    content: public override void Accept (System.Data.Common.CommandTrees.DbExpressionVisitor visitor);\n    parameters:\n    - id: visitor\n      type: System.Data.Common.CommandTrees.DbExpressionVisitor\n      description: An instance of <xref href=\"System.Data.Common.CommandTrees.DbExpressionVisitor\"></xref>.\n  overload: System.Data.Common.CommandTrees.DbLimitExpression.Accept*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>visitor</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbLimitExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)\n  id: Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)\n  parent: System.Data.Common.CommandTrees.DbLimitExpression\n  langs:\n  - csharp\n  name: Accept(DbExpressionVisitor<TResultType>)\n  nameWithType: DbLimitExpression.Accept(DbExpressionVisitor<TResultType>)\n  fullName: System.Data.Common.CommandTrees.DbLimitExpression.Accept(DbExpressionVisitor<TResultType>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public override TResultType Accept<TResultType> (System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType> visitor);\n    parameters:\n    - id: visitor\n      type: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbLimitExpression.Accept<TResultType>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbLimitExpression.Argument\n  id: Argument\n  parent: System.Data.Common.CommandTrees.DbLimitExpression\n  langs:\n  - csharp\n  name: Argument\n  nameWithType: DbLimitExpression.Argument\n  fullName: System.Data.Common.CommandTrees.DbLimitExpression.Argument\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Gets or sets an expression that specifies the input collection.\n  syntax:\n    content: public System.Data.Common.CommandTrees.DbExpression Argument { get; }\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the input collection.\n  overload: System.Data.Common.CommandTrees.DbLimitExpression.Argument*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The expression is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The expression is not associated with the command tree of the <xref href=\"System.Data.Common.CommandTrees.DbLimitExpression\"></xref>, or its result type is not a collection type.\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbLimitExpression.Limit\n  id: Limit\n  parent: System.Data.Common.CommandTrees.DbLimitExpression\n  langs:\n  - csharp\n  name: Limit\n  nameWithType: DbLimitExpression.Limit\n  fullName: System.Data.Common.CommandTrees.DbLimitExpression.Limit\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Gets or sets an expression that specifies the limit on the number of elements returned from the input collection.\n  syntax:\n    content: public System.Data.Common.CommandTrees.DbExpression Limit { get; }\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the limit on the number of elements returned from the input collection.\n  overload: System.Data.Common.CommandTrees.DbLimitExpression.Limit*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The expression is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The expression is not associated with the command tree of the <xref href=\"System.Data.Common.CommandTrees.DbLimitExpression\"></xref>, or is not one of <xref href=\"System.Data.Common.CommandTrees.DbConstantExpression\"></xref> or <xref href=\"System.Data.Common.CommandTrees.DbParameterReferenceExpression\"></xref>, or its result type is not equal or promotable to a 64-bit integer type.\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbLimitExpression.WithTies\n  id: WithTies\n  parent: System.Data.Common.CommandTrees.DbLimitExpression\n  langs:\n  - csharp\n  name: WithTies\n  nameWithType: DbLimitExpression.WithTies\n  fullName: System.Data.Common.CommandTrees.DbLimitExpression.WithTies\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Gets whether the limit operation will include tied results. Including tied results might produce more results than specified by the <xref:System.Data.Common.CommandTrees.DbLimitExpression.Limit*> value.\n  remarks: The WithTies property controls whether rows equal in rank to the final row are returned.\n  syntax:\n    content: public bool WithTies { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the limit operation will include tied results; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Common.CommandTrees.DbLimitExpression.WithTies*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: System.Data.Common.CommandTrees.DbExpression\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Data.Common.CommandTrees.DbLimitExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)\n  parent: System.Data.Common.CommandTrees.DbLimitExpression\n  isExternal: false\n  name: Accept(DbExpressionVisitor)\n  nameWithType: DbLimitExpression.Accept(DbExpressionVisitor)\n  fullName: System.Data.Common.CommandTrees.DbLimitExpression.Accept(DbExpressionVisitor)\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionVisitor\n  nameWithType: DbExpressionVisitor\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor\n- uid: System.Data.Common.CommandTrees.DbLimitExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)\n  parent: System.Data.Common.CommandTrees.DbLimitExpression\n  isExternal: false\n  name: Accept(DbExpressionVisitor<TResultType>)\n  nameWithType: DbLimitExpression.Accept(DbExpressionVisitor<TResultType>)\n  fullName: System.Data.Common.CommandTrees.DbLimitExpression.Accept(DbExpressionVisitor<TResultType>)\n- uid: TResultType\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionVisitor<TResultType>\n  nameWithType: DbExpressionVisitor<TResultType>\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>\n- uid: System.Data.Common.CommandTrees.DbLimitExpression.Argument\n  parent: System.Data.Common.CommandTrees.DbLimitExpression\n  isExternal: false\n  name: Argument\n  nameWithType: DbLimitExpression.Argument\n  fullName: System.Data.Common.CommandTrees.DbLimitExpression.Argument\n- uid: System.Data.Common.CommandTrees.DbLimitExpression.Limit\n  parent: System.Data.Common.CommandTrees.DbLimitExpression\n  isExternal: false\n  name: Limit\n  nameWithType: DbLimitExpression.Limit\n  fullName: System.Data.Common.CommandTrees.DbLimitExpression.Limit\n- uid: System.Data.Common.CommandTrees.DbLimitExpression.WithTies\n  parent: System.Data.Common.CommandTrees.DbLimitExpression\n  isExternal: false\n  name: WithTies\n  nameWithType: DbLimitExpression.WithTies\n  fullName: System.Data.Common.CommandTrees.DbLimitExpression.WithTies\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Common.CommandTrees.DbLimitExpression.Accept*\n  parent: System.Data.Common.CommandTrees.DbLimitExpression\n  isExternal: false\n  name: Accept\n  nameWithType: DbLimitExpression.Accept\n- uid: System.Data.Common.CommandTrees.DbLimitExpression.Accept<TResultType>*\n  parent: System.Data.Common.CommandTrees.DbLimitExpression\n  isExternal: false\n  name: Accept<TResultType>\n  nameWithType: DbLimitExpression.Accept<TResultType>\n- uid: System.Data.Common.CommandTrees.DbLimitExpression.Argument*\n  parent: System.Data.Common.CommandTrees.DbLimitExpression\n  isExternal: false\n  name: Argument\n  nameWithType: DbLimitExpression.Argument\n- uid: System.Data.Common.CommandTrees.DbLimitExpression.Limit*\n  parent: System.Data.Common.CommandTrees.DbLimitExpression\n  isExternal: false\n  name: Limit\n  nameWithType: DbLimitExpression.Limit\n- uid: System.Data.Common.CommandTrees.DbLimitExpression.WithTies*\n  parent: System.Data.Common.CommandTrees.DbLimitExpression\n  isExternal: false\n  name: WithTies\n  nameWithType: DbLimitExpression.WithTies\n"}