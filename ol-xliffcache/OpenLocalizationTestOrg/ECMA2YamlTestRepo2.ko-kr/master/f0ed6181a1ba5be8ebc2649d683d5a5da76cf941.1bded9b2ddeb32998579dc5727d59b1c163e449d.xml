{"nodes":[{"pos":[1416,1564],"content":"Used by the .NET Framework infrastructure to install and configure assemblies in the COM+ catalog while maintaining a newly established transaction.","needQuote":true,"needEscape":true,"nodes":[{"content":"Used by the .NET Framework infrastructure to install and configure assemblies in the COM+ catalog while maintaining a newly established transaction.","pos":[0,148]}]},{"pos":[1577,1920],"content":"A <xref:System.EnterpriseServices.TransactionAttribute> class attribute is applied to the RegistrationHelperTx class, with a parameter of the <xref:System.EnterpriseServices.TransactionOption> field.       This type does not need to be used directly from your code. Instead, use the <xref:System.EnterpriseServices.RegistrationHelper> class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A <xref:System.EnterpriseServices.TransactionAttribute> class attribute is applied to the RegistrationHelperTx class, with a parameter of the <xref:System.EnterpriseServices.TransactionOption> field.       This type does not need to be used directly from your code. Instead, use the <xref:System.EnterpriseServices.RegistrationHelper> class.","pos":[0,341],"nodes":[{"content":"A &lt;xref:System.EnterpriseServices.TransactionAttribute&gt; class attribute is applied to the RegistrationHelperTx class, with a parameter of the &lt;xref:System.EnterpriseServices.TransactionOption&gt; field.","pos":[0,199],"source":"A <xref:System.EnterpriseServices.TransactionAttribute> class attribute is applied to the RegistrationHelperTx class, with a parameter of the <xref:System.EnterpriseServices.TransactionOption> field."},{"content":"This type does not need to be used directly from your code.","pos":[206,265]},{"content":"Instead, use the &lt;xref:System.EnterpriseServices.RegistrationHelper&gt; class.","pos":[266,341],"source":" Instead, use the <xref:System.EnterpriseServices.RegistrationHelper> class."}]}]},{"pos":[3945,4053],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.EnterpriseServices.RegistrationHelperTx\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.EnterpriseServices.RegistrationHelperTx\"></xref> class."},{"pos":[6181,6259],"content":"Installs the named assembly in the COM+ catalog using transactional semantics.","needQuote":true,"needEscape":true,"nodes":[{"content":"Installs the named assembly in the COM+ catalog using transactional semantics.","pos":[0,78]}]},{"pos":[6272,6588],"content":"The InstallAssembly method does not need to be called directly from your code. Instead, call the <xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A> method with the same parameters except object sync.       This method requires the caller to have administrative privileges on the local computer.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The InstallAssembly method does not need to be called directly from your code. Instead, call the <xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A> method with the same parameters except object sync.       This method requires the caller to have administrative privileges on the local computer.","pos":[0,314],"nodes":[{"content":"The InstallAssembly method does not need to be called directly from your code.","pos":[0,78]},{"content":"Instead, call the &lt;xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A&gt; method with the same parameters except object sync.","pos":[79,219],"source":" Instead, call the <xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A> method with the same parameters except object sync."},{"content":"This method requires the caller to have administrative privileges on the local computer.","pos":[226,314]}]}]},{"pos":[6851,6892],"content":"The file name of the assembly to install.","needQuote":true,"needEscape":true,"nodes":[{"content":"The file name of the assembly to install.","pos":[0,41]}]},{"pos":[6960,7080],"content":"Either the name of the COM+ application to install into or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Either the name of the COM+ application to install into or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[7140,7274],"content":"Either the name of the output Type Library Exporter (Tlbexp.exe) file or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Either the name of the output Type Library Exporter (Tlbexp.exe) file or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[7373,7428],"content":"A bitwise combination of the installation flags values.","needQuote":true,"needEscape":true,"nodes":[{"content":"A bitwise combination of the installation flags values.","pos":[0,55]}]},{"pos":[7489,7629],"content":"A synchronization object generated by the infrastructure that can wait until the specified assembly has been configured in the COM+ catalog.","needQuote":true,"needEscape":true,"nodes":[{"content":"A synchronization object generated by the infrastructure that can wait until the specified assembly has been configured in the COM+ catalog.","pos":[0,140]}]},{"pos":[8572,8650],"content":"Installs the named assembly in the COM+ catalog using transactional semantics.","needQuote":true,"needEscape":true,"nodes":[{"content":"Installs the named assembly in the COM+ catalog using transactional semantics.","pos":[0,78]}]},{"pos":[8663,8979],"content":"The InstallAssembly method does not need to be called directly from your code. Instead, call the <xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A> method with the same parameters except object sync.       This method requires the caller to have administrative privileges on the local computer.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The InstallAssembly method does not need to be called directly from your code. Instead, call the <xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A> method with the same parameters except object sync.       This method requires the caller to have administrative privileges on the local computer.","pos":[0,314],"nodes":[{"content":"The InstallAssembly method does not need to be called directly from your code.","pos":[0,78]},{"content":"Instead, call the &lt;xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A&gt; method with the same parameters except object sync.","pos":[79,219],"source":" Instead, call the <xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A> method with the same parameters except object sync."},{"content":"This method requires the caller to have administrative privileges on the local computer.","pos":[226,314]}]}]},{"pos":[9260,9301],"content":"The file name of the assembly to install.","needQuote":true,"needEscape":true,"nodes":[{"content":"The file name of the assembly to install.","pos":[0,41]}]},{"pos":[9369,9512],"content":"Either the name of the COM+ application to install into or a string that contains <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Either the name of the COM+ application to install into or a string that contains <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[9578,9675],"content":"Either the name of the partition or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Either the name of the partition or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[9735,9869],"content":"Either the name of the output Type Library Exporter (Tlbexp.exe) file or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Either the name of the output Type Library Exporter (Tlbexp.exe) file or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[9968,10023],"content":"A bitwise combination of the installation flags values.","needQuote":true,"needEscape":true,"nodes":[{"content":"A bitwise combination of the installation flags values.","pos":[0,55]}]},{"pos":[10084,10224],"content":"A synchronization object generated by the infrastructure that can wait until the specified assembly has been configured in the COM+ catalog.","needQuote":true,"needEscape":true,"nodes":[{"content":"A synchronization object generated by the infrastructure that can wait until the specified assembly has been configured in the COM+ catalog.","pos":[0,140]}]},{"pos":[11024,11104],"content":"Installs a specified assembly in the COM+ catalog using transactional semantics.","needQuote":true,"needEscape":true,"nodes":[{"content":"Installs a specified assembly in the COM+ catalog using transactional semantics.","pos":[0,80]}]},{"pos":[11117,11498],"content":"Under certain circumstances, the InstallAssemblyFromConfig method is called from within the .NET Framework infrastructure. It does not need to be called directly from your code. Instead, call the <xref:System.EnterpriseServices.RegistrationHelper.InstallAssemblyFromConfig%2A> method.       This method requires the caller to have administrative privileges on the local computer.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Under certain circumstances, the InstallAssemblyFromConfig method is called from within the .NET Framework infrastructure. It does not need to be called directly from your code. Instead, call the <xref:System.EnterpriseServices.RegistrationHelper.InstallAssemblyFromConfig%2A> method.       This method requires the caller to have administrative privileges on the local computer.","pos":[0,379],"nodes":[{"content":"Under certain circumstances, the InstallAssemblyFromConfig method is called from within the .NET Framework infrastructure.","pos":[0,122]},{"content":"It does not need to be called directly from your code.","pos":[123,177]},{"content":"Instead, call the &lt;xref:System.EnterpriseServices.RegistrationHelper.InstallAssemblyFromConfig%2A&gt; method.","pos":[178,284],"source":" Instead, call the <xref:System.EnterpriseServices.RegistrationHelper.InstallAssemblyFromConfig%2A> method."},{"content":"This method requires the caller to have administrative privileges on the local computer.","pos":[291,379]}]}]},{"pos":[11748,11823],"content":"Configuration information for installing an assembly into the COM+ catalog.","needQuote":true,"needEscape":true,"nodes":[{"content":"Configuration information for installing an assembly into the COM+ catalog.","pos":[0,75]}]},{"pos":[11884,12021],"content":"A synchronization object generated by the infrastructure that waits until the specified assembly has been configured in the COM+ catalog.","needQuote":true,"needEscape":true,"nodes":[{"content":"A synchronization object generated by the infrastructure that waits until the specified assembly has been configured in the COM+ catalog.","pos":[0,137]}]},{"pos":[12584,12744],"content":"Gets a value indicating whether the current context for the <bpt id=\"p1\">&lt;xref href=\"System.EnterpriseServices.RegistrationHelperTx\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class instance is transactional.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether the current context for the <xref href=\"System.EnterpriseServices.RegistrationHelperTx\"></xref> class instance is transactional."},{"pos":[12756,12923],"content":"Under certain circumstances, the IsInTransaction method is called from within the .NET Framework infrastructure. It does not need to be called directly from your code.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Under certain circumstances, the IsInTransaction method is called from within the .NET Framework infrastructure. It does not need to be called directly from your code.","pos":[0,167],"nodes":[{"content":"Under certain circumstances, the IsInTransaction method is called from within the .NET Framework infrastructure.","pos":[0,112]},{"content":"It does not need to be called directly from your code.","pos":[113,167]}]}]},{"pos":[13056,13323],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current context for the <bpt id=\"p2\">&lt;xref href=\"System.EnterpriseServices.RegistrationHelperTx\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> class instance is transactional; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current context for the <xref href=\"System.EnterpriseServices.RegistrationHelperTx\"></xref> class instance is transactional; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[14032,14109],"content":"Uninstalls an assembly from a COM+ application using transactional semantics.","needQuote":true,"needEscape":true,"nodes":[{"content":"Uninstalls an assembly from a COM+ application using transactional semantics.","pos":[0,77]}]},{"pos":[14121,14344],"content":"The UninstallAssembly method does not need to be called directly from your code. Instead, call the <xref:System.EnterpriseServices.RegistrationHelper.UninstallAssembly%2A> method with the same parameters except object sync.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The UninstallAssembly method does not need to be called directly from your code. Instead, call the <xref:System.EnterpriseServices.RegistrationHelper.UninstallAssembly%2A> method with the same parameters except object sync.","pos":[0,223],"nodes":[{"content":"The UninstallAssembly method does not need to be called directly from your code.","pos":[0,80]},{"content":"Instead, call the &lt;xref:System.EnterpriseServices.RegistrationHelper.UninstallAssembly%2A&gt; method with the same parameters except object sync.","pos":[81,223],"source":" Instead, call the <xref:System.EnterpriseServices.RegistrationHelper.UninstallAssembly%2A> method with the same parameters except object sync."}]}]},{"pos":[14530,14573],"content":"The file name of the assembly to uninstall.","needQuote":true,"needEscape":true,"nodes":[{"content":"The file name of the assembly to uninstall.","pos":[0,43]}]},{"pos":[14641,14790],"content":"Either the name of the COM+ application that contains the components in the assembly or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Either the name of the COM+ application that contains the components in the assembly or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[14851,14972],"content":"A synchronization object generated by the infrastructure that can wait until the specified assembly has been uninstalled.","needQuote":true,"needEscape":true,"nodes":[{"content":"A synchronization object generated by the infrastructure that can wait until the specified assembly has been uninstalled.","pos":[0,121]}]},{"pos":[15732,15809],"content":"Uninstalls an assembly from a COM+ application using transactional semantics.","needQuote":true,"needEscape":true,"nodes":[{"content":"Uninstalls an assembly from a COM+ application using transactional semantics.","pos":[0,77]}]},{"pos":[15821,16044],"content":"The UninstallAssembly method does not need to be called directly from your code. Instead, call the <xref:System.EnterpriseServices.RegistrationHelper.UninstallAssembly%2A> method with the same parameters except object sync.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The UninstallAssembly method does not need to be called directly from your code. Instead, call the <xref:System.EnterpriseServices.RegistrationHelper.UninstallAssembly%2A> method with the same parameters except object sync.","pos":[0,223],"nodes":[{"content":"The UninstallAssembly method does not need to be called directly from your code.","pos":[0,80]},{"content":"Instead, call the &lt;xref:System.EnterpriseServices.RegistrationHelper.UninstallAssembly%2A&gt; method with the same parameters except object sync.","pos":[81,223],"source":" Instead, call the <xref:System.EnterpriseServices.RegistrationHelper.UninstallAssembly%2A> method with the same parameters except object sync."}]}]},{"pos":[16248,16291],"content":"The file name of the assembly to uninstall.","needQuote":true,"needEscape":true,"nodes":[{"content":"The file name of the assembly to uninstall.","pos":[0,43]}]},{"pos":[16359,16508],"content":"Either the name of the COM+ application that contains the components in the assembly or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Either the name of the COM+ application that contains the components in the assembly or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[16574,16671],"content":"Either the name of the partition or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Either the name of the partition or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[16732,16853],"content":"A synchronization object generated by the infrastructure that can wait until the specified assembly has been uninstalled.","needQuote":true,"needEscape":true,"nodes":[{"content":"A synchronization object generated by the infrastructure that can wait until the specified assembly has been uninstalled.","pos":[0,121]}]},{"pos":[17665,17751],"content":"Uninstalls a specified assembly from a COM+ application using transactional semantics.","needQuote":true,"needEscape":true,"nodes":[{"content":"Uninstalls a specified assembly from a COM+ application using transactional semantics.","pos":[0,86]}]},{"pos":[17763,18051],"content":"Under certain circumstances, the UninstallAssemblyFromConfig method is called from within the .NET Framework infrastructure. It does not need to be called directly from your code. Instead, call the <xref:System.EnterpriseServices.RegistrationHelper.UninstallAssemblyFromConfig%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Under certain circumstances, the UninstallAssemblyFromConfig method is called from within the .NET Framework infrastructure. It does not need to be called directly from your code. Instead, call the <xref:System.EnterpriseServices.RegistrationHelper.UninstallAssemblyFromConfig%2A> method.","pos":[0,288],"nodes":[{"content":"Under certain circumstances, the UninstallAssemblyFromConfig method is called from within the .NET Framework infrastructure.","pos":[0,124]},{"content":"It does not need to be called directly from your code.","pos":[125,179]},{"content":"Instead, call the &lt;xref:System.EnterpriseServices.RegistrationHelper.UninstallAssemblyFromConfig%2A&gt; method.","pos":[180,288],"source":" Instead, call the <xref:System.EnterpriseServices.RegistrationHelper.UninstallAssemblyFromConfig%2A> method."}]}]},{"pos":[18302,18388],"content":"Configuration information that specifies an assembly to uninstall from an application.","needQuote":true,"needEscape":true,"nodes":[{"content":"Configuration information that specifies an assembly to uninstall from an application.","pos":[0,86]}]},{"pos":[18449,18567],"content":"A synchronization object generated by the infrastructure that waits until the specified assembly has been uninstalled.","needQuote":true,"needEscape":true,"nodes":[{"content":"A synchronization object generated by the infrastructure that waits until the specified assembly has been uninstalled.","pos":[0,118]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.EnterpriseServices.RegistrationHelperTx\n  id: RegistrationHelperTx\n  children:\n  - System.EnterpriseServices.RegistrationHelperTx.#ctor\n  - System.EnterpriseServices.RegistrationHelperTx.Activate\n  - System.EnterpriseServices.RegistrationHelperTx.Deactivate\n  - System.EnterpriseServices.RegistrationHelperTx.InstallAssembly(System.String,System.String@,System.String@,System.EnterpriseServices.InstallationFlags,System.Object)\n  - System.EnterpriseServices.RegistrationHelperTx.InstallAssembly(System.String,System.String@,System.String,System.String@,System.EnterpriseServices.InstallationFlags,System.Object)\n  - System.EnterpriseServices.RegistrationHelperTx.InstallAssemblyFromConfig(System.EnterpriseServices.RegistrationConfig@,System.Object)\n  - System.EnterpriseServices.RegistrationHelperTx.IsInTransaction\n  - System.EnterpriseServices.RegistrationHelperTx.UninstallAssembly(System.String,System.String,System.Object)\n  - System.EnterpriseServices.RegistrationHelperTx.UninstallAssembly(System.String,System.String,System.String,System.Object)\n  - System.EnterpriseServices.RegistrationHelperTx.UninstallAssemblyFromConfig(System.EnterpriseServices.RegistrationConfig@,System.Object)\n  langs:\n  - csharp\n  name: RegistrationHelperTx\n  nameWithType: RegistrationHelperTx\n  fullName: System.EnterpriseServices.RegistrationHelperTx\n  type: Class\n  summary: Used by the .NET Framework infrastructure to install and configure assemblies in the COM+ catalog while maintaining a newly established transaction.\n  remarks: \"A <xref:System.EnterpriseServices.TransactionAttribute> class attribute is applied to the RegistrationHelperTx class, with a parameter of the <xref:System.EnterpriseServices.TransactionOption> field.  \\n  \\n This type does not need to be used directly from your code. Instead, use the <xref:System.EnterpriseServices.RegistrationHelper> class.\"\n  syntax:\n    content: >-\n      [System.EnterpriseServices.Transaction(System.EnterpriseServices.TransactionOption.RequiresNew)]\n\n      [System.Obsolete(\"The RegistrationHelperTx class has been deprecated.\")]\n\n      [System.Runtime.InteropServices.Guid(\"c89ac250-e18a-4fc7-abd5-b8897b6a78a5\")]\n\n      public sealed class RegistrationHelperTx : System.EnterpriseServices.ServicedComponent\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.ContextBoundObject\n  - System.EnterpriseServices.ServicedComponent\n  implements: []\n  inheritedMembers:\n  - System.EnterpriseServices.ServicedComponent.CanBePooled\n  - System.EnterpriseServices.ServicedComponent.Construct(System.String)\n  - System.EnterpriseServices.ServicedComponent.Dispose\n  - System.EnterpriseServices.ServicedComponent.Dispose(System.Boolean)\n  - System.EnterpriseServices.ServicedComponent.DisposeObject(System.EnterpriseServices.ServicedComponent)\n  - System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchAutoDone(System.String)\n  - System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchNotAutoDone(System.String)\n  - System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IServicedComponentInfo#GetComponentInfo(System.Int32@,System.String[]@)\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  platform:\n  - net462\n- uid: System.EnterpriseServices.RegistrationHelperTx.#ctor\n  id: '#ctor'\n  parent: System.EnterpriseServices.RegistrationHelperTx\n  langs:\n  - csharp\n  name: RegistrationHelperTx()\n  nameWithType: RegistrationHelperTx.RegistrationHelperTx()\n  fullName: System.EnterpriseServices.RegistrationHelperTx.RegistrationHelperTx()\n  type: Constructor\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices\n  summary: Initializes a new instance of the <xref href=\"System.EnterpriseServices.RegistrationHelperTx\"></xref> class.\n  syntax:\n    content: public RegistrationHelperTx ();\n    parameters: []\n  overload: System.EnterpriseServices.RegistrationHelperTx.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.RegistrationHelperTx.Activate\n  id: Activate\n  parent: System.EnterpriseServices.RegistrationHelperTx\n  langs:\n  - csharp\n  name: Activate()\n  nameWithType: RegistrationHelperTx.Activate()\n  fullName: System.EnterpriseServices.RegistrationHelperTx.Activate()\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices\n  syntax:\n    content: protected override void Activate ();\n    parameters: []\n  overload: System.EnterpriseServices.RegistrationHelperTx.Activate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.RegistrationHelperTx.Deactivate\n  id: Deactivate\n  parent: System.EnterpriseServices.RegistrationHelperTx\n  langs:\n  - csharp\n  name: Deactivate()\n  nameWithType: RegistrationHelperTx.Deactivate()\n  fullName: System.EnterpriseServices.RegistrationHelperTx.Deactivate()\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices\n  syntax:\n    content: protected override void Deactivate ();\n    parameters: []\n  overload: System.EnterpriseServices.RegistrationHelperTx.Deactivate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.RegistrationHelperTx.InstallAssembly(System.String,System.String@,System.String@,System.EnterpriseServices.InstallationFlags,System.Object)\n  id: InstallAssembly(System.String,System.String@,System.String@,System.EnterpriseServices.InstallationFlags,System.Object)\n  parent: System.EnterpriseServices.RegistrationHelperTx\n  langs:\n  - csharp\n  name: InstallAssembly(String,String,String,InstallationFlags,Object)\n  nameWithType: RegistrationHelperTx.InstallAssembly(String,String,String,InstallationFlags,Object)\n  fullName: System.EnterpriseServices.RegistrationHelperTx.InstallAssembly(String,String,String,InstallationFlags,Object)\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices\n  summary: Installs the named assembly in the COM+ catalog using transactional semantics.\n  remarks: \"The InstallAssembly method does not need to be called directly from your code. Instead, call the <xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A> method with the same parameters except object sync.  \\n  \\n This method requires the caller to have administrative privileges on the local computer.\"\n  syntax:\n    content: public void InstallAssembly (string assembly, ref string application, ref string tlb, System.EnterpriseServices.InstallationFlags installFlags, object sync);\n    parameters:\n    - id: assembly\n      type: System.String\n      description: The file name of the assembly to install.\n    - id: application\n      type: System.String\n      description: Either the name of the COM+ application to install into or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    - id: tlb\n      type: System.String\n      description: Either the name of the output Type Library Exporter (Tlbexp.exe) file or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    - id: installFlags\n      type: System.EnterpriseServices.InstallationFlags\n      description: A bitwise combination of the installation flags values.\n    - id: sync\n      type: System.Object\n      description: A synchronization object generated by the infrastructure that can wait until the specified assembly has been configured in the COM+ catalog.\n  overload: System.EnterpriseServices.RegistrationHelperTx.InstallAssembly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.RegistrationHelperTx.InstallAssembly(System.String,System.String@,System.String,System.String@,System.EnterpriseServices.InstallationFlags,System.Object)\n  id: InstallAssembly(System.String,System.String@,System.String,System.String@,System.EnterpriseServices.InstallationFlags,System.Object)\n  parent: System.EnterpriseServices.RegistrationHelperTx\n  langs:\n  - csharp\n  name: InstallAssembly(String,String,String,String,InstallationFlags,Object)\n  nameWithType: RegistrationHelperTx.InstallAssembly(String,String,String,String,InstallationFlags,Object)\n  fullName: System.EnterpriseServices.RegistrationHelperTx.InstallAssembly(String,String,String,String,InstallationFlags,Object)\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices\n  summary: Installs the named assembly in the COM+ catalog using transactional semantics.\n  remarks: \"The InstallAssembly method does not need to be called directly from your code. Instead, call the <xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A> method with the same parameters except object sync.  \\n  \\n This method requires the caller to have administrative privileges on the local computer.\"\n  syntax:\n    content: public void InstallAssembly (string assembly, ref string application, string partition, ref string tlb, System.EnterpriseServices.InstallationFlags installFlags, object sync);\n    parameters:\n    - id: assembly\n      type: System.String\n      description: The file name of the assembly to install.\n    - id: application\n      type: System.String\n      description: Either the name of the COM+ application to install into or a string that contains <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    - id: partition\n      type: System.String\n      description: Either the name of the partition or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    - id: tlb\n      type: System.String\n      description: Either the name of the output Type Library Exporter (Tlbexp.exe) file or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    - id: installFlags\n      type: System.EnterpriseServices.InstallationFlags\n      description: A bitwise combination of the installation flags values.\n    - id: sync\n      type: System.Object\n      description: A synchronization object generated by the infrastructure that can wait until the specified assembly has been configured in the COM+ catalog.\n  overload: System.EnterpriseServices.RegistrationHelperTx.InstallAssembly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.RegistrationHelperTx.InstallAssemblyFromConfig(System.EnterpriseServices.RegistrationConfig@,System.Object)\n  id: InstallAssemblyFromConfig(System.EnterpriseServices.RegistrationConfig@,System.Object)\n  parent: System.EnterpriseServices.RegistrationHelperTx\n  langs:\n  - csharp\n  name: InstallAssemblyFromConfig(RegistrationConfig,Object)\n  nameWithType: RegistrationHelperTx.InstallAssemblyFromConfig(RegistrationConfig,Object)\n  fullName: System.EnterpriseServices.RegistrationHelperTx.InstallAssemblyFromConfig(RegistrationConfig,Object)\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices\n  summary: Installs a specified assembly in the COM+ catalog using transactional semantics.\n  remarks: \"Under certain circumstances, the InstallAssemblyFromConfig method is called from within the .NET Framework infrastructure. It does not need to be called directly from your code. Instead, call the <xref:System.EnterpriseServices.RegistrationHelper.InstallAssemblyFromConfig%2A> method.  \\n  \\n This method requires the caller to have administrative privileges on the local computer.\"\n  syntax:\n    content: public void InstallAssemblyFromConfig (ref System.EnterpriseServices.RegistrationConfig regConfig, object sync);\n    parameters:\n    - id: regConfig\n      type: System.EnterpriseServices.RegistrationConfig\n      description: Configuration information for installing an assembly into the COM+ catalog.\n    - id: sync\n      type: System.Object\n      description: A synchronization object generated by the infrastructure that waits until the specified assembly has been configured in the COM+ catalog.\n  overload: System.EnterpriseServices.RegistrationHelperTx.InstallAssemblyFromConfig*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.RegistrationHelperTx.IsInTransaction\n  id: IsInTransaction\n  parent: System.EnterpriseServices.RegistrationHelperTx\n  langs:\n  - csharp\n  name: IsInTransaction()\n  nameWithType: RegistrationHelperTx.IsInTransaction()\n  fullName: System.EnterpriseServices.RegistrationHelperTx.IsInTransaction()\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices\n  summary: Gets a value indicating whether the current context for the <xref href=\"System.EnterpriseServices.RegistrationHelperTx\"></xref> class instance is transactional.\n  remarks: Under certain circumstances, the IsInTransaction method is called from within the .NET Framework infrastructure. It does not need to be called directly from your code.\n  syntax:\n    content: public bool IsInTransaction ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current context for the <xref href=\"System.EnterpriseServices.RegistrationHelperTx\"></xref> class instance is transactional; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.EnterpriseServices.RegistrationHelperTx.IsInTransaction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.RegistrationHelperTx.UninstallAssembly(System.String,System.String,System.Object)\n  id: UninstallAssembly(System.String,System.String,System.Object)\n  parent: System.EnterpriseServices.RegistrationHelperTx\n  langs:\n  - csharp\n  name: UninstallAssembly(String,String,Object)\n  nameWithType: RegistrationHelperTx.UninstallAssembly(String,String,Object)\n  fullName: System.EnterpriseServices.RegistrationHelperTx.UninstallAssembly(String,String,Object)\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices\n  summary: Uninstalls an assembly from a COM+ application using transactional semantics.\n  remarks: The UninstallAssembly method does not need to be called directly from your code. Instead, call the <xref:System.EnterpriseServices.RegistrationHelper.UninstallAssembly%2A> method with the same parameters except object sync.\n  syntax:\n    content: public void UninstallAssembly (string assembly, string application, object sync);\n    parameters:\n    - id: assembly\n      type: System.String\n      description: The file name of the assembly to uninstall.\n    - id: application\n      type: System.String\n      description: Either the name of the COM+ application that contains the components in the assembly or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    - id: sync\n      type: System.Object\n      description: A synchronization object generated by the infrastructure that can wait until the specified assembly has been uninstalled.\n  overload: System.EnterpriseServices.RegistrationHelperTx.UninstallAssembly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.RegistrationHelperTx.UninstallAssembly(System.String,System.String,System.String,System.Object)\n  id: UninstallAssembly(System.String,System.String,System.String,System.Object)\n  parent: System.EnterpriseServices.RegistrationHelperTx\n  langs:\n  - csharp\n  name: UninstallAssembly(String,String,String,Object)\n  nameWithType: RegistrationHelperTx.UninstallAssembly(String,String,String,Object)\n  fullName: System.EnterpriseServices.RegistrationHelperTx.UninstallAssembly(String,String,String,Object)\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices\n  summary: Uninstalls an assembly from a COM+ application using transactional semantics.\n  remarks: The UninstallAssembly method does not need to be called directly from your code. Instead, call the <xref:System.EnterpriseServices.RegistrationHelper.UninstallAssembly%2A> method with the same parameters except object sync.\n  syntax:\n    content: public void UninstallAssembly (string assembly, string application, string partition, object sync);\n    parameters:\n    - id: assembly\n      type: System.String\n      description: The file name of the assembly to uninstall.\n    - id: application\n      type: System.String\n      description: Either the name of the COM+ application that contains the components in the assembly or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    - id: partition\n      type: System.String\n      description: Either the name of the partition or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    - id: sync\n      type: System.Object\n      description: A synchronization object generated by the infrastructure that can wait until the specified assembly has been uninstalled.\n  overload: System.EnterpriseServices.RegistrationHelperTx.UninstallAssembly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.RegistrationHelperTx.UninstallAssemblyFromConfig(System.EnterpriseServices.RegistrationConfig@,System.Object)\n  id: UninstallAssemblyFromConfig(System.EnterpriseServices.RegistrationConfig@,System.Object)\n  parent: System.EnterpriseServices.RegistrationHelperTx\n  langs:\n  - csharp\n  name: UninstallAssemblyFromConfig(RegistrationConfig,Object)\n  nameWithType: RegistrationHelperTx.UninstallAssemblyFromConfig(RegistrationConfig,Object)\n  fullName: System.EnterpriseServices.RegistrationHelperTx.UninstallAssemblyFromConfig(RegistrationConfig,Object)\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices\n  summary: Uninstalls a specified assembly from a COM+ application using transactional semantics.\n  remarks: Under certain circumstances, the UninstallAssemblyFromConfig method is called from within the .NET Framework infrastructure. It does not need to be called directly from your code. Instead, call the <xref:System.EnterpriseServices.RegistrationHelper.UninstallAssemblyFromConfig%2A> method.\n  syntax:\n    content: public void UninstallAssemblyFromConfig (ref System.EnterpriseServices.RegistrationConfig regConfig, object sync);\n    parameters:\n    - id: regConfig\n      type: System.EnterpriseServices.RegistrationConfig\n      description: Configuration information that specifies an assembly to uninstall from an application.\n    - id: sync\n      type: System.Object\n      description: A synchronization object generated by the infrastructure that waits until the specified assembly has been uninstalled.\n  overload: System.EnterpriseServices.RegistrationHelperTx.UninstallAssemblyFromConfig*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.EnterpriseServices.ServicedComponent\n  isExternal: false\n  name: System.EnterpriseServices.ServicedComponent\n- uid: System.EnterpriseServices.RegistrationHelperTx.#ctor\n  parent: System.EnterpriseServices.RegistrationHelperTx\n  isExternal: false\n  name: RegistrationHelperTx()\n  nameWithType: RegistrationHelperTx.RegistrationHelperTx()\n  fullName: System.EnterpriseServices.RegistrationHelperTx.RegistrationHelperTx()\n- uid: System.EnterpriseServices.RegistrationHelperTx.Activate\n  parent: System.EnterpriseServices.RegistrationHelperTx\n  isExternal: false\n  name: Activate()\n  nameWithType: RegistrationHelperTx.Activate()\n  fullName: System.EnterpriseServices.RegistrationHelperTx.Activate()\n- uid: System.EnterpriseServices.RegistrationHelperTx.Deactivate\n  parent: System.EnterpriseServices.RegistrationHelperTx\n  isExternal: false\n  name: Deactivate()\n  nameWithType: RegistrationHelperTx.Deactivate()\n  fullName: System.EnterpriseServices.RegistrationHelperTx.Deactivate()\n- uid: System.EnterpriseServices.RegistrationHelperTx.InstallAssembly(System.String,System.String@,System.String@,System.EnterpriseServices.InstallationFlags,System.Object)\n  parent: System.EnterpriseServices.RegistrationHelperTx\n  isExternal: false\n  name: InstallAssembly(String,String,String,InstallationFlags,Object)\n  nameWithType: RegistrationHelperTx.InstallAssembly(String,String,String,InstallationFlags,Object)\n  fullName: System.EnterpriseServices.RegistrationHelperTx.InstallAssembly(String,String,String,InstallationFlags,Object)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.EnterpriseServices.InstallationFlags\n  parent: System.EnterpriseServices\n  isExternal: false\n  name: InstallationFlags\n  nameWithType: InstallationFlags\n  fullName: System.EnterpriseServices.InstallationFlags\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.EnterpriseServices.RegistrationHelperTx.InstallAssembly(System.String,System.String@,System.String,System.String@,System.EnterpriseServices.InstallationFlags,System.Object)\n  parent: System.EnterpriseServices.RegistrationHelperTx\n  isExternal: false\n  name: InstallAssembly(String,String,String,String,InstallationFlags,Object)\n  nameWithType: RegistrationHelperTx.InstallAssembly(String,String,String,String,InstallationFlags,Object)\n  fullName: System.EnterpriseServices.RegistrationHelperTx.InstallAssembly(String,String,String,String,InstallationFlags,Object)\n- uid: System.EnterpriseServices.RegistrationHelperTx.InstallAssemblyFromConfig(System.EnterpriseServices.RegistrationConfig@,System.Object)\n  parent: System.EnterpriseServices.RegistrationHelperTx\n  isExternal: false\n  name: InstallAssemblyFromConfig(RegistrationConfig,Object)\n  nameWithType: RegistrationHelperTx.InstallAssemblyFromConfig(RegistrationConfig,Object)\n  fullName: System.EnterpriseServices.RegistrationHelperTx.InstallAssemblyFromConfig(RegistrationConfig,Object)\n- uid: System.EnterpriseServices.RegistrationConfig\n  parent: System.EnterpriseServices\n  isExternal: false\n  name: RegistrationConfig\n  nameWithType: RegistrationConfig\n  fullName: System.EnterpriseServices.RegistrationConfig\n- uid: System.EnterpriseServices.RegistrationHelperTx.IsInTransaction\n  parent: System.EnterpriseServices.RegistrationHelperTx\n  isExternal: false\n  name: IsInTransaction()\n  nameWithType: RegistrationHelperTx.IsInTransaction()\n  fullName: System.EnterpriseServices.RegistrationHelperTx.IsInTransaction()\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.EnterpriseServices.RegistrationHelperTx.UninstallAssembly(System.String,System.String,System.Object)\n  parent: System.EnterpriseServices.RegistrationHelperTx\n  isExternal: false\n  name: UninstallAssembly(String,String,Object)\n  nameWithType: RegistrationHelperTx.UninstallAssembly(String,String,Object)\n  fullName: System.EnterpriseServices.RegistrationHelperTx.UninstallAssembly(String,String,Object)\n- uid: System.EnterpriseServices.RegistrationHelperTx.UninstallAssembly(System.String,System.String,System.String,System.Object)\n  parent: System.EnterpriseServices.RegistrationHelperTx\n  isExternal: false\n  name: UninstallAssembly(String,String,String,Object)\n  nameWithType: RegistrationHelperTx.UninstallAssembly(String,String,String,Object)\n  fullName: System.EnterpriseServices.RegistrationHelperTx.UninstallAssembly(String,String,String,Object)\n- uid: System.EnterpriseServices.RegistrationHelperTx.UninstallAssemblyFromConfig(System.EnterpriseServices.RegistrationConfig@,System.Object)\n  parent: System.EnterpriseServices.RegistrationHelperTx\n  isExternal: false\n  name: UninstallAssemblyFromConfig(RegistrationConfig,Object)\n  nameWithType: RegistrationHelperTx.UninstallAssemblyFromConfig(RegistrationConfig,Object)\n  fullName: System.EnterpriseServices.RegistrationHelperTx.UninstallAssemblyFromConfig(RegistrationConfig,Object)\n- uid: System.EnterpriseServices.RegistrationHelperTx.#ctor*\n  parent: System.EnterpriseServices.RegistrationHelperTx\n  isExternal: false\n  name: RegistrationHelperTx\n  nameWithType: RegistrationHelperTx.RegistrationHelperTx\n- uid: System.EnterpriseServices.RegistrationHelperTx.Activate*\n  parent: System.EnterpriseServices.RegistrationHelperTx\n  isExternal: false\n  name: Activate\n  nameWithType: RegistrationHelperTx.Activate\n- uid: System.EnterpriseServices.RegistrationHelperTx.Deactivate*\n  parent: System.EnterpriseServices.RegistrationHelperTx\n  isExternal: false\n  name: Deactivate\n  nameWithType: RegistrationHelperTx.Deactivate\n- uid: System.EnterpriseServices.RegistrationHelperTx.InstallAssembly*\n  parent: System.EnterpriseServices.RegistrationHelperTx\n  isExternal: false\n  name: InstallAssembly\n  nameWithType: RegistrationHelperTx.InstallAssembly\n- uid: System.EnterpriseServices.RegistrationHelperTx.InstallAssemblyFromConfig*\n  parent: System.EnterpriseServices.RegistrationHelperTx\n  isExternal: false\n  name: InstallAssemblyFromConfig\n  nameWithType: RegistrationHelperTx.InstallAssemblyFromConfig\n- uid: System.EnterpriseServices.RegistrationHelperTx.IsInTransaction*\n  parent: System.EnterpriseServices.RegistrationHelperTx\n  isExternal: false\n  name: IsInTransaction\n  nameWithType: RegistrationHelperTx.IsInTransaction\n- uid: System.EnterpriseServices.RegistrationHelperTx.UninstallAssembly*\n  parent: System.EnterpriseServices.RegistrationHelperTx\n  isExternal: false\n  name: UninstallAssembly\n  nameWithType: RegistrationHelperTx.UninstallAssembly\n- uid: System.EnterpriseServices.RegistrationHelperTx.UninstallAssemblyFromConfig*\n  parent: System.EnterpriseServices.RegistrationHelperTx\n  isExternal: false\n  name: UninstallAssemblyFromConfig\n  nameWithType: RegistrationHelperTx.UninstallAssemblyFromConfig\n"}