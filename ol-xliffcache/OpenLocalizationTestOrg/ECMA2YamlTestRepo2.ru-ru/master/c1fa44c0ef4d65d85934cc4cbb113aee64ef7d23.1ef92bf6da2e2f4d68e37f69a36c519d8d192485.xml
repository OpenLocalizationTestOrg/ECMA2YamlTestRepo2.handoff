{"nodes":[{"pos":[1047,1127],"content":"Encapsulates a property of a Cryptography Next Generation (CNG) key or provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"Encapsulates a property of a Cryptography Next Generation (CNG) key or provider.","pos":[0,80]}]},{"pos":[1140,1500],"content":"This class encapsulates a property name (a string), a value (byte array), a <xref:System.Security.Cryptography.CngPropertyOptions> flag, accessor properties, and comparison and hashing functions.       This class is used with the <xref:System.Security.Cryptography.CngKey.SetProperty%2A> and <xref:System.Security.Cryptography.CngKey.GetProperty%2A> methods.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This class encapsulates a property name (a string), a value (byte array), a <xref:System.Security.Cryptography.CngPropertyOptions> flag, accessor properties, and comparison and hashing functions.       This class is used with the <xref:System.Security.Cryptography.CngKey.SetProperty%2A> and <xref:System.Security.Cryptography.CngKey.GetProperty%2A> methods.","pos":[0,358],"nodes":[{"content":"This class encapsulates a property name (a string), a value (byte array), a &lt;xref:System.Security.Cryptography.CngPropertyOptions&gt; flag, accessor properties, and comparison and hashing functions.","pos":[0,195],"source":"This class encapsulates a property name (a string), a value (byte array), a <xref:System.Security.Cryptography.CngPropertyOptions> flag, accessor properties, and comparison and hashing functions."},{"content":"This class is used with the &lt;xref:System.Security.Cryptography.CngKey.SetProperty%2A&gt; and &lt;xref:System.Security.Cryptography.CngKey.GetProperty%2A&gt; methods.","pos":[202,358],"source":"       This class is used with the <xref:System.Security.Cryptography.CngKey.SetProperty%2A> and <xref:System.Security.Cryptography.CngKey.GetProperty%2A> methods."}]}]},{"pos":[2368,2470],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CngProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.CngProperty\"></xref> class."},{"pos":[2482,2647],"content":"Properties that are stored with a specific set of <xref:System.Security.Cryptography.CngPropertyOptions> flags require the same set of flags when they are retrieved.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Properties that are stored with a specific set of &lt;xref:System.Security.Cryptography.CngPropertyOptions&gt; flags require the same set of flags when they are retrieved.","pos":[0,165],"source":"Properties that are stored with a specific set of <xref:System.Security.Cryptography.CngPropertyOptions> flags require the same set of flags when they are retrieved."}]},{"pos":[2852,2884],"content":"The property name to initialize.","needQuote":true,"needEscape":true,"nodes":[{"content":"The property name to initialize.","pos":[0,32]}]},{"pos":[2946,2979],"content":"The property value to initialize.","needQuote":true,"needEscape":true,"nodes":[{"content":"The property value to initialize.","pos":[0,33]}]},{"pos":[3077,3165],"content":"A bitwise combination of the enumeration values that specify how the property is stored.","needQuote":true,"needEscape":true,"nodes":[{"content":"A bitwise combination of the enumeration values that specify how the property is stored.","pos":[0,88]}]},{"pos":[3342,3424],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>name</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[3849,3963],"content":"Compares the specified object to the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CngProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Compares the specified object to the current <xref href=\"System.Security.Cryptography.CngProperty\"></xref> object."},{"pos":[3975,4160],"content":"<xref:System.Security.Cryptography.CngProperty> objects are considered equal if their names, values, and options are equivalent. Name comparison is performed in a case-sensitive manner.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"<xref:System.Security.Cryptography.CngProperty> objects are considered equal if their names, values, and options are equivalent. Name comparison is performed in a case-sensitive manner.","pos":[0,185],"nodes":[{"content":"&lt;xref:System.Security.Cryptography.CngProperty&gt; objects are considered equal if their names, values, and options are equivalent.","pos":[0,128],"source":"<xref:System.Security.Cryptography.CngProperty> objects are considered equal if their names, values, and options are equivalent."},{"content":"Name comparison is performed in a case-sensitive manner.","pos":[129,185]}]}]},{"pos":[4301,4410],"content":"An object to be compared to the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CngProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An object to be compared to the current <xref href=\"System.Security.Cryptography.CngProperty\"></xref> object."},{"pos":[4469,4768],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is a <bpt id=\"p3\">&lt;xref href=\"System.Security.Cryptography.CngProperty\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> object that specifies the same property as the current object; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <code>obj</code> parameter is a <xref href=\"System.Security.Cryptography.CngProperty\"></xref> object that specifies the same property as the current object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[5340,5516],"content":"Compares the specified <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CngProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to the current <bpt id=\"p2\">&lt;xref href=\"System.Security.Cryptography.CngProperty\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Compares the specified <xref href=\"System.Security.Cryptography.CngProperty\"></xref> object to the current <xref href=\"System.Security.Cryptography.CngProperty\"></xref> object."},{"pos":[5528,5713],"content":"<xref:System.Security.Cryptography.CngProperty> objects are considered equal if their names, values, and options are equivalent. Name comparison is performed in a case-sensitive manner.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"<xref:System.Security.Cryptography.CngProperty> objects are considered equal if their names, values, and options are equivalent. Name comparison is performed in a case-sensitive manner.","pos":[0,185],"nodes":[{"content":"&lt;xref:System.Security.Cryptography.CngProperty&gt; objects are considered equal if their names, values, and options are equivalent.","pos":[0,128],"source":"<xref:System.Security.Cryptography.CngProperty> objects are considered equal if their names, values, and options are equivalent."},{"content":"Name comparison is performed in a case-sensitive manner.","pos":[129,185]}]}]},{"pos":[5910,6019],"content":"An object to be compared to the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CngProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An object to be compared to the current <xref href=\"System.Security.Cryptography.CngProperty\"></xref> object."},{"pos":[6078,6301],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter represents the same property as the current object; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <code>other</code> parameter represents the same property as the current object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6781,6889],"content":"Generates a hash value for the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CngProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Generates a hash value for the current <xref href=\"System.Security.Cryptography.CngProperty\"></xref> object."},{"pos":[7024,7123],"content":"The hash value of the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CngProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The hash value of the current <xref href=\"System.Security.Cryptography.CngProperty\"></xref> object."},{"pos":[7593,7713],"content":"Gets the property value that the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CngProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object specifies.","needQuote":true,"needEscape":true,"source":"Gets the property value that the current <xref href=\"System.Security.Cryptography.CngProperty\"></xref> object specifies."},{"pos":[7840,7898],"content":"An array that represents the value stored in the property.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array that represents the value stored in the property.","pos":[0,58]}]},{"pos":[8341,8460],"content":"Gets the property name that the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CngProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object specifies.","needQuote":true,"needEscape":true,"source":"Gets the property name that the current <xref href=\"System.Security.Cryptography.CngProperty\"></xref> object specifies."},{"pos":[8569,8683],"content":"The property name that is set in the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CngProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The property name that is set in the current <xref href=\"System.Security.Cryptography.CngProperty\"></xref> object."},{"pos":[9398,9542],"content":"Determines whether two <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CngProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects specify the same property name, value, and options.","needQuote":true,"needEscape":true,"source":"Determines whether two <xref href=\"System.Security.Cryptography.CngProperty\"></xref> objects specify the same property name, value, and options."},{"pos":[9554,9739],"content":"<xref:System.Security.Cryptography.CngProperty> objects are considered equal if their names, values, and options are equivalent. Name comparison is performed in a case-sensitive manner.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"<xref:System.Security.Cryptography.CngProperty> objects are considered equal if their names, values, and options are equivalent. Name comparison is performed in a case-sensitive manner.","pos":[0,185],"nodes":[{"content":"&lt;xref:System.Security.Cryptography.CngProperty&gt; objects are considered equal if their names, values, and options are equivalent.","pos":[0,128],"source":"<xref:System.Security.Cryptography.CngProperty> objects are considered equal if their names, values, and options are equivalent."},{"content":"Name comparison is performed in a case-sensitive manner.","pos":[129,185]}]}]},{"pos":[9994,10086],"content":"An object that specifies a property of a Cryptography Next Generation (CNG) key or provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that specifies a property of a Cryptography Next Generation (CNG) key or provider.","pos":[0,92]}]},{"pos":[10175,10264],"content":"A second object, to be compared to the object that is identified by the <ph id=\"ph1\">`left`</ph> parameter.","needQuote":true,"needEscape":true,"source":"A second object, to be compared to the object that is identified by the `left` parameter."},{"pos":[10323,10504],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two objects specify the same property; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two objects specify the same property; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11236,11387],"content":"Determines whether two <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CngProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects do not specify the same property name, value, and options.","needQuote":true,"needEscape":true,"source":"Determines whether two <xref href=\"System.Security.Cryptography.CngProperty\"></xref> objects do not specify the same property name, value, and options."},{"pos":[11399,11584],"content":"<xref:System.Security.Cryptography.CngProperty> objects are considered equal if their names, values, and options are equivalent. Name comparison is performed in a case-sensitive manner.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"<xref:System.Security.Cryptography.CngProperty> objects are considered equal if their names, values, and options are equivalent. Name comparison is performed in a case-sensitive manner.","pos":[0,185],"nodes":[{"content":"&lt;xref:System.Security.Cryptography.CngProperty&gt; objects are considered equal if their names, values, and options are equivalent.","pos":[0,128],"source":"<xref:System.Security.Cryptography.CngProperty> objects are considered equal if their names, values, and options are equivalent."},{"content":"Name comparison is performed in a case-sensitive manner.","pos":[129,185]}]}]},{"pos":[11841,11933],"content":"An object that specifies a property of a Cryptography Next Generation (CNG) key or provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that specifies a property of a Cryptography Next Generation (CNG) key or provider.","pos":[0,92]}]},{"pos":[12022,12111],"content":"A second object, to be compared to the object that is identified by the <ph id=\"ph1\">`left`</ph> parameter.","needQuote":true,"needEscape":true,"source":"A second object, to be compared to the object that is identified by the `left` parameter."},{"pos":[12170,12358],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two objects do not specify the same property; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two objects do not specify the same property; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12821,12943],"content":"Gets the property options that the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CngProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object specifies.","needQuote":true,"needEscape":true,"source":"Gets the property options that the current <xref href=\"System.Security.Cryptography.CngProperty\"></xref> object specifies."},{"pos":[12955,13178],"content":"<xref:System.Security.Cryptography.CngKey> objects contain <xref:System.Security.Cryptography.CngProperty> objects, which contain the <xref:System.Security.Cryptography.CngPropertyOptions> that the property was stored with.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"&lt;xref:System.Security.Cryptography.CngKey&gt; objects contain &lt;xref:System.Security.Cryptography.CngProperty&gt; objects, which contain the &lt;xref:System.Security.Cryptography.CngPropertyOptions&gt; that the property was stored with.","pos":[0,223],"source":"<xref:System.Security.Cryptography.CngKey> objects contain <xref:System.Security.Cryptography.CngProperty> objects, which contain the <xref:System.Security.Cryptography.CngPropertyOptions> that the property was stored with."}]},{"pos":[13365,13499],"content":"An object that specifies the options that are set in the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CngProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An object that specifies the options that are set in the current <xref href=\"System.Security.Cryptography.CngProperty\"></xref> object."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.CngProperty\n  id: CngProperty\n  children:\n  - System.Security.Cryptography.CngProperty.#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)\n  - System.Security.Cryptography.CngProperty.Equals(System.Object)\n  - System.Security.Cryptography.CngProperty.Equals(System.Security.Cryptography.CngProperty)\n  - System.Security.Cryptography.CngProperty.GetHashCode\n  - System.Security.Cryptography.CngProperty.GetValue\n  - System.Security.Cryptography.CngProperty.Name\n  - System.Security.Cryptography.CngProperty.op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)\n  - System.Security.Cryptography.CngProperty.op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)\n  - System.Security.Cryptography.CngProperty.Options\n  langs:\n  - csharp\n  name: CngProperty\n  nameWithType: CngProperty\n  fullName: System.Security.Cryptography.CngProperty\n  type: Struct\n  summary: Encapsulates a property of a Cryptography Next Generation (CNG) key or provider.\n  remarks: \"This class encapsulates a property name (a string), a value (byte array), a <xref:System.Security.Cryptography.CngPropertyOptions> flag, accessor properties, and comparison and hashing functions.  \\n  \\n This class is used with the <xref:System.Security.Cryptography.CngKey.SetProperty%2A> and <xref:System.Security.Cryptography.CngKey.GetProperty%2A> methods.\"\n  syntax:\n    content: 'public struct CngProperty : IEquatable<System.Security.Cryptography.CngProperty>'\n  inheritance:\n  - System.ValueType\n  implements:\n  - System.IEquatable<System.Security.Cryptography.CngProperty>\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CngProperty.#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)\n  id: '#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)'\n  parent: System.Security.Cryptography.CngProperty\n  langs:\n  - csharp\n  name: CngProperty(String,Byte[],CngPropertyOptions)\n  nameWithType: CngProperty.CngProperty(String,Byte[],CngPropertyOptions)\n  fullName: System.Security.Cryptography.CngProperty.CngProperty(String,Byte[],CngPropertyOptions)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.CngProperty\"></xref> class.\n  remarks: Properties that are stored with a specific set of <xref:System.Security.Cryptography.CngPropertyOptions> flags require the same set of flags when they are retrieved.\n  syntax:\n    content: public CngProperty (string name, byte[] value, System.Security.Cryptography.CngPropertyOptions options);\n    parameters:\n    - id: name\n      type: System.String\n      description: The property name to initialize.\n    - id: value\n      type: System.Byte[]\n      description: The property value to initialize.\n    - id: options\n      type: System.Security.Cryptography.CngPropertyOptions\n      description: A bitwise combination of the enumeration values that specify how the property is stored.\n  overload: System.Security.Cryptography.CngProperty.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CngProperty.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Security.Cryptography.CngProperty\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: CngProperty.Equals(Object)\n  fullName: System.Security.Cryptography.CngProperty.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Compares the specified object to the current <xref href=\"System.Security.Cryptography.CngProperty\"></xref> object.\n  remarks: <xref:System.Security.Cryptography.CngProperty> objects are considered equal if their names, values, and options are equivalent. Name comparison is performed in a case-sensitive manner.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: An object to be compared to the current <xref href=\"System.Security.Cryptography.CngProperty\"></xref> object.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <code>obj</code> parameter is a <xref href=\"System.Security.Cryptography.CngProperty\"></xref> object that specifies the same property as the current object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Cryptography.CngProperty.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CngProperty.Equals(System.Security.Cryptography.CngProperty)\n  id: Equals(System.Security.Cryptography.CngProperty)\n  parent: System.Security.Cryptography.CngProperty\n  langs:\n  - csharp\n  name: Equals(CngProperty)\n  nameWithType: CngProperty.Equals(CngProperty)\n  fullName: System.Security.Cryptography.CngProperty.Equals(CngProperty)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Compares the specified <xref href=\"System.Security.Cryptography.CngProperty\"></xref> object to the current <xref href=\"System.Security.Cryptography.CngProperty\"></xref> object.\n  remarks: <xref:System.Security.Cryptography.CngProperty> objects are considered equal if their names, values, and options are equivalent. Name comparison is performed in a case-sensitive manner.\n  syntax:\n    content: public bool Equals (System.Security.Cryptography.CngProperty other);\n    parameters:\n    - id: other\n      type: System.Security.Cryptography.CngProperty\n      description: An object to be compared to the current <xref href=\"System.Security.Cryptography.CngProperty\"></xref> object.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <code>other</code> parameter represents the same property as the current object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Cryptography.CngProperty.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CngProperty.GetHashCode\n  id: GetHashCode\n  parent: System.Security.Cryptography.CngProperty\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: CngProperty.GetHashCode()\n  fullName: System.Security.Cryptography.CngProperty.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Generates a hash value for the current <xref href=\"System.Security.Cryptography.CngProperty\"></xref> object.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash value of the current <xref href=\"System.Security.Cryptography.CngProperty\"></xref> object.\n  overload: System.Security.Cryptography.CngProperty.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CngProperty.GetValue\n  id: GetValue\n  parent: System.Security.Cryptography.CngProperty\n  langs:\n  - csharp\n  name: GetValue()\n  nameWithType: CngProperty.GetValue()\n  fullName: System.Security.Cryptography.CngProperty.GetValue()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Gets the property value that the current <xref href=\"System.Security.Cryptography.CngProperty\"></xref> object specifies.\n  syntax:\n    content: public byte[] GetValue ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: An array that represents the value stored in the property.\n  overload: System.Security.Cryptography.CngProperty.GetValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CngProperty.Name\n  id: Name\n  parent: System.Security.Cryptography.CngProperty\n  langs:\n  - csharp\n  name: Name\n  nameWithType: CngProperty.Name\n  fullName: System.Security.Cryptography.CngProperty.Name\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Gets the property name that the current <xref href=\"System.Security.Cryptography.CngProperty\"></xref> object specifies.\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: The property name that is set in the current <xref href=\"System.Security.Cryptography.CngProperty\"></xref> object.\n  overload: System.Security.Cryptography.CngProperty.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CngProperty.op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)\n  id: op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)\n  parent: System.Security.Cryptography.CngProperty\n  langs:\n  - csharp\n  name: op_Equality(CngProperty,CngProperty)\n  nameWithType: CngProperty.op_Equality(CngProperty,CngProperty)\n  fullName: System.Security.Cryptography.CngProperty.op_Equality(CngProperty,CngProperty)\n  type: Operator\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Determines whether two <xref href=\"System.Security.Cryptography.CngProperty\"></xref> objects specify the same property name, value, and options.\n  remarks: <xref:System.Security.Cryptography.CngProperty> objects are considered equal if their names, values, and options are equivalent. Name comparison is performed in a case-sensitive manner.\n  syntax:\n    content: public static bool op_Equality (System.Security.Cryptography.CngProperty left, System.Security.Cryptography.CngProperty right);\n    parameters:\n    - id: left\n      type: System.Security.Cryptography.CngProperty\n      description: An object that specifies a property of a Cryptography Next Generation (CNG) key or provider.\n    - id: right\n      type: System.Security.Cryptography.CngProperty\n      description: A second object, to be compared to the object that is identified by the `left` parameter.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two objects specify the same property; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Cryptography.CngProperty.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CngProperty.op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)\n  id: op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)\n  parent: System.Security.Cryptography.CngProperty\n  langs:\n  - csharp\n  name: op_Inequality(CngProperty,CngProperty)\n  nameWithType: CngProperty.op_Inequality(CngProperty,CngProperty)\n  fullName: System.Security.Cryptography.CngProperty.op_Inequality(CngProperty,CngProperty)\n  type: Operator\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Determines whether two <xref href=\"System.Security.Cryptography.CngProperty\"></xref> objects do not specify the same property name, value, and options.\n  remarks: <xref:System.Security.Cryptography.CngProperty> objects are considered equal if their names, values, and options are equivalent. Name comparison is performed in a case-sensitive manner.\n  syntax:\n    content: public static bool op_Inequality (System.Security.Cryptography.CngProperty left, System.Security.Cryptography.CngProperty right);\n    parameters:\n    - id: left\n      type: System.Security.Cryptography.CngProperty\n      description: An object that specifies a property of a Cryptography Next Generation (CNG) key or provider.\n    - id: right\n      type: System.Security.Cryptography.CngProperty\n      description: A second object, to be compared to the object that is identified by the `left` parameter.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two objects do not specify the same property; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Cryptography.CngProperty.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CngProperty.Options\n  id: Options\n  parent: System.Security.Cryptography.CngProperty\n  langs:\n  - csharp\n  name: Options\n  nameWithType: CngProperty.Options\n  fullName: System.Security.Cryptography.CngProperty.Options\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Gets the property options that the current <xref href=\"System.Security.Cryptography.CngProperty\"></xref> object specifies.\n  remarks: <xref:System.Security.Cryptography.CngKey> objects contain <xref:System.Security.Cryptography.CngProperty> objects, which contain the <xref:System.Security.Cryptography.CngPropertyOptions> that the property was stored with.\n  syntax:\n    content: public System.Security.Cryptography.CngPropertyOptions Options { get; }\n    return:\n      type: System.Security.Cryptography.CngPropertyOptions\n      description: An object that specifies the options that are set in the current <xref href=\"System.Security.Cryptography.CngProperty\"></xref> object.\n  overload: System.Security.Cryptography.CngProperty.Options*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Security.Cryptography.CngProperty.#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)\n  parent: System.Security.Cryptography.CngProperty\n  isExternal: false\n  name: CngProperty(String,Byte[],CngPropertyOptions)\n  nameWithType: CngProperty.CngProperty(String,Byte[],CngPropertyOptions)\n  fullName: System.Security.Cryptography.CngProperty.CngProperty(String,Byte[],CngPropertyOptions)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.CngPropertyOptions\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngPropertyOptions\n  nameWithType: CngPropertyOptions\n  fullName: System.Security.Cryptography.CngPropertyOptions\n- uid: System.Security.Cryptography.CngProperty.Equals(System.Object)\n  parent: System.Security.Cryptography.CngProperty\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: CngProperty.Equals(Object)\n  fullName: System.Security.Cryptography.CngProperty.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.Cryptography.CngProperty.Equals(System.Security.Cryptography.CngProperty)\n  parent: System.Security.Cryptography.CngProperty\n  isExternal: false\n  name: Equals(CngProperty)\n  nameWithType: CngProperty.Equals(CngProperty)\n  fullName: System.Security.Cryptography.CngProperty.Equals(CngProperty)\n- uid: System.Security.Cryptography.CngProperty\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngProperty\n  nameWithType: CngProperty\n  fullName: System.Security.Cryptography.CngProperty\n- uid: System.Security.Cryptography.CngProperty.GetHashCode\n  parent: System.Security.Cryptography.CngProperty\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: CngProperty.GetHashCode()\n  fullName: System.Security.Cryptography.CngProperty.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.CngProperty.GetValue\n  parent: System.Security.Cryptography.CngProperty\n  isExternal: false\n  name: GetValue()\n  nameWithType: CngProperty.GetValue()\n  fullName: System.Security.Cryptography.CngProperty.GetValue()\n- uid: System.Security.Cryptography.CngProperty.Name\n  parent: System.Security.Cryptography.CngProperty\n  isExternal: false\n  name: Name\n  nameWithType: CngProperty.Name\n  fullName: System.Security.Cryptography.CngProperty.Name\n- uid: System.Security.Cryptography.CngProperty.op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)\n  parent: System.Security.Cryptography.CngProperty\n  isExternal: false\n  name: op_Equality(CngProperty,CngProperty)\n  nameWithType: CngProperty.op_Equality(CngProperty,CngProperty)\n  fullName: System.Security.Cryptography.CngProperty.op_Equality(CngProperty,CngProperty)\n- uid: System.Security.Cryptography.CngProperty.op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)\n  parent: System.Security.Cryptography.CngProperty\n  isExternal: false\n  name: op_Inequality(CngProperty,CngProperty)\n  nameWithType: CngProperty.op_Inequality(CngProperty,CngProperty)\n  fullName: System.Security.Cryptography.CngProperty.op_Inequality(CngProperty,CngProperty)\n- uid: System.Security.Cryptography.CngProperty.Options\n  parent: System.Security.Cryptography.CngProperty\n  isExternal: false\n  name: Options\n  nameWithType: CngProperty.Options\n  fullName: System.Security.Cryptography.CngProperty.Options\n- uid: System.Security.Cryptography.CngProperty.#ctor*\n  parent: System.Security.Cryptography.CngProperty\n  isExternal: false\n  name: CngProperty\n  nameWithType: CngProperty.CngProperty\n- uid: System.Security.Cryptography.CngProperty.Equals*\n  parent: System.Security.Cryptography.CngProperty\n  isExternal: false\n  name: Equals\n  nameWithType: CngProperty.Equals\n- uid: System.Security.Cryptography.CngProperty.GetHashCode*\n  parent: System.Security.Cryptography.CngProperty\n  isExternal: false\n  name: GetHashCode\n  nameWithType: CngProperty.GetHashCode\n- uid: System.Security.Cryptography.CngProperty.GetValue*\n  parent: System.Security.Cryptography.CngProperty\n  isExternal: false\n  name: GetValue\n  nameWithType: CngProperty.GetValue\n- uid: System.Security.Cryptography.CngProperty.Name*\n  parent: System.Security.Cryptography.CngProperty\n  isExternal: false\n  name: Name\n  nameWithType: CngProperty.Name\n- uid: System.Security.Cryptography.CngProperty.op_Equality*\n  parent: System.Security.Cryptography.CngProperty\n  isExternal: false\n  name: op_Equality\n  nameWithType: CngProperty.op_Equality\n- uid: System.Security.Cryptography.CngProperty.op_Inequality*\n  parent: System.Security.Cryptography.CngProperty\n  isExternal: false\n  name: op_Inequality\n  nameWithType: CngProperty.op_Inequality\n- uid: System.Security.Cryptography.CngProperty.Options*\n  parent: System.Security.Cryptography.CngProperty\n  isExternal: false\n  name: Options\n  nameWithType: CngProperty.Options\n"}