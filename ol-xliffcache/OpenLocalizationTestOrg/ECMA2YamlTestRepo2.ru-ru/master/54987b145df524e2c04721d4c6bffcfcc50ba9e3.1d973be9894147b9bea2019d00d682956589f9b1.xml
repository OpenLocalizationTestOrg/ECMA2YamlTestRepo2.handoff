{"nodes":[{"pos":[1400,1447],"content":"Abstract class that provides animation support.","needQuote":true,"needEscape":true,"nodes":[{"content":"Abstract class that provides animation support.","pos":[0,47]}]},{"pos":[4838,4941],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.Animatable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.Animatable\"></xref> class."},{"pos":[5798,6083],"content":"Applies an <xref href=\"System.Windows.Media.Animation.AnimationClock\"></xref> to the specified <xref href=\"System.Windows.DependencyProperty\"></xref>. If the property is already animated, the <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref> handoff behavior is used.","needQuote":true,"needEscape":true,"nodes":[{"content":"Applies an <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.AnimationClock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to the specified <bpt id=\"p2\">&lt;xref href=\"System.Windows.DependencyProperty\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,150],"source":"Applies an <xref href=\"System.Windows.Media.Animation.AnimationClock\"></xref> to the specified <xref href=\"System.Windows.DependencyProperty\"></xref>."},{"content":"If the property is already animated, the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.HandoffBehavior\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> handoff behavior is used.","pos":[151,285],"source":" If the property is already animated, the <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref> handoff behavior is used."}]},{"pos":[6095,6185],"content":"Note that using this method to removing clocks from a property does not stop those clocks.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Note that using this method to removing clocks from a property does not stop those clocks.","pos":[0,90]}]},{"pos":[6428,6452],"content":"The property to animate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The property to animate.","pos":[0,24]}]},{"pos":[6546,6755],"content":"The clock with which to animate the specified property. If `clock` is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, all animations will be removed from the specified property (but not stopped).","needQuote":true,"needEscape":true,"nodes":[{"content":"The clock with which to animate the specified property.","pos":[0,55]},{"content":"If <ph id=\"ph1\">`clock`</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, all animations will be removed from the specified property (but not stopped).","pos":[56,209],"source":" If `clock` is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, all animations will be removed from the specified property (but not stopped)."}]},{"pos":[7701,7979],"content":"Applies an <xref href=\"System.Windows.Media.Animation.AnimationClock\"></xref> to the specified <xref href=\"System.Windows.DependencyProperty\"></xref>. If the property is already animated, the specified <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref> is used.","needQuote":true,"needEscape":true,"nodes":[{"content":"Applies an <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.AnimationClock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to the specified <bpt id=\"p2\">&lt;xref href=\"System.Windows.DependencyProperty\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,150],"source":"Applies an <xref href=\"System.Windows.Media.Animation.AnimationClock\"></xref> to the specified <xref href=\"System.Windows.DependencyProperty\"></xref>."},{"content":"If the property is already animated, the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.HandoffBehavior\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is used.","pos":[151,278],"source":" If the property is already animated, the specified <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref> is used."}]},{"pos":[7992,10824],"content":"Note that using this method to remove clocks from a property does not stop those clocks.      ## Using the Compose HandoffBehavior    When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically.       To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock.      -   To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object. Specify the property being animated as the first parameter, and `null` as the second. This will remove all animation clocks from the property.      -   To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>. This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock. Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock will return `null`. Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event will not be called if the effective duration of the clock is forever.  In that case, the user will need to determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.       This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks will also be disconnected and garbage collected.       For more information about clock objects, see the [Animation and Timing System Overview](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Note that using this method to remove clocks from a property does not stop those clocks.","pos":[0,88]},{"content":"Using the Compose HandoffBehavior    When you apply a &lt;xref:System.Windows.Media.Animation.Storyboard&gt;, &lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;, or &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; to a property using the &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt; &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;, any &lt;xref:System.Windows.Media.Animation.Clock&gt; objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically.","pos":[97,643],"source":"      ## Using the Compose HandoffBehavior    When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically."},{"content":"To avoid performance issues when you apply a large number of clocks using &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;, you should remove composing clocks from the animated property after they complete.","pos":[650,861],"source":"       To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior>, you should remove composing clocks from the animated property after they complete."},{"content":"There are several ways to remove a clock.","pos":[862,903]},{"content":"-   To remove all clocks from a property, use the &lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt; or &lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt; method of the animated object.","pos":[909,1302],"source":"      -   To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object."},{"content":"Specify the property being animated as the first parameter, and <ph id=\"ph1\">`null`</ph> as the second.","pos":[1303,1388],"source":" Specify the property being animated as the first parameter, and `null` as the second."},{"content":"This will remove all animation clocks from the property.","pos":[1389,1445]},{"content":"-   To remove a specific &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; from a list of clocks, use the &lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt; property of the &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; to retrieve a &lt;xref:System.Windows.Media.Animation.ClockController&gt;, then call the &lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt; method of the &lt;xref:System.Windows.Media.Animation.ClockController&gt;.","pos":[1451,1902],"source":"      -   To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>."},{"content":"This is typically done in the &lt;xref:System.Windows.Media.Animation.Clock.Completed&gt; event handler for a clock.","pos":[1903,2013],"source":" This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock."},{"content":"Note that only root clocks can be controlled by a &lt;xref:System.Windows.Media.Animation.ClockController&gt;; the &lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt; property of a child clock will return <ph id=\"ph1\">`null`</ph>.","pos":[2014,2226],"source":" Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock will return `null`."},{"content":"Note also that the &lt;xref:System.Windows.Media.Animation.Clock.Completed&gt; event will not be called if the effective duration of the clock is forever.","pos":[2227,2375],"source":" Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event will not be called if the effective duration of the clock is forever."},{"content":"In that case, the user will need to determine when to call &lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;.","pos":[2377,2500],"source":"  In that case, the user will need to determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>."},{"content":"This is primarily an issue for animations on objects that have a long lifetime.","pos":[2507,2586]},{"content":"When an object is garbage collected, its clocks will also be disconnected and garbage collected.","pos":[2588,2684]},{"content":"For more information about clock objects, see the <bpt id=\"p1\">[</bpt>Animation and Timing System Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[2691,2819],"source":"       For more information about clock objects, see the [Animation and Timing System Overview](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[11285,11309],"content":"The property to animate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The property to animate.","pos":[0,24]}]},{"pos":[11403,11899],"content":"The clock with which to animate the specified property. If `handoffBehavior` is <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref> and `clock` is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, all animations will be removed from the specified property (but not stopped). If `handoffBehavior` is <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref> and clock is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, this method has no effect.","needQuote":true,"needEscape":true,"nodes":[{"content":"The clock with which to animate the specified property.","pos":[0,55]},{"content":"If <ph id=\"ph1\">`handoffBehavior`</ph> is <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.HandoffBehavior\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and <ph id=\"ph2\">`clock`</ph> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, all animations will be removed from the specified property (but not stopped).","pos":[56,302],"source":" If `handoffBehavior` is <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref> and `clock` is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, all animations will be removed from the specified property (but not stopped)."},{"content":"If <ph id=\"ph1\">`handoffBehavior`</ph> is <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.HandoffBehavior\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and clock is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, this method has no effect.","pos":[303,496],"source":" If `handoffBehavior` is <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref> and clock is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, this method has no effect."}]},{"pos":[12004,12130],"content":"A value that specifies how the new animation should interact with any current animations already affecting the property value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value that specifies how the new animation should interact with any current animations already affecting the property value.","pos":[0,126]}]},{"pos":[12924,13220],"content":"Applies an animation to the specified <xref href=\"System.Windows.DependencyProperty\"></xref>. The animation is started when the next frame is rendered. If the specified property is already animated, the <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref> handoff behavior is used.","needQuote":true,"needEscape":true,"nodes":[{"content":"Applies an animation to the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,93],"source":"Applies an animation to the specified <xref href=\"System.Windows.DependencyProperty\"></xref>."},{"content":"The animation is started when the next frame is rendered.","pos":[94,151]},{"content":"If the specified property is already animated, the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.HandoffBehavior\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> handoff behavior is used.","pos":[152,296],"source":" If the specified property is already animated, the <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref> handoff behavior is used."}]},{"pos":[13232,13442],"content":"If the animation has a <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the animation has a &lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt; that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered.","pos":[0,210],"source":"If the animation has a <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered."}]},{"pos":[13687,13711],"content":"The property to animate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The property to animate.","pos":[0,24]}]},{"pos":[13813,14315],"content":"The animation used to animate the specified property.       If the animation's <xref:System.Windows.Media.Animation.Timeline.BeginTime*> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, any current animations will be removed and the current value of the property will be held.       If `animation` is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, all animations will be removed from the property and the property value will revert back to its base value.","needQuote":false,"needEscape":true,"nodes":[{"content":"The animation used to animate the specified property.","pos":[0,53]},{"content":"If the animation's &lt;xref:System.Windows.Media.Animation.Timeline.BeginTime*&gt; is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, any current animations will be removed and the current value of the property will be held.","pos":[60,292],"source":"       If the animation's <xref:System.Windows.Media.Animation.Timeline.BeginTime*> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, any current animations will be removed and the current value of the property will be held."},{"content":"If <ph id=\"ph1\">`animation`</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, all animations will be removed from the property and the property value will revert back to its base value.","pos":[299,486],"source":"       If `animation` is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, all animations will be removed from the property and the property value will revert back to its base value."}]},{"pos":[15247,15536],"content":"Applies an animation to the specified <xref href=\"System.Windows.DependencyProperty\"></xref>. The animation is started when the next frame is rendered. If the specified property is already animated, the specified <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref> is used.","needQuote":true,"needEscape":true,"nodes":[{"content":"Applies an animation to the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,93],"source":"Applies an animation to the specified <xref href=\"System.Windows.DependencyProperty\"></xref>."},{"content":"The animation is started when the next frame is rendered.","pos":[94,151]},{"content":"If the specified property is already animated, the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.HandoffBehavior\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is used.","pos":[152,289],"source":" If the specified property is already animated, the specified <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref> is used."}]},{"pos":[15549,18503],"content":"If the animation has a <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered.      ## Using the Compose HandoffBehavior    When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically.       To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock.      -   To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object. Specify the property being animated as the first parameter, and `null` as the second. This will remove all animation clocks from the property.      -   To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>. This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock. Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock will return `null`. Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event will not be called if the effective duration of the clock is forever.  In that case, the user will need to determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.       This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks will also be disconnected and garbage collected.       For more information about clock objects, see the [Animation and Timing System Overview](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the animation has a &lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt; that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered.","pos":[0,210],"source":"If the animation has a <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered."},{"content":"Using the Compose HandoffBehavior    When you apply a &lt;xref:System.Windows.Media.Animation.Storyboard&gt;, &lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;, or &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; to a property using the &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt; &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;, any &lt;xref:System.Windows.Media.Animation.Clock&gt; objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically.","pos":[219,765],"source":"      ## Using the Compose HandoffBehavior    When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically."},{"content":"To avoid performance issues when you apply a large number of clocks using &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;, you should remove composing clocks from the animated property after they complete.","pos":[772,983],"source":"       To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior>, you should remove composing clocks from the animated property after they complete."},{"content":"There are several ways to remove a clock.","pos":[984,1025]},{"content":"-   To remove all clocks from a property, use the &lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt; or &lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt; method of the animated object.","pos":[1031,1424],"source":"      -   To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object."},{"content":"Specify the property being animated as the first parameter, and <ph id=\"ph1\">`null`</ph> as the second.","pos":[1425,1510],"source":" Specify the property being animated as the first parameter, and `null` as the second."},{"content":"This will remove all animation clocks from the property.","pos":[1511,1567]},{"content":"-   To remove a specific &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; from a list of clocks, use the &lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt; property of the &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; to retrieve a &lt;xref:System.Windows.Media.Animation.ClockController&gt;, then call the &lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt; method of the &lt;xref:System.Windows.Media.Animation.ClockController&gt;.","pos":[1573,2024],"source":"      -   To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>."},{"content":"This is typically done in the &lt;xref:System.Windows.Media.Animation.Clock.Completed&gt; event handler for a clock.","pos":[2025,2135],"source":" This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock."},{"content":"Note that only root clocks can be controlled by a &lt;xref:System.Windows.Media.Animation.ClockController&gt;; the &lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt; property of a child clock will return <ph id=\"ph1\">`null`</ph>.","pos":[2136,2348],"source":" Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock will return `null`."},{"content":"Note also that the &lt;xref:System.Windows.Media.Animation.Clock.Completed&gt; event will not be called if the effective duration of the clock is forever.","pos":[2349,2497],"source":" Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event will not be called if the effective duration of the clock is forever."},{"content":"In that case, the user will need to determine when to call &lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;.","pos":[2499,2622],"source":"  In that case, the user will need to determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>."},{"content":"This is primarily an issue for animations on objects that have a long lifetime.","pos":[2629,2708]},{"content":"When an object is garbage collected, its clocks will also be disconnected and garbage collected.","pos":[2710,2806]},{"content":"For more information about clock objects, see the <bpt id=\"p1\">[</bpt>Animation and Timing System Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[2813,2941],"source":"       For more information about clock objects, see the [Animation and Timing System Overview](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[19492,19516],"content":"The property to animate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The property to animate.","pos":[0,24]}]},{"pos":[19618,20610],"content":"The animation used to animate the specified property.       If `handoffBehavior` is <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref> and the animation's <xref:System.Windows.Media.Animation.Timeline.BeginTime*> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, any current animations will be removed and the current value of the property will be held.       If `handoffBehavior` is <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref> and `animation` is a <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> reference, all animations will be removed from the property and the property value will revert back to its base value.       If `handoffBehavior` is <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref>, this method will have no effect if the animation or its <xref:System.Windows.Media.Animation.Timeline.BeginTime*> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The animation used to animate the specified property.","pos":[0,53]},{"content":"If <ph id=\"ph1\">`handoffBehavior`</ph> is <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.HandoffBehavior\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and the animation's &lt;xref:System.Windows.Media.Animation.Timeline.BeginTime<bpt id=\"p2\">*</bpt>&gt; is <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, any current animations will be removed and the current value of the property will be held.       If <ph id=\"ph2\">`handoffBehavior`</ph> is <bpt id=\"p4\">&lt;xref href=\"System.Windows.Media.Animation.HandoffBehavior\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> and <ph id=\"ph3\">`animation`</ph> is a <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept> reference, all animations will be removed from the property and the property value will revert back to its base value.       If <ph id=\"ph4\">`handoffBehavior`</ph> is <bpt id=\"p6\">&lt;xref href=\"System.Windows.Media.Animation.HandoffBehavior\"&gt;</bpt><ept id=\"p6\">&lt;/xref&gt;</ept>, this method will have no effect if the animation or its &lt;xref:System.Windows.Media.Animation.Timeline.BeginTime<ept id=\"p2\">*</ept>&gt; is <bpt id=\"p7\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p7\">&lt;/xref&gt;</ept>.","pos":[60,962],"source":"       If `handoffBehavior` is <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref> and the animation's <xref:System.Windows.Media.Animation.Timeline.BeginTime*> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, any current animations will be removed and the current value of the property will be held.       If `handoffBehavior` is <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref> and `animation` is a <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> reference, all animations will be removed from the property and the property value will revert back to its base value.       If `handoffBehavior` is <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref>, this method will have no effect if the animation or its <xref:System.Windows.Media.Animation.Timeline.BeginTime*> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[20716,20842],"content":"A value that specifies how the new animation should interact with any current animations already affecting the property value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value that specifies how the new animation should interact with any current animations already affecting the property value.","pos":[0,126]}]},{"pos":[21310,21638],"content":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.Animation.Animatable\"></xref>, making deep copies of this object's values. When copying this object's dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a modifiable clone of this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.Animatable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, making deep copies of this object's values.","pos":[0,142],"source":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.Animation.Animatable\"></xref>, making deep copies of this object's values."},{"content":"When copying this object's dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","pos":[143,328]}]},{"pos":[21650,21901],"content":"The Clone method can be used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects. For convenience, this method shadows the inherited <xref:System.Windows.Freezable.Clone%2A> method to provide a strongly typed implementation.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Clone method can be used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects. For convenience, this method shadows the inherited <xref:System.Windows.Freezable.Clone%2A> method to provide a strongly typed implementation.","pos":[0,251],"nodes":[{"content":"The Clone method can be used to produce modifiable copies of frozen &lt;xref:System.Windows.Freezable&gt; objects.","pos":[0,108],"source":"The Clone method can be used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects."},{"content":"For convenience, this method shadows the inherited &lt;xref:System.Windows.Freezable.Clone%2A&gt; method to provide a strongly typed implementation.","pos":[109,251],"source":" For convenience, this method shadows the inherited <xref:System.Windows.Freezable.Clone%2A> method to provide a strongly typed implementation."}]}]},{"pos":[22088,22270],"content":"A modifiable clone of this instance. The returned clone is effectively a deep copy of the current object. The clone's <xref:System.Windows.Freezable.IsFrozen*> property is **false**.","needQuote":true,"needEscape":true,"nodes":[{"content":"A modifiable clone of this instance.","pos":[0,36]},{"content":"The returned clone is effectively a deep copy of the current object.","pos":[37,105]},{"content":"The clone's &lt;xref:System.Windows.Freezable.IsFrozen<bpt id=\"p1\">*</bpt>&gt; property is <ept id=\"p1\">*</ept><bpt id=\"p2\">*</bpt>false<ept id=\"p2\">*</ept>*.","pos":[106,182],"source":" The clone's <xref:System.Windows.Freezable.IsFrozen*> property is **false**."}]},{"pos":[22807,22951],"content":"Makes this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.Animatable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object unmodifiable or determines whether it can be made unmodifiable.","needQuote":true,"needEscape":true,"source":"Makes this <xref href=\"System.Windows.Media.Animation.Animatable\"></xref> object unmodifiable or determines whether it can be made unmodifiable."},{"pos":[22964,23381],"content":"This method will return **false** when <xref:System.Windows.Media.Animation.Animatable.HasAnimatedProperties%2A> is **true**.       Do not call this method directly (except when calling base in an implementation). This method is called internally by <xref:System.Windows.Freezable.CanFreeze%2A> (with `isChecking` equal to `true`) and  <xref:System.Windows.Freezable.Freeze%2A> (with `isChecking` equal to `false`).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method will return <bpt id=\"p1\">**</bpt>false<ept id=\"p1\">**</ept> when &lt;xref:System.Windows.Media.Animation.Animatable.HasAnimatedProperties%2A&gt; is <bpt id=\"p2\">**</bpt>true<ept id=\"p2\">**</ept>.","pos":[0,125],"source":"This method will return **false** when <xref:System.Windows.Media.Animation.Animatable.HasAnimatedProperties%2A> is **true**."},{"content":"Do not call this method directly (except when calling base in an implementation).","pos":[132,213]},{"content":"This method is called internally by &lt;xref:System.Windows.Freezable.CanFreeze%2A&gt; (with <ph id=\"ph1\">`isChecking`</ph> equal to <ph id=\"ph2\">`true`</ph>) and  &lt;xref:System.Windows.Freezable.Freeze%2A&gt; (with <ph id=\"ph3\">`isChecking`</ph> equal to <ph id=\"ph4\">`false`</ph>).","pos":[214,415],"source":" This method is called internally by <xref:System.Windows.Freezable.CanFreeze%2A> (with `isChecking` equal to `true`) and  <xref:System.Windows.Freezable.Freeze%2A> (with `isChecking` equal to `false`)."}]},{"pos":[23543,23817],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this method should simply determine whether this instance can be frozen. <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if this instance should actually freeze itself when this method is called.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this method should simply determine whether this instance can be frozen.","pos":[0,136],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this method should simply determine whether this instance can be frozen."},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this instance should actually freeze itself when this method is called.","pos":[137,274],"source":"<xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if this instance should actually freeze itself when this method is called."}]},{"pos":[23877,24751],"content":"If <code>isChecking</code> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, this method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this <xref href=\"System.Windows.Media.Animation.Animatable\"></xref> can be made unmodifiable, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it cannot be made unmodifiable.       If <code>isChecking</code> is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, this method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the if this <xref href=\"System.Windows.Media.Animation.Animatable\"></xref> is now unmodifiable, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of this object.","needQuote":false,"needEscape":true,"nodes":[{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">isChecking</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, this method returns <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if this <bpt id=\"p4\">&lt;xref href=\"System.Windows.Media.Animation.Animatable\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> can be made unmodifiable, or <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept> if it cannot be made unmodifiable.","pos":[0,370],"source":"If <code>isChecking</code> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, this method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this <xref href=\"System.Windows.Media.Animation.Animatable\"></xref> can be made unmodifiable, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it cannot be made unmodifiable."},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">isChecking</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, this method returns <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if the if this <bpt id=\"p4\">&lt;xref href=\"System.Windows.Media.Animation.Animatable\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> is now unmodifiable, or <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept> if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of this object.","pos":[377,832],"source":"       If <code>isChecking</code> is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, this method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the if this <xref href=\"System.Windows.Media.Animation.Animatable\"></xref> is now unmodifiable, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of this object."}]},{"pos":[25420,25523],"content":"Returns the non-animated value of the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the non-animated value of the specified <xref href=\"System.Windows.DependencyProperty\"></xref>."},{"pos":[25535,25668],"content":"If the specified property is not animated, this method returns the same result as <xref:System.Windows.DependencyObject.GetValue%2A>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the specified property is not animated, this method returns the same result as &lt;xref:System.Windows.DependencyObject.GetValue%2A&gt;.","pos":[0,133],"source":"If the specified property is not animated, this method returns the same result as <xref:System.Windows.DependencyObject.GetValue%2A>."}]},{"pos":[26392,26468],"content":"Identifies the property whose base (non-animated) value should be retrieved.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the property whose base (non-animated) value should be retrieved.","pos":[0,76]}]},{"pos":[26526,26603],"content":"The value that would be returned if the specified property were not animated.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value that would be returned if the specified property were not animated.","pos":[0,77]}]},{"pos":[27154,27339],"content":"Gets a value that indicates whether one or more <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.AnimationClock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects is associated with any of this object's dependency properties.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether one or more <xref href=\"System.Windows.Media.Animation.AnimationClock\"></xref> objects is associated with any of this object's dependency properties."},{"pos":[27351,27433],"content":"This property does not indicate whether this object contains animated sub-objects.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property does not indicate whether this object contains animated sub-objects.","pos":[0,82]}]},{"pos":[28478,28537],"content":"Specifies whether a dependency object should be serialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies whether a dependency object should be serialized.","pos":[0,59]}]},{"pos":[28549,28702],"content":"The <xref:System.ComponentModel.TypeDescriptor> class uses the ShouldSerializeStoredWeakReference method to determine if a property should be serialized.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.ComponentModel.TypeDescriptor&gt; class uses the ShouldSerializeStoredWeakReference method to determine if a property should be serialized.","pos":[0,153],"source":"The <xref:System.ComponentModel.TypeDescriptor> class uses the ShouldSerializeStoredWeakReference method to determine if a property should be serialized."}]},{"pos":[28918,28991],"content":"Represents an object that participates in the dependency property system.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents an object that participates in the dependency property system.","pos":[0,73]}]},{"pos":[29050,29298],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to serialize <code>target</code>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to serialize <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,169],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to serialize <code>target</code>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[170,248],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.Animation.Animatable\n  id: Animatable\n  children:\n  - System.Windows.Media.Animation.Animatable.#ctor\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.Clone\n  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)\n  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  langs:\n  - csharp\n  name: Animatable\n  nameWithType: Animatable\n  fullName: System.Windows.Media.Animation.Animatable\n  type: Class\n  summary: Abstract class that provides animation support.\n  syntax:\n    content: 'public abstract class Animatable : System.Windows.Freezable, System.Windows.Media.Animation.IAnimatable'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Freezable\n  implements:\n  - System.Windows.Media.Animation.IAnimatable\n  inheritedMembers:\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.Freezable.CanFreeze\n  - System.Windows.Freezable.Changed\n  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CloneCurrentValue\n  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CreateInstance\n  - System.Windows.Freezable.CreateInstanceCore\n  - System.Windows.Freezable.Freeze\n  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  - System.Windows.Freezable.GetAsFrozen\n  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.GetCurrentValueAsFrozen\n  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.IsFrozen\n  - System.Windows.Freezable.OnChanged\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.Freezable.ReadPreamble\n  - System.Windows.Freezable.WritePostscript\n  - System.Windows.Freezable.WritePreamble\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.Animatable.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.Animation.Animatable\n  langs:\n  - csharp\n  name: Animatable()\n  nameWithType: Animatable.Animatable()\n  fullName: System.Windows.Media.Animation.Animatable.Animatable()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.Animatable\"></xref> class.\n  syntax:\n    content: protected Animatable ();\n    parameters: []\n  overload: System.Windows.Media.Animation.Animatable.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  id: ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  parent: System.Windows.Media.Animation.Animatable\n  langs:\n  - csharp\n  name: ApplyAnimationClock(DependencyProperty,AnimationClock)\n  nameWithType: Animatable.ApplyAnimationClock(DependencyProperty,AnimationClock)\n  fullName: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(DependencyProperty,AnimationClock)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Applies an <xref href=\"System.Windows.Media.Animation.AnimationClock\"></xref> to the specified <xref href=\"System.Windows.DependencyProperty\"></xref>. If the property is already animated, the <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref> handoff behavior is used.\n  remarks: Note that using this method to removing clocks from a property does not stop those clocks.\n  syntax:\n    content: public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock);\n    parameters:\n    - id: dp\n      type: System.Windows.DependencyProperty\n      description: The property to animate.\n    - id: clock\n      type: System.Windows.Media.Animation.AnimationClock\n      description: The clock with which to animate the specified property. If `clock` is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, all animations will be removed from the specified property (but not stopped).\n  overload: System.Windows.Media.Animation.Animatable.ApplyAnimationClock*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  id: ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  parent: System.Windows.Media.Animation.Animatable\n  langs:\n  - csharp\n  name: ApplyAnimationClock(DependencyProperty,AnimationClock,HandoffBehavior)\n  nameWithType: Animatable.ApplyAnimationClock(DependencyProperty,AnimationClock,HandoffBehavior)\n  fullName: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(DependencyProperty,AnimationClock,HandoffBehavior)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Applies an <xref href=\"System.Windows.Media.Animation.AnimationClock\"></xref> to the specified <xref href=\"System.Windows.DependencyProperty\"></xref>. If the property is already animated, the specified <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref> is used.\n  remarks: \"Note that using this method to remove clocks from a property does not stop those clocks.  \\n  \\n## Using the Compose HandoffBehavior  \\n When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically.  \\n  \\n To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock.  \\n  \\n-   To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object. Specify the property being animated as the first parameter, and `null` as the second. This will remove all animation clocks from the property.  \\n  \\n-   To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>. This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock. Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock will return `null`. Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event will not be called if the effective duration of the clock is forever.  In that case, the user will need to determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.  \\n  \\n This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks will also be disconnected and garbage collected.  \\n  \\n For more information about clock objects, see the [Animation and Timing System Overview](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - The following example shows how to apply animation clocks using different <xref:System.Windows.Media.Animation.HandoffBehavior> settings.\n  syntax:\n    content: public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);\n    parameters:\n    - id: dp\n      type: System.Windows.DependencyProperty\n      description: The property to animate.\n    - id: clock\n      type: System.Windows.Media.Animation.AnimationClock\n      description: The clock with which to animate the specified property. If `handoffBehavior` is <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref> and `clock` is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, all animations will be removed from the specified property (but not stopped). If `handoffBehavior` is <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref> and clock is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, this method has no effect.\n    - id: handoffBehavior\n      type: System.Windows.Media.Animation.HandoffBehavior\n      description: A value that specifies how the new animation should interact with any current animations already affecting the property value.\n  overload: System.Windows.Media.Animation.Animatable.ApplyAnimationClock*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  id: BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  parent: System.Windows.Media.Animation.Animatable\n  langs:\n  - csharp\n  name: BeginAnimation(DependencyProperty,AnimationTimeline)\n  nameWithType: Animatable.BeginAnimation(DependencyProperty,AnimationTimeline)\n  fullName: System.Windows.Media.Animation.Animatable.BeginAnimation(DependencyProperty,AnimationTimeline)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Applies an animation to the specified <xref href=\"System.Windows.DependencyProperty\"></xref>. The animation is started when the next frame is rendered. If the specified property is already animated, the <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref> handoff behavior is used.\n  remarks: If the animation has a <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered.\n  syntax:\n    content: public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation);\n    parameters:\n    - id: dp\n      type: System.Windows.DependencyProperty\n      description: The property to animate.\n    - id: animation\n      type: System.Windows.Media.Animation.AnimationTimeline\n      description: \"The animation used to animate the specified property.  \\n  \\n If the animation's <xref:System.Windows.Media.Animation.Timeline.BeginTime*> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>, any current animations will be removed and the current value of the property will be held.  \\n  \\n If `animation` is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>, all animations will be removed from the property and the property value will revert back to its base value.\"\n  overload: System.Windows.Media.Animation.Animatable.BeginAnimation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  id: BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  parent: System.Windows.Media.Animation.Animatable\n  langs:\n  - csharp\n  name: BeginAnimation(DependencyProperty,AnimationTimeline,HandoffBehavior)\n  nameWithType: Animatable.BeginAnimation(DependencyProperty,AnimationTimeline,HandoffBehavior)\n  fullName: System.Windows.Media.Animation.Animatable.BeginAnimation(DependencyProperty,AnimationTimeline,HandoffBehavior)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Applies an animation to the specified <xref href=\"System.Windows.DependencyProperty\"></xref>. The animation is started when the next frame is rendered. If the specified property is already animated, the specified <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref> is used.\n  remarks: \"If the animation has a <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered.  \\n  \\n## Using the Compose HandoffBehavior  \\n When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically.  \\n  \\n To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock.  \\n  \\n-   To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object. Specify the property being animated as the first parameter, and `null` as the second. This will remove all animation clocks from the property.  \\n  \\n-   To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>. This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock. Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock will return `null`. Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event will not be called if the effective duration of the clock is forever.  In that case, the user will need to determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.  \\n  \\n This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks will also be disconnected and garbage collected.  \\n  \\n For more information about clock objects, see the [Animation and Timing System Overview](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following example shows how to apply animations using different <xref:System.Windows.Media.Animation.HandoffBehavior> settings.  \\n  \\n [!code-cpp[animateproperty#InteractiveAnimationExampleWholePage](~/add/codesnippet/cpp/animagionproperty_cpp/InteractiveExample.cpp#interactiveanimationexamplewholepage)]\\n [!code-cs[animateproperty#InteractiveAnimationExampleWholePage](~/add/codesnippet/csharp/animateproperty_csharp/InteractiveExample.cs#interactiveanimationexamplewholepage)]\\n [!code-vb[animateproperty#InteractiveAnimationExampleWholePage](~/add/codesnippet/visualbasic/animateproperty_vb/InteractiveExample.vb#interactiveanimationexamplewholepage)]\"\n  syntax:\n    content: public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);\n    parameters:\n    - id: dp\n      type: System.Windows.DependencyProperty\n      description: The property to animate.\n    - id: animation\n      type: System.Windows.Media.Animation.AnimationTimeline\n      description: \"The animation used to animate the specified property.  \\n  \\n If `handoffBehavior` is <xref href=\\\"System.Windows.Media.Animation.HandoffBehavior\\\"></xref> and the animation's <xref:System.Windows.Media.Animation.Timeline.BeginTime*> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>, any current animations will be removed and the current value of the property will be held.  \\n  \\n If `handoffBehavior` is <xref href=\\\"System.Windows.Media.Animation.HandoffBehavior\\\"></xref> and `animation` is a <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> reference, all animations will be removed from the property and the property value will revert back to its base value.  \\n  \\n If `handoffBehavior` is <xref href=\\\"System.Windows.Media.Animation.HandoffBehavior\\\"></xref>, this method will have no effect if the animation or its <xref:System.Windows.Media.Animation.Timeline.BeginTime*> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n    - id: handoffBehavior\n      type: System.Windows.Media.Animation.HandoffBehavior\n      description: A value that specifies how the new animation should interact with any current animations already affecting the property value.\n  overload: System.Windows.Media.Animation.Animatable.BeginAnimation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.Animatable.Clone\n  id: Clone\n  parent: System.Windows.Media.Animation.Animatable\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: Animatable.Clone()\n  fullName: System.Windows.Media.Animation.Animatable.Clone()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Creates a modifiable clone of this <xref href=\"System.Windows.Media.Animation.Animatable\"></xref>, making deep copies of this object's values. When copying this object's dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.\n  remarks: The Clone method can be used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects. For convenience, this method shadows the inherited <xref:System.Windows.Freezable.Clone%2A> method to provide a strongly typed implementation.\n  syntax:\n    content: public System.Windows.Media.Animation.Animatable Clone ();\n    parameters: []\n    return:\n      type: System.Windows.Media.Animation.Animatable\n      description: A modifiable clone of this instance. The returned clone is effectively a deep copy of the current object. The clone's <xref:System.Windows.Freezable.IsFrozen*> property is **false**.\n  overload: System.Windows.Media.Animation.Animatable.Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)\n  id: FreezeCore(System.Boolean)\n  parent: System.Windows.Media.Animation.Animatable\n  langs:\n  - csharp\n  name: FreezeCore(Boolean)\n  nameWithType: Animatable.FreezeCore(Boolean)\n  fullName: System.Windows.Media.Animation.Animatable.FreezeCore(Boolean)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Makes this <xref href=\"System.Windows.Media.Animation.Animatable\"></xref> object unmodifiable or determines whether it can be made unmodifiable.\n  remarks: \"This method will return **false** when <xref:System.Windows.Media.Animation.Animatable.HasAnimatedProperties%2A> is **true**.  \\n  \\n Do not call this method directly (except when calling base in an implementation). This method is called internally by <xref:System.Windows.Freezable.CanFreeze%2A> (with `isChecking` equal to `true`) and  <xref:System.Windows.Freezable.Freeze%2A> (with `isChecking` equal to `false`).\"\n  syntax:\n    content: protected override bool FreezeCore (bool isChecking);\n    parameters:\n    - id: isChecking\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this method should simply determine whether this instance can be frozen. <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if this instance should actually freeze itself when this method is called.\n    return:\n      type: System.Boolean\n      description: \"If <code>isChecking</code> is <xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref>, this method returns <xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref> if this <xref href=\\\"System.Windows.Media.Animation.Animatable\\\"></xref> can be made unmodifiable, or <xref uid=\\\"langword_csharp_false\\\" name=\\\"false\\\" href=\\\"\\\"></xref> if it cannot be made unmodifiable.  \\n  \\n If <code>isChecking</code> is <xref uid=\\\"langword_csharp_false\\\" name=\\\"false\\\" href=\\\"\\\"></xref>, this method returns <xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref> if the if this <xref href=\\\"System.Windows.Media.Animation.Animatable\\\"></xref> is now unmodifiable, or <xref uid=\\\"langword_csharp_false\\\" name=\\\"false\\\" href=\\\"\\\"></xref> if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of this object.\"\n  overload: System.Windows.Media.Animation.Animatable.FreezeCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  id: GetAnimationBaseValue(System.Windows.DependencyProperty)\n  parent: System.Windows.Media.Animation.Animatable\n  langs:\n  - csharp\n  name: GetAnimationBaseValue(DependencyProperty)\n  nameWithType: Animatable.GetAnimationBaseValue(DependencyProperty)\n  fullName: System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(DependencyProperty)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Returns the non-animated value of the specified <xref href=\"System.Windows.DependencyProperty\"></xref>.\n  remarks: If the specified property is not animated, this method returns the same result as <xref:System.Windows.DependencyObject.GetValue%2A>.\n  example:\n  - \"In the following example, the non-animated values of animated properties are retrieved and displayed.  \\n  \\n [!code-cs[timingbehaviors_procedural_snip#GetAnimationBaseValueExampleWholePage](~/add/codesnippet/csharp/TimingBehavior_csharp/GetAnimationBaseValueExample.cs#getanimationbasevalueexamplewholepage)]\\n [!code-vb[timingbehaviors_procedural_snip#GetAnimationBaseValueExampleWholePage](~/add/codesnippet/visualbasic/timingbehavior_vb/getanimationbasevalueexample.vb#getanimationbasevalueexamplewholepage)]\"\n  syntax:\n    content: public object GetAnimationBaseValue (System.Windows.DependencyProperty dp);\n    parameters:\n    - id: dp\n      type: System.Windows.DependencyProperty\n      description: Identifies the property whose base (non-animated) value should be retrieved.\n    return:\n      type: System.Object\n      description: The value that would be returned if the specified property were not animated.\n  overload: System.Windows.Media.Animation.Animatable.GetAnimationBaseValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  id: HasAnimatedProperties\n  parent: System.Windows.Media.Animation.Animatable\n  langs:\n  - csharp\n  name: HasAnimatedProperties\n  nameWithType: Animatable.HasAnimatedProperties\n  fullName: System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Gets a value that indicates whether one or more <xref href=\"System.Windows.Media.Animation.AnimationClock\"></xref> objects is associated with any of this object's dependency properties.\n  remarks: This property does not indicate whether this object contains animated sub-objects.\n  syntax:\n    content: public bool HasAnimatedProperties { get; }\n    return:\n      type: System.Boolean\n      description: '**true** if one or more <xref href=\"System.Windows.Media.Animation.AnimationClock\"></xref> objects is associated with any of this object''s dependency properties; otherwise, **false**.'\n  overload: System.Windows.Media.Animation.Animatable.HasAnimatedProperties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  id: ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  parent: System.Windows.Media.Animation.Animatable\n  langs:\n  - csharp\n  name: ShouldSerializeStoredWeakReference(DependencyObject)\n  nameWithType: Animatable.ShouldSerializeStoredWeakReference(DependencyObject)\n  fullName: System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(DependencyObject)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Specifies whether a dependency object should be serialized.\n  remarks: The <xref:System.ComponentModel.TypeDescriptor> class uses the ShouldSerializeStoredWeakReference method to determine if a property should be serialized.\n  syntax:\n    content: public static bool ShouldSerializeStoredWeakReference (System.Windows.DependencyObject target);\n    parameters:\n    - id: target\n      type: System.Windows.DependencyObject\n      description: Represents an object that participates in the dependency property system.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to serialize <code>target</code>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Freezable\n  isExternal: false\n  name: System.Windows.Freezable\n- uid: System.Windows.Media.Animation.Animatable.#ctor\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: Animatable()\n  nameWithType: Animatable.Animatable()\n  fullName: System.Windows.Media.Animation.Animatable.Animatable()\n- uid: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ApplyAnimationClock(DependencyProperty,AnimationClock)\n  nameWithType: Animatable.ApplyAnimationClock(DependencyProperty,AnimationClock)\n  fullName: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(DependencyProperty,AnimationClock)\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Media.Animation.AnimationClock\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: AnimationClock\n  nameWithType: AnimationClock\n  fullName: System.Windows.Media.Animation.AnimationClock\n- uid: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ApplyAnimationClock(DependencyProperty,AnimationClock,HandoffBehavior)\n  nameWithType: Animatable.ApplyAnimationClock(DependencyProperty,AnimationClock,HandoffBehavior)\n  fullName: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(DependencyProperty,AnimationClock,HandoffBehavior)\n- uid: System.Windows.Media.Animation.HandoffBehavior\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: HandoffBehavior\n  nameWithType: HandoffBehavior\n  fullName: System.Windows.Media.Animation.HandoffBehavior\n- uid: System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: BeginAnimation(DependencyProperty,AnimationTimeline)\n  nameWithType: Animatable.BeginAnimation(DependencyProperty,AnimationTimeline)\n  fullName: System.Windows.Media.Animation.Animatable.BeginAnimation(DependencyProperty,AnimationTimeline)\n- uid: System.Windows.Media.Animation.AnimationTimeline\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: AnimationTimeline\n  nameWithType: AnimationTimeline\n  fullName: System.Windows.Media.Animation.AnimationTimeline\n- uid: System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: BeginAnimation(DependencyProperty,AnimationTimeline,HandoffBehavior)\n  nameWithType: Animatable.BeginAnimation(DependencyProperty,AnimationTimeline,HandoffBehavior)\n  fullName: System.Windows.Media.Animation.Animatable.BeginAnimation(DependencyProperty,AnimationTimeline,HandoffBehavior)\n- uid: System.Windows.Media.Animation.Animatable.Clone\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: Clone()\n  nameWithType: Animatable.Clone()\n  fullName: System.Windows.Media.Animation.Animatable.Clone()\n- uid: System.Windows.Media.Animation.Animatable\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: Animatable\n  nameWithType: Animatable\n  fullName: System.Windows.Media.Animation.Animatable\n- uid: System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: FreezeCore(Boolean)\n  nameWithType: Animatable.FreezeCore(Boolean)\n  fullName: System.Windows.Media.Animation.Animatable.FreezeCore(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: GetAnimationBaseValue(DependencyProperty)\n  nameWithType: Animatable.GetAnimationBaseValue(DependencyProperty)\n  fullName: System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(DependencyProperty)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: HasAnimatedProperties\n  nameWithType: Animatable.HasAnimatedProperties\n  fullName: System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n- uid: System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ShouldSerializeStoredWeakReference(DependencyObject)\n  nameWithType: Animatable.ShouldSerializeStoredWeakReference(DependencyObject)\n  fullName: System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(DependencyObject)\n- uid: System.Windows.DependencyObject\n  parent: System.Windows\n  isExternal: false\n  name: DependencyObject\n  nameWithType: DependencyObject\n  fullName: System.Windows.DependencyObject\n- uid: System.Windows.Media.Animation.Animatable.#ctor*\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: Animatable\n  nameWithType: Animatable.Animatable\n- uid: System.Windows.Media.Animation.Animatable.ApplyAnimationClock*\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ApplyAnimationClock\n  nameWithType: Animatable.ApplyAnimationClock\n- uid: System.Windows.Media.Animation.Animatable.BeginAnimation*\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: BeginAnimation\n  nameWithType: Animatable.BeginAnimation\n- uid: System.Windows.Media.Animation.Animatable.Clone*\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: Clone\n  nameWithType: Animatable.Clone\n- uid: System.Windows.Media.Animation.Animatable.FreezeCore*\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: FreezeCore\n  nameWithType: Animatable.FreezeCore\n- uid: System.Windows.Media.Animation.Animatable.GetAnimationBaseValue*\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: GetAnimationBaseValue\n  nameWithType: Animatable.GetAnimationBaseValue\n- uid: System.Windows.Media.Animation.Animatable.HasAnimatedProperties*\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: HasAnimatedProperties\n  nameWithType: Animatable.HasAnimatedProperties\n- uid: System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference*\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ShouldSerializeStoredWeakReference\n  nameWithType: Animatable.ShouldSerializeStoredWeakReference\n"}