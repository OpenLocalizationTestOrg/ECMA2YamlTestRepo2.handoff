<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4c04b341308ea15e47bf2e860371c3815324366e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Resources.ResourceWriter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7d78da4ed5b62e626f9afe860a2abc555a980618</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3763fba3ef4977382e00f546fb7947fee233cd31</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Writes resources in the system-default format to an output file or an output stream.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>ResourceWriter provides a default implementation of the &lt;xref:System.Resources.IResourceWriter&gt; interface.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>It enables you to programmatically create a binary resource (.resources) file.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Resources are specified as name and value pairs using the &lt;xref:System.Resources.ResourceWriter.AddResource%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Resource names are case-sensitive when used for lookups, but to more easily support authoring tools and help eliminate bugs, ResourceWriter will not allow a .resources file to have names that vary only by case.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ResourceWriter class enables you to create string, object, and binary resources.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Binary resources can be written to the resource file as a byte array or a stream.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  This type implements the &lt;xref:System.IDisposable&gt; interface.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>To dispose of the type directly, call its &lt;xref:System.IDisposable.Dispose%2A&gt; method in a <ph id="ph1">`try`</ph><ph id="ph2">/</ph><ph id="ph3">`catch`</ph> block.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the “Using an Object that Implements IDisposable” section in the &lt;xref:System.IDisposable&gt; interface topic.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a resources file, create a ResourceWriter with a unique file name, call &lt;xref:System.Resources.ResourceWriter.AddResource%2A&gt; at least once, call &lt;xref:System.Resources.ResourceWriter.Generate%2A&gt; to write the resources file to disk, and then call &lt;xref:System.Resources.ResourceWriter.Close%2A&gt; to close the file.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling &lt;xref:System.Resources.ResourceWriter.Close%2A&gt; will implicitly call &lt;xref:System.Resources.ResourceWriter.Generate%2A&gt; if you do not explicitly call &lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The resources will not necessarily be written in the same order they were added.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve resources from a binary .resources file created by the ResourceWriter class, you can use the &lt;xref:System.Resources.ResourceManager&gt; class, which lets you retrieve named resources, or the &lt;xref:System.Resources.ResourceReader&gt; class, which lets you enumerate all the resources in the file.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that writes the resources to the provided stream.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The output stream.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">stream</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not writable.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">stream</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that writes the resources to the specified file.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The output file name.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileName</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Adds a named resource specified as a byte array to the list of resources to be written.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The resource is not written until &lt;xref:System.Resources.ResourceWriter.Generate%2A&gt; is called.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can retrieve the resources written by the AddResource method by calling the &lt;xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName&gt; method.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The name of the resource.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Value of the resource as an 8-bit unsigned integer array.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> (or a name that varies only by capitalization) has already been added to this <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has been closed and its hash table is unavailable.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Adds a named resource specified as a stream to the list of resources to be written.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify any stream that supports the &lt;xref:System.IO.Stream.Length%2A?displayProperty=fullName&gt; property for <ph id="ph1">`value`</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can retrieve the resources written by the AddResource method by calling the &lt;xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName&gt; method.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The name of the resource to add.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The value of the resource to add.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The resource must support the <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream.Length%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> (or a name that varies only by capitalization) has already been added to this <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>-or-       The stream does not support the <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream.Length%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has been closed.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Adds a named resource specified as an object to the list of resources to be written.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`value`</ph> must be serializable.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>The resource is not written until the &lt;xref:System.Resources.ResourceWriter.Generate%2A&gt; method is called.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can retrieve the resources written by the AddResource method by calling the &lt;xref:System.Resources.ResourceManager.GetObject%2A?displayProperty=fullName&gt; method.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The name of the resource.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The value of the resource.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> (or a name that varies only by capitalization) has already been added to this <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has been closed and its hash table is unavailable.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Adds a string resource to the list of resources to be written.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>The resource is not written until &lt;xref:System.Resources.ResourceWriter.Generate%2A&gt; is called.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can retrieve the resources written by the AddResource method by calling the &lt;xref:System.Resources.ResourceManager.GetString%2A?displayProperty=fullName&gt; method.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The name of the resource.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The value of the resource.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> (or a name that varies only by capitalization) has already been added to this ResourceWriter.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has been closed and its hash table is unavailable.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Adds a named resource specified as a stream to the list of resources to be written, and specifies whether the stream should be closed after the &lt;xref:System.Resources.ResourceWriter.Generate*&gt; method is called.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify any stream that supports the &lt;xref:System.IO.Stream.Length%2A?displayProperty=fullName&gt; property for <ph id="ph1">`value`</ph>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can retrieve the resources written by the AddResource method by calling the &lt;xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName&gt; method.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The name of the resource to add.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The value of the resource to add.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The resource must support the <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream.Length%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to close the stream after the &lt;xref:System.Resources.ResourceWriter.Generate*&gt; method is called; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> (or a name that varies only by capitalization) has already been added to this <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>-or-       The stream does not support the <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream.Length%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has been closed.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Adds a unit of data as a resource to the list of resources to be written.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the AddResourceData method to add a resource in binary form (that is, as an array of bytes) to the list of resources to be written.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must specify the name of the resource, the type name of the data contained in the resource, and the binary representation of the data itself.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>After you have added each resource you require, use the &lt;xref:System.Resources.ResourceWriter.Generate%2A&gt; method to write the list of resources to the resources file or stream that was specified in the &lt;xref:System.Resources.ResourceWriter.%23ctor%2A&gt; constructor.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`typeName`</ph> is a string that represents the data type of the resource.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be any of the following values:      -   The string representation of a <ph id="ph1">`ResourceTypeCode`</ph> enumeration member that indicates the data type of the resource.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`ResourceTypeCode`</ph> is a private enumeration that is used by  to indicate that a special binary format is used to store one of 19 common data types.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>These include the .NET Framework primitive data types (&lt;xref:System.Boolean&gt;, &lt;xref:System.Byte&gt;, &lt;xref:System.Char&gt;, &lt;xref:System.Decimal&gt;, &lt;xref:System.Double&gt;, &lt;xref:System.Int16&gt;, &lt;xref:System.Int32&gt;, &lt;xref:System.Int64&gt;, &lt;xref:System.Single&gt;, &lt;xref:System.SByte&gt;, &lt;xref:System.UInt16&gt;, &lt;xref:System.UInt32&gt;, &lt;xref:System.UInt64&gt;), as well as &lt;xref:System.String&gt;, &lt;xref:System.DateTime&gt;, and &lt;xref:System.TimeSpan&gt;.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, the <ph id="ph1">`ResourceTypeCode`</ph> enumeration includes the values shown in the following table.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>|<ph id="ph1">`ResourceTypeCode`</ph> value|Description|       |------------------------------|-----------------|       |<ph id="ph2">`ResourceTypeCode.ByteArray`</ph>|The data is a byte array.|       |<ph id="ph3">`ResourceTypeCode.Null`</ph>|The data is a null reference.|       |<ph id="ph4">`ResourceTypeCode.Stream`</ph>|The data is stored in a stream.|      -   A string that contains the fully qualified name of the type whose binary data is assigned to the <ph id="ph5">`serializedData`</ph> argument (for example, <ph id="ph6">`System.String`</ph>).</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, for types that are not part of the .NET Framework class library, the string includes the name, version, culture, and public key of the assembly that contains the type.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the following string indicates that the serialized data represents an instance of the <ph id="ph1">`Person`</ph> type in the <ph id="ph2">`Extensions`</ph> namespace, which is found in version 1.0 of an assembly named Utility that has no public key and no designated culture.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Extensions.Person, Utility, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null`</ph>       A parallel method for reading resource data written with the AddResourceData method is &lt;xref:System.Resources.ResourceReader.GetResourceData%2A?displayProperty=fullName&gt;.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>A name that identifies the resource that contains the added data.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The type name of the added data.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>For more information, see the Remarks section.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>A byte array that contains the binary representation of the added data.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;typeName&lt;/code&gt;</ph>, or <ph id="ph3">&lt;code&gt;serializedData&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> (or a name that varies only by capitalization) has already been added to this <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The current <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is not initialized.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The probable cause is that the <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is closed.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Saves the resources to the output stream and then closes it.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt; is called implicitly by Close, if required.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>An I/O error has occurred.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>An error has occurred during serialization of the object.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Allows users to close the resource file or stream, explicitly releasing resources.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>The implementation of this method is the same as &lt;xref:System.Resources.ResourceWriter.Close%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>An I/O error has occurred.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>An error has occurred during serialization of the object.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Saves all resources to the output stream in the system default format.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Generate method is called implicitly by the &lt;xref:System.Resources.ResourceWriter.Close%2A&gt; method if it is not called by your application code.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>Generate can only be called once, after all calls to &lt;xref:System.Resources.ResourceWriter.AddResource%2A&gt; and &lt;xref:System.Resources.ResourceWriter.AddResourceData%2A&gt; have been made.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an exception occurs while writing the resources, the output stream will be closed to prevent writing invalid information.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>Generate does not close the output stream in normal cases.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless you are combining extra data with your .resources file or need access to the stream afterwards, you should call &lt;xref:System.Resources.ResourceWriter.Close%2A&gt; after calling Generate, or simply call &lt;xref:System.Resources.ResourceWriter.Close%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>An error occurred during serialization of the object.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has been closed and its hash table is unavailable.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Gets or sets a delegate that enables resource assemblies to be written that target versions of the .NET Framework prior to the <ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph> by using qualified assembly names.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[vs_dev10_long](~/add/includes/vs-dev10-long-md.md)]</ph> and MSBuild set this property if you target an earlier version of the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The type that is encapsulated by the delegate.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>