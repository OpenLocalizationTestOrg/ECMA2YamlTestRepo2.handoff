{"nodes":[{"pos":[571,694],"content":"Gathers naming information from the context property and determines whether the new context is ok for the context property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gathers naming information from the context property and determines whether the new context is ok for the context property.","pos":[0,123]}]},{"pos":[706,1005],"content":"The IContextProperty interface is exposed by the property contributed to a context by an attribute. By default, it is also implemented by the <xref:System.Runtime.Remoting.Contexts.ContextAttribute> base class, from which <xref:System.Runtime.Remoting.Contexts.Context> attribute classes can extend.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The IContextProperty interface is exposed by the property contributed to a context by an attribute. By default, it is also implemented by the <xref:System.Runtime.Remoting.Contexts.ContextAttribute> base class, from which <xref:System.Runtime.Remoting.Contexts.Context> attribute classes can extend.","pos":[0,299],"nodes":[{"content":"The IContextProperty interface is exposed by the property contributed to a context by an attribute.","pos":[0,99]},{"content":"By default, it is also implemented by the &lt;xref:System.Runtime.Remoting.Contexts.ContextAttribute&gt; base class, from which &lt;xref:System.Runtime.Remoting.Contexts.Context&gt; attribute classes can extend.","pos":[100,299],"source":" By default, it is also implemented by the <xref:System.Runtime.Remoting.Contexts.ContextAttribute> base class, from which <xref:System.Runtime.Remoting.Contexts.Context> attribute classes can extend."}]}]},{"pos":[1660,1694],"content":"Called when the context is frozen.","needQuote":true,"needEscape":true,"nodes":[{"content":"Called when the context is frozen.","pos":[0,34]}]},{"pos":[1706,1775],"content":"Context properties cannot be added after the context has been frozen.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Context properties cannot be added after the context has been frozen.","pos":[0,69]}]},{"pos":[1982,2004],"content":"The context to freeze.","needQuote":true,"needEscape":true,"nodes":[{"content":"The context to freeze.","pos":[0,22]}]},{"pos":[2646,2745],"content":"Returns a Boolean value indicating whether the context property is compatible with the new context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a Boolean value indicating whether the context property is compatible with the new context.","pos":[0,99]}]},{"pos":[2757,3047],"content":"Once all the context properties have been added to the new context, they are all queried as to whether they are okay in the new context. The context property could look at the other context properties from `newCtx` and determine whether it is compatible with these other context properties.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Once all the context properties have been added to the new context, they are all queried as to whether they are okay in the new context.","pos":[0,136]},{"content":"The context property could look at the other context properties from <ph id=\"ph1\">`newCtx`</ph> and determine whether it is compatible with these other context properties.","pos":[137,290],"source":" The context property could look at the other context properties from `newCtx` and determine whether it is compatible with these other context properties."}]},{"pos":[3254,3370],"content":"The new context in which the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.Contexts.ContextProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> has been created.","needQuote":true,"needEscape":true,"source":"The new context in which the <xref href=\"System.Runtime.Remoting.Contexts.ContextProperty\"></xref> has been created."},{"pos":[3429,3656],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the context property can coexist with the other context properties in the given context; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the context property can coexist with the other context properties in the given context; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[4147,4221],"content":"Gets the name of the property under which it will be added to the context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the property under which it will be added to the context.","pos":[0,74]}]},{"pos":[4330,4355],"content":"The name of the property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the property.","pos":[0,25]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.Contexts.IContextProperty\n  id: IContextProperty\n  children:\n  - System.Runtime.Remoting.Contexts.IContextProperty.Freeze(System.Runtime.Remoting.Contexts.Context)\n  - System.Runtime.Remoting.Contexts.IContextProperty.IsNewContextOK(System.Runtime.Remoting.Contexts.Context)\n  - System.Runtime.Remoting.Contexts.IContextProperty.Name\n  langs:\n  - csharp\n  name: IContextProperty\n  nameWithType: IContextProperty\n  fullName: System.Runtime.Remoting.Contexts.IContextProperty\n  type: Interface\n  summary: Gathers naming information from the context property and determines whether the new context is ok for the context property.\n  remarks: The IContextProperty interface is exposed by the property contributed to a context by an attribute. By default, it is also implemented by the <xref:System.Runtime.Remoting.Contexts.ContextAttribute> base class, from which <xref:System.Runtime.Remoting.Contexts.Context> attribute classes can extend.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface IContextProperty\n  implements: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Contexts.IContextProperty.Freeze(System.Runtime.Remoting.Contexts.Context)\n  id: Freeze(System.Runtime.Remoting.Contexts.Context)\n  parent: System.Runtime.Remoting.Contexts.IContextProperty\n  langs:\n  - csharp\n  name: Freeze(Context)\n  nameWithType: IContextProperty.Freeze(Context)\n  fullName: System.Runtime.Remoting.Contexts.IContextProperty.Freeze(Context)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Contexts\n  summary: Called when the context is frozen.\n  remarks: Context properties cannot be added after the context has been frozen.\n  syntax:\n    content: public void Freeze (System.Runtime.Remoting.Contexts.Context newContext);\n    parameters:\n    - id: newContext\n      type: System.Runtime.Remoting.Contexts.Context\n      description: The context to freeze.\n  overload: System.Runtime.Remoting.Contexts.IContextProperty.Freeze*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Contexts.IContextProperty.IsNewContextOK(System.Runtime.Remoting.Contexts.Context)\n  id: IsNewContextOK(System.Runtime.Remoting.Contexts.Context)\n  parent: System.Runtime.Remoting.Contexts.IContextProperty\n  langs:\n  - csharp\n  name: IsNewContextOK(Context)\n  nameWithType: IContextProperty.IsNewContextOK(Context)\n  fullName: System.Runtime.Remoting.Contexts.IContextProperty.IsNewContextOK(Context)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Contexts\n  summary: Returns a Boolean value indicating whether the context property is compatible with the new context.\n  remarks: Once all the context properties have been added to the new context, they are all queried as to whether they are okay in the new context. The context property could look at the other context properties from `newCtx` and determine whether it is compatible with these other context properties.\n  syntax:\n    content: public bool IsNewContextOK (System.Runtime.Remoting.Contexts.Context newCtx);\n    parameters:\n    - id: newCtx\n      type: System.Runtime.Remoting.Contexts.Context\n      description: The new context in which the <xref href=\"System.Runtime.Remoting.Contexts.ContextProperty\"></xref> has been created.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the context property can coexist with the other context properties in the given context; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.Remoting.Contexts.IContextProperty.IsNewContextOK*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Contexts.IContextProperty.Name\n  id: Name\n  parent: System.Runtime.Remoting.Contexts.IContextProperty\n  langs:\n  - csharp\n  name: Name\n  nameWithType: IContextProperty.Name\n  fullName: System.Runtime.Remoting.Contexts.IContextProperty.Name\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Contexts\n  summary: Gets the name of the property under which it will be added to the context.\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: The name of the property.\n  overload: System.Runtime.Remoting.Contexts.IContextProperty.Name*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Runtime.Remoting.Contexts.IContextProperty.Freeze(System.Runtime.Remoting.Contexts.Context)\n  parent: System.Runtime.Remoting.Contexts.IContextProperty\n  isExternal: false\n  name: Freeze(Context)\n  nameWithType: IContextProperty.Freeze(Context)\n  fullName: System.Runtime.Remoting.Contexts.IContextProperty.Freeze(Context)\n- uid: System.Runtime.Remoting.Contexts.Context\n  parent: System.Runtime.Remoting.Contexts\n  isExternal: false\n  name: Context\n  nameWithType: Context\n  fullName: System.Runtime.Remoting.Contexts.Context\n- uid: System.Runtime.Remoting.Contexts.IContextProperty.IsNewContextOK(System.Runtime.Remoting.Contexts.Context)\n  parent: System.Runtime.Remoting.Contexts.IContextProperty\n  isExternal: false\n  name: IsNewContextOK(Context)\n  nameWithType: IContextProperty.IsNewContextOK(Context)\n  fullName: System.Runtime.Remoting.Contexts.IContextProperty.IsNewContextOK(Context)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.Remoting.Contexts.IContextProperty.Name\n  parent: System.Runtime.Remoting.Contexts.IContextProperty\n  isExternal: false\n  name: Name\n  nameWithType: IContextProperty.Name\n  fullName: System.Runtime.Remoting.Contexts.IContextProperty.Name\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.Remoting.Contexts.IContextProperty.Freeze*\n  parent: System.Runtime.Remoting.Contexts.IContextProperty\n  isExternal: false\n  name: Freeze\n  nameWithType: IContextProperty.Freeze\n- uid: System.Runtime.Remoting.Contexts.IContextProperty.IsNewContextOK*\n  parent: System.Runtime.Remoting.Contexts.IContextProperty\n  isExternal: false\n  name: IsNewContextOK\n  nameWithType: IContextProperty.IsNewContextOK\n- uid: System.Runtime.Remoting.Contexts.IContextProperty.Name*\n  parent: System.Runtime.Remoting.Contexts.IContextProperty\n  isExternal: false\n  name: Name\n  nameWithType: IContextProperty.Name\n"}