{"nodes":[{"pos":[3772,3860],"content":"Contains helper methods for using the MEF attributed programming model with composition.","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains helper methods for using the MEF attributed programming model with composition.","pos":[0,88]}]},{"pos":[5025,5037],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5095,5107],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5211,5223],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6426,6438],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6507,6519],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6577,6589],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6693,6705],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7504,7615],"content":"Creates a composable part from the specified attributed object, and adds it to the specified composition batch.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a composable part from the specified attributed object, and adds it to the specified composition batch.","pos":[0,111]}]},{"pos":[7939,7959],"content":"The batch to add to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The batch to add to.","pos":[0,20]}]},{"pos":[8030,8048],"content":"The object to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to add.","pos":[0,18]}]},{"pos":[8152,8165],"content":"The new part.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new part.","pos":[0,13]}]},{"pos":[9291,9303],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9361,9373],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10585,10597],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10666,10678],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10736,10748],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11606,11724],"content":"Creates composable parts from an array of attributed objects and composes them in the specified composition container.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates composable parts from an array of attributed objects and composes them in the specified composition container.","pos":[0,118]}]},{"pos":[12017,12069],"content":"The composition container to perform composition in.","needQuote":true,"needEscape":true,"nodes":[{"content":"The composition container to perform composition in.","pos":[0,52]}]},{"pos":[12143,12185],"content":"An array of attributed objects to compose.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of attributed objects to compose.","pos":[0,42]}]},{"pos":[12821,12884],"content":"Creates a composable part from the specified attributed object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a composable part from the specified attributed object.","pos":[0,63]}]},{"pos":[13104,13126],"content":"The attributed object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The attributed object.","pos":[0,22]}]},{"pos":[13230,13247],"content":"The created part.","needQuote":true,"needEscape":true,"nodes":[{"content":"The created part.","pos":[0,17]}]},{"pos":[14096,14196],"content":"Creates a composable part from the specified attributed object, using the specified part definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a composable part from the specified attributed object, using the specified part definition.","pos":[0,100]}]},{"pos":[14558,14589],"content":"The definition of the new part.","needQuote":true,"needEscape":true,"nodes":[{"content":"The definition of the new part.","pos":[0,31]}]},{"pos":[14660,14682],"content":"The attributed object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The attributed object.","pos":[0,22]}]},{"pos":[14786,14803],"content":"The created part.","needQuote":true,"needEscape":true,"nodes":[{"content":"The created part.","pos":[0,17]}]},{"pos":[15563,15666],"content":"Creates a composable part from the specified attributed object, using the specified reflection context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a composable part from the specified attributed object, using the specified reflection context.","pos":[0,103]}]},{"pos":[15941,15963],"content":"The attributed object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The attributed object.","pos":[0,22]}]},{"pos":[16059,16095],"content":"The reflection context for the part.","needQuote":true,"needEscape":true,"nodes":[{"content":"The reflection context for the part.","pos":[0,36]}]},{"pos":[16199,16216],"content":"The created part.","needQuote":true,"needEscape":true,"nodes":[{"content":"The created part.","pos":[0,17]}]},{"pos":[16415,16510],"content":"<ph id=\"ph1\">&lt;code&gt;reflectionContext&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>reflectionContext</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[17275,17336],"content":"Creates a part definition with the specified type and origin.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a part definition with the specified type and origin.","pos":[0,61]}]},{"pos":[17625,17652],"content":"The type of the definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the definition.","pos":[0,27]}]},{"pos":[17766,17795],"content":"The origin of the definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"The origin of the definition.","pos":[0,29]}]},{"pos":[17909,17933],"content":"The new part definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new part definition.","pos":[0,24]}]},{"pos":[18861,18922],"content":"Creates a part definition with the specified type and origin.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a part definition with the specified type and origin.","pos":[0,61]}]},{"pos":[19238,19265],"content":"The type of the definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the definition.","pos":[0,27]}]},{"pos":[19379,19408],"content":"The origin of the definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"The origin of the definition.","pos":[0,29]}]},{"pos":[19486,19562],"content":"A value indicating whether or not the new definition should be discoverable.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value indicating whether or not the new definition should be discoverable.","pos":[0,76]}]},{"pos":[19676,19700],"content":"The new part definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new part definition.","pos":[0,24]}]},{"pos":[20536,20654],"content":"Returns a value that indicates whether the specified part contains an export that matches the specified contract type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the specified part contains an export that matches the specified contract type.","pos":[0,118]}]},{"pos":[20939,20958],"content":"The part to search.","needQuote":true,"needEscape":true,"nodes":[{"content":"The part to search.","pos":[0,19]}]},{"pos":[21025,21043],"content":"The contract type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The contract type.","pos":[0,18]}]},{"pos":[21102,21328],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">part</ph><ept id=\"p2\">&lt;/code&gt;</ept> contains an export definition that matches <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">contractType</ph><ept id=\"p3\">&lt;/code&gt;</ept>; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>part</code> contains an export definition that matches <code>contractType</code>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[22375,22387],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22446,22458],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23107,23161],"content":"Gets a canonical contract name for the specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a canonical contract name for the specified type.","pos":[0,54]}]},{"pos":[23309,23325],"content":"The type to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type to use.","pos":[0,16]}]},{"pos":[23383,23431],"content":"A contract name created from the specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"A contract name created from the specified type.","pos":[0,48]}]},{"pos":[24540,24552],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24610,24622],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25343,25395],"content":"Gets the unique identifier for the specified method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the unique identifier for the specified method.","pos":[0,52]}]},{"pos":[25588,25610],"content":"The method to examine.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method to examine.","pos":[0,22]}]},{"pos":[25668,25705],"content":"The unique identifier for the method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The unique identifier for the method.","pos":[0,37]}]},{"pos":[26359,26409],"content":"Gets the unique identifier for the specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the unique identifier for the specified type.","pos":[0,50]}]},{"pos":[26557,26577],"content":"The type to examine.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type to examine.","pos":[0,20]}]},{"pos":[26635,26670],"content":"The unique identifier for the type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The unique identifier for the type.","pos":[0,35]}]},{"pos":[27501,27619],"content":"Returns a value that indicates whether the specified part contains an import that matches the specified contract type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the specified part contains an import that matches the specified contract type.","pos":[0,118]}]},{"pos":[27904,27923],"content":"The part to search.","needQuote":true,"needEscape":true,"nodes":[{"content":"The part to search.","pos":[0,19]}]},{"pos":[27990,28008],"content":"The contract type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The contract type.","pos":[0,18]}]},{"pos":[28067,28293],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">part</ph><ept id=\"p2\">&lt;/code&gt;</ept> contains an import definition that matches <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">contractType</ph><ept id=\"p3\">&lt;/code&gt;</ept>; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>part</code> contains an import definition that matches <code>contractType</code>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[29296,29437],"content":"Returns a value that indicates whether the specified part contains an import that matches the specified contract type and import cardinality.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the specified part contains an import that matches the specified contract type and import cardinality.","pos":[0,141]}]},{"pos":[29804,29823],"content":"The part to search.","needQuote":true,"needEscape":true,"nodes":[{"content":"The part to search.","pos":[0,19]}]},{"pos":[29890,29908],"content":"The contract type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The contract type.","pos":[0,18]}]},{"pos":[30031,30054],"content":"The import cardinality.","needQuote":true,"needEscape":true,"nodes":[{"content":"The import cardinality.","pos":[0,23]}]},{"pos":[30113,30374],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">part</ph><ept id=\"p2\">&lt;/code&gt;</ept> contains an import definition that matches <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">contractType</ph><ept id=\"p3\">&lt;/code&gt;</ept> and <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph3\">importCardinality</ph><ept id=\"p4\">&lt;/code&gt;</ept>; otherwise, <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>part</code> contains an import definition that matches <code>contractType</code> and <code>importCardinality</code>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[31421,31433],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[31492,31504],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32816,32828],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32951,32963],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33022,33034],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33878,33978],"content":"Composes the specified part by using the specified composition service, with recomposition disabled.","needQuote":true,"needEscape":true,"nodes":[{"content":"Composes the specified part by using the specified composition service, with recomposition disabled.","pos":[0,100]}]},{"pos":[33990,34136],"content":"Unlike ordinary composition, parts composed with this method are not guaranteed to remain valid if the catalog behind<ph id=\"ph1\">`compositionService`</ph> changes.","needQuote":true,"needEscape":true,"extradata":"MT","source":"Unlike ordinary composition, parts composed with this method are not guaranteed to remain valid if the catalog behind`compositionService` changes."},{"pos":[34487,34518],"content":"The composition service to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The composition service to use.","pos":[0,31]}]},{"pos":[34589,34609],"content":"The part to compose.","needQuote":true,"needEscape":true,"nodes":[{"content":"The part to compose.","pos":[0,20]}]},{"pos":[34713,34731],"content":"The composed part.","needQuote":true,"needEscape":true,"nodes":[{"content":"The composed part.","pos":[0,18]}]},{"pos":[35709,35852],"content":"Composes the specified part by using the specified composition service, with recomposition disabled and using the specified reflection context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Composes the specified part by using the specified composition service, with recomposition disabled and using the specified reflection context.","pos":[0,143]}]},{"pos":[36258,36289],"content":"The composition service to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The composition service to use.","pos":[0,31]}]},{"pos":[36360,36380],"content":"The part to compose.","needQuote":true,"needEscape":true,"nodes":[{"content":"The part to compose.","pos":[0,20]}]},{"pos":[36476,36512],"content":"The reflection context for the part.","needQuote":true,"needEscape":true,"nodes":[{"content":"The reflection context for the part.","pos":[0,36]}]},{"pos":[36616,36634],"content":"The composed part.","needQuote":true,"needEscape":true,"nodes":[{"content":"The composed part.","pos":[0,18]}]},{"pos":[36841,36936],"content":"<ph id=\"ph1\">&lt;code&gt;reflectionContext&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>reflectionContext</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Composition.AttributedModelServices\n  id: AttributedModelServices\n  children:\n  - System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch@,``0)\n  - System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch@,System.String,``0)\n  - System.ComponentModel.Composition.AttributedModelServices.AddPart(System.ComponentModel.Composition.Hosting.CompositionBatch@,System.Object)\n  - System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer@,``0)\n  - System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer@,System.String,``0)\n  - System.ComponentModel.Composition.AttributedModelServices.ComposeParts(System.ComponentModel.Composition.Hosting.CompositionContainer@,System.Object[])\n  - System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.Object)\n  - System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Object)\n  - System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.Object,System.Reflection.ReflectionContext)\n  - System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  - System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement,System.Boolean)\n  - System.ComponentModel.Composition.AttributedModelServices.Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.Type)\n  - System.ComponentModel.Composition.AttributedModelServices.Exports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@)\n  - System.ComponentModel.Composition.AttributedModelServices.GetContractName(System.Type)\n  - System.ComponentModel.Composition.AttributedModelServices.GetMetadataView``1(System.Collections.Generic.IDictionary{System.String,System.Object})\n  - System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Reflection.MethodInfo)\n  - System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)\n  - System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.Type)\n  - System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.Type,System.ComponentModel.Composition.Primitives.ImportCardinality)\n  - System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@)\n  - System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.ComponentModel.Composition.Primitives.ImportCardinality)\n  - System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService@,System.Object)\n  - System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService@,System.Object,System.Reflection.ReflectionContext)\n  langs:\n  - csharp\n  name: AttributedModelServices\n  nameWithType: AttributedModelServices\n  fullName: System.ComponentModel.Composition.AttributedModelServices\n  type: Class\n  summary: Contains helper methods for using the MEF attributed programming model with composition.\n  syntax:\n    content: public static class AttributedModelServices\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch@,``0)\n  id: AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch@,``0)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: AddExportedValue(CompositionBatch,T)\n  nameWithType: AttributedModelServices.AddExportedValue(CompositionBatch,T)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.AddExportedValue(CompositionBatch,T)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  syntax:\n    content: public static System.ComponentModel.Composition.Primitives.ComposablePart AddExportedValue<T> (this System.ComponentModel.Composition.Hosting.CompositionBatch batch, T exportedValue);\n    parameters:\n    - id: batch\n      type: System.ComponentModel.Composition.Hosting.CompositionBatch\n      description: To be added.\n    - id: exportedValue\n      type: T\n      description: To be added.\n    return:\n      type: System.ComponentModel.Composition.Primitives.ComposablePart\n      description: To be added.\n  overload: System.ComponentModel.Composition.AttributedModelServices.AddExportedValue<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch@,System.String,``0)\n  id: AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch@,System.String,``0)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: AddExportedValue(CompositionBatch,String,T)\n  nameWithType: AttributedModelServices.AddExportedValue(CompositionBatch,String,T)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.AddExportedValue(CompositionBatch,String,T)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  syntax:\n    content: public static System.ComponentModel.Composition.Primitives.ComposablePart AddExportedValue<T> (this System.ComponentModel.Composition.Hosting.CompositionBatch batch, string contractName, T exportedValue);\n    parameters:\n    - id: batch\n      type: System.ComponentModel.Composition.Hosting.CompositionBatch\n      description: To be added.\n    - id: contractName\n      type: System.String\n      description: To be added.\n    - id: exportedValue\n      type: T\n      description: To be added.\n    return:\n      type: System.ComponentModel.Composition.Primitives.ComposablePart\n      description: To be added.\n  overload: System.ComponentModel.Composition.AttributedModelServices.AddExportedValue<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.AttributedModelServices.AddPart(System.ComponentModel.Composition.Hosting.CompositionBatch@,System.Object)\n  id: AddPart(System.ComponentModel.Composition.Hosting.CompositionBatch@,System.Object)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: AddPart(CompositionBatch,Object)\n  nameWithType: AttributedModelServices.AddPart(CompositionBatch,Object)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.AddPart(CompositionBatch,Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Creates a composable part from the specified attributed object, and adds it to the specified composition batch.\n  syntax:\n    content: public static System.ComponentModel.Composition.Primitives.ComposablePart AddPart (this System.ComponentModel.Composition.Hosting.CompositionBatch batch, object attributedPart);\n    parameters:\n    - id: batch\n      type: System.ComponentModel.Composition.Hosting.CompositionBatch\n      description: The batch to add to.\n    - id: attributedPart\n      type: System.Object\n      description: The object to add.\n    return:\n      type: System.ComponentModel.Composition.Primitives.ComposablePart\n      description: The new part.\n  overload: System.ComponentModel.Composition.AttributedModelServices.AddPart*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer@,``0)\n  id: ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer@,``0)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: ComposeExportedValue(CompositionContainer,T)\n  nameWithType: AttributedModelServices.ComposeExportedValue(CompositionContainer,T)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue(CompositionContainer,T)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  syntax:\n    content: public static void ComposeExportedValue<T> (this System.ComponentModel.Composition.Hosting.CompositionContainer container, T exportedValue);\n    parameters:\n    - id: container\n      type: System.ComponentModel.Composition.Hosting.CompositionContainer\n      description: To be added.\n    - id: exportedValue\n      type: T\n      description: To be added.\n  overload: System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer@,System.String,``0)\n  id: ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer@,System.String,``0)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: ComposeExportedValue(CompositionContainer,String,T)\n  nameWithType: AttributedModelServices.ComposeExportedValue(CompositionContainer,String,T)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue(CompositionContainer,String,T)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  syntax:\n    content: public static void ComposeExportedValue<T> (this System.ComponentModel.Composition.Hosting.CompositionContainer container, string contractName, T exportedValue);\n    parameters:\n    - id: container\n      type: System.ComponentModel.Composition.Hosting.CompositionContainer\n      description: To be added.\n    - id: contractName\n      type: System.String\n      description: To be added.\n    - id: exportedValue\n      type: T\n      description: To be added.\n  overload: System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.AttributedModelServices.ComposeParts(System.ComponentModel.Composition.Hosting.CompositionContainer@,System.Object[])\n  id: ComposeParts(System.ComponentModel.Composition.Hosting.CompositionContainer@,System.Object[])\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: ComposeParts(CompositionContainer,Object[])\n  nameWithType: AttributedModelServices.ComposeParts(CompositionContainer,Object[])\n  fullName: System.ComponentModel.Composition.AttributedModelServices.ComposeParts(CompositionContainer,Object[])\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Creates composable parts from an array of attributed objects and composes them in the specified composition container.\n  syntax:\n    content: public static void ComposeParts (this System.ComponentModel.Composition.Hosting.CompositionContainer container, object[] attributedParts);\n    parameters:\n    - id: container\n      type: System.ComponentModel.Composition.Hosting.CompositionContainer\n      description: The composition container to perform composition in.\n    - id: attributedParts\n      type: System.Object[]\n      description: An array of attributed objects to compose.\n  overload: System.ComponentModel.Composition.AttributedModelServices.ComposeParts*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.Object)\n  id: CreatePart(System.Object)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: CreatePart(Object)\n  nameWithType: AttributedModelServices.CreatePart(Object)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.CreatePart(Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Creates a composable part from the specified attributed object.\n  syntax:\n    content: public static System.ComponentModel.Composition.Primitives.ComposablePart CreatePart (object attributedPart);\n    parameters:\n    - id: attributedPart\n      type: System.Object\n      description: The attributed object.\n    return:\n      type: System.ComponentModel.Composition.Primitives.ComposablePart\n      description: The created part.\n  overload: System.ComponentModel.Composition.AttributedModelServices.CreatePart*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Object)\n  id: CreatePart(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Object)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: CreatePart(ComposablePartDefinition,Object)\n  nameWithType: AttributedModelServices.CreatePart(ComposablePartDefinition,Object)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.CreatePart(ComposablePartDefinition,Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Creates a composable part from the specified attributed object, using the specified part definition.\n  syntax:\n    content: public static System.ComponentModel.Composition.Primitives.ComposablePart CreatePart (System.ComponentModel.Composition.Primitives.ComposablePartDefinition partDefinition, object attributedPart);\n    parameters:\n    - id: partDefinition\n      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n      description: The definition of the new part.\n    - id: attributedPart\n      type: System.Object\n      description: The attributed object.\n    return:\n      type: System.ComponentModel.Composition.Primitives.ComposablePart\n      description: The created part.\n  overload: System.ComponentModel.Composition.AttributedModelServices.CreatePart*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.Object,System.Reflection.ReflectionContext)\n  id: CreatePart(System.Object,System.Reflection.ReflectionContext)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: CreatePart(Object,ReflectionContext)\n  nameWithType: AttributedModelServices.CreatePart(Object,ReflectionContext)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.CreatePart(Object,ReflectionContext)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Creates a composable part from the specified attributed object, using the specified reflection context.\n  syntax:\n    content: public static System.ComponentModel.Composition.Primitives.ComposablePart CreatePart (object attributedPart, System.Reflection.ReflectionContext reflectionContext);\n    parameters:\n    - id: attributedPart\n      type: System.Object\n      description: The attributed object.\n    - id: reflectionContext\n      type: System.Reflection.ReflectionContext\n      description: The reflection context for the part.\n    return:\n      type: System.ComponentModel.Composition.Primitives.ComposablePart\n      description: The created part.\n  overload: System.ComponentModel.Composition.AttributedModelServices.CreatePart*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>reflectionContext</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  id: CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: CreatePartDefinition(Type,ICompositionElement)\n  nameWithType: AttributedModelServices.CreatePartDefinition(Type,ICompositionElement)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(Type,ICompositionElement)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Creates a part definition with the specified type and origin.\n  syntax:\n    content: public static System.ComponentModel.Composition.Primitives.ComposablePartDefinition CreatePartDefinition (Type type, System.ComponentModel.Composition.Primitives.ICompositionElement origin);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type of the definition.\n    - id: origin\n      type: System.ComponentModel.Composition.Primitives.ICompositionElement\n      description: The origin of the definition.\n    return:\n      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n      description: The new part definition.\n  overload: System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement,System.Boolean)\n  id: CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement,System.Boolean)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: CreatePartDefinition(Type,ICompositionElement,Boolean)\n  nameWithType: AttributedModelServices.CreatePartDefinition(Type,ICompositionElement,Boolean)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(Type,ICompositionElement,Boolean)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Creates a part definition with the specified type and origin.\n  syntax:\n    content: public static System.ComponentModel.Composition.Primitives.ComposablePartDefinition CreatePartDefinition (Type type, System.ComponentModel.Composition.Primitives.ICompositionElement origin, bool ensureIsDiscoverable);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type of the definition.\n    - id: origin\n      type: System.ComponentModel.Composition.Primitives.ICompositionElement\n      description: The origin of the definition.\n    - id: ensureIsDiscoverable\n      type: System.Boolean\n      description: A value indicating whether or not the new definition should be discoverable.\n    return:\n      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n      description: The new part definition.\n  overload: System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.AttributedModelServices.Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.Type)\n  id: Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.Type)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: Exports(ComposablePartDefinition,Type)\n  nameWithType: AttributedModelServices.Exports(ComposablePartDefinition,Type)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.Exports(ComposablePartDefinition,Type)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Returns a value that indicates whether the specified part contains an export that matches the specified contract type.\n  syntax:\n    content: public static bool Exports (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, Type contractType);\n    parameters:\n    - id: part\n      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n      description: The part to search.\n    - id: contractType\n      type: System.Type\n      description: The contract type.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>part</code> contains an export definition that matches <code>contractType</code>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.Composition.AttributedModelServices.Exports*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.AttributedModelServices.Exports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@)\n  id: Exports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: Exports(ComposablePartDefinition)\n  nameWithType: AttributedModelServices.Exports(ComposablePartDefinition)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.Exports(ComposablePartDefinition)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  syntax:\n    content: public static bool Exports<T> (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part);\n    parameters:\n    - id: part\n      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ComponentModel.Composition.AttributedModelServices.Exports<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.AttributedModelServices.GetContractName(System.Type)\n  id: GetContractName(System.Type)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: GetContractName(Type)\n  nameWithType: AttributedModelServices.GetContractName(Type)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.GetContractName(Type)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Gets a canonical contract name for the specified type.\n  syntax:\n    content: public static string GetContractName (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type to use.\n    return:\n      type: System.String\n      description: A contract name created from the specified type.\n  overload: System.ComponentModel.Composition.AttributedModelServices.GetContractName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.AttributedModelServices.GetMetadataView``1(System.Collections.Generic.IDictionary{System.String,System.Object})\n  id: GetMetadataView``1(System.Collections.Generic.IDictionary{System.String,System.Object})\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: GetMetadataView(IDictionary<String,Object>)\n  nameWithType: AttributedModelServices.GetMetadataView(IDictionary<String,Object>)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.GetMetadataView(IDictionary<String,Object>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  syntax:\n    content: public static TMetadataView GetMetadataView<TMetadataView> (System.Collections.Generic.IDictionary<string,object> metadata);\n    parameters:\n    - id: metadata\n      type: System.Collections.Generic.IDictionary{System.String,System.Object}\n      description: To be added.\n    return:\n      type: TMetadataView\n      description: To be added.\n  overload: System.ComponentModel.Composition.AttributedModelServices.GetMetadataView<TMetadataView>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Reflection.MethodInfo)\n  id: GetTypeIdentity(System.Reflection.MethodInfo)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: GetTypeIdentity(MethodInfo)\n  nameWithType: AttributedModelServices.GetTypeIdentity(MethodInfo)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(MethodInfo)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Gets the unique identifier for the specified method.\n  syntax:\n    content: public static string GetTypeIdentity (System.Reflection.MethodInfo method);\n    parameters:\n    - id: method\n      type: System.Reflection.MethodInfo\n      description: The method to examine.\n    return:\n      type: System.String\n      description: The unique identifier for the method.\n  overload: System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)\n  id: GetTypeIdentity(System.Type)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: GetTypeIdentity(Type)\n  nameWithType: AttributedModelServices.GetTypeIdentity(Type)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(Type)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Gets the unique identifier for the specified type.\n  syntax:\n    content: public static string GetTypeIdentity (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type to examine.\n    return:\n      type: System.String\n      description: The unique identifier for the type.\n  overload: System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.Type)\n  id: Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.Type)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: Imports(ComposablePartDefinition,Type)\n  nameWithType: AttributedModelServices.Imports(ComposablePartDefinition,Type)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.Imports(ComposablePartDefinition,Type)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Returns a value that indicates whether the specified part contains an import that matches the specified contract type.\n  syntax:\n    content: public static bool Imports (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, Type contractType);\n    parameters:\n    - id: part\n      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n      description: The part to search.\n    - id: contractType\n      type: System.Type\n      description: The contract type.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>part</code> contains an import definition that matches <code>contractType</code>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.Composition.AttributedModelServices.Imports*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.Type,System.ComponentModel.Composition.Primitives.ImportCardinality)\n  id: Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.Type,System.ComponentModel.Composition.Primitives.ImportCardinality)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: Imports(ComposablePartDefinition,Type,ImportCardinality)\n  nameWithType: AttributedModelServices.Imports(ComposablePartDefinition,Type,ImportCardinality)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.Imports(ComposablePartDefinition,Type,ImportCardinality)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Returns a value that indicates whether the specified part contains an import that matches the specified contract type and import cardinality.\n  syntax:\n    content: public static bool Imports (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, Type contractType, System.ComponentModel.Composition.Primitives.ImportCardinality importCardinality);\n    parameters:\n    - id: part\n      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n      description: The part to search.\n    - id: contractType\n      type: System.Type\n      description: The contract type.\n    - id: importCardinality\n      type: System.ComponentModel.Composition.Primitives.ImportCardinality\n      description: The import cardinality.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>part</code> contains an import definition that matches <code>contractType</code> and <code>importCardinality</code>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.Composition.AttributedModelServices.Imports*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@)\n  id: Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: Imports(ComposablePartDefinition)\n  nameWithType: AttributedModelServices.Imports(ComposablePartDefinition)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.Imports(ComposablePartDefinition)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  syntax:\n    content: public static bool Imports<T> (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part);\n    parameters:\n    - id: part\n      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ComponentModel.Composition.AttributedModelServices.Imports<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.ComponentModel.Composition.Primitives.ImportCardinality)\n  id: Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.ComponentModel.Composition.Primitives.ImportCardinality)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: Imports(ComposablePartDefinition,ImportCardinality)\n  nameWithType: AttributedModelServices.Imports(ComposablePartDefinition,ImportCardinality)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.Imports(ComposablePartDefinition,ImportCardinality)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  syntax:\n    content: public static bool Imports<T> (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, System.ComponentModel.Composition.Primitives.ImportCardinality importCardinality);\n    parameters:\n    - id: part\n      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n      description: To be added.\n    - id: importCardinality\n      type: System.ComponentModel.Composition.Primitives.ImportCardinality\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ComponentModel.Composition.AttributedModelServices.Imports<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService@,System.Object)\n  id: SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService@,System.Object)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: SatisfyImportsOnce(ICompositionService,Object)\n  nameWithType: AttributedModelServices.SatisfyImportsOnce(ICompositionService,Object)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(ICompositionService,Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Composes the specified part by using the specified composition service, with recomposition disabled.\n  remarks: Unlike ordinary composition, parts composed with this method are not guaranteed to remain valid if the catalog behind`compositionService` changes.\n  syntax:\n    content: public static System.ComponentModel.Composition.Primitives.ComposablePart SatisfyImportsOnce (this System.ComponentModel.Composition.ICompositionService compositionService, object attributedPart);\n    parameters:\n    - id: compositionService\n      type: System.ComponentModel.Composition.ICompositionService\n      description: The composition service to use.\n    - id: attributedPart\n      type: System.Object\n      description: The part to compose.\n    return:\n      type: System.ComponentModel.Composition.Primitives.ComposablePart\n      description: The composed part.\n  overload: System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService@,System.Object,System.Reflection.ReflectionContext)\n  id: SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService@,System.Object,System.Reflection.ReflectionContext)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: SatisfyImportsOnce(ICompositionService,Object,ReflectionContext)\n  nameWithType: AttributedModelServices.SatisfyImportsOnce(ICompositionService,Object,ReflectionContext)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(ICompositionService,Object,ReflectionContext)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Composes the specified part by using the specified composition service, with recomposition disabled and using the specified reflection context.\n  syntax:\n    content: public static System.ComponentModel.Composition.Primitives.ComposablePart SatisfyImportsOnce (this System.ComponentModel.Composition.ICompositionService compositionService, object attributedPart, System.Reflection.ReflectionContext reflectionContext);\n    parameters:\n    - id: compositionService\n      type: System.ComponentModel.Composition.ICompositionService\n      description: The composition service to use.\n    - id: attributedPart\n      type: System.Object\n      description: The part to compose.\n    - id: reflectionContext\n      type: System.Reflection.ReflectionContext\n      description: The reflection context for the part.\n    return:\n      type: System.ComponentModel.Composition.Primitives.ComposablePart\n      description: The composed part.\n  overload: System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>reflectionContext</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch@,``0)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: AddExportedValue(CompositionBatch,T)\n  nameWithType: AttributedModelServices.AddExportedValue(CompositionBatch,T)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.AddExportedValue(CompositionBatch,T)\n- uid: System.ComponentModel.Composition.Primitives.ComposablePart\n  parent: System.ComponentModel.Composition.Primitives\n  isExternal: false\n  name: ComposablePart\n  nameWithType: ComposablePart\n  fullName: System.ComponentModel.Composition.Primitives.ComposablePart\n- uid: System.ComponentModel.Composition.Hosting.CompositionBatch\n  parent: System.ComponentModel.Composition.Hosting\n  isExternal: false\n  name: CompositionBatch\n  nameWithType: CompositionBatch\n  fullName: System.ComponentModel.Composition.Hosting.CompositionBatch\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch@,System.String,``0)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: AddExportedValue(CompositionBatch,String,T)\n  nameWithType: AttributedModelServices.AddExportedValue(CompositionBatch,String,T)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.AddExportedValue(CompositionBatch,String,T)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.Composition.AttributedModelServices.AddPart(System.ComponentModel.Composition.Hosting.CompositionBatch@,System.Object)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: AddPart(CompositionBatch,Object)\n  nameWithType: AttributedModelServices.AddPart(CompositionBatch,Object)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.AddPart(CompositionBatch,Object)\n- uid: System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer@,``0)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: ComposeExportedValue(CompositionContainer,T)\n  nameWithType: AttributedModelServices.ComposeExportedValue(CompositionContainer,T)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue(CompositionContainer,T)\n- uid: System.ComponentModel.Composition.Hosting.CompositionContainer\n  parent: System.ComponentModel.Composition.Hosting\n  isExternal: false\n  name: CompositionContainer\n  nameWithType: CompositionContainer\n  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer\n- uid: System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer@,System.String,``0)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: ComposeExportedValue(CompositionContainer,String,T)\n  nameWithType: AttributedModelServices.ComposeExportedValue(CompositionContainer,String,T)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue(CompositionContainer,String,T)\n- uid: System.ComponentModel.Composition.AttributedModelServices.ComposeParts(System.ComponentModel.Composition.Hosting.CompositionContainer@,System.Object[])\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: ComposeParts(CompositionContainer,Object[])\n  nameWithType: AttributedModelServices.ComposeParts(CompositionContainer,Object[])\n  fullName: System.ComponentModel.Composition.AttributedModelServices.ComposeParts(CompositionContainer,Object[])\n- uid: System.Object[]\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.Object)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: CreatePart(Object)\n  nameWithType: AttributedModelServices.CreatePart(Object)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.CreatePart(Object)\n- uid: System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Object)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: CreatePart(ComposablePartDefinition,Object)\n  nameWithType: AttributedModelServices.CreatePart(ComposablePartDefinition,Object)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.CreatePart(ComposablePartDefinition,Object)\n- uid: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n  parent: System.ComponentModel.Composition.Primitives\n  isExternal: false\n  name: ComposablePartDefinition\n  nameWithType: ComposablePartDefinition\n  fullName: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n- uid: System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.Object,System.Reflection.ReflectionContext)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: CreatePart(Object,ReflectionContext)\n  nameWithType: AttributedModelServices.CreatePart(Object,ReflectionContext)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.CreatePart(Object,ReflectionContext)\n- uid: System.Reflection.ReflectionContext\n  parent: System.Reflection\n  isExternal: true\n  name: ReflectionContext\n  nameWithType: ReflectionContext\n  fullName: System.Reflection.ReflectionContext\n- uid: System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: CreatePartDefinition(Type,ICompositionElement)\n  nameWithType: AttributedModelServices.CreatePartDefinition(Type,ICompositionElement)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(Type,ICompositionElement)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.Composition.Primitives.ICompositionElement\n  parent: System.ComponentModel.Composition.Primitives\n  isExternal: false\n  name: ICompositionElement\n  nameWithType: ICompositionElement\n  fullName: System.ComponentModel.Composition.Primitives.ICompositionElement\n- uid: System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement,System.Boolean)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: CreatePartDefinition(Type,ICompositionElement,Boolean)\n  nameWithType: AttributedModelServices.CreatePartDefinition(Type,ICompositionElement,Boolean)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(Type,ICompositionElement,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Composition.AttributedModelServices.Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.Type)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: Exports(ComposablePartDefinition,Type)\n  nameWithType: AttributedModelServices.Exports(ComposablePartDefinition,Type)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.Exports(ComposablePartDefinition,Type)\n- uid: System.ComponentModel.Composition.AttributedModelServices.Exports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: Exports(ComposablePartDefinition)\n  nameWithType: AttributedModelServices.Exports(ComposablePartDefinition)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.Exports(ComposablePartDefinition)\n- uid: System.ComponentModel.Composition.AttributedModelServices.GetContractName(System.Type)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: GetContractName(Type)\n  nameWithType: AttributedModelServices.GetContractName(Type)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.GetContractName(Type)\n- uid: System.ComponentModel.Composition.AttributedModelServices.GetMetadataView``1(System.Collections.Generic.IDictionary{System.String,System.Object})\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: GetMetadataView(IDictionary<String,Object>)\n  nameWithType: AttributedModelServices.GetMetadataView(IDictionary<String,Object>)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.GetMetadataView(IDictionary<String,Object>)\n- uid: TMetadataView\n  isExternal: true\n  name: TMetadataView\n  nameWithType: TMetadataView\n  fullName: TMetadataView\n- uid: System.Collections.Generic.IDictionary{System.String,System.Object}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IDictionary<String,Object>\n  nameWithType: IDictionary<String,Object>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: IDictionary<System.String,System.Object>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Reflection.MethodInfo)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: GetTypeIdentity(MethodInfo)\n  nameWithType: AttributedModelServices.GetTypeIdentity(MethodInfo)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(MethodInfo)\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: true\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: GetTypeIdentity(Type)\n  nameWithType: AttributedModelServices.GetTypeIdentity(Type)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(Type)\n- uid: System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.Type)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: Imports(ComposablePartDefinition,Type)\n  nameWithType: AttributedModelServices.Imports(ComposablePartDefinition,Type)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.Imports(ComposablePartDefinition,Type)\n- uid: System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.Type,System.ComponentModel.Composition.Primitives.ImportCardinality)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: Imports(ComposablePartDefinition,Type,ImportCardinality)\n  nameWithType: AttributedModelServices.Imports(ComposablePartDefinition,Type,ImportCardinality)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.Imports(ComposablePartDefinition,Type,ImportCardinality)\n- uid: System.ComponentModel.Composition.Primitives.ImportCardinality\n  parent: System.ComponentModel.Composition.Primitives\n  isExternal: false\n  name: ImportCardinality\n  nameWithType: ImportCardinality\n  fullName: System.ComponentModel.Composition.Primitives.ImportCardinality\n- uid: System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: Imports(ComposablePartDefinition)\n  nameWithType: AttributedModelServices.Imports(ComposablePartDefinition)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.Imports(ComposablePartDefinition)\n- uid: System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.ComponentModel.Composition.Primitives.ImportCardinality)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: Imports(ComposablePartDefinition,ImportCardinality)\n  nameWithType: AttributedModelServices.Imports(ComposablePartDefinition,ImportCardinality)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.Imports(ComposablePartDefinition,ImportCardinality)\n- uid: System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService@,System.Object)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: SatisfyImportsOnce(ICompositionService,Object)\n  nameWithType: AttributedModelServices.SatisfyImportsOnce(ICompositionService,Object)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(ICompositionService,Object)\n- uid: System.ComponentModel.Composition.ICompositionService\n  parent: System.ComponentModel.Composition\n  isExternal: false\n  name: ICompositionService\n  nameWithType: ICompositionService\n  fullName: System.ComponentModel.Composition.ICompositionService\n- uid: System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService@,System.Object,System.Reflection.ReflectionContext)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: SatisfyImportsOnce(ICompositionService,Object,ReflectionContext)\n  nameWithType: AttributedModelServices.SatisfyImportsOnce(ICompositionService,Object,ReflectionContext)\n  fullName: System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(ICompositionService,Object,ReflectionContext)\n- uid: System.ComponentModel.Composition.AttributedModelServices.AddExportedValue<T>*\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: AddExportedValue<T>\n  nameWithType: AttributedModelServices.AddExportedValue<T>\n- uid: System.ComponentModel.Composition.AttributedModelServices.AddPart*\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: AddPart\n  nameWithType: AttributedModelServices.AddPart\n- uid: System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue<T>*\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: ComposeExportedValue<T>\n  nameWithType: AttributedModelServices.ComposeExportedValue<T>\n- uid: System.ComponentModel.Composition.AttributedModelServices.ComposeParts*\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: ComposeParts\n  nameWithType: AttributedModelServices.ComposeParts\n- uid: System.ComponentModel.Composition.AttributedModelServices.CreatePart*\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: CreatePart\n  nameWithType: AttributedModelServices.CreatePart\n- uid: System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition*\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: CreatePartDefinition\n  nameWithType: AttributedModelServices.CreatePartDefinition\n- uid: System.ComponentModel.Composition.AttributedModelServices.Exports*\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: Exports\n  nameWithType: AttributedModelServices.Exports\n- uid: System.ComponentModel.Composition.AttributedModelServices.Exports<T>*\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: Exports<T>\n  nameWithType: AttributedModelServices.Exports<T>\n- uid: System.ComponentModel.Composition.AttributedModelServices.GetContractName*\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: GetContractName\n  nameWithType: AttributedModelServices.GetContractName\n- uid: System.ComponentModel.Composition.AttributedModelServices.GetMetadataView<TMetadataView>*\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: GetMetadataView<TMetadataView>\n  nameWithType: AttributedModelServices.GetMetadataView<TMetadataView>\n- uid: System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity*\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: GetTypeIdentity\n  nameWithType: AttributedModelServices.GetTypeIdentity\n- uid: System.ComponentModel.Composition.AttributedModelServices.Imports*\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: Imports\n  nameWithType: AttributedModelServices.Imports\n- uid: System.ComponentModel.Composition.AttributedModelServices.Imports<T>*\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: Imports<T>\n  nameWithType: AttributedModelServices.Imports<T>\n- uid: System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce*\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: SatisfyImportsOnce\n  nameWithType: AttributedModelServices.SatisfyImportsOnce\n"}