{"nodes":[{"pos":[587,690],"content":"Maps an inheritance hierarchy in a <ph id=\"ph1\">[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]</ph> application.","needQuote":true,"needEscape":true,"source":"Maps an inheritance hierarchy in a [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] application."},{"pos":[703,1687],"content":"One InheritanceMappingAttribute is specified per mapped class.       Note the following when you map inheritance hierarchies:      -   All classes in a hierarchy must be mapped to a single table.      -   The table for an inheritance hierarchy must be declared on the mapped type that is at the top of the hierarchy. You cannot specify the table or mapping attributes in a class that is derived from the top class.      -   You can use an interface in a hierarchy, but [!INCLUDE[vbtecLinq](~/add/includes/vbteclinq-md.md)] does not map it.      -   You can skip a class in the hierarchy when you map classes, but you can query against mapped classes only.       For correct materialization, discriminator code values must be unique and match the values in the database. A row with a discriminator code value that does not exactly match (even by casing) instantiates the class by using <xref:System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault%2A> set to `true`.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"One InheritanceMappingAttribute is specified per mapped class.","pos":[0,62]},{"content":"Note the following when you map inheritance hierarchies:      -   All classes in a hierarchy must be mapped to a single table.","pos":[69,195]},{"content":"-   The table for an inheritance hierarchy must be declared on the mapped type that is at the top of the hierarchy.","pos":[201,316]},{"content":"You cannot specify the table or mapping attributes in a class that is derived from the top class.","pos":[317,414]},{"content":"-   You can use an interface in a hierarchy, but <ph id=\"ph1\">[!INCLUDE[vbtecLinq](~/add/includes/vbteclinq-md.md)]</ph> does not map it.","pos":[420,539],"source":"      -   You can use an interface in a hierarchy, but [!INCLUDE[vbtecLinq](~/add/includes/vbteclinq-md.md)] does not map it."},{"content":"-   You can skip a class in the hierarchy when you map classes, but you can query against mapped classes only.","pos":[545,655]},{"content":"For correct materialization, discriminator code values must be unique and match the values in the database.","pos":[662,769]},{"content":"A row with a discriminator code value that does not exactly match (even by casing) instantiates the class by using &lt;xref:System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault%2A&gt; set to <ph id=\"ph1\">`true`</ph>.","pos":[770,972],"source":" A row with a discriminator code value that does not exactly match (even by casing) instantiates the class by using <xref:System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault%2A> set to `true`."}]},{"pos":[3189,3303],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.Mapping.InheritanceMappingAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.Linq.Mapping.InheritanceMappingAttribute\"></xref> class."},{"pos":[3889,3965],"content":"Gets or sets the discriminator code value in a mapped inheritance hierarchy.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the discriminator code value in a mapped inheritance hierarchy.","pos":[0,76]}]},{"pos":[4079,4129],"content":"Must be user-specified. There is no default value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Must be user-specified. There is no default value.","pos":[0,50],"nodes":[{"content":"Must be user-specified.","pos":[0,23]},{"content":"There is no default value.","pos":[24,50]}]}]},{"pos":[4658,4780],"content":"Gets or sets whether an object of this type in instantiated when the discriminator value does not match a specified value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets whether an object of this type in instantiated when the discriminator value does not match a specified value.","pos":[0,122]}]},{"pos":[4792,4924],"content":"Exactly one of the &lt;xref:System.Data.Linq.Mapping.InheritanceMappingAttribute&gt; attributes must be declared with IsDefault as <ph id=\"ph1\">`true`</ph>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"Exactly one of the <xref:System.Data.Linq.Mapping.InheritanceMappingAttribute> attributes must be declared with IsDefault as `true`."},{"pos":[5042,5115],"content":"Default = <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Default = <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[5624,5676],"content":"Gets or sets the type of the class in the hierarchy.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the type of the class in the hierarchy.","pos":[0,52]}]},{"pos":[5688,5768],"content":"Use any non-abstract type in the inheritance hierarchy, including the root type.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use any non-abstract type in the inheritance hierarchy, including the root type.","pos":[0,80]}]},{"pos":[5878,5928],"content":"Must be user-specified. There is no default value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Must be user-specified. There is no default value.","pos":[0,50],"nodes":[{"content":"Must be user-specified.","pos":[0,23]},{"content":"There is no default value.","pos":[24,50]}]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Linq.Mapping.InheritanceMappingAttribute\n  id: InheritanceMappingAttribute\n  children:\n  - System.Data.Linq.Mapping.InheritanceMappingAttribute.#ctor\n  - System.Data.Linq.Mapping.InheritanceMappingAttribute.Code\n  - System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault\n  - System.Data.Linq.Mapping.InheritanceMappingAttribute.Type\n  langs:\n  - csharp\n  name: InheritanceMappingAttribute\n  nameWithType: InheritanceMappingAttribute\n  fullName: System.Data.Linq.Mapping.InheritanceMappingAttribute\n  type: Class\n  summary: Maps an inheritance hierarchy in a [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] application.\n  remarks: \"One InheritanceMappingAttribute is specified per mapped class.  \\n  \\n Note the following when you map inheritance hierarchies:  \\n  \\n-   All classes in a hierarchy must be mapped to a single table.  \\n  \\n-   The table for an inheritance hierarchy must be declared on the mapped type that is at the top of the hierarchy. You cannot specify the table or mapping attributes in a class that is derived from the top class.  \\n  \\n-   You can use an interface in a hierarchy, but [!INCLUDE[vbtecLinq](~/add/includes/vbteclinq-md.md)] does not map it.  \\n  \\n-   You can skip a class in the hierarchy when you map classes, but you can query against mapped classes only.  \\n  \\n For correct materialization, discriminator code values must be unique and match the values in the database. A row with a discriminator code value that does not exactly match (even by casing) instantiates the class by using <xref:System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault%2A> set to `true`.\"\n  example:\n  - \"This example shows inheritance mapping for a hierarchy where the top, mapped class (`Shape`) is abstract.  \\n  \\n [!code-cs[System.Data.Linq.Mapping.InheritanceMappingAttribute#1](~/add/codesnippet/csharp/inherit/Program.cs#1)]\\n [!code-vb[System.Data.Linq.Mapping.InheritanceMappingAttribute#1](~/add/codesnippet/visualbasic/inherit/Module1.vb#1)]  \\n  \\n The following example shows the inclusion of unmapped classes. You can put unmapped classes anywhere in the hierarchy.  \\n  \\n [!code-cs[System.Data.Linq.Mapping.InheritanceMappingAttribute#2](~/add/codesnippet/csharp/inherit/Program.cs#2)]\\n [!code-vb[System.Data.Linq.Mapping.InheritanceMappingAttribute#2](~/add/codesnippet/visualbasic/inherit/Module1.vb#2)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=true, Inherited=false)]\n\n      public sealed class InheritanceMappingAttribute : Attribute\n  inheritance:\n  - System.Attribute\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.InheritanceMappingAttribute.#ctor\n  id: '#ctor'\n  parent: System.Data.Linq.Mapping.InheritanceMappingAttribute\n  langs:\n  - csharp\n  name: InheritanceMappingAttribute()\n  nameWithType: InheritanceMappingAttribute.InheritanceMappingAttribute()\n  fullName: System.Data.Linq.Mapping.InheritanceMappingAttribute.InheritanceMappingAttribute()\n  type: Constructor\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Initializes a new instance of the <xref href=\"System.Data.Linq.Mapping.InheritanceMappingAttribute\"></xref> class.\n  syntax:\n    content: public InheritanceMappingAttribute ();\n    parameters: []\n  overload: System.Data.Linq.Mapping.InheritanceMappingAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.InheritanceMappingAttribute.Code\n  id: Code\n  parent: System.Data.Linq.Mapping.InheritanceMappingAttribute\n  langs:\n  - csharp\n  name: Code\n  nameWithType: InheritanceMappingAttribute.Code\n  fullName: System.Data.Linq.Mapping.InheritanceMappingAttribute.Code\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets or sets the discriminator code value in a mapped inheritance hierarchy.\n  syntax:\n    content: public object Code { get; set; }\n    return:\n      type: System.Object\n      description: Must be user-specified. There is no default value.\n  overload: System.Data.Linq.Mapping.InheritanceMappingAttribute.Code*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault\n  id: IsDefault\n  parent: System.Data.Linq.Mapping.InheritanceMappingAttribute\n  langs:\n  - csharp\n  name: IsDefault\n  nameWithType: InheritanceMappingAttribute.IsDefault\n  fullName: System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets or sets whether an object of this type in instantiated when the discriminator value does not match a specified value.\n  remarks: Exactly one of the <xref:System.Data.Linq.Mapping.InheritanceMappingAttribute> attributes must be declared with IsDefault as `true`.\n  syntax:\n    content: public bool IsDefault { get; set; }\n    return:\n      type: System.Boolean\n      description: Default = <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.InheritanceMappingAttribute.Type\n  id: Type\n  parent: System.Data.Linq.Mapping.InheritanceMappingAttribute\n  langs:\n  - csharp\n  name: Type\n  nameWithType: InheritanceMappingAttribute.Type\n  fullName: System.Data.Linq.Mapping.InheritanceMappingAttribute.Type\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets or sets the type of the class in the hierarchy.\n  remarks: Use any non-abstract type in the inheritance hierarchy, including the root type.\n  syntax:\n    content: public Type Type { get; set; }\n    return:\n      type: System.Type\n      description: Must be user-specified. There is no default value.\n  overload: System.Data.Linq.Mapping.InheritanceMappingAttribute.Type*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Attribute\n  isExternal: false\n  name: System.Attribute\n- uid: System.Data.Linq.Mapping.InheritanceMappingAttribute.#ctor\n  parent: System.Data.Linq.Mapping.InheritanceMappingAttribute\n  isExternal: false\n  name: InheritanceMappingAttribute()\n  nameWithType: InheritanceMappingAttribute.InheritanceMappingAttribute()\n  fullName: System.Data.Linq.Mapping.InheritanceMappingAttribute.InheritanceMappingAttribute()\n- uid: System.Data.Linq.Mapping.InheritanceMappingAttribute.Code\n  parent: System.Data.Linq.Mapping.InheritanceMappingAttribute\n  isExternal: false\n  name: Code\n  nameWithType: InheritanceMappingAttribute.Code\n  fullName: System.Data.Linq.Mapping.InheritanceMappingAttribute.Code\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault\n  parent: System.Data.Linq.Mapping.InheritanceMappingAttribute\n  isExternal: false\n  name: IsDefault\n  nameWithType: InheritanceMappingAttribute.IsDefault\n  fullName: System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Linq.Mapping.InheritanceMappingAttribute.Type\n  parent: System.Data.Linq.Mapping.InheritanceMappingAttribute\n  isExternal: false\n  name: Type\n  nameWithType: InheritanceMappingAttribute.Type\n  fullName: System.Data.Linq.Mapping.InheritanceMappingAttribute.Type\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Data.Linq.Mapping.InheritanceMappingAttribute.#ctor*\n  parent: System.Data.Linq.Mapping.InheritanceMappingAttribute\n  isExternal: false\n  name: InheritanceMappingAttribute\n  nameWithType: InheritanceMappingAttribute.InheritanceMappingAttribute\n- uid: System.Data.Linq.Mapping.InheritanceMappingAttribute.Code*\n  parent: System.Data.Linq.Mapping.InheritanceMappingAttribute\n  isExternal: false\n  name: Code\n  nameWithType: InheritanceMappingAttribute.Code\n- uid: System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault*\n  parent: System.Data.Linq.Mapping.InheritanceMappingAttribute\n  isExternal: false\n  name: IsDefault\n  nameWithType: InheritanceMappingAttribute.IsDefault\n- uid: System.Data.Linq.Mapping.InheritanceMappingAttribute.Type*\n  parent: System.Data.Linq.Mapping.InheritanceMappingAttribute\n  isExternal: false\n  name: Type\n  nameWithType: InheritanceMappingAttribute.Type\n"}