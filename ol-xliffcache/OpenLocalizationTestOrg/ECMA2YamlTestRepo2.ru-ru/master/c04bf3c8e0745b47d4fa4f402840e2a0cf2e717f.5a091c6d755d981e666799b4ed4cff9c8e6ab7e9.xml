{"nodes":[{"pos":[1060,1149],"content":"Options to use with a  <bpt id=\"p1\">&lt;xref href=\"System.Net.WebSockets.ClientWebSocket\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Options to use with a  <xref href=\"System.Net.WebSockets.ClientWebSocket\"></xref> object."},{"pos":[1764,1843],"content":"Adds a sub-protocol to be negotiated during the WebSocket connection handshake.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a sub-protocol to be negotiated during the WebSocket connection handshake.","pos":[0,79]}]},{"pos":[1999,2033],"content":"The WebSocket sub-protocol to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The WebSocket sub-protocol to add.","pos":[0,34]}]},{"pos":[2567,2621],"content":"Gets or sets a collection of client side certificates.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a collection of client side certificates.","pos":[0,54]}]},{"pos":[2873,3026],"content":"Returns <xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"></xref>.       A collection of client side certificates.","needQuote":false,"needEscape":true,"nodes":[{"content":"Returns <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,101],"source":"Returns <xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"></xref>."},{"content":"A collection of client side certificates.","pos":[108,149]}]},{"pos":[3510,3563],"content":"Gets or sets the cookies associated with the request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the cookies associated with the request.","pos":[0,53]}]},{"pos":[3714,3805],"content":"Returns <xref:System.Net.CookieContainer>.       The cookies associated with the request.","needQuote":false,"needEscape":true,"nodes":[{"content":"Returns <xref:System.Net.CookieContainer>.       The cookies associated with the request.","pos":[0,89],"nodes":[{"content":"Returns &lt;xref:System.Net.CookieContainer&gt;.","pos":[0,42],"source":"Returns <xref:System.Net.CookieContainer>."},{"content":"The cookies associated with the request.","pos":[49,89]}]}]},{"pos":[4298,4353],"content":"Gets or sets the credential information for the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the credential information for the client.","pos":[0,55]}]},{"pos":[4502,4592],"content":"Returns <xref:System.Net.ICredentials>.       The credential information for the client.","needQuote":false,"needEscape":true,"nodes":[{"content":"Returns <xref:System.Net.ICredentials>.       The credential information for the client.","pos":[0,88],"nodes":[{"content":"Returns &lt;xref:System.Net.ICredentials&gt;.","pos":[0,39],"source":"Returns <xref:System.Net.ICredentials>."},{"content":"The credential information for the client.","pos":[46,88]}]}]},{"pos":[5119,5191],"content":"Gets or sets the WebSocket protocol keep-alive interval in milliseconds.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the WebSocket protocol keep-alive interval in milliseconds.","pos":[0,72]}]},{"pos":[5323,5422],"content":"Returns <xref:System.TimeSpan>.       The WebSocket protocol keep-alive interval in milliseconds.","needQuote":false,"needEscape":true,"nodes":[{"content":"Returns <xref:System.TimeSpan>.       The WebSocket protocol keep-alive interval in milliseconds.","pos":[0,97],"nodes":[{"content":"Returns &lt;xref:System.TimeSpan&gt;.","pos":[0,31],"source":"Returns <xref:System.TimeSpan>."},{"content":"The WebSocket protocol keep-alive interval in milliseconds.","pos":[38,97]}]}]},{"pos":[5895,5941],"content":"Gets or sets the proxy for WebSocket requests.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the proxy for WebSocket requests.","pos":[0,46]}]},{"pos":[6078,6156],"content":"Returns <xref:System.Net.IWebProxy>.       The proxy for WebSocket requests.","needQuote":false,"needEscape":true,"nodes":[{"content":"Returns <xref:System.Net.IWebProxy>.       The proxy for WebSocket requests.","pos":[0,76],"nodes":[{"content":"Returns &lt;xref:System.Net.IWebProxy&gt;.","pos":[0,36],"source":"Returns <xref:System.Net.IWebProxy>."},{"content":"The proxy for WebSocket requests.","pos":[43,76]}]}]},{"pos":[6728,6762],"content":"Sets the client buffer parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the client buffer parameters.","pos":[0,34]}]},{"pos":[6941,6990],"content":"The size, in bytes, of the client receive buffer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size, in bytes, of the client receive buffer.","pos":[0,49]}]},{"pos":[7060,7106],"content":"The size, in bytes, of the client send buffer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size, in bytes, of the client send buffer.","pos":[0,46]}]},{"pos":[7804,7834],"content":"Sets client buffer parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets client buffer parameters.","pos":[0,30]}]},{"pos":[8040,8089],"content":"The size, in bytes, of the client receive buffer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size, in bytes, of the client receive buffer.","pos":[0,49]}]},{"pos":[8159,8205],"content":"The size, in bytes, of the client send buffer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size, in bytes, of the client send buffer.","pos":[0,46]}]},{"pos":[8287,8313],"content":"The receive buffer to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The receive buffer to use.","pos":[0,26]}]},{"pos":[8933,8977],"content":"Creates a HTTP request header and its value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a HTTP request header and its value.","pos":[0,44]}]},{"pos":[9153,9181],"content":"The name of the HTTP header.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the HTTP header.","pos":[0,28]}]},{"pos":[9249,9278],"content":"The value of the HTTP header.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the HTTP header.","pos":[0,29]}]},{"pos":[9829,9952],"content":"Gets or sets a <xref:System.Boolean> value that indicates if default credentials should be used during WebSocket handshake.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a &lt;xref:System.Boolean&gt; value that indicates if default credentials should be used during WebSocket handshake.","pos":[0,123],"source":"Gets or sets a <xref:System.Boolean> value that indicates if default credentials should be used during WebSocket handshake."}]},{"pos":[10083,10417],"content":"Returns <xref:System.Boolean>.       <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if default credentials should be used during WebSocket handshake; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"Returns &lt;xref:System.Boolean&gt;.","pos":[0,30],"source":"Returns <xref:System.Boolean>."},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if default credentials should be used during WebSocket handshake; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[37,237],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if default credentials should be used during WebSocket handshake; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[238,314],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.WebSockets.ClientWebSocketOptions\n  id: ClientWebSocketOptions\n  children:\n  - System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol(System.String)\n  - System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates\n  - System.Net.WebSockets.ClientWebSocketOptions.Cookies\n  - System.Net.WebSockets.ClientWebSocketOptions.Credentials\n  - System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval\n  - System.Net.WebSockets.ClientWebSocketOptions.Proxy\n  - System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32)\n  - System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32,System.ArraySegment{System.Byte})\n  - System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader(System.String,System.String)\n  - System.Net.WebSockets.ClientWebSocketOptions.UseDefaultCredentials\n  langs:\n  - csharp\n  name: ClientWebSocketOptions\n  nameWithType: ClientWebSocketOptions\n  fullName: System.Net.WebSockets.ClientWebSocketOptions\n  type: Class\n  summary: Options to use with a  <xref href=\"System.Net.WebSockets.ClientWebSocket\"></xref> object.\n  syntax:\n    content: public sealed class ClientWebSocketOptions\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol(System.String)\n  id: AddSubProtocol(System.String)\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  langs:\n  - csharp\n  name: AddSubProtocol(String)\n  nameWithType: ClientWebSocketOptions.AddSubProtocol(String)\n  fullName: System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol(String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net.WebSockets\n  summary: Adds a sub-protocol to be negotiated during the WebSocket connection handshake.\n  syntax:\n    content: public void AddSubProtocol (string subProtocol);\n    parameters:\n    - id: subProtocol\n      type: System.String\n      description: The WebSocket sub-protocol to add.\n  overload: System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates\n  id: ClientCertificates\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  langs:\n  - csharp\n  name: ClientCertificates\n  nameWithType: ClientWebSocketOptions.ClientCertificates\n  fullName: System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.WebSockets\n  summary: Gets or sets a collection of client side certificates.\n  syntax:\n    content: public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; set; }\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n      description: \"Returns <xref href=\\\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\\\"></xref>.  \\n  \\n A collection of client side certificates.\"\n  overload: System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.WebSockets.ClientWebSocketOptions.Cookies\n  id: Cookies\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  langs:\n  - csharp\n  name: Cookies\n  nameWithType: ClientWebSocketOptions.Cookies\n  fullName: System.Net.WebSockets.ClientWebSocketOptions.Cookies\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.WebSockets\n  summary: Gets or sets the cookies associated with the request.\n  syntax:\n    content: public System.Net.CookieContainer Cookies { get; set; }\n    return:\n      type: System.Net.CookieContainer\n      description: \"Returns <xref:System.Net.CookieContainer>.  \\n  \\n The cookies associated with the request.\"\n  overload: System.Net.WebSockets.ClientWebSocketOptions.Cookies*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.WebSockets.ClientWebSocketOptions.Credentials\n  id: Credentials\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  langs:\n  - csharp\n  name: Credentials\n  nameWithType: ClientWebSocketOptions.Credentials\n  fullName: System.Net.WebSockets.ClientWebSocketOptions.Credentials\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.WebSockets\n  summary: Gets or sets the credential information for the client.\n  syntax:\n    content: public System.Net.ICredentials Credentials { get; set; }\n    return:\n      type: System.Net.ICredentials\n      description: \"Returns <xref:System.Net.ICredentials>.  \\n  \\n The credential information for the client.\"\n  overload: System.Net.WebSockets.ClientWebSocketOptions.Credentials*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval\n  id: KeepAliveInterval\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  langs:\n  - csharp\n  name: KeepAliveInterval\n  nameWithType: ClientWebSocketOptions.KeepAliveInterval\n  fullName: System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.WebSockets\n  summary: Gets or sets the WebSocket protocol keep-alive interval in milliseconds.\n  syntax:\n    content: public TimeSpan KeepAliveInterval { get; set; }\n    return:\n      type: System.TimeSpan\n      description: \"Returns <xref:System.TimeSpan>.  \\n  \\n The WebSocket protocol keep-alive interval in milliseconds.\"\n  overload: System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.WebSockets.ClientWebSocketOptions.Proxy\n  id: Proxy\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  langs:\n  - csharp\n  name: Proxy\n  nameWithType: ClientWebSocketOptions.Proxy\n  fullName: System.Net.WebSockets.ClientWebSocketOptions.Proxy\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.WebSockets\n  summary: Gets or sets the proxy for WebSocket requests.\n  syntax:\n    content: public System.Net.IWebProxy Proxy { get; set; }\n    return:\n      type: System.Net.IWebProxy\n      description: \"Returns <xref:System.Net.IWebProxy>.  \\n  \\n The proxy for WebSocket requests.\"\n  overload: System.Net.WebSockets.ClientWebSocketOptions.Proxy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32)\n  id: SetBuffer(System.Int32,System.Int32)\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  langs:\n  - csharp\n  name: SetBuffer(Int32,Int32)\n  nameWithType: ClientWebSocketOptions.SetBuffer(Int32,Int32)\n  fullName: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(Int32,Int32)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net.WebSockets\n  summary: Sets the client buffer parameters.\n  syntax:\n    content: public void SetBuffer (int receiveBufferSize, int sendBufferSize);\n    parameters:\n    - id: receiveBufferSize\n      type: System.Int32\n      description: The size, in bytes, of the client receive buffer.\n    - id: sendBufferSize\n      type: System.Int32\n      description: The size, in bytes, of the client send buffer.\n  overload: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32,System.ArraySegment{System.Byte})\n  id: SetBuffer(System.Int32,System.Int32,System.ArraySegment{System.Byte})\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  langs:\n  - csharp\n  name: SetBuffer(Int32,Int32,ArraySegment<Byte>)\n  nameWithType: ClientWebSocketOptions.SetBuffer(Int32,Int32,ArraySegment<Byte>)\n  fullName: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(Int32,Int32,ArraySegment<Byte>)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net.WebSockets\n  summary: Sets client buffer parameters.\n  syntax:\n    content: public void SetBuffer (int receiveBufferSize, int sendBufferSize, ArraySegment<byte> buffer);\n    parameters:\n    - id: receiveBufferSize\n      type: System.Int32\n      description: The size, in bytes, of the client receive buffer.\n    - id: sendBufferSize\n      type: System.Int32\n      description: The size, in bytes, of the client send buffer.\n    - id: buffer\n      type: System.ArraySegment{System.Byte}\n      description: The receive buffer to use.\n  overload: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader(System.String,System.String)\n  id: SetRequestHeader(System.String,System.String)\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  langs:\n  - csharp\n  name: SetRequestHeader(String,String)\n  nameWithType: ClientWebSocketOptions.SetRequestHeader(String,String)\n  fullName: System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader(String,String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net.WebSockets\n  summary: Creates a HTTP request header and its value.\n  syntax:\n    content: public void SetRequestHeader (string headerName, string headerValue);\n    parameters:\n    - id: headerName\n      type: System.String\n      description: The name of the HTTP header.\n    - id: headerValue\n      type: System.String\n      description: The value of the HTTP header.\n  overload: System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.WebSockets.ClientWebSocketOptions.UseDefaultCredentials\n  id: UseDefaultCredentials\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  langs:\n  - csharp\n  name: UseDefaultCredentials\n  nameWithType: ClientWebSocketOptions.UseDefaultCredentials\n  fullName: System.Net.WebSockets.ClientWebSocketOptions.UseDefaultCredentials\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.WebSockets\n  summary: Gets or sets a <xref:System.Boolean> value that indicates if default credentials should be used during WebSocket handshake.\n  syntax:\n    content: public bool UseDefaultCredentials { get; set; }\n    return:\n      type: System.Boolean\n      description: \"Returns <xref:System.Boolean>.  \\n  \\n <xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref> if default credentials should be used during WebSocket handshake; otherwise <xref uid=\\\"langword_csharp_false\\\" name=\\\"false\\\" href=\\\"\\\"></xref>. The default is <xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref>.\"\n  overload: System.Net.WebSockets.ClientWebSocketOptions.UseDefaultCredentials*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol(System.String)\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: AddSubProtocol(String)\n  nameWithType: ClientWebSocketOptions.AddSubProtocol(String)\n  fullName: System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: ClientCertificates\n  nameWithType: ClientWebSocketOptions.ClientCertificates\n  fullName: System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509CertificateCollection\n  nameWithType: X509CertificateCollection\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n- uid: System.Net.WebSockets.ClientWebSocketOptions.Cookies\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: Cookies\n  nameWithType: ClientWebSocketOptions.Cookies\n  fullName: System.Net.WebSockets.ClientWebSocketOptions.Cookies\n- uid: System.Net.CookieContainer\n  parent: System.Net\n  isExternal: true\n  name: CookieContainer\n  nameWithType: CookieContainer\n  fullName: System.Net.CookieContainer\n- uid: System.Net.WebSockets.ClientWebSocketOptions.Credentials\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: Credentials\n  nameWithType: ClientWebSocketOptions.Credentials\n  fullName: System.Net.WebSockets.ClientWebSocketOptions.Credentials\n- uid: System.Net.ICredentials\n  parent: System.Net\n  isExternal: true\n  name: ICredentials\n  nameWithType: ICredentials\n  fullName: System.Net.ICredentials\n- uid: System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: KeepAliveInterval\n  nameWithType: ClientWebSocketOptions.KeepAliveInterval\n  fullName: System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Net.WebSockets.ClientWebSocketOptions.Proxy\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: Proxy\n  nameWithType: ClientWebSocketOptions.Proxy\n  fullName: System.Net.WebSockets.ClientWebSocketOptions.Proxy\n- uid: System.Net.IWebProxy\n  parent: System.Net\n  isExternal: true\n  name: IWebProxy\n  nameWithType: IWebProxy\n  fullName: System.Net.IWebProxy\n- uid: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32)\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: SetBuffer(Int32,Int32)\n  nameWithType: ClientWebSocketOptions.SetBuffer(Int32,Int32)\n  fullName: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32,System.ArraySegment{System.Byte})\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: SetBuffer(Int32,Int32,ArraySegment<Byte>)\n  nameWithType: ClientWebSocketOptions.SetBuffer(Int32,Int32,ArraySegment<Byte>)\n  fullName: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(Int32,Int32,ArraySegment<Byte>)\n- uid: System.ArraySegment{System.Byte}\n  parent: System\n  isExternal: true\n  name: ArraySegment<Byte>\n  nameWithType: ArraySegment<Byte>\n  fullName: System.ArraySegment<System.Byte>\n  spec.csharp:\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    nameWithType: ArraySegment\n    fullName: ArraySegment<System.Byte>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader(System.String,System.String)\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: SetRequestHeader(String,String)\n  nameWithType: ClientWebSocketOptions.SetRequestHeader(String,String)\n  fullName: System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader(String,String)\n- uid: System.Net.WebSockets.ClientWebSocketOptions.UseDefaultCredentials\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: UseDefaultCredentials\n  nameWithType: ClientWebSocketOptions.UseDefaultCredentials\n  fullName: System.Net.WebSockets.ClientWebSocketOptions.UseDefaultCredentials\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol*\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: AddSubProtocol\n  nameWithType: ClientWebSocketOptions.AddSubProtocol\n- uid: System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates*\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: ClientCertificates\n  nameWithType: ClientWebSocketOptions.ClientCertificates\n- uid: System.Net.WebSockets.ClientWebSocketOptions.Cookies*\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: Cookies\n  nameWithType: ClientWebSocketOptions.Cookies\n- uid: System.Net.WebSockets.ClientWebSocketOptions.Credentials*\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: Credentials\n  nameWithType: ClientWebSocketOptions.Credentials\n- uid: System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval*\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: KeepAliveInterval\n  nameWithType: ClientWebSocketOptions.KeepAliveInterval\n- uid: System.Net.WebSockets.ClientWebSocketOptions.Proxy*\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: Proxy\n  nameWithType: ClientWebSocketOptions.Proxy\n- uid: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer*\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: SetBuffer\n  nameWithType: ClientWebSocketOptions.SetBuffer\n- uid: System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader*\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: SetRequestHeader\n  nameWithType: ClientWebSocketOptions.SetRequestHeader\n- uid: System.Net.WebSockets.ClientWebSocketOptions.UseDefaultCredentials*\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: UseDefaultCredentials\n  nameWithType: ClientWebSocketOptions.UseDefaultCredentials\n"}