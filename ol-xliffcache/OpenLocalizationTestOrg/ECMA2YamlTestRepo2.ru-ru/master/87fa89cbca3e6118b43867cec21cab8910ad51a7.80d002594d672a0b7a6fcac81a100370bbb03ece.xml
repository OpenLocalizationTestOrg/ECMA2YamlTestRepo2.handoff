{"nodes":[{"pos":[359,504],"content":"Implements error trapping on the asynchronous batch work that is submitted by the <bpt id=\"p1\">&lt;xref href=\"System.EnterpriseServices.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Implements error trapping on the asynchronous batch work that is submitted by the <xref href=\"System.EnterpriseServices.Activity\"></xref> object."},{"pos":[517,1288],"content":"IAsyncErrorNotify is used to implement error trapping on the asynchronous batch work that is submitted by the <xref:System.EnterpriseServices.Activity> object. Implement this interface on the object that is passed in the call to <xref:System.EnterpriseServices.Activity.AsynchronousCall%2A> on the <xref:System.EnterpriseServices.Activity> object. <xref:System.EnterpriseServices.Activity.AsynchronousCall%2A> determines if an error occurred in batch work that is running asynchronously. This interface enables you to be informed of errors that occur in asynchronous batch work, and the process will terminate (failfast) on any unrecoverable error.       For information about failfast, see the \"Fault Isolation and Failfast Policy\" topic in the Platform SDK in MSDN.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"IAsyncErrorNotify is used to implement error trapping on the asynchronous batch work that is submitted by the <xref:System.EnterpriseServices.Activity> object. Implement this interface on the object that is passed in the call to <xref:System.EnterpriseServices.Activity.AsynchronousCall%2A> on the <xref:System.EnterpriseServices.Activity> object. <xref:System.EnterpriseServices.Activity.AsynchronousCall%2A> determines if an error occurred in batch work that is running asynchronously. This interface enables you to be informed of errors that occur in asynchronous batch work, and the process will terminate (failfast) on any unrecoverable error.       For information about failfast, see the \"Fault Isolation and Failfast Policy\" topic in the Platform SDK in MSDN.","pos":[0,767],"nodes":[{"content":"IAsyncErrorNotify is used to implement error trapping on the asynchronous batch work that is submitted by the &lt;xref:System.EnterpriseServices.Activity&gt; object.","pos":[0,159],"source":"IAsyncErrorNotify is used to implement error trapping on the asynchronous batch work that is submitted by the <xref:System.EnterpriseServices.Activity> object."},{"content":"Implement this interface on the object that is passed in the call to &lt;xref:System.EnterpriseServices.Activity.AsynchronousCall%2A&gt; on the &lt;xref:System.EnterpriseServices.Activity&gt; object.","pos":[160,347],"source":" Implement this interface on the object that is passed in the call to <xref:System.EnterpriseServices.Activity.AsynchronousCall%2A> on the <xref:System.EnterpriseServices.Activity> object."},{"content":"&lt;xref:System.EnterpriseServices.Activity.AsynchronousCall%2A&gt; determines if an error occurred in batch work that is running asynchronously.","pos":[348,487],"source":" <xref:System.EnterpriseServices.Activity.AsynchronousCall%2A> determines if an error occurred in batch work that is running asynchronously."},{"content":"This interface enables you to be informed of errors that occur in asynchronous batch work, and the process will terminate (failfast) on any unrecoverable error.","pos":[488,648]},{"content":"For information about failfast, see the \"Fault Isolation and Failfast Policy\" topic in the Platform SDK in MSDN.","pos":[655,767]}]}]},{"pos":[2032,2075],"content":"Handles errors for asynchronous batch work.","needQuote":true,"needEscape":true,"nodes":[{"content":"Handles errors for asynchronous batch work.","pos":[0,43]}]},{"pos":[2088,2826],"content":"This method should be implemented to gracefully handle errors that occur when batch work is running asynchronously. Because the process terminates (failfast) on any unrecoverable error, without this method there is no way of knowing when errors occur in asynchronous batch work. The process also terminates when this method returns an error as its return value. The batch work itself is implemented in <xref:System.EnterpriseServices.IServiceCall.OnCall%2A>, and it is run asynchronously by calling <xref:System.EnterpriseServices.Activity.AsynchronousCall%2A>.       This method supports the standard return values `E_FAIL`, `E_INVALIDARG`, and `E_OUTOFMEMORY`, as well as `S_OK`, which indicates the method call returned successfully.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method should be implemented to gracefully handle errors that occur when batch work is running asynchronously.","pos":[0,115]},{"content":"Because the process terminates (failfast) on any unrecoverable error, without this method there is no way of knowing when errors occur in asynchronous batch work.","pos":[116,278]},{"content":"The process also terminates when this method returns an error as its return value.","pos":[279,361]},{"content":"The batch work itself is implemented in &lt;xref:System.EnterpriseServices.IServiceCall.OnCall%2A&gt;, and it is run asynchronously by calling &lt;xref:System.EnterpriseServices.Activity.AsynchronousCall%2A&gt;.","pos":[362,561],"source":" The batch work itself is implemented in <xref:System.EnterpriseServices.IServiceCall.OnCall%2A>, and it is run asynchronously by calling <xref:System.EnterpriseServices.Activity.AsynchronousCall%2A>."},{"content":"This method supports the standard return values <ph id=\"ph1\">`E_FAIL`</ph>, <ph id=\"ph2\">`E_INVALIDARG`</ph>, and <ph id=\"ph3\">`E_OUTOFMEMORY`</ph>, as well as <ph id=\"ph4\">`S_OK`</ph>, which indicates the method call returned successfully.","pos":[568,736],"source":"       This method supports the standard return values `E_FAIL`, `E_INVALIDARG`, and `E_OUTOFMEMORY`, as well as `S_OK`, which indicates the method call returned successfully."}]},{"pos":[2964,3051],"content":"The HRESULT of the error that occurred while the batch work was running asynchronously.","needQuote":true,"needEscape":true,"nodes":[{"content":"The HRESULT of the error that occurred while the batch work was running asynchronously.","pos":[0,87]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.EnterpriseServices.IAsyncErrorNotify\n  id: IAsyncErrorNotify\n  children:\n  - System.EnterpriseServices.IAsyncErrorNotify.OnError(System.Int32)\n  langs:\n  - csharp\n  name: IAsyncErrorNotify\n  nameWithType: IAsyncErrorNotify\n  fullName: System.EnterpriseServices.IAsyncErrorNotify\n  type: Interface\n  summary: Implements error trapping on the asynchronous batch work that is submitted by the <xref href=\"System.EnterpriseServices.Activity\"></xref> object.\n  remarks: \"IAsyncErrorNotify is used to implement error trapping on the asynchronous batch work that is submitted by the <xref:System.EnterpriseServices.Activity> object. Implement this interface on the object that is passed in the call to <xref:System.EnterpriseServices.Activity.AsynchronousCall%2A> on the <xref:System.EnterpriseServices.Activity> object. <xref:System.EnterpriseServices.Activity.AsynchronousCall%2A> determines if an error occurred in batch work that is running asynchronously. This interface enables you to be informed of errors that occur in asynchronous batch work, and the process will terminate (failfast) on any unrecoverable error.  \\n  \\n For information about failfast, see the \\\"Fault Isolation and Failfast Policy\\\" topic in the Platform SDK in MSDN.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.Guid(\"FE6777FB-A674-4177-8F32-6D707E113484\")]\n\n      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]\n\n      public interface IAsyncErrorNotify\n  implements: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.IAsyncErrorNotify.OnError(System.Int32)\n  id: OnError(System.Int32)\n  parent: System.EnterpriseServices.IAsyncErrorNotify\n  langs:\n  - csharp\n  name: OnError(Int32)\n  nameWithType: IAsyncErrorNotify.OnError(Int32)\n  fullName: System.EnterpriseServices.IAsyncErrorNotify.OnError(Int32)\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices\n  summary: Handles errors for asynchronous batch work.\n  remarks: \"This method should be implemented to gracefully handle errors that occur when batch work is running asynchronously. Because the process terminates (failfast) on any unrecoverable error, without this method there is no way of knowing when errors occur in asynchronous batch work. The process also terminates when this method returns an error as its return value. The batch work itself is implemented in <xref:System.EnterpriseServices.IServiceCall.OnCall%2A>, and it is run asynchronously by calling <xref:System.EnterpriseServices.Activity.AsynchronousCall%2A>.  \\n  \\n This method supports the standard return values `E_FAIL`, `E_INVALIDARG`, and `E_OUTOFMEMORY`, as well as `S_OK`, which indicates the method call returned successfully.\"\n  syntax:\n    content: public void OnError (int hresult);\n    parameters:\n    - id: hresult\n      type: System.Int32\n      description: The HRESULT of the error that occurred while the batch work was running asynchronously.\n  overload: System.EnterpriseServices.IAsyncErrorNotify.OnError*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.EnterpriseServices.IAsyncErrorNotify.OnError(System.Int32)\n  parent: System.EnterpriseServices.IAsyncErrorNotify\n  isExternal: false\n  name: OnError(Int32)\n  nameWithType: IAsyncErrorNotify.OnError(Int32)\n  fullName: System.EnterpriseServices.IAsyncErrorNotify.OnError(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.EnterpriseServices.IAsyncErrorNotify.OnError*\n  parent: System.EnterpriseServices.IAsyncErrorNotify\n  isExternal: false\n  name: OnError\n  nameWithType: IAsyncErrorNotify.OnError\n"}