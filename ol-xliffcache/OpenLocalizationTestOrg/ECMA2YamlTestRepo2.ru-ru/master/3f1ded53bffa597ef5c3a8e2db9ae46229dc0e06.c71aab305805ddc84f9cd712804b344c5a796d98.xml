{"nodes":[{"pos":[882,959],"content":"Configures the identity of a Web application. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Configures the identity of a Web application. This class cannot be inherited.","pos":[0,77],"nodes":[{"content":"Configures the identity of a Web application.","pos":[0,45]},{"content":"This class cannot be inherited.","pos":[46,77]}]}]},{"pos":[972,1395],"content":"The IdentitySection provides a way to programmatically access and modify the `identity` section of a configuration file.      > [!NOTE] >  The IdentitySection can read and write information from and to the related section of the configuration file according to the section property <xref:System.Configuration.SectionInformation.AllowDefinition%2A> whose value is <xref:System.Configuration.ConfigurationAllowDefinition>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The IdentitySection provides a way to programmatically access and modify the <ph id=\"ph1\">`identity`</ph> section of a configuration file.","pos":[0,120],"source":"The IdentitySection provides a way to programmatically access and modify the `identity` section of a configuration file."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The IdentitySection can read and write information from and to the related section of the configuration file according to the section property &lt;xref:System.Configuration.SectionInformation.AllowDefinition%2A&gt; whose value is &lt;xref:System.Configuration.ConfigurationAllowDefinition&gt;.","pos":[126,420],"source":"      > [!NOTE] >  The IdentitySection can read and write information from and to the related section of the configuration file according to the section property <xref:System.Configuration.SectionInformation.AllowDefinition%2A> whose value is <xref:System.Configuration.ConfigurationAllowDefinition>."}]},{"pos":[5730,5857],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Configuration.IdentitySection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using default parameters.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Configuration.IdentitySection\"></xref> class using default parameters."},{"pos":[5869,5911],"content":"This constructor is for internal use only.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This constructor is for internal use only.","pos":[0,42]}]},{"pos":[6984,6996],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7481,7566],"content":"Gets or sets a value indicating whether client impersonation is used on each request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether client impersonation is used on each request.","pos":[0,85]}]},{"pos":[7579,8230],"content":"If the Impersonate property is set to `true`, each request is served by a Web application impersonating its client. That is, either the user currently logged on or the user specified by the <xref:System.Web.Configuration.IdentitySection.UserName%2A> and <xref:System.Web.Configuration.IdentitySection.Password%2A> properties. When the Impersonate property is set to `false`, the application does not impersonate any client user.      > [!NOTE] >  For security reasons, the identity section supports storage of the encrypted <xref:System.Web.Configuration.IdentitySection.UserName%2A> and <xref:System.Web.Configuration.IdentitySection.Password%2A>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the Impersonate property is set to <ph id=\"ph1\">`true`</ph>, each request is served by a Web application impersonating its client.","pos":[0,115],"source":"If the Impersonate property is set to `true`, each request is served by a Web application impersonating its client."},{"content":"That is, either the user currently logged on or the user specified by the &lt;xref:System.Web.Configuration.IdentitySection.UserName%2A&gt; and &lt;xref:System.Web.Configuration.IdentitySection.Password%2A&gt; properties.","pos":[116,325],"source":" That is, either the user currently logged on or the user specified by the <xref:System.Web.Configuration.IdentitySection.UserName%2A> and <xref:System.Web.Configuration.IdentitySection.Password%2A> properties."},{"content":"When the Impersonate property is set to <ph id=\"ph1\">`false`</ph>, the application does not impersonate any client user.","pos":[326,428],"source":" When the Impersonate property is set to `false`, the application does not impersonate any client user."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  For security reasons, the identity section supports storage of the encrypted &lt;xref:System.Web.Configuration.IdentitySection.UserName%2A&gt; and &lt;xref:System.Web.Configuration.IdentitySection.Password%2A&gt;.","pos":[434,648],"source":"      > [!NOTE] >  For security reasons, the identity section supports storage of the encrypted <xref:System.Web.Configuration.IdentitySection.UserName%2A> and <xref:System.Web.Configuration.IdentitySection.Password%2A>."}]},{"pos":[8809,9062],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if client impersonation is used; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if client impersonation is used; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,168],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if client impersonation is used; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[169,253],"source":" The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[9527,9597],"content":"Gets or sets a value indicating the password to use for impersonation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating the password to use for impersonation.","pos":[0,70]}]},{"pos":[9610,9925],"content":"Because the password is stored in clear text, an authenticated user with proper credentials on the domain where the server resides can read it.      > [!NOTE] >  For security reasons, the identity section supports storage of the encrypted <xref:System.Web.Configuration.IdentitySection.UserName%2A> and Password.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Because the password is stored in clear text, an authenticated user with proper credentials on the domain where the server resides can read it.","pos":[0,143]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  For security reasons, the identity section supports storage of the encrypted &lt;xref:System.Web.Configuration.IdentitySection.UserName%2A&gt; and Password.","pos":[149,312],"source":"      > [!NOTE] >  For security reasons, the identity section supports storage of the encrypted <xref:System.Web.Configuration.IdentitySection.UserName%2A> and Password."}]},{"pos":[10499,10537],"content":"The password to use for impersonation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The password to use for impersonation.","pos":[0,38]}]},{"pos":[11209,11221],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12034,12046],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13275,13287],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13385,13397],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13491,13503],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13964,14035],"content":"Gets or sets a value indicating the user name to use for impersonation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating the user name to use for impersonation.","pos":[0,71]}]},{"pos":[14048,14364],"content":"Because the user name is stored in clear text, an authenticated user with proper credentials on the domain where the server resides can read it.      > [!NOTE] >  For security reasons, the identity section supports storage of the encrypted UserName and <xref:System.Web.Configuration.IdentitySection.Password%2A>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Because the user name is stored in clear text, an authenticated user with proper credentials on the domain where the server resides can read it.","pos":[0,144]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  For security reasons, the identity section supports storage of the encrypted UserName and &lt;xref:System.Web.Configuration.IdentitySection.Password%2A&gt;.","pos":[150,313],"source":"      > [!NOTE] >  For security reasons, the identity section supports storage of the encrypted UserName and <xref:System.Web.Configuration.IdentitySection.Password%2A>."}]},{"pos":[14938,14977],"content":"The user name to use for impersonation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user name to use for impersonation.","pos":[0,39]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Configuration.IdentitySection\n  id: IdentitySection\n  children:\n  - System.Web.Configuration.IdentitySection.#ctor\n  - System.Web.Configuration.IdentitySection.GetRuntimeObject\n  - System.Web.Configuration.IdentitySection.Impersonate\n  - System.Web.Configuration.IdentitySection.Password\n  - System.Web.Configuration.IdentitySection.Properties\n  - System.Web.Configuration.IdentitySection.Reset(System.Configuration.ConfigurationElement)\n  - System.Web.Configuration.IdentitySection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  - System.Web.Configuration.IdentitySection.UserName\n  langs:\n  - csharp\n  name: IdentitySection\n  nameWithType: IdentitySection\n  fullName: System.Web.Configuration.IdentitySection\n  type: Class\n  summary: Configures the identity of a Web application. This class cannot be inherited.\n  remarks: \"The IdentitySection provides a way to programmatically access and modify the `identity` section of a configuration file.  \\n  \\n> [!NOTE]\\n>  The IdentitySection can read and write information from and to the related section of the configuration file according to the section property <xref:System.Configuration.SectionInformation.AllowDefinition%2A> whose value is <xref:System.Configuration.ConfigurationAllowDefinition>.\"\n  example:\n  - \"The following code example shows how to obtain the IdentitySection object from the configuration file of an existing Web application.  \\n  \\n [!code-vb[System.Web.Configuration.IdentitySection#1](~/add/codesnippet/visualbasic/t-system.web.configurati_76_1.vb)]\\n [!code-cs[System.Web.Configuration.IdentitySection#1](~/add/codesnippet/csharp/t-system.web.configurati_76_1.cs)]\"\n  syntax:\n    content: 'public sealed class IdentitySection : System.Configuration.ConfigurationSection'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  - System.Configuration.ConfigurationSection\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)\n  - System.Configuration.ConfigurationSection.IsModified\n  - System.Configuration.ConfigurationSection.ResetModified\n  - System.Configuration.ConfigurationSection.SectionInformation\n  - System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)\n  - System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)\n  - System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)\n  platform:\n  - net462\n- uid: System.Web.Configuration.IdentitySection.#ctor\n  id: '#ctor'\n  parent: System.Web.Configuration.IdentitySection\n  langs:\n  - csharp\n  name: IdentitySection()\n  nameWithType: IdentitySection.IdentitySection()\n  fullName: System.Web.Configuration.IdentitySection.IdentitySection()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Web.Configuration.IdentitySection\"></xref> class using default parameters.\n  remarks: This constructor is for internal use only.\n  example:\n  - \"The following code example shows how to create an <xref:System.Web.Configuration.IdentitySection> object.  \\n  \\n [!code-vb[System.Web.Configuration.IdentitySection#2](~/add/codesnippet/visualbasic/m-system.web.configurati_20_1.vb)]\\n [!code-cs[System.Web.Configuration.IdentitySection#2](~/add/codesnippet/csharp/m-system.web.configurati_20_1.cs)]\"\n  syntax:\n    content: public IdentitySection ();\n    parameters: []\n  overload: System.Web.Configuration.IdentitySection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.IdentitySection.GetRuntimeObject\n  id: GetRuntimeObject\n  parent: System.Web.Configuration.IdentitySection\n  langs:\n  - csharp\n  name: GetRuntimeObject()\n  nameWithType: IdentitySection.GetRuntimeObject()\n  fullName: System.Web.Configuration.IdentitySection.GetRuntimeObject()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  syntax:\n    content: protected override object GetRuntimeObject ();\n    parameters: []\n    return:\n      type: System.Object\n      description: To be added.\n  overload: System.Web.Configuration.IdentitySection.GetRuntimeObject*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.IdentitySection.Impersonate\n  id: Impersonate\n  parent: System.Web.Configuration.IdentitySection\n  langs:\n  - csharp\n  name: Impersonate\n  nameWithType: IdentitySection.Impersonate\n  fullName: System.Web.Configuration.IdentitySection.Impersonate\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets a value indicating whether client impersonation is used on each request.\n  remarks: \"If the Impersonate property is set to `true`, each request is served by a Web application impersonating its client. That is, either the user currently logged on or the user specified by the <xref:System.Web.Configuration.IdentitySection.UserName%2A> and <xref:System.Web.Configuration.IdentitySection.Password%2A> properties. When the Impersonate property is set to `false`, the application does not impersonate any client user.  \\n  \\n> [!NOTE]\\n>  For security reasons, the identity section supports storage of the encrypted <xref:System.Web.Configuration.IdentitySection.UserName%2A> and <xref:System.Web.Configuration.IdentitySection.Password%2A>.\"\n  example:\n  - \"The following code example shows how to access the Impersonate property. Refer to the code example of the <xref:System.Web.Configuration.IdentitySection> class to learn how to access the section.  \\n  \\n [!code-vb[System.Web.Configuration.IdentitySection#5](~/add/codesnippet/visualbasic/p-system.web.configurati_304_1.vb)]\\n [!code-cs[System.Web.Configuration.IdentitySection#5](~/add/codesnippet/csharp/p-system.web.configurati_304_1.cs)]\"\n  syntax:\n    content: public bool Impersonate { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if client impersonation is used; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.Configuration.IdentitySection.Impersonate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.IdentitySection.Password\n  id: Password\n  parent: System.Web.Configuration.IdentitySection\n  langs:\n  - csharp\n  name: Password\n  nameWithType: IdentitySection.Password\n  fullName: System.Web.Configuration.IdentitySection.Password\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets a value indicating the password to use for impersonation.\n  remarks: \"Because the password is stored in clear text, an authenticated user with proper credentials on the domain where the server resides can read it.  \\n  \\n> [!NOTE]\\n>  For security reasons, the identity section supports storage of the encrypted <xref:System.Web.Configuration.IdentitySection.UserName%2A> and Password.\"\n  example:\n  - \"The following code example shows how to access the Password property. Refer to the code example of the <xref:System.Web.Configuration.IdentitySection> class to learn how to access the section.  \\n  \\n [!code-vb[System.Web.Configuration.IdentitySection#3](~/add/codesnippet/visualbasic/p-system.web.configurati_268_1.vb)]\\n [!code-cs[System.Web.Configuration.IdentitySection#3](~/add/codesnippet/csharp/p-system.web.configurati_268_1.cs)]\"\n  syntax:\n    content: public string Password { get; set; }\n    return:\n      type: System.String\n      description: The password to use for impersonation.\n  overload: System.Web.Configuration.IdentitySection.Password*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.IdentitySection.Properties\n  id: Properties\n  parent: System.Web.Configuration.IdentitySection\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: IdentitySection.Properties\n  fullName: System.Web.Configuration.IdentitySection.Properties\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: To be added.\n  overload: System.Web.Configuration.IdentitySection.Properties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.IdentitySection.Reset(System.Configuration.ConfigurationElement)\n  id: Reset(System.Configuration.ConfigurationElement)\n  parent: System.Web.Configuration.IdentitySection\n  langs:\n  - csharp\n  name: Reset(ConfigurationElement)\n  nameWithType: IdentitySection.Reset(ConfigurationElement)\n  fullName: System.Web.Configuration.IdentitySection.Reset(ConfigurationElement)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  syntax:\n    content: protected override void Reset (System.Configuration.ConfigurationElement parentElement);\n    parameters:\n    - id: parentElement\n      type: System.Configuration.ConfigurationElement\n      description: To be added.\n  overload: System.Web.Configuration.IdentitySection.Reset*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.IdentitySection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  id: Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  parent: System.Web.Configuration.IdentitySection\n  langs:\n  - csharp\n  name: Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)\n  nameWithType: IdentitySection.Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)\n  fullName: System.Web.Configuration.IdentitySection.Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  syntax:\n    content: protected override void Unmerge (System.Configuration.ConfigurationElement sourceElement, System.Configuration.ConfigurationElement parentElement, System.Configuration.ConfigurationSaveMode saveMode);\n    parameters:\n    - id: sourceElement\n      type: System.Configuration.ConfigurationElement\n      description: To be added.\n    - id: parentElement\n      type: System.Configuration.ConfigurationElement\n      description: To be added.\n    - id: saveMode\n      type: System.Configuration.ConfigurationSaveMode\n      description: To be added.\n  overload: System.Web.Configuration.IdentitySection.Unmerge*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.IdentitySection.UserName\n  id: UserName\n  parent: System.Web.Configuration.IdentitySection\n  langs:\n  - csharp\n  name: UserName\n  nameWithType: IdentitySection.UserName\n  fullName: System.Web.Configuration.IdentitySection.UserName\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets a value indicating the user name to use for impersonation.\n  remarks: \"Because the user name is stored in clear text, an authenticated user with proper credentials on the domain where the server resides can read it.  \\n  \\n> [!NOTE]\\n>  For security reasons, the identity section supports storage of the encrypted UserName and <xref:System.Web.Configuration.IdentitySection.Password%2A>.\"\n  example:\n  - \"The following code example shows how to access the UserName property. Refer to the code example of the <xref:System.Web.Configuration.IdentitySection> class to learn how to access the section.  \\n  \\n [!code-vb[System.Web.Configuration.IdentitySection#4](~/add/codesnippet/visualbasic/p-system.web.configurati_153_1.vb)]\\n [!code-cs[System.Web.Configuration.IdentitySection#4](~/add/codesnippet/csharp/p-system.web.configurati_153_1.cs)]\"\n  syntax:\n    content: public string UserName { get; set; }\n    return:\n      type: System.String\n      description: The user name to use for impersonation.\n  overload: System.Web.Configuration.IdentitySection.UserName*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: System.Configuration.ConfigurationSection\n- uid: System.Web.Configuration.IdentitySection.#ctor\n  parent: System.Web.Configuration.IdentitySection\n  isExternal: false\n  name: IdentitySection()\n  nameWithType: IdentitySection.IdentitySection()\n  fullName: System.Web.Configuration.IdentitySection.IdentitySection()\n- uid: System.Web.Configuration.IdentitySection.GetRuntimeObject\n  parent: System.Web.Configuration.IdentitySection\n  isExternal: false\n  name: GetRuntimeObject()\n  nameWithType: IdentitySection.GetRuntimeObject()\n  fullName: System.Web.Configuration.IdentitySection.GetRuntimeObject()\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.Configuration.IdentitySection.Impersonate\n  parent: System.Web.Configuration.IdentitySection\n  isExternal: false\n  name: Impersonate\n  nameWithType: IdentitySection.Impersonate\n  fullName: System.Web.Configuration.IdentitySection.Impersonate\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.Configuration.IdentitySection.Password\n  parent: System.Web.Configuration.IdentitySection\n  isExternal: false\n  name: Password\n  nameWithType: IdentitySection.Password\n  fullName: System.Web.Configuration.IdentitySection.Password\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.Configuration.IdentitySection.Properties\n  parent: System.Web.Configuration.IdentitySection\n  isExternal: false\n  name: Properties\n  nameWithType: IdentitySection.Properties\n  fullName: System.Web.Configuration.IdentitySection.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.Web.Configuration.IdentitySection.Reset(System.Configuration.ConfigurationElement)\n  parent: System.Web.Configuration.IdentitySection\n  isExternal: false\n  name: Reset(ConfigurationElement)\n  nameWithType: IdentitySection.Reset(ConfigurationElement)\n  fullName: System.Web.Configuration.IdentitySection.Reset(ConfigurationElement)\n- uid: System.Configuration.ConfigurationElement\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationElement\n  nameWithType: ConfigurationElement\n  fullName: System.Configuration.ConfigurationElement\n- uid: System.Web.Configuration.IdentitySection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  parent: System.Web.Configuration.IdentitySection\n  isExternal: false\n  name: Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)\n  nameWithType: IdentitySection.Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)\n  fullName: System.Web.Configuration.IdentitySection.Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)\n- uid: System.Configuration.ConfigurationSaveMode\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationSaveMode\n  nameWithType: ConfigurationSaveMode\n  fullName: System.Configuration.ConfigurationSaveMode\n- uid: System.Web.Configuration.IdentitySection.UserName\n  parent: System.Web.Configuration.IdentitySection\n  isExternal: false\n  name: UserName\n  nameWithType: IdentitySection.UserName\n  fullName: System.Web.Configuration.IdentitySection.UserName\n- uid: System.Web.Configuration.IdentitySection.#ctor*\n  parent: System.Web.Configuration.IdentitySection\n  isExternal: false\n  name: IdentitySection\n  nameWithType: IdentitySection.IdentitySection\n- uid: System.Web.Configuration.IdentitySection.GetRuntimeObject*\n  parent: System.Web.Configuration.IdentitySection\n  isExternal: false\n  name: GetRuntimeObject\n  nameWithType: IdentitySection.GetRuntimeObject\n- uid: System.Web.Configuration.IdentitySection.Impersonate*\n  parent: System.Web.Configuration.IdentitySection\n  isExternal: false\n  name: Impersonate\n  nameWithType: IdentitySection.Impersonate\n- uid: System.Web.Configuration.IdentitySection.Password*\n  parent: System.Web.Configuration.IdentitySection\n  isExternal: false\n  name: Password\n  nameWithType: IdentitySection.Password\n- uid: System.Web.Configuration.IdentitySection.Properties*\n  parent: System.Web.Configuration.IdentitySection\n  isExternal: false\n  name: Properties\n  nameWithType: IdentitySection.Properties\n- uid: System.Web.Configuration.IdentitySection.Reset*\n  parent: System.Web.Configuration.IdentitySection\n  isExternal: false\n  name: Reset\n  nameWithType: IdentitySection.Reset\n- uid: System.Web.Configuration.IdentitySection.Unmerge*\n  parent: System.Web.Configuration.IdentitySection\n  isExternal: false\n  name: Unmerge\n  nameWithType: IdentitySection.Unmerge\n- uid: System.Web.Configuration.IdentitySection.UserName*\n  parent: System.Web.Configuration.IdentitySection\n  isExternal: false\n  name: UserName\n  nameWithType: IdentitySection.UserName\n"}