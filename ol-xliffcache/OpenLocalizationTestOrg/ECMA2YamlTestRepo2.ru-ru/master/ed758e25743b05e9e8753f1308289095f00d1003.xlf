<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ed758e25743b05e9e8753f1308289095f00d1003</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.UI.WebControls.TemplateField.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0d55c8368e72e42a98919abe3108a8bc6a46f871</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4e73f7f8c6bff6ac44db755ef395c9ea7e9e3c3d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a field that displays custom content in a data-bound control.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The TemplateField class is used by data-bound controls (such as &lt;xref:System.Web.UI.WebControls.GridView&gt; and &lt;xref:System.Web.UI.WebControls.DetailsView&gt;) to display custom content for each record displayed.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you need to display content in a data-bound control that is not provided by one of the predefined data control fields (such as &lt;xref:System.Web.UI.WebControls.BoundField&gt;), use the TemplateField class to create your custom user interface (UI).</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The TemplateField object is displayed differently depending on the data-bound control in which it is used.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the &lt;xref:System.Web.UI.WebControls.GridView&gt; control displays a TemplateField object as a column, and the &lt;xref:System.Web.UI.WebControls.DetailsView&gt; control displays it as a row.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can define a custom template for the different parts of the TemplateField object using the templates listed in the following table.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Template|Description|   |--------------|-----------------|   |&lt;xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A&gt;|Specifies the content to display for the alternating items in a TemplateField object.|   |&lt;xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A&gt;|Specifies the content to display for an item in edit mode in a TemplateField object.|   |&lt;xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A&gt;|Specifies the content to display for the footer section of a TemplateField object.|   |&lt;xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A&gt;|Specifies the content to display for the header section of a TemplateField object.|   |&lt;xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A&gt;|Specifies the content to display for an item in insert mode in a TemplateField object.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>This template is supported only by the &lt;xref:System.Web.UI.WebControls.DetailsView&gt; control.|   |&lt;xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A&gt;|Specifies the content to display for the items in a TemplateField object.|       You can hide a TemplateField object in a data-bound control by setting the &lt;xref:System.Web.UI.WebControls.DataControlField.Visible%2A&gt; property to <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>As an alternative to defining a custom &lt;xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A&gt; or &lt;xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A&gt; template, you can customize the header and footer sections of a TemplateField object by setting other properties of the TemplateField object.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>To display a caption in the header or footer sections, set the &lt;xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A&gt; or the &lt;xref:System.Web.UI.WebControls.DataControlField.FooterText%2A&gt; property, respectively.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead of displaying text in the header section, you can display an image by setting the &lt;xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The header section can be hidden in the TemplateField object by setting the &lt;xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A&gt; property to <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Some data-bound controls (such as the &lt;xref:System.Web.UI.WebControls.GridView&gt; control) can show or hide only the entire header section of the control.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>These data-bound controls do not support the &lt;xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A&gt; property for an individual bound field.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>To show or hide the entire header section of a data-bound control, use the control's <ph id="ph1">`ShowHeader`</ph> property (if available).</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>You also can customize the appearance of the TemplateField object (font color, background color, and so on) by setting the style properties for the different parts of the field.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the different style properties.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Style property|Description|   |--------------------|-----------------|   |&lt;xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A&gt;|The style settings for the child Web server controls of the TemplateField object.|   |&lt;xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A&gt;|The style settings for the footer section of the TemplateField object.|   |&lt;xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A&gt;|The style settings for the header section of the TemplateField object.|   |&lt;xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A&gt;|The style settings for the data items in the TemplateField object.|</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.TemplateField"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this constructor to initialize a new instance of the &lt;xref:System.Web.UI.WebControls.TemplateField&gt; class.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is commonly used when adding fields to a dynamically created data-bound control.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>To dynamically add a &lt;xref:System.Web.UI.WebControls.TemplateField&gt; object to a data-bound control, create a new &lt;xref:System.Web.UI.WebControls.TemplateField&gt; object, define the appropriate templates, and then add it to the data-bound control's field collection.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you are using the &lt;xref:System.Web.UI.WebControls.GridView&gt; control, add the &lt;xref:System.Web.UI.WebControls.TemplateField&gt; object to the &lt;xref:System.Web.UI.WebControls.GridView.Columns%2A&gt; collection.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Although you can dynamically add fields to a data-bound control, it is strongly recommended that fields be statically declared and then shown or hidden, as appropriate.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Statically declaring all your fields reduces the size of the view state for the parent data-bound control.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets or sets the template for displaying the alternating items in a <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.TemplateField"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the AlternatingItemTemplate property to specify the custom content displayed for the alternating items in a &lt;xref:System.Web.UI.WebControls.TemplateField&gt; object.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Define the content by creating a template that specifies how the alternating items are rendered.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The AlternatingItemTemplate property is commonly used in combination with the &lt;xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A&gt; property to create a different appearance for every other item in the data-bound control.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>To specify a template, first place opening and closing <ph id="ph1">`&lt;AlternatingItemTemplate&gt;`</ph> tags between the opening and closing tags of  the <ph id="ph2">`&lt;TemplateField&gt;`</ph> element.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Next, add the custom content between the opening and closing <ph id="ph1">`&lt;AlternatingItemTemplate&gt;`</ph> tags.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The content can be as simple as plain text or more complex (embedding other controls in the template, for example).</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>To programmatically access a control defined in a template, first determine which &lt;xref:System.Web.UI.WebControls.TableCell&gt; object in the data-bound control contains the control.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Next, use the &lt;xref:System.Web.UI.Control.Controls%2A&gt; collection of the &lt;xref:System.Web.UI.WebControls.TableCell&gt; object to access the control.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use the &lt;xref:System.Web.UI.Control.FindControl%2A&gt; method of the &lt;xref:System.Web.UI.WebControls.TableCell&gt; object to find the control, if the control has an &lt;xref:System.Web.UI.Control.ID%2A&gt; property specified.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.UI.ITemplate"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>-implemented object that contains the template for displaying the alternating items in a <bpt id="p2">&lt;xref href="System.Web.UI.WebControls.TemplateField"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, which indicates that this property is not set.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the value that the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.TemplateField"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is bound to should be converted to <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if it is &lt;xref:System.String.Empty&gt;.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property applies to two-way data-binding statements made in the template.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The conversion is done after extracting the values from the two-way bound template, and before passing the values to the data source for an update or insertion operation.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a user might enter an empty string ("") for a field value when updating or inserting records.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the ConvertEmptyStringToNull property to specify whether an empty string value is automatically converted to <ph id="ph1">`null`</ph> when the data field is updated in the data source.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the value that the <bpt id="p2">&lt;xref href="System.Web.UI.WebControls.TemplateField"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is bound to should be converted to <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> when it is &lt;xref:System.String.Empty&gt;; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Copies the properties of the current <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.TemplateField"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>-derived object to the specified <bpt id="p2">&lt;xref href="System.Web.UI.WebControls.DataControlField"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The CopyProperties method is a helper method used to copy the properties of the current &lt;xref:System.Web.UI.WebControls.TemplateField&gt;-derived object to the &lt;xref:System.Web.UI.WebControls.DataControlField&gt; object created by the method.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.DataControlField"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to copy the properties of the current <bpt id="p2">&lt;xref href="System.Web.UI.WebControls.TemplateField"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Creates a new <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.TemplateField"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The CreateField method overrides the base method to return a &lt;xref:System.Web.UI.WebControls.TemplateField&gt; object.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Always returns a new <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.TemplateField"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Gets or sets the template for displaying an item in edit mode in a <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.TemplateField"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the EditItemTemplate property to specify the custom content displayed for an item that is in edit mode in a &lt;xref:System.Web.UI.WebControls.TemplateField&gt; object.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>Define the content by creating a template that specifies how an item in edit mode is rendered.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>The EditItemTemplate property usually contains input controls for the user to modify a value in a data source.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>To specify a template, first place opening and closing <ph id="ph1">`&lt;EditItemTemplate&gt;`</ph> tags between the opening and closing tags of the <ph id="ph2">`&lt;TemplateField&gt;`</ph> element.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>Next, add the custom content between the opening and closing <ph id="ph1">`&lt;EditItemTemplate&gt;`</ph> tags.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>The content can be as simple as plain text or more complex (embedding other controls in the template, for example).</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>To programmatically access a control defined in a template, first determine which &lt;xref:System.Web.UI.WebControls.TableCell&gt; object in the data-bound control contains the control.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Next, use the &lt;xref:System.Web.UI.Control.Controls%2A&gt; collection of the &lt;xref:System.Web.UI.WebControls.TableCell&gt; object to access the control.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use the &lt;xref:System.Web.UI.Control.FindControl%2A&gt; method of the &lt;xref:System.Web.UI.WebControls.TableCell&gt; object to find the control, if the control has an &lt;xref:System.Web.UI.Control.ID%2A&gt; property specified.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.UI.ITemplate"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>-implemented object that contains the template for displaying an item in edit mode in a <bpt id="p2">&lt;xref href="System.Web.UI.WebControls.TemplateField"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, which indicates that this property is not set.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Extracts the value of the data control fields as specified by one or more two-way binding statements (<bpt id="p1">&lt;xref uid="langword_csharp_DataBind" name="DataBind" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) from the current table cell and adds the values to the specified <bpt id="p2">&lt;xref href="System.Collections.Specialized.IOrderedDictionary"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> collection.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ExtractValuesFromCell method is implemented by types derived from &lt;xref:System.Web.UI.WebControls.DataControlField&gt;, such as &lt;xref:System.Web.UI.WebControls.TemplateField&gt;.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called to extract the values of two-way data-bound fields in the template to populate dictionaries to be passed to the data source for an update, insert, or delete operation.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The field/value pair is stored in the dictionary collection that is passed to the method.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ExtractValuesFromCell method is called by the <ph id="ph1">`ExtractRowValues`</ph> method of data controls such as &lt;xref:System.Web.UI.WebControls.DetailsView&gt; and &lt;xref:System.Web.UI.WebControls.GridView&gt;.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Collections.Specialized.IOrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.DataControlFieldCell"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the text or controls of the <bpt id="p2">&lt;xref href="System.Web.UI.WebControls.TemplateField"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.DataControlRowState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to indicate that the values of read-only fields are included in the <ph id="ph1">`dictionary`</ph> collection; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Gets or sets the template for displaying the footer section of a <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.TemplateField"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the FooterTemplate property to specify the custom content displayed in the footer section of a &lt;xref:System.Web.UI.WebControls.TemplateField&gt; object.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>Define the content by creating a template that specifies how the footer section is rendered.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>To specify a template, first place opening and closing <ph id="ph1">`&lt;FooterTemplate&gt;`</ph> tags between the opening and closing tags of the <ph id="ph2">`&lt;TemplateField&gt;`</ph> element.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>Next, add the custom content between the opening and closing <ph id="ph1">`&lt;FooterTemplate&gt;`</ph> tags.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>The content can be as simple as plain text or more complex (embedding other controls in the template, for example).</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>To programmatically access a control defined in a template, first determine which &lt;xref:System.Web.UI.WebControls.TableCell&gt; object in the data-bound control contains the control.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>Next, use the &lt;xref:System.Web.UI.Control.Controls%2A&gt; collection of the &lt;xref:System.Web.UI.WebControls.TableCell&gt; object to access the control.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use the &lt;xref:System.Web.UI.Control.FindControl%2A&gt; method of the &lt;xref:System.Web.UI.WebControls.TableCell&gt; object to find the control, if the control has an &lt;xref:System.Web.UI.Control.ID%2A&gt; property specified.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.UI.ITemplate"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>-implemented object that contains the template for displaying the footer section of a <bpt id="p2">&lt;xref href="System.Web.UI.WebControls.TemplateField"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, which indicates that this property is not set.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Gets or sets the template for displaying the header section of a <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.TemplateField"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the HeaderTemplate property to specify the custom content displayed for the header section of a &lt;xref:System.Web.UI.WebControls.TemplateField&gt; object.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>Define the content by creating a template that specifies how the header section is rendered.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>To specify a template, first place opening and closing <ph id="ph1">`&lt;HeaderTemplate&gt;`</ph> tags between the opening and closing tags of the <ph id="ph2">`&lt;TemplateField&gt;`</ph> element.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>Next, add the custom content between the opening and closing <ph id="ph1">`&lt;HeaderTemplate&gt;`</ph> tags.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>The content can be as simple as plain text or more complex (embedding other controls in the template, for example).</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>To programmatically access a control defined in a template, first determine which &lt;xref:System.Web.UI.WebControls.TableCell&gt; object in the data-bound control contains the control.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>Next, use the &lt;xref:System.Web.UI.Control.Controls%2A&gt; collection of the &lt;xref:System.Web.UI.WebControls.TableCell&gt; object to access the control.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use the &lt;xref:System.Web.UI.Control.FindControl%2A&gt; method of the &lt;xref:System.Web.UI.WebControls.TableCell&gt; object to find the control, if the control has an &lt;xref:System.Web.UI.Control.ID%2A&gt; property specified.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.UI.ITemplate"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>-implemented object that contains the template for displaying the header section of a <bpt id="p2">&lt;xref href="System.Web.UI.WebControls.TemplateField"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> in a data-bound control.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, which indicates that this property is not set.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Adds text or controls to a cell's controls collection.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this method when you are creating a custom data-bound control that uses &lt;xref:System.Web.UI.WebControls.DataControlFieldCell&gt; objects to initialize the cells of the table structure with data or controls.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.DataControlFieldCell"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the text or controls of the <bpt id="p2">&lt;xref href="System.Web.UI.WebControls.DataControlField"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.DataControlCellType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.DataControlRowState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values, specifying the state of the row that contains the <bpt id="p2">&lt;xref href="System.Web.UI.WebControls.DataControlFieldCell"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The index of the row that the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.DataControlFieldCell"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is contained in.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Gets or sets the template for displaying an item in insert mode in a <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.TemplateField"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the InsertItemTemplate property to specify the custom content displayed for an item in insert mode in a &lt;xref:System.Web.UI.WebControls.TemplateField&gt; object.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>Define the content by creating a template that specifies how the item in insert mode is rendered.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>To specify a template, first place opening and closing <ph id="ph1">`&lt;InsertItemTemplate&gt;`</ph> tags between the opening and closing tags of the <ph id="ph2">`&lt;TemplateField&gt;`</ph> element.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>Next, add the custom content between the opening and closing <ph id="ph1">`&lt;InsertItemTemplate&gt;`</ph> tags.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>The content can be as simple as plain text or more complex (embedding other controls in the template, for example).</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>To programmatically access a control defined in a template, first determine which &lt;xref:System.Web.UI.WebControls.TableCell&gt; object in the data-bound control contains the control.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>Next, use the &lt;xref:System.Web.UI.Control.Controls%2A&gt; collection of the &lt;xref:System.Web.UI.WebControls.TableCell&gt; object to access the control.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use the &lt;xref:System.Web.UI.Control.FindControl%2A&gt; method of the &lt;xref:System.Web.UI.WebControls.TableCell&gt; object to find the control, if the control has an &lt;xref:System.Web.UI.Control.ID%2A&gt; property specified.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Not all data-bound controls support this template This template is supported only by data-bound controls that allow you to insert a record, such as the &lt;xref:System.Web.UI.WebControls.DetailsView&gt; control.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.UI.ITemplate"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>-implemented object that contains the template for displaying an item in insert mode in a <bpt id="p2">&lt;xref href="System.Web.UI.WebControls.TemplateField"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, which indicates that this property is not set.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Gets or sets the template for displaying an item in a data-bound control.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the ItemTemplate property to specify the custom content displayed for the items in a &lt;xref:System.Web.UI.WebControls.TemplateField&gt; object.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>Define the content by creating a template that specifies how the items are rendered.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You can optionally define the &lt;xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A&gt; property in combination with the ItemTemplate property to create a different appearance for every other item in the data-bound control.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>To specify a template, first place opening and closing <ph id="ph1">`&lt;ItemTemplate&gt;`</ph> tags between the opening and closing tags of the <ph id="ph2">`&lt;TemplateField&gt;`</ph> element.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>Next, add the custom content between the opening and closing <ph id="ph1">`&lt;ItemTemplate&gt;`</ph> tags.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>The content can be as simple as plain text or more complex (embedding other controls in the template, for example).</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>To programmatically access a control defined in a template, first determine which &lt;xref:System.Web.UI.WebControls.TableCell&gt; object in the data-bound control contains the control.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>Next, use the &lt;xref:System.Web.UI.Control.Controls%2A&gt; collection of the &lt;xref:System.Web.UI.WebControls.TableCell&gt; object to access the control.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use the &lt;xref:System.Web.UI.Control.FindControl%2A&gt; method of the &lt;xref:System.Web.UI.WebControls.TableCell&gt; object to find the control, if the control has an &lt;xref:System.Web.UI.Control.ID%2A&gt; property specified.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.UI.ITemplate"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>-implemented object that contains the template for displaying an item in a <bpt id="p2">&lt;xref href="System.Web.UI.WebControls.TemplateField"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, which indicates that this property is not set.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether the control validates client input.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the control validates client input; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Determines whether the controls contained in a <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.TemplateField"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object support page callbacks.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ValidateSupportsCallback method is not supported for this class and always throws a &lt;xref:System.NotSupportedException&gt; exception.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The default implementation of this method is called.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>