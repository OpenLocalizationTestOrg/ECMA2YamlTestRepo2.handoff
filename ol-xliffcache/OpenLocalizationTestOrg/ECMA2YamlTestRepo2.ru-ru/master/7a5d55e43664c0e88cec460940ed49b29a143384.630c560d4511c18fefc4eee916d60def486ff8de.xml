{"nodes":[{"pos":[1040,1148],"content":"Defines a permission set that has a name and description associated with it. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines a permission set that has a name and description associated with it. This class cannot be inherited.","pos":[0,108],"nodes":[{"content":"Defines a permission set that has a name and description associated with it.","pos":[0,76]},{"content":"This class cannot be inherited.","pos":[77,108]}]}]},{"pos":[1160,1417],"content":"Named permission sets are used in security policy administration to specify the permissions to be granted to code that belongs to certain code groups. Names are strings of alphanumeric characters. Description strings can consist of any printable characters.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Named permission sets are used in security policy administration to specify the permissions to be granted to code that belongs to certain code groups. Names are strings of alphanumeric characters. Description strings can consist of any printable characters.","pos":[0,257],"nodes":[{"content":"Named permission sets are used in security policy administration to specify the permissions to be granted to code that belongs to certain code groups.","pos":[0,150]},{"content":"Names are strings of alphanumeric characters.","pos":[151,196]},{"content":"Description strings can consist of any printable characters.","pos":[197,257]}]}]},{"pos":[4199,4329],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.NamedPermissionSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class from another named permission set.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.NamedPermissionSet\"></xref> class from another named permission set."},{"pos":[4525,4588],"content":"The named permission set from which to create the new instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The named permission set from which to create the new instance.","pos":[0,63]}]},{"pos":[5098,5225],"content":"Initializes a new, empty instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.NamedPermissionSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified name.","needQuote":true,"needEscape":true,"source":"Initializes a new, empty instance of the <xref href=\"System.Security.NamedPermissionSet\"></xref> class with the specified name."},{"pos":[5237,5948],"content":"Using this constructor creates a named permission set with no permissions but with an <xref:System.Security.Permissions.PermissionState> permission state. A named permission set in an unrestricted state effectively contains all permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface. The named permission set will contain all built-in permissions as well as all custom user-defined permissions that implement <xref:System.Security.Permissions.IUnrestrictedPermission>. All permissions will have the equivalent of an `Unrestricted` permission state. Permissions that do not implement <xref:System.Security.Permissions.IUnrestrictedPermission> will be empty instances.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Using this constructor creates a named permission set with no permissions but with an &lt;xref:System.Security.Permissions.PermissionState&gt; permission state.","pos":[0,154],"source":"Using this constructor creates a named permission set with no permissions but with an <xref:System.Security.Permissions.PermissionState> permission state."},{"content":"A named permission set in an unrestricted state effectively contains all permissions that implement the &lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt; interface.","pos":[155,328],"source":" A named permission set in an unrestricted state effectively contains all permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface."},{"content":"The named permission set will contain all built-in permissions as well as all custom user-defined permissions that implement &lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;.","pos":[329,513],"source":" The named permission set will contain all built-in permissions as well as all custom user-defined permissions that implement <xref:System.Security.Permissions.IUnrestrictedPermission>."},{"content":"All permissions will have the equivalent of an <ph id=\"ph1\">`Unrestricted`</ph> permission state.","pos":[514,593],"source":" All permissions will have the equivalent of an `Unrestricted` permission state."},{"content":"Permissions that do not implement &lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt; will be empty instances.","pos":[594,711],"source":" Permissions that do not implement <xref:System.Security.Permissions.IUnrestrictedPermission> will be empty instances."}]},{"pos":[6089,6131],"content":"The name for the new named permission set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name for the new named permission set.","pos":[0,42]}]},{"pos":[6294,6417],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> or is an empty string (\"\").","needQuote":true,"needEscape":true,"source":"The <code>name</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or is an empty string (\"\")."},{"pos":[6992,7166],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.NamedPermissionSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified name in either an unrestricted or a fully restricted state.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.NamedPermissionSet\"></xref> class with the specified name in either an unrestricted or a fully restricted state."},{"pos":[7178,7693],"content":"A named permission set in an unrestricted state effectively contains all permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface. The named permission set will contain all built-in permissions as well as all custom permissions. All permissions will have an `Unrestricted`<xref:System.Security.Permissions.PermissionState>. Permissions that do not implement <xref:System.Security.Permissions.IUnrestrictedPermission>, such as identity permissions, will be empty instances.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A named permission set in an unrestricted state effectively contains all permissions that implement the &lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt; interface.","pos":[0,173],"source":"A named permission set in an unrestricted state effectively contains all permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface."},{"content":"The named permission set will contain all built-in permissions as well as all custom permissions.","pos":[174,271]},{"content":"All permissions will have an <ph id=\"ph1\">`Unrestricted`</ph>&lt;xref:System.Security.Permissions.PermissionState&gt;.","pos":[272,366],"source":" All permissions will have an `Unrestricted`<xref:System.Security.Permissions.PermissionState>."},{"content":"Permissions that do not implement &lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;, such as identity permissions, will be empty instances.","pos":[367,515],"source":" Permissions that do not implement <xref:System.Security.Permissions.IUnrestrictedPermission>, such as identity permissions, will be empty instances."}]},{"pos":[7885,7927],"content":"The name for the new named permission set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name for the new named permission set.","pos":[0,42]}]},{"pos":[8019,8102],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values."},{"pos":[8265,8388],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> or is an empty string (\"\").","needQuote":true,"needEscape":true,"source":"The <code>name</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or is an empty string (\"\")."},{"pos":[8929,9071],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.NamedPermissionSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified name from a permission set.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.NamedPermissionSet\"></xref> class with the specified name from a permission set."},{"pos":[9664,9702],"content":"The name for the named permission set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name for the named permission set.","pos":[0,38]}]},{"pos":[9782,9862],"content":"The permission set from which to take the value of the new named permission set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The permission set from which to take the value of the new named permission set.","pos":[0,80]}]},{"pos":[10025,10148],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> or is an empty string (\"\").","needQuote":true,"needEscape":true,"source":"The <code>name</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or is an empty string (\"\")."},{"pos":[10488,10546],"content":"Creates a permission set copy from a named permission set.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a permission set copy from a named permission set.","pos":[0,58]}]},{"pos":[11120,11199],"content":"A permission set that is a copy of the permissions in the named permission set.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission set that is a copy of the permissions in the named permission set.","pos":[0,79]}]},{"pos":[11657,11747],"content":"Creates a copy of the named permission set with a different name but the same permissions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a copy of the named permission set with a different name but the same permissions.","pos":[0,90]}]},{"pos":[11909,11951],"content":"The name for the new named permission set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name for the new named permission set.","pos":[0,42]}]},{"pos":[12030,12083],"content":"A copy of the named permission set with the new name.","needQuote":true,"needEscape":true,"nodes":[{"content":"A copy of the named permission set with the new name.","pos":[0,53]}]},{"pos":[12245,12368],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> or is an empty string (\"\").","needQuote":true,"needEscape":true,"source":"The <code>name</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or is an empty string (\"\")."},{"pos":[12739,12809],"content":"Gets or sets the text description of the current named permission set.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the text description of the current named permission set.","pos":[0,70]}]},{"pos":[12821,12936],"content":"The description helps the administrator understand in words what permissions the set contains and its intended use.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The description helps the administrator understand in words what permissions the set contains and its intended use.","pos":[0,115]}]},{"pos":[13465,13512],"content":"A text description of the named permission set.","needQuote":true,"needEscape":true,"nodes":[{"content":"A text description of the named permission set.","pos":[0,47]}]},{"pos":[13987,14163],"content":"Determines whether the specified <bpt id=\"p1\">&lt;xref href=\"System.Security.NamedPermissionSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is equal to the current <bpt id=\"p2\">&lt;xref href=\"System.Security.NamedPermissionSet\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Determines whether the specified <xref href=\"System.Security.NamedPermissionSet\"></xref> object is equal to the current <xref href=\"System.Security.NamedPermissionSet\"></xref>."},{"pos":[14175,14232],"content":"For more information, see <xref:System.Object.Equals%2A>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"For more information, see &lt;xref:System.Object.Equals%2A&gt;.","pos":[0,57],"source":"For more information, see <xref:System.Object.Equals%2A>."}]},{"pos":[14755,14906],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.NamedPermissionSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to compare with the current <bpt id=\"p2\">&lt;xref href=\"System.Security.NamedPermissionSet\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.NamedPermissionSet\"></xref> object to compare with the current <xref href=\"System.Security.NamedPermissionSet\"></xref>."},{"pos":[14965,15261],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified <bpt id=\"p2\">&lt;xref href=\"System.Security.NamedPermissionSet\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is equal to the current <bpt id=\"p3\">&lt;xref href=\"System.Security.NamedPermissionSet\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> object; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref href=\"System.Security.NamedPermissionSet\"></xref> is equal to the current <xref href=\"System.Security.NamedPermissionSet\"></xref> object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[15799,15879],"content":"Reconstructs a named permission set with a specified state from an XML encoding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reconstructs a named permission set with a specified state from an XML encoding.","pos":[0,80]}]},{"pos":[15891,16042],"content":"This method recreates the state of a named permission set from an XML element previously created by <xref:System.Security.NamedPermissionSet.ToXml%2A>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method recreates the state of a named permission set from an XML element previously created by &lt;xref:System.Security.NamedPermissionSet.ToXml%2A&gt;.","pos":[0,151],"source":"This method recreates the state of a named permission set from an XML element previously created by <xref:System.Security.NamedPermissionSet.ToXml%2A>."}]},{"pos":[16606,16687],"content":"A security element containing the XML representation of the named permission set.","needQuote":true,"needEscape":true,"nodes":[{"content":"A security element containing the XML representation of the named permission set.","pos":[0,81]}]},{"pos":[16852,16938],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">et</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid representation of a named permission set.","needQuote":true,"needEscape":true,"source":"The <code>et</code> parameter is not a valid representation of a named permission set."},{"pos":[17041,17135],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">et</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>et</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[17510,17686],"content":"Gets a hash code for the <bpt id=\"p1\">&lt;xref href=\"System.Security.NamedPermissionSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that is suitable for use in hashing algorithms and data structures such as a hash table.","needQuote":true,"needEscape":true,"source":"Gets a hash code for the <xref href=\"System.Security.NamedPermissionSet\"></xref> object that is suitable for use in hashing algorithms and data structures such as a hash table."},{"pos":[17698,17869],"content":"The hash code for two instances of the same permission might differ, hence a hash code should not be used to compare two <xref:System.Security.NamedPermissionSet> objects.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The hash code for two instances of the same permission might differ, hence a hash code should not be used to compare two &lt;xref:System.Security.NamedPermissionSet&gt; objects.","pos":[0,171],"source":"The hash code for two instances of the same permission might differ, hence a hash code should not be used to compare two <xref:System.Security.NamedPermissionSet> objects."}]},{"pos":[18004,18095],"content":"A hash code for the current <bpt id=\"p1\">&lt;xref href=\"System.Security.NamedPermissionSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A hash code for the current <xref href=\"System.Security.NamedPermissionSet\"></xref> object."},{"pos":[18508,18566],"content":"Gets or sets the name of the current named permission set.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the current named permission set.","pos":[0,58]}]},{"pos":[18578,18623],"content":"Code groups refer to permission sets by name.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Code groups refer to permission sets by name.","pos":[0,45]}]},{"pos":[19121,19158],"content":"The name of the named permission set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the named permission set.","pos":[0,37]}]},{"pos":[19320,19420],"content":"The name is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or is an empty string (\"\").","needQuote":true,"needEscape":true,"source":"The name is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or is an empty string (\"\")."},{"pos":[19765,19828],"content":"Creates an XML element description of the named permission set.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an XML element description of the named permission set.","pos":[0,63]}]},{"pos":[19840,19955],"content":"Use <xref:System.Security.NamedPermissionSet.FromXml%2A> to recreate the state represented by the returned element.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use &lt;xref:System.Security.NamedPermissionSet.FromXml%2A&gt; to recreate the state represented by the returned element.","pos":[0,115],"source":"Use <xref:System.Security.NamedPermissionSet.FromXml%2A> to recreate the state represented by the returned element."}]},{"pos":[20510,20561],"content":"The XML representation of the named permission set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML representation of the named permission set.","pos":[0,51]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.NamedPermissionSet\n  id: NamedPermissionSet\n  children:\n  - System.Security.NamedPermissionSet.#ctor(System.Security.NamedPermissionSet)\n  - System.Security.NamedPermissionSet.#ctor(System.String)\n  - System.Security.NamedPermissionSet.#ctor(System.String,System.Security.Permissions.PermissionState)\n  - System.Security.NamedPermissionSet.#ctor(System.String,System.Security.PermissionSet)\n  - System.Security.NamedPermissionSet.Copy\n  - System.Security.NamedPermissionSet.Copy(System.String)\n  - System.Security.NamedPermissionSet.Description\n  - System.Security.NamedPermissionSet.Equals(System.Object)\n  - System.Security.NamedPermissionSet.FromXml(System.Security.SecurityElement)\n  - System.Security.NamedPermissionSet.GetHashCode\n  - System.Security.NamedPermissionSet.Name\n  - System.Security.NamedPermissionSet.ToXml\n  langs:\n  - csharp\n  name: NamedPermissionSet\n  nameWithType: NamedPermissionSet\n  fullName: System.Security.NamedPermissionSet\n  type: Class\n  summary: Defines a permission set that has a name and description associated with it. This class cannot be inherited.\n  remarks: Named permission sets are used in security policy administration to specify the permissions to be granted to code that belongs to certain code groups. Names are strings of alphanumeric characters. Description strings can consist of any printable characters.\n  example:\n  - \"The following code example shows the use of members of the NamedPermissionSet class.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class NamedPermissionSet : System.Security.PermissionSet\n  inheritance:\n  - System.Object\n  - System.Security.PermissionSet\n  implements: []\n  inheritedMembers:\n  - System.Security.PermissionSet.AddPermission(System.Security.IPermission)\n  - System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)\n  - System.Security.PermissionSet.Assert\n  - System.Security.PermissionSet.ContainsNonCodeAccessPermissions\n  - System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)\n  - System.Security.PermissionSet.CopyTo(System.Array,System.Int32)\n  - System.Security.PermissionSet.Count\n  - System.Security.PermissionSet.Demand\n  - System.Security.PermissionSet.Deny\n  - System.Security.PermissionSet.GetEnumerator\n  - System.Security.PermissionSet.GetEnumeratorImpl\n  - System.Security.PermissionSet.GetPermission(System.Type)\n  - System.Security.PermissionSet.GetPermissionImpl(System.Type)\n  - System.Security.PermissionSet.Intersect(System.Security.PermissionSet)\n  - System.Security.PermissionSet.IsEmpty\n  - System.Security.PermissionSet.IsReadOnly\n  - System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)\n  - System.Security.PermissionSet.IsSynchronized\n  - System.Security.PermissionSet.IsUnrestricted\n  - System.Security.PermissionSet.PermitOnly\n  - System.Security.PermissionSet.RemovePermission(System.Type)\n  - System.Security.PermissionSet.RemovePermissionImpl(System.Type)\n  - System.Security.PermissionSet.RevertAssert\n  - System.Security.PermissionSet.SetPermission(System.Security.IPermission)\n  - System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)\n  - System.Security.PermissionSet.SyncRoot\n  - System.Security.PermissionSet.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  - System.Security.PermissionSet.ToString\n  - System.Security.PermissionSet.Union(System.Security.PermissionSet)\n  platform:\n  - net462\n- uid: System.Security.NamedPermissionSet.#ctor(System.Security.NamedPermissionSet)\n  id: '#ctor(System.Security.NamedPermissionSet)'\n  parent: System.Security.NamedPermissionSet\n  langs:\n  - csharp\n  name: NamedPermissionSet(NamedPermissionSet)\n  nameWithType: NamedPermissionSet.NamedPermissionSet(NamedPermissionSet)\n  fullName: System.Security.NamedPermissionSet.NamedPermissionSet(NamedPermissionSet)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  summary: Initializes a new instance of the <xref href=\"System.Security.NamedPermissionSet\"></xref> class from another named permission set.\n  syntax:\n    content: public NamedPermissionSet (System.Security.NamedPermissionSet permSet);\n    parameters:\n    - id: permSet\n      type: System.Security.NamedPermissionSet\n      description: The named permission set from which to create the new instance.\n  overload: System.Security.NamedPermissionSet.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.NamedPermissionSet.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Security.NamedPermissionSet\n  langs:\n  - csharp\n  name: NamedPermissionSet(String)\n  nameWithType: NamedPermissionSet.NamedPermissionSet(String)\n  fullName: System.Security.NamedPermissionSet.NamedPermissionSet(String)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  summary: Initializes a new, empty instance of the <xref href=\"System.Security.NamedPermissionSet\"></xref> class with the specified name.\n  remarks: Using this constructor creates a named permission set with no permissions but with an <xref:System.Security.Permissions.PermissionState> permission state. A named permission set in an unrestricted state effectively contains all permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface. The named permission set will contain all built-in permissions as well as all custom user-defined permissions that implement <xref:System.Security.Permissions.IUnrestrictedPermission>. All permissions will have the equivalent of an `Unrestricted` permission state. Permissions that do not implement <xref:System.Security.Permissions.IUnrestrictedPermission> will be empty instances.\n  syntax:\n    content: public NamedPermissionSet (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name for the new named permission set.\n  overload: System.Security.NamedPermissionSet.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>name</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or is an empty string (\"\").\n  platform:\n  - net462\n- uid: System.Security.NamedPermissionSet.#ctor(System.String,System.Security.Permissions.PermissionState)\n  id: '#ctor(System.String,System.Security.Permissions.PermissionState)'\n  parent: System.Security.NamedPermissionSet\n  langs:\n  - csharp\n  name: NamedPermissionSet(String,PermissionState)\n  nameWithType: NamedPermissionSet.NamedPermissionSet(String,PermissionState)\n  fullName: System.Security.NamedPermissionSet.NamedPermissionSet(String,PermissionState)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  summary: Initializes a new instance of the <xref href=\"System.Security.NamedPermissionSet\"></xref> class with the specified name in either an unrestricted or a fully restricted state.\n  remarks: A named permission set in an unrestricted state effectively contains all permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface. The named permission set will contain all built-in permissions as well as all custom permissions. All permissions will have an `Unrestricted`<xref:System.Security.Permissions.PermissionState>. Permissions that do not implement <xref:System.Security.Permissions.IUnrestrictedPermission>, such as identity permissions, will be empty instances.\n  syntax:\n    content: public NamedPermissionSet (string name, System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name for the new named permission set.\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.\n  overload: System.Security.NamedPermissionSet.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>name</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or is an empty string (\"\").\n  platform:\n  - net462\n- uid: System.Security.NamedPermissionSet.#ctor(System.String,System.Security.PermissionSet)\n  id: '#ctor(System.String,System.Security.PermissionSet)'\n  parent: System.Security.NamedPermissionSet\n  langs:\n  - csharp\n  name: NamedPermissionSet(String,PermissionSet)\n  nameWithType: NamedPermissionSet.NamedPermissionSet(String,PermissionSet)\n  fullName: System.Security.NamedPermissionSet.NamedPermissionSet(String,PermissionSet)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  summary: Initializes a new instance of the <xref href=\"System.Security.NamedPermissionSet\"></xref> class with the specified name from a permission set.\n  remarks: ''\n  example:\n  - \"The following code example shows the use of the NamedPermissionSet constructor to create a new <xref:System.Security.NamedPermissionSet> object. This code example is part of a larger example provided for the <xref:System.Security.NamedPermissionSet> class.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public NamedPermissionSet (string name, System.Security.PermissionSet permSet);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name for the named permission set.\n    - id: permSet\n      type: System.Security.PermissionSet\n      description: The permission set from which to take the value of the new named permission set.\n  overload: System.Security.NamedPermissionSet.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>name</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or is an empty string (\"\").\n  platform:\n  - net462\n- uid: System.Security.NamedPermissionSet.Copy\n  id: Copy\n  parent: System.Security.NamedPermissionSet\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: NamedPermissionSet.Copy()\n  fullName: System.Security.NamedPermissionSet.Copy()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  summary: Creates a permission set copy from a named permission set.\n  remarks: ''\n  example:\n  - \"The following code example shows the use of the Copy method to create a copy of the current <xref:System.Security.NamedPermissionSet>. This code example is part of a larger example provided for the <xref:System.Security.NamedPermissionSet> class.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public override System.Security.PermissionSet Copy ();\n    parameters: []\n    return:\n      type: System.Security.PermissionSet\n      description: A permission set that is a copy of the permissions in the named permission set.\n  overload: System.Security.NamedPermissionSet.Copy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.NamedPermissionSet.Copy(System.String)\n  id: Copy(System.String)\n  parent: System.Security.NamedPermissionSet\n  langs:\n  - csharp\n  name: Copy(String)\n  nameWithType: NamedPermissionSet.Copy(String)\n  fullName: System.Security.NamedPermissionSet.Copy(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  summary: Creates a copy of the named permission set with a different name but the same permissions.\n  syntax:\n    content: public System.Security.NamedPermissionSet Copy (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name for the new named permission set.\n    return:\n      type: System.Security.NamedPermissionSet\n      description: A copy of the named permission set with the new name.\n  overload: System.Security.NamedPermissionSet.Copy*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>name</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or is an empty string (\"\").\n  platform:\n  - net462\n- uid: System.Security.NamedPermissionSet.Description\n  id: Description\n  parent: System.Security.NamedPermissionSet\n  langs:\n  - csharp\n  name: Description\n  nameWithType: NamedPermissionSet.Description\n  fullName: System.Security.NamedPermissionSet.Description\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  summary: Gets or sets the text description of the current named permission set.\n  remarks: The description helps the administrator understand in words what permissions the set contains and its intended use.\n  example:\n  - \"The following code example shows the use of the Description property to display the description of the current <xref:System.Security.NamedPermissionSet>. This code example is part of a larger example provided for the <xref:System.Security.NamedPermissionSet> class.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public string Description { get; set; }\n    return:\n      type: System.String\n      description: A text description of the named permission set.\n  overload: System.Security.NamedPermissionSet.Description*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.NamedPermissionSet.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Security.NamedPermissionSet\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: NamedPermissionSet.Equals(Object)\n  fullName: System.Security.NamedPermissionSet.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  summary: Determines whether the specified <xref href=\"System.Security.NamedPermissionSet\"></xref> object is equal to the current <xref href=\"System.Security.NamedPermissionSet\"></xref>.\n  remarks: For more information, see <xref:System.Object.Equals%2A>.\n  example:\n  - \"The following code example shows the use of the Equals method to compare two <xref:System.Security.NamedPermissionSet> objects. This code example is part of a larger example provided for the <xref:System.Security.NamedPermissionSet> class.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The <xref href=\"System.Security.NamedPermissionSet\"></xref> object to compare with the current <xref href=\"System.Security.NamedPermissionSet\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref href=\"System.Security.NamedPermissionSet\"></xref> is equal to the current <xref href=\"System.Security.NamedPermissionSet\"></xref> object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.NamedPermissionSet.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.NamedPermissionSet.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Security.NamedPermissionSet\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: NamedPermissionSet.FromXml(SecurityElement)\n  fullName: System.Security.NamedPermissionSet.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  summary: Reconstructs a named permission set with a specified state from an XML encoding.\n  remarks: This method recreates the state of a named permission set from an XML element previously created by <xref:System.Security.NamedPermissionSet.ToXml%2A>.\n  example:\n  - \"The following code example shows the use of the FromXml method to recreate a <xref:System.Security.NamedPermissionSet> object. This code example is part of a larger example provided for the <xref:System.Security.NamedPermissionSet> class.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement et);\n    parameters:\n    - id: et\n      type: System.Security.SecurityElement\n      description: A security element containing the XML representation of the named permission set.\n  overload: System.Security.NamedPermissionSet.FromXml*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>et</code> parameter is not a valid representation of a named permission set.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>et</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Security.NamedPermissionSet.GetHashCode\n  id: GetHashCode\n  parent: System.Security.NamedPermissionSet\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: NamedPermissionSet.GetHashCode()\n  fullName: System.Security.NamedPermissionSet.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  summary: Gets a hash code for the <xref href=\"System.Security.NamedPermissionSet\"></xref> object that is suitable for use in hashing algorithms and data structures such as a hash table.\n  remarks: The hash code for two instances of the same permission might differ, hence a hash code should not be used to compare two <xref:System.Security.NamedPermissionSet> objects.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for the current <xref href=\"System.Security.NamedPermissionSet\"></xref> object.\n  overload: System.Security.NamedPermissionSet.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.NamedPermissionSet.Name\n  id: Name\n  parent: System.Security.NamedPermissionSet\n  langs:\n  - csharp\n  name: Name\n  nameWithType: NamedPermissionSet.Name\n  fullName: System.Security.NamedPermissionSet.Name\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  summary: Gets or sets the name of the current named permission set.\n  remarks: Code groups refer to permission sets by name.\n  example:\n  - \"The following code example shows the use of the Name property to display the name of a <xref:System.Security.NamedPermissionSet>. This code example is part of a larger example provided for the <xref:System.Security.NamedPermissionSet> class.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public string Name { get; set; }\n    return:\n      type: System.String\n      description: The name of the named permission set.\n  overload: System.Security.NamedPermissionSet.Name*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The name is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or is an empty string (\"\").\n  platform:\n  - net462\n- uid: System.Security.NamedPermissionSet.ToXml\n  id: ToXml\n  parent: System.Security.NamedPermissionSet\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: NamedPermissionSet.ToXml()\n  fullName: System.Security.NamedPermissionSet.ToXml()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  summary: Creates an XML element description of the named permission set.\n  remarks: Use <xref:System.Security.NamedPermissionSet.FromXml%2A> to recreate the state represented by the returned element.\n  example:\n  - \"The following code example shows the use of the ToXml method to recreate a <xref:System.Security.NamedPermissionSet> object. This code example is part of a larger example provided for the <xref:System.Security.NamedPermissionSet> class.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: The XML representation of the named permission set.\n  overload: System.Security.NamedPermissionSet.ToXml*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.PermissionSet\n  isExternal: false\n  name: System.Security.PermissionSet\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Security.NamedPermissionSet.#ctor(System.Security.NamedPermissionSet)\n  parent: System.Security.NamedPermissionSet\n  isExternal: false\n  name: NamedPermissionSet(NamedPermissionSet)\n  nameWithType: NamedPermissionSet.NamedPermissionSet(NamedPermissionSet)\n  fullName: System.Security.NamedPermissionSet.NamedPermissionSet(NamedPermissionSet)\n- uid: System.Security.NamedPermissionSet\n  parent: System.Security\n  isExternal: false\n  name: NamedPermissionSet\n  nameWithType: NamedPermissionSet\n  fullName: System.Security.NamedPermissionSet\n- uid: System.Security.NamedPermissionSet.#ctor(System.String)\n  parent: System.Security.NamedPermissionSet\n  isExternal: false\n  name: NamedPermissionSet(String)\n  nameWithType: NamedPermissionSet.NamedPermissionSet(String)\n  fullName: System.Security.NamedPermissionSet.NamedPermissionSet(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.NamedPermissionSet.#ctor(System.String,System.Security.Permissions.PermissionState)\n  parent: System.Security.NamedPermissionSet\n  isExternal: false\n  name: NamedPermissionSet(String,PermissionState)\n  nameWithType: NamedPermissionSet.NamedPermissionSet(String,PermissionState)\n  fullName: System.Security.NamedPermissionSet.NamedPermissionSet(String,PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Security.NamedPermissionSet.#ctor(System.String,System.Security.PermissionSet)\n  parent: System.Security.NamedPermissionSet\n  isExternal: false\n  name: NamedPermissionSet(String,PermissionSet)\n  nameWithType: NamedPermissionSet.NamedPermissionSet(String,PermissionSet)\n  fullName: System.Security.NamedPermissionSet.NamedPermissionSet(String,PermissionSet)\n- uid: System.Security.NamedPermissionSet.Copy\n  parent: System.Security.NamedPermissionSet\n  isExternal: false\n  name: Copy()\n  nameWithType: NamedPermissionSet.Copy()\n  fullName: System.Security.NamedPermissionSet.Copy()\n- uid: System.Security.NamedPermissionSet.Copy(System.String)\n  parent: System.Security.NamedPermissionSet\n  isExternal: false\n  name: Copy(String)\n  nameWithType: NamedPermissionSet.Copy(String)\n  fullName: System.Security.NamedPermissionSet.Copy(String)\n- uid: System.Security.NamedPermissionSet.Description\n  parent: System.Security.NamedPermissionSet\n  isExternal: false\n  name: Description\n  nameWithType: NamedPermissionSet.Description\n  fullName: System.Security.NamedPermissionSet.Description\n- uid: System.Security.NamedPermissionSet.Equals(System.Object)\n  parent: System.Security.NamedPermissionSet\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: NamedPermissionSet.Equals(Object)\n  fullName: System.Security.NamedPermissionSet.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.NamedPermissionSet.FromXml(System.Security.SecurityElement)\n  parent: System.Security.NamedPermissionSet\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: NamedPermissionSet.FromXml(SecurityElement)\n  fullName: System.Security.NamedPermissionSet.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.NamedPermissionSet.GetHashCode\n  parent: System.Security.NamedPermissionSet\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: NamedPermissionSet.GetHashCode()\n  fullName: System.Security.NamedPermissionSet.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.NamedPermissionSet.Name\n  parent: System.Security.NamedPermissionSet\n  isExternal: false\n  name: Name\n  nameWithType: NamedPermissionSet.Name\n  fullName: System.Security.NamedPermissionSet.Name\n- uid: System.Security.NamedPermissionSet.ToXml\n  parent: System.Security.NamedPermissionSet\n  isExternal: false\n  name: ToXml()\n  nameWithType: NamedPermissionSet.ToXml()\n  fullName: System.Security.NamedPermissionSet.ToXml()\n- uid: System.Security.NamedPermissionSet.#ctor*\n  parent: System.Security.NamedPermissionSet\n  isExternal: false\n  name: NamedPermissionSet\n  nameWithType: NamedPermissionSet.NamedPermissionSet\n- uid: System.Security.NamedPermissionSet.Copy*\n  parent: System.Security.NamedPermissionSet\n  isExternal: false\n  name: Copy\n  nameWithType: NamedPermissionSet.Copy\n- uid: System.Security.NamedPermissionSet.Description*\n  parent: System.Security.NamedPermissionSet\n  isExternal: false\n  name: Description\n  nameWithType: NamedPermissionSet.Description\n- uid: System.Security.NamedPermissionSet.Equals*\n  parent: System.Security.NamedPermissionSet\n  isExternal: false\n  name: Equals\n  nameWithType: NamedPermissionSet.Equals\n- uid: System.Security.NamedPermissionSet.FromXml*\n  parent: System.Security.NamedPermissionSet\n  isExternal: false\n  name: FromXml\n  nameWithType: NamedPermissionSet.FromXml\n- uid: System.Security.NamedPermissionSet.GetHashCode*\n  parent: System.Security.NamedPermissionSet\n  isExternal: false\n  name: GetHashCode\n  nameWithType: NamedPermissionSet.GetHashCode\n- uid: System.Security.NamedPermissionSet.Name*\n  parent: System.Security.NamedPermissionSet\n  isExternal: false\n  name: Name\n  nameWithType: NamedPermissionSet.Name\n- uid: System.Security.NamedPermissionSet.ToXml*\n  parent: System.Security.NamedPermissionSet\n  isExternal: false\n  name: ToXml\n  nameWithType: NamedPermissionSet.ToXml\n"}