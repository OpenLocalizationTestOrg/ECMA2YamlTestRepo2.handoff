{"nodes":[{"pos":[703,849],"content":"Specifies schema validation options used by the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaValidator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and &lt;xref:System.Xml.XmlReader&gt; classes.","needQuote":true,"needEscape":true,"source":"Specifies schema validation options used by the <xref href=\"System.Xml.Schema.XmlSchemaValidator\"></xref> and <xref:System.Xml.XmlReader> classes."},{"pos":[862,5909],"content":"The following are notes to consider when using XmlSchemaValidationFlags values with the <xref:System.Xml.XmlReader>.      -   XmlSchemaValidationFlags values define validation options used by a schema validating <xref:System.Xml.XmlReader> to perform XML validation against a schema. XmlSchemaValidationFlags values for a validating <xref:System.Xml.XmlReader> are specified using the <xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> property.       The following are notes to consider when using the AllowXmlAttributes value.      1.  When a schema doesn’t import the Xml namespace.          1.  If AllowXmlAttributes is set to `true` (default) and the instance document contains Xml attributes, the validation engine will load a snapshot of the default Xml namespace schema and use it for validation. If Xml attributes used in the instance document are not found in the default schema, the document will not validate.          2.  If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes, the validation engine will report an error.      2.  When a schema imports the Xml namespace without a location.          1.  If AllowXmlAttributes is set to `true` (default) and the instance document contains Xml attributes, the validation engine will use the default Xml namespace schema for validation. If Xml attributes used in the instance document are not found in the default schema, the document will not validate.          2.  If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes that are not explicitly allowed by the schema, the validation engine will report an error.          3.  If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes that are explicitly allowed by the schema, the validation engine will validate the attributes the same way it validates other attributes using the default Xml namespace schema.      3.  When a schema imports a custom Xml namespace schema with a custom schemaLocation.          1.  If AllowXmlAttributes is set to `true` (default) and the instance document contains Xml attributes, the validation engine will use the custom Xml namespace schema for validation. If Xml attributes used in the instance document are not found in the specified schema, the document will not validate.          2.  If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes that are not explicitly allowed by the schema, the validation engine will report an error.          3.  If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes that are explicitly allowed by the schema, the validation engine will validate the attributes the same way it validates other attributes using specified Xml namespace schema.      4.  When a schema defines an xml:* attribute with use=\"required\".          1.  The following applies when AllowXmlAttributes is set to `true` and `false`. Required xml:* attributes should be treated as other attributes and validated using the specified Xml namespace schema.      5.  When a schema defines an xml:* attribute with use=\"prohibited\".          1.  The following applies when AllowXmlAttributes is set to `true` and `false`. If an instance document contains xml:* attributes that are explicitly prohibited by the schema, the validation engine will report an error.      6.  When a schema specifies an attribute wildcard.          1.  If an instance document contains an Xml attribute and the schema specifies an attribute wildcard with processContents either omitted or set to \"strict\", the validation engine will use the Xml namespace schema present in the <xref:System.Xml.Schema.XmlSchemaSet>. If no Xml namespace schema is specified, the validation engine will behave as follows.          2.  If AllowXmlAttributes is set to `true`, the validation engine will use the default Xml namespace schema to perform validation.          3.  If AllowXmlAttributes is set to `false`, the validation engine will report an error.          4.  If an instance document contains an Xml attribute and the schema specifies an attribute wildcard with processContents set to \"skip\", the validation engine will skip attribute validation.          5.  If an instance document contains an Xml attribute and the schema specifies an attribute wildcard with processContents set to \"lax\", the validation engine will use the Xml namespace schema present in the <xref:System.Xml.Schema.XmlSchemaSet>. If no Xml namespace schema is specified, the validation engine will behave as follows.          6.  If AllowXmlAttributes is set to `true`, the validation engine will use the default Xml namespace schema to perform validation.          7.  If AllowXmlAttributes is set to `false`, attribute validation will not be performed.      7.  When validating simple types.          1.  When AllowXmlAttributes is set to `true` (default), Xml attributes will be allowed on elements of simple types.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The following are notes to consider when using XmlSchemaValidationFlags values with the &lt;xref:System.Xml.XmlReader&gt;.","pos":[0,116],"source":"The following are notes to consider when using XmlSchemaValidationFlags values with the <xref:System.Xml.XmlReader>."},{"content":"-   XmlSchemaValidationFlags values define validation options used by a schema validating &lt;xref:System.Xml.XmlReader&gt; to perform XML validation against a schema.","pos":[122,283],"source":"      -   XmlSchemaValidationFlags values define validation options used by a schema validating <xref:System.Xml.XmlReader> to perform XML validation against a schema."},{"content":"XmlSchemaValidationFlags values for a validating &lt;xref:System.Xml.XmlReader&gt; are specified using the &lt;xref:System.Xml.XmlReaderSettings.ValidationFlags%2A&gt; property.","pos":[284,449],"source":" XmlSchemaValidationFlags values for a validating <xref:System.Xml.XmlReader> are specified using the <xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> property."},{"content":"The following are notes to consider when using the AllowXmlAttributes value.","pos":[456,532]},{"content":"1.","pos":[538,540]},{"content":"When a schema doesn’t import the Xml namespace.","pos":[542,589]},{"content":"1.","pos":[599,601]},{"content":"If AllowXmlAttributes is set to <ph id=\"ph1\">`true`</ph> (default) and the instance document contains Xml attributes, the validation engine will load a snapshot of the default Xml namespace schema and use it for validation.","pos":[603,808],"source":"  If AllowXmlAttributes is set to `true` (default) and the instance document contains Xml attributes, the validation engine will load a snapshot of the default Xml namespace schema and use it for validation."},{"content":"If Xml attributes used in the instance document are not found in the default schema, the document will not validate.","pos":[809,925]},{"content":"2.","pos":[935,937]},{"content":"If AllowXmlAttributes is set to <ph id=\"ph1\">`false`</ph> and the instance document contains Xml attributes, the validation engine will report an error.","pos":[939,1073],"source":"  If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes, the validation engine will report an error."},{"content":"2.","pos":[1079,1081]},{"content":"When a schema imports the Xml namespace without a location.","pos":[1083,1142]},{"content":"1.","pos":[1152,1154]},{"content":"If AllowXmlAttributes is set to <ph id=\"ph1\">`true`</ph> (default) and the instance document contains Xml attributes, the validation engine will use the default Xml namespace schema for validation.","pos":[1156,1335],"source":"  If AllowXmlAttributes is set to `true` (default) and the instance document contains Xml attributes, the validation engine will use the default Xml namespace schema for validation."},{"content":"If Xml attributes used in the instance document are not found in the default schema, the document will not validate.","pos":[1336,1452]},{"content":"2.","pos":[1462,1464]},{"content":"If AllowXmlAttributes is set to <ph id=\"ph1\">`false`</ph> and the instance document contains Xml attributes that are not explicitly allowed by the schema, the validation engine will report an error.","pos":[1466,1646],"source":"  If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes that are not explicitly allowed by the schema, the validation engine will report an error."},{"content":"3.","pos":[1656,1658]},{"content":"If AllowXmlAttributes is set to <ph id=\"ph1\">`false`</ph> and the instance document contains Xml attributes that are explicitly allowed by the schema, the validation engine will validate the attributes the same way it validates other attributes using the default Xml namespace schema.","pos":[1660,1926],"source":"  If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes that are explicitly allowed by the schema, the validation engine will validate the attributes the same way it validates other attributes using the default Xml namespace schema."},{"content":"3.","pos":[1932,1934]},{"content":"When a schema imports a custom Xml namespace schema with a custom schemaLocation.","pos":[1936,2017]},{"content":"1.","pos":[2027,2029]},{"content":"If AllowXmlAttributes is set to <ph id=\"ph1\">`true`</ph> (default) and the instance document contains Xml attributes, the validation engine will use the custom Xml namespace schema for validation.","pos":[2031,2209],"source":"  If AllowXmlAttributes is set to `true` (default) and the instance document contains Xml attributes, the validation engine will use the custom Xml namespace schema for validation."},{"content":"If Xml attributes used in the instance document are not found in the specified schema, the document will not validate.","pos":[2210,2328]},{"content":"2.","pos":[2338,2340]},{"content":"If AllowXmlAttributes is set to <ph id=\"ph1\">`false`</ph> and the instance document contains Xml attributes that are not explicitly allowed by the schema, the validation engine will report an error.","pos":[2342,2522],"source":"  If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes that are not explicitly allowed by the schema, the validation engine will report an error."},{"content":"3.","pos":[2532,2534]},{"content":"If AllowXmlAttributes is set to <ph id=\"ph1\">`false`</ph> and the instance document contains Xml attributes that are explicitly allowed by the schema, the validation engine will validate the attributes the same way it validates other attributes using specified Xml namespace schema.","pos":[2536,2800],"source":"  If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes that are explicitly allowed by the schema, the validation engine will validate the attributes the same way it validates other attributes using specified Xml namespace schema."},{"content":"4.","pos":[2806,2808]},{"content":"When a schema defines an xml:<bpt id=\"p1\">*</bpt> attribute with use=\"required\".          1.  The following applies when AllowXmlAttributes is set to <ph id=\"ph1\">`true`</ph> and <ph id=\"ph2\">`false`</ph>. Required xml:<ept id=\"p1\">*</ept> attributes should be treated as other attributes and validated using the specified Xml namespace schema.","pos":[2810,3080],"source":"  When a schema defines an xml:* attribute with use=\"required\".          1.  The following applies when AllowXmlAttributes is set to `true` and `false`. Required xml:* attributes should be treated as other attributes and validated using the specified Xml namespace schema."},{"content":"5.","pos":[3086,3088]},{"content":"When a schema defines an xml:<bpt id=\"p1\">*</bpt> attribute with use=\"prohibited\".          1.  The following applies when AllowXmlAttributes is set to <ph id=\"ph1\">`true`</ph> and <ph id=\"ph2\">`false`</ph>. If an instance document contains xml:<ept id=\"p1\">*</ept> attributes that are explicitly prohibited by the schema, the validation engine will report an error.","pos":[3090,3382],"source":"  When a schema defines an xml:* attribute with use=\"prohibited\".          1.  The following applies when AllowXmlAttributes is set to `true` and `false`. If an instance document contains xml:* attributes that are explicitly prohibited by the schema, the validation engine will report an error."},{"content":"6.","pos":[3388,3390]},{"content":"When a schema specifies an attribute wildcard.","pos":[3392,3438]},{"content":"1.","pos":[3448,3450]},{"content":"If an instance document contains an Xml attribute and the schema specifies an attribute wildcard with processContents either omitted or set to \"strict\", the validation engine will use the Xml namespace schema present in the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.","pos":[3452,3714],"source":"  If an instance document contains an Xml attribute and the schema specifies an attribute wildcard with processContents either omitted or set to \"strict\", the validation engine will use the Xml namespace schema present in the <xref:System.Xml.Schema.XmlSchemaSet>."},{"content":"If no Xml namespace schema is specified, the validation engine will behave as follows.","pos":[3715,3801]},{"content":"2.","pos":[3811,3813]},{"content":"If AllowXmlAttributes is set to <ph id=\"ph1\">`true`</ph>, the validation engine will use the default Xml namespace schema to perform validation.","pos":[3815,3941],"source":"  If AllowXmlAttributes is set to `true`, the validation engine will use the default Xml namespace schema to perform validation."},{"content":"3.","pos":[3951,3953]},{"content":"If AllowXmlAttributes is set to <ph id=\"ph1\">`false`</ph>, the validation engine will report an error.","pos":[3955,4039],"source":"  If AllowXmlAttributes is set to `false`, the validation engine will report an error."},{"content":"4.","pos":[4049,4051]},{"content":"If an instance document contains an Xml attribute and the schema specifies an attribute wildcard with processContents set to \"skip\", the validation engine will skip attribute validation.","pos":[4053,4239]},{"content":"5.","pos":[4249,4251]},{"content":"If an instance document contains an Xml attribute and the schema specifies an attribute wildcard with processContents set to \"lax\", the validation engine will use the Xml namespace schema present in the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.","pos":[4253,4494],"source":"  If an instance document contains an Xml attribute and the schema specifies an attribute wildcard with processContents set to \"lax\", the validation engine will use the Xml namespace schema present in the <xref:System.Xml.Schema.XmlSchemaSet>."},{"content":"If no Xml namespace schema is specified, the validation engine will behave as follows.","pos":[4495,4581]},{"content":"6.","pos":[4591,4593]},{"content":"If AllowXmlAttributes is set to <ph id=\"ph1\">`true`</ph>, the validation engine will use the default Xml namespace schema to perform validation.","pos":[4595,4721],"source":"  If AllowXmlAttributes is set to `true`, the validation engine will use the default Xml namespace schema to perform validation."},{"content":"7.","pos":[4731,4733]},{"content":"If AllowXmlAttributes is set to <ph id=\"ph1\">`false`</ph>, attribute validation will not be performed.","pos":[4735,4819],"source":"  If AllowXmlAttributes is set to `false`, attribute validation will not be performed."},{"content":"7.","pos":[4825,4827]},{"content":"When validating simple types.","pos":[4829,4858]},{"content":"1.","pos":[4868,4870]},{"content":"When AllowXmlAttributes is set to <ph id=\"ph1\">`true`</ph> (default), Xml attributes will be allowed on elements of simple types.","pos":[4872,4983],"source":"  When AllowXmlAttributes is set to `true` (default), Xml attributes will be allowed on elements of simple types."}]},{"pos":[6597,6722],"content":"Allow xml:* attributes even if they are not defined in the schema. The attributes will be validated based on their data type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Allow xml:* attributes even if they are not defined in the schema. The attributes will be validated based on their data type.","pos":[0,125],"nodes":[{"content":"Allow xml:* attributes even if they are not defined in the schema.","pos":[0,66]},{"content":"The attributes will be validated based on their data type.","pos":[67,125]}]}]},{"pos":[6851,6863],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7247,7360],"content":"Do not process identity constraints, inline schemas, schema location hints, or report schema validation warnings.","needQuote":true,"needEscape":true,"nodes":[{"content":"Do not process identity constraints, inline schemas, schema location hints, or report schema validation warnings.","pos":[0,113]}]},{"pos":[7475,7487],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7981,8098],"content":"Process identity constraints (<ph id=\"ph1\">`xs:ID`</ph>, <ph id=\"ph2\">`xs:IDREF`</ph>, <ph id=\"ph3\">`xs:key`</ph>, <ph id=\"ph4\">`xs:keyref`</ph>, <ph id=\"ph5\">`xs:unique`</ph>) encountered during validation.","needQuote":true,"needEscape":true,"source":"Process identity constraints (`xs:ID`, `xs:IDREF`, `xs:key`, `xs:keyref`, `xs:unique`) encountered during validation."},{"pos":[8235,8247],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8706,8759],"content":"Process inline schemas encountered during validation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Process inline schemas encountered during validation.","pos":[0,53]}]},{"pos":[8889,8901],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9370,9486],"content":"Process schema location hints (<ph id=\"ph1\">`xsi:schemaLocation`</ph>, <ph id=\"ph2\">`xsi:noNamespaceSchemaLocation`</ph>) encountered during validation.","needQuote":true,"needEscape":true,"source":"Process schema location hints (`xsi:schemaLocation`, `xsi:noNamespaceSchemaLocation`) encountered during validation."},{"pos":[9618,9630],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10114,10178],"content":"Report schema validation warnings encountered during validation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Report schema validation warnings encountered during validation.","pos":[0,64]}]},{"pos":[10313,10325],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xml.Schema.XmlSchemaValidationFlags\n  id: XmlSchemaValidationFlags\n  children:\n  - System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes\n  - System.Xml.Schema.XmlSchemaValidationFlags.None\n  - System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints\n  - System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema\n  - System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation\n  - System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings\n  langs:\n  - csharp\n  name: XmlSchemaValidationFlags\n  nameWithType: XmlSchemaValidationFlags\n  fullName: System.Xml.Schema.XmlSchemaValidationFlags\n  type: Enum\n  summary: Specifies schema validation options used by the <xref href=\"System.Xml.Schema.XmlSchemaValidator\"></xref> and <xref:System.Xml.XmlReader> classes.\n  remarks: \"The following are notes to consider when using XmlSchemaValidationFlags values with the <xref:System.Xml.XmlReader>.  \\n  \\n-   XmlSchemaValidationFlags values define validation options used by a schema validating <xref:System.Xml.XmlReader> to perform XML validation against a schema. XmlSchemaValidationFlags values for a validating <xref:System.Xml.XmlReader> are specified using the <xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> property.  \\n  \\n The following are notes to consider when using the AllowXmlAttributes value.  \\n  \\n1.  When a schema doesn’t import the Xml namespace.  \\n  \\n    1.  If AllowXmlAttributes is set to `true` (default) and the instance document contains Xml attributes, the validation engine will load a snapshot of the default Xml namespace schema and use it for validation. If Xml attributes used in the instance document are not found in the default schema, the document will not validate.  \\n  \\n    2.  If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes, the validation engine will report an error.  \\n  \\n2.  When a schema imports the Xml namespace without a location.  \\n  \\n    1.  If AllowXmlAttributes is set to `true` (default) and the instance document contains Xml attributes, the validation engine will use the default Xml namespace schema for validation. If Xml attributes used in the instance document are not found in the default schema, the document will not validate.  \\n  \\n    2.  If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes that are not explicitly allowed by the schema, the validation engine will report an error.  \\n  \\n    3.  If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes that are explicitly allowed by the schema, the validation engine will validate the attributes the same way it validates other attributes using the default Xml namespace schema.  \\n  \\n3.  When a schema imports a custom Xml namespace schema with a custom schemaLocation.  \\n  \\n    1.  If AllowXmlAttributes is set to `true` (default) and the instance document contains Xml attributes, the validation engine will use the custom Xml namespace schema for validation. If Xml attributes used in the instance document are not found in the specified schema, the document will not validate.  \\n  \\n    2.  If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes that are not explicitly allowed by the schema, the validation engine will report an error.  \\n  \\n    3.  If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes that are explicitly allowed by the schema, the validation engine will validate the attributes the same way it validates other attributes using specified Xml namespace schema.  \\n  \\n4.  When a schema defines an xml:* attribute with use=\\\"required\\\".  \\n  \\n    1.  The following applies when AllowXmlAttributes is set to `true` and `false`. Required xml:* attributes should be treated as other attributes and validated using the specified Xml namespace schema.  \\n  \\n5.  When a schema defines an xml:* attribute with use=\\\"prohibited\\\".  \\n  \\n    1.  The following applies when AllowXmlAttributes is set to `true` and `false`. If an instance document contains xml:* attributes that are explicitly prohibited by the schema, the validation engine will report an error.  \\n  \\n6.  When a schema specifies an attribute wildcard.  \\n  \\n    1.  If an instance document contains an Xml attribute and the schema specifies an attribute wildcard with processContents either omitted or set to \\\"strict\\\", the validation engine will use the Xml namespace schema present in the <xref:System.Xml.Schema.XmlSchemaSet>. If no Xml namespace schema is specified, the validation engine will behave as follows.  \\n  \\n    2.  If AllowXmlAttributes is set to `true`, the validation engine will use the default Xml namespace schema to perform validation.  \\n  \\n    3.  If AllowXmlAttributes is set to `false`, the validation engine will report an error.  \\n  \\n    4.  If an instance document contains an Xml attribute and the schema specifies an attribute wildcard with processContents set to \\\"skip\\\", the validation engine will skip attribute validation.  \\n  \\n    5.  If an instance document contains an Xml attribute and the schema specifies an attribute wildcard with processContents set to \\\"lax\\\", the validation engine will use the Xml namespace schema present in the <xref:System.Xml.Schema.XmlSchemaSet>. If no Xml namespace schema is specified, the validation engine will behave as follows.  \\n  \\n    6.  If AllowXmlAttributes is set to `true`, the validation engine will use the default Xml namespace schema to perform validation.  \\n  \\n    7.  If AllowXmlAttributes is set to `false`, attribute validation will not be performed.  \\n  \\n7.  When validating simple types.  \\n  \\n    1.  When AllowXmlAttributes is set to `true` (default), Xml attributes will be allowed on elements of simple types.\"\n  example:\n  - For an example of the XmlSchemaValidationFlags class, see the <xref:System.Xml.Schema.XmlSchemaValidator> class.\n  syntax:\n    content: >-\n      [System.Flags]\n\n      public enum XmlSchemaValidationFlags\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes\n  id: AllowXmlAttributes\n  parent: System.Xml.Schema.XmlSchemaValidationFlags\n  langs:\n  - csharp\n  name: AllowXmlAttributes\n  nameWithType: XmlSchemaValidationFlags.AllowXmlAttributes\n  fullName: System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes\n  type: Field\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Allow xml:* attributes even if they are not defined in the schema. The attributes will be validated based on their data type.\n  syntax:\n    content: AllowXmlAttributes\n    return:\n      type: System.Xml.Schema.XmlSchemaValidationFlags\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaValidationFlags.None\n  id: None\n  parent: System.Xml.Schema.XmlSchemaValidationFlags\n  langs:\n  - csharp\n  name: None\n  nameWithType: XmlSchemaValidationFlags.None\n  fullName: System.Xml.Schema.XmlSchemaValidationFlags.None\n  type: Field\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Do not process identity constraints, inline schemas, schema location hints, or report schema validation warnings.\n  syntax:\n    content: None\n    return:\n      type: System.Xml.Schema.XmlSchemaValidationFlags\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints\n  id: ProcessIdentityConstraints\n  parent: System.Xml.Schema.XmlSchemaValidationFlags\n  langs:\n  - csharp\n  name: ProcessIdentityConstraints\n  nameWithType: XmlSchemaValidationFlags.ProcessIdentityConstraints\n  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints\n  type: Field\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Process identity constraints (`xs:ID`, `xs:IDREF`, `xs:key`, `xs:keyref`, `xs:unique`) encountered during validation.\n  syntax:\n    content: ProcessIdentityConstraints\n    return:\n      type: System.Xml.Schema.XmlSchemaValidationFlags\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema\n  id: ProcessInlineSchema\n  parent: System.Xml.Schema.XmlSchemaValidationFlags\n  langs:\n  - csharp\n  name: ProcessInlineSchema\n  nameWithType: XmlSchemaValidationFlags.ProcessInlineSchema\n  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema\n  type: Field\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Process inline schemas encountered during validation.\n  syntax:\n    content: ProcessInlineSchema\n    return:\n      type: System.Xml.Schema.XmlSchemaValidationFlags\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation\n  id: ProcessSchemaLocation\n  parent: System.Xml.Schema.XmlSchemaValidationFlags\n  langs:\n  - csharp\n  name: ProcessSchemaLocation\n  nameWithType: XmlSchemaValidationFlags.ProcessSchemaLocation\n  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation\n  type: Field\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Process schema location hints (`xsi:schemaLocation`, `xsi:noNamespaceSchemaLocation`) encountered during validation.\n  syntax:\n    content: ProcessSchemaLocation\n    return:\n      type: System.Xml.Schema.XmlSchemaValidationFlags\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings\n  id: ReportValidationWarnings\n  parent: System.Xml.Schema.XmlSchemaValidationFlags\n  langs:\n  - csharp\n  name: ReportValidationWarnings\n  nameWithType: XmlSchemaValidationFlags.ReportValidationWarnings\n  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings\n  type: Field\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Schema\n  summary: Report schema validation warnings encountered during validation.\n  syntax:\n    content: ReportValidationWarnings\n    return:\n      type: System.Xml.Schema.XmlSchemaValidationFlags\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes\n  parent: System.Xml.Schema.XmlSchemaValidationFlags\n  isExternal: false\n  name: AllowXmlAttributes\n  nameWithType: XmlSchemaValidationFlags.AllowXmlAttributes\n  fullName: System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes\n- uid: System.Xml.Schema.XmlSchemaValidationFlags\n  parent: System.Xml.Schema\n  isExternal: false\n  name: XmlSchemaValidationFlags\n  nameWithType: XmlSchemaValidationFlags\n  fullName: System.Xml.Schema.XmlSchemaValidationFlags\n- uid: System.Xml.Schema.XmlSchemaValidationFlags.None\n  parent: System.Xml.Schema.XmlSchemaValidationFlags\n  isExternal: false\n  name: None\n  nameWithType: XmlSchemaValidationFlags.None\n  fullName: System.Xml.Schema.XmlSchemaValidationFlags.None\n- uid: System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints\n  parent: System.Xml.Schema.XmlSchemaValidationFlags\n  isExternal: false\n  name: ProcessIdentityConstraints\n  nameWithType: XmlSchemaValidationFlags.ProcessIdentityConstraints\n  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints\n- uid: System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema\n  parent: System.Xml.Schema.XmlSchemaValidationFlags\n  isExternal: false\n  name: ProcessInlineSchema\n  nameWithType: XmlSchemaValidationFlags.ProcessInlineSchema\n  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema\n- uid: System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation\n  parent: System.Xml.Schema.XmlSchemaValidationFlags\n  isExternal: false\n  name: ProcessSchemaLocation\n  nameWithType: XmlSchemaValidationFlags.ProcessSchemaLocation\n  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation\n- uid: System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings\n  parent: System.Xml.Schema.XmlSchemaValidationFlags\n  isExternal: false\n  name: ReportValidationWarnings\n  nameWithType: XmlSchemaValidationFlags.ReportValidationWarnings\n  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings\n"}