{"nodes":[{"pos":[703,715],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2692,2704],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3495,3507],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4076,4088],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4668,4680],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Statements.Assign`1\n  id: Assign`1\n  children:\n  - System.Activities.Statements.Assign`1.#ctor\n  - System.Activities.Statements.Assign`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  - System.Activities.Statements.Assign`1.Execute(System.Activities.CodeActivityContext)\n  - System.Activities.Statements.Assign`1.To\n  - System.Activities.Statements.Assign`1.Value\n  langs:\n  - csharp\n  name: Assign<T>\n  nameWithType: Assign<T>\n  fullName: System.Activities.Statements.Assign<T>\n  type: Class\n  syntax:\n    content: 'public sealed class Assign<T> : System.Activities.CodeActivity'\n    typeParameters:\n    - id: T\n      description: To be added.\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.CodeActivity\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.CodeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.CodeActivity.Implementation\n  - System.Activities.CodeActivity.ImplementationVersion\n  - System.Activities.CodeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  platform:\n  - net462\n- uid: System.Activities.Statements.Assign`1.#ctor\n  id: '#ctor'\n  parent: System.Activities.Statements.Assign`1\n  langs:\n  - csharp\n  name: Assign()\n  nameWithType: Assign<T>.Assign()\n  fullName: System.Activities.Statements.Assign<T>.Assign()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: public Assign ();\n    parameters: []\n  overload: System.Activities.Statements.Assign`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.Assign`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  id: CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.Statements.Assign`1\n  langs:\n  - csharp\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: Assign<T>.CacheMetadata(CodeActivityMetadata)\n  fullName: System.Activities.Statements.Assign<T>.CacheMetadata(CodeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.CodeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.CodeActivityMetadata\n      description: To be added.\n  overload: System.Activities.Statements.Assign`1.CacheMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.Assign`1.Execute(System.Activities.CodeActivityContext)\n  id: Execute(System.Activities.CodeActivityContext)\n  parent: System.Activities.Statements.Assign`1\n  langs:\n  - csharp\n  name: Execute(CodeActivityContext)\n  nameWithType: Assign<T>.Execute(CodeActivityContext)\n  fullName: System.Activities.Statements.Assign<T>.Execute(CodeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Execute (System.Activities.CodeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.CodeActivityContext\n      description: To be added.\n  overload: System.Activities.Statements.Assign`1.Execute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.Assign`1.To\n  id: To\n  parent: System.Activities.Statements.Assign`1\n  langs:\n  - csharp\n  name: To\n  nameWithType: Assign<T>.To\n  fullName: System.Activities.Statements.Assign<T>.To\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: public System.Activities.OutArgument<T> To { get; set; }\n    return:\n      type: System.Activities.OutArgument`1\n      description: To be added.\n  overload: System.Activities.Statements.Assign`1.To*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.Assign`1.Value\n  id: Value\n  parent: System.Activities.Statements.Assign`1\n  langs:\n  - csharp\n  name: Value\n  nameWithType: Assign<T>.Value\n  fullName: System.Activities.Statements.Assign<T>.Value\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: public System.Activities.InArgument<T> Value { get; set; }\n    return:\n      type: System.Activities.InArgument`1\n      description: To be added.\n  overload: System.Activities.Statements.Assign`1.Value*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.CodeActivity\n  isExternal: false\n  name: System.Activities.CodeActivity\n- uid: System.Activities.Statements.Assign`1.#ctor\n  parent: System.Activities.Statements.Assign`1\n  isExternal: false\n  name: Assign()\n  nameWithType: Assign<T>.Assign()\n  fullName: System.Activities.Statements.Assign<T>.Assign()\n- uid: System.Activities.Statements.Assign`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.Statements.Assign`1\n  isExternal: false\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: Assign<T>.CacheMetadata(CodeActivityMetadata)\n  fullName: System.Activities.Statements.Assign<T>.CacheMetadata(CodeActivityMetadata)\n- uid: System.Activities.CodeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityMetadata\n  nameWithType: CodeActivityMetadata\n  fullName: System.Activities.CodeActivityMetadata\n- uid: System.Activities.Statements.Assign`1.Execute(System.Activities.CodeActivityContext)\n  parent: System.Activities.Statements.Assign`1\n  isExternal: false\n  name: Execute(CodeActivityContext)\n  nameWithType: Assign<T>.Execute(CodeActivityContext)\n  fullName: System.Activities.Statements.Assign<T>.Execute(CodeActivityContext)\n- uid: System.Activities.CodeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityContext\n  nameWithType: CodeActivityContext\n  fullName: System.Activities.CodeActivityContext\n- uid: System.Activities.Statements.Assign`1.To\n  parent: System.Activities.Statements.Assign`1\n  isExternal: false\n  name: To\n  nameWithType: Assign<T>.To\n  fullName: System.Activities.Statements.Assign<T>.To\n- uid: System.Activities.OutArgument`1\n  parent: System.Activities\n  isExternal: false\n  name: OutArgument<T>\n  nameWithType: OutArgument<T>\n  fullName: System.Activities.OutArgument<T>\n- uid: System.Activities.Statements.Assign`1.Value\n  parent: System.Activities.Statements.Assign`1\n  isExternal: false\n  name: Value\n  nameWithType: Assign<T>.Value\n  fullName: System.Activities.Statements.Assign<T>.Value\n- uid: System.Activities.InArgument`1\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<T>\n  nameWithType: InArgument<T>\n  fullName: System.Activities.InArgument<T>\n- uid: System.Activities.Statements.Assign`1.#ctor*\n  parent: System.Activities.Statements.Assign`1\n  isExternal: false\n  name: Assign<T>\n  nameWithType: Assign<T>.Assign<T>\n- uid: System.Activities.Statements.Assign`1.CacheMetadata*\n  parent: System.Activities.Statements.Assign`1\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: Assign<T>.CacheMetadata\n- uid: System.Activities.Statements.Assign`1.Execute*\n  parent: System.Activities.Statements.Assign`1\n  isExternal: false\n  name: Execute\n  nameWithType: Assign<T>.Execute\n- uid: System.Activities.Statements.Assign`1.To*\n  parent: System.Activities.Statements.Assign`1\n  isExternal: false\n  name: To\n  nameWithType: Assign<T>.To\n- uid: System.Activities.Statements.Assign`1.Value*\n  parent: System.Activities.Statements.Assign`1\n  isExternal: false\n  name: Value\n  nameWithType: Assign<T>.Value\n"}