{"nodes":[{"pos":[628,640],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[673,685],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[718,730],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2339,2351],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2980,2992],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3621,3633],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.ActivityAction`3\n  id: ActivityAction`3\n  children:\n  - System.Activities.ActivityAction`3.#ctor\n  - System.Activities.ActivityAction`3.Argument1\n  - System.Activities.ActivityAction`3.Argument2\n  - System.Activities.ActivityAction`3.Argument3\n  langs:\n  - csharp\n  name: ActivityAction<T1,T2,T3>\n  nameWithType: ActivityAction<T1,T2,T3>\n  fullName: System.Activities.ActivityAction<T1,T2,T3>\n  type: Class\n  syntax:\n    content: 'public sealed class ActivityAction<T1,T2,T3> : System.Activities.ActivityDelegate'\n    typeParameters:\n    - id: T1\n      description: To be added.\n    - id: T2\n      description: To be added.\n    - id: T3\n      description: To be added.\n  inheritance:\n  - System.Object\n  - System.Activities.ActivityDelegate\n  implements: []\n  inheritedMembers:\n  - System.Activities.ActivityDelegate.DisplayName\n  - System.Activities.ActivityDelegate.GetResultArgument\n  - System.Activities.ActivityDelegate.Handler\n  - System.Activities.ActivityDelegate.OnGetRuntimeDelegateArguments(System.Collections.Generic.IList{System.Activities.RuntimeDelegateArgument})\n  - System.Activities.ActivityDelegate.ShouldSerializeDisplayName\n  - System.Activities.ActivityDelegate.ToString\n  platform:\n  - net462\n- uid: System.Activities.ActivityAction`3.#ctor\n  id: '#ctor'\n  parent: System.Activities.ActivityAction`3\n  langs:\n  - csharp\n  name: ActivityAction()\n  nameWithType: ActivityAction<T1,T2,T3>.ActivityAction()\n  fullName: System.Activities.ActivityAction<T1,T2,T3>.ActivityAction()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public ActivityAction ();\n    parameters: []\n  overload: System.Activities.ActivityAction`3.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityAction`3.Argument1\n  id: Argument1\n  parent: System.Activities.ActivityAction`3\n  langs:\n  - csharp\n  name: Argument1\n  nameWithType: ActivityAction<T1,T2,T3>.Argument1\n  fullName: System.Activities.ActivityAction<T1,T2,T3>.Argument1\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public System.Activities.DelegateInArgument<T1> Argument1 { get; set; }\n    return:\n      type: System.Activities.DelegateInArgument{T1}\n      description: To be added.\n  overload: System.Activities.ActivityAction`3.Argument1*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityAction`3.Argument2\n  id: Argument2\n  parent: System.Activities.ActivityAction`3\n  langs:\n  - csharp\n  name: Argument2\n  nameWithType: ActivityAction<T1,T2,T3>.Argument2\n  fullName: System.Activities.ActivityAction<T1,T2,T3>.Argument2\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public System.Activities.DelegateInArgument<T2> Argument2 { get; set; }\n    return:\n      type: System.Activities.DelegateInArgument{T2}\n      description: To be added.\n  overload: System.Activities.ActivityAction`3.Argument2*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityAction`3.Argument3\n  id: Argument3\n  parent: System.Activities.ActivityAction`3\n  langs:\n  - csharp\n  name: Argument3\n  nameWithType: ActivityAction<T1,T2,T3>.Argument3\n  fullName: System.Activities.ActivityAction<T1,T2,T3>.Argument3\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public System.Activities.DelegateInArgument<T3> Argument3 { get; set; }\n    return:\n      type: System.Activities.DelegateInArgument{T3}\n      description: To be added.\n  overload: System.Activities.ActivityAction`3.Argument3*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.ActivityDelegate\n  isExternal: false\n  name: System.Activities.ActivityDelegate\n- uid: System.Activities.ActivityAction`3.#ctor\n  parent: System.Activities.ActivityAction`3\n  isExternal: false\n  name: ActivityAction()\n  nameWithType: ActivityAction<T1,T2,T3>.ActivityAction()\n  fullName: System.Activities.ActivityAction<T1,T2,T3>.ActivityAction()\n- uid: System.Activities.ActivityAction`3.Argument1\n  parent: System.Activities.ActivityAction`3\n  isExternal: false\n  name: Argument1\n  nameWithType: ActivityAction<T1,T2,T3>.Argument1\n  fullName: System.Activities.ActivityAction<T1,T2,T3>.Argument1\n- uid: System.Activities.DelegateInArgument{T1}\n  parent: System.Activities\n  isExternal: false\n  name: DelegateInArgument<T1>\n  nameWithType: DelegateInArgument<T1>\n  fullName: System.Activities.DelegateInArgument<T1>\n  spec.csharp:\n  - uid: System.Activities.DelegateInArgument`1\n    name: DelegateInArgument\n    nameWithType: DelegateInArgument\n    fullName: DelegateInArgument<T1>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T1\n    name: T1\n    nameWithType: T1\n    fullName: T1\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.ActivityAction`3.Argument2\n  parent: System.Activities.ActivityAction`3\n  isExternal: false\n  name: Argument2\n  nameWithType: ActivityAction<T1,T2,T3>.Argument2\n  fullName: System.Activities.ActivityAction<T1,T2,T3>.Argument2\n- uid: System.Activities.DelegateInArgument{T2}\n  parent: System.Activities\n  isExternal: false\n  name: DelegateInArgument<T2>\n  nameWithType: DelegateInArgument<T2>\n  fullName: System.Activities.DelegateInArgument<T2>\n  spec.csharp:\n  - uid: System.Activities.DelegateInArgument`1\n    name: DelegateInArgument\n    nameWithType: DelegateInArgument\n    fullName: DelegateInArgument<T2>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T2\n    name: T2\n    nameWithType: T2\n    fullName: T2\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.ActivityAction`3.Argument3\n  parent: System.Activities.ActivityAction`3\n  isExternal: false\n  name: Argument3\n  nameWithType: ActivityAction<T1,T2,T3>.Argument3\n  fullName: System.Activities.ActivityAction<T1,T2,T3>.Argument3\n- uid: System.Activities.DelegateInArgument{T3}\n  parent: System.Activities\n  isExternal: false\n  name: DelegateInArgument<T3>\n  nameWithType: DelegateInArgument<T3>\n  fullName: System.Activities.DelegateInArgument<T3>\n  spec.csharp:\n  - uid: System.Activities.DelegateInArgument`1\n    name: DelegateInArgument\n    nameWithType: DelegateInArgument\n    fullName: DelegateInArgument<T3>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T3\n    name: T3\n    nameWithType: T3\n    fullName: T3\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.ActivityAction`3.#ctor*\n  parent: System.Activities.ActivityAction`3\n  isExternal: false\n  name: ActivityAction<T1,T2,T3>\n  nameWithType: ActivityAction<T1,T2,T3>.ActivityAction<T1,T2,T3>\n- uid: System.Activities.ActivityAction`3.Argument1*\n  parent: System.Activities.ActivityAction`3\n  isExternal: false\n  name: Argument1\n  nameWithType: ActivityAction<T1,T2,T3>.Argument1\n- uid: System.Activities.ActivityAction`3.Argument2*\n  parent: System.Activities.ActivityAction`3\n  isExternal: false\n  name: Argument2\n  nameWithType: ActivityAction<T1,T2,T3>.Argument2\n- uid: System.Activities.ActivityAction`3.Argument3*\n  parent: System.Activities.ActivityAction`3\n  isExternal: false\n  name: Argument3\n  nameWithType: ActivityAction<T1,T2,T3>.Argument3\n"}