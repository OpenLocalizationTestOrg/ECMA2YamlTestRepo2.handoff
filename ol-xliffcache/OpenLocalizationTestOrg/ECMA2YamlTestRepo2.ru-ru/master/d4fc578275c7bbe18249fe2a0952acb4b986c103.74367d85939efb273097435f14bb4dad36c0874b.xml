{"nodes":[{"pos":[568,708],"content":"Represents a COM+ method that is exposed when the interface on a COM+ component is exposed as a Web service. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a COM+ method that is exposed when the interface on a COM+ component is exposed as a Web service. This class cannot be inherited.","pos":[0,140],"nodes":[{"content":"Represents a COM+ method that is exposed when the interface on a COM+ component is exposed as a Web service.","pos":[0,108]},{"content":"This class cannot be inherited.","pos":[109,140]}]}]},{"pos":[721,2009],"content":"The COM+ integration configuration tool (ComSvcConfig.exe) can be used to add specific methods from a COM interface to appear on the generated service contract.       For example, you can use the following command to add the three named methods from the `IFinances` COM interface on the `ItemOrders.Financial` component, to the generated service contract.      ```   ComSvcConfig.exe /i /application:OnlineStore /contract:ItemOrders.Financial,IFinances.{TransferFunds,AddFunds,RemoveFunds} /hosting:complus   ```       When you run the ComSvcConfig.exe too, it then generates the following service contract listing the previously mentioned methods as `exposedMethod` elements.      ```      <comContract contractType=\"{C551FBA9-E3AA-4272-8C2A-84BD8D290AC7}\" name=\"IFinances\" namespace=\"http://contoso.com/services/financial\">       <exposedMethod name=\"TransferFunds\"/>       <exposedMethod name=\"AddFunds\"/>       <exposedMethod name=\"RemoveFunds\"/>   </comContract>      ```       At service initialization time, the runtime attempts to generate a service contract by reflecting over and adding only the methods included in the list of `exposedMethod` elements. A trace is produced for every interface method that is not included on the service contract.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The COM+ integration configuration tool (ComSvcConfig.exe) can be used to add specific methods from a COM interface to appear on the generated service contract.","pos":[0,160]},{"content":"For example, you can use the following command to add the three named methods from the <ph id=\"ph1\">`IFinances`</ph> COM interface on the <ph id=\"ph2\">`ItemOrders.Financial`</ph> component, to the generated service contract.","pos":[167,355],"source":"       For example, you can use the following command to add the three named methods from the `IFinances` COM interface on the `ItemOrders.Financial` component, to the generated service contract."},{"content":"<ph id=\"ph1\">```   ComSvcConfig.exe /i /application:OnlineStore /contract:ItemOrders.Financial,IFinances.{TransferFunds,AddFunds,RemoveFunds} /hosting:complus   ```</ph>       When you run the ComSvcConfig.exe too, it then generates the following service contract listing the previously mentioned methods as <ph id=\"ph2\">`exposedMethod`</ph> elements.","pos":[361,676],"source":"```   ComSvcConfig.exe /i /application:OnlineStore /contract:ItemOrders.Financial,IFinances.{TransferFunds,AddFunds,RemoveFunds} /hosting:complus   ```       When you run the ComSvcConfig.exe too, it then generates the following service contract listing the previously mentioned methods as `exposedMethod` elements."},{"content":"<ph id=\"ph1\">```      &lt;comContract contractType=\"{C551FBA9-E3AA-4272-8C2A-84BD8D290AC7}\" name=\"IFinances\" namespace=\"http://contoso.com/services/financial\"&gt;       &lt;exposedMethod name=\"TransferFunds\"/&gt;       &lt;exposedMethod name=\"AddFunds\"/&gt;       &lt;exposedMethod name=\"RemoveFunds\"/&gt;   &lt;/comContract&gt;      ```</ph>       At service initialization time, the runtime attempts to generate a service contract by reflecting over and adding only the methods included in the list of <ph id=\"ph2\">`exposedMethod`</ph> elements.","pos":[682,1163],"source":"```      <comContract contractType=\"{C551FBA9-E3AA-4272-8C2A-84BD8D290AC7}\" name=\"IFinances\" namespace=\"http://contoso.com/services/financial\">       <exposedMethod name=\"TransferFunds\"/>       <exposedMethod name=\"AddFunds\"/>       <exposedMethod name=\"RemoveFunds\"/>   </comContract>      ```       At service initialization time, the runtime attempts to generate a service contract by reflecting over and adding only the methods included in the list of `exposedMethod` elements."},{"content":"A trace is produced for every interface method that is not included on the service contract.","pos":[1164,1256]}]},{"pos":[5388,5500],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Configuration.ComMethodElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.ComMethodElement\"></xref> class."},{"pos":[6165,6303],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Configuration.ComMethodElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified method.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.ComMethodElement\"></xref> class with the specified method."},{"pos":[6446,6468],"content":"A COM+ method exposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"A COM+ method exposed.","pos":[0,22]}]},{"pos":[7011,7115],"content":"Gets the COM+ method that is exposed when the interface on a COM+ component is exposed as a Web service.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the COM+ method that is exposed when the interface on a COM+ component is exposed as a Web service.","pos":[0,104]}]},{"pos":[7238,7349],"content":"The name of the COM+ method that is exposed when the interface on a COM+ component is exposed as a Web service.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the COM+ method that is exposed when the interface on a COM+ component is exposed as a Web service.","pos":[0,111]}]},{"pos":[8085,8097],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Configuration.ComMethodElement\n  id: ComMethodElement\n  children:\n  - System.ServiceModel.Configuration.ComMethodElement.#ctor\n  - System.ServiceModel.Configuration.ComMethodElement.#ctor(System.String)\n  - System.ServiceModel.Configuration.ComMethodElement.ExposedMethod\n  - System.ServiceModel.Configuration.ComMethodElement.Properties\n  langs:\n  - csharp\n  name: ComMethodElement\n  nameWithType: ComMethodElement\n  fullName: System.ServiceModel.Configuration.ComMethodElement\n  type: Class\n  summary: Represents a COM+ method that is exposed when the interface on a COM+ component is exposed as a Web service. This class cannot be inherited.\n  remarks: \"The COM+ integration configuration tool (ComSvcConfig.exe) can be used to add specific methods from a COM interface to appear on the generated service contract.  \\n  \\n For example, you can use the following command to add the three named methods from the `IFinances` COM interface on the `ItemOrders.Financial` component, to the generated service contract.  \\n  \\n```  \\nComSvcConfig.exe /i /application:OnlineStore /contract:ItemOrders.Financial,IFinances.{TransferFunds,AddFunds,RemoveFunds} /hosting:complus  \\n```  \\n  \\n When you run the ComSvcConfig.exe too, it then generates the following service contract listing the previously mentioned methods as `exposedMethod` elements.  \\n  \\n```  \\n  \\n<comContract contractType=\\\"{C551FBA9-E3AA-4272-8C2A-84BD8D290AC7}\\\" name=\\\"IFinances\\\" namespace=\\\"http://contoso.com/services/financial\\\">  \\n    <exposedMethod name=\\\"TransferFunds\\\"/>  \\n    <exposedMethod name=\\\"AddFunds\\\"/>  \\n    <exposedMethod name=\\\"RemoveFunds\\\"/>  \\n</comContract>  \\n  \\n```  \\n  \\n At service initialization time, the runtime attempts to generate a service contract by reflecting over and adding only the methods included in the list of `exposedMethod` elements. A trace is produced for every interface method that is not included on the service contract.\"\n  syntax:\n    content: 'public sealed class ComMethodElement : System.Configuration.ConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ComMethodElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Configuration.ComMethodElement\n  langs:\n  - csharp\n  name: ComMethodElement()\n  nameWithType: ComMethodElement.ComMethodElement()\n  fullName: System.ServiceModel.Configuration.ComMethodElement.ComMethodElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.ComMethodElement\"></xref> class.\n  syntax:\n    content: public ComMethodElement ();\n    parameters: []\n  overload: System.ServiceModel.Configuration.ComMethodElement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ComMethodElement.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.ServiceModel.Configuration.ComMethodElement\n  langs:\n  - csharp\n  name: ComMethodElement(String)\n  nameWithType: ComMethodElement.ComMethodElement(String)\n  fullName: System.ServiceModel.Configuration.ComMethodElement.ComMethodElement(String)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.ComMethodElement\"></xref> class with the specified method.\n  syntax:\n    content: public ComMethodElement (string method);\n    parameters:\n    - id: method\n      type: System.String\n      description: A COM+ method exposed.\n  overload: System.ServiceModel.Configuration.ComMethodElement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ComMethodElement.ExposedMethod\n  id: ExposedMethod\n  parent: System.ServiceModel.Configuration.ComMethodElement\n  langs:\n  - csharp\n  name: ExposedMethod\n  nameWithType: ComMethodElement.ExposedMethod\n  fullName: System.ServiceModel.Configuration.ComMethodElement.ExposedMethod\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets the COM+ method that is exposed when the interface on a COM+ component is exposed as a Web service.\n  syntax:\n    content: public string ExposedMethod { get; set; }\n    return:\n      type: System.String\n      description: The name of the COM+ method that is exposed when the interface on a COM+ component is exposed as a Web service.\n  overload: System.ServiceModel.Configuration.ComMethodElement.ExposedMethod*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ComMethodElement.Properties\n  id: Properties\n  parent: System.ServiceModel.Configuration.ComMethodElement\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: ComMethodElement.Properties\n  fullName: System.ServiceModel.Configuration.ComMethodElement.Properties\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: To be added.\n  overload: System.ServiceModel.Configuration.ComMethodElement.Properties*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: System.Configuration.ConfigurationElement\n- uid: System.ServiceModel.Configuration.ComMethodElement.#ctor\n  parent: System.ServiceModel.Configuration.ComMethodElement\n  isExternal: false\n  name: ComMethodElement()\n  nameWithType: ComMethodElement.ComMethodElement()\n  fullName: System.ServiceModel.Configuration.ComMethodElement.ComMethodElement()\n- uid: System.ServiceModel.Configuration.ComMethodElement.#ctor(System.String)\n  parent: System.ServiceModel.Configuration.ComMethodElement\n  isExternal: false\n  name: ComMethodElement(String)\n  nameWithType: ComMethodElement.ComMethodElement(String)\n  fullName: System.ServiceModel.Configuration.ComMethodElement.ComMethodElement(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Configuration.ComMethodElement.ExposedMethod\n  parent: System.ServiceModel.Configuration.ComMethodElement\n  isExternal: false\n  name: ExposedMethod\n  nameWithType: ComMethodElement.ExposedMethod\n  fullName: System.ServiceModel.Configuration.ComMethodElement.ExposedMethod\n- uid: System.ServiceModel.Configuration.ComMethodElement.Properties\n  parent: System.ServiceModel.Configuration.ComMethodElement\n  isExternal: false\n  name: Properties\n  nameWithType: ComMethodElement.Properties\n  fullName: System.ServiceModel.Configuration.ComMethodElement.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.ServiceModel.Configuration.ComMethodElement.#ctor*\n  parent: System.ServiceModel.Configuration.ComMethodElement\n  isExternal: false\n  name: ComMethodElement\n  nameWithType: ComMethodElement.ComMethodElement\n- uid: System.ServiceModel.Configuration.ComMethodElement.ExposedMethod*\n  parent: System.ServiceModel.Configuration.ComMethodElement\n  isExternal: false\n  name: ExposedMethod\n  nameWithType: ComMethodElement.ExposedMethod\n- uid: System.ServiceModel.Configuration.ComMethodElement.Properties*\n  parent: System.ServiceModel.Configuration.ComMethodElement\n  isExternal: false\n  name: Properties\n  nameWithType: ComMethodElement.Properties\n"}