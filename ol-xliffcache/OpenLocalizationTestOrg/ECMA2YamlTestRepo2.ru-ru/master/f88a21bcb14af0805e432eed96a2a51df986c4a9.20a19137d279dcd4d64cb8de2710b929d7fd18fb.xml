{"nodes":[{"pos":[786,1067],"content":"The DirectoryConnection class is an abstract class and cannot be instantiated. Use the <xref href=\"System.DirectoryServices.Protocols.LdapConnection\"></xref> or <xref href=\"System.DirectoryServices.Protocols.DsmlSoapHttpConnection\"></xref> classes to connect to a directory server.","needQuote":true,"needEscape":true,"nodes":[{"content":"The DirectoryConnection class is an abstract class and cannot be instantiated.","pos":[0,78]},{"content":"Use the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.LdapConnection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.DirectoryServices.Protocols.DsmlSoapHttpConnection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> classes to connect to a directory server.","pos":[79,281],"source":" Use the <xref href=\"System.DirectoryServices.Protocols.LdapConnection\"></xref> or <xref href=\"System.DirectoryServices.Protocols.DsmlSoapHttpConnection\"></xref> classes to connect to a directory server."}]},{"pos":[1705,1855],"content":"The DirectoryConnection constructor initializes a new instance of a <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.DirectoryConnection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"The DirectoryConnection constructor initializes a new instance of a <xref href=\"System.DirectoryServices.Protocols.DirectoryConnection\"></xref> class."},{"pos":[2534,2635],"content":"The ClientCertificates property specifies one or more client certificates to send for authentication.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ClientCertificates property specifies one or more client certificates to send for authentication.","pos":[0,101]}]},{"pos":[2881,2940],"content":"One or more client certificates to send for authentication.","needQuote":true,"needEscape":true,"nodes":[{"content":"One or more client certificates to send for authentication.","pos":[0,59]}]},{"pos":[3516,3598],"content":"The Credential property specifies alternate credentials for the connection object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Credential property specifies alternate credentials for the connection object.","pos":[0,82]}]},{"pos":[3610,3656],"content":"If not specified, the default value is <ph id=\"ph1\">`null`</ph>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"If not specified, the default value is `null`."},{"pos":[3816,3864],"content":"Alternate credentials for the connection object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Alternate credentials for the connection object.","pos":[0,48]}]},{"pos":[4427,4524],"content":"The Directory property specifies the domain or the server to which the connection should be made.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Directory property specifies the domain or the server to which the connection should be made.","pos":[0,97]}]},{"pos":[4536,4669],"content":"For example, \"http://fabrikam.com/platforms/adssoap.dll\" represents a DSML server and \"dc-01.fabrikam.com\" represents an LDAP server.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"For example, \"http://fabrikam.com/platforms/adssoap.dll\" represents a DSML server and \"dc-01.fabrikam.com\" represents an LDAP server.","pos":[0,133]}]},{"pos":[4880,4944],"content":"The domain or the server to which the connection should be made.","needQuote":true,"needEscape":true,"nodes":[{"content":"The domain or the server to which the connection should be made.","pos":[0,64]}]},{"pos":[5674,5746],"content":"The SendRequest method sends a single directory operation to the server.","needQuote":true,"needEscape":true,"nodes":[{"content":"The SendRequest method sends a single directory operation to the server.","pos":[0,72]}]},{"pos":[6031,6139],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.DirectoryRequest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the request.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.Protocols.DirectoryRequest\"></xref> object that contains the request."},{"pos":[6236,6494],"content":"A <xref href=\"System.DirectoryServices.Protocols.DirectoryResponse\"></xref> object that contains the server response to the request operation. The returned response object may be different than the requested object if the server returns a different response.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.DirectoryResponse\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the server response to the request operation.","pos":[0,142],"source":"A <xref href=\"System.DirectoryServices.Protocols.DirectoryResponse\"></xref> object that contains the server response to the request operation."},{"content":"The returned response object may be different than the requested object if the server returns a different response.","pos":[143,258]}]},{"pos":[7048,7142],"content":"The Timeout property contains the length of time, in seconds, before the connection times out.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Timeout property contains the length of time, in seconds, before the connection times out.","pos":[0,94]}]},{"pos":[7154,7213],"content":"Thirty seconds is the default time length property setting.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Thirty seconds is the default time length property setting.","pos":[0,59]}]},{"pos":[7342,7406],"content":"The length of time, in seconds, before the connection times out.","needQuote":true,"needEscape":true,"nodes":[{"content":"The length of time, in seconds, before the connection times out.","pos":[0,64]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.Protocols.DirectoryConnection\n  id: DirectoryConnection\n  children:\n  - System.DirectoryServices.Protocols.DirectoryConnection.#ctor\n  - System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates\n  - System.DirectoryServices.Protocols.DirectoryConnection.Credential\n  - System.DirectoryServices.Protocols.DirectoryConnection.Directory\n  - System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)\n  - System.DirectoryServices.Protocols.DirectoryConnection.Timeout\n  langs:\n  - csharp\n  name: DirectoryConnection\n  nameWithType: DirectoryConnection\n  fullName: System.DirectoryServices.Protocols.DirectoryConnection\n  type: Class\n  summary: The DirectoryConnection class is an abstract class and cannot be instantiated. Use the <xref href=\"System.DirectoryServices.Protocols.LdapConnection\"></xref> or <xref href=\"System.DirectoryServices.Protocols.DsmlSoapHttpConnection\"></xref> classes to connect to a directory server.\n  syntax:\n    content: public abstract class DirectoryConnection\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.Protocols.DirectoryConnection.#ctor\n  id: '#ctor'\n  parent: System.DirectoryServices.Protocols.DirectoryConnection\n  langs:\n  - csharp\n  name: DirectoryConnection()\n  nameWithType: DirectoryConnection.DirectoryConnection()\n  fullName: System.DirectoryServices.Protocols.DirectoryConnection.DirectoryConnection()\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The DirectoryConnection constructor initializes a new instance of a <xref href=\"System.DirectoryServices.Protocols.DirectoryConnection\"></xref> class.\n  syntax:\n    content: protected DirectoryConnection ();\n    parameters: []\n  overload: System.DirectoryServices.Protocols.DirectoryConnection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates\n  id: ClientCertificates\n  parent: System.DirectoryServices.Protocols.DirectoryConnection\n  langs:\n  - csharp\n  name: ClientCertificates\n  nameWithType: DirectoryConnection.ClientCertificates\n  fullName: System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates\n  type: Property\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The ClientCertificates property specifies one or more client certificates to send for authentication.\n  syntax:\n    content: public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n      description: One or more client certificates to send for authentication.\n  overload: System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.Protocols.DirectoryConnection.Credential\n  id: Credential\n  parent: System.DirectoryServices.Protocols.DirectoryConnection\n  langs:\n  - csharp\n  name: Credential\n  nameWithType: DirectoryConnection.Credential\n  fullName: System.DirectoryServices.Protocols.DirectoryConnection.Credential\n  type: Property\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The Credential property specifies alternate credentials for the connection object.\n  remarks: If not specified, the default value is `null`.\n  syntax:\n    content: public virtual System.Net.NetworkCredential Credential { set; }\n    return:\n      type: System.Net.NetworkCredential\n      description: Alternate credentials for the connection object.\n  overload: System.DirectoryServices.Protocols.DirectoryConnection.Credential*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.Protocols.DirectoryConnection.Directory\n  id: Directory\n  parent: System.DirectoryServices.Protocols.DirectoryConnection\n  langs:\n  - csharp\n  name: Directory\n  nameWithType: DirectoryConnection.Directory\n  fullName: System.DirectoryServices.Protocols.DirectoryConnection.Directory\n  type: Property\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The Directory property specifies the domain or the server to which the connection should be made.\n  remarks: For example, \"http://fabrikam.com/platforms/adssoap.dll\" represents a DSML server and \"dc-01.fabrikam.com\" represents an LDAP server.\n  syntax:\n    content: public virtual System.DirectoryServices.Protocols.DirectoryIdentifier Directory { get; }\n    return:\n      type: System.DirectoryServices.Protocols.DirectoryIdentifier\n      description: The domain or the server to which the connection should be made.\n  overload: System.DirectoryServices.Protocols.DirectoryConnection.Directory*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)\n  id: SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)\n  parent: System.DirectoryServices.Protocols.DirectoryConnection\n  langs:\n  - csharp\n  name: SendRequest(DirectoryRequest)\n  nameWithType: DirectoryConnection.SendRequest(DirectoryRequest)\n  fullName: System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(DirectoryRequest)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The SendRequest method sends a single directory operation to the server.\n  syntax:\n    content: public abstract System.DirectoryServices.Protocols.DirectoryResponse SendRequest (System.DirectoryServices.Protocols.DirectoryRequest request);\n    parameters:\n    - id: request\n      type: System.DirectoryServices.Protocols.DirectoryRequest\n      description: A <xref href=\"System.DirectoryServices.Protocols.DirectoryRequest\"></xref> object that contains the request.\n    return:\n      type: System.DirectoryServices.Protocols.DirectoryResponse\n      description: A <xref href=\"System.DirectoryServices.Protocols.DirectoryResponse\"></xref> object that contains the server response to the request operation. The returned response object may be different than the requested object if the server returns a different response.\n  overload: System.DirectoryServices.Protocols.DirectoryConnection.SendRequest*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.Protocols.DirectoryConnection.Timeout\n  id: Timeout\n  parent: System.DirectoryServices.Protocols.DirectoryConnection\n  langs:\n  - csharp\n  name: Timeout\n  nameWithType: DirectoryConnection.Timeout\n  fullName: System.DirectoryServices.Protocols.DirectoryConnection.Timeout\n  type: Property\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The Timeout property contains the length of time, in seconds, before the connection times out.\n  remarks: Thirty seconds is the default time length property setting.\n  syntax:\n    content: public virtual TimeSpan Timeout { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The length of time, in seconds, before the connection times out.\n  overload: System.DirectoryServices.Protocols.DirectoryConnection.Timeout*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.DirectoryServices.Protocols.DirectoryConnection.#ctor\n  parent: System.DirectoryServices.Protocols.DirectoryConnection\n  isExternal: false\n  name: DirectoryConnection()\n  nameWithType: DirectoryConnection.DirectoryConnection()\n  fullName: System.DirectoryServices.Protocols.DirectoryConnection.DirectoryConnection()\n- uid: System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates\n  parent: System.DirectoryServices.Protocols.DirectoryConnection\n  isExternal: false\n  name: ClientCertificates\n  nameWithType: DirectoryConnection.ClientCertificates\n  fullName: System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509CertificateCollection\n  nameWithType: X509CertificateCollection\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n- uid: System.DirectoryServices.Protocols.DirectoryConnection.Credential\n  parent: System.DirectoryServices.Protocols.DirectoryConnection\n  isExternal: false\n  name: Credential\n  nameWithType: DirectoryConnection.Credential\n  fullName: System.DirectoryServices.Protocols.DirectoryConnection.Credential\n- uid: System.Net.NetworkCredential\n  parent: System.Net\n  isExternal: true\n  name: NetworkCredential\n  nameWithType: NetworkCredential\n  fullName: System.Net.NetworkCredential\n- uid: System.DirectoryServices.Protocols.DirectoryConnection.Directory\n  parent: System.DirectoryServices.Protocols.DirectoryConnection\n  isExternal: false\n  name: Directory\n  nameWithType: DirectoryConnection.Directory\n  fullName: System.DirectoryServices.Protocols.DirectoryConnection.Directory\n- uid: System.DirectoryServices.Protocols.DirectoryIdentifier\n  parent: System.DirectoryServices.Protocols\n  isExternal: false\n  name: DirectoryIdentifier\n  nameWithType: DirectoryIdentifier\n  fullName: System.DirectoryServices.Protocols.DirectoryIdentifier\n- uid: System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)\n  parent: System.DirectoryServices.Protocols.DirectoryConnection\n  isExternal: false\n  name: SendRequest(DirectoryRequest)\n  nameWithType: DirectoryConnection.SendRequest(DirectoryRequest)\n  fullName: System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(DirectoryRequest)\n- uid: System.DirectoryServices.Protocols.DirectoryResponse\n  parent: System.DirectoryServices.Protocols\n  isExternal: false\n  name: DirectoryResponse\n  nameWithType: DirectoryResponse\n  fullName: System.DirectoryServices.Protocols.DirectoryResponse\n- uid: System.DirectoryServices.Protocols.DirectoryRequest\n  parent: System.DirectoryServices.Protocols\n  isExternal: false\n  name: DirectoryRequest\n  nameWithType: DirectoryRequest\n  fullName: System.DirectoryServices.Protocols.DirectoryRequest\n- uid: System.DirectoryServices.Protocols.DirectoryConnection.Timeout\n  parent: System.DirectoryServices.Protocols.DirectoryConnection\n  isExternal: false\n  name: Timeout\n  nameWithType: DirectoryConnection.Timeout\n  fullName: System.DirectoryServices.Protocols.DirectoryConnection.Timeout\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.DirectoryServices.Protocols.DirectoryConnection.#ctor*\n  parent: System.DirectoryServices.Protocols.DirectoryConnection\n  isExternal: false\n  name: DirectoryConnection\n  nameWithType: DirectoryConnection.DirectoryConnection\n- uid: System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates*\n  parent: System.DirectoryServices.Protocols.DirectoryConnection\n  isExternal: false\n  name: ClientCertificates\n  nameWithType: DirectoryConnection.ClientCertificates\n- uid: System.DirectoryServices.Protocols.DirectoryConnection.Credential*\n  parent: System.DirectoryServices.Protocols.DirectoryConnection\n  isExternal: false\n  name: Credential\n  nameWithType: DirectoryConnection.Credential\n- uid: System.DirectoryServices.Protocols.DirectoryConnection.Directory*\n  parent: System.DirectoryServices.Protocols.DirectoryConnection\n  isExternal: false\n  name: Directory\n  nameWithType: DirectoryConnection.Directory\n- uid: System.DirectoryServices.Protocols.DirectoryConnection.SendRequest*\n  parent: System.DirectoryServices.Protocols.DirectoryConnection\n  isExternal: false\n  name: SendRequest\n  nameWithType: DirectoryConnection.SendRequest\n- uid: System.DirectoryServices.Protocols.DirectoryConnection.Timeout*\n  parent: System.DirectoryServices.Protocols.DirectoryConnection\n  isExternal: false\n  name: Timeout\n  nameWithType: DirectoryConnection.Timeout\n"}