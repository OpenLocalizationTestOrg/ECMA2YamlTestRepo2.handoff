{"nodes":[{"pos":[1610,1706],"content":"Provides supplemental metadata to the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.TypeDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Provides supplemental metadata to the <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>."},{"pos":[1719,2987],"content":"The TypeDescriptionProvider class dynamically extends the type information associated with a type or object by adding, modifying, or hiding characteristics such as attributes, properties, and events. There can be multiple type description provider classes that offer metadata to a single <xref:System.ComponentModel.TypeDescriptor>.       There are two ways to associate a TypeDescriptionProvider with a <xref:System.ComponentModel.TypeDescriptor>:      -   At design time, when the target class can be assigned the appropriate <xref:System.ComponentModel.TypeDescriptionProviderAttribute> tag.      -   At run time, when one of the <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> methods of the <xref:System.ComponentModel.TypeDescriptor> class can be called. These overloaded methods require either the target object or its class type.       The TypeDescriptionProvider class relies on a parent object of the same type, supplied during construction. This allows classes that derive from <xref:System.ComponentModel.CustomTypeDescriptor> to selectively override methods.       Instances of TypeDescriptionProvider are only built upon demand, minimizing the impact of custom type information on performance.       This class cannot be inherited.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The TypeDescriptionProvider class dynamically extends the type information associated with a type or object by adding, modifying, or hiding characteristics such as attributes, properties, and events. There can be multiple type description provider classes that offer metadata to a single <xref:System.ComponentModel.TypeDescriptor>.       There are two ways to associate a TypeDescriptionProvider with a <xref:System.ComponentModel.TypeDescriptor>:      -   At design time, when the target class can be assigned the appropriate <xref:System.ComponentModel.TypeDescriptionProviderAttribute> tag.      -   At run time, when one of the <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> methods of the <xref:System.ComponentModel.TypeDescriptor> class can be called. These overloaded methods require either the target object or its class type.       The TypeDescriptionProvider class relies on a parent object of the same type, supplied during construction. This allows classes that derive from <xref:System.ComponentModel.CustomTypeDescriptor> to selectively override methods.       Instances of TypeDescriptionProvider are only built upon demand, minimizing the impact of custom type information on performance.       This class cannot be inherited.","pos":[0,1256],"nodes":[{"content":"The TypeDescriptionProvider class dynamically extends the type information associated with a type or object by adding, modifying, or hiding characteristics such as attributes, properties, and events.","pos":[0,199]},{"content":"There can be multiple type description provider classes that offer metadata to a single &lt;xref:System.ComponentModel.TypeDescriptor&gt;.","pos":[200,332],"source":" There can be multiple type description provider classes that offer metadata to a single <xref:System.ComponentModel.TypeDescriptor>."},{"content":"There are two ways to associate a TypeDescriptionProvider with a &lt;xref:System.ComponentModel.TypeDescriptor&gt;:      -   At design time, when the target class can be assigned the appropriate &lt;xref:System.ComponentModel.TypeDescriptionProviderAttribute&gt; tag.","pos":[339,594],"source":"       There are two ways to associate a TypeDescriptionProvider with a <xref:System.ComponentModel.TypeDescriptor>:      -   At design time, when the target class can be assigned the appropriate <xref:System.ComponentModel.TypeDescriptionProviderAttribute> tag."},{"content":"-   At run time, when one of the &lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt; methods of the &lt;xref:System.ComponentModel.TypeDescriptor&gt; class can be called.","pos":[600,771],"source":"      -   At run time, when one of the <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> methods of the <xref:System.ComponentModel.TypeDescriptor> class can be called."},{"content":"These overloaded methods require either the target object or its class type.","pos":[772,848]},{"content":"The TypeDescriptionProvider class relies on a parent object of the same type, supplied during construction.","pos":[855,962]},{"content":"This allows classes that derive from &lt;xref:System.ComponentModel.CustomTypeDescriptor&gt; to selectively override methods.","pos":[963,1082],"source":" This allows classes that derive from <xref:System.ComponentModel.CustomTypeDescriptor> to selectively override methods."},{"content":"Instances of TypeDescriptionProvider are only built upon demand, minimizing the impact of custom type information on performance.","pos":[1089,1218]},{"content":"This class cannot be inherited.","pos":[1225,1256]}]}]},{"pos":[3578,3685],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.TypeDescriptionProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> class."},{"pos":[3697,3911],"content":"This constructor is equivalent to calling the other &lt;xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29&gt; constructor with a parameter value that is <ph id=\"ph1\">`null`</ph>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"This constructor is equivalent to calling the other <xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29> constructor with a parameter value that is `null`."},{"pos":[4684,4832],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.TypeDescriptionProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using a parent type description provider.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> class using a parent type description provider."},{"pos":[4845,5989],"content":"If the `parent` parameter is `null`, all <xref:System.ComponentModel.TypeDescriptionProvider> methods will return default values. Otherwise, all <xref:System.ComponentModel.TypeDescriptionProvider> methods will delegate to the methods of `parent`.       The following table shows the default return values for <xref:System.ComponentModel.TypeDescriptionProvider> methods.      |Method|Default return value|   |------------|--------------------------|   |<xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A>|`null`|   |<xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A>|A newly created object through a call to the <xref:System.Activator.CreateInstance%2A> method.|   |<xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A>|A default instance of a <xref:System.ComponentModel.CustomTypeDescriptor> class.|   |<xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>|A default instance of a <xref:System.ComponentModel.CustomTypeDescriptor> class.|   |<xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>|The `objectType` first parameter.|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the <ph id=\"ph1\">`parent`</ph> parameter is <ph id=\"ph2\">`null`</ph>, all &lt;xref:System.ComponentModel.TypeDescriptionProvider&gt; methods will return default values.","pos":[0,129],"source":"If the `parent` parameter is `null`, all <xref:System.ComponentModel.TypeDescriptionProvider> methods will return default values."},{"content":"Otherwise, all &lt;xref:System.ComponentModel.TypeDescriptionProvider&gt; methods will delegate to the methods of <ph id=\"ph1\">`parent`</ph>.","pos":[130,247],"source":" Otherwise, all <xref:System.ComponentModel.TypeDescriptionProvider> methods will delegate to the methods of `parent`."},{"content":"The following table shows the default return values for &lt;xref:System.ComponentModel.TypeDescriptionProvider&gt; methods.","pos":[254,371],"source":"       The following table shows the default return values for <xref:System.ComponentModel.TypeDescriptionProvider> methods."},{"content":"|Method|Default return value|   |------------|--------------------------|   |&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A&gt;|<ph id=\"ph1\">`null`</ph>|   |&lt;xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A&gt;|A newly created object through a call to the &lt;xref:System.Activator.CreateInstance%2A&gt; method.|   |&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A&gt;|A default instance of a &lt;xref:System.ComponentModel.CustomTypeDescriptor&gt; class.|   |&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;|A default instance of a &lt;xref:System.ComponentModel.CustomTypeDescriptor&gt; class.|   |&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;|The <ph id=\"ph2\">`objectType`</ph> first parameter.|","pos":[377,1134],"source":"      |Method|Default return value|   |------------|--------------------------|   |<xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A>|`null`|   |<xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A>|A newly created object through a call to the <xref:System.Activator.CreateInstance%2A> method.|   |<xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A>|A default instance of a <xref:System.ComponentModel.CustomTypeDescriptor> class.|   |<xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>|A default instance of a <xref:System.ComponentModel.CustomTypeDescriptor> class.|   |<xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>|The `objectType` first parameter.|"}]},{"pos":[6214,6251],"content":"The parent type description provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"The parent type description provider.","pos":[0,37]}]},{"pos":[7010,7070],"content":"Creates an object that can substitute for another data type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an object that can substitute for another data type.","pos":[0,60]}]},{"pos":[7083,7764],"content":"The <xref:System.IServiceProvider> specified by the `provider` parameter is passed in by the <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=fullName> method of the <xref:System.ComponentModel.TypeDescriptor> class. If `provider` is not `null`, the service provider can be used by the type description provider to obtain additional context about the creation call.       The CreateInstance method is `virtual` and, by default, returns the result of the <xref:System.Activator.CreateInstance%2A?displayProperty=fullName> method if `provider` is `null`. If `provider` is `null`, this method will invoke the CreateInstance method of the parent provider.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.IServiceProvider&gt; specified by the <ph id=\"ph1\">`provider`</ph> parameter is passed in by the &lt;xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=fullName&gt; method of the &lt;xref:System.ComponentModel.TypeDescriptor&gt; class.","pos":[0,244],"source":"The <xref:System.IServiceProvider> specified by the `provider` parameter is passed in by the <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=fullName> method of the <xref:System.ComponentModel.TypeDescriptor> class."},{"content":"If <ph id=\"ph1\">`provider`</ph> is not <ph id=\"ph2\">`null`</ph>, the service provider can be used by the type description provider to obtain additional context about the creation call.","pos":[245,393],"source":" If `provider` is not `null`, the service provider can be used by the type description provider to obtain additional context about the creation call."},{"content":"The CreateInstance method is <ph id=\"ph1\">`virtual`</ph> and, by default, returns the result of the &lt;xref:System.Activator.CreateInstance%2A?displayProperty=fullName&gt; method if <ph id=\"ph2\">`provider`</ph> is <ph id=\"ph3\">`null`</ph>.","pos":[400,580],"source":"       The CreateInstance method is `virtual` and, by default, returns the result of the <xref:System.Activator.CreateInstance%2A?displayProperty=fullName> method if `provider` is `null`."},{"content":"If <ph id=\"ph1\">`provider`</ph> is <ph id=\"ph2\">`null`</ph>, this method will invoke the CreateInstance method of the parent provider.","pos":[581,679],"source":" If `provider` is `null`, this method will invoke the CreateInstance method of the parent provider."}]},{"pos":[7994,8023],"content":"An optional service provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"An optional service provider.","pos":[0,29]}]},{"pos":[8088,8203],"content":"The type of object to create. This parameter is never <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of object to create.","pos":[0,29]},{"content":"This parameter is never <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[30,115],"source":" This parameter is never <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[8268,8469],"content":"An optional array of types that represent the parameter types to be passed to the object's constructor. This array can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or of zero length.","needQuote":true,"needEscape":true,"nodes":[{"content":"An optional array of types that represent the parameter types to be passed to the object's constructor.","pos":[0,103]},{"content":"This array can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or of zero length.","pos":[104,201],"source":" This array can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or of zero length."}]},{"pos":[8532,8606],"content":"An optional array of parameter values to pass to the object's constructor.","needQuote":true,"needEscape":true,"nodes":[{"content":"An optional array of parameter values to pass to the object's constructor.","pos":[0,74]}]},{"pos":[8664,8700],"content":"The substitute <xref:System.Object>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The substitute &lt;xref:System.Object&gt;.","pos":[0,36],"source":"The substitute <xref:System.Object>."}]},{"pos":[9241,9338],"content":"Gets a per-object cache, accessed as an <xref:System.Collections.IDictionary> of key/value pairs.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a per-object cache, accessed as an &lt;xref:System.Collections.IDictionary&gt; of key/value pairs.","pos":[0,97],"source":"Gets a per-object cache, accessed as an <xref:System.Collections.IDictionary> of key/value pairs."}]},{"pos":[9351,10765],"content":"A <xref:System.ComponentModel.TypeDescriptor> may need to perform complex operations on collections of metadata. Because types are not unloaded for the life of a domain, the <xref:System.ComponentModel.TypeDescriptor> class will automatically cache the results of these operations based on type. However, some operations use live object instances. These operations cannot be cached within the <xref:System.ComponentModel.TypeDescriptor> class because caching them would prevent the object from being garbage collected. Instead, the <xref:System.ComponentModel.TypeDescriptor> class allows for a per-object cache, accessed as an <xref:System.Collections.IDictionary> of key/value pairs, to exist on an object. The GetCache method returns an instance of this cache. The GetCache method will return `null` if there is no supported cache for an object.       The default <xref:System.ComponentModel.TypeDescriptionProvider> used by <xref:System.ComponentModel.TypeDescriptor> examines the object to see if it is a sited component that implements the <xref:System.ComponentModel.Design.IDictionaryService> interface. If the object is, it uses the dictionary service to store the object's cache. Otherwise, the object it returns `null`. Other type description providers may provide their own implementation here. For example, dependency objects can just attach a property of type <xref:System.Collections.IDictionary>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A &lt;xref:System.ComponentModel.TypeDescriptor&gt; may need to perform complex operations on collections of metadata.","pos":[0,112],"source":"A <xref:System.ComponentModel.TypeDescriptor> may need to perform complex operations on collections of metadata."},{"content":"Because types are not unloaded for the life of a domain, the &lt;xref:System.ComponentModel.TypeDescriptor&gt; class will automatically cache the results of these operations based on type.","pos":[113,295],"source":" Because types are not unloaded for the life of a domain, the <xref:System.ComponentModel.TypeDescriptor> class will automatically cache the results of these operations based on type."},{"content":"However, some operations use live object instances.","pos":[296,347]},{"content":"These operations cannot be cached within the &lt;xref:System.ComponentModel.TypeDescriptor&gt; class because caching them would prevent the object from being garbage collected.","pos":[348,518],"source":" These operations cannot be cached within the <xref:System.ComponentModel.TypeDescriptor> class because caching them would prevent the object from being garbage collected."},{"content":"Instead, the &lt;xref:System.ComponentModel.TypeDescriptor&gt; class allows for a per-object cache, accessed as an &lt;xref:System.Collections.IDictionary&gt; of key/value pairs, to exist on an object.","pos":[519,708],"source":" Instead, the <xref:System.ComponentModel.TypeDescriptor> class allows for a per-object cache, accessed as an <xref:System.Collections.IDictionary> of key/value pairs, to exist on an object."},{"content":"The GetCache method returns an instance of this cache.","pos":[709,763]},{"content":"The GetCache method will return <ph id=\"ph1\">`null`</ph> if there is no supported cache for an object.","pos":[764,848],"source":" The GetCache method will return `null` if there is no supported cache for an object."},{"content":"The default &lt;xref:System.ComponentModel.TypeDescriptionProvider&gt; used by &lt;xref:System.ComponentModel.TypeDescriptor&gt; examines the object to see if it is a sited component that implements the &lt;xref:System.ComponentModel.Design.IDictionaryService&gt; interface.","pos":[855,1111],"source":"       The default <xref:System.ComponentModel.TypeDescriptionProvider> used by <xref:System.ComponentModel.TypeDescriptor> examines the object to see if it is a sited component that implements the <xref:System.ComponentModel.Design.IDictionaryService> interface."},{"content":"If the object is, it uses the dictionary service to store the object's cache.","pos":[1112,1189]},{"content":"Otherwise, the object it returns <ph id=\"ph1\">`null`</ph>.","pos":[1190,1230],"source":" Otherwise, the object it returns `null`."},{"content":"Other type description providers may provide their own implementation here.","pos":[1231,1306]},{"content":"For example, dependency objects can just attach a property of type &lt;xref:System.Collections.IDictionary&gt;.","pos":[1307,1412],"source":" For example, dependency objects can just attach a property of type <xref:System.Collections.IDictionary>."}]},{"pos":[10944,10982],"content":"The object for which to get the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object for which to get the cache.","pos":[0,38]}]},{"pos":[11057,11211],"content":"An &lt;xref:System.Collections.IDictionary&gt; if the provided object supports caching; otherwise, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref:System.Collections.IDictionary> if the provided object supports caching; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[11831,11892],"content":"Gets an extended custom type descriptor for the given object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an extended custom type descriptor for the given object.","pos":[0,61]}]},{"pos":[11905,13235],"content":"An extended type descriptor is a custom type descriptor that offers properties that other objects have added to this object, but that are not actually defined on the object. For example, in the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] component model, objects that implement the <xref:System.ComponentModel.IExtenderProvider> interface can attach properties to other objects that reside in the same logical container. The overloaded <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> methods do not return a type descriptor that provides these extra extended properties. The GetExtendedTypeDescriptor method returns the set of these extended properties. The <xref:System.ComponentModel.TypeDescriptor> will automatically merge the results of these two property collections. While the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] component model supports only extended properties, GetExtendedTypeDescriptor can be used for extended attributes as well as events, if the type description provider supports it.       GetExtendedTypeDescriptor is `virtual` and, by default, returns a custom type descriptor that returns empty results if no parent provider was passed. If a parent provider was passed, this method will invoke the parent provider's GetExtendedTypeDescriptor method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An extended type descriptor is a custom type descriptor that offers properties that other objects have added to this object, but that are not actually defined on the object.","pos":[0,173]},{"content":"For example, in the <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> component model, objects that implement the &lt;xref:System.ComponentModel.IExtenderProvider&gt; interface can attach properties to other objects that reside in the same logical container.","pos":[174,434],"source":" For example, in the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] component model, objects that implement the <xref:System.ComponentModel.IExtenderProvider> interface can attach properties to other objects that reside in the same logical container."},{"content":"The overloaded &lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt; methods do not return a type descriptor that provides these extra extended properties.","pos":[435,610],"source":" The overloaded <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> methods do not return a type descriptor that provides these extra extended properties."},{"content":"The GetExtendedTypeDescriptor method returns the set of these extended properties.","pos":[611,693]},{"content":"The &lt;xref:System.ComponentModel.TypeDescriptor&gt; will automatically merge the results of these two property collections.","pos":[694,813],"source":" The <xref:System.ComponentModel.TypeDescriptor> will automatically merge the results of these two property collections."},{"content":"While the <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> component model supports only extended properties, GetExtendedTypeDescriptor can be used for extended attributes as well as events, if the type description provider supports it.","pos":[814,1059],"source":" While the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] component model supports only extended properties, GetExtendedTypeDescriptor can be used for extended attributes as well as events, if the type description provider supports it."},{"content":"GetExtendedTypeDescriptor is <ph id=\"ph1\">`virtual`</ph> and, by default, returns a custom type descriptor that returns empty results if no parent provider was passed.","pos":[1066,1215],"source":"       GetExtendedTypeDescriptor is `virtual` and, by default, returns a custom type descriptor that returns empty results if no parent provider was passed."},{"content":"If a parent provider was passed, this method will invoke the parent provider's GetExtendedTypeDescriptor method.","pos":[1216,1328]}]},{"pos":[13444,13501],"content":"The object for which to get the extended type descriptor.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object for which to get the extended type descriptor.","pos":[0,57]}]},{"pos":[13589,13707],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ICustomTypeDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that can provide extended metadata for the object.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ICustomTypeDescriptor\"></xref> that can provide extended metadata for the object."},{"pos":[14319,14372],"content":"Gets the extender providers for the specified object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the extender providers for the specified object.","pos":[0,53]}]},{"pos":[14576,14617],"content":"The object to get extender providers for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to get extender providers for.","pos":[0,41]}]},{"pos":[14703,14760],"content":"An array of extender providers for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">instance</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An array of extender providers for <code>instance</code>."},{"pos":[14957,15043],"content":"<ph id=\"ph1\">&lt;code&gt;instance&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>instance</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[15553,15688],"content":"Gets the name of the specified component, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the component has no name.","needQuote":true,"needEscape":true,"source":"Gets the name of the specified component, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the component has no name."},{"pos":[15856,15880],"content":"The specified component.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified component.","pos":[0,24]}]},{"pos":[15938,15974],"content":"The name of the specified component.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the specified component.","pos":[0,36]}]},{"pos":[16171,16258],"content":"<ph id=\"ph1\">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>component</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[16753,16805],"content":"Performs normal reflection against the given object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs normal reflection against the given object.","pos":[0,52]}]},{"pos":[16818,17326],"content":"The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method. If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.       Use this method overload if you have called a type descriptor member that uses an instance instead of a type.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method. If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.       Use this method overload if you have called a type descriptor member that uses an instance instead of a type.","pos":[0,506],"nodes":[{"content":"The &lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt; method is a lower-level version of the &lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt; method.","pos":[0,198],"source":"The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method."},{"content":"If no custom type descriptor can be located for an object, &lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt; is called to perform normal reflection against the object.","pos":[199,390],"source":" If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object."},{"content":"Use this method overload if you have called a type descriptor member that uses an instance instead of a type.","pos":[397,506]}]}]},{"pos":[17480,17581],"content":"An instance of the type (should not be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>).","needQuote":true,"needEscape":true,"source":"An instance of the type (should not be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>)."},{"pos":[17637,17691],"content":"The type of reflection for this <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">instance</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The type of reflection for this <code>instance</code>."},{"pos":[17885,17971],"content":"<ph id=\"ph1\">&lt;code&gt;instance&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>instance</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[18456,18498],"content":"Performs normal reflection against a type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs normal reflection against a type.","pos":[0,42]}]},{"pos":[18511,19019],"content":"The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method. If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.       Use this method overload if you have called a type descriptor member that uses a type instead of an instance.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method. If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.       Use this method overload if you have called a type descriptor member that uses a type instead of an instance.","pos":[0,506],"nodes":[{"content":"The &lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt; method is a lower-level version of the &lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt; method.","pos":[0,198],"source":"The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method."},{"content":"If no custom type descriptor can be located for an object, &lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt; is called to perform normal reflection against the object.","pos":[199,390],"source":" If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object."},{"content":"Use this method overload if you have called a type descriptor member that uses a type instead of an instance.","pos":[397,506]}]}]},{"pos":[19173,19266],"content":"The type of object for which to retrieve the <bpt id=\"p1\">&lt;xref href=\"System.Reflection.IReflect\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The type of object for which to retrieve the <xref href=\"System.Reflection.IReflect\"></xref>."},{"pos":[19322,19378],"content":"The type of reflection for this <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">objectType</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The type of reflection for this <code>objectType</code>."},{"pos":[19572,19660],"content":"<ph id=\"ph1\">&lt;code&gt;objectType&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>objectType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[20194,20266],"content":"Performs normal reflection against the given object with the given type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs normal reflection against the given object with the given type.","pos":[0,72]}]},{"pos":[20278,20668],"content":"The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method. If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method. If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.","pos":[0,390],"nodes":[{"content":"The &lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt; method is a lower-level version of the &lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt; method.","pos":[0,198],"source":"The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method."},{"content":"If no custom type descriptor can be located for an object, &lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt; is called to perform normal reflection against the object.","pos":[199,390],"source":" If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object."}]}]},{"pos":[20846,20939],"content":"The type of object for which to retrieve the <bpt id=\"p1\">&lt;xref href=\"System.Reflection.IReflect\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The type of object for which to retrieve the <xref href=\"System.Reflection.IReflect\"></xref>."},{"pos":[21004,21097],"content":"An instance of the type. Can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An instance of the type.","pos":[0,24]},{"content":"Can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[25,93],"source":" Can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[21153,21209],"content":"The type of reflection for this <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">objectType</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The type of reflection for this <code>objectType</code>."},{"pos":[21773,21820],"content":"Converts a reflection type into a runtime type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts a reflection type into a runtime type.","pos":[0,47]}]},{"pos":[21832,22181],"content":"The GetRuntimeType method reverses the<xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method to convert a reflection type back into a runtime type. Using the GetRuntimeType method is preferred over using the <xref:System.Type.UnderlyingSystemType%2A> property, which was used in earlier versions to return the runtime type.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetRuntimeType method reverses the<xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method to convert a reflection type back into a runtime type. Using the GetRuntimeType method is preferred over using the <xref:System.Type.UnderlyingSystemType%2A> property, which was used in earlier versions to return the runtime type.","pos":[0,349],"nodes":[{"content":"The GetRuntimeType method reverses the&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt; method to convert a reflection type back into a runtime type.","pos":[0,173],"source":"The GetRuntimeType method reverses the<xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method to convert a reflection type back into a runtime type."},{"content":"Using the GetRuntimeType method is preferred over using the &lt;xref:System.Type.UnderlyingSystemType%2A&gt; property, which was used in earlier versions to return the runtime type.","pos":[174,349],"source":" Using the GetRuntimeType method is preferred over using the <xref:System.Type.UnderlyingSystemType%2A> property, which was used in earlier versions to return the runtime type."}]}]},{"pos":[22347,22393],"content":"The type to convert to its runtime equivalent.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type to convert to its runtime equivalent.","pos":[0,46]}]},{"pos":[22449,22540],"content":"A &lt;xref:System.Type&gt; that represents the runtime equivalent of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">reflectionType</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref:System.Type> that represents the runtime equivalent of <code>reflectionType</code>."},{"pos":[22731,22823],"content":"<ph id=\"ph1\">&lt;code&gt;reflectionType&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>reflectionType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[23318,23369],"content":"Gets a custom type descriptor for the given object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a custom type descriptor for the given object.","pos":[0,51]}]},{"pos":[23561,23745],"content":"An instance of the type. Can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no instance was passed to the <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An instance of the type.","pos":[0,24]},{"content":"Can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if no instance was passed to the <bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.TypeDescriptor\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[25,184],"source":" Can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no instance was passed to the <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>."}]},{"pos":[23833,23940],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ICustomTypeDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that can provide metadata for the type.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ICustomTypeDescriptor\"></xref> that can provide metadata for the type."},{"pos":[24134,24220],"content":"<ph id=\"ph1\">&lt;code&gt;instance&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>instance</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[24705,24754],"content":"Gets a custom type descriptor for the given type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a custom type descriptor for the given type.","pos":[0,49]}]},{"pos":[24946,25007],"content":"The type of object for which to retrieve the type descriptor.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of object for which to retrieve the type descriptor.","pos":[0,61]}]},{"pos":[25095,25202],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ICustomTypeDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that can provide metadata for the type.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ICustomTypeDescriptor\"></xref> that can provide metadata for the type."},{"pos":[25830,25890],"content":"Gets a custom type descriptor for the given type and object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a custom type descriptor for the given type and object.","pos":[0,60]}]},{"pos":[25902,26124],"content":"This method is prototyped as `virtual` and, by default, returns an empty descriptor if no parent provider was passed. If a parent provider was passed, this method will invoke the parent provider's GetTypeDescriptor method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is prototyped as <ph id=\"ph1\">`virtual`</ph> and, by default, returns an empty descriptor if no parent provider was passed.","pos":[0,117],"source":"This method is prototyped as `virtual` and, by default, returns an empty descriptor if no parent provider was passed."},{"content":"If a parent provider was passed, this method will invoke the parent provider's GetTypeDescriptor method.","pos":[118,222]}]},{"pos":[26341,26402],"content":"The type of object for which to retrieve the type descriptor.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of object for which to retrieve the type descriptor.","pos":[0,61]}]},{"pos":[26467,26651],"content":"An instance of the type. Can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no instance was passed to the <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An instance of the type.","pos":[0,24]},{"content":"Can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if no instance was passed to the <bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.TypeDescriptor\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[25,184],"source":" Can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no instance was passed to the <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>."}]},{"pos":[26739,26846],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ICustomTypeDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that can provide metadata for the type.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ICustomTypeDescriptor\"></xref> that can provide metadata for the type."},{"pos":[27415,27554],"content":"Gets a value that indicates whether the specified type is compatible with the type description and its chain of type description providers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the specified type is compatible with the type description and its chain of type description providers.","pos":[0,139]}]},{"pos":[27701,27736],"content":"The type to test for compatibility.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type to test for compatibility.","pos":[0,35]}]},{"pos":[27795,28036],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p2\">&lt;/code&gt;</ept> is compatible with the type description and its chain of type description providers; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>type</code> is compatible with the type description and its chain of type description providers; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[28228,28310],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.TypeDescriptionProvider\n  id: TypeDescriptionProvider\n  children:\n  - System.ComponentModel.TypeDescriptionProvider.#ctor\n  - System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)\n  - System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])\n  - System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)\n  - System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)\n  - System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)\n  - System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)\n  - System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)\n  - System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)\n  - System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)\n  - System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)\n  - System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)\n  - System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)\n  - System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)\n  - System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)\n  langs:\n  - csharp\n  name: TypeDescriptionProvider\n  nameWithType: TypeDescriptionProvider\n  fullName: System.ComponentModel.TypeDescriptionProvider\n  type: Class\n  summary: Provides supplemental metadata to the <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>.\n  remarks: \"The TypeDescriptionProvider class dynamically extends the type information associated with a type or object by adding, modifying, or hiding characteristics such as attributes, properties, and events. There can be multiple type description provider classes that offer metadata to a single <xref:System.ComponentModel.TypeDescriptor>.  \\n  \\n There are two ways to associate a TypeDescriptionProvider with a <xref:System.ComponentModel.TypeDescriptor>:  \\n  \\n-   At design time, when the target class can be assigned the appropriate <xref:System.ComponentModel.TypeDescriptionProviderAttribute> tag.  \\n  \\n-   At run time, when one of the <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> methods of the <xref:System.ComponentModel.TypeDescriptor> class can be called. These overloaded methods require either the target object or its class type.  \\n  \\n The TypeDescriptionProvider class relies on a parent object of the same type, supplied during construction. This allows classes that derive from <xref:System.ComponentModel.CustomTypeDescriptor> to selectively override methods.  \\n  \\n Instances of TypeDescriptionProvider are only built upon demand, minimizing the impact of custom type information on performance.  \\n  \\n This class cannot be inherited.\"\n  syntax:\n    content: public abstract class TypeDescriptionProvider\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptionProvider.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.TypeDescriptionProvider\n  langs:\n  - csharp\n  name: TypeDescriptionProvider()\n  nameWithType: TypeDescriptionProvider.TypeDescriptionProvider()\n  fullName: System.ComponentModel.TypeDescriptionProvider.TypeDescriptionProvider()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> class.\n  remarks: This constructor is equivalent to calling the other <xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29> constructor with a parameter value that is `null`.\n  syntax:\n    content: protected TypeDescriptionProvider ();\n    parameters: []\n  overload: System.ComponentModel.TypeDescriptionProvider.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)\n  id: '#ctor(System.ComponentModel.TypeDescriptionProvider)'\n  parent: System.ComponentModel.TypeDescriptionProvider\n  langs:\n  - csharp\n  name: TypeDescriptionProvider(TypeDescriptionProvider)\n  nameWithType: TypeDescriptionProvider.TypeDescriptionProvider(TypeDescriptionProvider)\n  fullName: System.ComponentModel.TypeDescriptionProvider.TypeDescriptionProvider(TypeDescriptionProvider)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> class using a parent type description provider.\n  remarks: \"If the `parent` parameter is `null`, all <xref:System.ComponentModel.TypeDescriptionProvider> methods will return default values. Otherwise, all <xref:System.ComponentModel.TypeDescriptionProvider> methods will delegate to the methods of `parent`.  \\n  \\n The following table shows the default return values for <xref:System.ComponentModel.TypeDescriptionProvider> methods.  \\n  \\n|Method|Default return value|  \\n|------------|--------------------------|  \\n|<xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A>|`null`|  \\n|<xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A>|A newly created object through a call to the <xref:System.Activator.CreateInstance%2A> method.|  \\n|<xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A>|A default instance of a <xref:System.ComponentModel.CustomTypeDescriptor> class.|  \\n|<xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>|A default instance of a <xref:System.ComponentModel.CustomTypeDescriptor> class.|  \\n|<xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>|The `objectType` first parameter.|\"\n  syntax:\n    content: protected TypeDescriptionProvider (System.ComponentModel.TypeDescriptionProvider parent);\n    parameters:\n    - id: parent\n      type: System.ComponentModel.TypeDescriptionProvider\n      description: The parent type description provider.\n  overload: System.ComponentModel.TypeDescriptionProvider.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])\n  id: CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])\n  parent: System.ComponentModel.TypeDescriptionProvider\n  langs:\n  - csharp\n  name: CreateInstance(IServiceProvider,Type,Type[],Object[])\n  nameWithType: TypeDescriptionProvider.CreateInstance(IServiceProvider,Type,Type[],Object[])\n  fullName: System.ComponentModel.TypeDescriptionProvider.CreateInstance(IServiceProvider,Type,Type[],Object[])\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Creates an object that can substitute for another data type.\n  remarks: \"The <xref:System.IServiceProvider> specified by the `provider` parameter is passed in by the <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=fullName> method of the <xref:System.ComponentModel.TypeDescriptor> class. If `provider` is not `null`, the service provider can be used by the type description provider to obtain additional context about the creation call.  \\n  \\n The CreateInstance method is `virtual` and, by default, returns the result of the <xref:System.Activator.CreateInstance%2A?displayProperty=fullName> method if `provider` is `null`. If `provider` is `null`, this method will invoke the CreateInstance method of the parent provider.\"\n  syntax:\n    content: public virtual object CreateInstance (IServiceProvider provider, Type objectType, Type[] argTypes, object[] args);\n    parameters:\n    - id: provider\n      type: System.IServiceProvider\n      description: An optional service provider.\n    - id: objectType\n      type: System.Type\n      description: The type of object to create. This parameter is never <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    - id: argTypes\n      type: System.Type[]\n      description: An optional array of types that represent the parameter types to be passed to the object's constructor. This array can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or of zero length.\n    - id: args\n      type: System.Object[]\n      description: An optional array of parameter values to pass to the object's constructor.\n    return:\n      type: System.Object\n      description: The substitute <xref:System.Object>.\n  overload: System.ComponentModel.TypeDescriptionProvider.CreateInstance*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)\n  id: GetCache(System.Object)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  langs:\n  - csharp\n  name: GetCache(Object)\n  nameWithType: TypeDescriptionProvider.GetCache(Object)\n  fullName: System.ComponentModel.TypeDescriptionProvider.GetCache(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets a per-object cache, accessed as an <xref:System.Collections.IDictionary> of key/value pairs.\n  remarks: \"A <xref:System.ComponentModel.TypeDescriptor> may need to perform complex operations on collections of metadata. Because types are not unloaded for the life of a domain, the <xref:System.ComponentModel.TypeDescriptor> class will automatically cache the results of these operations based on type. However, some operations use live object instances. These operations cannot be cached within the <xref:System.ComponentModel.TypeDescriptor> class because caching them would prevent the object from being garbage collected. Instead, the <xref:System.ComponentModel.TypeDescriptor> class allows for a per-object cache, accessed as an <xref:System.Collections.IDictionary> of key/value pairs, to exist on an object. The GetCache method returns an instance of this cache. The GetCache method will return `null` if there is no supported cache for an object.  \\n  \\n The default <xref:System.ComponentModel.TypeDescriptionProvider> used by <xref:System.ComponentModel.TypeDescriptor> examines the object to see if it is a sited component that implements the <xref:System.ComponentModel.Design.IDictionaryService> interface. If the object is, it uses the dictionary service to store the object's cache. Otherwise, the object it returns `null`. Other type description providers may provide their own implementation here. For example, dependency objects can just attach a property of type <xref:System.Collections.IDictionary>.\"\n  syntax:\n    content: public virtual System.Collections.IDictionary GetCache (object instance);\n    parameters:\n    - id: instance\n      type: System.Object\n      description: The object for which to get the cache.\n    return:\n      type: System.Collections.IDictionary\n      description: An <xref:System.Collections.IDictionary> if the provided object supports caching; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.ComponentModel.TypeDescriptionProvider.GetCache*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)\n  id: GetExtendedTypeDescriptor(System.Object)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  langs:\n  - csharp\n  name: GetExtendedTypeDescriptor(Object)\n  nameWithType: TypeDescriptionProvider.GetExtendedTypeDescriptor(Object)\n  fullName: System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets an extended custom type descriptor for the given object.\n  remarks: \"An extended type descriptor is a custom type descriptor that offers properties that other objects have added to this object, but that are not actually defined on the object. For example, in the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] component model, objects that implement the <xref:System.ComponentModel.IExtenderProvider> interface can attach properties to other objects that reside in the same logical container. The overloaded <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> methods do not return a type descriptor that provides these extra extended properties. The GetExtendedTypeDescriptor method returns the set of these extended properties. The <xref:System.ComponentModel.TypeDescriptor> will automatically merge the results of these two property collections. While the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] component model supports only extended properties, GetExtendedTypeDescriptor can be used for extended attributes as well as events, if the type description provider supports it.  \\n  \\n GetExtendedTypeDescriptor is `virtual` and, by default, returns a custom type descriptor that returns empty results if no parent provider was passed. If a parent provider was passed, this method will invoke the parent provider's GetExtendedTypeDescriptor method.\"\n  syntax:\n    content: public virtual System.ComponentModel.ICustomTypeDescriptor GetExtendedTypeDescriptor (object instance);\n    parameters:\n    - id: instance\n      type: System.Object\n      description: The object for which to get the extended type descriptor.\n    return:\n      type: System.ComponentModel.ICustomTypeDescriptor\n      description: An <xref href=\"System.ComponentModel.ICustomTypeDescriptor\"></xref> that can provide extended metadata for the object.\n  overload: System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)\n  id: GetExtenderProviders(System.Object)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  langs:\n  - csharp\n  name: GetExtenderProviders(Object)\n  nameWithType: TypeDescriptionProvider.GetExtenderProviders(Object)\n  fullName: System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets the extender providers for the specified object.\n  syntax:\n    content: protected virtual System.ComponentModel.IExtenderProvider[] GetExtenderProviders (object instance);\n    parameters:\n    - id: instance\n      type: System.Object\n      description: The object to get extender providers for.\n    return:\n      type: System.ComponentModel.IExtenderProvider[]\n      description: An array of extender providers for <code>instance</code>.\n  overload: System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>instance</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)\n  id: GetFullComponentName(System.Object)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  langs:\n  - csharp\n  name: GetFullComponentName(Object)\n  nameWithType: TypeDescriptionProvider.GetFullComponentName(Object)\n  fullName: System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets the name of the specified component, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the component has no name.\n  syntax:\n    content: public virtual string GetFullComponentName (object component);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The specified component.\n    return:\n      type: System.String\n      description: The name of the specified component.\n  overload: System.ComponentModel.TypeDescriptionProvider.GetFullComponentName*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>component</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)\n  id: GetReflectionType(System.Object)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  langs:\n  - csharp\n  name: GetReflectionType(Object)\n  nameWithType: TypeDescriptionProvider.GetReflectionType(Object)\n  fullName: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Performs normal reflection against the given object.\n  remarks: \"The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method. If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.  \\n  \\n Use this method overload if you have called a type descriptor member that uses an instance instead of a type.\"\n  syntax:\n    content: public Type GetReflectionType (object instance);\n    parameters:\n    - id: instance\n      type: System.Object\n      description: An instance of the type (should not be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>).\n    return:\n      type: System.Type\n      description: The type of reflection for this <code>instance</code>.\n  overload: System.ComponentModel.TypeDescriptionProvider.GetReflectionType*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>instance</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)\n  id: GetReflectionType(System.Type)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  langs:\n  - csharp\n  name: GetReflectionType(Type)\n  nameWithType: TypeDescriptionProvider.GetReflectionType(Type)\n  fullName: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Performs normal reflection against a type.\n  remarks: \"The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method. If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.  \\n  \\n Use this method overload if you have called a type descriptor member that uses a type instead of an instance.\"\n  syntax:\n    content: public Type GetReflectionType (Type objectType);\n    parameters:\n    - id: objectType\n      type: System.Type\n      description: The type of object for which to retrieve the <xref href=\"System.Reflection.IReflect\"></xref>.\n    return:\n      type: System.Type\n      description: The type of reflection for this <code>objectType</code>.\n  overload: System.ComponentModel.TypeDescriptionProvider.GetReflectionType*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>objectType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)\n  id: GetReflectionType(System.Type,System.Object)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  langs:\n  - csharp\n  name: GetReflectionType(Type,Object)\n  nameWithType: TypeDescriptionProvider.GetReflectionType(Type,Object)\n  fullName: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(Type,Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Performs normal reflection against the given object with the given type.\n  remarks: The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method. If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.\n  syntax:\n    content: public virtual Type GetReflectionType (Type objectType, object instance);\n    parameters:\n    - id: objectType\n      type: System.Type\n      description: The type of object for which to retrieve the <xref href=\"System.Reflection.IReflect\"></xref>.\n    - id: instance\n      type: System.Object\n      description: An instance of the type. Can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    return:\n      type: System.Type\n      description: The type of reflection for this <code>objectType</code>.\n  overload: System.ComponentModel.TypeDescriptionProvider.GetReflectionType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)\n  id: GetRuntimeType(System.Type)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  langs:\n  - csharp\n  name: GetRuntimeType(Type)\n  nameWithType: TypeDescriptionProvider.GetRuntimeType(Type)\n  fullName: System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Converts a reflection type into a runtime type.\n  remarks: The GetRuntimeType method reverses the<xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method to convert a reflection type back into a runtime type. Using the GetRuntimeType method is preferred over using the <xref:System.Type.UnderlyingSystemType%2A> property, which was used in earlier versions to return the runtime type.\n  syntax:\n    content: public virtual Type GetRuntimeType (Type reflectionType);\n    parameters:\n    - id: reflectionType\n      type: System.Type\n      description: The type to convert to its runtime equivalent.\n    return:\n      type: System.Type\n      description: A <xref:System.Type> that represents the runtime equivalent of <code>reflectionType</code>.\n  overload: System.ComponentModel.TypeDescriptionProvider.GetRuntimeType*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>reflectionType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)\n  id: GetTypeDescriptor(System.Object)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  langs:\n  - csharp\n  name: GetTypeDescriptor(Object)\n  nameWithType: TypeDescriptionProvider.GetTypeDescriptor(Object)\n  fullName: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets a custom type descriptor for the given object.\n  syntax:\n    content: public System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (object instance);\n    parameters:\n    - id: instance\n      type: System.Object\n      description: An instance of the type. Can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no instance was passed to the <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>.\n    return:\n      type: System.ComponentModel.ICustomTypeDescriptor\n      description: An <xref href=\"System.ComponentModel.ICustomTypeDescriptor\"></xref> that can provide metadata for the type.\n  overload: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>instance</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)\n  id: GetTypeDescriptor(System.Type)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  langs:\n  - csharp\n  name: GetTypeDescriptor(Type)\n  nameWithType: TypeDescriptionProvider.GetTypeDescriptor(Type)\n  fullName: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets a custom type descriptor for the given type.\n  syntax:\n    content: public System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (Type objectType);\n    parameters:\n    - id: objectType\n      type: System.Type\n      description: The type of object for which to retrieve the type descriptor.\n    return:\n      type: System.ComponentModel.ICustomTypeDescriptor\n      description: An <xref href=\"System.ComponentModel.ICustomTypeDescriptor\"></xref> that can provide metadata for the type.\n  overload: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)\n  id: GetTypeDescriptor(System.Type,System.Object)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  langs:\n  - csharp\n  name: GetTypeDescriptor(Type,Object)\n  nameWithType: TypeDescriptionProvider.GetTypeDescriptor(Type,Object)\n  fullName: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(Type,Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets a custom type descriptor for the given type and object.\n  remarks: This method is prototyped as `virtual` and, by default, returns an empty descriptor if no parent provider was passed. If a parent provider was passed, this method will invoke the parent provider's GetTypeDescriptor method.\n  syntax:\n    content: public virtual System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (Type objectType, object instance);\n    parameters:\n    - id: objectType\n      type: System.Type\n      description: The type of object for which to retrieve the type descriptor.\n    - id: instance\n      type: System.Object\n      description: An instance of the type. Can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no instance was passed to the <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>.\n    return:\n      type: System.ComponentModel.ICustomTypeDescriptor\n      description: An <xref href=\"System.ComponentModel.ICustomTypeDescriptor\"></xref> that can provide metadata for the type.\n  overload: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)\n  id: IsSupportedType(System.Type)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  langs:\n  - csharp\n  name: IsSupportedType(Type)\n  nameWithType: TypeDescriptionProvider.IsSupportedType(Type)\n  fullName: System.ComponentModel.TypeDescriptionProvider.IsSupportedType(Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets a value that indicates whether the specified type is compatible with the type description and its chain of type description providers.\n  syntax:\n    content: public virtual bool IsSupportedType (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type to test for compatibility.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>type</code> is compatible with the type description and its chain of type description providers; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.TypeDescriptionProvider.IsSupportedType*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ComponentModel.TypeDescriptionProvider.#ctor\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: TypeDescriptionProvider()\n  nameWithType: TypeDescriptionProvider.TypeDescriptionProvider()\n  fullName: System.ComponentModel.TypeDescriptionProvider.TypeDescriptionProvider()\n- uid: System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: TypeDescriptionProvider(TypeDescriptionProvider)\n  nameWithType: TypeDescriptionProvider.TypeDescriptionProvider(TypeDescriptionProvider)\n  fullName: System.ComponentModel.TypeDescriptionProvider.TypeDescriptionProvider(TypeDescriptionProvider)\n- uid: System.ComponentModel.TypeDescriptionProvider\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeDescriptionProvider\n  nameWithType: TypeDescriptionProvider\n  fullName: System.ComponentModel.TypeDescriptionProvider\n- uid: System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: CreateInstance(IServiceProvider,Type,Type[],Object[])\n  nameWithType: TypeDescriptionProvider.CreateInstance(IServiceProvider,Type,Type[],Object[])\n  fullName: System.ComponentModel.TypeDescriptionProvider.CreateInstance(IServiceProvider,Type,Type[],Object[])\n- uid: System.IServiceProvider\n  parent: System\n  isExternal: true\n  name: IServiceProvider\n  nameWithType: IServiceProvider\n  fullName: System.IServiceProvider\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Type[]\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n  spec.csharp:\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: Type[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Object[]\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: GetCache(Object)\n  nameWithType: TypeDescriptionProvider.GetCache(Object)\n  fullName: System.ComponentModel.TypeDescriptionProvider.GetCache(Object)\n- uid: System.Collections.IDictionary\n  parent: System.Collections\n  isExternal: true\n  name: IDictionary\n  nameWithType: IDictionary\n  fullName: System.Collections.IDictionary\n- uid: System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: GetExtendedTypeDescriptor(Object)\n  nameWithType: TypeDescriptionProvider.GetExtendedTypeDescriptor(Object)\n  fullName: System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(Object)\n- uid: System.ComponentModel.ICustomTypeDescriptor\n  parent: System.ComponentModel\n  isExternal: false\n  name: ICustomTypeDescriptor\n  nameWithType: ICustomTypeDescriptor\n  fullName: System.ComponentModel.ICustomTypeDescriptor\n- uid: System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: GetExtenderProviders(Object)\n  nameWithType: TypeDescriptionProvider.GetExtenderProviders(Object)\n  fullName: System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(Object)\n- uid: System.ComponentModel.IExtenderProvider[]\n  parent: System.ComponentModel\n  isExternal: false\n  name: IExtenderProvider\n  nameWithType: IExtenderProvider\n  fullName: System.ComponentModel.IExtenderProvider[]\n  spec.csharp:\n  - uid: System.ComponentModel.IExtenderProvider\n    name: IExtenderProvider\n    nameWithType: IExtenderProvider\n    fullName: IExtenderProvider[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: GetFullComponentName(Object)\n  nameWithType: TypeDescriptionProvider.GetFullComponentName(Object)\n  fullName: System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(Object)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: GetReflectionType(Object)\n  nameWithType: TypeDescriptionProvider.GetReflectionType(Object)\n  fullName: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(Object)\n- uid: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: GetReflectionType(Type)\n  nameWithType: TypeDescriptionProvider.GetReflectionType(Type)\n  fullName: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(Type)\n- uid: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: GetReflectionType(Type,Object)\n  nameWithType: TypeDescriptionProvider.GetReflectionType(Type,Object)\n  fullName: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(Type,Object)\n- uid: System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: GetRuntimeType(Type)\n  nameWithType: TypeDescriptionProvider.GetRuntimeType(Type)\n  fullName: System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(Type)\n- uid: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: GetTypeDescriptor(Object)\n  nameWithType: TypeDescriptionProvider.GetTypeDescriptor(Object)\n  fullName: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(Object)\n- uid: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: GetTypeDescriptor(Type)\n  nameWithType: TypeDescriptionProvider.GetTypeDescriptor(Type)\n  fullName: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(Type)\n- uid: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: GetTypeDescriptor(Type,Object)\n  nameWithType: TypeDescriptionProvider.GetTypeDescriptor(Type,Object)\n  fullName: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(Type,Object)\n- uid: System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: IsSupportedType(Type)\n  nameWithType: TypeDescriptionProvider.IsSupportedType(Type)\n  fullName: System.ComponentModel.TypeDescriptionProvider.IsSupportedType(Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.TypeDescriptionProvider.#ctor*\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: TypeDescriptionProvider\n  nameWithType: TypeDescriptionProvider.TypeDescriptionProvider\n- uid: System.ComponentModel.TypeDescriptionProvider.CreateInstance*\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: CreateInstance\n  nameWithType: TypeDescriptionProvider.CreateInstance\n- uid: System.ComponentModel.TypeDescriptionProvider.GetCache*\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: GetCache\n  nameWithType: TypeDescriptionProvider.GetCache\n- uid: System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor*\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: GetExtendedTypeDescriptor\n  nameWithType: TypeDescriptionProvider.GetExtendedTypeDescriptor\n- uid: System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders*\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: GetExtenderProviders\n  nameWithType: TypeDescriptionProvider.GetExtenderProviders\n- uid: System.ComponentModel.TypeDescriptionProvider.GetFullComponentName*\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: GetFullComponentName\n  nameWithType: TypeDescriptionProvider.GetFullComponentName\n- uid: System.ComponentModel.TypeDescriptionProvider.GetReflectionType*\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: GetReflectionType\n  nameWithType: TypeDescriptionProvider.GetReflectionType\n- uid: System.ComponentModel.TypeDescriptionProvider.GetRuntimeType*\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: GetRuntimeType\n  nameWithType: TypeDescriptionProvider.GetRuntimeType\n- uid: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor*\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: GetTypeDescriptor\n  nameWithType: TypeDescriptionProvider.GetTypeDescriptor\n- uid: System.ComponentModel.TypeDescriptionProvider.IsSupportedType*\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: IsSupportedType\n  nameWithType: TypeDescriptionProvider.IsSupportedType\n"}