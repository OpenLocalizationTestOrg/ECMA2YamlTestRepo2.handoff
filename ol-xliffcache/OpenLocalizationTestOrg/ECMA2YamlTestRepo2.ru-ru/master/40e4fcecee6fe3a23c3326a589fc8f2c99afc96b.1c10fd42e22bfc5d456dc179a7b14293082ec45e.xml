{"nodes":[{"pos":[808,859],"content":"Parses a new URI scheme. This is an abstract class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Parses a new URI scheme. This is an abstract class.","pos":[0,51],"nodes":[{"content":"Parses a new URI scheme.","pos":[0,24]},{"content":"This is an abstract class.","pos":[25,51]}]}]},{"pos":[872,1667],"content":"The UriParser class enables you to create parsers for new URI schemes. You can write these parsers in their entirety, or the parsers can be derived from well-known schemes (HTTP, FTP, and other schemes based on network protocols). If you want to create a completely new parser, inherit from <xref:System.GenericUriParser>. If you want to create a parser that extends a well-known URI scheme, inherit from <xref:System.FtpStyleUriParser>, <xref:System.HttpStyleUriParser>, <xref:System.FileStyleUriParser>, <xref:System.GopherStyleUriParser>, or <xref:System.LdapStyleUriParser>.       Microsoft strongly recommends that you use a parser shipped with the .NET Framework. Building your own parser increases the complexity of your application, and will not perform as well as the shipped parsers.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The UriParser class enables you to create parsers for new URI schemes. You can write these parsers in their entirety, or the parsers can be derived from well-known schemes (HTTP, FTP, and other schemes based on network protocols). If you want to create a completely new parser, inherit from <xref:System.GenericUriParser>. If you want to create a parser that extends a well-known URI scheme, inherit from <xref:System.FtpStyleUriParser>, <xref:System.HttpStyleUriParser>, <xref:System.FileStyleUriParser>, <xref:System.GopherStyleUriParser>, or <xref:System.LdapStyleUriParser>.       Microsoft strongly recommends that you use a parser shipped with the .NET Framework. Building your own parser increases the complexity of your application, and will not perform as well as the shipped parsers.","pos":[0,793],"nodes":[{"content":"The UriParser class enables you to create parsers for new URI schemes.","pos":[0,70]},{"content":"You can write these parsers in their entirety, or the parsers can be derived from well-known schemes (HTTP, FTP, and other schemes based on network protocols).","pos":[71,230]},{"content":"If you want to create a completely new parser, inherit from &lt;xref:System.GenericUriParser&gt;.","pos":[231,322],"source":" If you want to create a completely new parser, inherit from <xref:System.GenericUriParser>."},{"content":"If you want to create a parser that extends a well-known URI scheme, inherit from &lt;xref:System.FtpStyleUriParser&gt;, &lt;xref:System.HttpStyleUriParser&gt;, &lt;xref:System.FileStyleUriParser&gt;, &lt;xref:System.GopherStyleUriParser&gt;, or &lt;xref:System.LdapStyleUriParser&gt;.","pos":[323,578],"source":" If you want to create a parser that extends a well-known URI scheme, inherit from <xref:System.FtpStyleUriParser>, <xref:System.HttpStyleUriParser>, <xref:System.FileStyleUriParser>, <xref:System.GopherStyleUriParser>, or <xref:System.LdapStyleUriParser>."},{"content":"Microsoft strongly recommends that you use a parser shipped with the .NET Framework.","pos":[585,669]},{"content":"Building your own parser increases the complexity of your application, and will not perform as well as the shipped parsers.","pos":[670,793]}]}]},{"pos":[2086,2118],"content":"Constructs a default URI parser.","needQuote":true,"needEscape":true,"nodes":[{"content":"Constructs a default URI parser.","pos":[0,32]}]},{"pos":[2729,2760],"content":"Gets the components from a URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the components from a URI.","pos":[0,31]}]},{"pos":[2773,3109],"content":"Use the GetComponents method to determine the value of various parts of the URI, such as the <xref:System.UriComponents>, <xref:System.UriComponents>, or <xref:System.UriComponents>.       The components are returned in the order that they appear in the URI. For example, if <xref:System.UriComponents> is specified, it appears first.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the GetComponents method to determine the value of various parts of the URI, such as the <xref:System.UriComponents>, <xref:System.UriComponents>, or <xref:System.UriComponents>.       The components are returned in the order that they appear in the URI. For example, if <xref:System.UriComponents> is specified, it appears first.","pos":[0,334],"nodes":[{"content":"Use the GetComponents method to determine the value of various parts of the URI, such as the &lt;xref:System.UriComponents&gt;, &lt;xref:System.UriComponents&gt;, or &lt;xref:System.UriComponents&gt;.","pos":[0,182],"source":"Use the GetComponents method to determine the value of various parts of the URI, such as the <xref:System.UriComponents>, <xref:System.UriComponents>, or <xref:System.UriComponents>."},{"content":"The components are returned in the order that they appear in the URI.","pos":[189,258]},{"content":"For example, if &lt;xref:System.UriComponents&gt; is specified, it appears first.","pos":[259,334],"source":" For example, if <xref:System.UriComponents> is specified, it appears first."}]}]},{"pos":[3300,3317],"content":"The URI to parse.","needQuote":true,"needEscape":true,"nodes":[{"content":"The URI to parse.","pos":[0,17]}]},{"pos":[3391,3446],"content":"The &lt;xref:System.UriComponents&gt; to retrieve from <ph id=\"ph1\">`uri`</ph>.","needQuote":true,"needEscape":true,"source":"The <xref:System.UriComponents> to retrieve from `uri`."},{"pos":[3512,3603],"content":"One of the <xref:System.UriFormat> values that controls how special characters are escaped.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the &lt;xref:System.UriFormat&gt; values that controls how special characters are escaped.","pos":[0,91],"source":"One of the <xref:System.UriFormat> values that controls how special characters are escaped."}]},{"pos":[3661,3699],"content":"A string that contains the components.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains the components.","pos":[0,38]}]},{"pos":[4792,4848],"content":"Initialize the state of the parser and validate the URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initialize the state of the parser and validate the URI.","pos":[0,56]}]},{"pos":[4860,4950],"content":"The InitializeAndValidate method is called every time a <xref:System.Uri> is instantiated.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The InitializeAndValidate method is called every time a &lt;xref:System.Uri&gt; is instantiated.","pos":[0,90],"source":"The InitializeAndValidate method is called every time a <xref:System.Uri> is instantiated."}]},{"pos":[5139,5168],"content":"The T:System.Uri to validate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The T:System.Uri to validate.","pos":[0,29]}]},{"pos":[5249,5275],"content":"Validation errors, if any.","needQuote":true,"needEscape":true,"nodes":[{"content":"Validation errors, if any.","pos":[0,26]}]},{"pos":[5697,5780],"content":"Determines whether <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">baseUri</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a base URI for <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">relativeUri</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Determines whether <code>baseUri</code> is a base URI for <code>relativeUri</code>."},{"pos":[5944,5957],"content":"The base URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"The base URI.","pos":[0,13]}]},{"pos":[6022,6038],"content":"The URI to test.","needQuote":true,"needEscape":true,"nodes":[{"content":"The URI to test.","pos":[0,16]}]},{"pos":[6097,6300],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">baseUri</ph><ept id=\"p2\">&lt;/code&gt;</ept> is a base URI for <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">relativeUri</ph><ept id=\"p3\">&lt;/code&gt;</ept>; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>baseUri</code> is a base URI for <code>relativeUri</code>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6715,6771],"content":"Indicates whether the parser for a scheme is registered.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates whether the parser for a scheme is registered.","pos":[0,56]}]},{"pos":[6931,6956],"content":"The scheme name to check.","needQuote":true,"needEscape":true,"nodes":[{"content":"The scheme name to check.","pos":[0,25]}]},{"pos":[7015,7198],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">schemeName</ph><ept id=\"p2\">&lt;/code&gt;</ept> has been registered; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>schemeName</code> has been registered; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7359,7405],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">schemeName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is null.","needQuote":true,"needEscape":true,"source":"The <code>schemeName</code> parameter is null."},{"pos":[7520,7571],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">schemeName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not valid.","needQuote":true,"needEscape":true,"source":"The <code>schemeName</code> parameter is not valid."},{"pos":[7980,8019],"content":"Indicates whether a URI is well-formed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates whether a URI is well-formed.","pos":[0,39]}]},{"pos":[8032,8450],"content":"The IsWellFormedOriginalString method will return false if:      -   The string is not correctly escaped per RFC 2396.      -   The string represents an absolute URI that references an implicit file URI.      -   The string represents an absolute URI that is missing a forward slash before the path component.      -   The string contains unescaped backslashes, even if they will be treated as forward slashes.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The IsWellFormedOriginalString method will return false if:      -   The string is not correctly escaped per RFC 2396.      -   The string represents an absolute URI that references an implicit file URI.      -   The string represents an absolute URI that is missing a forward slash before the path component.      -   The string contains unescaped backslashes, even if they will be treated as forward slashes.","pos":[0,410],"nodes":[{"content":"The IsWellFormedOriginalString method will return false if:      -   The string is not correctly escaped per RFC 2396.","pos":[0,118]},{"content":"-   The string represents an absolute URI that references an implicit file URI.","pos":[124,203]},{"content":"-   The string represents an absolute URI that is missing a forward slash before the path component.","pos":[209,309]},{"content":"-   The string contains unescaped backslashes, even if they will be treated as forward slashes.","pos":[315,410]}]}]},{"pos":[8608,8625],"content":"The URI to check.","needQuote":true,"needEscape":true,"nodes":[{"content":"The URI to check.","pos":[0,17]}]},{"pos":[8684,8855],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">uri</ph><ept id=\"p2\">&lt;/code&gt;</ept> is well-formed; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>uri</code> is well-formed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9215,9313],"content":"Invoked by a &lt;xref:System.Uri&gt; constructor to get a <bpt id=\"p1\">&lt;xref href=\"System.UriParser\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance","needQuote":true,"needEscape":true,"source":"Invoked by a <xref:System.Uri> constructor to get a <xref href=\"System.UriParser\"></xref> instance"},{"pos":[9325,9559],"content":"The default implementation returns the same <xref:System.UriParser> instance. You may need to override this method and return a different <xref:System.UriParser> for each invocation if you are operating in a multithreaded environment.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default implementation returns the same <xref:System.UriParser> instance. You may need to override this method and return a different <xref:System.UriParser> for each invocation if you are operating in a multithreaded environment.","pos":[0,234],"nodes":[{"content":"The default implementation returns the same &lt;xref:System.UriParser&gt; instance.","pos":[0,77],"source":"The default implementation returns the same <xref:System.UriParser> instance."},{"content":"You may need to override this method and return a different &lt;xref:System.UriParser&gt; for each invocation if you are operating in a multithreaded environment.","pos":[78,234],"source":" You may need to override this method and return a different <xref:System.UriParser> for each invocation if you are operating in a multithreaded environment."}]}]},{"pos":[9703,9781],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.UriParser\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the constructed &lt;xref:System.Uri&gt;.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.UriParser\"></xref> for the constructed <xref:System.Uri>."},{"pos":[10225,10316],"content":"Invoked by the Framework when a <bpt id=\"p1\">&lt;xref href=\"System.UriParser\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> method is registered.","needQuote":true,"needEscape":true,"source":"Invoked by the Framework when a <xref href=\"System.UriParser\"></xref> method is registered."},{"pos":[10494,10572],"content":"The scheme that is associated with this <bpt id=\"p1\">&lt;xref href=\"System.UriParser\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The scheme that is associated with this <xref href=\"System.UriParser\"></xref>."},{"pos":[10639,10669],"content":"The port number of the scheme.","needQuote":true,"needEscape":true,"nodes":[{"content":"The port number of the scheme.","pos":[0,30]}]},{"pos":[11169,11250],"content":"Associates a scheme and port number with a <bpt id=\"p1\">&lt;xref href=\"System.UriParser\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Associates a scheme and port number with a <xref href=\"System.UriParser\"></xref>."},{"pos":[11262,11374],"content":"If the <ph id=\"ph1\">`defaultPort`</ph> parameter is set to -1, the Register method registers no default value for the port number.","needQuote":true,"needEscape":true,"extradata":"MT","source":"If the `defaultPort` parameter is set to -1, the Register method registers no default value for the port number."},{"pos":[11569,11596],"content":"The URI parser to register.","needQuote":true,"needEscape":true,"nodes":[{"content":"The URI parser to register.","pos":[0,27]}]},{"pos":[11663,11722],"content":"The name of the scheme that is associated with this parser.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the scheme that is associated with this parser.","pos":[0,59]}]},{"pos":[11789,11838],"content":"The default port number for the specified scheme.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default port number for the specified scheme.","pos":[0,49]}]},{"pos":[12879,13012],"content":"Called by <xref:System.Uri> constructors and &lt;xref:System.Uri.TryCreate%2A?displayProperty=fullName&gt; to resolve a relative URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"Called by &lt;xref:System.Uri&gt; constructors and <ph id=\"ph1\">&amp;lt;</ph>xref:System.Uri.TryCreate%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> to resolve a relative URI.","pos":[0,133],"source":"Called by <xref:System.Uri> constructors and &lt;xref:System.Uri.TryCreate%2A?displayProperty=fullName&gt; to resolve a relative URI."}]},{"pos":[13025,13288],"content":"<xref:System.Uri> constructors and <xref:System.Uri.TryCreate%2A?displayProperty=fullName> use Resolve to construct a URI from `baseUri` and `relativeUri`.       If a parsing error occurs, the returned string for the resolved relative <xref:System.Uri> is null.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"&lt;xref:System.Uri&gt; constructors and &lt;xref:System.Uri.TryCreate%2A?displayProperty=fullName&gt; use Resolve to construct a URI from <ph id=\"ph1\">`baseUri`</ph> and <ph id=\"ph2\">`relativeUri`</ph>.","pos":[0,155],"source":"<xref:System.Uri> constructors and <xref:System.Uri.TryCreate%2A?displayProperty=fullName> use Resolve to construct a URI from `baseUri` and `relativeUri`."},{"content":"If a parsing error occurs, the returned string for the resolved relative &lt;xref:System.Uri&gt; is null.","pos":[162,261],"source":"       If a parsing error occurs, the returned string for the resolved relative <xref:System.Uri> is null."}]},{"pos":[13491,13502],"content":"A base URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"A base URI.","pos":[0,11]}]},{"pos":[13567,13582],"content":"A relative URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"A relative URI.","pos":[0,15]}]},{"pos":[13663,13705],"content":"Errors during the resolve process, if any.","needQuote":true,"needEscape":true,"nodes":[{"content":"Errors during the resolve process, if any.","pos":[0,42]}]},{"pos":[13763,13817],"content":"The string of the resolved relative <xref:System.Uri>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string of the resolved relative &lt;xref:System.Uri&gt;.","pos":[0,54],"source":"The string of the resolved relative <xref:System.Uri>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.UriParser\n  id: UriParser\n  children:\n  - System.UriParser.#ctor\n  - System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)\n  - System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)\n  - System.UriParser.IsBaseOf(System.Uri,System.Uri)\n  - System.UriParser.IsKnownScheme(System.String)\n  - System.UriParser.IsWellFormedOriginalString(System.Uri)\n  - System.UriParser.OnNewUri\n  - System.UriParser.OnRegister(System.String,System.Int32)\n  - System.UriParser.Register(System.UriParser,System.String,System.Int32)\n  - System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)\n  langs:\n  - csharp\n  name: UriParser\n  nameWithType: UriParser\n  fullName: System.UriParser\n  type: Class\n  summary: Parses a new URI scheme. This is an abstract class.\n  remarks: \"The UriParser class enables you to create parsers for new URI schemes. You can write these parsers in their entirety, or the parsers can be derived from well-known schemes (HTTP, FTP, and other schemes based on network protocols). If you want to create a completely new parser, inherit from <xref:System.GenericUriParser>. If you want to create a parser that extends a well-known URI scheme, inherit from <xref:System.FtpStyleUriParser>, <xref:System.HttpStyleUriParser>, <xref:System.FileStyleUriParser>, <xref:System.GopherStyleUriParser>, or <xref:System.LdapStyleUriParser>.  \\n  \\n Microsoft strongly recommends that you use a parser shipped with the .NET Framework. Building your own parser increases the complexity of your application, and will not perform as well as the shipped parsers.\"\n  syntax:\n    content: public abstract class UriParser\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.UriParser.#ctor\n  id: '#ctor'\n  parent: System.UriParser\n  langs:\n  - csharp\n  name: UriParser()\n  nameWithType: UriParser.UriParser()\n  fullName: System.UriParser.UriParser()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System\n  summary: Constructs a default URI parser.\n  syntax:\n    content: protected UriParser ();\n    parameters: []\n  overload: System.UriParser.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)\n  id: GetComponents(System.Uri,System.UriComponents,System.UriFormat)\n  parent: System.UriParser\n  langs:\n  - csharp\n  name: GetComponents(Uri,UriComponents,UriFormat)\n  nameWithType: UriParser.GetComponents(Uri,UriComponents,UriFormat)\n  fullName: System.UriParser.GetComponents(Uri,UriComponents,UriFormat)\n  type: Method\n  assemblies:\n  - System\n  namespace: System\n  summary: Gets the components from a URI.\n  remarks: \"Use the GetComponents method to determine the value of various parts of the URI, such as the <xref:System.UriComponents>, <xref:System.UriComponents>, or <xref:System.UriComponents>.  \\n  \\n The components are returned in the order that they appear in the URI. For example, if <xref:System.UriComponents> is specified, it appears first.\"\n  syntax:\n    content: protected virtual string GetComponents (Uri uri, UriComponents components, UriFormat format);\n    parameters:\n    - id: uri\n      type: System.Uri\n      description: The URI to parse.\n    - id: components\n      type: System.UriComponents\n      description: The <xref:System.UriComponents> to retrieve from `uri`.\n    - id: format\n      type: System.UriFormat\n      description: One of the <xref:System.UriFormat> values that controls how special characters are escaped.\n    return:\n      type: System.String\n      description: A string that contains the components.\n  overload: System.UriParser.GetComponents*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>uriFormat</code> is invalid.  \\n  \\n \\\\- or -  \\n  \\n <code>uriComponents</code> is not a combination of valid <xref:System.UriComponents> values.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"<code>uri</code> requires user-driven parsing  \\n  \\n \\\\- or -  \\n  \\n <code>uri</code> is not an absolute URI. Relative URIs cannot be used with this method.\"\n  platform:\n  - net462\n- uid: System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)\n  id: InitializeAndValidate(System.Uri,System.UriFormatException@)\n  parent: System.UriParser\n  langs:\n  - csharp\n  name: InitializeAndValidate(Uri,UriFormatException)\n  nameWithType: UriParser.InitializeAndValidate(Uri,UriFormatException)\n  fullName: System.UriParser.InitializeAndValidate(Uri,UriFormatException)\n  type: Method\n  assemblies:\n  - System\n  namespace: System\n  summary: Initialize the state of the parser and validate the URI.\n  remarks: The InitializeAndValidate method is called every time a <xref:System.Uri> is instantiated.\n  syntax:\n    content: protected virtual void InitializeAndValidate (Uri uri, out UriFormatException parsingError);\n    parameters:\n    - id: uri\n      type: System.Uri\n      description: The T:System.Uri to validate.\n    - id: parsingError\n      type: System.UriFormatException\n      description: Validation errors, if any.\n  overload: System.UriParser.InitializeAndValidate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.UriParser.IsBaseOf(System.Uri,System.Uri)\n  id: IsBaseOf(System.Uri,System.Uri)\n  parent: System.UriParser\n  langs:\n  - csharp\n  name: IsBaseOf(Uri,Uri)\n  nameWithType: UriParser.IsBaseOf(Uri,Uri)\n  fullName: System.UriParser.IsBaseOf(Uri,Uri)\n  type: Method\n  assemblies:\n  - System\n  namespace: System\n  summary: Determines whether <code>baseUri</code> is a base URI for <code>relativeUri</code>.\n  syntax:\n    content: protected virtual bool IsBaseOf (Uri baseUri, Uri relativeUri);\n    parameters:\n    - id: baseUri\n      type: System.Uri\n      description: The base URI.\n    - id: relativeUri\n      type: System.Uri\n      description: The URI to test.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>baseUri</code> is a base URI for <code>relativeUri</code>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.UriParser.IsBaseOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.UriParser.IsKnownScheme(System.String)\n  id: IsKnownScheme(System.String)\n  parent: System.UriParser\n  langs:\n  - csharp\n  name: IsKnownScheme(String)\n  nameWithType: UriParser.IsKnownScheme(String)\n  fullName: System.UriParser.IsKnownScheme(String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System\n  summary: Indicates whether the parser for a scheme is registered.\n  syntax:\n    content: public static bool IsKnownScheme (string schemeName);\n    parameters:\n    - id: schemeName\n      type: System.String\n      description: The scheme name to check.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>schemeName</code> has been registered; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.UriParser.IsKnownScheme*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>schemeName</code> parameter is null.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <code>schemeName</code> parameter is not valid.\n  platform:\n  - net462\n- uid: System.UriParser.IsWellFormedOriginalString(System.Uri)\n  id: IsWellFormedOriginalString(System.Uri)\n  parent: System.UriParser\n  langs:\n  - csharp\n  name: IsWellFormedOriginalString(Uri)\n  nameWithType: UriParser.IsWellFormedOriginalString(Uri)\n  fullName: System.UriParser.IsWellFormedOriginalString(Uri)\n  type: Method\n  assemblies:\n  - System\n  namespace: System\n  summary: Indicates whether a URI is well-formed.\n  remarks: \"The IsWellFormedOriginalString method will return false if:  \\n  \\n-   The string is not correctly escaped per RFC 2396.  \\n  \\n-   The string represents an absolute URI that references an implicit file URI.  \\n  \\n-   The string represents an absolute URI that is missing a forward slash before the path component.  \\n  \\n-   The string contains unescaped backslashes, even if they will be treated as forward slashes.\"\n  syntax:\n    content: protected virtual bool IsWellFormedOriginalString (Uri uri);\n    parameters:\n    - id: uri\n      type: System.Uri\n      description: The URI to check.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>uri</code> is well-formed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.UriParser.IsWellFormedOriginalString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.UriParser.OnNewUri\n  id: OnNewUri\n  parent: System.UriParser\n  langs:\n  - csharp\n  name: OnNewUri()\n  nameWithType: UriParser.OnNewUri()\n  fullName: System.UriParser.OnNewUri()\n  type: Method\n  assemblies:\n  - System\n  namespace: System\n  summary: Invoked by a <xref:System.Uri> constructor to get a <xref href=\"System.UriParser\"></xref> instance\n  remarks: The default implementation returns the same <xref:System.UriParser> instance. You may need to override this method and return a different <xref:System.UriParser> for each invocation if you are operating in a multithreaded environment.\n  syntax:\n    content: protected virtual UriParser OnNewUri ();\n    parameters: []\n    return:\n      type: System.UriParser\n      description: A <xref href=\"System.UriParser\"></xref> for the constructed <xref:System.Uri>.\n  overload: System.UriParser.OnNewUri*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.UriParser.OnRegister(System.String,System.Int32)\n  id: OnRegister(System.String,System.Int32)\n  parent: System.UriParser\n  langs:\n  - csharp\n  name: OnRegister(String,Int32)\n  nameWithType: UriParser.OnRegister(String,Int32)\n  fullName: System.UriParser.OnRegister(String,Int32)\n  type: Method\n  assemblies:\n  - System\n  namespace: System\n  summary: Invoked by the Framework when a <xref href=\"System.UriParser\"></xref> method is registered.\n  syntax:\n    content: protected virtual void OnRegister (string schemeName, int defaultPort);\n    parameters:\n    - id: schemeName\n      type: System.String\n      description: The scheme that is associated with this <xref href=\"System.UriParser\"></xref>.\n    - id: defaultPort\n      type: System.Int32\n      description: The port number of the scheme.\n  overload: System.UriParser.OnRegister*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.UriParser.Register(System.UriParser,System.String,System.Int32)\n  id: Register(System.UriParser,System.String,System.Int32)\n  parent: System.UriParser\n  langs:\n  - csharp\n  name: Register(UriParser,String,Int32)\n  nameWithType: UriParser.Register(UriParser,String,Int32)\n  fullName: System.UriParser.Register(UriParser,String,Int32)\n  type: Method\n  assemblies:\n  - System\n  namespace: System\n  summary: Associates a scheme and port number with a <xref href=\"System.UriParser\"></xref>.\n  remarks: If the `defaultPort` parameter is set to -1, the Register method registers no default value for the port number.\n  syntax:\n    content: public static void Register (UriParser uriParser, string schemeName, int defaultPort);\n    parameters:\n    - id: uriParser\n      type: System.UriParser\n      description: The URI parser to register.\n    - id: schemeName\n      type: System.String\n      description: The name of the scheme that is associated with this parser.\n    - id: defaultPort\n      type: System.Int32\n      description: The default port number for the specified scheme.\n  overload: System.UriParser.Register*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>uriParser</code> parameter is null  \\n  \\n \\\\- or -  \\n  \\n <code>schemeName</code> parameter is null.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>schemeName</code> parameter is not valid  \\n  \\n \\\\- or -  \\n  \\n <code>defaultPort</code> parameter is not valid. The <code>defaultPort</code> parameter is less than -1 or greater than 65,534.\"\n  platform:\n  - net462\n- uid: System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)\n  id: Resolve(System.Uri,System.Uri,System.UriFormatException@)\n  parent: System.UriParser\n  langs:\n  - csharp\n  name: Resolve(Uri,Uri,UriFormatException)\n  nameWithType: UriParser.Resolve(Uri,Uri,UriFormatException)\n  fullName: System.UriParser.Resolve(Uri,Uri,UriFormatException)\n  type: Method\n  assemblies:\n  - System\n  namespace: System\n  summary: Called by <xref:System.Uri> constructors and &lt;xref:System.Uri.TryCreate%2A?displayProperty=fullName&gt; to resolve a relative URI.\n  remarks: \"<xref:System.Uri> constructors and <xref:System.Uri.TryCreate%2A?displayProperty=fullName> use Resolve to construct a URI from `baseUri` and `relativeUri`.  \\n  \\n If a parsing error occurs, the returned string for the resolved relative <xref:System.Uri> is null.\"\n  syntax:\n    content: protected virtual string Resolve (Uri baseUri, Uri relativeUri, out UriFormatException parsingError);\n    parameters:\n    - id: baseUri\n      type: System.Uri\n      description: A base URI.\n    - id: relativeUri\n      type: System.Uri\n      description: A relative URI.\n    - id: parsingError\n      type: System.UriFormatException\n      description: Errors during the resolve process, if any.\n    return:\n      type: System.String\n      description: The string of the resolved relative <xref:System.Uri>.\n  overload: System.UriParser.Resolve*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"<code>baseUri</code> parameter is not an absolute <xref:System.Uri>  \\n  \\n \\\\- or -  \\n  \\n <code>baseUri</code> parameter requires user-driven parsing.\"\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.UriParser.#ctor\n  parent: System.UriParser\n  isExternal: false\n  name: UriParser()\n  nameWithType: UriParser.UriParser()\n  fullName: System.UriParser.UriParser()\n- uid: System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)\n  parent: System.UriParser\n  isExternal: false\n  name: GetComponents(Uri,UriComponents,UriFormat)\n  nameWithType: UriParser.GetComponents(Uri,UriComponents,UriFormat)\n  fullName: System.UriParser.GetComponents(Uri,UriComponents,UriFormat)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Uri\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.UriComponents\n  parent: System\n  isExternal: true\n  name: UriComponents\n  nameWithType: UriComponents\n  fullName: System.UriComponents\n- uid: System.UriFormat\n  parent: System\n  isExternal: true\n  name: UriFormat\n  nameWithType: UriFormat\n  fullName: System.UriFormat\n- uid: System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)\n  parent: System.UriParser\n  isExternal: false\n  name: InitializeAndValidate(Uri,UriFormatException)\n  nameWithType: UriParser.InitializeAndValidate(Uri,UriFormatException)\n  fullName: System.UriParser.InitializeAndValidate(Uri,UriFormatException)\n- uid: System.UriFormatException\n  parent: System\n  isExternal: true\n  name: UriFormatException\n  nameWithType: UriFormatException\n  fullName: System.UriFormatException\n- uid: System.UriParser.IsBaseOf(System.Uri,System.Uri)\n  parent: System.UriParser\n  isExternal: false\n  name: IsBaseOf(Uri,Uri)\n  nameWithType: UriParser.IsBaseOf(Uri,Uri)\n  fullName: System.UriParser.IsBaseOf(Uri,Uri)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.UriParser.IsKnownScheme(System.String)\n  parent: System.UriParser\n  isExternal: false\n  name: IsKnownScheme(String)\n  nameWithType: UriParser.IsKnownScheme(String)\n  fullName: System.UriParser.IsKnownScheme(String)\n- uid: System.UriParser.IsWellFormedOriginalString(System.Uri)\n  parent: System.UriParser\n  isExternal: false\n  name: IsWellFormedOriginalString(Uri)\n  nameWithType: UriParser.IsWellFormedOriginalString(Uri)\n  fullName: System.UriParser.IsWellFormedOriginalString(Uri)\n- uid: System.UriParser.OnNewUri\n  parent: System.UriParser\n  isExternal: false\n  name: OnNewUri()\n  nameWithType: UriParser.OnNewUri()\n  fullName: System.UriParser.OnNewUri()\n- uid: System.UriParser\n  parent: System\n  isExternal: false\n  name: UriParser\n  nameWithType: UriParser\n  fullName: System.UriParser\n- uid: System.UriParser.OnRegister(System.String,System.Int32)\n  parent: System.UriParser\n  isExternal: false\n  name: OnRegister(String,Int32)\n  nameWithType: UriParser.OnRegister(String,Int32)\n  fullName: System.UriParser.OnRegister(String,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.UriParser.Register(System.UriParser,System.String,System.Int32)\n  parent: System.UriParser\n  isExternal: false\n  name: Register(UriParser,String,Int32)\n  nameWithType: UriParser.Register(UriParser,String,Int32)\n  fullName: System.UriParser.Register(UriParser,String,Int32)\n- uid: System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)\n  parent: System.UriParser\n  isExternal: false\n  name: Resolve(Uri,Uri,UriFormatException)\n  nameWithType: UriParser.Resolve(Uri,Uri,UriFormatException)\n  fullName: System.UriParser.Resolve(Uri,Uri,UriFormatException)\n- uid: System.UriParser.#ctor*\n  parent: System.UriParser\n  isExternal: false\n  name: UriParser\n  nameWithType: UriParser.UriParser\n- uid: System.UriParser.GetComponents*\n  parent: System.UriParser\n  isExternal: false\n  name: GetComponents\n  nameWithType: UriParser.GetComponents\n- uid: System.UriParser.InitializeAndValidate*\n  parent: System.UriParser\n  isExternal: false\n  name: InitializeAndValidate\n  nameWithType: UriParser.InitializeAndValidate\n- uid: System.UriParser.IsBaseOf*\n  parent: System.UriParser\n  isExternal: false\n  name: IsBaseOf\n  nameWithType: UriParser.IsBaseOf\n- uid: System.UriParser.IsKnownScheme*\n  parent: System.UriParser\n  isExternal: false\n  name: IsKnownScheme\n  nameWithType: UriParser.IsKnownScheme\n- uid: System.UriParser.IsWellFormedOriginalString*\n  parent: System.UriParser\n  isExternal: false\n  name: IsWellFormedOriginalString\n  nameWithType: UriParser.IsWellFormedOriginalString\n- uid: System.UriParser.OnNewUri*\n  parent: System.UriParser\n  isExternal: false\n  name: OnNewUri\n  nameWithType: UriParser.OnNewUri\n- uid: System.UriParser.OnRegister*\n  parent: System.UriParser\n  isExternal: false\n  name: OnRegister\n  nameWithType: UriParser.OnRegister\n- uid: System.UriParser.Register*\n  parent: System.UriParser\n  isExternal: false\n  name: Register\n  nameWithType: UriParser.Register\n- uid: System.UriParser.Resolve*\n  parent: System.UriParser\n  isExternal: false\n  name: Resolve\n  nameWithType: UriParser.Resolve\n"}