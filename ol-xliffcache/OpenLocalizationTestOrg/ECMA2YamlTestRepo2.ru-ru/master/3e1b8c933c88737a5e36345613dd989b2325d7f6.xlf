<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3e1b8c933c88737a5e36345613dd989b2325d7f6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.Hosting.HostingEnvironment.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">159701e3a21c369a79dc38be412ad9d62961beb2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bc11f92538ca1d48ba4ed91ab7bc4ee674c5793c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides application-management functions and application services to a managed application within its application domain.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each managed application domain contains a static instance of the HostingEnvironment class, which provides access to application-management functions and application services.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.Hosting.HostingEnvironment"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The HostingEnvironment constructor initializes the &lt;xref:System.Web.Hosting.HostingEnvironment&gt; object.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The HostingEnvironment constructor is called only once by the application's &lt;xref:System.Web.Hosting.ApplicationManager&gt; object.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling the HostingEnvironment constructor more than once will cause an &lt;xref:System.InvalidOperationException&gt; exception to be thrown.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The HostingEnvironment constructor is called more than once.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This property supports the <ph id="ph1">[!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)]</ph> infrastructure and is not intended to be used directly from your code.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>An object that contains information about the application host.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Gets the unique identifier of the application.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The application must be running with &lt;xref:System.Web.AspNetHostingPermissionLevel&gt; set to high trust to access the ApplicationID property.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The unique identifier of the application.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Gets the physical path on disk to the application's directory.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The physical path on disk to the application's directory.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets the root virtual path of the application.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ApplicationVirtualPath property always returns "<ph id="ph1">`/"`</ph> as the first character of the returned value.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the application is located in the root of the website, the return value is just "<ph id="ph1">`/"`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The root virtual path of the application with no trailing slash (/).</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Web.Caching.Cache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance for the current application.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The current <bpt id="p1">&lt;xref href="System.Web.Caching.Cache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Reduces the count of busy objects in the hosted environment by one.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a busy registered object finishes its work, it calls the DecrementBusyCount method to signal the &lt;xref:System.Web.Hosting.HostingEnvironment&gt; object that it has completed processing and to reduce the count of busy objects by one.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the busy count is greater than zero, the hosting application will not time out even if there are no pending requests.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>There must be a call to the DecrementBusyCount method for each call to the &lt;xref:System.Web.Hosting.HostingEnvironment.IncrementBusyCount%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Impersonates the user represented by the application identity.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IDisposable&gt; object that represents the Windows user prior to impersonation; this object can be used to revert to the original user's context.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The process cannot impersonate.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Impersonates the user represented by the specified user token.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The handle of a Windows account token.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IDisposable&gt; object that represents the Windows user prior to impersonation; this object can be used to revert to the original user's context.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The process cannot impersonate.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Impersonates the user specified by the configuration settings for the specified virtual path, or the specified user token.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Impersonate method impersonates the user that results after applying all  elements in the configuration settings affecting the specified virtual path.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`identity`</ph> element is not specified for the virtual path, the Impersonate method impersonates the specified Windows account.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The handle of a Windows account token.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The path to the requested resource.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IDisposable&gt; object that represents the Windows user prior to impersonation; this object can be used to revert to the original user's context.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The process cannot impersonate.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the hosting environment has access to the ASP.NET build system.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the application domain is the ASP.NET hosted application domain used in <bpt id="p2">&lt;xref uid="langword_csharp_ClientBuildManager" name="ClientBuildManager" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> scenarios; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Increases the count of busy objects in the hosted environment by one.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Registered objects signal the &lt;xref:System.Web.Hosting.HostingEnvironment&gt; object that it is running and to increase the count of busy objects by one.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the busy count is greater than zero, the hosting application will not time out even if there are no pending requests.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>There must be a call to the &lt;xref:System.Web.Hosting.HostingEnvironment.DecrementBusyCount%2A&gt; method for each call to the IncrementBusyCount method.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Gets any exception thrown during initialization of the <bpt id="p1">&lt;xref href="System.Web.Hosting.HostingEnvironment"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The exception thrown during initialization of the <bpt id="p1">&lt;xref href="System.Web.Hosting.HostingEnvironment"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If no exception was thrown, returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Gives the <bpt id="p1">&lt;xref href="System.Web.Hosting.HostingEnvironment"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object an infinite lifetime by preventing a lease from being created.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overrides the &lt;xref:System.MarshalByRefObject.InitializeLifetimeService%2A&gt; method in its base class.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>It always returns <ph id="ph1">`null`</ph> and prevents a lease from being created that would limit the &lt;xref:System.Web.Hosting.HostingEnvironment&gt; object's lifetime.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Always <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Starts shutting down the web application associated with this host and removes registered objects from the system.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the InitiateShutdown method to stop a web application domain and remove any objects registered with the &lt;xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns immediately, before the shutdown is complete.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A&gt; method is called on each registered object with the passed parameter set to <ph id="ph1">`false`</ph> to allow each registered object to shut down asynchronously.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>After waiting for the amount of time specified in the <ph id="ph1">`shutdownTimeout`</ph> attribute of the  configuration element, the &lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A&gt; method is called again with the passed parameter set to <ph id="ph2">`true`</ph> for each registered object remaining.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once all registered objects have finished shutting down, the &lt;xref:System.Web.Hosting.HostingEnvironment&gt; objects shuts down the application domain.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Gets a value that indicats whether the current application is in a development environment.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the application is in a development environment; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current application domain is being hosted by an <bpt id="p1">&lt;xref href="System.Web.Hosting.ApplicationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the application domain is hosted by an <bpt id="p2">&lt;xref href="System.Web.Hosting.ApplicationManager"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Maps a virtual path to a physical path on the server.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The virtual path (absolute or relative).</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The physical path on the server specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">virtualPath</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Gets or sets the maximum concurrent requests per CPU.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The maximum concurrent requests per CPU.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Gets or sets the maximum concurrent threads per CPU.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The maximum concurrent threads per CPU.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This method supports the <ph id="ph1">[!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)]</ph> infrastructure and is not intended to be used directly from your code.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>[Supported in the .NET Framework 4.5.2 and later versions]       Schedules a task which can run in the background, independent of any request.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>Differs from a normal ThreadPool work item in that ASP.NET can keep track of how many work items registered through this API are currently running, and the ASP.NET runtime will try to delay AppDomain shutdown until these work items have finished executing.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>This API cannot be called outside of an ASP.NET-managed AppDomain.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>The provided CancellationToken will be signaled when the application is shutting down.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>QueueBackgroundWorkItem takes a Task-returning callback; the work item will be considered finished when the callback returns.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>A unit of execution.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>[Supported in the .NET Framework 4.5.2 and later versions]       Schedules a task which can run in the background, independent of any request.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>Differs from a normal ThreadPool work item in that ASP.NET can keep track of how many work items registered through this API are currently running, and the ASP.NET runtime will try to delay AppDomain shutdown until these work items have finished executing.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>This API cannot be called outside of an ASP.NET-managed AppDomain.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>The provided CancellationToken will be signaled when the application is shutting down.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>QueueBackgroundWorkItem takes a Task-returning callback; the work item will be considered finished when the returned Task transitions to a terminal state.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>A unit of execution.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Places an object in the list of registered objects for the application.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.Hosting.ApplicationManager&gt; class enables methods outside the current application domain to create, manage, and destroy objects inside the current application domain.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>The RegisterObject method is used to register previously created objects with the hosting environment.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>Objects registered with the RegisterObject method must implement the &lt;xref:System.Web.Hosting.IRegisteredObject&gt; interface.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use a registered object, follow these steps:      1.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create a new instance of your registered object by calling the &lt;xref:System.Web.Hosting.ApplicationManager.CreateObject%2A?displayProperty=fullName&gt; method.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call a type-specific method to initialize your new object.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the initialization method, call the RegisterObject method to add the object to the list of registered objects.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the &lt;xref:System.Web.Hosting.ApplicationManager.GetObject%2A?displayProperty=fullName&gt; method to return the registered object when required.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>4.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you wish to stop your object, call the &lt;xref:System.Web.Hosting.ApplicationManager.StopObject%2A?displayProperty=fullName&gt; method.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.Hosting.ApplicationManager.StopObject%2A?displayProperty=fullName&gt; method in turn calls the &lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A?displayProperty=fullName&gt; method.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>5.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the &lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A?displayProperty=fullName&gt; method, have your object call the &lt;xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The object to register.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Registers a new <bpt id="p1">&lt;xref href="System.Web.Hosting.VirtualPathProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance with the ASP.NET compilation system.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>The RegisterVirtualPathProvider method adds the specified &lt;xref:System.Web.Hosting.VirtualPathProvider&gt; instance to the application's list of virtual-path providers.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the &lt;xref:System.Web.Hosting.VirtualPathProvider&gt; class overview.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref href="System.Web.Hosting.VirtualPathProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance to add to the compilation system.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Sets the current thread to the culture specified in the application configuration file.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SetCultures method sets the current thread to the culture specified in the <bpt id="p1">[</bpt>globalization Element (ASP.NET Settings Schema)<ept id="p1">](http://msdn.microsoft.com/en-us/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7)</ept> element in the application's configuration file.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IDisposable&gt; object that represents the culture prior to changing; this object can be used to revert to the previous culture.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Sets the current thread to the culture of the specified virtual path.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SetCultures method sets the current thread to the culture that results after applying all  elements in the configuration files affecting the specified virtual path.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The path that contains the culture information.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IDisposable&gt; object that represents the culture prior to changing; this object can be used to revert to the previous culture.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Returns an enumerated value that indicates why the application terminated.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Web.ApplicationShutdownReason"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Gets the name of the site.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The name of the site.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>[Supported in the .NET Framework 4.5.1 only]       Occurs when the worker process or application pool associated with this host has stopped listening for new requests and will eventually shut down.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an application pool and its associated worker processes are being shut down by IIS, for example when an application pool has reached a scheduled recycle interval, IIS notifies the ASP.NET runtime that the application is shutting down and the worker process for the application pool stops listening for new requests.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications that use long-running requests, for example <bpt id="p1">[</bpt>SignalR<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=285432)</ept> applications, can listen for the StopListening event and gracefully shut down their long-running operations when IIS has initiated the shutdown of an application pool and its associated worker processes.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!WARNING]</ph> &gt;  There are several design considerations that a developer must consider when implementing the StopListening event:   &gt;    &gt;  1.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>The StopListening event is only available for applications that are configured to use the IIS integrated pipeline.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; 2.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>Developers must not throw errors from their StopListening implementations; throwing errors will have unpredictable results.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; 3.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>Due to the concurrent nature of operations within ASP.NET, there is no guarantee that ASP.NET will call a StopListening event once it has been implemented by a developer.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; 4.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>The StopListening event can execute concurrently with other &lt;xref:System.Web.Hosting.IRegisteredObject&gt; notifications.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; 5.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>Developers need to be aware that ASP.NET may shut down the application domain while their StopListening event is executing and design their implementations to handle that possibility.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; 6.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>StopListening event handlers must not block; blocking implementations will result in deadlocks, and IIS will terminate the worker process when the rapid fail protection interval is reached.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Removes an object from the list of registered objects for the application.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.Hosting.ApplicationManager&gt; class enables methods outside the current application domain to create, manage, and destroy objects inside the current application domain.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>The UnregisterObject method is used to remove previously registered objects from the hosting environment.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The object to remove.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Gets the virtual path provider for this application.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>When more than one &lt;xref:System.Web.Hosting.VirtualPathProvider&gt; instance is registered, the &lt;xref:System.Web.Hosting.HostingEnvironment&gt; object manages the call chain.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot control the order in which virtual path providers are called.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.Hosting.VirtualPathProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance for this application.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>