{"nodes":[{"pos":[2673,2871],"content":"Represents the base class for <ph id=\"ph1\">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> elements that use a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.ControlTemplate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to define their appearance.","needQuote":true,"needEscape":true,"source":"Represents the base class for [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] elements that use a <xref href=\"System.Windows.Controls.ControlTemplate\"></xref> to define their appearance."},{"pos":[2884,5824],"content":"The Control class is the base class for many of the controls you add to an application. The Control class defines very little behavior; while it is possible to add a Control to your application, it is far more common to add a control that inherits from Control, such as a <xref:System.Windows.Controls.Button> or <xref:System.Windows.Controls.ListBox>.       The <xref:System.Windows.Controls.Control.Template%2A> property, which is a <xref:System.Windows.Controls.ControlTemplate>, specifies the appearance of the Control. If you want to change the appearance of a control but retain its functionality, you should consider creating a new <xref:System.Windows.Controls.ControlTemplate> instead of creating a new class. For more information, see [Styling and Templating](~/add/includes/ajax-current-ext-md.md).       If you want to create a control with custom behavior as well as allow others to customize its appearance, your control can inherit from the Control class and define a <xref:System.Windows.Controls.ControlTemplate>.  If you want to extend the behavior of an existing control, you can inherit from a class that inherits from Control.       A Control that does not have a <xref:System.Windows.Controls.ControlTemplate> is not visible in your application, and setting the following properties has no effect unless the <xref:System.Windows.Controls.ControlTemplate> references them explicitly:      -   <xref:System.Windows.Controls.Control.Background%2A>      -   <xref:System.Windows.Controls.Control.BorderBrush%2A>      -   <xref:System.Windows.Controls.Control.BorderThickness%2A>      -   <xref:System.Windows.Controls.Control.FontFamily%2A>      -   <xref:System.Windows.Controls.Control.FontSize%2A>      -   <xref:System.Windows.Controls.Control.FontStretch%2A>      -   <xref:System.Windows.Controls.Control.FontWeight%2A>      -   <xref:System.Windows.Controls.Control.Foreground%2A>      -   <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A>      -   <xref:System.Windows.Controls.Control.VerticalContentAlignment%2A>       A common way to use these properties is to bind an element in the <xref:System.Windows.Controls.ControlTemplate> to the property.  For example, if you want your control to change color according to the value of the <xref:System.Windows.Controls.Control.Background%2A> property, you can bind some property of an element in the <xref:System.Windows.Controls.ControlTemplate> to the <xref:System.Windows.Controls.Control.Background%2A>. Use the [TemplateBinding Markup Extension](~/add/includes/ajax-current-ext-md.md) to bind properties on a control to an element in the <xref:System.Windows.Controls.ControlTemplate>.       Control overrides the metadata of the <xref:System.Windows.UIElement.Focusable%2A> property and sets its default to `true`. For more information, see [Dependency Properties Overview](~/add/includes/ajax-current-ext-md.md)","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Control class is the base class for many of the controls you add to an application.","pos":[0,87]},{"content":"The Control class defines very little behavior; while it is possible to add a Control to your application, it is far more common to add a control that inherits from Control, such as a &lt;xref:System.Windows.Controls.Button&gt; or &lt;xref:System.Windows.Controls.ListBox&gt;.","pos":[88,352],"source":" The Control class defines very little behavior; while it is possible to add a Control to your application, it is far more common to add a control that inherits from Control, such as a <xref:System.Windows.Controls.Button> or <xref:System.Windows.Controls.ListBox>."},{"content":"The &lt;xref:System.Windows.Controls.Control.Template%2A&gt; property, which is a &lt;xref:System.Windows.Controls.ControlTemplate&gt;, specifies the appearance of the Control.","pos":[359,523],"source":"       The <xref:System.Windows.Controls.Control.Template%2A> property, which is a <xref:System.Windows.Controls.ControlTemplate>, specifies the appearance of the Control."},{"content":"If you want to change the appearance of a control but retain its functionality, you should consider creating a new &lt;xref:System.Windows.Controls.ControlTemplate&gt; instead of creating a new class.","pos":[524,718],"source":" If you want to change the appearance of a control but retain its functionality, you should consider creating a new <xref:System.Windows.Controls.ControlTemplate> instead of creating a new class."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Styling and Templating<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[719,809],"source":" For more information, see [Styling and Templating](~/add/includes/ajax-current-ext-md.md)."},{"content":"If you want to create a control with custom behavior as well as allow others to customize its appearance, your control can inherit from the Control class and define a &lt;xref:System.Windows.Controls.ControlTemplate&gt;.","pos":[816,1030],"source":"       If you want to create a control with custom behavior as well as allow others to customize its appearance, your control can inherit from the Control class and define a <xref:System.Windows.Controls.ControlTemplate>."},{"content":"If you want to extend the behavior of an existing control, you can inherit from a class that inherits from Control.","pos":[1032,1147]},{"content":"A Control that does not have a &lt;xref:System.Windows.Controls.ControlTemplate&gt; is not visible in your application, and setting the following properties has no effect unless the &lt;xref:System.Windows.Controls.ControlTemplate&gt; references them explicitly:      -   &lt;xref:System.Windows.Controls.Control.Background%2A&gt;      -   &lt;xref:System.Windows.Controls.Control.BorderBrush%2A&gt;      -   &lt;xref:System.Windows.Controls.Control.BorderThickness%2A&gt;      -   &lt;xref:System.Windows.Controls.Control.FontFamily%2A&gt;      -   &lt;xref:System.Windows.Controls.Control.FontSize%2A&gt;      -   &lt;xref:System.Windows.Controls.Control.FontStretch%2A&gt;      -   &lt;xref:System.Windows.Controls.Control.FontWeight%2A&gt;      -   &lt;xref:System.Windows.Controls.Control.Foreground%2A&gt;      -   &lt;xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A&gt;      -   &lt;xref:System.Windows.Controls.Control.VerticalContentAlignment%2A&gt;       A common way to use these properties is to bind an element in the &lt;xref:System.Windows.Controls.ControlTemplate&gt; to the property.","pos":[1154,2195],"source":"       A Control that does not have a <xref:System.Windows.Controls.ControlTemplate> is not visible in your application, and setting the following properties has no effect unless the <xref:System.Windows.Controls.ControlTemplate> references them explicitly:      -   <xref:System.Windows.Controls.Control.Background%2A>      -   <xref:System.Windows.Controls.Control.BorderBrush%2A>      -   <xref:System.Windows.Controls.Control.BorderThickness%2A>      -   <xref:System.Windows.Controls.Control.FontFamily%2A>      -   <xref:System.Windows.Controls.Control.FontSize%2A>      -   <xref:System.Windows.Controls.Control.FontStretch%2A>      -   <xref:System.Windows.Controls.Control.FontWeight%2A>      -   <xref:System.Windows.Controls.Control.Foreground%2A>      -   <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A>      -   <xref:System.Windows.Controls.Control.VerticalContentAlignment%2A>       A common way to use these properties is to bind an element in the <xref:System.Windows.Controls.ControlTemplate> to the property."},{"content":"For example, if you want your control to change color according to the value of the &lt;xref:System.Windows.Controls.Control.Background%2A&gt; property, you can bind some property of an element in the &lt;xref:System.Windows.Controls.ControlTemplate&gt; to the &lt;xref:System.Windows.Controls.Control.Background%2A&gt;.","pos":[2197,2499],"source":"  For example, if you want your control to change color according to the value of the <xref:System.Windows.Controls.Control.Background%2A> property, you can bind some property of an element in the <xref:System.Windows.Controls.ControlTemplate> to the <xref:System.Windows.Controls.Control.Background%2A>."},{"content":"Use the <bpt id=\"p1\">[</bpt>TemplateBinding Markup Extension<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> to bind properties on a control to an element in the &lt;xref:System.Windows.Controls.ControlTemplate&gt;.","pos":[2500,2682],"source":" Use the [TemplateBinding Markup Extension](~/add/includes/ajax-current-ext-md.md) to bind properties on a control to an element in the <xref:System.Windows.Controls.ControlTemplate>."},{"content":"Control overrides the metadata of the &lt;xref:System.Windows.UIElement.Focusable%2A&gt; property and sets its default to <ph id=\"ph1\">`true`</ph>.","pos":[2689,2812],"source":"       Control overrides the metadata of the <xref:System.Windows.UIElement.Focusable%2A> property and sets its default to `true`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Dependency Properties Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>","pos":[2813,2910],"source":" For more information, see [Dependency Properties Overview](~/add/includes/ajax-current-ext-md.md)"}]},{"pos":[41276,41369],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Control\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Controls.Control\"></xref> class."},{"pos":[41948,42052],"content":"Called to arrange and size the content of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Control\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Called to arrange and size the content of a <xref href=\"System.Windows.Controls.Control\"></xref> object."},{"pos":[42064,42160],"content":"The default control arrangement arranges only the first visual child. No transforms are applied.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default control arrangement arranges only the first visual child. No transforms are applied.","pos":[0,96],"nodes":[{"content":"The default control arrangement arranges only the first visual child.","pos":[0,69]},{"content":"No transforms are applied.","pos":[70,96]}]}]},{"pos":[42367,42421],"content":"The computed size that is used to arrange the content.","needQuote":true,"needEscape":true,"nodes":[{"content":"The computed size that is used to arrange the content.","pos":[0,54]}]},{"pos":[42485,42509],"content":"The size of the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size of the control.","pos":[0,24]}]},{"pos":[42954,43018],"content":"Gets or sets a brush that describes the background of a control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a brush that describes the background of a control.","pos":[0,64]}]},{"pos":[43031,44023],"content":"The Background property applies only to the resting state of a control.  The default style of the control specifies its appearance when the state of the control changes. For example, if you set the Background property on a <xref:System.Windows.Controls.Button>, the button has that value only when it is not pressed or disabled. If you want to create a control that has a more advanced customization of the background, you must define the control's style.       This property only affects a control whose template uses the Background property as a parameter. On other controls, this property has no impact.      <a name=\"dependencyPropertyInfo_Background\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Control.BackgroundProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A>|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Background property applies only to the resting state of a control.","pos":[0,71]},{"content":"The default style of the control specifies its appearance when the state of the control changes.","pos":[73,169]},{"content":"For example, if you set the Background property on a &lt;xref:System.Windows.Controls.Button&gt;, the button has that value only when it is not pressed or disabled.","pos":[170,328],"source":" For example, if you set the Background property on a <xref:System.Windows.Controls.Button>, the button has that value only when it is not pressed or disabled."},{"content":"If you want to create a control that has a more advanced customization of the background, you must define the control's style.","pos":[329,455]},{"content":"This property only affects a control whose template uses the Background property as a parameter.","pos":[462,558]},{"content":"On other controls, this property has no impact.","pos":[559,606]},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_Background\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Control.BackgroundProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A&gt;|","pos":[612,980],"source":"<a name=\"dependencyPropertyInfo_Background\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Control.BackgroundProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A>|"}]},{"pos":[44825,44984],"content":"The brush that is used to fill the background of the control. The default is &lt;xref:System.Windows.Media.Brushes.Transparent%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"The brush that is used to fill the background of the control. The default is &lt;xref:System.Windows.Media.Brushes.Transparent%2A?displayProperty=fullName&gt;.","pos":[0,159],"nodes":[{"content":"The brush that is used to fill the background of the control.","pos":[0,61]},{"content":"The default is <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Media.Brushes.Transparent%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[62,159],"source":" The default is &lt;xref:System.Windows.Media.Brushes.Transparent%2A?displayProperty=fullName&gt;."}]}]},{"pos":[45461,45547],"content":"Identifies the <xref:System.Windows.Controls.Control.Background*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.Control.Background*&gt; dependency property.","pos":[0,86],"source":"Identifies the <xref:System.Windows.Controls.Control.Background*> dependency property."}]},{"pos":[45725,45737],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[46126,46197],"content":"Gets or sets a brush that describes the border background of a control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a brush that describes the border background of a control.","pos":[0,71]}]},{"pos":[46210,46741],"content":"This property only affects a control whose template uses the BorderBrush property as a parameter. On other controls, this property has no impact.      <a name=\"dependencyPropertyInfo_BorderBrush\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Control.BorderBrushProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A>|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property only affects a control whose template uses the BorderBrush property as a parameter.","pos":[0,97]},{"content":"On other controls, this property has no impact.","pos":[98,145]},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_BorderBrush\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Control.BorderBrushProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A&gt;|","pos":[151,521],"source":"<a name=\"dependencyPropertyInfo_BorderBrush\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Control.BorderBrushProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A>|"}]},{"pos":[47298,47448],"content":"The brush that is used to fill the control's border; the default is &lt;xref:System.Windows.Media.Brushes.Transparent%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"The brush that is used to fill the control's border; the default is <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Media.Brushes.Transparent%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[0,150],"source":"The brush that is used to fill the control's border; the default is &lt;xref:System.Windows.Media.Brushes.Transparent%2A?displayProperty=fullName&gt;."}]},{"pos":[47931,48018],"content":"Identifies the <xref:System.Windows.Controls.Control.BorderBrush*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.Control.BorderBrush*&gt; dependency property.","pos":[0,87],"source":"Identifies the <xref:System.Windows.Controls.Control.BorderBrush*> dependency property."}]},{"pos":[48197,48209],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[48618,48665],"content":"Gets or sets the border thickness of a control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the border thickness of a control.","pos":[0,47]}]},{"pos":[48678,49205],"content":"This property only affects a control whose template uses the BorderThickness property as a parameter. On other controls, this property has no impact.      <a name=\"dependencyPropertyInfo_BorderThickness\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Control.BorderThicknessProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property only affects a control whose template uses the BorderThickness property as a parameter.","pos":[0,101]},{"content":"On other controls, this property has no impact.","pos":[102,149]},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_BorderThickness\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Control.BorderThicknessProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;|","pos":[155,517],"source":"<a name=\"dependencyPropertyInfo_BorderThickness\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Control.BorderThicknessProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|"}]},{"pos":[49930,49999],"content":"A thickness value; the default is a thickness of 0 on all four sides.","needQuote":true,"needEscape":true,"nodes":[{"content":"A thickness value; the default is a thickness of 0 on all four sides.","pos":[0,69]}]},{"pos":[50506,50597],"content":"Identifies the <xref:System.Windows.Controls.Control.BorderThickness*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.Control.BorderThickness*&gt; dependency property.","pos":[0,91],"source":"Identifies the <xref:System.Windows.Controls.Control.BorderThickness*> dependency property."}]},{"pos":[50780,50792],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[51176,51220],"content":"Gets or sets the font family of the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the font family of the control.","pos":[0,44]}]},{"pos":[51233,51806],"content":"This property only affects a control whose template uses the FontFamily property as a parameter. On other controls, this property has no impact.      <a name=\"dependencyPropertyInfo_FontFamily\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Control.FontFamilyProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property only affects a control whose template uses the FontFamily property as a parameter.","pos":[0,96]},{"content":"On other controls, this property has no impact.","pos":[97,144]},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_FontFamily\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Control.FontFamilyProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;|","pos":[150,563],"source":"<a name=\"dependencyPropertyInfo_FontFamily\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Control.FontFamilyProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|"}]},{"pos":[52371,52424],"content":"A font family. The default is the system dialog font.","needQuote":true,"needEscape":true,"nodes":[{"content":"A font family. The default is the system dialog font.","pos":[0,53],"nodes":[{"content":"A font family.","pos":[0,14]},{"content":"The default is the system dialog font.","pos":[15,53]}]}]},{"pos":[52901,52987],"content":"Identifies the <xref:System.Windows.Controls.Control.FontFamily*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.Control.FontFamily*&gt; dependency property.","pos":[0,86],"source":"Identifies the <xref:System.Windows.Controls.Control.FontFamily*> dependency property."}]},{"pos":[53165,53177],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[53551,53578],"content":"Gets or sets the font size.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the font size.","pos":[0,27]}]},{"pos":[53591,55319],"content":"This property only affects a control whose template uses the FontSize property as a parameter. On other controls, this property has no impact.      <a name=\"dependencyPropertyInfo_FontSize\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Control.FontSizeProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|      <a name=\"xamlAttributeUsage_FontSize\"></a>    ## XAML Attribute Usage      ```   <object FontSize=\"double\"/>   - or –   <object FontSize =\"qualifiedDouble\"/>   ```      <a name=\"xamlValues_FontSize\"></a>    ## XAML Values    *double*    <xref:System.Double>       A string representation of a <xref:System.Double> value. This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)] measurement. Strings need not explicitly include decimal points. For example, a value of `1` is acceptable.       The same <xref:System.Double> range restrictions that are mentioned in the Property Value section apply here.       *qualifiedDouble*    A *double* value as previously described that is followed by one of these unit declaration strings: `px`, `in`, `cm`, `pt`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       `cm` is centimeters; 1cm==(96/2.54) px       `pt` is points; 1pt==(96/72) px       **Note** In many cases a double may be set to \"Auto,\" but a FontSize does not render if set to \"Auto\".","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property only affects a control whose template uses the FontSize property as a parameter.","pos":[0,94]},{"content":"On other controls, this property has no impact.","pos":[95,142]},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_FontSize\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Control.FontSizeProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;|      <bpt id=\"p2\">&lt;a name=\"xamlAttributeUsage_FontSize\"&gt;</bpt><ept id=\"p2\">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id=\"ph2\">```   &lt;object FontSize=\"double\"/&gt;   - or –   &lt;object FontSize =\"qualifiedDouble\"/&gt;   ```</ph>      <bpt id=\"p3\">&lt;a name=\"xamlValues_FontSize\"&gt;</bpt><ept id=\"p3\">&lt;/a&gt;</ept>    ## XAML Values    <bpt id=\"p4\">*</bpt>double<ept id=\"p4\">*</ept>    &lt;xref:System.Double&gt;       A string representation of a &lt;xref:System.Double&gt; value.","pos":[148,883],"source":"<a name=\"dependencyPropertyInfo_FontSize\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Control.FontSizeProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|      <a name=\"xamlAttributeUsage_FontSize\"></a>    ## XAML Attribute Usage      ```   <object FontSize=\"double\"/>   - or –   <object FontSize =\"qualifiedDouble\"/>   ```      <a name=\"xamlValues_FontSize\"></a>    ## XAML Values    *double*    <xref:System.Double>       A string representation of a <xref:System.Double> value."},{"content":"This is interpreted as a <ph id=\"ph1\">[!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)]</ph> measurement.","pos":[884,991],"source":" This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)] measurement."},{"content":"Strings need not explicitly include decimal points.","pos":[992,1043]},{"content":"For example, a value of <ph id=\"ph1\">`1`</ph> is acceptable.","pos":[1044,1086],"source":" For example, a value of `1` is acceptable."},{"content":"The same &lt;xref:System.Double&gt; range restrictions that are mentioned in the Property Value section apply here.","pos":[1093,1202],"source":"       The same <xref:System.Double> range restrictions that are mentioned in the Property Value section apply here."},{"content":"<bpt id=\"p1\">*</bpt>qualifiedDouble<ept id=\"p1\">*</ept>    A <bpt id=\"p2\">*</bpt>double<ept id=\"p2\">*</ept> value as previously described that is followed by one of these unit declaration strings: <ph id=\"ph1\">`px`</ph>, <ph id=\"ph2\">`in`</ph>, <ph id=\"ph3\">`cm`</ph>, <ph id=\"ph4\">`pt`</ph>.","pos":[1209,1353],"source":"*qualifiedDouble*    A *double* value as previously described that is followed by one of these unit declaration strings: `px`, `in`, `cm`, `pt`."},{"content":"<ph id=\"ph1\">`px`</ph> (default) is <ph id=\"ph2\">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>       <ph id=\"ph3\">`in`</ph> is inches; 1in==96px       <ph id=\"ph4\">`cm`</ph> is centimeters; 1cm==(96/2.54) px       <ph id=\"ph5\">`pt`</ph> is points; 1pt==(96/72) px       <bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept> In many cases a double may be set to \"Auto,\" but a FontSize does not render if set to \"Auto\".","pos":[1360,1675],"source":"`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       `cm` is centimeters; 1cm==(96/2.54) px       `pt` is points; 1pt==(96/72) px       **Note** In many cases a double may be set to \"Auto,\" but a FontSize does not render if set to \"Auto\"."}]},{"pos":[55837,56059],"content":"The size of the text in the <xref href=\"System.Windows.Controls.Control\"></xref>. The default is &lt;xref:System.Windows.SystemFonts.MessageFontSize%2A?displayProperty=fullName&gt;. The font size must be a positive number.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size of the text in the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Control\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,81],"source":"The size of the text in the <xref href=\"System.Windows.Controls.Control\"></xref>."},{"content":"The default is <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.SystemFonts.MessageFontSize%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[82,181],"source":" The default is &lt;xref:System.Windows.SystemFonts.MessageFontSize%2A?displayProperty=fullName&gt;."},{"content":"The font size must be a positive number.","pos":[182,222]}]},{"pos":[56524,56608],"content":"Identifies the <xref:System.Windows.Controls.Control.FontSize*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.Control.FontSize*&gt; dependency property.","pos":[0,84],"source":"Identifies the <xref:System.Windows.Controls.Control.FontSize*> dependency property."}]},{"pos":[56784,56796],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[57185,57264],"content":"Gets or sets the degree to which a font is condensed or expanded on the screen.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the degree to which a font is condensed or expanded on the screen.","pos":[0,79]}]},{"pos":[57277,57853],"content":"This property only affects a control whose template uses the FontStretch property as a parameter. On other controls, this property has no impact.      <a name=\"dependencyPropertyInfo_FontStretch\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Control.FontStretchProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property only affects a control whose template uses the FontStretch property as a parameter.","pos":[0,97]},{"content":"On other controls, this property has no impact.","pos":[98,145]},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_FontStretch\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Control.FontStretchProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;|","pos":[151,566],"source":"<a name=\"dependencyPropertyInfo_FontStretch\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Control.FontStretchProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|"}]},{"pos":[58644,58793],"content":"A <xref href=\"System.Windows.FontStretch\"></xref> value. The default is &lt;xref:System.Windows.FontStretches.Normal%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.FontStretch\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","pos":[0,56],"source":"A <xref href=\"System.Windows.FontStretch\"></xref> value."},{"content":"The default is <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.FontStretches.Normal%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[57,149],"source":" The default is &lt;xref:System.Windows.FontStretches.Normal%2A?displayProperty=fullName&gt;."}]},{"pos":[59276,59363],"content":"Identifies the <xref:System.Windows.Controls.Control.FontStretch*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.Control.FontStretch*&gt; dependency property.","pos":[0,87],"source":"Identifies the <xref:System.Windows.Controls.Control.FontStretch*> dependency property."}]},{"pos":[59542,59554],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[59933,59961],"content":"Gets or sets the font style.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the font style.","pos":[0,28]}]},{"pos":[59974,60544],"content":"This property only affects a control whose template uses the FontStyle property as a parameter. On other controls, this property has no impact.      <a name=\"dependencyPropertyInfo_FontStyle\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Control.FontStyleProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property only affects a control whose template uses the FontStyle property as a parameter.","pos":[0,95]},{"content":"On other controls, this property has no impact.","pos":[96,143]},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_FontStyle\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Control.FontStyleProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;|","pos":[149,560],"source":"<a name=\"dependencyPropertyInfo_FontStyle\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Control.FontStyleProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|"}]},{"pos":[61093,61237],"content":"A <xref href=\"System.Windows.FontStyle\"></xref> value. The default is &lt;xref:System.Windows.FontStyles.Normal%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.FontStyle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","pos":[0,54],"source":"A <xref href=\"System.Windows.FontStyle\"></xref> value."},{"content":"The default is <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.FontStyles.Normal%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[55,144],"source":" The default is &lt;xref:System.Windows.FontStyles.Normal%2A?displayProperty=fullName&gt;."}]},{"pos":[61708,61793],"content":"Identifies the <xref:System.Windows.Controls.Control.FontStyle*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.Control.FontStyle*&gt; dependency property.","pos":[0,85],"source":"Identifies the <xref:System.Windows.Controls.Control.FontStyle*> dependency property."}]},{"pos":[61970,61982],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[62366,62425],"content":"Gets or sets the weight or thickness of the specified font.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the weight or thickness of the specified font.","pos":[0,59]}]},{"pos":[62438,63126],"content":"This property only affects a control whose template uses the FontWeight property as a parameter. On other controls, this property has no impact. For a list of predefined <xref:System.Windows.FontWeight> values, see the <xref:System.Windows.FontWeights> class.      <a name=\"dependencyPropertyInfo_FontWeight\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Control.FontWeightProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property only affects a control whose template uses the FontWeight property as a parameter.","pos":[0,96]},{"content":"On other controls, this property has no impact.","pos":[97,144]},{"content":"For a list of predefined &lt;xref:System.Windows.FontWeight&gt; values, see the &lt;xref:System.Windows.FontWeights&gt; class.","pos":[145,259],"source":" For a list of predefined <xref:System.Windows.FontWeight> values, see the <xref:System.Windows.FontWeights> class."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_FontWeight\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Control.FontWeightProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;|","pos":[265,678],"source":"<a name=\"dependencyPropertyInfo_FontWeight\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Control.FontWeightProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|"}]},{"pos":[63678,63824],"content":"A <xref href=\"System.Windows.FontWeight\"></xref> value. The default is &lt;xref:System.Windows.FontWeights.Normal%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.FontWeight\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","pos":[0,55],"source":"A <xref href=\"System.Windows.FontWeight\"></xref> value."},{"content":"The default is <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.FontWeights.Normal%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[56,146],"source":" The default is &lt;xref:System.Windows.FontWeights.Normal%2A?displayProperty=fullName&gt;."}]},{"pos":[64301,64387],"content":"Identifies the <xref:System.Windows.Controls.Control.FontWeight*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.Control.FontWeight*&gt; dependency property.","pos":[0,86],"source":"Identifies the <xref:System.Windows.Controls.Control.FontWeight*> dependency property."}]},{"pos":[64565,64577],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[64961,65018],"content":"Gets or sets a brush that describes the foreground color.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a brush that describes the foreground color.","pos":[0,57]}]},{"pos":[65031,65620],"content":"This property only affects a control whose template uses the Foreground property as a parameter. On other controls, this property has no impact.      <a name=\"dependencyPropertyInfo_Foreground\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Control.ForegroundProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property only affects a control whose template uses the Foreground property as a parameter.","pos":[0,96]},{"content":"On other controls, this property has no impact.","pos":[97,144]},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_Foreground\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Control.ForegroundProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;|","pos":[150,579],"source":"<a name=\"dependencyPropertyInfo_Foreground\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Control.ForegroundProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|"}]},{"pos":[66174,66277],"content":"The brush that paints the foreground of the control. The default value is the system dialog font color.","needQuote":true,"needEscape":true,"nodes":[{"content":"The brush that paints the foreground of the control. The default value is the system dialog font color.","pos":[0,103],"nodes":[{"content":"The brush that paints the foreground of the control.","pos":[0,52]},{"content":"The default value is the system dialog font color.","pos":[53,103]}]}]},{"pos":[66754,66840],"content":"Identifies the <xref:System.Windows.Controls.Control.Foreground*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.Control.Foreground*&gt; dependency property.","pos":[0,86],"source":"Identifies the <xref:System.Windows.Controls.Control.Foreground*> dependency property."}]},{"pos":[67018,67030],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[67444,67509],"content":"Gets a value that indicates whether a control supports scrolling.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether a control supports scrolling.","pos":[0,65]}]},{"pos":[67640,67913],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the control has a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.ScrollViewer\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> in its style and has a custom keyboard scrolling behavior; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the control has a <xref href=\"System.Windows.Controls.ScrollViewer\"></xref> in its style and has a custom keyboard scrolling behavior; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[68439,68502],"content":"Gets or sets the horizontal alignment of the control's content.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the horizontal alignment of the control's content.","pos":[0,63]}]},{"pos":[68515,69396],"content":"In addition to <xref:System.Windows.HorizontalAlignment>, <xref:System.Windows.HorizontalAlignment>, and <xref:System.Windows.HorizontalAlignment>, you can set the HorizontalContentAlignment property to <xref:System.Windows.HorizontalAlignment>, which stretches the child element to fill the allocated space of the parent element. For more information, see [Alignment, Margins, and Padding Overview](~/add/includes/ajax-current-ext-md.md).       This property only affects a control whose template uses the HorizontalContentAlignment property as a parameter. On other controls, this property has no impact.      <a name=\"dependencyPropertyInfo_HorizontalContentAlignment\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Control.HorizontalContentAlignmentProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"In addition to &lt;xref:System.Windows.HorizontalAlignment&gt;, &lt;xref:System.Windows.HorizontalAlignment&gt;, and &lt;xref:System.Windows.HorizontalAlignment&gt;, you can set the HorizontalContentAlignment property to &lt;xref:System.Windows.HorizontalAlignment&gt;, which stretches the child element to fill the allocated space of the parent element.","pos":[0,330],"source":"In addition to <xref:System.Windows.HorizontalAlignment>, <xref:System.Windows.HorizontalAlignment>, and <xref:System.Windows.HorizontalAlignment>, you can set the HorizontalContentAlignment property to <xref:System.Windows.HorizontalAlignment>, which stretches the child element to fill the allocated space of the parent element."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Alignment, Margins, and Padding Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[331,439],"source":" For more information, see [Alignment, Margins, and Padding Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"This property only affects a control whose template uses the HorizontalContentAlignment property as a parameter.","pos":[446,558]},{"content":"On other controls, this property has no impact.","pos":[559,606]},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_HorizontalContentAlignment\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Control.HorizontalContentAlignmentProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[612,869],"source":"<a name=\"dependencyPropertyInfo_HorizontalContentAlignment\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Control.HorizontalContentAlignmentProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[70000,70146],"content":"One of the <xref href=\"System.Windows.HorizontalAlignment\"></xref> values. The default is <xref href=\"System.Windows.HorizontalAlignment\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.HorizontalAlignment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,74],"source":"One of the <xref href=\"System.Windows.HorizontalAlignment\"></xref> values."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Windows.HorizontalAlignment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[75,146],"source":" The default is <xref href=\"System.Windows.HorizontalAlignment\"></xref>."}]},{"pos":[70719,70821],"content":"Identifies the <xref:System.Windows.Controls.Control.HorizontalContentAlignment*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.Control.HorizontalContentAlignment*&gt; dependency property.","pos":[0,102],"source":"Identifies the <xref:System.Windows.Controls.Control.HorizontalContentAlignment*> dependency property."}]},{"pos":[71015,71027],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[71406,71490],"content":"Gets or sets a value that indicates whether a control is included in tab navigation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether a control is included in tab navigation.","pos":[0,84]}]},{"pos":[71503,71811],"content":"If IsTabStop is `false`, the control is excluded from tab navigation.      <a name=\"dependencyPropertyInfo_IsTabStop\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Control.IsTabStopProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If IsTabStop is <ph id=\"ph1\">`false`</ph>, the control is excluded from tab navigation.","pos":[0,69],"source":"If IsTabStop is `false`, the control is excluded from tab navigation."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_IsTabStop\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Control.IsTabStopProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[75,298],"source":"<a name=\"dependencyPropertyInfo_IsTabStop\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Control.IsTabStopProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[72544,72802],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the control is included in tab navigation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the control is included in tab navigation; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,181],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the control is included in tab navigation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[182,258],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[73273,73358],"content":"Identifies the <xref:System.Windows.Controls.Control.IsTabStop*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.Control.IsTabStop*&gt; dependency property.","pos":[0,85],"source":"Identifies the <xref:System.Windows.Controls.Control.IsTabStop*> dependency property."}]},{"pos":[73535,73547],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[74014,74044],"content":"Called to remeasure a control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Called to remeasure a control.","pos":[0,30]}]},{"pos":[74056,74125],"content":"The default control measurement only measures the first visual child.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default control measurement only measures the first visual child.","pos":[0,69]}]},{"pos":[74326,74370],"content":"The maximum size that the method can return.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum size that the method can return.","pos":[0,44]}]},{"pos":[74434,74514],"content":"The size of the control, up to the maximum specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">constraint</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The size of the control, up to the maximum specified by <code>constraint</code>."},{"pos":[74986,75042],"content":"Occurs when a mouse button is clicked two or more times.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when a mouse button is clicked two or more times.","pos":[0,56]}]},{"pos":[75055,76800],"content":"Although this routed event seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised along the element tree by each <xref:System.Windows.UIElement>. If you set the <xref:System.Windows.RoutedEventArgs.Handled%2A> property to `true` in a MouseDoubleClick event handler, subsequent MouseDoubleClick events along the route will occur with <xref:System.Windows.RoutedEventArgs.Handled%2A> set to `false`. This is a higher-level event for control consumers who want to be notified when the user double-clicks the control and to handle the event in an application.       Control authors who want to handle mouse double clicks should use the <xref:System.Windows.UIElement.MouseLeftButtonDown> event when <xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> is equal to two.  This will cause the state of <xref:System.Windows.RoutedEventArgs.Handled%2A> to propagate appropriately in the case where another element in the element tree handles the event.       The <xref:System.Windows.Controls.Control> class defines the <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick> and MouseDoubleClick events, but not corresponding single-click events.  To see if the user has clicked the control once, handle the <xref:System.Windows.UIElement.MouseDown> event (or one of its counterparts) and check whether the <xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> property value is 1.      <a name=\"routedEventInfo_MouseDoubleClick\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Control.MouseDoubleClickEvent>|   |Routing strategy|Direct|   |Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Although this routed event seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised along the element tree by each &lt;xref:System.Windows.UIElement&gt;.","pos":[0,200],"source":"Although this routed event seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised along the element tree by each <xref:System.Windows.UIElement>."},{"content":"If you set the &lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt; property to <ph id=\"ph1\">`true`</ph> in a MouseDoubleClick event handler, subsequent MouseDoubleClick events along the route will occur with &lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt; set to <ph id=\"ph2\">`false`</ph>.","pos":[201,452],"source":" If you set the <xref:System.Windows.RoutedEventArgs.Handled%2A> property to `true` in a MouseDoubleClick event handler, subsequent MouseDoubleClick events along the route will occur with <xref:System.Windows.RoutedEventArgs.Handled%2A> set to `false`."},{"content":"This is a higher-level event for control consumers who want to be notified when the user double-clicks the control and to handle the event in an application.","pos":[453,610]},{"content":"Control authors who want to handle mouse double clicks should use the &lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt; event when &lt;xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A&gt; is equal to two.","pos":[617,829],"source":"       Control authors who want to handle mouse double clicks should use the <xref:System.Windows.UIElement.MouseLeftButtonDown> event when <xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> is equal to two."},{"content":"This will cause the state of &lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt; to propagate appropriately in the case where another element in the element tree handles the event.","pos":[831,1008],"source":"  This will cause the state of <xref:System.Windows.RoutedEventArgs.Handled%2A> to propagate appropriately in the case where another element in the element tree handles the event."},{"content":"The &lt;xref:System.Windows.Controls.Control&gt; class defines the &lt;xref:System.Windows.Controls.Control.PreviewMouseDoubleClick&gt; and MouseDoubleClick events, but not corresponding single-click events.","pos":[1015,1210],"source":"       The <xref:System.Windows.Controls.Control> class defines the <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick> and MouseDoubleClick events, but not corresponding single-click events."},{"content":"To see if the user has clicked the control once, handle the &lt;xref:System.Windows.UIElement.MouseDown&gt; event (or one of its counterparts) and check whether the &lt;xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A&gt; property value is 1.","pos":[1212,1454],"source":"  To see if the user has clicked the control once, handle the <xref:System.Windows.UIElement.MouseDown> event (or one of its counterparts) and check whether the <xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> property value is 1."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_MouseDoubleClick\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Control.MouseDoubleClickEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|","pos":[1460,1730],"source":"<a name=\"routedEventInfo_MouseDoubleClick\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Control.MouseDoubleClickEvent>|   |Routing strategy|Direct|   |Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|"}]},{"pos":[77597,77609],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[78045,78143],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Control.MouseDoubleClick\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.Controls.Control.MouseDoubleClick\"></xref> routed event."},{"pos":[78310,78322],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[78896,78990],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Control.MouseDoubleClick\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Controls.Control.MouseDoubleClick\"></xref> routed event."},{"pos":[79002,79246],"content":"The control raises the <xref:System.Windows.Controls.Control.MouseDoubleClick> event by calling the <xref:System.Windows.UIElement.RaiseEvent%2A> method. For more information, see [Routed Events Overview](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The control raises the &lt;xref:System.Windows.Controls.Control.MouseDoubleClick&gt; event by calling the &lt;xref:System.Windows.UIElement.RaiseEvent%2A&gt; method.","pos":[0,153],"source":"The control raises the <xref:System.Windows.Controls.Control.MouseDoubleClick> event by calling the <xref:System.Windows.UIElement.RaiseEvent%2A> method."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Routed Events Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[154,244],"source":" For more information, see [Routed Events Overview](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[79460,79475],"content":"The event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event data.","pos":[0,15]}]},{"pos":[80148,80249],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Control.PreviewMouseDoubleClick\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Controls.Control.PreviewMouseDoubleClick\"></xref> routed event."},{"pos":[80261,80513],"content":"The control raises the <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick> event by calling the <xref:System.Windows.UIElement.RaiseEvent%2A> method.  For more information, see [Routed Events Overview](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The control raises the &lt;xref:System.Windows.Controls.Control.PreviewMouseDoubleClick&gt; event by calling the &lt;xref:System.Windows.UIElement.RaiseEvent%2A&gt; method.","pos":[0,160],"source":"The control raises the <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick> event by calling the <xref:System.Windows.UIElement.RaiseEvent%2A> method."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Routed Events Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[162,252],"source":"  For more information, see [Routed Events Overview](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[80734,80749],"content":"The event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event data.","pos":[0,15]}]},{"pos":[81498,81545],"content":"Called whenever the control's template changes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Called whenever the control's template changes.","pos":[0,47]}]},{"pos":[81558,82106],"content":"The timing for changing the template is as follows:      1.  The template is changed by a <xref:System.Windows.DependencyObject.SetValue%2A> method call, a style trigger, or some other means.      2.  The property value changes; the property-changed callback is called.      3.  The old visual tree is removed.      4.  An internal method is called which eventually calls the OnTemplateChanged method.      5.  Later, during a measure, <xref:System.Windows.FrameworkElement.OnApplyTemplate%2A> is called and a new visual tree is attached.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The timing for changing the template is as follows:      1.  The template is changed by a <xref:System.Windows.DependencyObject.SetValue%2A> method call, a style trigger, or some other means.      2.  The property value changes; the property-changed callback is called.      3.  The old visual tree is removed.      4.  An internal method is called which eventually calls the OnTemplateChanged method.      5.  Later, during a measure, <xref:System.Windows.FrameworkElement.OnApplyTemplate%2A> is called and a new visual tree is attached.","pos":[0,538],"nodes":[{"content":"The timing for changing the template is as follows:      1.","pos":[0,59]},{"content":"The template is changed by a &lt;xref:System.Windows.DependencyObject.SetValue%2A&gt; method call, a style trigger, or some other means.","pos":[61,191],"source":"  The template is changed by a <xref:System.Windows.DependencyObject.SetValue%2A> method call, a style trigger, or some other means."},{"content":"2.","pos":[197,199]},{"content":"The property value changes; the property-changed callback is called.","pos":[201,269]},{"content":"3.","pos":[275,277]},{"content":"The old visual tree is removed.","pos":[279,310]},{"content":"4.","pos":[316,318]},{"content":"An internal method is called which eventually calls the OnTemplateChanged method.","pos":[320,401]},{"content":"5.","pos":[407,409]},{"content":"Later, during a measure, &lt;xref:System.Windows.FrameworkElement.OnApplyTemplate%2A&gt; is called and a new visual tree is attached.","pos":[411,538],"source":"  Later, during a measure, <xref:System.Windows.FrameworkElement.OnApplyTemplate%2A> is called and a new visual tree is attached."}]}]},{"pos":[82389,82406],"content":"The old template.","needQuote":true,"needEscape":true,"nodes":[{"content":"The old template.","pos":[0,17]}]},{"pos":[82500,82517],"content":"The new template.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new template.","pos":[0,17]}]},{"pos":[82949,82991],"content":"Gets or sets the padding inside a control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the padding inside a control.","pos":[0,42]}]},{"pos":[83004,83664],"content":"Padding is specified in the order Left, Top, Right, and Bottom. For more information, see <xref:System.Windows.Thickness> and [Alignment, Margins, and Padding Overview](~/add/includes/ajax-current-ext-md.md).       This property only affects a control whose template uses the Padding property as a parameter. On other controls, this property has no impact.      <a name=\"dependencyPropertyInfo_Padding\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Control.PaddingProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A>|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Padding is specified in the order Left, Top, Right, and Bottom.","pos":[0,63]},{"content":"For more information, see &lt;xref:System.Windows.Thickness&gt; and <bpt id=\"p1\">[</bpt>Alignment, Margins, and Padding Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[64,208],"source":" For more information, see <xref:System.Windows.Thickness> and [Alignment, Margins, and Padding Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"This property only affects a control whose template uses the Padding property as a parameter.","pos":[215,308]},{"content":"On other controls, this property has no impact.","pos":[309,356]},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_Padding\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Control.PaddingProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A&gt;|","pos":[362,648],"source":"<a name=\"dependencyPropertyInfo_Padding\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Control.PaddingProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A>|"}]},{"pos":[84372,84632],"content":"The amount of space between the content of a <xref href=\"System.Windows.Controls.Control\"></xref> and its <xref:System.Windows.FrameworkElement.Margin*> or <xref href=\"System.Windows.Controls.Border\"></xref>.  The default is a thickness of 0 on all four sides.","needQuote":true,"needEscape":true,"nodes":[{"content":"The amount of space between the content of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Control\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and its &lt;xref:System.Windows.FrameworkElement.Margin*&gt; or <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.Border\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,208],"source":"The amount of space between the content of a <xref href=\"System.Windows.Controls.Control\"></xref> and its <xref:System.Windows.FrameworkElement.Margin*> or <xref href=\"System.Windows.Controls.Border\"></xref>."},{"content":"The default is a thickness of 0 on all four sides.","pos":[210,260]}]},{"pos":[85091,85174],"content":"Identifies the <xref:System.Windows.Controls.Control.Padding*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.Control.Padding*&gt; dependency property.","pos":[0,83],"source":"Identifies the <xref:System.Windows.Controls.Control.Padding*> dependency property."}]},{"pos":[85349,85361],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[85807,85868],"content":"Occurs when a user clicks the mouse button two or more times.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when a user clicks the mouse button two or more times.","pos":[0,61]}]},{"pos":[85881,87812],"content":"Although this routed event seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised along the element tree by each <xref:System.Windows.UIElement>. If you set the <xref:System.Windows.RoutedEventArgs.Handled%2A> property to `true` in a PreviewMouseDoubleClick event handler, subsequent PreviewMouseDoubleClick events along the route will occur with <xref:System.Windows.RoutedEventArgs.Handled%2A> set to `false`, but the <xref:System.Windows.Controls.Control.MouseDoubleClick> event will occur with <xref:System.Windows.RoutedEventArgs.Handled%2A> set to `true`. This is a higher-level event for control consumers who want to be notified when the user double-clicks the control and to handle the event in an application.       Control authors who want to handle mouse double clicks should use the <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> event when <xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> is equal to two.  This will cause the state of <xref:System.Windows.RoutedEventArgs.Handled%2A> to propagate appropriately in the case where another element in the element tree handles the event.       The <xref:System.Windows.Controls.Control> class defines the PreviewMouseDoubleClick and <xref:System.Windows.Controls.Control.MouseDoubleClick> events, but not corresponding single-click events.  To see if the user has clicked the control once, handle the <xref:System.Windows.UIElement.MouseDown> event (or one of its counterparts) and check whether the <xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> property value is 1.      <a name=\"routedEventInfo_PreviewMouseDoubleClick\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Control.PreviewMouseDoubleClickEvent>|   |Routing strategy|Direct|   |Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Although this routed event seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised along the element tree by each &lt;xref:System.Windows.UIElement&gt;.","pos":[0,201],"source":"Although this routed event seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised along the element tree by each <xref:System.Windows.UIElement>."},{"content":"If you set the &lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt; property to <ph id=\"ph1\">`true`</ph> in a PreviewMouseDoubleClick event handler, subsequent PreviewMouseDoubleClick events along the route will occur with &lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt; set to <ph id=\"ph2\">`false`</ph>, but the &lt;xref:System.Windows.Controls.Control.MouseDoubleClick&gt; event will occur with &lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt; set to <ph id=\"ph3\">`true`</ph>.","pos":[202,617],"source":" If you set the <xref:System.Windows.RoutedEventArgs.Handled%2A> property to `true` in a PreviewMouseDoubleClick event handler, subsequent PreviewMouseDoubleClick events along the route will occur with <xref:System.Windows.RoutedEventArgs.Handled%2A> set to `false`, but the <xref:System.Windows.Controls.Control.MouseDoubleClick> event will occur with <xref:System.Windows.RoutedEventArgs.Handled%2A> set to `true`."},{"content":"This is a higher-level event for control consumers who want to be notified when the user double-clicks the control and to handle the event in an application.","pos":[618,775]},{"content":"Control authors who want to handle mouse double clicks should use the &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt; event when &lt;xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A&gt; is equal to two.","pos":[782,1001],"source":"       Control authors who want to handle mouse double clicks should use the <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> event when <xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> is equal to two."},{"content":"This will cause the state of &lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt; to propagate appropriately in the case where another element in the element tree handles the event.","pos":[1003,1180],"source":"  This will cause the state of <xref:System.Windows.RoutedEventArgs.Handled%2A> to propagate appropriately in the case where another element in the element tree handles the event."},{"content":"The &lt;xref:System.Windows.Controls.Control&gt; class defines the PreviewMouseDoubleClick and &lt;xref:System.Windows.Controls.Control.MouseDoubleClick&gt; events, but not corresponding single-click events.","pos":[1187,1382],"source":"       The <xref:System.Windows.Controls.Control> class defines the PreviewMouseDoubleClick and <xref:System.Windows.Controls.Control.MouseDoubleClick> events, but not corresponding single-click events."},{"content":"To see if the user has clicked the control once, handle the &lt;xref:System.Windows.UIElement.MouseDown&gt; event (or one of its counterparts) and check whether the &lt;xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A&gt; property value is 1.","pos":[1384,1626],"source":"  To see if the user has clicked the control once, handle the <xref:System.Windows.UIElement.MouseDown> event (or one of its counterparts) and check whether the <xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> property value is 1."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_PreviewMouseDoubleClick\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Control.PreviewMouseDoubleClickEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|","pos":[1632,1916],"source":"<a name=\"routedEventInfo_PreviewMouseDoubleClick\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Control.PreviewMouseDoubleClickEvent>|   |Routing strategy|Direct|   |Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|"}]},{"pos":[88627,88639],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[89110,89215],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Control.PreviewMouseDoubleClick\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.Controls.Control.PreviewMouseDoubleClick\"></xref> routed event."},{"pos":[89389,89401],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[89775,89916],"content":"Gets or sets a value that determines the order in which elements receive focus when the user navigates through controls by using the TAB key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that determines the order in which elements receive focus when the user navigates through controls by using the TAB key.","pos":[0,141]}]},{"pos":[89929,90251],"content":"A control with a lower tab index receives focus before a control with a higher index.      <a name=\"dependencyPropertyInfo_TabIndex\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Control.TabIndexProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A control with a lower tab index receives focus before a control with a higher index.","pos":[0,85]},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_TabIndex\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Control.TabIndexProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[91,312],"source":"<a name=\"dependencyPropertyInfo_TabIndex\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Control.TabIndexProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[90597,90739],"content":"A value that determines the order of logical navigation for a device. The default value is &lt;xref:System.Int32?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value that determines the order of logical navigation for a device. The default value is &lt;xref:System.Int32?displayProperty=fullName&gt;.","pos":[0,142],"nodes":[{"content":"A value that determines the order of logical navigation for a device.","pos":[0,69]},{"content":"The default value is <ph id=\"ph1\">&amp;lt;</ph>xref:System.Int32?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[70,142],"source":" The default value is &lt;xref:System.Int32?displayProperty=fullName&gt;."}]}]},{"pos":[91204,91288],"content":"Identifies the <xref:System.Windows.Controls.Control.TabIndex*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.Control.TabIndex*&gt; dependency property.","pos":[0,84],"source":"Identifies the <xref:System.Windows.Controls.Control.TabIndex*> dependency property."}]},{"pos":[91464,91476],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[91850,91882],"content":"Gets or sets a control template.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a control template.","pos":[0,32]}]},{"pos":[91895,93173],"content":"The <xref:System.Windows.Controls.ControlTemplate> specifies the appearance of a <xref:System.Windows.Controls.Control>; if a <xref:System.Windows.Controls.Control> does not have a <xref:System.Windows.Controls.ControlTemplate>, the <xref:System.Windows.Controls.Control> will not appear in your application. The control author defines the default control template, and the application author can override the <xref:System.Windows.Controls.ControlTemplate> to redefine the visual tree of the control. See [Control Styles and Templates](~/add/includes/ajax-current-ext-md.md) for information and examples of how to change the visual tree of existing controls.       A <xref:System.Windows.Controls.ControlTemplate> is intended to be a self-contained unit of implementation detail that is invisible to outside users and objects, including <xref:System.Windows.Style> objects. The only way to manipulate the content of the control template is from within the same control template.      <a name=\"dependencyPropertyInfo_Template\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Control.TemplateProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Windows.Controls.ControlTemplate&gt; specifies the appearance of a &lt;xref:System.Windows.Controls.Control&gt;; if a &lt;xref:System.Windows.Controls.Control&gt; does not have a &lt;xref:System.Windows.Controls.ControlTemplate&gt;, the &lt;xref:System.Windows.Controls.Control&gt; will not appear in your application.","pos":[0,308],"source":"The <xref:System.Windows.Controls.ControlTemplate> specifies the appearance of a <xref:System.Windows.Controls.Control>; if a <xref:System.Windows.Controls.Control> does not have a <xref:System.Windows.Controls.ControlTemplate>, the <xref:System.Windows.Controls.Control> will not appear in your application."},{"content":"The control author defines the default control template, and the application author can override the &lt;xref:System.Windows.Controls.ControlTemplate&gt; to redefine the visual tree of the control.","pos":[309,500],"source":" The control author defines the default control template, and the application author can override the <xref:System.Windows.Controls.ControlTemplate> to redefine the visual tree of the control."},{"content":"See <bpt id=\"p1\">[</bpt>Control Styles and Templates<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> for information and examples of how to change the visual tree of existing controls.","pos":[501,658],"source":" See [Control Styles and Templates](~/add/includes/ajax-current-ext-md.md) for information and examples of how to change the visual tree of existing controls."},{"content":"A &lt;xref:System.Windows.Controls.ControlTemplate&gt; is intended to be a self-contained unit of implementation detail that is invisible to outside users and objects, including &lt;xref:System.Windows.Style&gt; objects.","pos":[665,873],"source":"       A <xref:System.Windows.Controls.ControlTemplate> is intended to be a self-contained unit of implementation detail that is invisible to outside users and objects, including <xref:System.Windows.Style> objects."},{"content":"The only way to manipulate the content of the control template is from within the same control template.","pos":[874,978]},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_Template\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Control.TemplateProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|","pos":[984,1266],"source":"<a name=\"dependencyPropertyInfo_Template\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Control.TemplateProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|"}]},{"pos":[93752,93853],"content":"The template that defines the appearance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Control\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The template that defines the appearance of the <xref href=\"System.Windows.Controls.Control\"></xref>."},{"pos":[94318,94402],"content":"Identifies the <xref:System.Windows.Controls.Control.Template*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.Control.Template*&gt; dependency property.","pos":[0,84],"source":"Identifies the <xref:System.Windows.Controls.Control.Template*> dependency property."}]},{"pos":[94578,94590],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[94968,95067],"content":"Returns the string representation of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Control\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Returns the string representation of a <xref href=\"System.Windows.Controls.Control\"></xref> object."},{"pos":[95079,95222],"content":"Control authors should override this method to return a string that contains information that would be of interest to consumers of the control.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Control authors should override this method to return a string that contains information that would be of interest to consumers of the control.","pos":[0,143]}]},{"pos":[95358,95395],"content":"A string that represents the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that represents the control.","pos":[0,37]}]},{"pos":[95903,95964],"content":"Gets or sets the vertical alignment of the control's content.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the vertical alignment of the control's content.","pos":[0,61]}]},{"pos":[95977,96849],"content":"In addition to <xref:System.Windows.VerticalAlignment>, <xref:System.Windows.VerticalAlignment>, and <xref:System.Windows.VerticalAlignment>, you can set the VerticalContentAlignment property to <xref:System.Windows.VerticalAlignment>, which stretches the child element to fill the allocated layout space of the parent element. For more information, see [Alignment, Margins, and Padding Overview](~/add/includes/ajax-current-ext-md.md).       This property only affects a control whose template uses the VerticalContentAlignment property as a parameter. On other controls, this property has no impact.      <a name=\"dependencyPropertyInfo_VerticalContentAlignment\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Control.VerticalContentAlignmentProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"In addition to &lt;xref:System.Windows.VerticalAlignment&gt;, &lt;xref:System.Windows.VerticalAlignment&gt;, and &lt;xref:System.Windows.VerticalAlignment&gt;, you can set the VerticalContentAlignment property to &lt;xref:System.Windows.VerticalAlignment&gt;, which stretches the child element to fill the allocated layout space of the parent element.","pos":[0,327],"source":"In addition to <xref:System.Windows.VerticalAlignment>, <xref:System.Windows.VerticalAlignment>, and <xref:System.Windows.VerticalAlignment>, you can set the VerticalContentAlignment property to <xref:System.Windows.VerticalAlignment>, which stretches the child element to fill the allocated layout space of the parent element."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Alignment, Margins, and Padding Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[328,436],"source":" For more information, see [Alignment, Margins, and Padding Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"This property only affects a control whose template uses the VerticalContentAlignment property as a parameter.","pos":[443,553]},{"content":"On other controls, this property has no impact.","pos":[554,601]},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_VerticalContentAlignment\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Control.VerticalContentAlignmentProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[607,860],"source":"<a name=\"dependencyPropertyInfo_VerticalContentAlignment\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Control.VerticalContentAlignmentProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[97445,97587],"content":"One of the <xref href=\"System.Windows.VerticalAlignment\"></xref> values. The default is <xref href=\"System.Windows.VerticalAlignment\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.VerticalAlignment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,72],"source":"One of the <xref href=\"System.Windows.VerticalAlignment\"></xref> values."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Windows.VerticalAlignment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[73,142],"source":" The default is <xref href=\"System.Windows.VerticalAlignment\"></xref>."}]},{"pos":[98148,98248],"content":"Identifies the <xref:System.Windows.Controls.Control.VerticalContentAlignment*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.Control.VerticalContentAlignment*&gt; dependency property.","pos":[0,100],"source":"Identifies the <xref:System.Windows.Controls.Control.VerticalContentAlignment*> dependency property."}]},{"pos":[98440,98452],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Controls.Control\n  id: Control\n  children:\n  - System.Windows.Controls.Control.#ctor\n  - System.Windows.Controls.Control.ArrangeOverride(System.Windows.Size)\n  - System.Windows.Controls.Control.Background\n  - System.Windows.Controls.Control.BackgroundProperty\n  - System.Windows.Controls.Control.BorderBrush\n  - System.Windows.Controls.Control.BorderBrushProperty\n  - System.Windows.Controls.Control.BorderThickness\n  - System.Windows.Controls.Control.BorderThicknessProperty\n  - System.Windows.Controls.Control.FontFamily\n  - System.Windows.Controls.Control.FontFamilyProperty\n  - System.Windows.Controls.Control.FontSize\n  - System.Windows.Controls.Control.FontSizeProperty\n  - System.Windows.Controls.Control.FontStretch\n  - System.Windows.Controls.Control.FontStretchProperty\n  - System.Windows.Controls.Control.FontStyle\n  - System.Windows.Controls.Control.FontStyleProperty\n  - System.Windows.Controls.Control.FontWeight\n  - System.Windows.Controls.Control.FontWeightProperty\n  - System.Windows.Controls.Control.Foreground\n  - System.Windows.Controls.Control.ForegroundProperty\n  - System.Windows.Controls.Control.HandlesScrolling\n  - System.Windows.Controls.Control.HorizontalContentAlignment\n  - System.Windows.Controls.Control.HorizontalContentAlignmentProperty\n  - System.Windows.Controls.Control.IsTabStop\n  - System.Windows.Controls.Control.IsTabStopProperty\n  - System.Windows.Controls.Control.MeasureOverride(System.Windows.Size)\n  - System.Windows.Controls.Control.MouseDoubleClick\n  - System.Windows.Controls.Control.MouseDoubleClickEvent\n  - System.Windows.Controls.Control.OnMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.Controls.Control.OnPreviewMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.Controls.Control.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)\n  - System.Windows.Controls.Control.Padding\n  - System.Windows.Controls.Control.PaddingProperty\n  - System.Windows.Controls.Control.PreviewMouseDoubleClick\n  - System.Windows.Controls.Control.PreviewMouseDoubleClickEvent\n  - System.Windows.Controls.Control.TabIndex\n  - System.Windows.Controls.Control.TabIndexProperty\n  - System.Windows.Controls.Control.Template\n  - System.Windows.Controls.Control.TemplateProperty\n  - System.Windows.Controls.Control.ToString\n  - System.Windows.Controls.Control.VerticalContentAlignment\n  - System.Windows.Controls.Control.VerticalContentAlignmentProperty\n  langs:\n  - csharp\n  name: Control\n  nameWithType: Control\n  fullName: System.Windows.Controls.Control\n  type: Class\n  summary: Represents the base class for [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] elements that use a <xref href=\"System.Windows.Controls.ControlTemplate\"></xref> to define their appearance.\n  remarks: \"The Control class is the base class for many of the controls you add to an application. The Control class defines very little behavior; while it is possible to add a Control to your application, it is far more common to add a control that inherits from Control, such as a <xref:System.Windows.Controls.Button> or <xref:System.Windows.Controls.ListBox>.  \\n  \\n The <xref:System.Windows.Controls.Control.Template%2A> property, which is a <xref:System.Windows.Controls.ControlTemplate>, specifies the appearance of the Control. If you want to change the appearance of a control but retain its functionality, you should consider creating a new <xref:System.Windows.Controls.ControlTemplate> instead of creating a new class. For more information, see [Styling and Templating](~/add/includes/ajax-current-ext-md.md).  \\n  \\n If you want to create a control with custom behavior as well as allow others to customize its appearance, your control can inherit from the Control class and define a <xref:System.Windows.Controls.ControlTemplate>.  If you want to extend the behavior of an existing control, you can inherit from a class that inherits from Control.  \\n  \\n A Control that does not have a <xref:System.Windows.Controls.ControlTemplate> is not visible in your application, and setting the following properties has no effect unless the <xref:System.Windows.Controls.ControlTemplate> references them explicitly:  \\n  \\n-   <xref:System.Windows.Controls.Control.Background%2A>  \\n  \\n-   <xref:System.Windows.Controls.Control.BorderBrush%2A>  \\n  \\n-   <xref:System.Windows.Controls.Control.BorderThickness%2A>  \\n  \\n-   <xref:System.Windows.Controls.Control.FontFamily%2A>  \\n  \\n-   <xref:System.Windows.Controls.Control.FontSize%2A>  \\n  \\n-   <xref:System.Windows.Controls.Control.FontStretch%2A>  \\n  \\n-   <xref:System.Windows.Controls.Control.FontWeight%2A>  \\n  \\n-   <xref:System.Windows.Controls.Control.Foreground%2A>  \\n  \\n-   <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A>  \\n  \\n-   <xref:System.Windows.Controls.Control.VerticalContentAlignment%2A>  \\n  \\n A common way to use these properties is to bind an element in the <xref:System.Windows.Controls.ControlTemplate> to the property.  For example, if you want your control to change color according to the value of the <xref:System.Windows.Controls.Control.Background%2A> property, you can bind some property of an element in the <xref:System.Windows.Controls.ControlTemplate> to the <xref:System.Windows.Controls.Control.Background%2A>. Use the [TemplateBinding Markup Extension](~/add/includes/ajax-current-ext-md.md) to bind properties on a control to an element in the <xref:System.Windows.Controls.ControlTemplate>.  \\n  \\n Control overrides the metadata of the <xref:System.Windows.UIElement.Focusable%2A> property and sets its default to `true`. For more information, see [Dependency Properties Overview](~/add/includes/ajax-current-ext-md.md)\"\n  syntax:\n    content: 'public class Control : System.Windows.FrameworkElement'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Media.Visual\n  - System.Windows.UIElement\n  - System.Windows.FrameworkElement\n  implements: []\n  inheritedMembers:\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.FrameworkElement.ActualHeight\n  - System.Windows.FrameworkElement.ActualHeightProperty\n  - System.Windows.FrameworkElement.ActualWidth\n  - System.Windows.FrameworkElement.ActualWidthProperty\n  - System.Windows.FrameworkElement.AddLogicalChild(System.Object)\n  - System.Windows.FrameworkElement.ApplyTemplate\n  - System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)\n  - System.Windows.FrameworkElement.BeginInit\n  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)\n  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)\n  - System.Windows.FrameworkElement.BindingGroup\n  - System.Windows.FrameworkElement.BindingGroupProperty\n  - System.Windows.FrameworkElement.BringIntoView\n  - System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)\n  - System.Windows.FrameworkElement.ContextMenu\n  - System.Windows.FrameworkElement.ContextMenuClosing\n  - System.Windows.FrameworkElement.ContextMenuClosingEvent\n  - System.Windows.FrameworkElement.ContextMenuOpening\n  - System.Windows.FrameworkElement.ContextMenuOpeningEvent\n  - System.Windows.FrameworkElement.ContextMenuProperty\n  - System.Windows.FrameworkElement.Cursor\n  - System.Windows.FrameworkElement.CursorProperty\n  - System.Windows.FrameworkElement.DataContext\n  - System.Windows.FrameworkElement.DataContextChanged\n  - System.Windows.FrameworkElement.DataContextProperty\n  - System.Windows.FrameworkElement.DefaultStyleKey\n  - System.Windows.FrameworkElement.DefaultStyleKeyProperty\n  - System.Windows.FrameworkElement.EndInit\n  - System.Windows.FrameworkElement.FindName(System.String)\n  - System.Windows.FrameworkElement.FindResource(System.Object)\n  - System.Windows.FrameworkElement.FlowDirection\n  - System.Windows.FrameworkElement.FlowDirectionProperty\n  - System.Windows.FrameworkElement.FocusVisualStyle\n  - System.Windows.FrameworkElement.FocusVisualStyleProperty\n  - System.Windows.FrameworkElement.ForceCursor\n  - System.Windows.FrameworkElement.ForceCursorProperty\n  - System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)\n  - System.Windows.FrameworkElement.GetFlowDirection(System.Windows.DependencyObject)\n  - System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)\n  - System.Windows.FrameworkElement.GetTemplateChild(System.String)\n  - System.Windows.FrameworkElement.GetUIParentCore\n  - System.Windows.FrameworkElement.GetVisualChild(System.Int32)\n  - System.Windows.FrameworkElement.Height\n  - System.Windows.FrameworkElement.HeightProperty\n  - System.Windows.FrameworkElement.HorizontalAlignment\n  - System.Windows.FrameworkElement.HorizontalAlignmentProperty\n  - System.Windows.FrameworkElement.InheritanceBehavior\n  - System.Windows.FrameworkElement.Initialized\n  - System.Windows.FrameworkElement.InputScope\n  - System.Windows.FrameworkElement.InputScopeProperty\n  - System.Windows.FrameworkElement.IsInitialized\n  - System.Windows.FrameworkElement.IsLoaded\n  - System.Windows.FrameworkElement.Language\n  - System.Windows.FrameworkElement.LanguageProperty\n  - System.Windows.FrameworkElement.LayoutTransform\n  - System.Windows.FrameworkElement.LayoutTransformProperty\n  - System.Windows.FrameworkElement.Loaded\n  - System.Windows.FrameworkElement.LoadedEvent\n  - System.Windows.FrameworkElement.LogicalChildren\n  - System.Windows.FrameworkElement.Margin\n  - System.Windows.FrameworkElement.MarginProperty\n  - System.Windows.FrameworkElement.MaxHeight\n  - System.Windows.FrameworkElement.MaxHeightProperty\n  - System.Windows.FrameworkElement.MaxWidth\n  - System.Windows.FrameworkElement.MaxWidthProperty\n  - System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)\n  - System.Windows.FrameworkElement.MinHeight\n  - System.Windows.FrameworkElement.MinHeightProperty\n  - System.Windows.FrameworkElement.MinWidth\n  - System.Windows.FrameworkElement.MinWidthProperty\n  - System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)\n  - System.Windows.FrameworkElement.Name\n  - System.Windows.FrameworkElement.NameProperty\n  - System.Windows.FrameworkElement.OnApplyTemplate\n  - System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)\n  - System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)\n  - System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)\n  - System.Windows.FrameworkElement.OnInitialized(System.EventArgs)\n  - System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)\n  - System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)\n  - System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)\n  - System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)\n  - System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)\n  - System.Windows.FrameworkElement.OverridesDefaultStyle\n  - System.Windows.FrameworkElement.OverridesDefaultStyleProperty\n  - System.Windows.FrameworkElement.Parent\n  - System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)\n  - System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)\n  - System.Windows.FrameworkElement.RegisterName(System.String,System.Object)\n  - System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)\n  - System.Windows.FrameworkElement.RequestBringIntoView\n  - System.Windows.FrameworkElement.RequestBringIntoViewEvent\n  - System.Windows.FrameworkElement.Resources\n  - System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)\n  - System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)\n  - System.Windows.FrameworkElement.SetFlowDirection(System.Windows.DependencyObject,System.Windows.FlowDirection)\n  - System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.FrameworkElement.ShouldSerializeResources\n  - System.Windows.FrameworkElement.ShouldSerializeStyle\n  - System.Windows.FrameworkElement.ShouldSerializeTriggers\n  - System.Windows.FrameworkElement.SizeChanged\n  - System.Windows.FrameworkElement.SizeChangedEvent\n  - System.Windows.FrameworkElement.SourceUpdated\n  - System.Windows.FrameworkElement.Style\n  - System.Windows.FrameworkElement.StyleProperty\n  - System.Windows.FrameworkElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)\n  - System.Windows.FrameworkElement.Tag\n  - System.Windows.FrameworkElement.TagProperty\n  - System.Windows.FrameworkElement.TargetUpdated\n  - System.Windows.FrameworkElement.TemplatedParent\n  - System.Windows.FrameworkElement.ToolTip\n  - System.Windows.FrameworkElement.ToolTipClosing\n  - System.Windows.FrameworkElement.ToolTipClosingEvent\n  - System.Windows.FrameworkElement.ToolTipOpening\n  - System.Windows.FrameworkElement.ToolTipOpeningEvent\n  - System.Windows.FrameworkElement.ToolTipProperty\n  - System.Windows.FrameworkElement.Triggers\n  - System.Windows.FrameworkElement.TryFindResource(System.Object)\n  - System.Windows.FrameworkElement.Unloaded\n  - System.Windows.FrameworkElement.UnloadedEvent\n  - System.Windows.FrameworkElement.UnregisterName(System.String)\n  - System.Windows.FrameworkElement.UpdateDefaultStyle\n  - System.Windows.FrameworkElement.UseLayoutRounding\n  - System.Windows.FrameworkElement.UseLayoutRoundingProperty\n  - System.Windows.FrameworkElement.VerticalAlignment\n  - System.Windows.FrameworkElement.VerticalAlignmentProperty\n  - System.Windows.FrameworkElement.VisualChildrenCount\n  - System.Windows.FrameworkElement.Width\n  - System.Windows.FrameworkElement.WidthProperty\n  - System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)\n  - System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)\n  - System.Windows.Media.Visual.PointToScreen(System.Windows.Point)\n  - System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)\n  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.VisualBitmapEffect\n  - System.Windows.Media.Visual.VisualBitmapEffectInput\n  - System.Windows.Media.Visual.VisualBitmapScalingMode\n  - System.Windows.Media.Visual.VisualCacheMode\n  - System.Windows.Media.Visual.VisualClearTypeHint\n  - System.Windows.Media.Visual.VisualClip\n  - System.Windows.Media.Visual.VisualEdgeMode\n  - System.Windows.Media.Visual.VisualEffect\n  - System.Windows.Media.Visual.VisualOffset\n  - System.Windows.Media.Visual.VisualOpacity\n  - System.Windows.Media.Visual.VisualOpacityMask\n  - System.Windows.Media.Visual.VisualParent\n  - System.Windows.Media.Visual.VisualScrollableAreaClip\n  - System.Windows.Media.Visual.VisualTextHintingMode\n  - System.Windows.Media.Visual.VisualTextRenderingMode\n  - System.Windows.Media.Visual.VisualTransform\n  - System.Windows.Media.Visual.VisualXSnappingGuidelines\n  - System.Windows.Media.Visual.VisualYSnappingGuidelines\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)\n  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)\n  - System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)\n  - System.Windows.UIElement.AllowDrop\n  - System.Windows.UIElement.AllowDropProperty\n  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.UIElement.AreAnyTouchesCaptured\n  - System.Windows.UIElement.AreAnyTouchesCapturedProperty\n  - System.Windows.UIElement.AreAnyTouchesCapturedWithin\n  - System.Windows.UIElement.AreAnyTouchesCapturedWithinProperty\n  - System.Windows.UIElement.AreAnyTouchesDirectlyOver\n  - System.Windows.UIElement.AreAnyTouchesDirectlyOverProperty\n  - System.Windows.UIElement.AreAnyTouchesOver\n  - System.Windows.UIElement.AreAnyTouchesOverProperty\n  - System.Windows.UIElement.Arrange(System.Windows.Rect)\n  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.UIElement.BitmapEffect\n  - System.Windows.UIElement.BitmapEffectInput\n  - System.Windows.UIElement.BitmapEffectInputProperty\n  - System.Windows.UIElement.BitmapEffectProperty\n  - System.Windows.UIElement.CacheMode\n  - System.Windows.UIElement.CacheModeProperty\n  - System.Windows.UIElement.CaptureMouse\n  - System.Windows.UIElement.CaptureStylus\n  - System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)\n  - System.Windows.UIElement.Clip\n  - System.Windows.UIElement.ClipProperty\n  - System.Windows.UIElement.ClipToBounds\n  - System.Windows.UIElement.ClipToBoundsProperty\n  - System.Windows.UIElement.CommandBindings\n  - System.Windows.UIElement.DesiredSize\n  - System.Windows.UIElement.DragEnter\n  - System.Windows.UIElement.DragEnterEvent\n  - System.Windows.UIElement.DragLeave\n  - System.Windows.UIElement.DragLeaveEvent\n  - System.Windows.UIElement.DragOver\n  - System.Windows.UIElement.DragOverEvent\n  - System.Windows.UIElement.Drop\n  - System.Windows.UIElement.DropEvent\n  - System.Windows.UIElement.Effect\n  - System.Windows.UIElement.EffectProperty\n  - System.Windows.UIElement.Focus\n  - System.Windows.UIElement.Focusable\n  - System.Windows.UIElement.FocusableChanged\n  - System.Windows.UIElement.FocusableProperty\n  - System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.UIElement.GiveFeedback\n  - System.Windows.UIElement.GiveFeedbackEvent\n  - System.Windows.UIElement.GotFocus\n  - System.Windows.UIElement.GotFocusEvent\n  - System.Windows.UIElement.GotKeyboardFocus\n  - System.Windows.UIElement.GotKeyboardFocusEvent\n  - System.Windows.UIElement.GotMouseCapture\n  - System.Windows.UIElement.GotMouseCaptureEvent\n  - System.Windows.UIElement.GotStylusCapture\n  - System.Windows.UIElement.GotStylusCaptureEvent\n  - System.Windows.UIElement.GotTouchCapture\n  - System.Windows.UIElement.GotTouchCaptureEvent\n  - System.Windows.UIElement.HasAnimatedProperties\n  - System.Windows.UIElement.HasEffectiveKeyboardFocus\n  - System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)\n  - System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters)\n  - System.Windows.UIElement.InputBindings\n  - System.Windows.UIElement.InputHitTest(System.Windows.Point)\n  - System.Windows.UIElement.InvalidateArrange\n  - System.Windows.UIElement.InvalidateMeasure\n  - System.Windows.UIElement.InvalidateVisual\n  - System.Windows.UIElement.IsArrangeValid\n  - System.Windows.UIElement.IsEnabled\n  - System.Windows.UIElement.IsEnabledChanged\n  - System.Windows.UIElement.IsEnabledCore\n  - System.Windows.UIElement.IsEnabledProperty\n  - System.Windows.UIElement.IsFocused\n  - System.Windows.UIElement.IsFocusedProperty\n  - System.Windows.UIElement.IsHitTestVisible\n  - System.Windows.UIElement.IsHitTestVisibleChanged\n  - System.Windows.UIElement.IsHitTestVisibleProperty\n  - System.Windows.UIElement.IsInputMethodEnabled\n  - System.Windows.UIElement.IsKeyboardFocused\n  - System.Windows.UIElement.IsKeyboardFocusedChanged\n  - System.Windows.UIElement.IsKeyboardFocusedProperty\n  - System.Windows.UIElement.IsKeyboardFocusWithin\n  - System.Windows.UIElement.IsKeyboardFocusWithinChanged\n  - System.Windows.UIElement.IsKeyboardFocusWithinProperty\n  - System.Windows.UIElement.IsManipulationEnabled\n  - System.Windows.UIElement.IsManipulationEnabledProperty\n  - System.Windows.UIElement.IsMeasureValid\n  - System.Windows.UIElement.IsMouseCaptured\n  - System.Windows.UIElement.IsMouseCapturedChanged\n  - System.Windows.UIElement.IsMouseCapturedProperty\n  - System.Windows.UIElement.IsMouseCaptureWithin\n  - System.Windows.UIElement.IsMouseCaptureWithinChanged\n  - System.Windows.UIElement.IsMouseCaptureWithinProperty\n  - System.Windows.UIElement.IsMouseDirectlyOver\n  - System.Windows.UIElement.IsMouseDirectlyOverChanged\n  - System.Windows.UIElement.IsMouseDirectlyOverProperty\n  - System.Windows.UIElement.IsMouseOver\n  - System.Windows.UIElement.IsMouseOverProperty\n  - System.Windows.UIElement.IsStylusCaptured\n  - System.Windows.UIElement.IsStylusCapturedChanged\n  - System.Windows.UIElement.IsStylusCapturedProperty\n  - System.Windows.UIElement.IsStylusCaptureWithin\n  - System.Windows.UIElement.IsStylusCaptureWithinChanged\n  - System.Windows.UIElement.IsStylusCaptureWithinProperty\n  - System.Windows.UIElement.IsStylusDirectlyOver\n  - System.Windows.UIElement.IsStylusDirectlyOverChanged\n  - System.Windows.UIElement.IsStylusDirectlyOverProperty\n  - System.Windows.UIElement.IsStylusOver\n  - System.Windows.UIElement.IsStylusOverProperty\n  - System.Windows.UIElement.IsVisible\n  - System.Windows.UIElement.IsVisibleChanged\n  - System.Windows.UIElement.IsVisibleProperty\n  - System.Windows.UIElement.KeyDown\n  - System.Windows.UIElement.KeyDownEvent\n  - System.Windows.UIElement.KeyUp\n  - System.Windows.UIElement.KeyUpEvent\n  - System.Windows.UIElement.LayoutUpdated\n  - System.Windows.UIElement.LostFocus\n  - System.Windows.UIElement.LostFocusEvent\n  - System.Windows.UIElement.LostKeyboardFocus\n  - System.Windows.UIElement.LostKeyboardFocusEvent\n  - System.Windows.UIElement.LostMouseCapture\n  - System.Windows.UIElement.LostMouseCaptureEvent\n  - System.Windows.UIElement.LostStylusCapture\n  - System.Windows.UIElement.LostStylusCaptureEvent\n  - System.Windows.UIElement.LostTouchCapture\n  - System.Windows.UIElement.LostTouchCaptureEvent\n  - System.Windows.UIElement.ManipulationBoundaryFeedback\n  - System.Windows.UIElement.ManipulationBoundaryFeedbackEvent\n  - System.Windows.UIElement.ManipulationCompleted\n  - System.Windows.UIElement.ManipulationCompletedEvent\n  - System.Windows.UIElement.ManipulationDelta\n  - System.Windows.UIElement.ManipulationDeltaEvent\n  - System.Windows.UIElement.ManipulationInertiaStarting\n  - System.Windows.UIElement.ManipulationInertiaStartingEvent\n  - System.Windows.UIElement.ManipulationStarted\n  - System.Windows.UIElement.ManipulationStartedEvent\n  - System.Windows.UIElement.ManipulationStarting\n  - System.Windows.UIElement.ManipulationStartingEvent\n  - System.Windows.UIElement.Measure(System.Windows.Size)\n  - System.Windows.UIElement.MouseDown\n  - System.Windows.UIElement.MouseDownEvent\n  - System.Windows.UIElement.MouseEnter\n  - System.Windows.UIElement.MouseEnterEvent\n  - System.Windows.UIElement.MouseLeave\n  - System.Windows.UIElement.MouseLeaveEvent\n  - System.Windows.UIElement.MouseLeftButtonDown\n  - System.Windows.UIElement.MouseLeftButtonDownEvent\n  - System.Windows.UIElement.MouseLeftButtonUp\n  - System.Windows.UIElement.MouseLeftButtonUpEvent\n  - System.Windows.UIElement.MouseMove\n  - System.Windows.UIElement.MouseMoveEvent\n  - System.Windows.UIElement.MouseRightButtonDown\n  - System.Windows.UIElement.MouseRightButtonDownEvent\n  - System.Windows.UIElement.MouseRightButtonUp\n  - System.Windows.UIElement.MouseRightButtonUpEvent\n  - System.Windows.UIElement.MouseUp\n  - System.Windows.UIElement.MouseUpEvent\n  - System.Windows.UIElement.MouseWheel\n  - System.Windows.UIElement.MouseWheelEvent\n  - System.Windows.UIElement.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)\n  - System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)\n  - System.Windows.UIElement.OnCreateAutomationPeer\n  - System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)\n  - System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)\n  - System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)\n  - System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)\n  - System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)\n  - System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)\n  - System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)\n  - System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)\n  - System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)\n  - System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)\n  - System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)\n  - System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)\n  - System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)\n  - System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)\n  - System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)\n  - System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)\n  - System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)\n  - System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)\n  - System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.Opacity\n  - System.Windows.UIElement.OpacityMask\n  - System.Windows.UIElement.OpacityMaskProperty\n  - System.Windows.UIElement.OpacityProperty\n  - System.Windows.UIElement.PersistId\n  - System.Windows.UIElement.PreviewDragEnter\n  - System.Windows.UIElement.PreviewDragEnterEvent\n  - System.Windows.UIElement.PreviewDragLeave\n  - System.Windows.UIElement.PreviewDragLeaveEvent\n  - System.Windows.UIElement.PreviewDragOver\n  - System.Windows.UIElement.PreviewDragOverEvent\n  - System.Windows.UIElement.PreviewDrop\n  - System.Windows.UIElement.PreviewDropEvent\n  - System.Windows.UIElement.PreviewGiveFeedback\n  - System.Windows.UIElement.PreviewGiveFeedbackEvent\n  - System.Windows.UIElement.PreviewGotKeyboardFocus\n  - System.Windows.UIElement.PreviewGotKeyboardFocusEvent\n  - System.Windows.UIElement.PreviewKeyDown\n  - System.Windows.UIElement.PreviewKeyDownEvent\n  - System.Windows.UIElement.PreviewKeyUp\n  - System.Windows.UIElement.PreviewKeyUpEvent\n  - System.Windows.UIElement.PreviewLostKeyboardFocus\n  - System.Windows.UIElement.PreviewLostKeyboardFocusEvent\n  - System.Windows.UIElement.PreviewMouseDown\n  - System.Windows.UIElement.PreviewMouseDownEvent\n  - System.Windows.UIElement.PreviewMouseLeftButtonDown\n  - System.Windows.UIElement.PreviewMouseLeftButtonDownEvent\n  - System.Windows.UIElement.PreviewMouseLeftButtonUp\n  - System.Windows.UIElement.PreviewMouseLeftButtonUpEvent\n  - System.Windows.UIElement.PreviewMouseMove\n  - System.Windows.UIElement.PreviewMouseMoveEvent\n  - System.Windows.UIElement.PreviewMouseRightButtonDown\n  - System.Windows.UIElement.PreviewMouseRightButtonDownEvent\n  - System.Windows.UIElement.PreviewMouseRightButtonUp\n  - System.Windows.UIElement.PreviewMouseRightButtonUpEvent\n  - System.Windows.UIElement.PreviewMouseUp\n  - System.Windows.UIElement.PreviewMouseUpEvent\n  - System.Windows.UIElement.PreviewMouseWheel\n  - System.Windows.UIElement.PreviewMouseWheelEvent\n  - System.Windows.UIElement.PreviewQueryContinueDrag\n  - System.Windows.UIElement.PreviewQueryContinueDragEvent\n  - System.Windows.UIElement.PreviewStylusButtonDown\n  - System.Windows.UIElement.PreviewStylusButtonDownEvent\n  - System.Windows.UIElement.PreviewStylusButtonUp\n  - System.Windows.UIElement.PreviewStylusButtonUpEvent\n  - System.Windows.UIElement.PreviewStylusDown\n  - System.Windows.UIElement.PreviewStylusDownEvent\n  - System.Windows.UIElement.PreviewStylusInAirMove\n  - System.Windows.UIElement.PreviewStylusInAirMoveEvent\n  - System.Windows.UIElement.PreviewStylusInRange\n  - System.Windows.UIElement.PreviewStylusInRangeEvent\n  - System.Windows.UIElement.PreviewStylusMove\n  - System.Windows.UIElement.PreviewStylusMoveEvent\n  - System.Windows.UIElement.PreviewStylusOutOfRange\n  - System.Windows.UIElement.PreviewStylusOutOfRangeEvent\n  - System.Windows.UIElement.PreviewStylusSystemGesture\n  - System.Windows.UIElement.PreviewStylusSystemGestureEvent\n  - System.Windows.UIElement.PreviewStylusUp\n  - System.Windows.UIElement.PreviewStylusUpEvent\n  - System.Windows.UIElement.PreviewTextInput\n  - System.Windows.UIElement.PreviewTextInputEvent\n  - System.Windows.UIElement.PreviewTouchDown\n  - System.Windows.UIElement.PreviewTouchDownEvent\n  - System.Windows.UIElement.PreviewTouchMove\n  - System.Windows.UIElement.PreviewTouchMoveEvent\n  - System.Windows.UIElement.PreviewTouchUp\n  - System.Windows.UIElement.PreviewTouchUpEvent\n  - System.Windows.UIElement.QueryContinueDrag\n  - System.Windows.UIElement.QueryContinueDragEvent\n  - System.Windows.UIElement.QueryCursor\n  - System.Windows.UIElement.QueryCursorEvent\n  - System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)\n  - System.Windows.UIElement.ReleaseAllTouchCaptures\n  - System.Windows.UIElement.ReleaseMouseCapture\n  - System.Windows.UIElement.ReleaseStylusCapture\n  - System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)\n  - System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)\n  - System.Windows.UIElement.RenderSize\n  - System.Windows.UIElement.RenderTransform\n  - System.Windows.UIElement.RenderTransformOrigin\n  - System.Windows.UIElement.RenderTransformOriginProperty\n  - System.Windows.UIElement.RenderTransformProperty\n  - System.Windows.UIElement.ShouldSerializeCommandBindings\n  - System.Windows.UIElement.ShouldSerializeInputBindings\n  - System.Windows.UIElement.SnapsToDevicePixels\n  - System.Windows.UIElement.SnapsToDevicePixelsProperty\n  - System.Windows.UIElement.StylusButtonDown\n  - System.Windows.UIElement.StylusButtonDownEvent\n  - System.Windows.UIElement.StylusButtonUp\n  - System.Windows.UIElement.StylusButtonUpEvent\n  - System.Windows.UIElement.StylusDown\n  - System.Windows.UIElement.StylusDownEvent\n  - System.Windows.UIElement.StylusEnter\n  - System.Windows.UIElement.StylusEnterEvent\n  - System.Windows.UIElement.StylusInAirMove\n  - System.Windows.UIElement.StylusInAirMoveEvent\n  - System.Windows.UIElement.StylusInRange\n  - System.Windows.UIElement.StylusInRangeEvent\n  - System.Windows.UIElement.StylusLeave\n  - System.Windows.UIElement.StylusLeaveEvent\n  - System.Windows.UIElement.StylusMove\n  - System.Windows.UIElement.StylusMoveEvent\n  - System.Windows.UIElement.StylusOutOfRange\n  - System.Windows.UIElement.StylusOutOfRangeEvent\n  - System.Windows.UIElement.StylusPlugIns\n  - System.Windows.UIElement.StylusSystemGesture\n  - System.Windows.UIElement.StylusSystemGestureEvent\n  - System.Windows.UIElement.StylusUp\n  - System.Windows.UIElement.StylusUpEvent\n  - System.Windows.UIElement.TextInput\n  - System.Windows.UIElement.TextInputEvent\n  - System.Windows.UIElement.TouchDown\n  - System.Windows.UIElement.TouchDownEvent\n  - System.Windows.UIElement.TouchEnter\n  - System.Windows.UIElement.TouchEnterEvent\n  - System.Windows.UIElement.TouchesCaptured\n  - System.Windows.UIElement.TouchesCapturedWithin\n  - System.Windows.UIElement.TouchesDirectlyOver\n  - System.Windows.UIElement.TouchesOver\n  - System.Windows.UIElement.TouchLeave\n  - System.Windows.UIElement.TouchLeaveEvent\n  - System.Windows.UIElement.TouchMove\n  - System.Windows.UIElement.TouchMoveEvent\n  - System.Windows.UIElement.TouchUp\n  - System.Windows.UIElement.TouchUpEvent\n  - System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)\n  - System.Windows.UIElement.Uid\n  - System.Windows.UIElement.UidProperty\n  - System.Windows.UIElement.UpdateLayout\n  - System.Windows.UIElement.Visibility\n  - System.Windows.UIElement.VisibilityProperty\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.#ctor\n  id: '#ctor'\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: Control()\n  nameWithType: Control.Control()\n  fullName: System.Windows.Controls.Control.Control()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Controls.Control\"></xref> class.\n  syntax:\n    content: public Control ();\n    parameters: []\n  overload: System.Windows.Controls.Control.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.ArrangeOverride(System.Windows.Size)\n  id: ArrangeOverride(System.Windows.Size)\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: ArrangeOverride(Size)\n  nameWithType: Control.ArrangeOverride(Size)\n  fullName: System.Windows.Controls.Control.ArrangeOverride(Size)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Called to arrange and size the content of a <xref href=\"System.Windows.Controls.Control\"></xref> object.\n  remarks: The default control arrangement arranges only the first visual child. No transforms are applied.\n  syntax:\n    content: protected override System.Windows.Size ArrangeOverride (System.Windows.Size arrangeBounds);\n    parameters:\n    - id: arrangeBounds\n      type: System.Windows.Size\n      description: The computed size that is used to arrange the content.\n    return:\n      type: System.Windows.Size\n      description: The size of the control.\n  overload: System.Windows.Controls.Control.ArrangeOverride*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.Background\n  id: Background\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: Background\n  nameWithType: Control.Background\n  fullName: System.Windows.Controls.Control.Background\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets a brush that describes the background of a control.\n  remarks: \"The Background property applies only to the resting state of a control.  The default style of the control specifies its appearance when the state of the control changes. For example, if you set the Background property on a <xref:System.Windows.Controls.Button>, the button has that value only when it is not pressed or disabled. If you want to create a control that has a more advanced customization of the background, you must define the control's style.  \\n  \\n This property only affects a control whose template uses the Background property as a parameter. On other controls, this property has no impact.  \\n  \\n<a name=\\\"dependencyPropertyInfo_Background\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.Control.BackgroundProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A>|\"\n  example:\n  - \"The following example shows how to set the background property of a control.  \\n  \\n [!code-xml[ControlProps#11](~/add/codesnippet/xaml/ControlProps.ControlProps/Pane1.xaml#11)]  \\n  \\n [!code-cs[ControlProps#1](~/add/codesnippet/csharp/ControlProps.ControlProps/Pane1.xaml.cs#1)]\\n [!code-vb[ControlProps#1](~/add/codesnippet/visualbasic/ControlProps.ControlProps/Pane1.xaml.vb#1)]  \\n  \\n The following example shows a template that enables a trigger to change the background of a button when it is pressed.  \\n  \\n [!code-xml[BackgroundProp_snip#ButtonTemplate](~/add/codesnippet/xaml/backgroundprop/page1.xaml#buttontemplate)]\"\n  syntax:\n    content: public System.Windows.Media.Brush Background { get; set; }\n    return:\n      type: System.Windows.Media.Brush\n      description: The brush that is used to fill the background of the control. The default is &lt;xref:System.Windows.Media.Brushes.Transparent%2A?displayProperty=fullName&gt;.\n  overload: System.Windows.Controls.Control.Background*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.BackgroundProperty\n  id: BackgroundProperty\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: BackgroundProperty\n  nameWithType: Control.BackgroundProperty\n  fullName: System.Windows.Controls.Control.BackgroundProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.Control.Background*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty BackgroundProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.BorderBrush\n  id: BorderBrush\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: BorderBrush\n  nameWithType: Control.BorderBrush\n  fullName: System.Windows.Controls.Control.BorderBrush\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets a brush that describes the border background of a control.\n  remarks: \"This property only affects a control whose template uses the BorderBrush property as a parameter. On other controls, this property has no impact.  \\n  \\n<a name=\\\"dependencyPropertyInfo_BorderBrush\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.Control.BorderBrushProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A>|\"\n  example:\n  - \"The following example shows how to set the border brush property of a control.  \\n  \\n [!code-xml[ControlProps#17](~/add/codesnippet/xaml/ControlProps.ControlProps/Pane1.xaml#17)]  \\n  \\n [!code-cs[ControlProps#7](~/add/codesnippet/csharp/ControlProps.ControlProps/Pane1.xaml.cs#7)]\\n [!code-vb[ControlProps#7](~/add/codesnippet/visualbasic/ControlProps.ControlProps/Pane1.xaml.vb#7)]\"\n  syntax:\n    content: public System.Windows.Media.Brush BorderBrush { get; set; }\n    return:\n      type: System.Windows.Media.Brush\n      description: The brush that is used to fill the control's border; the default is &lt;xref:System.Windows.Media.Brushes.Transparent%2A?displayProperty=fullName&gt;.\n  overload: System.Windows.Controls.Control.BorderBrush*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.BorderBrushProperty\n  id: BorderBrushProperty\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: BorderBrushProperty\n  nameWithType: Control.BorderBrushProperty\n  fullName: System.Windows.Controls.Control.BorderBrushProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.Control.BorderBrush*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty BorderBrushProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.BorderThickness\n  id: BorderThickness\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: BorderThickness\n  nameWithType: Control.BorderThickness\n  fullName: System.Windows.Controls.Control.BorderThickness\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the border thickness of a control.\n  remarks: \"This property only affects a control whose template uses the BorderThickness property as a parameter. On other controls, this property has no impact.  \\n  \\n<a name=\\\"dependencyPropertyInfo_BorderThickness\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.Control.BorderThicknessProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|\"\n  example:\n  - \"The following example shows how to set the border thickness property of a control.  \\n  \\n [!code-xml[ControlProps_snip#AdditionalControlProps11](~/add/codesnippet/xaml/ControlProps_snip.ControlProps/Pane1.xaml#additionalcontrolprops11)]  \\n  \\n [!code-cs[ControlProps_snip#AdditionalControlProps1](~/add/codesnippet/csharp/ControlProps_snip.ControlProps/Pane1.xaml.cs#additionalcontrolprops1)]\\n [!code-vb[ControlProps_snip#AdditionalControlProps1](~/add/codesnippet/visualbasic/ControlProps_snip.ControlProps/Window1.xaml.vb#additionalcontrolprops1)]\"\n  syntax:\n    content: public System.Windows.Thickness BorderThickness { get; set; }\n    return:\n      type: System.Windows.Thickness\n      description: A thickness value; the default is a thickness of 0 on all four sides.\n  overload: System.Windows.Controls.Control.BorderThickness*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.BorderThicknessProperty\n  id: BorderThicknessProperty\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: BorderThicknessProperty\n  nameWithType: Control.BorderThicknessProperty\n  fullName: System.Windows.Controls.Control.BorderThicknessProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.Control.BorderThickness*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty BorderThicknessProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.FontFamily\n  id: FontFamily\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: FontFamily\n  nameWithType: Control.FontFamily\n  fullName: System.Windows.Controls.Control.FontFamily\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the font family of the control.\n  remarks: \"This property only affects a control whose template uses the FontFamily property as a parameter. On other controls, this property has no impact.  \\n  \\n<a name=\\\"dependencyPropertyInfo_FontFamily\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.Control.FontFamilyProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|\"\n  example:\n  - \"The following example shows how to set the font family property of a control.  \\n  \\n [!code-xml[ControlProps#13](~/add/codesnippet/xaml/ControlProps.ControlProps/Pane1.xaml#13)]  \\n  \\n [!code-cs[ControlProps#3](~/add/codesnippet/csharp/ControlProps.ControlProps/Pane1.xaml.cs#3)]\\n [!code-vb[ControlProps#3](~/add/codesnippet/visualbasic/ControlProps.ControlProps/Pane1.xaml.vb#3)]\"\n  syntax:\n    content: public System.Windows.Media.FontFamily FontFamily { get; set; }\n    return:\n      type: System.Windows.Media.FontFamily\n      description: A font family. The default is the system dialog font.\n  overload: System.Windows.Controls.Control.FontFamily*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.FontFamilyProperty\n  id: FontFamilyProperty\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: FontFamilyProperty\n  nameWithType: Control.FontFamilyProperty\n  fullName: System.Windows.Controls.Control.FontFamilyProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.Control.FontFamily*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty FontFamilyProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.FontSize\n  id: FontSize\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: FontSize\n  nameWithType: Control.FontSize\n  fullName: System.Windows.Controls.Control.FontSize\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the font size.\n  remarks: \"This property only affects a control whose template uses the FontSize property as a parameter. On other controls, this property has no impact.  \\n  \\n<a name=\\\"dependencyPropertyInfo_FontSize\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.Control.FontSizeProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  \\n  \\n<a name=\\\"xamlAttributeUsage_FontSize\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object FontSize=\\\"double\\\"/>  \\n- or –  \\n<object FontSize =\\\"qualifiedDouble\\\"/>  \\n```  \\n  \\n<a name=\\\"xamlValues_FontSize\\\"></a>   \\n## XAML Values  \\n *double*  \\n <xref:System.Double>  \\n  \\n A string representation of a <xref:System.Double> value. This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)] measurement. Strings need not explicitly include decimal points. For example, a value of `1` is acceptable.  \\n  \\n The same <xref:System.Double> range restrictions that are mentioned in the Property Value section apply here.  \\n  \\n *qualifiedDouble*  \\n A *double* value as previously described that is followed by one of these unit declaration strings: `px`, `in`, `cm`, `pt`.  \\n  \\n `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n `in` is inches; 1in==96px  \\n  \\n `cm` is centimeters; 1cm==(96/2.54) px  \\n  \\n `pt` is points; 1pt==(96/72) px  \\n  \\n **Note** In many cases a double may be set to \\\"Auto,\\\" but a FontSize does not render if set to \\\"Auto\\\".\"\n  example:\n  - \"The following example shows how to set the font size property of a control.  \\n  \\n [!code-xml[ControlProps#14](~/add/codesnippet/xaml/ControlProps.ControlProps/Pane1.xaml#14)]  \\n  \\n [!code-cs[ControlProps#4](~/add/codesnippet/csharp/ControlProps.ControlProps/Pane1.xaml.cs#4)]\\n [!code-vb[ControlProps#4](~/add/codesnippet/visualbasic/ControlProps.ControlProps/Pane1.xaml.vb#4)]\"\n  syntax:\n    content: public double FontSize { get; set; }\n    return:\n      type: System.Double\n      description: The size of the text in the <xref href=\"System.Windows.Controls.Control\"></xref>. The default is &lt;xref:System.Windows.SystemFonts.MessageFontSize%2A?displayProperty=fullName&gt;. The font size must be a positive number.\n  overload: System.Windows.Controls.Control.FontSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.FontSizeProperty\n  id: FontSizeProperty\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: FontSizeProperty\n  nameWithType: Control.FontSizeProperty\n  fullName: System.Windows.Controls.Control.FontSizeProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.Control.FontSize*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty FontSizeProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.FontStretch\n  id: FontStretch\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: FontStretch\n  nameWithType: Control.FontStretch\n  fullName: System.Windows.Controls.Control.FontStretch\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the degree to which a font is condensed or expanded on the screen.\n  remarks: \"This property only affects a control whose template uses the FontStretch property as a parameter. On other controls, this property has no impact.  \\n  \\n<a name=\\\"dependencyPropertyInfo_FontStretch\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.Control.FontStretchProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|\"\n  example:\n  - \"The following example shows how to set the font stretch property of a control. For possible stretch values, see <xref:System.Windows.FontStretches>.  \\n  \\n [!code-xml[ControlProps_snip#AdditionalControlProps12](~/add/codesnippet/xaml/ControlProps_snip.ControlProps/Pane1.xaml#additionalcontrolprops12)]  \\n  \\n [!code-cs[ControlProps_snip#AdditionalControlProps2](~/add/codesnippet/csharp/ControlProps_snip.ControlProps/Pane1.xaml.cs#additionalcontrolprops2)]\\n [!code-vb[ControlProps_snip#AdditionalControlProps2](~/add/codesnippet/visualbasic/ControlProps_snip.ControlProps/Window1.xaml.vb#additionalcontrolprops2)]\"\n  syntax:\n    content: public System.Windows.FontStretch FontStretch { get; set; }\n    return:\n      type: System.Windows.FontStretch\n      description: A <xref href=\"System.Windows.FontStretch\"></xref> value. The default is &lt;xref:System.Windows.FontStretches.Normal%2A?displayProperty=fullName&gt;.\n  overload: System.Windows.Controls.Control.FontStretch*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.FontStretchProperty\n  id: FontStretchProperty\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: FontStretchProperty\n  nameWithType: Control.FontStretchProperty\n  fullName: System.Windows.Controls.Control.FontStretchProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.Control.FontStretch*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty FontStretchProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.FontStyle\n  id: FontStyle\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: FontStyle\n  nameWithType: Control.FontStyle\n  fullName: System.Windows.Controls.Control.FontStyle\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the font style.\n  remarks: \"This property only affects a control whose template uses the FontStyle property as a parameter. On other controls, this property has no impact.  \\n  \\n<a name=\\\"dependencyPropertyInfo_FontStyle\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.Control.FontStyleProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|\"\n  example:\n  - \"The following example shows how to set the font style property of a control.  \\n  \\n [!code-xml[ControlProps#15](~/add/codesnippet/xaml/ControlProps.ControlProps/Pane1.xaml#15)]  \\n  \\n [!code-cs[ControlProps#5](~/add/codesnippet/csharp/ControlProps.ControlProps/Pane1.xaml.cs#5)]\\n [!code-vb[ControlProps#5](~/add/codesnippet/visualbasic/ControlProps.ControlProps/Pane1.xaml.vb#5)]\"\n  syntax:\n    content: public System.Windows.FontStyle FontStyle { get; set; }\n    return:\n      type: System.Windows.FontStyle\n      description: A <xref href=\"System.Windows.FontStyle\"></xref> value. The default is &lt;xref:System.Windows.FontStyles.Normal%2A?displayProperty=fullName&gt;.\n  overload: System.Windows.Controls.Control.FontStyle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.FontStyleProperty\n  id: FontStyleProperty\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: FontStyleProperty\n  nameWithType: Control.FontStyleProperty\n  fullName: System.Windows.Controls.Control.FontStyleProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.Control.FontStyle*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty FontStyleProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.FontWeight\n  id: FontWeight\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: FontWeight\n  nameWithType: Control.FontWeight\n  fullName: System.Windows.Controls.Control.FontWeight\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the weight or thickness of the specified font.\n  remarks: \"This property only affects a control whose template uses the FontWeight property as a parameter. On other controls, this property has no impact. For a list of predefined <xref:System.Windows.FontWeight> values, see the <xref:System.Windows.FontWeights> class.  \\n  \\n<a name=\\\"dependencyPropertyInfo_FontWeight\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.Control.FontWeightProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|\"\n  example:\n  - \"The following example shows how to set the FontWeight property of a control.  \\n  \\n [!code-xml[ControlProps#16](~/add/codesnippet/xaml/ControlProps.ControlProps/Pane1.xaml#16)]  \\n  \\n [!code-cs[ControlProps#6](~/add/codesnippet/csharp/ControlProps.ControlProps/Pane1.xaml.cs#6)]\\n [!code-vb[ControlProps#6](~/add/codesnippet/visualbasic/ControlProps.ControlProps/Pane1.xaml.vb#6)]\"\n  syntax:\n    content: public System.Windows.FontWeight FontWeight { get; set; }\n    return:\n      type: System.Windows.FontWeight\n      description: A <xref href=\"System.Windows.FontWeight\"></xref> value. The default is &lt;xref:System.Windows.FontWeights.Normal%2A?displayProperty=fullName&gt;.\n  overload: System.Windows.Controls.Control.FontWeight*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.FontWeightProperty\n  id: FontWeightProperty\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: FontWeightProperty\n  nameWithType: Control.FontWeightProperty\n  fullName: System.Windows.Controls.Control.FontWeightProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.Control.FontWeight*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty FontWeightProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.Foreground\n  id: Foreground\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: Foreground\n  nameWithType: Control.Foreground\n  fullName: System.Windows.Controls.Control.Foreground\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets a brush that describes the foreground color.\n  remarks: \"This property only affects a control whose template uses the Foreground property as a parameter. On other controls, this property has no impact.  \\n  \\n<a name=\\\"dependencyPropertyInfo_Foreground\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.Control.ForegroundProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|\"\n  example:\n  - \"The following example shows how to set the font style property of a control.  \\n  \\n [!code-xml[ControlProps#12](~/add/codesnippet/xaml/ControlProps.ControlProps/Pane1.xaml#12)]  \\n  \\n [!code-cs[ControlProps#2](~/add/codesnippet/csharp/ControlProps.ControlProps/Pane1.xaml.cs#2)]\\n [!code-vb[ControlProps#2](~/add/codesnippet/visualbasic/ControlProps.ControlProps/Pane1.xaml.vb#2)]\"\n  syntax:\n    content: public System.Windows.Media.Brush Foreground { get; set; }\n    return:\n      type: System.Windows.Media.Brush\n      description: The brush that paints the foreground of the control. The default value is the system dialog font color.\n  overload: System.Windows.Controls.Control.Foreground*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.ForegroundProperty\n  id: ForegroundProperty\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: ForegroundProperty\n  nameWithType: Control.ForegroundProperty\n  fullName: System.Windows.Controls.Control.ForegroundProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.Control.Foreground*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty ForegroundProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.HandlesScrolling\n  id: HandlesScrolling\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: HandlesScrolling\n  nameWithType: Control.HandlesScrolling\n  fullName: System.Windows.Controls.Control.HandlesScrolling\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets a value that indicates whether a control supports scrolling.\n  syntax:\n    content: protected virtual bool HandlesScrolling { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the control has a <xref href=\"System.Windows.Controls.ScrollViewer\"></xref> in its style and has a custom keyboard scrolling behavior; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.Control.HandlesScrolling*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.HorizontalContentAlignment\n  id: HorizontalContentAlignment\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: HorizontalContentAlignment\n  nameWithType: Control.HorizontalContentAlignment\n  fullName: System.Windows.Controls.Control.HorizontalContentAlignment\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the horizontal alignment of the control's content.\n  remarks: \"In addition to <xref:System.Windows.HorizontalAlignment>, <xref:System.Windows.HorizontalAlignment>, and <xref:System.Windows.HorizontalAlignment>, you can set the HorizontalContentAlignment property to <xref:System.Windows.HorizontalAlignment>, which stretches the child element to fill the allocated space of the parent element. For more information, see [Alignment, Margins, and Padding Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n This property only affects a control whose template uses the HorizontalContentAlignment property as a parameter. On other controls, this property has no impact.  \\n  \\n<a name=\\\"dependencyPropertyInfo_HorizontalContentAlignment\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.Control.HorizontalContentAlignmentProperty>|  \\n|Metadata properties set to `true`|None|\"\n  example:\n  - \"The following example shows how to set the horizontal content alignment property of a control.  \\n  \\n [!code-xml[ControlProps#18](~/add/codesnippet/xaml/ControlProps.ControlProps/Pane1.xaml#18)]  \\n  \\n [!code-cs[ControlProps#8](~/add/codesnippet/csharp/ControlProps.ControlProps/Pane1.xaml.cs#8)]\\n [!code-vb[ControlProps#8](~/add/codesnippet/visualbasic/ControlProps.ControlProps/Pane1.xaml.vb#8)]\"\n  syntax:\n    content: public System.Windows.HorizontalAlignment HorizontalContentAlignment { get; set; }\n    return:\n      type: System.Windows.HorizontalAlignment\n      description: One of the <xref href=\"System.Windows.HorizontalAlignment\"></xref> values. The default is <xref href=\"System.Windows.HorizontalAlignment\"></xref>.\n  overload: System.Windows.Controls.Control.HorizontalContentAlignment*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.HorizontalContentAlignmentProperty\n  id: HorizontalContentAlignmentProperty\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: HorizontalContentAlignmentProperty\n  nameWithType: Control.HorizontalContentAlignmentProperty\n  fullName: System.Windows.Controls.Control.HorizontalContentAlignmentProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.Control.HorizontalContentAlignment*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty HorizontalContentAlignmentProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.IsTabStop\n  id: IsTabStop\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: IsTabStop\n  nameWithType: Control.IsTabStop\n  fullName: System.Windows.Controls.Control.IsTabStop\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets a value that indicates whether a control is included in tab navigation.\n  remarks: \"If IsTabStop is `false`, the control is excluded from tab navigation.  \\n  \\n<a name=\\\"dependencyPropertyInfo_IsTabStop\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.Control.IsTabStopProperty>|  \\n|Metadata properties set to `true`|None|\"\n  example:\n  - \"The following example shows how to set the IsTabStop property and how to test whether a control is included in tab navigation.  \\n  \\n [!code-xml[ControlProps_snip#AdditionalControlProps15](~/add/codesnippet/xaml/ControlProps_snip.ControlProps/Pane1.xaml#additionalcontrolprops15)]  \\n  \\n [!code-cs[ControlProps_snip#AdditionalControlProps4](~/add/codesnippet/csharp/ControlProps_snip.ControlProps/Pane1.xaml.cs#additionalcontrolprops4)]\\n [!code-vb[ControlProps_snip#AdditionalControlProps4](~/add/codesnippet/visualbasic/ControlProps_snip.ControlProps/Window1.xaml.vb#additionalcontrolprops4)]\"\n  syntax:\n    content: public bool IsTabStop { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the control is included in tab navigation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Windows.Controls.Control.IsTabStop*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.IsTabStopProperty\n  id: IsTabStopProperty\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: IsTabStopProperty\n  nameWithType: Control.IsTabStopProperty\n  fullName: System.Windows.Controls.Control.IsTabStopProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.Control.IsTabStop*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty IsTabStopProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.MeasureOverride(System.Windows.Size)\n  id: MeasureOverride(System.Windows.Size)\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: MeasureOverride(Size)\n  nameWithType: Control.MeasureOverride(Size)\n  fullName: System.Windows.Controls.Control.MeasureOverride(Size)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Called to remeasure a control.\n  remarks: The default control measurement only measures the first visual child.\n  syntax:\n    content: protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);\n    parameters:\n    - id: constraint\n      type: System.Windows.Size\n      description: The maximum size that the method can return.\n    return:\n      type: System.Windows.Size\n      description: The size of the control, up to the maximum specified by <code>constraint</code>.\n  overload: System.Windows.Controls.Control.MeasureOverride*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.MouseDoubleClick\n  id: MouseDoubleClick\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: MouseDoubleClick\n  nameWithType: Control.MouseDoubleClick\n  fullName: System.Windows.Controls.Control.MouseDoubleClick\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Occurs when a mouse button is clicked two or more times.\n  remarks: \"Although this routed event seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised along the element tree by each <xref:System.Windows.UIElement>. If you set the <xref:System.Windows.RoutedEventArgs.Handled%2A> property to `true` in a MouseDoubleClick event handler, subsequent MouseDoubleClick events along the route will occur with <xref:System.Windows.RoutedEventArgs.Handled%2A> set to `false`. This is a higher-level event for control consumers who want to be notified when the user double-clicks the control and to handle the event in an application.  \\n  \\n Control authors who want to handle mouse double clicks should use the <xref:System.Windows.UIElement.MouseLeftButtonDown> event when <xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> is equal to two.  This will cause the state of <xref:System.Windows.RoutedEventArgs.Handled%2A> to propagate appropriately in the case where another element in the element tree handles the event.  \\n  \\n The <xref:System.Windows.Controls.Control> class defines the <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick> and MouseDoubleClick events, but not corresponding single-click events.  To see if the user has clicked the control once, handle the <xref:System.Windows.UIElement.MouseDown> event (or one of its counterparts) and check whether the <xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> property value is 1.  \\n  \\n<a name=\\\"routedEventInfo_MouseDoubleClick\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.Control.MouseDoubleClickEvent>|  \\n|Routing strategy|Direct|  \\n|Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|\"\n  example:\n  - \"The following example shows how to attach an event handler to the MouseDoubleClick event.  \\n  \\n [!code-xml[ControlProps_snip#ControlEvents11](~/add/codesnippet/xaml/ControlProps_snip.ControlProps/Pane1.xaml#controlevents11)]  \\n  \\n The following example shows the event handler of the MouseDoubleClick event.  \\n  \\n [!code-cs[ControlProps_snip#ControlEvents1](~/add/codesnippet/csharp/ControlProps_snip.ControlProps/Pane1.xaml.cs#controlevents1)]\\n [!code-vb[ControlProps_snip#ControlEvents1](~/add/codesnippet/visualbasic/ControlProps_snip.ControlProps/Window1.xaml.vb#controlevents1)]\"\n  syntax:\n    content: public event System.Windows.Input.MouseButtonEventHandler MouseDoubleClick;\n    return:\n      type: System.Windows.Input.MouseButtonEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.MouseDoubleClickEvent\n  id: MouseDoubleClickEvent\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: MouseDoubleClickEvent\n  nameWithType: Control.MouseDoubleClickEvent\n  fullName: System.Windows.Controls.Control.MouseDoubleClickEvent\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref href=\"System.Windows.Controls.Control.MouseDoubleClick\"></xref> routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent MouseDoubleClickEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.OnMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)\n  id: OnMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: OnMouseDoubleClick(MouseButtonEventArgs)\n  nameWithType: Control.OnMouseDoubleClick(MouseButtonEventArgs)\n  fullName: System.Windows.Controls.Control.OnMouseDoubleClick(MouseButtonEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Raises the <xref href=\"System.Windows.Controls.Control.MouseDoubleClick\"></xref> routed event.\n  remarks: The control raises the <xref:System.Windows.Controls.Control.MouseDoubleClick> event by calling the <xref:System.Windows.UIElement.RaiseEvent%2A> method. For more information, see [Routed Events Overview](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: protected virtual void OnMouseDoubleClick (System.Windows.Input.MouseButtonEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.MouseButtonEventArgs\n      description: The event data.\n  overload: System.Windows.Controls.Control.OnMouseDoubleClick*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.OnPreviewMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)\n  id: OnPreviewMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: OnPreviewMouseDoubleClick(MouseButtonEventArgs)\n  nameWithType: Control.OnPreviewMouseDoubleClick(MouseButtonEventArgs)\n  fullName: System.Windows.Controls.Control.OnPreviewMouseDoubleClick(MouseButtonEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Raises the <xref href=\"System.Windows.Controls.Control.PreviewMouseDoubleClick\"></xref> routed event.\n  remarks: The control raises the <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick> event by calling the <xref:System.Windows.UIElement.RaiseEvent%2A> method.  For more information, see [Routed Events Overview](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: protected virtual void OnPreviewMouseDoubleClick (System.Windows.Input.MouseButtonEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.MouseButtonEventArgs\n      description: The event data.\n  overload: System.Windows.Controls.Control.OnPreviewMouseDoubleClick*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)\n  id: OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: OnTemplateChanged(ControlTemplate,ControlTemplate)\n  nameWithType: Control.OnTemplateChanged(ControlTemplate,ControlTemplate)\n  fullName: System.Windows.Controls.Control.OnTemplateChanged(ControlTemplate,ControlTemplate)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Called whenever the control's template changes.\n  remarks: \"The timing for changing the template is as follows:  \\n  \\n1.  The template is changed by a <xref:System.Windows.DependencyObject.SetValue%2A> method call, a style trigger, or some other means.  \\n  \\n2.  The property value changes; the property-changed callback is called.  \\n  \\n3.  The old visual tree is removed.  \\n  \\n4.  An internal method is called which eventually calls the OnTemplateChanged method.  \\n  \\n5.  Later, during a measure, <xref:System.Windows.FrameworkElement.OnApplyTemplate%2A> is called and a new visual tree is attached.\"\n  syntax:\n    content: protected virtual void OnTemplateChanged (System.Windows.Controls.ControlTemplate oldTemplate, System.Windows.Controls.ControlTemplate newTemplate);\n    parameters:\n    - id: oldTemplate\n      type: System.Windows.Controls.ControlTemplate\n      description: The old template.\n    - id: newTemplate\n      type: System.Windows.Controls.ControlTemplate\n      description: The new template.\n  overload: System.Windows.Controls.Control.OnTemplateChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.Padding\n  id: Padding\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: Padding\n  nameWithType: Control.Padding\n  fullName: System.Windows.Controls.Control.Padding\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the padding inside a control.\n  remarks: \"Padding is specified in the order Left, Top, Right, and Bottom. For more information, see <xref:System.Windows.Thickness> and [Alignment, Margins, and Padding Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n This property only affects a control whose template uses the Padding property as a parameter. On other controls, this property has no impact.  \\n  \\n<a name=\\\"dependencyPropertyInfo_Padding\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.Control.PaddingProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A>|\"\n  example:\n  - \"The following example shows how to set the padding property of a control.  \\n  \\n [!code-xml[ControlProps_snip#AdditionalControlProps13](~/add/codesnippet/xaml/ControlProps_snip.ControlProps/Pane1.xaml#additionalcontrolprops13)]  \\n  \\n [!code-cs[ControlProps_snip#AdditionalControlProps3](~/add/codesnippet/csharp/ControlProps_snip.ControlProps/Pane1.xaml.cs#additionalcontrolprops3)]\\n [!code-vb[ControlProps_snip#AdditionalControlProps3](~/add/codesnippet/visualbasic/ControlProps_snip.ControlProps/Window1.xaml.vb#additionalcontrolprops3)]\"\n  syntax:\n    content: public System.Windows.Thickness Padding { get; set; }\n    return:\n      type: System.Windows.Thickness\n      description: The amount of space between the content of a <xref href=\"System.Windows.Controls.Control\"></xref> and its <xref:System.Windows.FrameworkElement.Margin*> or <xref href=\"System.Windows.Controls.Border\"></xref>.  The default is a thickness of 0 on all four sides.\n  overload: System.Windows.Controls.Control.Padding*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.PaddingProperty\n  id: PaddingProperty\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: PaddingProperty\n  nameWithType: Control.PaddingProperty\n  fullName: System.Windows.Controls.Control.PaddingProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.Control.Padding*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty PaddingProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.PreviewMouseDoubleClick\n  id: PreviewMouseDoubleClick\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: PreviewMouseDoubleClick\n  nameWithType: Control.PreviewMouseDoubleClick\n  fullName: System.Windows.Controls.Control.PreviewMouseDoubleClick\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Occurs when a user clicks the mouse button two or more times.\n  remarks: \"Although this routed event seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised along the element tree by each <xref:System.Windows.UIElement>. If you set the <xref:System.Windows.RoutedEventArgs.Handled%2A> property to `true` in a PreviewMouseDoubleClick event handler, subsequent PreviewMouseDoubleClick events along the route will occur with <xref:System.Windows.RoutedEventArgs.Handled%2A> set to `false`, but the <xref:System.Windows.Controls.Control.MouseDoubleClick> event will occur with <xref:System.Windows.RoutedEventArgs.Handled%2A> set to `true`. This is a higher-level event for control consumers who want to be notified when the user double-clicks the control and to handle the event in an application.  \\n  \\n Control authors who want to handle mouse double clicks should use the <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> event when <xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> is equal to two.  This will cause the state of <xref:System.Windows.RoutedEventArgs.Handled%2A> to propagate appropriately in the case where another element in the element tree handles the event.  \\n  \\n The <xref:System.Windows.Controls.Control> class defines the PreviewMouseDoubleClick and <xref:System.Windows.Controls.Control.MouseDoubleClick> events, but not corresponding single-click events.  To see if the user has clicked the control once, handle the <xref:System.Windows.UIElement.MouseDown> event (or one of its counterparts) and check whether the <xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> property value is 1.  \\n  \\n<a name=\\\"routedEventInfo_PreviewMouseDoubleClick\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.Control.PreviewMouseDoubleClickEvent>|  \\n|Routing strategy|Direct|  \\n|Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|\"\n  example:\n  - \"The following example shows how to attach an event handler the PreviewMouseDoubleClick event.  \\n  \\n [!code-xml[ControlProps_snip#ControlEvents12](~/add/codesnippet/xaml/ControlProps_snip.ControlProps/Pane1.xaml#controlevents12)]  \\n  \\n The following example shows the event handler of the PreviewMouseDoubleClick event.  \\n  \\n [!code-cs[ControlProps_snip#ControlEvents2](~/add/codesnippet/csharp/ControlProps_snip.ControlProps/Pane1.xaml.cs#controlevents2)]\\n [!code-vb[ControlProps_snip#ControlEvents2](~/add/codesnippet/visualbasic/ControlProps_snip.ControlProps/Window1.xaml.vb#controlevents2)]\"\n  syntax:\n    content: public event System.Windows.Input.MouseButtonEventHandler PreviewMouseDoubleClick;\n    return:\n      type: System.Windows.Input.MouseButtonEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.PreviewMouseDoubleClickEvent\n  id: PreviewMouseDoubleClickEvent\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: PreviewMouseDoubleClickEvent\n  nameWithType: Control.PreviewMouseDoubleClickEvent\n  fullName: System.Windows.Controls.Control.PreviewMouseDoubleClickEvent\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref href=\"System.Windows.Controls.Control.PreviewMouseDoubleClick\"></xref> routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewMouseDoubleClickEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.TabIndex\n  id: TabIndex\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: TabIndex\n  nameWithType: Control.TabIndex\n  fullName: System.Windows.Controls.Control.TabIndex\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets a value that determines the order in which elements receive focus when the user navigates through controls by using the TAB key.\n  remarks: \"A control with a lower tab index receives focus before a control with a higher index.  \\n  \\n<a name=\\\"dependencyPropertyInfo_TabIndex\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.Control.TabIndexProperty>|  \\n|Metadata properties set to `true`|None|\"\n  example:\n  - \"The following example sets the tab index of three buttons.  \\n  \\n [!code-xml[ControlProps_snip#AdditionalControlProps17](~/add/codesnippet/xaml/ControlProps_snip.ControlProps/Pane1.xaml#additionalcontrolprops17)]\"\n  syntax:\n    content: public int TabIndex { get; set; }\n    return:\n      type: System.Int32\n      description: A value that determines the order of logical navigation for a device. The default value is &lt;xref:System.Int32?displayProperty=fullName&gt;.\n  overload: System.Windows.Controls.Control.TabIndex*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.TabIndexProperty\n  id: TabIndexProperty\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: TabIndexProperty\n  nameWithType: Control.TabIndexProperty\n  fullName: System.Windows.Controls.Control.TabIndexProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.Control.TabIndex*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty TabIndexProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.Template\n  id: Template\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: Template\n  nameWithType: Control.Template\n  fullName: System.Windows.Controls.Control.Template\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets a control template.\n  remarks: \"The <xref:System.Windows.Controls.ControlTemplate> specifies the appearance of a <xref:System.Windows.Controls.Control>; if a <xref:System.Windows.Controls.Control> does not have a <xref:System.Windows.Controls.ControlTemplate>, the <xref:System.Windows.Controls.Control> will not appear in your application. The control author defines the default control template, and the application author can override the <xref:System.Windows.Controls.ControlTemplate> to redefine the visual tree of the control. See [Control Styles and Templates](~/add/includes/ajax-current-ext-md.md) for information and examples of how to change the visual tree of existing controls.  \\n  \\n A <xref:System.Windows.Controls.ControlTemplate> is intended to be a self-contained unit of implementation detail that is invisible to outside users and objects, including <xref:System.Windows.Style> objects. The only way to manipulate the content of the control template is from within the same control template.  \\n  \\n<a name=\\\"dependencyPropertyInfo_Template\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.Control.TemplateProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|\"\n  example:\n  - \"The following example creates a <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button>.  If you add this to your application as a resource, all the buttons in the application will appear as ellipses but will still function as buttons.  \\n  \\n [!code-xml[StylingIntroSample_snip#ButtonCT](~/add/codesnippet/xaml/p-system.windows.control_20_1.xaml)]\"\n  syntax:\n    content: public System.Windows.Controls.ControlTemplate Template { get; set; }\n    return:\n      type: System.Windows.Controls.ControlTemplate\n      description: The template that defines the appearance of the <xref href=\"System.Windows.Controls.Control\"></xref>.\n  overload: System.Windows.Controls.Control.Template*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.TemplateProperty\n  id: TemplateProperty\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: TemplateProperty\n  nameWithType: Control.TemplateProperty\n  fullName: System.Windows.Controls.Control.TemplateProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.Control.Template*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty TemplateProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.ToString\n  id: ToString\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Control.ToString()\n  fullName: System.Windows.Controls.Control.ToString()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns the string representation of a <xref href=\"System.Windows.Controls.Control\"></xref> object.\n  remarks: Control authors should override this method to return a string that contains information that would be of interest to consumers of the control.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that represents the control.\n  overload: System.Windows.Controls.Control.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.VerticalContentAlignment\n  id: VerticalContentAlignment\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: VerticalContentAlignment\n  nameWithType: Control.VerticalContentAlignment\n  fullName: System.Windows.Controls.Control.VerticalContentAlignment\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the vertical alignment of the control's content.\n  remarks: \"In addition to <xref:System.Windows.VerticalAlignment>, <xref:System.Windows.VerticalAlignment>, and <xref:System.Windows.VerticalAlignment>, you can set the VerticalContentAlignment property to <xref:System.Windows.VerticalAlignment>, which stretches the child element to fill the allocated layout space of the parent element. For more information, see [Alignment, Margins, and Padding Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n This property only affects a control whose template uses the VerticalContentAlignment property as a parameter. On other controls, this property has no impact.  \\n  \\n<a name=\\\"dependencyPropertyInfo_VerticalContentAlignment\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.Control.VerticalContentAlignmentProperty>|  \\n|Metadata properties set to `true`|None|\"\n  example:\n  - \"The following example shows how to set the vertical content alignment property on a control.  \\n  \\n [!code-xml[ControlProps#19](~/add/codesnippet/xaml/ControlProps.ControlProps/Pane1.xaml#19)]  \\n  \\n [!code-cs[ControlProps#9](~/add/codesnippet/csharp/ControlProps.ControlProps/Pane1.xaml.cs#9)]\\n [!code-vb[ControlProps#9](~/add/codesnippet/visualbasic/ControlProps.ControlProps/Pane1.xaml.vb#9)]\"\n  syntax:\n    content: public System.Windows.VerticalAlignment VerticalContentAlignment { get; set; }\n    return:\n      type: System.Windows.VerticalAlignment\n      description: One of the <xref href=\"System.Windows.VerticalAlignment\"></xref> values. The default is <xref href=\"System.Windows.VerticalAlignment\"></xref>.\n  overload: System.Windows.Controls.Control.VerticalContentAlignment*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Control.VerticalContentAlignmentProperty\n  id: VerticalContentAlignmentProperty\n  parent: System.Windows.Controls.Control\n  langs:\n  - csharp\n  name: VerticalContentAlignmentProperty\n  nameWithType: Control.VerticalContentAlignmentProperty\n  fullName: System.Windows.Controls.Control.VerticalContentAlignmentProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.Control.VerticalContentAlignment*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty VerticalContentAlignmentProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.FrameworkElement\n  isExternal: false\n  name: System.Windows.FrameworkElement\n- uid: System.Windows.Controls.Control.#ctor\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: Control()\n  nameWithType: Control.Control()\n  fullName: System.Windows.Controls.Control.Control()\n- uid: System.Windows.Controls.Control.ArrangeOverride(System.Windows.Size)\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: ArrangeOverride(Size)\n  nameWithType: Control.ArrangeOverride(Size)\n  fullName: System.Windows.Controls.Control.ArrangeOverride(Size)\n- uid: System.Windows.Size\n  parent: System.Windows\n  isExternal: false\n  name: Size\n  nameWithType: Size\n  fullName: System.Windows.Size\n- uid: System.Windows.Controls.Control.Background\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: Background\n  nameWithType: Control.Background\n  fullName: System.Windows.Controls.Control.Background\n- uid: System.Windows.Media.Brush\n  parent: System.Windows.Media\n  isExternal: false\n  name: Brush\n  nameWithType: Brush\n  fullName: System.Windows.Media.Brush\n- uid: System.Windows.Controls.Control.BackgroundProperty\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: BackgroundProperty\n  nameWithType: Control.BackgroundProperty\n  fullName: System.Windows.Controls.Control.BackgroundProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Controls.Control.BorderBrush\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: BorderBrush\n  nameWithType: Control.BorderBrush\n  fullName: System.Windows.Controls.Control.BorderBrush\n- uid: System.Windows.Controls.Control.BorderBrushProperty\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: BorderBrushProperty\n  nameWithType: Control.BorderBrushProperty\n  fullName: System.Windows.Controls.Control.BorderBrushProperty\n- uid: System.Windows.Controls.Control.BorderThickness\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: BorderThickness\n  nameWithType: Control.BorderThickness\n  fullName: System.Windows.Controls.Control.BorderThickness\n- uid: System.Windows.Thickness\n  parent: System.Windows\n  isExternal: false\n  name: Thickness\n  nameWithType: Thickness\n  fullName: System.Windows.Thickness\n- uid: System.Windows.Controls.Control.BorderThicknessProperty\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: BorderThicknessProperty\n  nameWithType: Control.BorderThicknessProperty\n  fullName: System.Windows.Controls.Control.BorderThicknessProperty\n- uid: System.Windows.Controls.Control.FontFamily\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: FontFamily\n  nameWithType: Control.FontFamily\n  fullName: System.Windows.Controls.Control.FontFamily\n- uid: System.Windows.Media.FontFamily\n  parent: System.Windows.Media\n  isExternal: false\n  name: FontFamily\n  nameWithType: FontFamily\n  fullName: System.Windows.Media.FontFamily\n- uid: System.Windows.Controls.Control.FontFamilyProperty\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: FontFamilyProperty\n  nameWithType: Control.FontFamilyProperty\n  fullName: System.Windows.Controls.Control.FontFamilyProperty\n- uid: System.Windows.Controls.Control.FontSize\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: FontSize\n  nameWithType: Control.FontSize\n  fullName: System.Windows.Controls.Control.FontSize\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Controls.Control.FontSizeProperty\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: FontSizeProperty\n  nameWithType: Control.FontSizeProperty\n  fullName: System.Windows.Controls.Control.FontSizeProperty\n- uid: System.Windows.Controls.Control.FontStretch\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: FontStretch\n  nameWithType: Control.FontStretch\n  fullName: System.Windows.Controls.Control.FontStretch\n- uid: System.Windows.FontStretch\n  parent: System.Windows\n  isExternal: false\n  name: FontStretch\n  nameWithType: FontStretch\n  fullName: System.Windows.FontStretch\n- uid: System.Windows.Controls.Control.FontStretchProperty\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: FontStretchProperty\n  nameWithType: Control.FontStretchProperty\n  fullName: System.Windows.Controls.Control.FontStretchProperty\n- uid: System.Windows.Controls.Control.FontStyle\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: FontStyle\n  nameWithType: Control.FontStyle\n  fullName: System.Windows.Controls.Control.FontStyle\n- uid: System.Windows.FontStyle\n  parent: System.Windows\n  isExternal: false\n  name: FontStyle\n  nameWithType: FontStyle\n  fullName: System.Windows.FontStyle\n- uid: System.Windows.Controls.Control.FontStyleProperty\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: FontStyleProperty\n  nameWithType: Control.FontStyleProperty\n  fullName: System.Windows.Controls.Control.FontStyleProperty\n- uid: System.Windows.Controls.Control.FontWeight\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: FontWeight\n  nameWithType: Control.FontWeight\n  fullName: System.Windows.Controls.Control.FontWeight\n- uid: System.Windows.FontWeight\n  parent: System.Windows\n  isExternal: false\n  name: FontWeight\n  nameWithType: FontWeight\n  fullName: System.Windows.FontWeight\n- uid: System.Windows.Controls.Control.FontWeightProperty\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: FontWeightProperty\n  nameWithType: Control.FontWeightProperty\n  fullName: System.Windows.Controls.Control.FontWeightProperty\n- uid: System.Windows.Controls.Control.Foreground\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: Foreground\n  nameWithType: Control.Foreground\n  fullName: System.Windows.Controls.Control.Foreground\n- uid: System.Windows.Controls.Control.ForegroundProperty\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: ForegroundProperty\n  nameWithType: Control.ForegroundProperty\n  fullName: System.Windows.Controls.Control.ForegroundProperty\n- uid: System.Windows.Controls.Control.HandlesScrolling\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: HandlesScrolling\n  nameWithType: Control.HandlesScrolling\n  fullName: System.Windows.Controls.Control.HandlesScrolling\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Controls.Control.HorizontalContentAlignment\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: HorizontalContentAlignment\n  nameWithType: Control.HorizontalContentAlignment\n  fullName: System.Windows.Controls.Control.HorizontalContentAlignment\n- uid: System.Windows.HorizontalAlignment\n  parent: System.Windows\n  isExternal: false\n  name: HorizontalAlignment\n  nameWithType: HorizontalAlignment\n  fullName: System.Windows.HorizontalAlignment\n- uid: System.Windows.Controls.Control.HorizontalContentAlignmentProperty\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: HorizontalContentAlignmentProperty\n  nameWithType: Control.HorizontalContentAlignmentProperty\n  fullName: System.Windows.Controls.Control.HorizontalContentAlignmentProperty\n- uid: System.Windows.Controls.Control.IsTabStop\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: IsTabStop\n  nameWithType: Control.IsTabStop\n  fullName: System.Windows.Controls.Control.IsTabStop\n- uid: System.Windows.Controls.Control.IsTabStopProperty\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: IsTabStopProperty\n  nameWithType: Control.IsTabStopProperty\n  fullName: System.Windows.Controls.Control.IsTabStopProperty\n- uid: System.Windows.Controls.Control.MeasureOverride(System.Windows.Size)\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: MeasureOverride(Size)\n  nameWithType: Control.MeasureOverride(Size)\n  fullName: System.Windows.Controls.Control.MeasureOverride(Size)\n- uid: System.Windows.Controls.Control.MouseDoubleClick\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: MouseDoubleClick\n  nameWithType: Control.MouseDoubleClick\n  fullName: System.Windows.Controls.Control.MouseDoubleClick\n- uid: System.Windows.Input.MouseButtonEventHandler\n  parent: System.Windows.Input\n  isExternal: false\n  name: MouseButtonEventHandler\n  nameWithType: MouseButtonEventHandler\n  fullName: System.Windows.Input.MouseButtonEventHandler\n- uid: System.Windows.Controls.Control.MouseDoubleClickEvent\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: MouseDoubleClickEvent\n  nameWithType: Control.MouseDoubleClickEvent\n  fullName: System.Windows.Controls.Control.MouseDoubleClickEvent\n- uid: System.Windows.RoutedEvent\n  parent: System.Windows\n  isExternal: false\n  name: RoutedEvent\n  nameWithType: RoutedEvent\n  fullName: System.Windows.RoutedEvent\n- uid: System.Windows.Controls.Control.OnMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: OnMouseDoubleClick(MouseButtonEventArgs)\n  nameWithType: Control.OnMouseDoubleClick(MouseButtonEventArgs)\n  fullName: System.Windows.Controls.Control.OnMouseDoubleClick(MouseButtonEventArgs)\n- uid: System.Windows.Input.MouseButtonEventArgs\n  parent: System.Windows.Input\n  isExternal: false\n  name: MouseButtonEventArgs\n  nameWithType: MouseButtonEventArgs\n  fullName: System.Windows.Input.MouseButtonEventArgs\n- uid: System.Windows.Controls.Control.OnPreviewMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: OnPreviewMouseDoubleClick(MouseButtonEventArgs)\n  nameWithType: Control.OnPreviewMouseDoubleClick(MouseButtonEventArgs)\n  fullName: System.Windows.Controls.Control.OnPreviewMouseDoubleClick(MouseButtonEventArgs)\n- uid: System.Windows.Controls.Control.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: OnTemplateChanged(ControlTemplate,ControlTemplate)\n  nameWithType: Control.OnTemplateChanged(ControlTemplate,ControlTemplate)\n  fullName: System.Windows.Controls.Control.OnTemplateChanged(ControlTemplate,ControlTemplate)\n- uid: System.Windows.Controls.ControlTemplate\n  parent: System.Windows.Controls\n  isExternal: false\n  name: ControlTemplate\n  nameWithType: ControlTemplate\n  fullName: System.Windows.Controls.ControlTemplate\n- uid: System.Windows.Controls.Control.Padding\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: Padding\n  nameWithType: Control.Padding\n  fullName: System.Windows.Controls.Control.Padding\n- uid: System.Windows.Controls.Control.PaddingProperty\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: PaddingProperty\n  nameWithType: Control.PaddingProperty\n  fullName: System.Windows.Controls.Control.PaddingProperty\n- uid: System.Windows.Controls.Control.PreviewMouseDoubleClick\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: PreviewMouseDoubleClick\n  nameWithType: Control.PreviewMouseDoubleClick\n  fullName: System.Windows.Controls.Control.PreviewMouseDoubleClick\n- uid: System.Windows.Controls.Control.PreviewMouseDoubleClickEvent\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: PreviewMouseDoubleClickEvent\n  nameWithType: Control.PreviewMouseDoubleClickEvent\n  fullName: System.Windows.Controls.Control.PreviewMouseDoubleClickEvent\n- uid: System.Windows.Controls.Control.TabIndex\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: TabIndex\n  nameWithType: Control.TabIndex\n  fullName: System.Windows.Controls.Control.TabIndex\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Controls.Control.TabIndexProperty\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: TabIndexProperty\n  nameWithType: Control.TabIndexProperty\n  fullName: System.Windows.Controls.Control.TabIndexProperty\n- uid: System.Windows.Controls.Control.Template\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: Template\n  nameWithType: Control.Template\n  fullName: System.Windows.Controls.Control.Template\n- uid: System.Windows.Controls.Control.TemplateProperty\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: TemplateProperty\n  nameWithType: Control.TemplateProperty\n  fullName: System.Windows.Controls.Control.TemplateProperty\n- uid: System.Windows.Controls.Control.ToString\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: ToString()\n  nameWithType: Control.ToString()\n  fullName: System.Windows.Controls.Control.ToString()\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Controls.Control.VerticalContentAlignment\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: VerticalContentAlignment\n  nameWithType: Control.VerticalContentAlignment\n  fullName: System.Windows.Controls.Control.VerticalContentAlignment\n- uid: System.Windows.VerticalAlignment\n  parent: System.Windows\n  isExternal: false\n  name: VerticalAlignment\n  nameWithType: VerticalAlignment\n  fullName: System.Windows.VerticalAlignment\n- uid: System.Windows.Controls.Control.VerticalContentAlignmentProperty\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: VerticalContentAlignmentProperty\n  nameWithType: Control.VerticalContentAlignmentProperty\n  fullName: System.Windows.Controls.Control.VerticalContentAlignmentProperty\n- uid: System.Windows.Controls.Control.#ctor*\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: Control\n  nameWithType: Control.Control\n- uid: System.Windows.Controls.Control.ArrangeOverride*\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: ArrangeOverride\n  nameWithType: Control.ArrangeOverride\n- uid: System.Windows.Controls.Control.Background*\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: Background\n  nameWithType: Control.Background\n- uid: System.Windows.Controls.Control.BorderBrush*\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: BorderBrush\n  nameWithType: Control.BorderBrush\n- uid: System.Windows.Controls.Control.BorderThickness*\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: BorderThickness\n  nameWithType: Control.BorderThickness\n- uid: System.Windows.Controls.Control.FontFamily*\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: FontFamily\n  nameWithType: Control.FontFamily\n- uid: System.Windows.Controls.Control.FontSize*\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: FontSize\n  nameWithType: Control.FontSize\n- uid: System.Windows.Controls.Control.FontStretch*\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: FontStretch\n  nameWithType: Control.FontStretch\n- uid: System.Windows.Controls.Control.FontStyle*\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: FontStyle\n  nameWithType: Control.FontStyle\n- uid: System.Windows.Controls.Control.FontWeight*\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: FontWeight\n  nameWithType: Control.FontWeight\n- uid: System.Windows.Controls.Control.Foreground*\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: Foreground\n  nameWithType: Control.Foreground\n- uid: System.Windows.Controls.Control.HandlesScrolling*\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: HandlesScrolling\n  nameWithType: Control.HandlesScrolling\n- uid: System.Windows.Controls.Control.HorizontalContentAlignment*\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: HorizontalContentAlignment\n  nameWithType: Control.HorizontalContentAlignment\n- uid: System.Windows.Controls.Control.IsTabStop*\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: IsTabStop\n  nameWithType: Control.IsTabStop\n- uid: System.Windows.Controls.Control.MeasureOverride*\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: MeasureOverride\n  nameWithType: Control.MeasureOverride\n- uid: System.Windows.Controls.Control.OnMouseDoubleClick*\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: OnMouseDoubleClick\n  nameWithType: Control.OnMouseDoubleClick\n- uid: System.Windows.Controls.Control.OnPreviewMouseDoubleClick*\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: OnPreviewMouseDoubleClick\n  nameWithType: Control.OnPreviewMouseDoubleClick\n- uid: System.Windows.Controls.Control.OnTemplateChanged*\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: OnTemplateChanged\n  nameWithType: Control.OnTemplateChanged\n- uid: System.Windows.Controls.Control.Padding*\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: Padding\n  nameWithType: Control.Padding\n- uid: System.Windows.Controls.Control.TabIndex*\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: TabIndex\n  nameWithType: Control.TabIndex\n- uid: System.Windows.Controls.Control.Template*\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: Template\n  nameWithType: Control.Template\n- uid: System.Windows.Controls.Control.ToString*\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: ToString\n  nameWithType: Control.ToString\n- uid: System.Windows.Controls.Control.VerticalContentAlignment*\n  parent: System.Windows.Controls.Control\n  isExternal: false\n  name: VerticalContentAlignment\n  nameWithType: Control.VerticalContentAlignment\n"}