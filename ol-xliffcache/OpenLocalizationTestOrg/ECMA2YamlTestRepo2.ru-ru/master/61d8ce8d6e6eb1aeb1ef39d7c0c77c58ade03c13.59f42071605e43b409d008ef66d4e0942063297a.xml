{"nodes":[{"pos":[663,782],"content":"Defines a <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that processes Windows Username tokens.","needQuote":true,"needEscape":true,"source":"Defines a <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler\"></xref> that processes Windows Username tokens."},{"pos":[794,950],"content":"The WindowsUserNameSecurityTokenHandler class extends the <xref:System.IdentityModel.Tokens.UserNameSecurityTokenHandler> class to add validation of tokens.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The WindowsUserNameSecurityTokenHandler class extends the &lt;xref:System.IdentityModel.Tokens.UserNameSecurityTokenHandler&gt; class to add validation of tokens.","pos":[0,156],"source":"The WindowsUserNameSecurityTokenHandler class extends the <xref:System.IdentityModel.Tokens.UserNameSecurityTokenHandler> class to add validation of tokens."}]},{"pos":[4246,4371],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler\"></xref> class."},{"pos":[5084,5242],"content":"Gets a value that indicates whether this handler supports validation of tokens of type <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether this handler supports validation of tokens of type <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref>."},{"pos":[5371,5700],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the handler supports validation of tokens of type <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the handler supports validation of tokens of type <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,260],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the handler supports validation of tokens of type <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"Always <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[261,329],"source":" Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[6449,6502],"content":"Validates the specified token and returns its claims.","needQuote":true,"needEscape":true,"nodes":[{"content":"Validates the specified token and returns its claims.","pos":[0,53]}]},{"pos":[6801,6910],"content":"The token to validate. An instance of <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The token to validate.","pos":[0,22]},{"content":"An instance of <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[23,109],"source":" An instance of <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref>."}]},{"pos":[7043,7090],"content":"The identities that are contained in the token.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identities that are contained in the token.","pos":[0,47]}]},{"pos":[7298,7381],"content":"<ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>token</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[7863,8011],"content":"The &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*&gt; property is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*> property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[8178,8221],"content":"LogonUser using the specified token failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"LogonUser using the specified token failed.","pos":[0,43]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler\n  id: WindowsUserNameSecurityTokenHandler\n  children:\n  - System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.#ctor\n  - System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.CanValidateToken\n  - System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  langs:\n  - csharp\n  name: WindowsUserNameSecurityTokenHandler\n  nameWithType: WindowsUserNameSecurityTokenHandler\n  fullName: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler\n  type: Class\n  summary: Defines a <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler\"></xref> that processes Windows Username tokens.\n  remarks: The WindowsUserNameSecurityTokenHandler class extends the <xref:System.IdentityModel.Tokens.UserNameSecurityTokenHandler> class to add validation of tokens.\n  syntax:\n    content: 'public class WindowsUserNameSecurityTokenHandler : System.IdentityModel.Tokens.UserNameSecurityTokenHandler'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Tokens.SecurityTokenHandler\n  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.Configuration\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanWriteToken\n  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler.GetTokenTypeIdentifiers\n  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler.ReadToken(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler.RetainPassword\n  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler.TokenType\n  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler\n  langs:\n  - csharp\n  name: WindowsUserNameSecurityTokenHandler()\n  nameWithType: WindowsUserNameSecurityTokenHandler.WindowsUserNameSecurityTokenHandler()\n  fullName: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.WindowsUserNameSecurityTokenHandler()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler\"></xref> class.\n  syntax:\n    content: public WindowsUserNameSecurityTokenHandler ();\n    parameters: []\n  overload: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.CanValidateToken\n  id: CanValidateToken\n  parent: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler\n  langs:\n  - csharp\n  name: CanValidateToken\n  nameWithType: WindowsUserNameSecurityTokenHandler.CanValidateToken\n  fullName: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.CanValidateToken\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a value that indicates whether this handler supports validation of tokens of type <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref>.\n  syntax:\n    content: public override bool CanValidateToken { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the handler supports validation of tokens of type <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.CanValidateToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  id: ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler\n  langs:\n  - csharp\n  name: ValidateToken(SecurityToken)\n  nameWithType: WindowsUserNameSecurityTokenHandler.ValidateToken(SecurityToken)\n  fullName: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.ValidateToken(SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Validates the specified token and returns its claims.\n  syntax:\n    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity> ValidateToken (System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The token to validate. An instance of <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref>.\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}\n      description: The identities that are contained in the token.\n  overload: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.ValidateToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>token</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>token</code> is not assignable from <xref href=\\\"System.IdentityModel.Tokens.UserNameSecurityToken\\\"></xref>.  \\n  \\n -or-  \\n  \\n The <xref:System.IdentityModel.Tokens.UserNameSecurityToken.UserName*> property of the specified token is not of the form `user\\\\domain`.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*> property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.IdentityModel.Tokens.SecurityTokenValidationException\n    commentId: T:System.IdentityModel.Tokens.SecurityTokenValidationException\n    description: LogonUser using the specified token failed.\n  platform:\n  - net462\nreferences:\n- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler\n  isExternal: false\n  name: System.IdentityModel.Tokens.UserNameSecurityTokenHandler\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.IdentityModel.Tokens.SecurityTokenValidationException\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityTokenValidationException\n  nameWithType: SecurityTokenValidationException\n  fullName: System.IdentityModel.Tokens.SecurityTokenValidationException\n- uid: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.#ctor\n  parent: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler\n  isExternal: false\n  name: WindowsUserNameSecurityTokenHandler()\n  nameWithType: WindowsUserNameSecurityTokenHandler.WindowsUserNameSecurityTokenHandler()\n  fullName: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.WindowsUserNameSecurityTokenHandler()\n- uid: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.CanValidateToken\n  parent: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler\n  isExternal: false\n  name: CanValidateToken\n  nameWithType: WindowsUserNameSecurityTokenHandler.CanValidateToken\n  fullName: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.CanValidateToken\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler\n  isExternal: false\n  name: ValidateToken(SecurityToken)\n  nameWithType: WindowsUserNameSecurityTokenHandler.ValidateToken(SecurityToken)\n  fullName: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.ValidateToken(SecurityToken)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<ClaimsIdentity>\n  nameWithType: ReadOnlyCollection<ClaimsIdentity>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Security.Claims.ClaimsIdentity\n    name: ClaimsIdentity\n    nameWithType: ClaimsIdentity\n    fullName: ClaimsIdentity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Tokens.SecurityToken\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityToken\n  nameWithType: SecurityToken\n  fullName: System.IdentityModel.Tokens.SecurityToken\n- uid: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.#ctor*\n  parent: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler\n  isExternal: false\n  name: WindowsUserNameSecurityTokenHandler\n  nameWithType: WindowsUserNameSecurityTokenHandler.WindowsUserNameSecurityTokenHandler\n- uid: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.CanValidateToken*\n  parent: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler\n  isExternal: false\n  name: CanValidateToken\n  nameWithType: WindowsUserNameSecurityTokenHandler.CanValidateToken\n- uid: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.ValidateToken*\n  parent: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler\n  isExternal: false\n  name: ValidateToken\n  nameWithType: WindowsUserNameSecurityTokenHandler.ValidateToken\n"}