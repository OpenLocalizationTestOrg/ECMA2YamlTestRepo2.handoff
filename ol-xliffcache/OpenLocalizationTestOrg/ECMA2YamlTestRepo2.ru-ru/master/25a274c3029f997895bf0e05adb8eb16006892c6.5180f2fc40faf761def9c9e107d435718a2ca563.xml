{"nodes":[{"pos":[375,462],"content":"Defines methods that must be implemented for custom session-state partition resolution.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines methods that must be implemented for custom session-state partition resolution.","pos":[0,87]}]},{"pos":[475,1658],"content":"Implement the IPartitionResolver interface and the <xref:System.Web.IPartitionResolver.Initialize%2A> and <xref:System.Web.IPartitionResolver.ResolvePartition%2A> methods, if you are providing custom partition resolution for session-state data across multiple backend nodes when in SQL or state-server mode.       The session-state management information can be configured in the [sessionState Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) of the configuration file with the `partitionResolverType` attribute. If a value is specified for the `partitionResolverType` attribute, the `sqlConnectionString` and `stateConnectionString` attributes are ignored.       The partition resolution configuration can also be set programmatically using the <xref:System.Web.Configuration.SessionStateSection.PartitionResolverType%2A> property. If the <xref:System.Web.Configuration.SessionStateSection.PartitionResolverType%2A> property is specified, the <xref:System.Web.Configuration.SessionStateSection.SqlConnectionString%2A> and <xref:System.Web.Configuration.SessionStateSection.StateConnectionString%2A> properties are ignored.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Implement the IPartitionResolver interface and the &lt;xref:System.Web.IPartitionResolver.Initialize%2A&gt; and &lt;xref:System.Web.IPartitionResolver.ResolvePartition%2A&gt; methods, if you are providing custom partition resolution for session-state data across multiple backend nodes when in SQL or state-server mode.","pos":[0,307],"source":"Implement the IPartitionResolver interface and the <xref:System.Web.IPartitionResolver.Initialize%2A> and <xref:System.Web.IPartitionResolver.ResolvePartition%2A> methods, if you are providing custom partition resolution for session-state data across multiple backend nodes when in SQL or state-server mode."},{"content":"The session-state management information can be configured in the <bpt id=\"p1\">[</bpt>sessionState Element (ASP.NET Settings Schema)<ept id=\"p1\">](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d)</ept> of the configuration file with the <ph id=\"ph1\">`partitionResolverType`</ph> attribute.","pos":[314,568],"source":"       The session-state management information can be configured in the [sessionState Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) of the configuration file with the `partitionResolverType` attribute."},{"content":"If a value is specified for the <ph id=\"ph1\">`partitionResolverType`</ph> attribute, the <ph id=\"ph2\">`sqlConnectionString`</ph> and <ph id=\"ph3\">`stateConnectionString`</ph> attributes are ignored.","pos":[569,713],"source":" If a value is specified for the `partitionResolverType` attribute, the `sqlConnectionString` and `stateConnectionString` attributes are ignored."},{"content":"The partition resolution configuration can also be set programmatically using the &lt;xref:System.Web.Configuration.SessionStateSection.PartitionResolverType%2A&gt; property.","pos":[720,888],"source":"       The partition resolution configuration can also be set programmatically using the <xref:System.Web.Configuration.SessionStateSection.PartitionResolverType%2A> property."},{"content":"If the &lt;xref:System.Web.Configuration.SessionStateSection.PartitionResolverType%2A&gt; property is specified, the &lt;xref:System.Web.Configuration.SessionStateSection.SqlConnectionString%2A&gt; and &lt;xref:System.Web.Configuration.SessionStateSection.StateConnectionString%2A&gt; properties are ignored.","pos":[889,1179],"source":" If the <xref:System.Web.Configuration.SessionStateSection.PartitionResolverType%2A> property is specified, the <xref:System.Web.Configuration.SessionStateSection.SqlConnectionString%2A> and <xref:System.Web.Configuration.SessionStateSection.StateConnectionString%2A> properties are ignored."}]},{"pos":[2087,2129],"content":"Initializes the custom partition resolver.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes the custom partition resolver.","pos":[0,42]}]},{"pos":[2141,2607],"content":"Use the Initialize method to provide any initialization code that is needed for your custom partition resolution. The <xref:System.Web.SessionState.SessionStateModule> creates the type implementing the <xref:System.Web.IPartitionResolver> interface, calls the Initialize method to initialize it (once per instance), and then indicates to the ASP.NET state service or SQL Server provider that partitioning is being used and passes a resolver instance to the provider.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the Initialize method to provide any initialization code that is needed for your custom partition resolution. The <xref:System.Web.SessionState.SessionStateModule> creates the type implementing the <xref:System.Web.IPartitionResolver> interface, calls the Initialize method to initialize it (once per instance), and then indicates to the ASP.NET state service or SQL Server provider that partitioning is being used and passes a resolver instance to the provider.","pos":[0,466],"nodes":[{"content":"Use the Initialize method to provide any initialization code that is needed for your custom partition resolution.","pos":[0,113]},{"content":"The &lt;xref:System.Web.SessionState.SessionStateModule&gt; creates the type implementing the &lt;xref:System.Web.IPartitionResolver&gt; interface, calls the Initialize method to initialize it (once per instance), and then indicates to the ASP.NET state service or SQL Server provider that partitioning is being used and passes a resolver instance to the provider.","pos":[114,466],"source":" The <xref:System.Web.SessionState.SessionStateModule> creates the type implementing the <xref:System.Web.IPartitionResolver> interface, calls the Initialize method to initialize it (once per instance), and then indicates to the ASP.NET state service or SQL Server provider that partitioning is being used and passes a resolver instance to the provider."}]}]},{"pos":[3177,3225],"content":"Resolves the partition based on a key parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Resolves the partition based on a key parameter.","pos":[0,48]}]},{"pos":[3237,3502],"content":"The `key` parameter of the ResolvePartition method is the <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> property. The <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> property uniquely identifies a browser with session data on the server.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`key`</ph> parameter of the ResolvePartition method is the &lt;xref:System.Web.SessionState.HttpSessionState.SessionID%2A&gt; property.","pos":[0,128],"source":"The `key` parameter of the ResolvePartition method is the <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> property."},{"content":"The &lt;xref:System.Web.SessionState.HttpSessionState.SessionID%2A&gt; property uniquely identifies a browser with session data on the server.","pos":[129,265],"source":" The <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> property uniquely identifies a browser with session data on the server."}]},{"pos":[3646,3731],"content":"An identifier used to determine which partition to use for the current session state.","needQuote":true,"needEscape":true,"nodes":[{"content":"An identifier used to determine which partition to use for the current session state.","pos":[0,85]}]},{"pos":[3789,3826],"content":"A string with connection information.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string with connection information.","pos":[0,37]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.IPartitionResolver\n  id: IPartitionResolver\n  children:\n  - System.Web.IPartitionResolver.Initialize\n  - System.Web.IPartitionResolver.ResolvePartition(System.Object)\n  langs:\n  - csharp\n  name: IPartitionResolver\n  nameWithType: IPartitionResolver\n  fullName: System.Web.IPartitionResolver\n  type: Interface\n  summary: Defines methods that must be implemented for custom session-state partition resolution.\n  remarks: \"Implement the IPartitionResolver interface and the <xref:System.Web.IPartitionResolver.Initialize%2A> and <xref:System.Web.IPartitionResolver.ResolvePartition%2A> methods, if you are providing custom partition resolution for session-state data across multiple backend nodes when in SQL or state-server mode.  \\n  \\n The session-state management information can be configured in the [sessionState Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) of the configuration file with the `partitionResolverType` attribute. If a value is specified for the `partitionResolverType` attribute, the `sqlConnectionString` and `stateConnectionString` attributes are ignored.  \\n  \\n The partition resolution configuration can also be set programmatically using the <xref:System.Web.Configuration.SessionStateSection.PartitionResolverType%2A> property. If the <xref:System.Web.Configuration.SessionStateSection.PartitionResolverType%2A> property is specified, the <xref:System.Web.Configuration.SessionStateSection.SqlConnectionString%2A> and <xref:System.Web.Configuration.SessionStateSection.StateConnectionString%2A> properties are ignored.\"\n  syntax:\n    content: public interface IPartitionResolver\n  implements: []\n  platform:\n  - net462\n- uid: System.Web.IPartitionResolver.Initialize\n  id: Initialize\n  parent: System.Web.IPartitionResolver\n  langs:\n  - csharp\n  name: Initialize()\n  nameWithType: IPartitionResolver.Initialize()\n  fullName: System.Web.IPartitionResolver.Initialize()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Initializes the custom partition resolver.\n  remarks: Use the Initialize method to provide any initialization code that is needed for your custom partition resolution. The <xref:System.Web.SessionState.SessionStateModule> creates the type implementing the <xref:System.Web.IPartitionResolver> interface, calls the Initialize method to initialize it (once per instance), and then indicates to the ASP.NET state service or SQL Server provider that partitioning is being used and passes a resolver instance to the provider.\n  syntax:\n    content: public void Initialize ();\n    parameters: []\n  overload: System.Web.IPartitionResolver.Initialize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.IPartitionResolver.ResolvePartition(System.Object)\n  id: ResolvePartition(System.Object)\n  parent: System.Web.IPartitionResolver\n  langs:\n  - csharp\n  name: ResolvePartition(Object)\n  nameWithType: IPartitionResolver.ResolvePartition(Object)\n  fullName: System.Web.IPartitionResolver.ResolvePartition(Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Resolves the partition based on a key parameter.\n  remarks: The `key` parameter of the ResolvePartition method is the <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> property. The <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> property uniquely identifies a browser with session data on the server.\n  syntax:\n    content: public string ResolvePartition (object key);\n    parameters:\n    - id: key\n      type: System.Object\n      description: An identifier used to determine which partition to use for the current session state.\n    return:\n      type: System.String\n      description: A string with connection information.\n  overload: System.Web.IPartitionResolver.ResolvePartition*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.IPartitionResolver.Initialize\n  parent: System.Web.IPartitionResolver\n  isExternal: false\n  name: Initialize()\n  nameWithType: IPartitionResolver.Initialize()\n  fullName: System.Web.IPartitionResolver.Initialize()\n- uid: System.Web.IPartitionResolver.ResolvePartition(System.Object)\n  parent: System.Web.IPartitionResolver\n  isExternal: false\n  name: ResolvePartition(Object)\n  nameWithType: IPartitionResolver.ResolvePartition(Object)\n  fullName: System.Web.IPartitionResolver.ResolvePartition(Object)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.IPartitionResolver.Initialize*\n  parent: System.Web.IPartitionResolver\n  isExternal: false\n  name: Initialize\n  nameWithType: IPartitionResolver.Initialize\n- uid: System.Web.IPartitionResolver.ResolvePartition*\n  parent: System.Web.IPartitionResolver\n  isExternal: false\n  name: ResolvePartition\n  nameWithType: IPartitionResolver.ResolvePartition\n"}