{"nodes":[{"pos":[494,526],"content":"Provides a custom bitmap effect.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a custom bitmap effect.","pos":[0,32]}]},{"pos":[538,689],"content":"Derive from the Effect class to implement a custom bitmap effect. In most cases, you will derive from <xref:System.Windows.Media.Effects.ShaderEffect>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Derive from the Effect class to implement a custom bitmap effect. In most cases, you will derive from <xref:System.Windows.Media.Effects.ShaderEffect>.","pos":[0,151],"nodes":[{"content":"Derive from the Effect class to implement a custom bitmap effect.","pos":[0,65]},{"content":"In most cases, you will derive from &lt;xref:System.Windows.Media.Effects.ShaderEffect&gt;.","pos":[66,151],"source":" In most cases, you will derive from <xref:System.Windows.Media.Effects.ShaderEffect>."}]}]},{"pos":[5004,5101],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Effects.Effect\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Media.Effects.Effect\"></xref> class."},{"pos":[5593,5918],"content":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.Effects.Effect\"></xref> object, making deep copies of this object's values. When copying this object's dependency properties, this method copies resource references and data bindings (which may no longer resolve), but not animations or their current values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a modifiable clone of this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Effects.Effect\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object, making deep copies of this object's values.","pos":[0,143],"source":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.Effects.Effect\"></xref> object, making deep copies of this object's values."},{"content":"When copying this object's dependency properties, this method copies resource references and data bindings (which may no longer resolve), but not animations or their current values.","pos":[144,325]}]},{"pos":[5930,6181],"content":"The Clone method can be used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects. For convenience, this method shadows the inherited <xref:System.Windows.Freezable.Clone%2A> method to provide a strongly typed implementation.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Clone method can be used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects. For convenience, this method shadows the inherited <xref:System.Windows.Freezable.Clone%2A> method to provide a strongly typed implementation.","pos":[0,251],"nodes":[{"content":"The Clone method can be used to produce modifiable copies of frozen &lt;xref:System.Windows.Freezable&gt; objects.","pos":[0,108],"source":"The Clone method can be used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects."},{"content":"For convenience, this method shadows the inherited &lt;xref:System.Windows.Freezable.Clone%2A&gt; method to provide a strongly typed implementation.","pos":[109,251],"source":" For convenience, this method shadows the inherited <xref:System.Windows.Freezable.Clone%2A> method to provide a strongly typed implementation."}]}]},{"pos":[6356,6591],"content":"A modifiable clone of this instance. The returned clone is effectively a deep copy of the current object. The clone's <xref:System.Windows.Freezable.IsFrozen*> property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A modifiable clone of this instance.","pos":[0,36]},{"content":"The returned clone is effectively a deep copy of the current object.","pos":[37,105]},{"content":"The clone's &lt;xref:System.Windows.Freezable.IsFrozen*&gt; property is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[106,235],"source":" The clone's <xref:System.Windows.Freezable.IsFrozen*> property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[7080,7335],"content":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.Effects.Effect\"></xref> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are copied.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a modifiable clone of this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Effects.Effect\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object, making deep copies of this object's current values.","pos":[0,151],"source":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.Effects.Effect\"></xref> object, making deep copies of this object's current values."},{"content":"Resource references, data bindings, and animations are not copied, but their current values are copied.","pos":[152,255]}]},{"pos":[7348,7705],"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.       For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.       For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.","pos":[0,355],"nodes":[{"content":"This method is used to produce modifiable copies of frozen &lt;xref:System.Windows.Freezable&gt; objects (or any &lt;xref:System.Windows.Freezable&gt; object).","pos":[0,147],"source":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object)."},{"content":"For convenience, this method shadows the inherited version with a strongly typed implementation.","pos":[148,244]},{"content":"For more information, see &lt;xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName&gt;.","pos":[251,355],"source":"       For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>."}]}]},{"pos":[7893,8214],"content":"A modifiable clone of the current object. The cloned object's <xref:System.Windows.Freezable.IsFrozen*> property will be <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> even if the source's <xref:System.Windows.Freezable.IsFrozen*> property was <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A modifiable clone of the current object.","pos":[0,41]},{"content":"The cloned object's &lt;xref:System.Windows.Freezable.IsFrozen<bpt id=\"p1\">*</bpt>&gt; property will be <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> even if the source's &lt;xref:System.Windows.Freezable.IsFrozen<ept id=\"p1\">*</ept>&gt; property was <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[42,321],"source":" The cloned object's <xref:System.Windows.Freezable.IsFrozen*> property will be <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> even if the source's <xref:System.Windows.Freezable.IsFrozen*> property was <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[8691,8792],"content":"When overridden in a derived class, transforms mouse input and coordinate systems through the effect.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, transforms mouse input and coordinate systems through the effect.","pos":[0,101]}]},{"pos":[8805,9799],"content":"Override the EffectMapping property to assign a transform that differs from the default identity transform.       Input is transformed through the inverse of this transform. The <xref:System.Windows.Media.Visual.TransformToAncestor%2A> and <xref:System.Windows.Media.Visual.TransformToDescendant%2A> methods also have the EffectMapping transform applied.       Incoming points must be in the [0-1] range, and outgoing points must map to the [0-1] range. The <xref:System.Windows.Media.GeneralTransform.Inverse%2A> property must return a <xref:System.Windows.Media.GeneralTransform> that computes the inverse mapping.       The inverse transform maps a point from after the effect is applied to the point that it came from before the effect. The non-inverse transform maps a point from before the effect is applied to after the effect is applied.       Note that the transform does not include information about the physical pixel size being used, and it just operates in the unit range.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Override the EffectMapping property to assign a transform that differs from the default identity transform.       Input is transformed through the inverse of this transform. The <xref:System.Windows.Media.Visual.TransformToAncestor%2A> and <xref:System.Windows.Media.Visual.TransformToDescendant%2A> methods also have the EffectMapping transform applied.       Incoming points must be in the [0-1] range, and outgoing points must map to the [0-1] range. The <xref:System.Windows.Media.GeneralTransform.Inverse%2A> property must return a <xref:System.Windows.Media.GeneralTransform> that computes the inverse mapping.       The inverse transform maps a point from after the effect is applied to the point that it came from before the effect. The non-inverse transform maps a point from before the effect is applied to after the effect is applied.       Note that the transform does not include information about the physical pixel size being used, and it just operates in the unit range.","pos":[0,986],"nodes":[{"content":"Override the EffectMapping property to assign a transform that differs from the default identity transform.","pos":[0,107]},{"content":"Input is transformed through the inverse of this transform.","pos":[114,173]},{"content":"The &lt;xref:System.Windows.Media.Visual.TransformToAncestor%2A&gt; and &lt;xref:System.Windows.Media.Visual.TransformToDescendant%2A&gt; methods also have the EffectMapping transform applied.","pos":[174,354],"source":" The <xref:System.Windows.Media.Visual.TransformToAncestor%2A> and <xref:System.Windows.Media.Visual.TransformToDescendant%2A> methods also have the EffectMapping transform applied."},{"content":"Incoming points must be in the [0-1] range, and outgoing points must map to the [0-1] range.","pos":[361,453]},{"content":"The &lt;xref:System.Windows.Media.GeneralTransform.Inverse%2A&gt; property must return a &lt;xref:System.Windows.Media.GeneralTransform&gt; that computes the inverse mapping.","pos":[454,616],"source":" The <xref:System.Windows.Media.GeneralTransform.Inverse%2A> property must return a <xref:System.Windows.Media.GeneralTransform> that computes the inverse mapping."},{"content":"The inverse transform maps a point from after the effect is applied to the point that it came from before the effect.","pos":[623,740]},{"content":"The non-inverse transform maps a point from before the effect is applied to after the effect is applied.","pos":[741,845]},{"content":"Note that the transform does not include information about the physical pixel size being used, and it just operates in the unit range.","pos":[852,986]}]}]},{"pos":[9984,10046],"content":"The transform to apply. The default is the identity transform.","needQuote":true,"needEscape":true,"nodes":[{"content":"The transform to apply. The default is the identity transform.","pos":[0,62],"nodes":[{"content":"The transform to apply.","pos":[0,23]},{"content":"The default is the identity transform.","pos":[24,62]}]}]},{"pos":[10519,10838],"content":"Gets a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Brush\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that, when it is used as an input for an <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Effects.Effect\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, causes the bitmap of the <bpt id=\"p3\">&lt;xref href=\"System.Windows.UIElement\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> that the <bpt id=\"p4\">&lt;xref href=\"System.Windows.Media.Effects.Effect\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> is applied to be that input.","needQuote":true,"needEscape":true,"source":"Gets a <xref href=\"System.Windows.Media.Brush\"></xref> that, when it is used as an input for an <xref href=\"System.Windows.Media.Effects.Effect\"></xref>, causes the bitmap of the <xref href=\"System.Windows.UIElement\"></xref> that the <xref href=\"System.Windows.Media.Effects.Effect\"></xref> is applied to be that input."},{"pos":[10851,11279],"content":"Use the ImplicitInput property as the value to a Brush-valued input to a <xref:System.Windows.Media.Effects.ShaderEffect>.       The ImplicitInput property represents the shader input that comes from the rendering of the <xref:System.Windows.UIElement> that the <xref:System.Windows.Media.Effects.Effect> is applied to.      > [!NOTE] >  The behavior is undefined when ImplicitInput is used as a Brush in other WPF classes.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the ImplicitInput property as the value to a Brush-valued input to a &lt;xref:System.Windows.Media.Effects.ShaderEffect&gt;.","pos":[0,122],"source":"Use the ImplicitInput property as the value to a Brush-valued input to a <xref:System.Windows.Media.Effects.ShaderEffect>."},{"content":"The ImplicitInput property represents the shader input that comes from the rendering of the &lt;xref:System.Windows.UIElement&gt; that the &lt;xref:System.Windows.Media.Effects.Effect&gt; is applied to.","pos":[129,319],"source":"       The ImplicitInput property represents the shader input that comes from the rendering of the <xref:System.Windows.UIElement> that the <xref:System.Windows.Media.Effects.Effect> is applied to."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The behavior is undefined when ImplicitInput is used as a Brush in other WPF classes.","pos":[325,423],"source":"      > [!NOTE] >  The behavior is undefined when ImplicitInput is used as a Brush in other WPF classes."}]},{"pos":[11438,11513],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Brush\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that acts as the input.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Brush\"></xref> that acts as the input."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.Effects.Effect\n  id: Effect\n  children:\n  - System.Windows.Media.Effects.Effect.#ctor\n  - System.Windows.Media.Effects.Effect.Clone\n  - System.Windows.Media.Effects.Effect.CloneCurrentValue\n  - System.Windows.Media.Effects.Effect.EffectMapping\n  - System.Windows.Media.Effects.Effect.ImplicitInput\n  langs:\n  - csharp\n  name: Effect\n  nameWithType: Effect\n  fullName: System.Windows.Media.Effects.Effect\n  type: Class\n  summary: Provides a custom bitmap effect.\n  remarks: Derive from the Effect class to implement a custom bitmap effect. In most cases, you will derive from <xref:System.Windows.Media.Effects.ShaderEffect>.\n  syntax:\n    content: 'public abstract class Effect : System.Windows.Media.Animation.Animatable'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Freezable\n  - System.Windows.Media.Animation.Animatable\n  implements: []\n  inheritedMembers:\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.Freezable.CanFreeze\n  - System.Windows.Freezable.Changed\n  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CreateInstance\n  - System.Windows.Freezable.CreateInstanceCore\n  - System.Windows.Freezable.Freeze\n  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  - System.Windows.Freezable.GetAsFrozen\n  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.GetCurrentValueAsFrozen\n  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.IsFrozen\n  - System.Windows.Freezable.OnChanged\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.Freezable.ReadPreamble\n  - System.Windows.Freezable.WritePostscript\n  - System.Windows.Freezable.WritePreamble\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)\n  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  platform:\n  - net462\n- uid: System.Windows.Media.Effects.Effect.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.Effects.Effect\n  langs:\n  - csharp\n  name: Effect()\n  nameWithType: Effect.Effect()\n  fullName: System.Windows.Media.Effects.Effect.Effect()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Media.Effects.Effect\"></xref> class.\n  syntax:\n    content: protected Effect ();\n    parameters: []\n  overload: System.Windows.Media.Effects.Effect.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Effects.Effect.Clone\n  id: Clone\n  parent: System.Windows.Media.Effects.Effect\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: Effect.Clone()\n  fullName: System.Windows.Media.Effects.Effect.Clone()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  summary: Creates a modifiable clone of this <xref href=\"System.Windows.Media.Effects.Effect\"></xref> object, making deep copies of this object's values. When copying this object's dependency properties, this method copies resource references and data bindings (which may no longer resolve), but not animations or their current values.\n  remarks: The Clone method can be used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects. For convenience, this method shadows the inherited <xref:System.Windows.Freezable.Clone%2A> method to provide a strongly typed implementation.\n  syntax:\n    content: public System.Windows.Media.Effects.Effect Clone ();\n    parameters: []\n    return:\n      type: System.Windows.Media.Effects.Effect\n      description: A modifiable clone of this instance. The returned clone is effectively a deep copy of the current object. The clone's <xref:System.Windows.Freezable.IsFrozen*> property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.Effects.Effect.Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Effects.Effect.CloneCurrentValue\n  id: CloneCurrentValue\n  parent: System.Windows.Media.Effects.Effect\n  langs:\n  - csharp\n  name: CloneCurrentValue()\n  nameWithType: Effect.CloneCurrentValue()\n  fullName: System.Windows.Media.Effects.Effect.CloneCurrentValue()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  summary: Creates a modifiable clone of this <xref href=\"System.Windows.Media.Effects.Effect\"></xref> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are copied.\n  remarks: \"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.  \\n  \\n For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.\"\n  syntax:\n    content: public System.Windows.Media.Effects.Effect CloneCurrentValue ();\n    parameters: []\n    return:\n      type: System.Windows.Media.Effects.Effect\n      description: A modifiable clone of the current object. The cloned object's <xref:System.Windows.Freezable.IsFrozen*> property will be <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> even if the source's <xref:System.Windows.Freezable.IsFrozen*> property was <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Windows.Media.Effects.Effect.CloneCurrentValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Effects.Effect.EffectMapping\n  id: EffectMapping\n  parent: System.Windows.Media.Effects.Effect\n  langs:\n  - csharp\n  name: EffectMapping\n  nameWithType: Effect.EffectMapping\n  fullName: System.Windows.Media.Effects.Effect.EffectMapping\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  summary: When overridden in a derived class, transforms mouse input and coordinate systems through the effect.\n  remarks: \"Override the EffectMapping property to assign a transform that differs from the default identity transform.  \\n  \\n Input is transformed through the inverse of this transform. The <xref:System.Windows.Media.Visual.TransformToAncestor%2A> and <xref:System.Windows.Media.Visual.TransformToDescendant%2A> methods also have the EffectMapping transform applied.  \\n  \\n Incoming points must be in the [0-1] range, and outgoing points must map to the [0-1] range. The <xref:System.Windows.Media.GeneralTransform.Inverse%2A> property must return a <xref:System.Windows.Media.GeneralTransform> that computes the inverse mapping.  \\n  \\n The inverse transform maps a point from after the effect is applied to the point that it came from before the effect. The non-inverse transform maps a point from before the effect is applied to after the effect is applied.  \\n  \\n Note that the transform does not include information about the physical pixel size being used, and it just operates in the unit range.\"\n  syntax:\n    content: protected virtual System.Windows.Media.GeneralTransform EffectMapping { get; }\n    return:\n      type: System.Windows.Media.GeneralTransform\n      description: The transform to apply. The default is the identity transform.\n  overload: System.Windows.Media.Effects.Effect.EffectMapping*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Effects.Effect.ImplicitInput\n  id: ImplicitInput\n  parent: System.Windows.Media.Effects.Effect\n  langs:\n  - csharp\n  name: ImplicitInput\n  nameWithType: Effect.ImplicitInput\n  fullName: System.Windows.Media.Effects.Effect.ImplicitInput\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  summary: Gets a <xref href=\"System.Windows.Media.Brush\"></xref> that, when it is used as an input for an <xref href=\"System.Windows.Media.Effects.Effect\"></xref>, causes the bitmap of the <xref href=\"System.Windows.UIElement\"></xref> that the <xref href=\"System.Windows.Media.Effects.Effect\"></xref> is applied to be that input.\n  remarks: \"Use the ImplicitInput property as the value to a Brush-valued input to a <xref:System.Windows.Media.Effects.ShaderEffect>.  \\n  \\n The ImplicitInput property represents the shader input that comes from the rendering of the <xref:System.Windows.UIElement> that the <xref:System.Windows.Media.Effects.Effect> is applied to.  \\n  \\n> [!NOTE]\\n>  The behavior is undefined when ImplicitInput is used as a Brush in other WPF classes.\"\n  syntax:\n    content: public static System.Windows.Media.Brush ImplicitInput { get; }\n    return:\n      type: System.Windows.Media.Brush\n      description: The <xref href=\"System.Windows.Media.Brush\"></xref> that acts as the input.\n  overload: System.Windows.Media.Effects.Effect.ImplicitInput*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: System.Windows.Media.Animation.Animatable\n- uid: System.Windows.Media.Effects.Effect.#ctor\n  parent: System.Windows.Media.Effects.Effect\n  isExternal: false\n  name: Effect()\n  nameWithType: Effect.Effect()\n  fullName: System.Windows.Media.Effects.Effect.Effect()\n- uid: System.Windows.Media.Effects.Effect.Clone\n  parent: System.Windows.Media.Effects.Effect\n  isExternal: false\n  name: Clone()\n  nameWithType: Effect.Clone()\n  fullName: System.Windows.Media.Effects.Effect.Clone()\n- uid: System.Windows.Media.Effects.Effect\n  parent: System.Windows.Media.Effects\n  isExternal: false\n  name: Effect\n  nameWithType: Effect\n  fullName: System.Windows.Media.Effects.Effect\n- uid: System.Windows.Media.Effects.Effect.CloneCurrentValue\n  parent: System.Windows.Media.Effects.Effect\n  isExternal: false\n  name: CloneCurrentValue()\n  nameWithType: Effect.CloneCurrentValue()\n  fullName: System.Windows.Media.Effects.Effect.CloneCurrentValue()\n- uid: System.Windows.Media.Effects.Effect.EffectMapping\n  parent: System.Windows.Media.Effects.Effect\n  isExternal: false\n  name: EffectMapping\n  nameWithType: Effect.EffectMapping\n  fullName: System.Windows.Media.Effects.Effect.EffectMapping\n- uid: System.Windows.Media.GeneralTransform\n  parent: System.Windows.Media\n  isExternal: false\n  name: GeneralTransform\n  nameWithType: GeneralTransform\n  fullName: System.Windows.Media.GeneralTransform\n- uid: System.Windows.Media.Effects.Effect.ImplicitInput\n  parent: System.Windows.Media.Effects.Effect\n  isExternal: false\n  name: ImplicitInput\n  nameWithType: Effect.ImplicitInput\n  fullName: System.Windows.Media.Effects.Effect.ImplicitInput\n- uid: System.Windows.Media.Brush\n  parent: System.Windows.Media\n  isExternal: false\n  name: Brush\n  nameWithType: Brush\n  fullName: System.Windows.Media.Brush\n- uid: System.Windows.Media.Effects.Effect.#ctor*\n  parent: System.Windows.Media.Effects.Effect\n  isExternal: false\n  name: Effect\n  nameWithType: Effect.Effect\n- uid: System.Windows.Media.Effects.Effect.Clone*\n  parent: System.Windows.Media.Effects.Effect\n  isExternal: false\n  name: Clone\n  nameWithType: Effect.Clone\n- uid: System.Windows.Media.Effects.Effect.CloneCurrentValue*\n  parent: System.Windows.Media.Effects.Effect\n  isExternal: false\n  name: CloneCurrentValue\n  nameWithType: Effect.CloneCurrentValue\n- uid: System.Windows.Media.Effects.Effect.EffectMapping*\n  parent: System.Windows.Media.Effects.Effect\n  isExternal: false\n  name: EffectMapping\n  nameWithType: Effect.EffectMapping\n- uid: System.Windows.Media.Effects.Effect.ImplicitInput*\n  parent: System.Windows.Media.Effects.Effect\n  isExternal: false\n  name: ImplicitInput\n  nameWithType: Effect.ImplicitInput\n"}