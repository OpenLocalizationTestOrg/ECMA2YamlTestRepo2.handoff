{"nodes":[{"pos":[640,652],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[1165,1177],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[1891,1903],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2504,2516],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3195,3207],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3888,3900],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualC.StlClr.Generic.INode`1\n  id: INode`1\n  children:\n  - Microsoft.VisualC.StlClr.Generic.INode`1._Value\n  - Microsoft.VisualC.StlClr.Generic.INode`1.container\n  - Microsoft.VisualC.StlClr.Generic.INode`1.is_head\n  - Microsoft.VisualC.StlClr.Generic.INode`1.next_node\n  - Microsoft.VisualC.StlClr.Generic.INode`1.prev_node\n  langs:\n  - csharp\n  name: INode<TValue>\n  nameWithType: INode<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.INode<TValue>\n  type: Interface\n  syntax:\n    content: public interface INode<TValue>\n    typeParameters:\n    - id: TValue\n      description: To be added.\n  implements: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.INode`1._Value\n  id: _Value\n  parent: Microsoft.VisualC.StlClr.Generic.INode`1\n  langs:\n  - csharp\n  name: _Value\n  nameWithType: INode<TValue>._Value\n  fullName: Microsoft.VisualC.StlClr.Generic.INode<TValue>._Value\n  type: Property\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public TValue _Value { get; set; }\n    return:\n      type: TValue@\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.INode`1._Value*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.INode`1.container\n  id: container\n  parent: Microsoft.VisualC.StlClr.Generic.INode`1\n  langs:\n  - csharp\n  name: container()\n  nameWithType: INode<TValue>.container()\n  fullName: Microsoft.VisualC.StlClr.Generic.INode<TValue>.container()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer<TValue> container ();\n    parameters: []\n    return:\n      type: Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.INode`1.container*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.INode`1.is_head\n  id: is_head\n  parent: Microsoft.VisualC.StlClr.Generic.INode`1\n  langs:\n  - csharp\n  name: is_head()\n  nameWithType: INode<TValue>.is_head()\n  fullName: Microsoft.VisualC.StlClr.Generic.INode<TValue>.is_head()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool is_head ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.INode`1.is_head*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.INode`1.next_node\n  id: next_node\n  parent: Microsoft.VisualC.StlClr.Generic.INode`1\n  langs:\n  - csharp\n  name: next_node()\n  nameWithType: INode<TValue>.next_node()\n  fullName: Microsoft.VisualC.StlClr.Generic.INode<TValue>.next_node()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Microsoft.VisualC.StlClr.Generic.INode<TValue> next_node ();\n    parameters: []\n    return:\n      type: Microsoft.VisualC.StlClr.Generic.INode`1\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.INode`1.next_node*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.INode`1.prev_node\n  id: prev_node\n  parent: Microsoft.VisualC.StlClr.Generic.INode`1\n  langs:\n  - csharp\n  name: prev_node()\n  nameWithType: INode<TValue>.prev_node()\n  fullName: Microsoft.VisualC.StlClr.Generic.INode<TValue>.prev_node()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Microsoft.VisualC.StlClr.Generic.INode<TValue> prev_node ();\n    parameters: []\n    return:\n      type: Microsoft.VisualC.StlClr.Generic.INode`1\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.INode`1.prev_node*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: Microsoft.VisualC.StlClr.Generic.INode`1._Value\n  parent: Microsoft.VisualC.StlClr.Generic.INode`1\n  isExternal: false\n  name: _Value\n  nameWithType: INode<TValue>._Value\n  fullName: Microsoft.VisualC.StlClr.Generic.INode<TValue>._Value\n- uid: Microsoft.VisualC.StlClr.Generic.INode`1.container\n  parent: Microsoft.VisualC.StlClr.Generic.INode`1\n  isExternal: false\n  name: container()\n  nameWithType: INode<TValue>.container()\n  fullName: Microsoft.VisualC.StlClr.Generic.INode<TValue>.container()\n- uid: Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IBidirectionalContainer<TValue>\n  nameWithType: IBidirectionalContainer<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.INode`1.is_head\n  parent: Microsoft.VisualC.StlClr.Generic.INode`1\n  isExternal: false\n  name: is_head()\n  nameWithType: INode<TValue>.is_head()\n  fullName: Microsoft.VisualC.StlClr.Generic.INode<TValue>.is_head()\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.INode`1.next_node\n  parent: Microsoft.VisualC.StlClr.Generic.INode`1\n  isExternal: false\n  name: next_node()\n  nameWithType: INode<TValue>.next_node()\n  fullName: Microsoft.VisualC.StlClr.Generic.INode<TValue>.next_node()\n- uid: Microsoft.VisualC.StlClr.Generic.INode`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: INode<TValue>\n  nameWithType: INode<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.INode<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.INode`1.prev_node\n  parent: Microsoft.VisualC.StlClr.Generic.INode`1\n  isExternal: false\n  name: prev_node()\n  nameWithType: INode<TValue>.prev_node()\n  fullName: Microsoft.VisualC.StlClr.Generic.INode<TValue>.prev_node()\n- uid: Microsoft.VisualC.StlClr.Generic.INode`1._Value*\n  parent: Microsoft.VisualC.StlClr.Generic.INode`1\n  isExternal: false\n  name: _Value\n  nameWithType: INode<TValue>._Value\n- uid: Microsoft.VisualC.StlClr.Generic.INode`1.container*\n  parent: Microsoft.VisualC.StlClr.Generic.INode`1\n  isExternal: false\n  name: container\n  nameWithType: INode<TValue>.container\n- uid: Microsoft.VisualC.StlClr.Generic.INode`1.is_head*\n  parent: Microsoft.VisualC.StlClr.Generic.INode`1\n  isExternal: false\n  name: is_head\n  nameWithType: INode<TValue>.is_head\n- uid: Microsoft.VisualC.StlClr.Generic.INode`1.next_node*\n  parent: Microsoft.VisualC.StlClr.Generic.INode`1\n  isExternal: false\n  name: next_node\n  nameWithType: INode<TValue>.next_node\n- uid: Microsoft.VisualC.StlClr.Generic.INode`1.prev_node*\n  parent: Microsoft.VisualC.StlClr.Generic.INode`1\n  isExternal: false\n  name: prev_node\n  nameWithType: INode<TValue>.prev_node\n"}