{"nodes":[{"pos":[596,763],"content":"Provides a callback mechanism for the assembly converter to inform the caller of the status of the conversion, and involve the caller in the conversion process itself.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a callback mechanism for the assembly converter to inform the caller of the status of the conversion, and involve the caller in the conversion process itself.","pos":[0,167]}]},{"pos":[775,868],"content":"This interface is used in the process of converting a managed assembly to a COM type library.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This interface is used in the process of converting a managed assembly to a COM type library.","pos":[0,93]}]},{"pos":[1937,2016],"content":"Notifies the caller that an event occured during the conversion of an assembly.","needQuote":true,"needEscape":true,"nodes":[{"content":"Notifies the caller that an event occured during the conversion of an assembly.","pos":[0,79]}]},{"pos":[2028,2166],"content":"If the event being reported is a warning or an error, `eventCode` will contain the HRESULT of the error. For any other event it will be 0.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the event being reported is a warning or an error, <ph id=\"ph1\">`eventCode`</ph> will contain the HRESULT of the error.","pos":[0,104],"source":"If the event being reported is a warning or an error, `eventCode` will contain the HRESULT of the error."},{"content":"For any other event it will be 0.","pos":[105,138]}]},{"pos":[2424,2532],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Runtime.InteropServices.ExporterEventKind\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value indicating the type of event.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Runtime.InteropServices.ExporterEventKind\"></xref> value indicating the type of event."},{"pos":[2597,2641],"content":"Indicates extra information about the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates extra information about the event.","pos":[0,44]}]},{"pos":[2706,2739],"content":"A message generated by the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"A message generated by the event.","pos":[0,33]}]},{"pos":[3381,3438],"content":"Asks the user to resolve a reference to another assembly.","needQuote":true,"needEscape":true,"nodes":[{"content":"Asks the user to resolve a reference to another assembly.","pos":[0,57]}]},{"pos":[3450,3655],"content":"If a reference to another assembly is found during the conversion of an assembly, the caller is asked to return the correct type library (the object that implements <ph id=\"ph1\">`ITypeLib`</ph> interface) for that assembly.","needQuote":true,"needEscape":true,"extradata":"MT","source":"If a reference to another assembly is found during the conversion of an assembly, the caller is asked to return the correct type library (the object that implements `ITypeLib` interface) for that assembly."},{"pos":[3836,3860],"content":"The assembly to resolve.","needQuote":true,"needEscape":true,"nodes":[{"content":"The assembly to resolve.","pos":[0,24]}]},{"pos":[3918,3961],"content":"The type library for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">assembly</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The type library for <code>assembly</code>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.InteropServices.ITypeLibExporterNotifySink\n  id: ITypeLibExporterNotifySink\n  children:\n  - System.Runtime.InteropServices.ITypeLibExporterNotifySink.ReportEvent(System.Runtime.InteropServices.ExporterEventKind,System.Int32,System.String)\n  - System.Runtime.InteropServices.ITypeLibExporterNotifySink.ResolveRef(System.Reflection.Assembly)\n  langs:\n  - csharp\n  name: ITypeLibExporterNotifySink\n  nameWithType: ITypeLibExporterNotifySink\n  fullName: System.Runtime.InteropServices.ITypeLibExporterNotifySink\n  type: Interface\n  summary: Provides a callback mechanism for the assembly converter to inform the caller of the status of the conversion, and involve the caller in the conversion process itself.\n  remarks: This interface is used in the process of converting a managed assembly to a COM type library.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      [System.Runtime.InteropServices.Guid(\"F1C3BF77-C3E4-11d3-88E7-00902754C43A\")]\n\n      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]\n\n      public interface ITypeLibExporterNotifySink\n  implements: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.ITypeLibExporterNotifySink.ReportEvent(System.Runtime.InteropServices.ExporterEventKind,System.Int32,System.String)\n  id: ReportEvent(System.Runtime.InteropServices.ExporterEventKind,System.Int32,System.String)\n  parent: System.Runtime.InteropServices.ITypeLibExporterNotifySink\n  langs:\n  - csharp\n  name: ReportEvent(ExporterEventKind,Int32,String)\n  nameWithType: ITypeLibExporterNotifySink.ReportEvent(ExporterEventKind,Int32,String)\n  fullName: System.Runtime.InteropServices.ITypeLibExporterNotifySink.ReportEvent(ExporterEventKind,Int32,String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Notifies the caller that an event occured during the conversion of an assembly.\n  remarks: If the event being reported is a warning or an error, `eventCode` will contain the HRESULT of the error. For any other event it will be 0.\n  syntax:\n    content: public void ReportEvent (System.Runtime.InteropServices.ExporterEventKind eventKind, int eventCode, string eventMsg);\n    parameters:\n    - id: eventKind\n      type: System.Runtime.InteropServices.ExporterEventKind\n      description: An <xref href=\"System.Runtime.InteropServices.ExporterEventKind\"></xref> value indicating the type of event.\n    - id: eventCode\n      type: System.Int32\n      description: Indicates extra information about the event.\n    - id: eventMsg\n      type: System.String\n      description: A message generated by the event.\n  overload: System.Runtime.InteropServices.ITypeLibExporterNotifySink.ReportEvent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.ITypeLibExporterNotifySink.ResolveRef(System.Reflection.Assembly)\n  id: ResolveRef(System.Reflection.Assembly)\n  parent: System.Runtime.InteropServices.ITypeLibExporterNotifySink\n  langs:\n  - csharp\n  name: ResolveRef(Assembly)\n  nameWithType: ITypeLibExporterNotifySink.ResolveRef(Assembly)\n  fullName: System.Runtime.InteropServices.ITypeLibExporterNotifySink.ResolveRef(Assembly)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Asks the user to resolve a reference to another assembly.\n  remarks: If a reference to another assembly is found during the conversion of an assembly, the caller is asked to return the correct type library (the object that implements `ITypeLib` interface) for that assembly.\n  syntax:\n    content: public object ResolveRef (System.Reflection.Assembly assembly);\n    parameters:\n    - id: assembly\n      type: System.Reflection.Assembly\n      description: The assembly to resolve.\n    return:\n      type: System.Object\n      description: The type library for <code>assembly</code>.\n  overload: System.Runtime.InteropServices.ITypeLibExporterNotifySink.ResolveRef*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Runtime.InteropServices.ITypeLibExporterNotifySink.ReportEvent(System.Runtime.InteropServices.ExporterEventKind,System.Int32,System.String)\n  parent: System.Runtime.InteropServices.ITypeLibExporterNotifySink\n  isExternal: false\n  name: ReportEvent(ExporterEventKind,Int32,String)\n  nameWithType: ITypeLibExporterNotifySink.ReportEvent(ExporterEventKind,Int32,String)\n  fullName: System.Runtime.InteropServices.ITypeLibExporterNotifySink.ReportEvent(ExporterEventKind,Int32,String)\n- uid: System.Runtime.InteropServices.ExporterEventKind\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: ExporterEventKind\n  nameWithType: ExporterEventKind\n  fullName: System.Runtime.InteropServices.ExporterEventKind\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.InteropServices.ITypeLibExporterNotifySink.ResolveRef(System.Reflection.Assembly)\n  parent: System.Runtime.InteropServices.ITypeLibExporterNotifySink\n  isExternal: false\n  name: ResolveRef(Assembly)\n  nameWithType: ITypeLibExporterNotifySink.ResolveRef(Assembly)\n  fullName: System.Runtime.InteropServices.ITypeLibExporterNotifySink.ResolveRef(Assembly)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: true\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Runtime.InteropServices.ITypeLibExporterNotifySink.ReportEvent*\n  parent: System.Runtime.InteropServices.ITypeLibExporterNotifySink\n  isExternal: false\n  name: ReportEvent\n  nameWithType: ITypeLibExporterNotifySink.ReportEvent\n- uid: System.Runtime.InteropServices.ITypeLibExporterNotifySink.ResolveRef*\n  parent: System.Runtime.InteropServices.ITypeLibExporterNotifySink\n  isExternal: false\n  name: ResolveRef\n  nameWithType: ITypeLibExporterNotifySink.ResolveRef\n"}