{"nodes":[{"pos":[546,626],"content":"Defines the interface required to process messages from duplex session channels.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines the interface required to process messages from duplex session channels.","pos":[0,80]}]},{"pos":[639,714],"content":"This contract has the following settings:      -   Sessions are required.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This contract has the following settings:      -   Sessions are required.","pos":[0,73]}]},{"pos":[1761,1814],"content":"Initiates the asynchronous processing of the message.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initiates the asynchronous processing of the message.","pos":[0,53]}]},{"pos":[2066,2094],"content":"The message to be processed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The message to be processed.","pos":[0,28]}]},{"pos":[2166,2258],"content":"An asynchronous callback delegate that is invoked when the message processing has completed.","needQuote":true,"needEscape":true,"nodes":[{"content":"An asynchronous callback delegate that is invoked when the message processing has completed.","pos":[0,92]}]},{"pos":[2320,2389],"content":"A user-defined state object that is passed to the callback procedure.","needQuote":true,"needEscape":true,"nodes":[{"content":"A user-defined state object that is passed to the callback procedure.","pos":[0,69]}]},{"pos":[2453,2648],"content":"An asynchronous result that can be used to poll or wait for results, or both; this value is also required when invoking <xref:System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An asynchronous result that can be used to poll or wait for results, or both; this value is also required when invoking &lt;xref:System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage*&gt;.","pos":[0,195],"source":"An asynchronous result that can be used to poll or wait for results, or both; this value is also required when invoking <xref:System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage*>."}]},{"pos":[3305,3359],"content":"Finishes asynchronous execution of message processing.","needQuote":true,"needEscape":true,"nodes":[{"content":"Finishes asynchronous execution of message processing.","pos":[0,54]}]},{"pos":[3520,3645],"content":"The asynchronous result returned by the call to <xref:System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The asynchronous result returned by the call to &lt;xref:System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage*&gt;.","pos":[0,125],"source":"The asynchronous result returned by the call to <xref:System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage*>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Routing.IDuplexSessionRouter\n  id: IDuplexSessionRouter\n  children:\n  - System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage(System.IAsyncResult)\n  langs:\n  - csharp\n  name: IDuplexSessionRouter\n  nameWithType: IDuplexSessionRouter\n  fullName: System.ServiceModel.Routing.IDuplexSessionRouter\n  type: Interface\n  summary: Defines the interface required to process messages from duplex session channels.\n  remarks: \"This contract has the following settings:  \\n  \\n-   Sessions are required.\"\n  syntax:\n    content: >-\n      [System.ServiceModel.ServiceContract(CallbackContract=typeof(System.ServiceModel.Routing.IDuplexRouterCallback), Namespace=\"http://schemas.microsoft.com/netfx/2009/05/routing\", SessionMode=System.ServiceModel.SessionMode.Required)]\n\n      public interface IDuplexSessionRouter\n  implements: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  id: BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Routing.IDuplexSessionRouter\n  langs:\n  - csharp\n  name: BeginProcessMessage(Message,AsyncCallback,Object)\n  nameWithType: IDuplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)\n  fullName: System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing\n  summary: Initiates the asynchronous processing of the message.\n  syntax:\n    content: public IAsyncResult BeginProcessMessage (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: The message to be processed.\n    - id: callback\n      type: System.AsyncCallback\n      description: An asynchronous callback delegate that is invoked when the message processing has completed.\n    - id: state\n      type: System.Object\n      description: A user-defined state object that is passed to the callback procedure.\n    return:\n      type: System.IAsyncResult\n      description: An asynchronous result that can be used to poll or wait for results, or both; this value is also required when invoking <xref:System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage*>.\n  overload: System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage(System.IAsyncResult)\n  id: EndProcessMessage(System.IAsyncResult)\n  parent: System.ServiceModel.Routing.IDuplexSessionRouter\n  langs:\n  - csharp\n  name: EndProcessMessage(IAsyncResult)\n  nameWithType: IDuplexSessionRouter.EndProcessMessage(IAsyncResult)\n  fullName: System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing\n  summary: Finishes asynchronous execution of message processing.\n  syntax:\n    content: public void EndProcessMessage (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The asynchronous result returned by the call to <xref:System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage*>.\n  overload: System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Routing.IDuplexSessionRouter\n  isExternal: false\n  name: BeginProcessMessage(Message,AsyncCallback,Object)\n  nameWithType: IDuplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)\n  fullName: System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: true\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.ServiceModel.Channels.Message\n  parent: System.ServiceModel.Channels\n  isExternal: true\n  name: Message\n  nameWithType: Message\n  fullName: System.ServiceModel.Channels.Message\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: true\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage(System.IAsyncResult)\n  parent: System.ServiceModel.Routing.IDuplexSessionRouter\n  isExternal: false\n  name: EndProcessMessage(IAsyncResult)\n  nameWithType: IDuplexSessionRouter.EndProcessMessage(IAsyncResult)\n  fullName: System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage(IAsyncResult)\n- uid: System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage*\n  parent: System.ServiceModel.Routing.IDuplexSessionRouter\n  isExternal: false\n  name: BeginProcessMessage\n  nameWithType: IDuplexSessionRouter.BeginProcessMessage\n- uid: System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage*\n  parent: System.ServiceModel.Routing.IDuplexSessionRouter\n  isExternal: false\n  name: EndProcessMessage\n  nameWithType: IDuplexSessionRouter.EndProcessMessage\n"}