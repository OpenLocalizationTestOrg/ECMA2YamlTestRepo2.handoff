{"nodes":[{"pos":[898,929],"content":"Authenticates a security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Authenticates a security token.","pos":[0,31]}]},{"pos":[942,2215],"content":"The SecurityTokenAuthenticator class and the classes that derive from it authenticate security tokens. Typically, you would only derive a class directly from SecurityTokenAuthenticator when you create a custom security token. If you wanted to override the default authentication or authorization behaviors for built-in security tokens, derive from one of the classes that derive from SecurityTokenAuthenticator, such as <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator>.       When you derive a class from SecurityTokenAuthenticator, override the following two methods: <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A>. The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> method determines whether this security token authenticator can authenticate a specific security token. The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> method authenticates the security token and establishes a set of authorization policies for authorization. The authorization policies map the claims found in the security token to claims required by the application.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The SecurityTokenAuthenticator class and the classes that derive from it authenticate security tokens. Typically, you would only derive a class directly from SecurityTokenAuthenticator when you create a custom security token. If you wanted to override the default authentication or authorization behaviors for built-in security tokens, derive from one of the classes that derive from SecurityTokenAuthenticator, such as <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator>.       When you derive a class from SecurityTokenAuthenticator, override the following two methods: <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A>. The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> method determines whether this security token authenticator can authenticate a specific security token. The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> method authenticates the security token and establishes a set of authorization policies for authorization. The authorization policies map the claims found in the security token to claims required by the application.","pos":[0,1271],"nodes":[{"content":"The SecurityTokenAuthenticator class and the classes that derive from it authenticate security tokens.","pos":[0,102]},{"content":"Typically, you would only derive a class directly from SecurityTokenAuthenticator when you create a custom security token.","pos":[103,225]},{"content":"If you wanted to override the default authentication or authorization behaviors for built-in security tokens, derive from one of the classes that derive from SecurityTokenAuthenticator, such as &lt;xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator&gt;.","pos":[226,489],"source":" If you wanted to override the default authentication or authorization behaviors for built-in security tokens, derive from one of the classes that derive from SecurityTokenAuthenticator, such as <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator>."},{"content":"When you derive a class from SecurityTokenAuthenticator, override the following two methods: &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt; and &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;.","pos":[496,768],"source":"       When you derive a class from SecurityTokenAuthenticator, override the following two methods: <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A>."},{"content":"The &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt; method determines whether this security token authenticator can authenticate a specific security token.","pos":[769,965],"source":" The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> method determines whether this security token authenticator can authenticate a specific security token."},{"content":"The &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt; method authenticates the security token and establishes a set of authorization policies for authorization.","pos":[966,1162],"source":" The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> method authenticates the security token and establishes a set of authorization policies for authorization."},{"content":"The authorization policies map the claims found in the security token to claims required by the application.","pos":[1163,1271]}]}]},{"pos":[2880,2999],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenAuthenticator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.SecurityTokenAuthenticator\"></xref> class."},{"pos":[3805,3920],"content":"Gets a value indicating whether the specified security token can be validated by this security token authenticator.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the specified security token can be validated by this security token authenticator.","pos":[0,115]}]},{"pos":[3932,4228],"content":"The CanValidateToken method checks whether the token parameter is <ph id=\"ph1\">`null`</ph> and then calls the &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt; method to determine whether this security token authenticator can authenticate the security token type for <ph id=\"ph2\">`token`</ph>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The CanValidateToken method checks whether the token parameter is `null` and then calls the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> method to determine whether this security token authenticator can authenticate the security token type for `token`."},{"pos":[4437,4520],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to be validated.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated."},{"pos":[4579,4743],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> when token can be validated; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when token can be validated; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[4948,5031],"content":"<ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>token</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[5680,5831],"content":"When overridden in a derived class, gets a value indicating whether the specified security token can be validated by this security token authenticator.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, gets a value indicating whether the specified security token can be validated by this security token authenticator.","pos":[0,151]}]},{"pos":[5843,6254],"content":"The CanValidateTokenCore method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A> method to determine whether this security token authenticator can authenticate the security token type for `token`. This does not authenticate the security token; that is performed by the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The CanValidateTokenCore method is called by the &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A&gt; method to determine whether this security token authenticator can authenticate the security token type for <ph id=\"ph1\">`token`</ph>.","pos":[0,249],"source":"The CanValidateTokenCore method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A> method to determine whether this security token authenticator can authenticate the security token type for `token`."},{"content":"This does not authenticate the security token; that is performed by the &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A&gt; method.","pos":[250,411],"source":" This does not authenticate the security token; that is performed by the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A> method."}]},{"pos":[6479,6562],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to be validated.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated."},{"pos":[6621,6798],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> when <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">token</ph><ept id=\"p2\">&lt;/code&gt;</ept> can be validated; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when <code>token</code> can be validated; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7521,7633],"content":"Authenticates the specified security token and returns the set of authorization policies for the security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Authenticates the specified security token and returns the set of authorization policies for the security token.","pos":[0,112]}]},{"pos":[7645,8031],"content":"The ValidateToken method checks whether the <ph id=\"ph1\">`token`</ph> parameter is <ph id=\"ph2\">`null`</ph>, calls the &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A&gt; method to determine if this security token authenticator can authenticate this security token, and then if it can, calls the &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt; method.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The ValidateToken method checks whether the `token` parameter is `null`, calls the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A> method to determine if this security token authenticator can authenticate this security token, and then if it can, calls the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> method."},{"pos":[8332,8415],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to be validated.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated."},{"pos":[8559,8785],"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id=\"ph2\">&amp;gt;</ph> of type <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the set of authorization policies in effect for this application.","needQuote":true,"needEscape":true,"source":"A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the set of authorization policies in effect for this application."},{"pos":[8987,9070],"content":"<ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>token</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[9238,9379],"content":"<ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> cannot be authenticated by this security token authenticator       -or-       <ph id=\"ph2\">&lt;code&gt;token&lt;/code&gt;</ph> is not authenticated.","needQuote":false,"needEscape":true,"source":"<code>token</code> cannot be authenticated by this security token authenticator       -or-       <code>token</code> is not authenticated."},{"pos":[10014,10162],"content":"When overridden in a derived class, authenticates the specified security token and returns the set of authorization policies for the security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, authenticates the specified security token and returns the set of authorization policies for the security token.","pos":[0,148]}]},{"pos":[10175,11081],"content":"Override the ValidateTokenCore method to authenticate a specific security token type.       When the ValidateTokenCore method is overridden, follow these guidelines:      -   When the security token passed into the `token` parameter cannot be validated, throw the <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception.      -   When there are no authorization policies in effect for this application, return an empty <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of type <xref:System.IdentityModel.Policy.IAuthorizationPolicy>.       When `null` is returned by this method, [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] throws the <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception.       The ValidateTokenCore method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A> method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Override the ValidateTokenCore method to authenticate a specific security token type.","pos":[0,85]},{"content":"When the ValidateTokenCore method is overridden, follow these guidelines:      -   When the security token passed into the <ph id=\"ph1\">`token`</ph> parameter cannot be validated, throw the &lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt; exception.","pos":[92,342],"source":"       When the ValidateTokenCore method is overridden, follow these guidelines:      -   When the security token passed into the `token` parameter cannot be validated, throw the <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception."},{"content":"-   When there are no authorization policies in effect for this application, return an empty &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of type &lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;.","pos":[348,566],"source":"      -   When there are no authorization policies in effect for this application, return an empty <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of type <xref:System.IdentityModel.Policy.IAuthorizationPolicy>."},{"content":"When <ph id=\"ph1\">`null`</ph> is returned by this method, <ph id=\"ph2\">[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]</ph> throws the &lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt; exception.","pos":[573,754],"source":"       When `null` is returned by this method, [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] throws the <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception."},{"content":"The ValidateTokenCore method is called by the &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A&gt; method.","pos":[761,896],"source":"       The ValidateTokenCore method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A> method."}]},{"pos":[11399,11482],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to be validated.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated."},{"pos":[11626,11852],"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id=\"ph2\">&amp;gt;</ph> of type <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the set of authorization policies in effect for this application.","needQuote":true,"needEscape":true,"source":"A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the set of authorization policies in effect for this application."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  id: SecurityTokenAuthenticator\n  children:\n  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.#ctor\n  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  langs:\n  - csharp\n  name: SecurityTokenAuthenticator\n  nameWithType: SecurityTokenAuthenticator\n  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  type: Class\n  summary: Authenticates a security token.\n  remarks: \"The SecurityTokenAuthenticator class and the classes that derive from it authenticate security tokens. Typically, you would only derive a class directly from SecurityTokenAuthenticator when you create a custom security token. If you wanted to override the default authentication or authorization behaviors for built-in security tokens, derive from one of the classes that derive from SecurityTokenAuthenticator, such as <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator>.  \\n  \\n When you derive a class from SecurityTokenAuthenticator, override the following two methods: <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A>. The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> method determines whether this security token authenticator can authenticate a specific security token. The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> method authenticates the security token and establishes a set of authorization policies for authorization. The authorization policies map the claims found in the security token to claims required by the application.\"\n  syntax:\n    content: public abstract class SecurityTokenAuthenticator\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: SecurityTokenAuthenticator()\n  nameWithType: SecurityTokenAuthenticator.SecurityTokenAuthenticator()\n  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.SecurityTokenAuthenticator()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.SecurityTokenAuthenticator\"></xref> class.\n  syntax:\n    content: protected SecurityTokenAuthenticator ();\n    parameters: []\n  overload: System.IdentityModel.Selectors.SecurityTokenAuthenticator.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  id: CanValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: CanValidateToken(SecurityToken)\n  nameWithType: SecurityTokenAuthenticator.CanValidateToken(SecurityToken)\n  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Gets a value indicating whether the specified security token can be validated by this security token authenticator.\n  remarks: The CanValidateToken method checks whether the token parameter is `null` and then calls the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> method to determine whether this security token authenticator can authenticate the security token type for `token`.\n  syntax:\n    content: public bool CanValidateToken (System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when token can be validated; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>token</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  id: CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: CanValidateTokenCore(SecurityToken)\n  nameWithType: SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)\n  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: When overridden in a derived class, gets a value indicating whether the specified security token can be validated by this security token authenticator.\n  remarks: The CanValidateTokenCore method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A> method to determine whether this security token authenticator can authenticate the security token type for `token`. This does not authenticate the security token; that is performed by the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A> method.\n  syntax:\n    content: protected abstract bool CanValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when <code>token</code> can be validated; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  id: ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: ValidateToken(SecurityToken)\n  nameWithType: SecurityTokenAuthenticator.ValidateToken(SecurityToken)\n  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Authenticates the specified security token and returns the set of authorization policies for the security token.\n  remarks: The ValidateToken method checks whether the `token` parameter is `null`, calls the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A> method to determine if this security token authenticator can authenticate this security token, and then if it can, calls the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> method.\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateToken (System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated.\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}\n      description: A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the set of authorization policies in effect for this application.\n  overload: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>token</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.IdentityModel.Tokens.SecurityTokenValidationException\n    commentId: T:System.IdentityModel.Tokens.SecurityTokenValidationException\n    description: \"<code>token</code> cannot be authenticated by this security token authenticator  \\n  \\n -or-  \\n  \\n <code>token</code> is not authenticated.\"\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  id: ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: ValidateTokenCore(SecurityToken)\n  nameWithType: SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)\n  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: When overridden in a derived class, authenticates the specified security token and returns the set of authorization policies for the security token.\n  remarks: \"Override the ValidateTokenCore method to authenticate a specific security token type.  \\n  \\n When the ValidateTokenCore method is overridden, follow these guidelines:  \\n  \\n-   When the security token passed into the `token` parameter cannot be validated, throw the <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception.  \\n  \\n-   When there are no authorization policies in effect for this application, return an empty <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of type <xref:System.IdentityModel.Policy.IAuthorizationPolicy>.  \\n  \\n When `null` is returned by this method, [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] throws the <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception.  \\n  \\n The ValidateTokenCore method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A> method.\"\n  syntax:\n    content: protected abstract System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated.\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}\n      description: A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the set of authorization policies in effect for this application.\n  overload: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.IdentityModel.Tokens.SecurityTokenValidationException\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityTokenValidationException\n  nameWithType: SecurityTokenValidationException\n  fullName: System.IdentityModel.Tokens.SecurityTokenValidationException\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.#ctor\n  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  isExternal: false\n  name: SecurityTokenAuthenticator()\n  nameWithType: SecurityTokenAuthenticator.SecurityTokenAuthenticator()\n  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.SecurityTokenAuthenticator()\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  isExternal: false\n  name: CanValidateToken(SecurityToken)\n  nameWithType: SecurityTokenAuthenticator.CanValidateToken(SecurityToken)\n  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(SecurityToken)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Tokens.SecurityToken\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityToken\n  nameWithType: SecurityToken\n  fullName: System.IdentityModel.Tokens.SecurityToken\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  isExternal: false\n  name: CanValidateTokenCore(SecurityToken)\n  nameWithType: SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)\n  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  isExternal: false\n  name: ValidateToken(SecurityToken)\n  nameWithType: SecurityTokenAuthenticator.ValidateToken(SecurityToken)\n  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(SecurityToken)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<IAuthorizationPolicy>\n  nameWithType: ReadOnlyCollection<IAuthorizationPolicy>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IdentityModel.Policy.IAuthorizationPolicy\n    name: IAuthorizationPolicy\n    nameWithType: IAuthorizationPolicy\n    fullName: IAuthorizationPolicy\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  isExternal: false\n  name: ValidateTokenCore(SecurityToken)\n  nameWithType: SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)\n  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.#ctor*\n  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  isExternal: false\n  name: SecurityTokenAuthenticator\n  nameWithType: SecurityTokenAuthenticator.SecurityTokenAuthenticator\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken*\n  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  isExternal: false\n  name: CanValidateToken\n  nameWithType: SecurityTokenAuthenticator.CanValidateToken\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore*\n  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  isExternal: false\n  name: CanValidateTokenCore\n  nameWithType: SecurityTokenAuthenticator.CanValidateTokenCore\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken*\n  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  isExternal: false\n  name: ValidateToken\n  nameWithType: SecurityTokenAuthenticator.ValidateToken\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore*\n  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  isExternal: false\n  name: ValidateTokenCore\n  nameWithType: SecurityTokenAuthenticator.ValidateTokenCore\n"}