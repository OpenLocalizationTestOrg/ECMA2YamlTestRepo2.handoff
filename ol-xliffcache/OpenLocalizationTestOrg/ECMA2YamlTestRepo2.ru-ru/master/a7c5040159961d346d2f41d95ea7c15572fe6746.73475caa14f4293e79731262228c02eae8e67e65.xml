{"nodes":[{"pos":[6020,6032],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7949,7961],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9142,9154],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9217,9229],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9943,9955],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10693,10705],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11765,11777],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11834,11846],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12895,12907],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12964,12976],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14036,14048],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14107,14119],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15120,15132],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15191,15203],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15970,15982],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16033,16045],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17107,17119],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17178,17190],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18247,18259],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18318,18330],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19095,19107],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19164,19176],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21041,21053],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21115,21127],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21235,21247],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22765,22777],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22838,22850],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22962,22974],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23082,23094],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24223,24235],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24342,24354],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25527,25539],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25647,25659],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26888,26900],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26959,26971],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27079,27091],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28175,28187],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28246,28258],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29274,29286],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29345,29357],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30458,30470],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30529,30541],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[31919,31931],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32043,32055],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32114,32126],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33272,33284],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33343,33355],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[34490,34502],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[34561,34573],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[35426,35438],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[36613,36625],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[36733,36745],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[37974,37986],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[38045,38057],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[38165,38177],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[39273,39285],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[39344,39356],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[40386,40398],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[40457,40469],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[41554,41566],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[41625,41637],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[42702,42714],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[42773,42785],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[43910,43922],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[43981,43993],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[45399,45411],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[45523,45535],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[45594,45606],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[46745,46757],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[46809,46821],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[47978,47990],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[48042,48054],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[49146,49158],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[49215,49227],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[50473,50485],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[50547,50559],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[50667,50679],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[52048,52060],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  id: ContainerRandomAccessIterator`1\n  children:\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1,System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Clone\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.container\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Item(System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.move(System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.next\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Implicit\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.prev\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.valid\n  langs:\n  - csharp\n  name: ContainerRandomAccessIterator<TValue>\n  nameWithType: ContainerRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>\n  type: Class\n  syntax:\n    content: 'public class ContainerRandomAccessIterator<TValue> : Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue>'\n    typeParameters:\n    - id: TValue\n      description: To be added.\n  inheritance:\n  - System.Object\n  implements:\n  - Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue>\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor\n  id: '#ctor'\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: ContainerRandomAccessIterator()\n  nameWithType: ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator()\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator()\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public ContainerRandomAccessIterator ();\n    parameters: []\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  id: '#ctor(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)'\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: ContainerRandomAccessIterator(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator(ContainerRandomAccessIterator)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public ContainerRandomAccessIterator (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1,System.Int32)\n  id: '#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1,System.Int32)'\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: ContainerRandomAccessIterator(IRandomAccessContainer<TValue>,Int32)\n  nameWithType: ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator(IRandomAccessContainer<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator(IRandomAccessContainer<TValue>,Int32)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public ContainerRandomAccessIterator (Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer<TValue> _Cont, int _Offset);\n    parameters:\n    - id: _Cont\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1\n      description: To be added.\n    - id: _Offset\n      type: System.Int32\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Clone\n  id: Clone\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: ContainerRandomAccessIterator<TValue>.Clone()\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.Clone()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual object Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.container\n  id: container\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: container()\n  nameWithType: ContainerRandomAccessIterator<TValue>.container()\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.container()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual object container ();\n    parameters: []\n    return:\n      type: System.Object\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.container*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  id: distance(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: distance(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.distance(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.distance(ContainerRandomAccessIterator)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public int distance (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: To be added.\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  id: distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: distance(IRandomAccessIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.distance(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.distance(IRandomAccessIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual int distance (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n      description: To be added.\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  id: equal_to(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: equal_to(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.equal_to(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.equal_to(ContainerRandomAccessIterator)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool equal_to (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  id: equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: equal_to(IInputIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.equal_to(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.equal_to(IInputIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual bool equal_to (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: ContainerRandomAccessIterator<TValue>.Item(Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.Item(Int32)\n  type: Property\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public TValue this[int _Pos] { get; set; }\n    parameters:\n    - id: _Pos\n      type: System.Int32\n      description: To be added.\n    return:\n      type: TValue\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  id: less_than(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: less_than(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.less_than(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.less_than(ContainerRandomAccessIterator)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool less_than (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  id: less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: less_than(IRandomAccessIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.less_than(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.less_than(IRandomAccessIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual bool less_than (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.move(System.Int32)\n  id: move(System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: move(Int32)\n  nameWithType: ContainerRandomAccessIterator<TValue>.move(Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.move(Int32)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual int move (int _Offset);\n    parameters:\n    - id: _Offset\n      type: System.Int32\n      description: To be added.\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.move*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.next\n  id: next\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: next()\n  nameWithType: ContainerRandomAccessIterator<TValue>.next()\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.next()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual void next ();\n    parameters: []\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.next*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32)\n  id: op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Addition(ContainerRandomAccessIterator<TValue>,Int32)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Addition(ContainerRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Addition(ContainerRandomAccessIterator<TValue>,Int32)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Addition (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> , int _Right);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n      description: To be added.\n    - id: _Right\n      type: System.Int32\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  id: op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Addition(ContainerRandomAccessIterator<TValue>,Int32,ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Addition(ContainerRandomAccessIterator<TValue>,Int32,ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Addition(ContainerRandomAccessIterator<TValue>,Int32,ContainerRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public static Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Addition (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> , int _Left, Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n      description: To be added.\n    - id: _Left\n      type: System.Int32\n      description: To be added.\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  id: op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Assign(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Assign(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Assign(ContainerRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator op_Assign (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: To be added.\n    return:\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Assign*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@)\n  id: op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Decrement(ContainerRandomAccessIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Decrement(ContainerRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Decrement(ContainerRandomAccessIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Decrement (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32)\n  id: op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Decrement(ContainerRandomAccessIterator<TValue>,Int32)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Decrement(ContainerRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Decrement(ContainerRandomAccessIterator<TValue>,Int32)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Decrement (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> , int A_0);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n      description: To be added.\n    - id: A_0\n      type: System.Int32\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  id: op_Equality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Equality(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Equality(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Equality(ContainerRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_Equality (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  id: op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Equality(IInputIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Equality(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Equality(IInputIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_Equality (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  id: op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_GreaterThan(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_GreaterThan(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_GreaterThan(ContainerRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_GreaterThan (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  id: op_GreaterThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_GreaterThan(IRandomAccessIterator<TValue>,ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_GreaterThan(IRandomAccessIterator<TValue>,ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_GreaterThan(IRandomAccessIterator<TValue>,ContainerRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public static bool op_GreaterThan (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Left, Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Left\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n      description: To be added.\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  id: op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_GreaterThanOrEqual(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_GreaterThanOrEqual(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_GreaterThanOrEqual(ContainerRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_GreaterThanOrEqual (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  id: op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_GreaterThanOrEqual(IRandomAccessIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_GreaterThanOrEqual(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_GreaterThanOrEqual(IRandomAccessIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_GreaterThanOrEqual (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Implicit\n  id: op_Implicit\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Implicit\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Implicit\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Implicit\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> op_Implicit ();\n    parameters: []\n    return:\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@)\n  id: op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Increment(ContainerRandomAccessIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Increment(ContainerRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Increment(ContainerRandomAccessIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Increment (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32)\n  id: op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Increment(ContainerRandomAccessIterator<TValue>,Int32)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Increment(ContainerRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Increment(ContainerRandomAccessIterator<TValue>,Int32)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Increment (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> , int A_0);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n      description: To be added.\n    - id: A_0\n      type: System.Int32\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  id: op_Inequality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Inequality(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Inequality(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Inequality(ContainerRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_Inequality (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  id: op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Inequality(IInputIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Inequality(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Inequality(IInputIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_Inequality (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  id: op_LessThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_LessThan(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_LessThan(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_LessThan(ContainerRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_LessThan (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  id: op_LessThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_LessThan(IRandomAccessIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_LessThan(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_LessThan(IRandomAccessIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_LessThan (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  id: op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_LessThanOrEqual(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_LessThanOrEqual(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_LessThanOrEqual(ContainerRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_LessThanOrEqual (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  id: op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_LessThanOrEqual(IRandomAccessIterator<TValue>,ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_LessThanOrEqual(IRandomAccessIterator<TValue>,ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_LessThanOrEqual(IRandomAccessIterator<TValue>,ContainerRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public static bool op_LessThanOrEqual (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Left, Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Left\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n      description: To be added.\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  id: op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_MemberSelection(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_MemberSelection(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_MemberSelection(ContainerRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public static TValue op_MemberSelection (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Left);\n    parameters:\n    - id: _Left\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: To be added.\n    return:\n      type: TValue@\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_MemberSelection*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  id: op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_PointerDereference(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_PointerDereference(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_PointerDereference(ContainerRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public static TValue op_PointerDereference (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Left);\n    parameters:\n    - id: _Left\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: To be added.\n    return:\n      type: TValue@\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_PointerDereference*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  id: op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Subtraction(IRandomAccessIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Subtraction(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Subtraction(IRandomAccessIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public int op_Subtraction (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n      description: To be added.\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32)\n  id: op_Subtraction(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Subtraction(ContainerRandomAccessIterator<TValue>,Int32)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Subtraction(ContainerRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Subtraction(ContainerRandomAccessIterator<TValue>,Int32)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Subtraction (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> , int _Right);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n      description: To be added.\n    - id: _Right\n      type: System.Int32\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.prev\n  id: prev\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: prev()\n  nameWithType: ContainerRandomAccessIterator<TValue>.prev()\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.prev()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual void prev ();\n    parameters: []\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.prev*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.valid\n  id: valid\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: valid()\n  nameWithType: ContainerRandomAccessIterator<TValue>.valid()\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.valid()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual bool valid ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.valid*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: ContainerRandomAccessIterator()\n  nameWithType: ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator()\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator()\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: ContainerRandomAccessIterator(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator(ContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerRandomAccessIterator\n  nameWithType: ContainerRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: ContainerRandomAccessIterator(IRandomAccessContainer<TValue>,Int32)\n  nameWithType: ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator(IRandomAccessContainer<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator(IRandomAccessContainer<TValue>,Int32)\n- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IRandomAccessContainer<TValue>\n  nameWithType: IRandomAccessContainer<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer<TValue>\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Clone\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: Clone()\n  nameWithType: ContainerRandomAccessIterator<TValue>.Clone()\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.Clone()\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.container\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: container()\n  nameWithType: ContainerRandomAccessIterator<TValue>.container()\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.container()\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: distance(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.distance(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.distance(ContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: distance(IRandomAccessIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.distance(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.distance(IRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IRandomAccessIterator<TValue>\n  nameWithType: IRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: equal_to(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.equal_to(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.equal_to(ContainerRandomAccessIterator)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: equal_to(IInputIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.equal_to(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.equal_to(IInputIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IInputIterator<TValue>\n  nameWithType: IInputIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Item(System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: ContainerRandomAccessIterator<TValue>.Item(Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.Item(Int32)\n- uid: TValue\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: less_than(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.less_than(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.less_than(ContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: less_than(IRandomAccessIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.less_than(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.less_than(IRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.move(System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: move(Int32)\n  nameWithType: ContainerRandomAccessIterator<TValue>.move(Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.move(Int32)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.next\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: next()\n  nameWithType: ContainerRandomAccessIterator<TValue>.next()\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.next()\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Addition(ContainerRandomAccessIterator<TValue>,Int32)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Addition(ContainerRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Addition(ContainerRandomAccessIterator<TValue>,Int32)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ContainerRandomAccessIterator<TValue>\n  nameWithType: ContainerRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Addition(ContainerRandomAccessIterator<TValue>,Int32,ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Addition(ContainerRandomAccessIterator<TValue>,Int32,ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Addition(ContainerRandomAccessIterator<TValue>,Int32,ContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Assign(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Assign(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Assign(ContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Decrement(ContainerRandomAccessIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Decrement(ContainerRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Decrement(ContainerRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Decrement(ContainerRandomAccessIterator<TValue>,Int32)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Decrement(ContainerRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Decrement(ContainerRandomAccessIterator<TValue>,Int32)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Equality(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Equality(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Equality(ContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Equality(IInputIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Equality(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Equality(IInputIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_GreaterThan(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_GreaterThan(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_GreaterThan(ContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_GreaterThan(IRandomAccessIterator<TValue>,ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_GreaterThan(IRandomAccessIterator<TValue>,ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_GreaterThan(IRandomAccessIterator<TValue>,ContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_GreaterThanOrEqual(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_GreaterThanOrEqual(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_GreaterThanOrEqual(ContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_GreaterThanOrEqual(IRandomAccessIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_GreaterThanOrEqual(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_GreaterThanOrEqual(IRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Implicit\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Implicit\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Implicit\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Implicit\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Increment(ContainerRandomAccessIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Increment(ContainerRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Increment(ContainerRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Increment(ContainerRandomAccessIterator<TValue>,Int32)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Increment(ContainerRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Increment(ContainerRandomAccessIterator<TValue>,Int32)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Inequality(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Inequality(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Inequality(ContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Inequality(IInputIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Inequality(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Inequality(IInputIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_LessThan(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_LessThan(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_LessThan(ContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_LessThan(IRandomAccessIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_LessThan(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_LessThan(IRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_LessThanOrEqual(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_LessThanOrEqual(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_LessThanOrEqual(ContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_LessThanOrEqual(IRandomAccessIterator<TValue>,ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_LessThanOrEqual(IRandomAccessIterator<TValue>,ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_LessThanOrEqual(IRandomAccessIterator<TValue>,ContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_MemberSelection(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_MemberSelection(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_MemberSelection(ContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_PointerDereference(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_PointerDereference(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_PointerDereference(ContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Subtraction(IRandomAccessIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Subtraction(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Subtraction(IRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Subtraction(ContainerRandomAccessIterator<TValue>,Int32)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Subtraction(ContainerRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Subtraction(ContainerRandomAccessIterator<TValue>,Int32)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.prev\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: prev()\n  nameWithType: ContainerRandomAccessIterator<TValue>.prev()\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.prev()\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.valid\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: valid()\n  nameWithType: ContainerRandomAccessIterator<TValue>.valid()\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.valid()\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: ContainerRandomAccessIterator<TValue>\n  nameWithType: ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Clone*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: Clone\n  nameWithType: ContainerRandomAccessIterator<TValue>.Clone\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.container*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: container\n  nameWithType: ContainerRandomAccessIterator<TValue>.container\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: distance\n  nameWithType: ContainerRandomAccessIterator<TValue>.distance\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: equal_to\n  nameWithType: ContainerRandomAccessIterator<TValue>.equal_to\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Item*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: Item\n  nameWithType: ContainerRandomAccessIterator<TValue>.Item\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: less_than\n  nameWithType: ContainerRandomAccessIterator<TValue>.less_than\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.move*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: move\n  nameWithType: ContainerRandomAccessIterator<TValue>.move\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.next*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: next\n  nameWithType: ContainerRandomAccessIterator<TValue>.next\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Addition\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Addition\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Assign*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Assign\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Assign\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Decrement\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Decrement\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Equality\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Equality\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_GreaterThan\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_GreaterThan\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_GreaterThanOrEqual\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_GreaterThanOrEqual\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Implicit*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Implicit\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Implicit\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Increment\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Increment\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Inequality\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Inequality\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_LessThan\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_LessThan\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_LessThanOrEqual\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_LessThanOrEqual\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_MemberSelection*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_MemberSelection\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_MemberSelection\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_PointerDereference*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_PointerDereference\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_PointerDereference\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Subtraction\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Subtraction\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.prev*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: prev\n  nameWithType: ContainerRandomAccessIterator<TValue>.prev\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.valid*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: valid\n  nameWithType: ContainerRandomAccessIterator<TValue>.valid\n"}