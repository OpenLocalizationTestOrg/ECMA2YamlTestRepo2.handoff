{"nodes":[{"pos":[458,540],"content":"Indicates that a method is invoked by a condition. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates that a method is invoked by a condition. This class cannot be inherited.","pos":[0,82],"nodes":[{"content":"Indicates that a method is invoked by a condition.","pos":[0,50]},{"content":"This class cannot be inherited.","pos":[51,82]}]}]},{"pos":[552,1020],"content":"This attribute is used to support a forward chaining model that will cause the reevaluation of rules based on state change. The <xref:System.Workflow.Activities.Rules.RuleReadAttribute>, RuleInvokeAttribute, and <xref:System.Workflow.Activities.Rules.RuleWriteAttribute> classes each indicate the properties used to read a condition, write an action, and invoke a method. These attributes enable the workflow to only reevaluate rules that will change the final output.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This attribute is used to support a forward chaining model that will cause the reevaluation of rules based on state change. The <xref:System.Workflow.Activities.Rules.RuleReadAttribute>, RuleInvokeAttribute, and <xref:System.Workflow.Activities.Rules.RuleWriteAttribute> classes each indicate the properties used to read a condition, write an action, and invoke a method. These attributes enable the workflow to only reevaluate rules that will change the final output.","pos":[0,468],"nodes":[{"content":"This attribute is used to support a forward chaining model that will cause the reevaluation of rules based on state change.","pos":[0,123]},{"content":"The &lt;xref:System.Workflow.Activities.Rules.RuleReadAttribute&gt;, RuleInvokeAttribute, and &lt;xref:System.Workflow.Activities.Rules.RuleWriteAttribute&gt; classes each indicate the properties used to read a condition, write an action, and invoke a method.","pos":[124,371],"source":" The <xref:System.Workflow.Activities.Rules.RuleReadAttribute>, RuleInvokeAttribute, and <xref:System.Workflow.Activities.Rules.RuleWriteAttribute> classes each indicate the properties used to read a condition, write an action, and invoke a method."},{"content":"These attributes enable the workflow to only reevaluate rules that will change the final output.","pos":[372,468]}]}]},{"pos":[2155,2269],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleInvokeAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.Rules.RuleInvokeAttribute\"></xref> class."},{"pos":[2429,2460],"content":"The method invoked by the rule.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method invoked by the rule.","pos":[0,31]}]},{"pos":[3020,3061],"content":"Gets the method invoked by the condition.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the method invoked by the condition.","pos":[0,41]}]},{"pos":[3179,3215],"content":"The method invoked by the condition.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method invoked by the condition.","pos":[0,36]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.Activities.Rules.RuleInvokeAttribute\n  id: RuleInvokeAttribute\n  children:\n  - System.Workflow.Activities.Rules.RuleInvokeAttribute.#ctor(System.String)\n  - System.Workflow.Activities.Rules.RuleInvokeAttribute.MethodInvoked\n  langs:\n  - csharp\n  name: RuleInvokeAttribute\n  nameWithType: RuleInvokeAttribute\n  fullName: System.Workflow.Activities.Rules.RuleInvokeAttribute\n  type: Class\n  summary: Indicates that a method is invoked by a condition. This class cannot be inherited.\n  remarks: This attribute is used to support a forward chaining model that will cause the reevaluation of rules based on state change. The <xref:System.Workflow.Activities.Rules.RuleReadAttribute>, RuleInvokeAttribute, and <xref:System.Workflow.Activities.Rules.RuleWriteAttribute> classes each indicate the properties used to read a condition, write an action, and invoke a method. These attributes enable the workflow to only reevaluate rules that will change the final output.\n  example:\n  - \"The following code example demonstrates proper usage of the RuleInvokeAttribute.  \\n  \\n```c#  \\n[RuleInvokeAttribute(\\\"UpdateAttributeValue\\\")]  \\n  \\nbool DoSomething()  \\n{  \\n    return attributevalue();  \\n}  \\n```\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Method | System.AttributeTargets.Property, AllowMultiple=true)]\n\n      public sealed class RuleInvokeAttribute : System.Workflow.Activities.Rules.RuleAttribute\n  inheritance:\n  - System.Attribute\n  - System.Workflow.Activities.Rules.RuleAttribute\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.Rules.RuleInvokeAttribute.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Workflow.Activities.Rules.RuleInvokeAttribute\n  langs:\n  - csharp\n  name: RuleInvokeAttribute(String)\n  nameWithType: RuleInvokeAttribute.RuleInvokeAttribute(String)\n  fullName: System.Workflow.Activities.Rules.RuleInvokeAttribute.RuleInvokeAttribute(String)\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.Rules.RuleInvokeAttribute\"></xref> class.\n  syntax:\n    content: public RuleInvokeAttribute (string methodInvoked);\n    parameters:\n    - id: methodInvoked\n      type: System.String\n      description: The method invoked by the rule.\n  overload: System.Workflow.Activities.Rules.RuleInvokeAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.Rules.RuleInvokeAttribute.MethodInvoked\n  id: MethodInvoked\n  parent: System.Workflow.Activities.Rules.RuleInvokeAttribute\n  langs:\n  - csharp\n  name: MethodInvoked\n  nameWithType: RuleInvokeAttribute.MethodInvoked\n  fullName: System.Workflow.Activities.Rules.RuleInvokeAttribute.MethodInvoked\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: Gets the method invoked by the condition.\n  syntax:\n    content: public string MethodInvoked { get; }\n    return:\n      type: System.String\n      description: The method invoked by the condition.\n  overload: System.Workflow.Activities.Rules.RuleInvokeAttribute.MethodInvoked*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Workflow.Activities.Rules.RuleAttribute\n  isExternal: false\n  name: System.Workflow.Activities.Rules.RuleAttribute\n- uid: System.Workflow.Activities.Rules.RuleInvokeAttribute.#ctor(System.String)\n  parent: System.Workflow.Activities.Rules.RuleInvokeAttribute\n  isExternal: false\n  name: RuleInvokeAttribute(String)\n  nameWithType: RuleInvokeAttribute.RuleInvokeAttribute(String)\n  fullName: System.Workflow.Activities.Rules.RuleInvokeAttribute.RuleInvokeAttribute(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Workflow.Activities.Rules.RuleInvokeAttribute.MethodInvoked\n  parent: System.Workflow.Activities.Rules.RuleInvokeAttribute\n  isExternal: false\n  name: MethodInvoked\n  nameWithType: RuleInvokeAttribute.MethodInvoked\n  fullName: System.Workflow.Activities.Rules.RuleInvokeAttribute.MethodInvoked\n- uid: System.Workflow.Activities.Rules.RuleInvokeAttribute.#ctor*\n  parent: System.Workflow.Activities.Rules.RuleInvokeAttribute\n  isExternal: false\n  name: RuleInvokeAttribute\n  nameWithType: RuleInvokeAttribute.RuleInvokeAttribute\n- uid: System.Workflow.Activities.Rules.RuleInvokeAttribute.MethodInvoked*\n  parent: System.Workflow.Activities.Rules.RuleInvokeAttribute\n  isExternal: false\n  name: MethodInvoked\n  nameWithType: RuleInvokeAttribute.MethodInvoked\n"}