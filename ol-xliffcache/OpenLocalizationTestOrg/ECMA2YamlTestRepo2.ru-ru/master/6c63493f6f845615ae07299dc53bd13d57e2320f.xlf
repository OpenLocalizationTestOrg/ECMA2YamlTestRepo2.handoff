<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6c63493f6f845615ae07299dc53bd13d57e2320f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.UI.Page.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">349c5831e8d959575bb64c58035cd3ac64e5138d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c86e9b0334a812d895db5fef7843a76392616440</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an .aspx file, also known as a Web Forms page, requested from a server that hosts an ASP.NET Web application.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Page class is associated with files that have an .aspx extension.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>These files are compiled at run time as Page objects and cached in server memory.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to create a Web Forms page using the code-behind technique, derive from this class.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Rapid application development (RAD) designers, such as Microsoft Visual Studio, automatically use this model to create Web Forms pages.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Page object serves as the naming container for all server controls in a page, except those that implement the &lt;xref:System.Web.UI.INamingContainer&gt; interface or are child controls of controls that implement this interface.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Page class is a control that acts as the user interface for your Web application, and as such should be scrutinized to make sure best practices for writing secure code and securing applications are followed.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>For general information on these topics, see <bpt id="p1">[</bpt>Overview of Web Application Security Threats<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>, <bpt id="p2">[</bpt>NIB: Security Policy Best Practices<ept id="p2">](http://msdn.microsoft.com/en-us/d49bc4d5-efb7-4caa-a2fe-e4d3cec63c05)</ept>, and <bpt id="p3">[</bpt>Key Security Concepts<ept id="p3">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more specific information, see <bpt id="p1">[</bpt>Securing Standard Controls<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>, <bpt id="p2">[</bpt>How to: Display Safe Error Messages<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>, <bpt id="p3">[</bpt>How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings<ept id="p3">](~/add/includes/ajax-current-ext-md.md)</ept>, and <bpt id="p4">[</bpt>Introduction to the Validation Controls<ept id="p4">](http://msdn.microsoft.com/en-us/3c0e7514-cff2-4bed-936d-ee3f7b740190)</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default constructor initializes all fields to their default values.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Called during page initialization to create a collection of content (from content controls) that is handed to a master page, if the current page or master page refers to a master page.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The name of the content template to add.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The content template</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A content template with the same name already exists.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Registers beginning and ending event handler delegates that do not require state information for an asynchronous page.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the AddOnPreRenderCompleteAsync method to add handlers to an asynchronous Web page.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can register multiple asynchronous handlers; however, only one handler runs at a time.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to process multiple asynchronous methods simultaneously, you should use a single &lt;xref:System.Web.BeginEventHandler&gt; method and launch multiple asynchronous operations from that handler.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The asynchronous handlers are called between the &lt;xref:System.Web.UI.Control.PreRender&gt; and &lt;xref:System.Web.UI.Page.PreRenderComplete&gt; events.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>First, all &lt;xref:System.Web.UI.Page&gt; events (through the &lt;xref:System.Web.UI.Control.PreRender&gt; event) are run, and then each registered &lt;xref:System.Web.BeginEventHandler&gt; method is called.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the handler completes, the corresponding &lt;xref:System.Web.EndEventHandler&gt; method is called.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are multiple asynchronous handlers, the next handler is called.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the registered asynchronous event handlers have been called, the rest of the page events are called, beginning with the &lt;xref:System.Web.UI.Page.PreRenderComplete&gt; event.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The delegate for the <bpt id="p1">&lt;xref href="System.Web.BeginEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The delegate for the <bpt id="p1">&lt;xref href="System.Web.EndEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.PageAsyncTask.BeginHandler<bpt id="p1">*</bpt>&gt; or &lt;xref:System.Web.UI.PageAsyncTask.EndHandler<ept id="p1">*</ept>&gt; is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Registers beginning and ending  event handler delegates for an asynchronous page.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the AddOnPreRenderCompleteAsync method to add handlers that require state information to an asynchronous Web page.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The object passed in the <ph id="ph1">`state`</ph> parameter can be any object that your application requires to transfer information between event handler delegates specified in the <ph id="ph2">`beginHandler`</ph> and the <ph id="ph3">`endHandler`</ph> parameters.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can register multiple asynchronous handlers; however, only one handler runs at a time.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to process multiple asynchronous methods simultaneously, you should use a single &lt;xref:System.Web.BeginEventHandler&gt; method and launch multiple asynchronous operations from that handler.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The asynchronous handlers are called between the &lt;xref:System.Web.UI.Control.PreRender&gt; and &lt;xref:System.Web.UI.Page.PreRenderComplete&gt; events.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>First, all &lt;xref:System.Web.UI.Page&gt; events (through the &lt;xref:System.Web.UI.Control.PreRender&gt; event) are run, and then each registered &lt;xref:System.Web.BeginEventHandler&gt; method is called.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the handler completes, the corresponding &lt;xref:System.Web.EndEventHandler&gt; method is called.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are multiple asynchronous handlers, the next handler is called.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the registered asynchronous event handlers have been called, the rest of the page events are called, beginning with the &lt;xref:System.Web.UI.Page.PreRenderComplete&gt; event.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The delegate for the <bpt id="p1">&lt;xref href="System.Web.BeginEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The delegate for the <bpt id="p1">&lt;xref href="System.Web.EndEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>An object containing state information for the event handlers.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.PageAsyncTask.BeginHandler<bpt id="p1">*</bpt>&gt; or &lt;xref:System.Web.UI.PageAsyncTask.EndHandler<ept id="p1">*</ept>&gt; is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Adds a list of dependent files that make up the current page.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This method is used internally by the ASP.NET page framework and is not intended to be used directly from your code.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The AddWrappedFileDependencies method adds a list of files, such as user control files, that make up the current page.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any of these pages is modified, the entire page is compiled the next time it is requested.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; containing the list of file names.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Web.HttpApplicationState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for the current Web request.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The current data in the <bpt id="p1">&lt;xref href="System.Web.HttpApplicationState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Initiates a request for Active Server Page (ASP) resources.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This method is provided for compatibility with legacy ASP applications.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not call this method.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Web.HttpContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with information about the current request.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The callback method.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Any extra data needed to process the request in the same manner as an ASP request.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; object.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Terminates a request for Active Server Page (ASP) resources.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>This method is provided for compatibility with legacy ASP applications.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not call this method.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The ASP page generated by the request.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Sets a value indicating whether the page can be executed on a single-threaded apartment (STA) thread.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>When set to <ph id="ph1">`true`</ph>, this property allows the page to be executed on a single-threaded apartment (STA) thread.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows the page to call STA components, such as components developed with Visual Basic 6.0.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property to <ph id="ph1">`true`</ph> also allows the page to call COM+ components that require access to the unmanaged ASP built-in objects.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>These are accessible through the ASP <ph id="ph1">`ObjectContext`</ph> object or the <ph id="ph2">`OnStartPage`</ph> method.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>In most circumstances, do not set this property in code.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">`aspcompat`</ph> attribute to <ph id="ph2">`true`</ph> using the  directive in the .aspx file.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the page is requested, the dynamically generated class sets the property.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the page supports Active Server Pages (ASP) code; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Sets a value indicating whether the page is processed synchronously or asynchronously.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>The AsyncMode property is set by the &lt;xref:System.Web.UI.Page&gt; parser when code for the page is generated.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">`Async`</ph> attribute in  directive to set this value.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous pages do not work when the <ph id="ph1">`AspCompat`</ph> attribute is set to <ph id="ph2">`true`</ph> or the <ph id="ph3">`Transaction`</ph> attribute is set to a value other than <ph id="ph4">`Disabled`</ph> in the  directive.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the page is processed asynchronously; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Begins processing an asynchronous page request.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.HttpContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the request.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The callback method to notify when the process is complete.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>State data for the asynchronous method.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; that references the asynchronous request.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Ends processing an asynchronous page request.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; referencing a pending asynchronous request.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating the time-out interval used when processing asynchronous tasks.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>The asynchronous time-out of the page represents the amount of time that the page will wait to perform asynchronous tasks.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>In most circumstances, do not set this property in code.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the page asynchronous time-out interval using the  of the Web configuration file or in the  directive.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>Values set in the page configuration section are overwritten by the page directive.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>Define your asynchronous task using the &lt;xref:System.Web.UI.PageAsyncTask&gt; class and register a beginning, an ending, and a time-out handler.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the asynchronous task does not complete in the time interval specified, the time-out handler will be invoked.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.TimeSpan&gt; that contains the allowed time interval for completion of the asynchronous task.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The default time interval is 45 seconds.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The property was set to a negative value.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Gets or sets the control in the page that is used to perform postbacks.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The control that is used to perform postbacks.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Sets a value indicating whether the page output is buffered.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>In most circumstances, do not set this property in code.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the Buffer attribute to <ph id="ph1">`true`</ph> using the  directive in the .aspx file.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the page is requested, the dynamically generated class sets the property.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The Buffer property sets and gets the &lt;xref:System.Web.HttpResponse.BufferOutput%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if page output is buffered; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Web.Caching.Cache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object associated with the application in which the page resides.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application's &lt;xref:System.Web.Caching.Cache&gt; object allows you to store and retrieve arbitrary data on subsequent requests.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>The cache is not specifically associated with a page or user session.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is used primarily to enhance application performance.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Caching Application Data<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on the difference between application caching and page output caching, see <bpt id="p1">[</bpt>ASP.NET Caching Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.Caching.Cache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with the page's application.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>An instance of <bpt id="p1">&lt;xref href="System.Web.Caching.Cache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not created.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Gets the query string portion of the requested URL.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ClientQueryString property contains the query string portion of the URL requested by the browser.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the requested URL is "http://www.contoso.com/default.aspx?id=100", the ClientQueryString property will contain "id=100".</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ClientQueryString property is encoded; use the &lt;xref:System.Web.HttpServerUtility.UrlDecode%2A?displayProperty=fullName&gt; method to decode the query string.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The query string portion of the requested URL.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref href="System.Web.UI.ClientScriptManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object used to manage, register, and add script to the page.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the ClientScript property to get a &lt;xref:System.Web.UI.ClientScriptManager&gt; object that can be used to manage, register, and add script to a Web page.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the &lt;xref:System.Web.UI.ClientScriptManager&gt; class.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.ClientScriptManager&gt; class is new in <ph id="ph1">[!INCLUDE[vstecasplong](~/add/includes/vstecasplong-md.md)]</ph> and replaces &lt;xref:System.Web.UI.Page&gt; class methods for managing scripts that are now deprecated.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.UI.ClientScriptManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that allows you to override automatic detection of browser capabilities and to specify how a page is rendered for particular browser clients.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not set the ClientTarget property, the &lt;xref:System.Web.HttpBrowserCapabilities&gt; object associated with the &lt;xref:System.Web.UI.Page.Request%2A?displayProperty=fullName&gt; property reflects the capabilities of the client browser.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do set this property, client browser detection is disabled and the page will use browser capabilities associated with the value (alias) that you provide.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>The root Web.config configuration file on the Web server computer defines the following default aliases that you can use as shorthand for common user-agent strings:      -   <ph id="ph1">`uplevel`</ph>, which specifies browser capabilities equivalent to Internet Explorer 6.0.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   <ph id="ph1">`downlevel`</ph>, which specifies browser capabilities equivalent to older browsers that do not support client script.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this alias to determine how Web pages would work in a browser that has client script disabled.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set the alias programmatically using this property, or you can set it declaratively using the <ph id="ph1">`ClientTarget`</ph> attribute of the  directive.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can define additional aliases in the <ph id="ph1">`clientTarget`</ph> section of the application-level Web.config file.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>clientTarget Element (ASP.NET Settings Schema)<ept id="p1">](http://msdn.microsoft.com/en-us/17a0fa6e-a065-49cc-b900-ef73eda6a922)</ept>.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; that specifies the browser capabilities that you want to override.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Sets the code page identifier for the current <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>In most circumstances, do not set this property in code.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">`CodePage`</ph> attribute to the value you want using the  directive in the .aspx file.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the page is requested, the dynamically generated class sets the property.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>An integer that represents the code page identifier for the current <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Sets the HTTP MIME type for the <bpt id="p1">&lt;xref href="System.Web.HttpResponse"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object associated with the page.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>In most circumstances, do not set this property in code.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">`ContentType`</ph> attribute using the  directive in the .aspx file.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the page is requested, the dynamically generated class sets the property.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The HTTP MIME type associated with the current page.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Web.HttpContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object associated with the page.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property provides programmatic access to the context the page runs in, including information about the request, response, session, and application.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Web.HttpContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains information associated with the current page.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Creates an <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to render the page's content.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>The CreateHtmlTextWriter method creates a &lt;xref:System.IO.TextWriter&gt; through the &lt;xref:System.Web.HttpRequest.Browser%2A&gt; property of the &lt;xref:System.Web.HttpContext.Request%2A&gt; object associated with the page request.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can add a reference to an &lt;xref:System.Web.UI.HtmlTextWriter&gt; in the <ph id="ph1">`browserCaps`</ph> configuration section.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override the CreateHtmlTextWriter method to perform custom lookup.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextWriter&gt; used to create the <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Web.UI.Html32TextWriter"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Creates a specified <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to render the page's content.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is used internally in page adapters.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextWriter&gt; used to create the <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The type of text writer to create.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that renders the content of the page.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">writerType</ph><ept id="p1">&lt;/code&gt;</ept> parameter is set to an invalid type.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Sets the culture ID for the <bpt id="p1">&lt;xref href="System.Threading.Thread"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object associated with the page.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">`Culture`</ph> attribute in the  directive in the .aspx file.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the page is requested, the dynamically generated class sets the value of this property.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, you can also explicitly set the value of the Culture property programmatically or in the  element of the Web.config file.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Culture property is used to help localize page content.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set it to any valid culture ID.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the <ph id="ph1">`en-us`</ph> culture ID sets the page to American English, while the <ph id="ph2">`fr`</ph> culture ID sets the page to French.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also set the value to <ph id="ph1">`auto`</ph> which will perform automatic detection of the browser's preferred language and set it.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>The automatic language detection can be qualified with a default value such as <ph id="ph1">`auto:en-us`</ph>.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the &lt;xref:System.Globalization.CultureInfo&gt; class overview.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>A valid culture ID.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Performs any initialization of the instance of the <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is required by RAD designers.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>This method is used only at design time.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameValueCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of data posted back to the page using either a POST or a GET command.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DeterminePostBackMode method returns a &lt;xref:System.Collections.Specialized.NameValueCollection&gt; object that contains the data posted back to the page.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>The presence of the page hidden fields VIEWSTATE and EVENTTARGET is used to help determine whether a postback event has occurred.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.Page.IsPostBack%2A&gt; property is set when the DeterminePostBackMode method is called.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameValueCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains the form data.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>If the postback used the POST command, the form information is returned from the &lt;xref:System.Web.UI.Page.Context*&gt; object.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>If the postback used the GET command, the query string information is returned.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>If the page is being requested for the first time, <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is returned.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Returns a name-value collection of data that was posted to the page using either a POST or a GET command, without performing ASP.NET request validation on the request.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the &lt;xref:System.Web.UnvalidatedRequestValues&gt; class.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>An object that contains the unvalidated form data.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the page validates postback and callback events.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the EnableEventValidation property is set to <ph id="ph1">`true`</ph>, ASP.NET validates that a control event originated from the user interface that was rendered by that control.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>A control registers its events during rendering and then validates the events during postback or callback handling.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if a list control includes options numbered 1, 2, or 3 when the page is rendered, and if a postback request is received specifying option number 4, ASP.NET raises an exception.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>All event-driven controls in ASP.NET use this feature by default.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you write client script that changes a control in the client at run time, you might have to use the &lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A&gt; method in order to avoid false event validation errors.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  This feature reduces the risk of unauthorized or malicious postback requests and callbacks.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is strongly recommended that you do not disable event validation.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>You set the EnableEventValidation property by setting the <ph id="ph1">`enableEventValidation`</ph> attribute of the  directive or the <ph id="ph2">`enableEventValidation`</ph> attribute of the  element in the Web.config file.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set this property in code, you must set it before the page is initialized.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the page validates postback and callback events; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.The default is <bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The EnableEventValidation property was set after the page was initialized.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the page maintains its view state, and the view state of any server controls it contains, when the current page request ends.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about why you might want to disable view state, see &lt;xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName&gt;.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even if EnableViewState is <ph id="ph1">`false`</ph>, the page might contain a hidden view state field that is used by ASP.NET to detect a postback.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the page maintains its view state; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether ASP.NET should check message authentication codes (MAC) in the page's view state when the page is posted back from the client.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>A view-state MAC is an encrypted version of the hidden variable that a page's view state is persisted to when the page is sent to the browser.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this property is set to <ph id="ph1">`true`</ph>, the encrypted view state is checked to verify that it has not been tampered with on the client.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not set this property in code.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">`EnableViewStateMac`</ph> attribute using the  directive in the .aspx file.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the page is requested, the dynamically generated class sets the property.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  This attribute should never be set to <ph id="ph2">`false`</ph> in a production Web site, even if the application or page does not use view state.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>The view state MAC helps ensure the security of other ASP.NET functions in addition to view state.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the view state should be MAC checked and encoded; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Gets or sets the error page to which the requesting browser is redirected in the event of an unhandled page exception.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>The error page to which the browser is redirected.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Starts the execution of an asynchronous task.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>Define an asynchronous task using the &lt;xref:System.Web.UI.PageAsyncTask&gt; class.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the task is defined, and is registered with the page using the &lt;xref:System.Web.UI.Page.RegisterAsyncTask%2A&gt; method, the ExecuteRegisteredAsyncTasks method can be invoked to begin the asynchronous task.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ExecuteRegisteredAsyncTasks method is automatically called at the point in the page processing when any registered asynchronous tasks, if they exist, are invoked for a non-asynchronous page.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>This automatic call to ExecuteRegisteredAsyncTasks occurs just before the &lt;xref:System.Web.UI.Page.PreRenderComplete&gt; event.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the ExecuteRegisteredAsyncTasks method for tasks you want to be invoked at times other than the automatic call to this method.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note, asynchronous tasks will be executed only once even though ExecuteRegisteredAsyncTasks may be called more than once.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.Page.AsyncTimeout%2A&gt; property is reset on every call to the ExecuteRegisteredAsyncTasks method.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>The last value of the &lt;xref:System.Web.UI.Page.AsyncTimeout%2A&gt; prior to invoking the ExecuteRegisteredAsyncTasks method takes precedence.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an asynchronous task takes more than the &lt;xref:System.Web.UI.Page.AsyncTimeout%2A&gt;, subsequent tasks invoked during that ExecuteRegisteredAsyncTasks call are timed out immediately.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>There is an exception in the asynchronous task.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Sets an array of files that the current <bpt id="p1">&lt;xref href="System.Web.HttpResponse"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is dependent upon.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property has been deprecated.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Web.HttpResponse.AddFileDependencies%2A&gt; method or the &lt;xref:System.Web.HttpResponse.AddFileDependency%2A&gt; method of the &lt;xref:System.Web.HttpResponse&gt; class instead.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>In most circumstances, do not set this property in code.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">`FileDependencies`</ph> attribute to <ph id="ph2">`true`</ph> using the  directive in the .aspx file.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the page is requested, the dynamically generated class sets the property.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>The array of files that the current <bpt id="p1">&lt;xref href="System.Web.HttpResponse"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is dependent upon.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Searches the page naming container for a server control with the specified identifier.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>The FindControl method can be used to access a control whose &lt;xref:System.Web.UI.Control.ID%2A&gt; is not available at design time.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method searches only the page's immediate, or top-level, container; it does not recursively search for controls in naming containers contained on the page.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>To access controls in a subordinate naming container, call the <ph id="ph1">`FindControl`</ph> method of that container.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The identifier for the control to be found.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>The specified control, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified control does not exist.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Gets the HTML form for the page.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the Form property to access the methods and properties of the &lt;xref:System.Web.UI.HtmlControls.HtmlForm&gt; object that is the base of the control hierarchy on the page.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.HtmlControls.HtmlForm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object associated with the page.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Initializes the control tree during page generation based on the declarative nature of the page.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>The FrameworkInitialize method initializes the &lt;xref:System.Web.UI.Page&gt; object and creates the control tree based on the declarative nature of the page.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>The FrameworkInitialize method is overridden by the page parsing and code generation for the &lt;xref:System.Web.UI.Page&gt; class for a declarative page.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source>Ordinarily, you should not over need to override this method.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>If overriding, be sure to call the base class's FrameworkInitialize method.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Gets the data item at the top of the data-binding context stack.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>The object at the top of the data binding context stack.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>There is no data-binding context for the page.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Gets a reference that can be used in a client event to post back to the server for the specified control and with the specified event arguments.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the &lt;xref:System.Web.UI.ClientScriptManager&gt; class for alternatives to this deprecated member.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The server control that receives the client event postback.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; that is passed to <ph id="ph1">&amp;lt;</ph>xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>The string that represents the client event.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Gets a reference, with <bpt id="p1">&lt;xref uid="langword_csharp_javascript:" name="javascript:" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control and with the specified event arguments.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the &lt;xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A&gt; method for an alternative to this deprecated member.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The server control to process the postback.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The parameter passed to the server control.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Returns a string that can be used in a client event to cause postback to the server.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>The reference string is defined by the specified <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has been deprecated.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt; method in the &lt;xref:System.Web.UI.ClientScriptManager&gt; class instead.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>The server control to process the postback on the server.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>A string that, when treated as script on the client, initiates the postback.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Returns a string that can be used in a client event to cause postback to the server.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has been deprecated.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt; method in the &lt;xref:System.Web.UI.ClientScriptManager&gt; class instead.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>The server control to process the postback.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>The parameter passed to the server control.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>A string that, when treated as script on the client, initiates the postback.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Retrieves a hash code that is generated by <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that are generated at run time.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>This hash code is unique to the <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object's control hierarchy.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not override this method.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The hash code generated at run time.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>The default is 0.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Returns a collection of control validators for a specified validation group.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetValidators method returns all the validation objects associated with a specific validation group.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can return the default validation group (all validation controls associated with controls without the <ph id="ph1">`ValidationGroup`</ph> property set) by setting the <ph id="ph2">`validationGroup`</ph> parameter to <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>To validate the members of the validation group, you can enumerate over the collection and call the &lt;xref:System.Web.UI.IValidator.Validate%2A&gt; method of each validator returned.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>The validation group to return, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to return the default validation group.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.UI.ValidatorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the control validators for the specified validation group.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Returns a list of physical file names that correspond to a list of virtual file locations.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetWrappedFileDependencies method gets a list of files, such as user control files, that make up the current page.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any of these pages are modified, the entire page is compiled the next time it is requested.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not override this method.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>A string array of virtual file locations.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>An object containing a list of physical file locations.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Gets the document header for the page if the <bpt id="p1">&lt;xref uid="langword_csharp_head" name="head" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> element is defined with a <bpt id="p2">&lt;xref uid="langword_csharp_runat=server" name="runat=server" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> in the page declaration.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Header property gets a reference to an &lt;xref:System.Web.UI.HtmlControls.HtmlHead&gt; object that you can use to set document header information for the page.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.HtmlControls.HtmlHead&gt; allows you to add information such as style sheets, style rules, a title, and metadata to the <ph id="ph1">`head`</ph> element.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Adding styles programmatically using the methods of the &lt;xref:System.Web.UI.IStyleSheet&gt; interface during asynchronous postbacks is not supported.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you add AJAX capabilities to a Web page, asynchronous postbacks update regions of the page without updating the whole page.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Microsoft Ajax Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Web.UI.HtmlControls.HtmlHead"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the page header.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Gets or sets an identifier for a particular instance of the <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>The identifier for the instance of the <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>The default value is '_Page'.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Gets the character used to separate control identifiers when building a unique ID for a control on a page.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>The character used to separate control identifiers.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>The default is set by the <bpt id="p1">&lt;xref href="System.Web.UI.Adapters.PageAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance that renders the page.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>The IdSeparator is a server-side field and should not be modified.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>Occurs when page initialization is complete.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>The InitComplete event is called at the end of the page's initialization stage.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT">
          <source>At this stage of the page's life cycle, all declared controls on the page are initialized, but the page's state is not yet populated.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can access server controls, but they will not yet contain information returned from the user.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Sets the &lt;xref:System.Web.UI.Page.Culture<bpt id="p1">*</bpt>&gt; and &lt;xref:System.Web.UI.Page.UICulture<ept id="p1">*</ept>&gt; for the current thread of the page.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT">
          <source>The InitializeCulture method contains no coding logic.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT">
          <source>Control developers extending the functionality of the &lt;xref:System.Web.UI.Page&gt; class can override the InitializeCulture method to initialize the &lt;xref:System.Web.UI.Page.Culture%2A&gt; and &lt;xref:System.Web.UI.Page.UICulture%2A&gt; information for the page.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Initializes the output cache for the current page request based on an <bpt id="p1">&lt;xref href="System.Web.UI.OutputCacheParameters"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should not call this method.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT">
          <source>To enable and manipulate output caching for a page, use either the  directive in the .aspx file, or the methods and properties of the &lt;xref:System.Web.HttpCachePolicy&gt; class.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT">
          <source>The latter are accessible through <ph id="ph1">`Response.Cache`</ph> syntax in the page's code declaration block or code-behind file.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Caching ASP.NET Pages<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Web.UI.OutputCacheParameters"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the cache settings.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>The output cache settings location is invalid.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>Initializes the output cache for the current page request.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should not call this method.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT">
          <source>To enable and manipulate output caching for a page, use either the  directive in the .aspx file, or the methods and properties of the &lt;xref:System.Web.HttpCachePolicy&gt; class.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT">
          <source>The latter are accessible through <ph id="ph1">`Response.Cache`</ph> syntax in the page's code.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Caching ASP.NET Pages<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>The amount of time that objects stored in the output cache are valid.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>A semicolon-separated list of headers that content from the output cache will vary by.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_Vary" name="Vary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> HTTP header.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Web.UI.OutputCacheLocation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>A semicolon-separated list of parameters received by a GET or POST method that content from the output cache will vary by.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>An invalid value is specified for <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">location</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>Initializes the output cache for the current page request.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should not call this method.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT">
          <source>To enable and manipulate output caching for a page, use either the  directive in the .aspx file, or methods and properties of the &lt;xref:System.Web.HttpCachePolicy&gt; class.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT">
          <source>The latter are accessible through <ph id="ph1">`Response.Cache`</ph> syntax in the page's code.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Caching ASP.NET Pages<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>The amount of time that objects stored in the output cache are valid.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>A semicolon-separated list of character-sets (content encodings) that content from the output cache will vary by.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>A semicolon-separated list of headers that content from the output cache will vary by.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_Vary" name="Vary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> HTTP header.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Web.UI.OutputCacheLocation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>A semicolon-separated list of parameters received by a GET or POST method that content from the output cache will vary by.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>An invalid value is specified for <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">location</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the page is processed asynchronously.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the IsAsync property to determine whether the Web page is running in asynchronous mode.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT">
          <source>This information is useful if controls or code on the page need to modify their behavior depending on whether the page is asynchronous.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about asynchronous programming, see <bpt id="p1">[</bpt>Asynchronous Operations<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the page is in asynchronous mode; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>;</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the page request is the result of a callback.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Implementing Client Callbacks Without Postbacks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the page request is the result of a callback; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>Determines whether the client script block with the specified key is registered with the page.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this method before calling &lt;xref:System.Web.UI.Page.RegisterClientScriptBlock%2A?displayProperty=fullName&gt; to avoid unnecessarily assembling the client-side script.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is particularly important if the script requires a large amount of server resources to create.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT">
          <source>The IsClientScriptBlockRegistered method has been deprecated.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A&gt; method in the &lt;xref:System.Web.UI.ClientScriptManager&gt; class.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>The string key of the client script to search for.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the script block is registered; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the page is involved in a cross-page postback.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET provides two mechanisms for transferring control from one page to another.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the &lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt; method to transfer processing between pages, or you can make a cross-page request by assigning a page URL to the &lt;xref:System.Web.UI.WebControls.IButtonControl.PostBackUrl%2A&gt; property of a button control that implements the &lt;xref:System.Web.UI.WebControls.IButtonControl&gt; interface.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT">
          <source>In either case, the &lt;xref:System.Web.UI.Page.PreviousPage%2A&gt; page property will contain an object that represents the previous or originator page.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT">
          <source>If, for example, Page A posts to Page B, Page A's IsCrossPagePostBack property (accessible through the &lt;xref:System.Web.UI.Page.PreviousPage%2A&gt; property) will be <ph id="ph1">`true`</ph> and Page B's &lt;xref:System.Web.UI.Page.PreviousPage%2A&gt; property will have the name of Page A.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the page is participating in a cross-page request; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the page is being rendered for the first time or is being loaded in response to a postback.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an explanation of the difference between postbacks and callbacks, see <bpt id="p1">[</bpt>Implementing Client Callbacks Without Postbacks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the page is being loaded in response to a client postback; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the control in the page that performs postbacks has been registered.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the control has been registered; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object can be reused.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in all cases.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>Determines whether the client startup script is registered with the <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this method before calling &lt;xref:System.Web.UI.Page.RegisterStartupScript%2A?displayProperty=fullName&gt; to avoid unnecessarily assembling the client-side script.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is particularly important if the script requires a large amount of server resources to create.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT">
          <source>The IsStartupScriptRegistered method has been deprecated.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A&gt; method in the &lt;xref:System.Web.UI.ClientScriptManager&gt; class.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>The string key of the startup script to search for.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the startup script is registered; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether page validation succeeded.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT">
          <source>For this property to return <ph id="ph1">`true`</ph>, all validation server controls in the current validation group must validate successfully.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should check this property only after you have called the &lt;xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName&gt; method, or set the <ph id="ph1">`CausesValidation`</ph> property to <ph id="ph2">`true`</ph> in the <ph id="ph3">`OnServerClick`</ph> event handler for an ASP.NET server control that initiates form processing.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT">
          <source>These server controls include the &lt;xref:System.Web.UI.WebControls.Button&gt;, &lt;xref:System.Web.UI.HtmlControls.HtmlButton&gt;, &lt;xref:System.Web.UI.HtmlControls.HtmlInputButton&gt;, &lt;xref:System.Web.UI.HtmlControls.HtmlInputImage&gt;, &lt;xref:System.Web.UI.WebControls.ImageButton&gt;, and &lt;xref:System.Web.UI.WebControls.LinkButton&gt; classes.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you force validation of a validation group using the &lt;xref:System.Web.UI.Page.Validate%2A&gt; method, then all validation controls in the specified validation group must validate successfully as well.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if page validation succeeded; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>The IsValid property is called before validation has occurred.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>Gets a list of objects stored in the page context.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the Items property to store objects with the same lifetime as the page request.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is read-only; however, you can add objects to the &lt;xref:System.Collections.IDictionary&gt; object it returns.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT">
          <source>Objects added to the Items property are available throughout the lifetime of the page, so you can add objects to the Items property in events early in the page life cycle and access those objects in later events.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>A reference to an &lt;xref:System.Collections.IDictionary&gt; containing objects stored in the page context.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Sets the locale identifier for the <bpt id="p1">&lt;xref href="System.Threading.Thread"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object associated with the page.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT">
          <source>In most circumstances, do not set this property in code.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`LCID`</ph> attribute can be set in the  directive of the .aspx file, however, the preferred method of setting the locale identifier is through the use of the &lt;xref:System.Web.UI.Page.Culture%2A&gt; and &lt;xref:System.Web.UI.Page.UICulture%2A&gt; properties.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>The locale identifier to pass to the <bpt id="p1">&lt;xref href="System.Threading.Thread"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>Occurs at the end of the load stage of the page's life cycle.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT">
          <source>The LoadComplete event occurs after all postback data and view-state data is loaded into the page and after the &lt;xref:System.Web.UI.Control.OnLoad%2A&gt; method has been called for all controls on the page.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>Loads any saved view-state information to the <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT">
          <source>The LoadPageStateFromPersistenceMedium method uses the &lt;xref:System.Web.UI.PageStatePersister.Load%2A&gt; method of the &lt;xref:System.Web.UI.PageStatePersister?displayProperty=fullName&gt; object referenced by the &lt;xref:System.Web.UI.Page.PageStatePersister%2A&gt; property to load any saved view-state information for the &lt;xref:System.Web.UI.Page&gt; object.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET includes two descendents of the &lt;xref:System.Web.UI.PageStatePersister&gt; class, the &lt;xref:System.Web.UI.HiddenFieldPageStatePersister&gt; class that saves state information in a hidden field included in the ASP.NET page, and the &lt;xref:System.Web.UI.SessionPageStatePersister&gt; class that saves state in the &lt;xref:System.Web.UI.Page.Session%2A&gt; object associated with the request.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT">
          <source>To save state in the location of your choice, you should create a new descendent of the &lt;xref:System.Web.UI.PageStatePersister&gt; class that saves and loads state to the persistence medium of your choice.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example of creating a new &lt;xref:System.Web.UI.PageStatePersister&gt; object, see the &lt;xref:System.Web.UI.PageStatePersister&gt; class.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are using the .NET Framework version 1.0 or 1.1, override this method if you want to load the &lt;xref:System.Web.UI.Page&gt; state from anything other than a hidden field.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you choose to do so, you must also override the &lt;xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>The saved view state.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether to return the user to the same position in the client browser after postback.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>This property replaces the obsolete &lt;xref:System.Web.UI.Page.SmartNavigation*&gt; property.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT">
          <source>When Web pages are posted back to the server, the user is returned to the top of the page.</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT">
          <source>On long Web pages, this means that the user has to scroll the page back to the last position on the page.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the MaintainScrollPositionOnPostBack property is set to <ph id="ph1">`true`</ph>, the user is instead returned to the last position on the page.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT">
          <source>You set the MaintainScrollPositionOnPostBack property in the <bpt id="p1">[</bpt>@ Page<ept id="p1">](http://msdn.microsoft.com/en-us/f06cf9e5-22bb-461d-8b8f-549e53ff40a4)</ept> directive.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the client position should be maintained; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>Retrieves the physical path that a virtual path, either absolute or relative, or an application-relative path maps to.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; that represents the virtual path.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>The physical path associated with the virtual path or application-relative path.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>Gets the master page that determines the overall look of the page.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Master property returns the &lt;xref:System.Web.UI.MasterPage&gt; object associated with this page.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is read-only; however, you can set properties on the &lt;xref:System.Web.UI.MasterPage&gt; object it returns.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Master property is valid only on pages that reference a master page in the &lt;xref:System.Web.UI.Page.MasterPageFile%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you access the Master property on a page that does not reference a master page, <ph id="ph1">`null`</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT">
          <source>The contents of a master page are not available until after the &lt;xref:System.Web.UI.Page.PreInit&gt; event has been raised.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.MasterPage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with this page if it exists; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>Gets or sets the virtual path of the master page.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT">
          <source>The MasterPageFile property is a virtual path (from the root of the application) of the master page file associated with this page.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT">
          <source>The MasterPageFile property can be set only in the &lt;xref:System.Web.UI.Page.PreInit&gt; event; attempting to set the MasterPageFile property after the &lt;xref:System.Web.UI.Page.PreInit&gt; event will throw an &lt;xref:System.InvalidOperationException&gt; exception.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the MasterPageFile property is not valid, an exception of type &lt;xref:System.Web.HttpException&gt; is thrown later in the page life cycle, but no exception is thrown when the property is set in the &lt;xref:System.Web.UI.Page.PreInit&gt; event.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT">
          <source>Pages that have the MasterPageFile property set are content pages, and therefore can contain only top-level controls that are &lt;xref:System.Web.UI.WebControls.Content&gt; controls.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>The virtual path of the master page.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>The MasterPageFile property is set after the <bpt id="p1">&lt;xref href="System.Web.UI.Page.PreInit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event is complete.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>Gets or sets the maximum length for the page's state field.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the MaxPageStateFieldLength property is set to a positive number, the view state sent to the client browser is broken into multiple hidden fields, and each field's value is less than the size specified in the MaxPageStateFieldLength property.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the MaxPageStateFieldLength property to a negative number (the default) indicates that the view-state field should not be separated into chunks.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the MaxPageStateFieldLength to a small number may result in poor performance.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the value of the MaxPageStateFieldLength property in the  of the Web.config file.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>The maximum length, in bytes, for the page's state field.</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>The default is -1.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>The MaxPageStateFieldLength property is not equal to -1 or a positive number.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>The MaxPageStateFieldLength property was set after the page was initialized.</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>Gets or sets the content of the "description" <bpt id="p1">&lt;xref uid="langword_csharp_meta" name="meta" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> element.</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT">
          <source>HTML <ph id="ph1">`meta`</ph> elements can be used to improve search-engine listings.</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT">
          <source>The "description" <ph id="ph1">`meta`</ph> element is used by some search engines to improve listing previews.</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is no "description" <ph id="ph1">`meta`</ph> element in the <ph id="ph2">`head`</ph> element of the page markup, the <ph id="ph3">`meta`</ph> element is added to the page when the page is rendered.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the page markup already has a "description" <ph id="ph1">`meta`</ph> element, this property gets or sets the <ph id="ph2">`content`</ph> attribute of the <ph id="ph3">`meta`</ph> element.</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also set this property in the  directive.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>The content of the "description" <bpt id="p1">&lt;xref uid="langword_csharp_meta" name="meta" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> element.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>The page does not have a header control (a <bpt id="p1">&lt;xref uid="langword_csharp_head" name="head" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> element with the <bpt id="p2">&lt;xref uid="langword_csharp_runat" name="runat" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> attribute set to "server").</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>Gets or sets the content of the "keywords" <bpt id="p1">&lt;xref uid="langword_csharp_meta" name="meta" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> element.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT">
          <source>HTML <ph id="ph1">`meta`</ph> elements can be used to improve search-engine listings.</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT">
          <source>The "keywords" <ph id="ph1">`meta`</ph> element is either not used at all or is given very little weight by the major search engines.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is no "keywords" <ph id="ph1">`meta`</ph> element in the <ph id="ph2">`head`</ph> element of the page markup, the <ph id="ph3">`meta`</ph> element is added to the page when the page is rendered.</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the page markup already has a "keywords" <ph id="ph1">`meta`</ph> element, this property gets or sets the <ph id="ph2">`content`</ph> attribute of the <ph id="ph3">`meta`</ph> element.</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also set this property in the  directive.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>The content of the "keywords" <bpt id="p1">&lt;xref uid="langword_csharp_meta" name="meta" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> element.</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>The page does not have a header control (a <bpt id="p1">&lt;xref uid="langword_csharp_head" name="head" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> element with the <bpt id="p2">&lt;xref uid="langword_csharp_runat" name="runat" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> attribute set to "server").</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>Gets the model binding execution context.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>The model binding execution context.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>If the model binding execution context is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, a new one is created and returned.</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>Gets the model state dictionary object that contains the state of the model and of model-binding validation.</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a tutorial series on using model binding with Web Forms, see <bpt id="p1">[</bpt>Model Binding and Web Forms<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=286117)</ept>.</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>The model state dictionary object.</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Web.UI.Control.Init"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event to initialize the page.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnInit method performs the initialization and setup steps required to create a &lt;xref:System.Web.UI.Page&gt; instance.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this stage of the page's life cycle, declared server controls on the page are initialized to their default state; however, the view state of each control is not yet populated.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT">
          <source>A control on the page cannot access other server controls on the page during the <ph id="ph1">`Page_Init`</ph> phase, regardless of whether the other controls are child or parent controls.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other server controls are not guaranteed to be created and ready for access.</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnInit method is called after the &lt;xref:System.Web.UI.Page.OnPreInit%2A&gt; method and before the &lt;xref:System.Web.UI.Page.OnInitComplete%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnInit method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data.</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Web.UI.Page.InitComplete"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event after page initialization.</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnInitComplete method is called after page initialization is complete.</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this stage of the page's life cycle, all declared controls on the page are initialized, but the page's view state is not yet populated.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can access server controls, but they will not yet contain information returned from the user.</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnInitComplete method occurs at the end of the &lt;xref:System.Web.UI.Page&gt; initialization stage and before the load stage.</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnInitComplete method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data.</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Web.UI.Page.LoadComplete"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event at the end of the page load stage.</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnLoadComplete method is called at the end of the page load stage.</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT">
          <source>At this point in the page life cycle, all postback data and view-state data is loaded into controls on the page.</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnLoadComplete method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data.</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Web.UI.Page.PreInit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event at the beginning of page initialization.</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnPreInit method is called at the beginning of the page initialization stage.</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the OnPreInit method is called, personalization information is loaded and the page theme, if any, is initialized.</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is also the preferred stage to dynamically define a &lt;xref:System.Web.UI.PageTheme&gt; or &lt;xref:System.Web.UI.MasterPage&gt; for the Page.</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnPreInit method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Web.UI.Page.PreLoad"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event after postback data is loaded into the page server controls but before the &lt;xref:System.Web.UI.Control.OnLoad*&gt; event.</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnPreLoad method is called after all postback data returned from the user is loaded.</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT">
          <source>At this stage in the page's life cycle, view-state information and postback data for declared controls and controls created during the initialization stage are loaded into the page's controls.</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT">
          <source>Controls created in the OnPreLoad method will also be loaded with view-state and postback data.</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnPreLoad method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data.</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Web.UI.Page.PreRenderComplete"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event after the OnPreRenderComplete event and before the page is rendered.</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnPreRenderComplete method is called when the prerendering stage of the page life cycle is complete.</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT">
          <source>At this stage of the page life cycle, all controls are created and the page is ready to render the output.</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the last event called before the page's view state is saved.</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnPreRenderComplete method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data.</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Web.UI.Page.SaveStateComplete"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event after the page state has been saved to the persistence medium.</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnSaveStateComplete method is called when the state information for the control has been written to the persistence medium for the page.</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT">
          <source>State information is written to the persistence medium by calling the &lt;xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnSaveStateComplete method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.EventArgs&gt; object containing the event data.</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>Gets the adapter that renders the page for the specific requesting browser.</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT">
          <source>The PageAdapter property returns the specific &lt;xref:System.Web.UI.Adapters.PageAdapter&gt; object that modifies the behavior of the &lt;xref:System.Web.UI.Page&gt; object for the requesting browser.</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT">
          <source>The specific &lt;xref:System.Web.UI.Adapters.PageAdapter&gt; object is determined by examining characteristics of the incoming &lt;xref:System.Web.UI.Page.Request%2A&gt; object.</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an adapter is chosen for the request, any life cycle events on the &lt;xref:System.Web.UI.Adapters.PageAdapter&gt; object override the corresponding events on the &lt;xref:System.Web.UI.Page&gt; object.</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.Adapters.PageAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that renders the page.</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Web.UI.PageStatePersister"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object associated with the page.</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT">
          <source>HTTP requests and responses are inherently stateless.</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT">
          <source>To maintain state between HTTP requests, ASP.NET server pages can store &lt;xref:System.Web.UI.Page&gt; state.</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT">
          <source>This state, called view state, consists of page and control settings and data that make the page and controls appear as if they are the same ones that the user saw and interacted with on their last round trip to the page.</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT">
          <source>Several mechanisms exist to store view state between successive requests to the same page.</source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT">
          <source>The abstract &lt;xref:System.Web.UI.PageStatePersister&gt; class represents the base class for these state storage mechanisms.</source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT">
          <source>Page developers will typically not need to use the PageStatePersister property.</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT">
          <source>The PageStatePersister property is used primarily by control developers extending the functionality of the &lt;xref:System.Web.UI.Page&gt; class.</source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.UI.PageStatePersister"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with the page.</source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>A string that defines the EVENTARGUMENT hidden field in the rendered page.</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>A string that defines the EVENTTARGET hidden field in the rendered page.</source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>Occurs before page initialization.</source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event enables you to check conditions of the page request, such as whether the page is being loaded in response to a postback.</source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also check the values of profile properties.</source>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event enables you to set values that are used later in the page life cycle.</source>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can dynamically set a master page or a theme for the requested page, and create dynamic controls.</source>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how the PreInit event fits into the ASP.NET life cycle, see <bpt id="p1">[</bpt>ASP.NET Page Life Cycle Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>Occurs before the page <bpt id="p1">&lt;xref href="System.Web.UI.Control.Load"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT">
          <source>The PreLoad event is raised after all postback data processing and before the &lt;xref:System.Web.UI.Control.Load&gt; event.</source>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is a second attempt to load postback data before the &lt;xref:System.Web.UI.Page.OnLoadComplete%2A&gt; event.</source>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>Occurs before the page content is rendered.</source>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT">
          <source>The PreRenderComplete event is raised when the pre-render stage of the page life cycle is complete.</source>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT">
          <source>At this stage of the page life cycle, all controls are created, any pagination required is completed, and the page is ready to render to the output.</source>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the last event raised before the page's view state is saved.</source>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>Gets the page that transferred control to the current page.</source>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use the &lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt; method or use cross-page posting to transfer processing from one ASP.NET page to another, the originating page contains request information that might be required for the destination page.</source>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the PreviousPage property to access that information.</source>
        </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the current page is being rendered as a result of a direct request (not a transfer or cross-post from another page), the PreviousPage property contains <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> representing the page that transferred control to the current page.</source>
        </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>The current user is not allowed to access the previous page.</source>
        </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>-or-       ASP.NET routing is in use and the previous page's URL is a routed URL.</source>
        </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>When ASP.NET checks access permissions, it assumes that the URL is an actual path to a file.</source>
        </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>Because this is not the case with a routed URL, the check fails.</source>
        </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>Sets the intrinsic server objects of the <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object, such as the &lt;xref:System.Web.UI.Page.Context<bpt id="p2">*</bpt>&gt;, &lt;xref:System.Web.UI.Page.Request<ept id="p2">*</ept>&gt;, &lt;xref:System.Web.UI.Page.Response<bpt id="p3">*</bpt>&gt;, and &lt;xref:System.Web.UI.Page.Application<ept id="p3">*</ept>&gt; properties.</source>
        </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should not call this method.</source>
        </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Web.HttpContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that provides references to the intrinsic server objects (for example, &lt;xref:System.Web.HttpContext.Request<bpt id="p2">*</bpt>&gt;, &lt;xref:System.Web.HttpContext.Response<ept id="p2">*</ept>&gt;, and &lt;xref:System.Web.HttpContext.Session*&gt;) used to service HTTP requests.</source>
        </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>Notifies the server control that caused the postback that it should handle an incoming postback event.</source>
        </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.Page&gt; object calls the RaisePostBackEvent method when a postback occurs.</source>
        </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT">
          <source>This call occurs in the page life cycle after loading and change notification are complete but before prerendering occurs.</source>
        </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>The ASP.NET server control that caused the postback.</source>
        </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>This control must implement the <bpt id="p1">&lt;xref href="System.Web.UI.IPostBackEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface.</source>
        </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>The postback argument.</source>
        </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>Declares a value that is declared as an ECMAScript array declaration when the page is rendered.</source>
        </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be used by script-based controls to declare themselves within an array so that a client script library can work with all the controls of the same type.</source>
        </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT">
          <source>The RegisterArrayDeclaration method has been deprecated.</source>
        </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A&gt; method in the &lt;xref:System.Web.UI.ClientScriptManager&gt; class.</source>
        </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>The name of the array in which to declare the value.</source>
        </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>The value to place in the array.</source>
        </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source>Registers a new asynchronous task with the page.</source>
        </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT">
          <source>Define an asynchronous task using the &lt;xref:System.Web.UI.PageAsyncTask&gt; class.</source>
        </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the task is defined, use the RegisterAsyncTask method to register the task with the page.</source>
        </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT">
          <source>After registering the task, invoke the &lt;xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt; method to begin the asynchronous task.</source>
        </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT">
          <source>The RegisterAsyncTask method can be used with both synchronous and asynchronous pages.</source>
        </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.UI.PageAsyncTask"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that defines the asynchronous task.</source>
        </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source>The asynchronous task is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve">
          <source>Emits client-side script blocks to the response.</source>
        </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT">
          <source>The client-side script is emitted just after the opening tag of the &lt;xref:System.Web.UI.Page&gt; object's <ph id="ph1">`&lt;form runat= server&gt;`</ph> element.</source>
        </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be sure to include opening and closing <ph id="ph1">`&lt;script&gt;`</ph> elements around the script block string specified in the <ph id="ph2">`script`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this method uses a key to identify the script block, the script block does not have to be emitted to the output stream each time it is requested by a different server control instance.</source>
        </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using a key also decreases the likelihood of different controls' script blocks interfering with each other.</source>
        </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any script blocks with the same <ph id="ph1">`key`</ph> parameter values are considered duplicates.</source>
        </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Remember to include HTML comment tags around your script so that it will not be rendered if the requesting browser does not support scripts.</source>
        </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT">
          <source>The RegisterClientScriptBlock method has been deprecated.</source>
        </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt; method in the &lt;xref:System.Web.UI.ClientScriptManager&gt; class instead.</source>
        </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve">
          <source>Unique key that identifies a script block.</source>
        </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve">
          <source>Content of script that is sent to the client.</source>
        </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve">
          <source>Allows server controls to automatically register a hidden field on the form.</source>
        </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve">
          <source>The field will be sent to the <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object when the <bpt id="p2">&lt;xref href="System.Web.UI.HtmlControls.HtmlForm"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> server control is rendered.</source>
        </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT">
          <source>The RegisterHiddenField method has been deprecated.</source>
        </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A&gt; method in the &lt;xref:System.Web.UI.ClientScriptManager&gt; class.</source>
        </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve">
          <source>The unique name of the hidden field to be rendered.</source>
        </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve">
          <source>The value to be emitted in the hidden form.</source>
        </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve">
          <source>Allows a page to access the client <bpt id="p1">&lt;xref uid="langword_csharp_OnSubmit" name="OnSubmit" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
        </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve">
          <source>The script should be a function call to client code registered elsewhere.</source>
        </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT">
          <source>The RegisterOnSubmitStatement method has been deprecated.</source>
        </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A&gt; method in the &lt;xref:System.Web.UI.ClientScriptManager&gt; class.</source>
        </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve">
          <source>Unique key that identifies a script block.</source>
        </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve">
          <source>The client-side script to be sent to the client.</source>
        </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve">
          <source>Registers a control as one whose control state must be persisted.</source>
        </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT">
          <source>Custom server controls that use control state must call the RegisterRequiresControlState method on each request because registration for control state is not carried over from request to request during a postback event.</source>
        </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is recommended that registration occur in the &lt;xref:System.Web.UI.Control.Init&gt; event.</source>
        </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve">
          <source>The control to register.</source>
        </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve">
          <source>The control to register is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve">
          <source>The RegisterRequiresControlState method can be called only before or during the <bpt id="p1">&lt;xref href="System.Web.UI.Control.PreRender"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
        </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve">
          <source>Registers a control as one that requires postback handling when the page is posted back to the server.</source>
        </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT">
          <source>The control to be registered must implement the &lt;xref:System.Web.UI.IPostBackDataHandler&gt; interface or an &lt;xref:System.Web.HttpException&gt; is raised.</source>
        </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT">
          <source>When implemented by a control, the &lt;xref:System.Web.UI.IPostBackDataHandler&gt; interface enables handling of post back data and raising of any post back data changed events.</source>
        </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on the server control event model, see <bpt id="p1">[</bpt>ASP.NET Web Forms Server Control Event Model<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT">
          <source>Register controls with the page at or before the <ph id="ph1">`Page_PreRender`</ph> event of the page life cycle.</source>
        </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve">
          <source>The control to be registered.</source>
        </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve">
          <source>The control to register does not implement the <bpt id="p1">&lt;xref href="System.Web.UI.IPostBackDataHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface.</source>
        </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve">
          <source>Registers an ASP.NET server control as one requiring an event to be raised when the control is processed on the <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only one server control can be registered per page request.</source>
        </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT">
          <source>The RegisterRequiresRaiseEvent must be used when the control does not include its control ID in the form post data.</source>
        </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also, the control that is registered must implement the &lt;xref:System.Web.UI.IPostBackEventHandler&gt; interface.</source>
        </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve">
          <source>The control to register.</source>
        </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve">
          <source>Registers a control with the page as one requiring view-state encryption.</source>
        </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are developing a custom control that deals with potentially sensitive information, call the RegisterRequiresViewStateEncryption method to register the control with the page and ensure view state for the control is encrypted.</source>
        </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT">
          <source>The entire page state will be encrypted if the &lt;xref:System.Web.UI.Page.ViewStateEncryptionMode%2A&gt; is set to &lt;xref:System.Web.UI.ViewStateEncryptionMode&gt; or &lt;xref:System.Web.UI.ViewStateEncryptionMode&gt;.</source>
        </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve">
          <source>The RegisterRequiresViewStateEncryption method must be called before or during the page <bpt id="p1">&lt;xref uid="langword_csharp_PreRender" name="PreRender" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>phase in the page life cycle.</source>
        </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve">
          <source>Emits a client-side script block in the page response.</source>
        </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT">
          <source>Similar to the &lt;xref:System.Web.UI.Page.RegisterClientScriptBlock%2A&gt; method, the RegisterStartupScript method emits the script just before the closing tag of the &lt;xref:System.Web.UI.Page&gt; object's <ph id="ph1">`&lt;form runat= server&gt;`</ph> element.</source>
        </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be sure to include opening and closing <ph id="ph1">`&lt;script&gt;`</ph> elements around the script block string specified in the <ph id="ph2">`script`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this method uses a key to identify the script block, the script block does not have to be emitted to the output stream each time it is requested by a different server control instance       Any script blocks with the same <ph id="ph1">`key`</ph> parameter values are considered duplicates.</source>
        </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Remember to include HTML comment tags around your script so that it will not be rendered if the requesting browser does not support scripts.</source>
        </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT">
          <source>The RegisterStartupScript method has been deprecated.</source>
        </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt; method in the &lt;xref:System.Web.UI.ClientScriptManager&gt; class instead.</source>
        </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve">
          <source>Unique key that identifies a script block.</source>
        </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve">
          <source>Content of script that will be sent to the client.</source>
        </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve">
          <source>Causes page view state to be persisted, if called.</source>
        </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT">
          <source>The RegisterViewStateHandler method is automatically called through the &lt;xref:System.Web.UI.HtmlControls.HtmlForm&gt; server control.</source>
        </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this method is not invoked, the page view state will not be persisted.</source>
        </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Typically, only the &lt;xref:System.Web.UI.HtmlControls.HtmlForm&gt; server control for the page calls this method.</source>
        </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve">
          <source>Initializes the <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object and calls on the child controls of the <bpt id="p2">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to render.</source>
        </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Render method is responsible for creating the text and markup that is sent to the client browser.</source>
        </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default Render method calls &lt;xref:System.Web.UI.Control.RenderChildren%2A&gt; to write the text and markup for the controls contained on the page.</source>
        </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that receives the page content.</source>
        </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Web.HttpRequest"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for the requested page.</source>
        </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.HttpRequest&gt; object contains information about the current HTTP request.</source>
        </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve">
          <source>The current <bpt id="p1">&lt;xref href="System.Web.HttpRequest"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with the page.</source>
        </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve">
          <source>Occurs when the <bpt id="p1">&lt;xref href="System.Web.HttpRequest"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is not available.</source>
        </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve">
          <source>Determines whether the specified <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is registered to participate in control state management.</source>
        </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT">
          <source>Control state is an object composed of critical view-state data that Web server controls need to function; it is contained in a separate object from normal view state.</source>
        </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT">
          <source>Custom controls using control state must call the &lt;xref:System.Web.UI.Page.RegisterRequiresControlState%2A&gt; method before saving control state.</source>
        </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the RequiresControlState method to check for controls that are registered with the page as requiring control state.</source>
        </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to check for a control state requirement.</source>
        </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified <bpt id="p2">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> requires control state; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept></source>
        </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Web.HttpResponse"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object associated with the <bpt id="p2">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve">
          <source>This object allows you to send HTTP response data to a client and contains information about that response.</source>
        </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve">
          <source>The current <bpt id="p1">&lt;xref href="System.Web.HttpResponse"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with the page.</source>
        </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.HttpResponse"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is not available.</source>
        </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve">
          <source>Sets the encoding language for the current <bpt id="p1">&lt;xref href="System.Web.HttpResponse"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT">
          <source>In most circumstances, do not set this property in code.</source>
        </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">`ResponseEncoding`</ph> attribute to the value you want using the  directive in the .aspx file.</source>
        </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the page is requested, the dynamically generated class sets the property.</source>
        </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve">
          <source>A string that contains the encoding language for the current <bpt id="p1">&lt;xref href="System.Web.HttpResponse"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&amp;lt;</ph>xref:System.Web.Routing.RequestContext.RouteData%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> value of the current <ph id="ph3">&amp;lt;</ph>xref:System.Web.Routing.RequestContext?displayProperty=fullName<ph id="ph4">&amp;gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a page is running in response to a request made through ASP.NET routing, this property provides access to the URL parameter values that were passed as route data.</source>
        </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the page runs in response to a physical URL instead of a route URL, this property is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example shows how to extract the value of a URL parameter that is named <ph id="ph1">`year`</ph>.</source>
        </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT">
          <source>[Visual Basic]      <ph id="ph1">```   Dim year As Integer = Convert.ToInt32(Page.RouteData.Values("year"))   ```</ph>       [C#]      <ph id="ph2">```   int year = Convert.ToInt32(Page.RouteData.Values["year"])   ```</ph>       If the route is defined by using the URL pattern <ph id="ph3">`{locale}/{year}`</ph> for the domain <ph id="ph4">`contoso.com`</ph>, and if the requested URL is <ph id="ph5">`contoso.com/US/2010`</ph>, <ph id="ph6">`year`</ph> will contain the value "2010" when this code runs.</source>
        </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about ASP.NET routing, see <bpt id="p1">[</bpt>ASP.NET Routing<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&amp;lt;</ph>xref:System.Web.Routing.RequestContext.RouteData%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> value of the current <ph id="ph3">&amp;lt;</ph>xref:System.Web.Routing.RequestContext?displayProperty=fullName<ph id="ph4">&amp;gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve">
          <source>Saves any view-state and control-state information for the page.</source>
        </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SavePageStateToPersistenceMedium method uses the &lt;xref:System.Web.UI.PageStatePersister.Save%2A&gt; method of the &lt;xref:System.Web.UI.PageStatePersister?displayProperty=fullName&gt; object referenced by the &lt;xref:System.Web.UI.Page.PageStatePersister%2A&gt; property to store view-state and control-state information for the page.</source>
        </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET includes two descendents of the &lt;xref:System.Web.UI.PageStatePersister&gt; class, the &lt;xref:System.Web.UI.HiddenFieldPageStatePersister&gt; class that saves state information in a hidden field included in the ASP.NET page, and the &lt;xref:System.Web.UI.SessionPageStatePersister&gt; class that saves state in the &lt;xref:System.Web.UI.Page.Session%2A&gt; object associated with the request.</source>
        </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that when using the &lt;xref:System.Web.UI.SessionPageStatePersister&gt; class the hidden VIEWSTATE field is still rendered as this is used to determine post back.</source>
        </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT">
          <source>To save state in the location of your choice, you should create a new descendent of the &lt;xref:System.Web.UI.PageStatePersister&gt; class that saves and loads state to the persistence medium of your choice.</source>
        </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example of creating a new &lt;xref:System.Web.UI.PageStatePersister&gt; object, see the &lt;xref:System.Web.UI.PageStatePersister&gt; class.</source>
        </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are using the .NET Framework version 1.0 or 1.1, override this method if you want to save the &lt;xref:System.Web.UI.Page&gt; state in anything other than a hidden field.</source>
        </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you choose to do so, you must also override the &lt;xref:System.Web.UI.Page.LoadPageStateFromPersistenceMedium%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; in which to store the view-state information.</source>
        </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve">
          <source>Occurs after the page has completed saving all view state and control state information for the page and controls on the page.</source>
        </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT">
          <source>State information for controls on the Web page is saved after the &lt;xref:System.Web.UI.Page.PreRenderComplete&gt; event.</source>
        </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SaveStateComplete event is raised after the view state and control state of the page and controls on the page are saved to the persistence medium.</source>
        </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the last event raised before the page is rendered to the requesting browser.</source>
        </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref uid="langword_csharp_Server" name="Server" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object, which is an instance of the <bpt id="p2">&lt;xref href="System.Web.HttpServerUtility"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property provides access to the frequently used &lt;xref:System.Web.HttpServerUtility.HtmlEncode%2A&gt; and &lt;xref:System.Web.HttpServerUtility.MapPath%2A&gt; methods, among others.</source>
        </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve">
          <source>The current <bpt id="p1">&lt;xref uid="langword_csharp_Server" name="Server" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object associated with the page.</source>
        </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve">
          <source>Gets the current <bpt id="p1">&lt;xref uid="langword_csharp_Session" name="Session" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object provided by ASP.NET.</source>
        </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property provides information about the current request's session.</source>
        </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">`Session`</ph> object is maintained for each user that requests a page or document from an ASP.NET application.</source>
        </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT">
          <source>Variables stored in the <ph id="ph1">`Session`</ph> object are not discarded when the user moves from page to page in the application; instead, these variables persist as long as the user is accessing pages in your application.</source>
        </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about session state, see <bpt id="p1">[</bpt>ASP.NET Session State Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve">
          <source>The current session-state data.</source>
        </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve">
          <source>Occurs when the session information is set to <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve">
          <source>Sets the browser focus to the control with the specified identifier.</source>
        </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the SetFocus method to make the control with the specified ID string the active control in the Web page displayed by the browser.</source>
        </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SetFocus method must be called before the page is prepared for rendering to the client in the &lt;xref:System.Web.UI.Control.PreRender&gt; event.</source>
        </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The SetFocus method will work only on browsers supporting ECMAScript version 1.3 or later.</source>
        </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve">
          <source>The ID of the control to set focus to.</source>
        </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;clientID&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve">
          <source>Sets the browser focus to the specified control.</source>
        </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the SetFocus method to make the specified control the active control on the Web page displayed by the browser.</source>
        </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SetFocus method must be called before the page is prepared for rendering to the client in the &lt;xref:System.Web.UI.Control.PreRender&gt; event.</source>
        </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The SetFocus method will work only on browsers supporting ECMAScript version 1.3 or later.</source>
        </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve">
          <source>The control to receive focus.</source>
        </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;control&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the query string value is validated.</source>
        </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if query string validation should be skipped (the query string should not be validated); otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if query string validation should take place as normal.</source>
        </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether smart navigation is enabled.</source>
        </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve">
          <source>This property is deprecated.</source>
        </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT">
          <source>In most circumstances, do not set this property in code.</source>
        </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">`SmartNavigation`</ph> attribute to <ph id="ph2">`true`</ph> in the  directive in the .aspx file.</source>
        </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the page is requested, the dynamically generated class sets this property.</source>
        </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  In ASP.NET version 2.0, the SmartNavigation property is deprecated.</source>
        </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Web.UI.Page.SetFocus%2A&gt; method and the &lt;xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A&gt; property instead.</source>
        </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a page is requested by Microsoft Internet Explorer 5.5 browser, or later, smart navigation enhances the user's experience of the page by performing the following:      -   Eliminating the flash caused by navigation.</source>
        </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Persisting the scroll position when moving from page to page.</source>
        </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Persisting element focus between navigations.</source>
        </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Retaining only the last page state in the browser's history.</source>
        </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT">
          <source>Smart navigation is best used with ASP.NET pages that require frequent postbacks but with visual content that does not change dramatically on return.</source>
        </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consider this carefully when deciding whether to set this property to <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if smart navigation is enabled; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the theme that is applied to the page early in the page life cycle.</source>
        </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property does not refer directly to a cascading style sheet (CSS).</source>
        </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property contains the name of an ASP.NET theme, which can  include CSS files within it.</source>
        </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT">
          <source>The StyleSheetTheme property specifies the name of a theme that is applied to a page early in the page life cycle, whereas the &lt;xref:System.Web.UI.Page.Theme%2A&gt; property specifies the name of a theme that is applied to a page later in the page life cycle.</source>
        </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that settings on the page take precedence over settings in the style sheet theme.</source>
        </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>ASP.NET Themes and Skins<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT">
          <source>You typically set a value for this property in the page directive or by overriding the property.</source>
        </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information, see the following topics:      -   <bpt id="p1">[</bpt>How to: Apply ASP.NET Themes<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept><ph id="ph1">      -   </ph><bpt id="p2">[</bpt>How to: Apply ASP.NET Themes Programmatically<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>)</source>
        </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve">
          <source>The name of the theme that is applied to the page early in the page life cycle.</source>
        </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve">
          <source>An attempt was made to set the StyleSheetTheme property after the &lt;xref:System.Web.UI.Page.FrameworkInitialize*&gt; method was called.</source>
        </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve">
          <source>StyleSheetTheme is set to an invalid theme name.</source>
        </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve">
          <source>This exception is thrown when the &lt;xref:System.Web.UI.Page.FrameworkInitialize*&gt; method is called, not by the property setter.</source>
        </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the page theme.</source>
        </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Theme property sets the name of the theme used for the page.</source>
        </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want the settings on the page to take precedence over the settings in the theme, use the &lt;xref:System.Web.UI.Page.StyleSheetTheme%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>ASP.NET Themes and Skins<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Theme property must be set prior to the &lt;xref:System.Web.UI.Page.PreInit&gt; event; setting the Theme property after the &lt;xref:System.Web.UI.Page.PreInit&gt; event will cause an &lt;xref:System.InvalidOperationException&gt; exception.</source>
        </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT">
          <source>The specified theme must exist as either an application or a global theme.</source>
        </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the theme does not exist, an &lt;xref:System.Web.HttpException&gt; exception is thrown.</source>
        </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve">
          <source>The name of the page theme.</source>
        </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve">
          <source>An attempt was made to set Theme after the <bpt id="p1">&lt;xref href="System.Web.UI.Page.PreInit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event has occurred.</source>
        </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve">
          <source>Theme is set to an invalid theme name.</source>
        </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve">
          <source>Gets or sets the title for the page.</source>
        </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the Title property to set the page title in the HTML header sent to the requesting browser.</source>
        </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The page must contain a <ph id="ph2">`head`</ph> element that has the attribute <ph id="ph3">`runat="server"`</ph>, otherwise the title will not render.</source>
        </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve">
          <source>The title of the page.</source>
        </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve">
          <source>The Title property requires a header control on the page.</source>
        </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Web.TraceContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for the current Web request.</source>
        </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT">
          <source>Tracing tracks and presents the execution details about a Web request.</source>
        </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT">
          <source>For trace data to be visible in a rendered page, you must enable tracing at the page or application level.</source>
        </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT">
          <source>Tracing on a page is disabled by default.</source>
        </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT">
          <source>To enable tracing for a page, use the  directive <ph id="ph1">`&lt;% @ Page trace="true" %&gt;`</ph>.</source>
        </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT">
          <source>To enable tracing for an entire application, you must enable it in the application's configuration file, Web.config, which resides in the root directory of the application.</source>
        </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>ASP.NET Tracing Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve">
          <source>Data from the <bpt id="p1">&lt;xref href="System.Web.TraceContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for the current Web request.</source>
        </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve">
          <source>Sets a value indicating whether tracing is enabled for the <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT">
          <source>In most circumstances, do not set this property in code.</source>
        </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">`Trace`</ph> attribute to <ph id="ph2">`true`</ph> in the  directive in the .aspx file.</source>
        </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the page is requested, the dynamically generated class sets the property.</source>
        </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if tracing is enabled for the page; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve">
          <source>Sets the mode in which trace statements are displayed on the page.</source>
        </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT">
          <source>In most circumstances, do not set this property in code.</source>
        </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">`TraceMode`</ph> attribute in the  directive in the .aspx file.</source>
        </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the page is requested, the dynamically generated class sets the property.</source>
        </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Web.TraceMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration members.</source>
        </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve">
          <source>Sets the level of transaction support for the page.</source>
        </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT">
          <source>In most circumstances, do not set this property in code.</source>
        </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">`Transaction`</ph> attribute in the  directive in the .aspx file.</source>
        </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the page is requested, the dynamically generated class sets the property.</source>
        </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve">
          <source>An integer that represents one of the <bpt id="p1">&lt;xref href="System.EnterpriseServices.TransactionOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration members.</source>
        </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve">
          <source>Sets the user interface (UI) ID for the <bpt id="p1">&lt;xref href="System.Threading.Thread"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object associated with the page.</source>
        </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is a shortcut for the &lt;xref:System.Threading.Thread.CurrentThread%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT">
          <source>The culture is a property of the executing thread       Set the <ph id="ph1">`UICulture`</ph> attribute in the  directive in the .aspx file.</source>
        </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the page is requested, the dynamically generated class sets the value of this property.</source>
        </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, you can also explicitly set the value of the UICulture property in the  of the Web.config file.</source>
        </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve">
          <source>The UI ID.</source>
        </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve">
          <source>Gets a unique suffix to append to the file path for caching browsers.</source>
        </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT">
          <source>The UniqueFilePathSuffix property returns a string that is appended to the end of a file path when required for caching browsers.</source>
        </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string is used to identify the file path associated with a specific request.</source>
        </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve">
          <source>A unique suffix appended to the file path.</source>
        </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve">
          <source>The default is "__ufps=" plus a unique 6-digit number.</source>
        </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether unobtrusive JavaScript is used for client-side validation.</source>
        </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if unobtrusive JavaScript is used; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve">
          <source>Stops persistence of control state for the specified control.</source>
        </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT">
          <source>Custom server controls that use control state must call the &lt;xref:System.Web.UI.Page.RegisterRequiresControlState%2A&gt; on each request during before the state is persisted.</source>
        </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT">
          <source>Registration for control state is not carried over from request to request during a postback.</source>
        </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the UnregisterRequiresControlState method to ensure that control state is not persisted for controls that no longer need to be persisted for postback.</source>
        </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT">
          <source>Internally, the UnregisterRequiresControlState method is invoked when using the &lt;xref:System.Web.UI.Control.RemovedControl%2A&gt; method to remove a control from a controls collection.</source>
        </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for which to stop persistence of control state.</source>
        </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve">
          <source>Gets information about the user making the page request.</source>
        </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT">
          <source>An &lt;xref:System.Security.Principal.IPrincipal&gt; object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.</source>
        </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property uses the &lt;xref:System.Web.HttpContext&gt; object's &lt;xref:System.Web.HttpContext.User%2A&gt; property to determine where the request originates.</source>
        </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Security.Principal.IPrincipal&gt; that represents the user making the page request.</source>
        </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve">
          <source>Instructs any validation controls included on the page to validate their assigned information.</source>
        </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is invoked when a user clicks any ASP.NET server control that has the <ph id="ph1">`CausesValidation`</ph> property set to <ph id="ph2">`true`</ph>, which is the default.</source>
        </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT">
          <source>These include the &lt;xref:System.Web.UI.WebControls.Button&gt;, &lt;xref:System.Web.UI.WebControls.ImageButton&gt;, and &lt;xref:System.Web.UI.WebControls.LinkButton&gt; Web server controls, the &lt;xref:System.Web.UI.HtmlControls.HtmlInputButton&gt;, &lt;xref:System.Web.UI.HtmlControls.HtmlInputImage&gt;, and &lt;xref:System.Web.UI.HtmlControls.HtmlButton&gt; HTML server controls, and controls that can automatically post back to the server such as the &lt;xref:System.Web.UI.WebControls.TextBox&gt;, &lt;xref:System.Web.UI.WebControls.CheckBox&gt;, &lt;xref:System.Web.UI.WebControls.ListControl&gt;, and &lt;xref:System.Web.UI.WebControls.BulletedList&gt; controls.</source>
        </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT">
          <source>To disable validation for any button control on the page, set the button control's <ph id="ph1">`CausesValidation`</ph> property to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this method is invoked, it iterates through the validation controls contained in the &lt;xref:System.Web.UI.ValidatorCollection&gt; object associated with the &lt;xref:System.Web.UI.Page.Validators%2A?displayProperty=fullName&gt; property and invokes the validation logic for each validation control in the current validation group.</source>
        </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" extradata="MT">
          <source>The validation group is determined by the control that posted the page to the server.</source>
        </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no validation group is specified, then no validation group is used.</source>
        </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The behavior of page validation has changed.</source>
        </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT">
          <source>In <ph id="ph1">[!INCLUDE[vstecasplong](~/add/includes/vstecasplong-md.md)]</ph>, controls no longer call the Validate method; they use the &lt;xref:System.Web.UI.Page.Validate%28System.String%29?displayProperty=fullName&gt; method instead.</source>
        </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use the Validate method on an <ph id="ph1">[!INCLUDE[vstecasplong](~/add/includes/vstecasplong-md.md)]</ph> page, validation groups are ignored and all controls are validated.</source>
        </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve">
          <source>Instructs the validation controls in the specified validation group to validate their assigned information.</source>
        </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is invoked when a user clicks any ASP.NET server control that has the <ph id="ph1">`CausesValidation`</ph> property set to <ph id="ph2">`true`</ph>, which is the default.</source>
        </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT">
          <source>These include the &lt;xref:System.Web.UI.WebControls.Button&gt;, &lt;xref:System.Web.UI.WebControls.ImageButton&gt;, and &lt;xref:System.Web.UI.WebControls.LinkButton&gt; Web server controls, the &lt;xref:System.Web.UI.HtmlControls.HtmlInputButton&gt;, &lt;xref:System.Web.UI.HtmlControls.HtmlInputImage&gt;, and &lt;xref:System.Web.UI.HtmlControls.HtmlButton&gt; HTML server controls, and controls that can automatically post back to the server such as the &lt;xref:System.Web.UI.WebControls.TextBox&gt;, &lt;xref:System.Web.UI.WebControls.CheckBox&gt;, &lt;xref:System.Web.UI.WebControls.ListControl&gt;, and &lt;xref:System.Web.UI.WebControls.BulletedList&gt; controls.</source>
        </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT">
          <source>To disable validation for any button control on the page, set the button control's <ph id="ph1">`CausesValidation`</ph> property to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Validate method validates the specified validation group.</source>
        </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling the Validate method on a validation group, the &lt;xref:System.Web.UI.Page.IsValid%2A&gt; method will return <ph id="ph1">`true`</ph> only if both the specified validation group and the validation group of the control that caused the page to be posted to the server are valid.</source>
        </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve">
          <source>The validation group name of the controls to validate.</source>
        </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the page checks client input from the browser for potentially dangerous values.</source>
        </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value &lt;xref:System.Web.UI.ValidateRequestMode&gt; is not used in the &lt;xref:System.Web.UI.Page&gt; class because there is nothing to inherit from.</source>
        </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve">
          <source>A value that indicates whether the page checks client input.</source>
        </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Web.UI.ValidateRequestMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve">
          <source>Gets a collection of all validation controls contained on the requested page.</source>
        </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this property to manipulate the methods and properties of the &lt;xref:System.Web.UI.ValidatorCollection&gt; object associated with the current &lt;xref:System.Web.UI.Page&gt; instance.</source>
        </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT">
          <source>This collection contains all the validation server controls that are contained in a page.</source>
        </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling the &lt;xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName&gt; method causes validation logic to be executed for each validation server control in the current validation group.</source>
        </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any of these controls do not pass, the &lt;xref:System.Web.UI.Page.IsValid%2A?displayProperty=fullName&gt; property returns <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on validation controls, see <bpt id="p1">[</bpt>ASP.NET Validation Controls<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve">
          <source>The collection of validation controls.</source>
        </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve">
          <source>Confirms that an <bpt id="p1">&lt;xref href="System.Web.UI.HtmlControls.HtmlForm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control is rendered for the specified ASP.NET server control at run time.</source>
        </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT">
          <source>Controls that are required to be inside <ph id="ph1">`&lt;form runat=server&gt;`</ph> tags can call this method before they render so that an error message is shown if they are placed outside the tags.</source>
        </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT">
          <source>Controls that post back or depend on registered script blocks should call this method in an override of the &lt;xref:System.Web.UI.Control.Render%2A?displayProperty=fullName&gt; method.</source>
        </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT">
          <source>Pages that have a different way of rendering the server form element can override this method to throw an exception under different conditions.</source>
        </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT">
          <source>Server controls that post back or use client-side script will not work if they are not enclosed in the &lt;xref:System.Web.UI.HtmlControls.HtmlForm&gt; server control (&lt;<ph id="ph1">`form runat="server"&gt;`</ph>) tags.</source>
        </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT">
          <source>These controls can call this method when they render to provide a clear error message when they are not enclosed in the &lt;xref:System.Web.UI.HtmlControls.HtmlForm&gt; control.</source>
        </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you develop a custom server control, it is common to call this method when you override the <ph id="ph1">`Render`</ph> method for any kind of input tag.</source>
        </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is particularly important if the input control calls &lt;xref:System.Web.UI.Page.GetPostBackEventReference%2A&gt;, or if it emits client script.</source>
        </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT">
          <source>A composite server control does not need to make this call.</source>
        </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve">
          <source>The ASP.NET server control that is required in the <bpt id="p1">&lt;xref href="System.Web.UI.HtmlControls.HtmlForm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control.</source>
        </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve">
          <source>The specified server control is not contained between the opening and closing tags of the <bpt id="p1">&lt;xref href="System.Web.UI.HtmlControls.HtmlForm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> server control at run time.</source>
        </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve">
          <source>The control to verify is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve">
          <source>Gets or sets the encryption mode of the view state.</source>
        </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ViewStateEncryptionMode property cannot be set in code.</source>
        </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can only be set in the  directive or in the &lt; element of the configuration file.</source>
        </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT">
          <source>Values set in the  directive override any values set in the configuration file.</source>
        </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT">
          <source>The syntax for setting this property in the  directive is as follows:      <ph id="ph1">```vb#   &lt;%@ Page Language="VB" ViewStateEncryptionMode="Always" %&gt;      ```</ph>      <ph id="ph2">```c#   &lt;%@ Page Language="C#" ViewStateEncryptionMode="Always" %&gt;   ```</ph>       The syntax for setting this property in the configuration file is as follows:      <ph id="ph3">```vb#   &lt;system.web&gt;     &lt;pages viewStateEncryptionMode="Always" /&gt;   &lt;/system.web&gt;      ```</ph>      <ph id="ph4">```c#   &lt;system.web&gt;     &lt;pages viewStateEncryptionMode="Always" /&gt;   &lt;/system.web&gt;   ```</ph>       Custom control developers may wish to check the value of this property in code before saving potentially sensitive data to view state in their control.</source>
        </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Web.UI.ViewStateEncryptionMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
        </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref href="System.Web.UI.ViewStateEncryptionMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve">
          <source>The value set is not a member of the <bpt id="p1">&lt;xref href="System.Web.UI.ViewStateEncryptionMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration.</source>
        </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve">
          <source>The ViewStateEncryptionMode property can be set only in or before the page <bpt id="p1">&lt;xref uid="langword_csharp_PreRender" name="PreRender" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>phase in the page life cycle.</source>
        </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve">
          <source>Assigns an identifier to an individual user in the view-state variable associated with the current page.</source>
        </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the ViewStateUserKey property can help you prevent attacks on your application from malicious users.</source>
        </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT">
          <source>It does this by allowing you to assign an identifier to the view-state variable for individual users so that they cannot use the variable to generate an attack.</source>
        </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about Web attacks and about what you can do to help prevent them, see <bpt id="p1">[</bpt>Take Advantage of ASP.NET Built-in Features to Fend Off Web Attacks<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=163557)</ept>.</source>
        </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set this property to any string value, such as the user's authenticated name or the &lt;xref:System.Web.SessionState.HttpSessionState.SessionID%2A&gt; value.</source>
        </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You must set this property during the <ph id="ph2">`Page_Init`</ph> phase of page processing.</source>
        </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property during the <ph id="ph1">`Page_Load`</ph> phase throws an exception.</source>
        </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve">
          <source>The identifier for the individual user.</source>
        </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve">
          <source>The ViewStateUserKey property was accessed too late during page processing.</source>
        </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is rendered.</source>
        </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is to be rendered; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>