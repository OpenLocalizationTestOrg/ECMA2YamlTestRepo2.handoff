{"nodes":[{"pos":[2300,2433],"content":"Represents the collection of <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRelation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects for this <bpt id=\"p2\">&lt;xref href=\"System.Data.DataSet\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Represents the collection of <xref href=\"System.Data.DataRelation\"></xref> objects for this <xref href=\"System.Data.DataSet\"></xref>."},{"pos":[2446,3357],"content":"A DataRelationCollection object enables navigation between related parent/child <xref:System.Data.DataTable> objects.       You create a DataRelationCollection object by defining it as a property of either the <xref:System.Data.DataSet> or the <xref:System.Data.DataTable>, instead of by directly using a constructor. (Use the <xref:System.Data.DataSet.Relations%2A> property of the <xref:System.Data.DataSet>, or the <xref:System.Data.DataTable.ParentRelations%2A> property of the <xref:System.Data.DataTable>.)       To access the collection, use the <xref:System.Data.DataSet.Relations%2A> property of the <xref:System.Data.DataSet> object.       As soon as the collection exists you can manage the objects it contains by using methods such as <xref:System.Data.DataRelationCollection.Add%2A>, <xref:System.Data.DataRelationCollection.Clear%2A>, and <xref:System.Data.DataRelationCollection.Remove%2A>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A DataRelationCollection object enables navigation between related parent/child <xref:System.Data.DataTable> objects.       You create a DataRelationCollection object by defining it as a property of either the <xref:System.Data.DataSet> or the <xref:System.Data.DataTable>, instead of by directly using a constructor. (Use the <xref:System.Data.DataSet.Relations%2A> property of the <xref:System.Data.DataSet>, or the <xref:System.Data.DataTable.ParentRelations%2A> property of the <xref:System.Data.DataTable>.)       To access the collection, use the <xref:System.Data.DataSet.Relations%2A> property of the <xref:System.Data.DataSet> object.       As soon as the collection exists you can manage the objects it contains by using methods such as <xref:System.Data.DataRelationCollection.Add%2A>, <xref:System.Data.DataRelationCollection.Clear%2A>, and <xref:System.Data.DataRelationCollection.Remove%2A>.","pos":[0,905],"nodes":[{"content":"A DataRelationCollection object enables navigation between related parent/child &lt;xref:System.Data.DataTable&gt; objects.","pos":[0,117],"source":"A DataRelationCollection object enables navigation between related parent/child <xref:System.Data.DataTable> objects."},{"content":"You create a DataRelationCollection object by defining it as a property of either the &lt;xref:System.Data.DataSet&gt; or the &lt;xref:System.Data.DataTable&gt;, instead of by directly using a constructor.","pos":[124,317],"source":"       You create a DataRelationCollection object by defining it as a property of either the <xref:System.Data.DataSet> or the <xref:System.Data.DataTable>, instead of by directly using a constructor."},{"content":"(Use the &lt;xref:System.Data.DataSet.Relations%2A&gt; property of the &lt;xref:System.Data.DataSet&gt;, or the &lt;xref:System.Data.DataTable.ParentRelations%2A&gt; property of the &lt;xref:System.Data.DataTable&gt;.)       To access the collection, use the &lt;xref:System.Data.DataSet.Relations%2A&gt; property of the &lt;xref:System.Data.DataSet&gt; object.","pos":[318,643],"source":" (Use the <xref:System.Data.DataSet.Relations%2A> property of the <xref:System.Data.DataSet>, or the <xref:System.Data.DataTable.ParentRelations%2A> property of the <xref:System.Data.DataTable>.)       To access the collection, use the <xref:System.Data.DataSet.Relations%2A> property of the <xref:System.Data.DataSet> object."},{"content":"As soon as the collection exists you can manage the objects it contains by using methods such as &lt;xref:System.Data.DataRelationCollection.Add%2A&gt;, &lt;xref:System.Data.DataRelationCollection.Clear%2A&gt;, and &lt;xref:System.Data.DataRelationCollection.Remove%2A&gt;.","pos":[650,905],"source":"       As soon as the collection exists you can manage the objects it contains by using methods such as <xref:System.Data.DataRelationCollection.Add%2A>, <xref:System.Data.DataRelationCollection.Clear%2A>, and <xref:System.Data.DataRelationCollection.Remove%2A>."}]}]},{"pos":[4825,4921],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRelationCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.DataRelationCollection\"></xref> class."},{"pos":[5497,5613],"content":"Adds a <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRelation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to the <bpt id=\"p2\">&lt;xref href=\"System.Data.DataRelationCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Adds a <xref href=\"System.Data.DataRelation\"></xref> to the <xref href=\"System.Data.DataRelationCollection\"></xref>."},{"pos":[5626,5983],"content":"If the relation is successfully added to the collection, the <xref:System.Data.DataRelationCollection.CollectionChanged> event occurs.       When a <xref:System.Data.DataRelation> object is added to the collection, <xref:System.Data.ForeignKeyConstraint> and <xref:System.Data.UniqueConstraint> objects are created by default if they do not already exist.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the relation is successfully added to the collection, the <xref:System.Data.DataRelationCollection.CollectionChanged> event occurs.       When a <xref:System.Data.DataRelation> object is added to the collection, <xref:System.Data.ForeignKeyConstraint> and <xref:System.Data.UniqueConstraint> objects are created by default if they do not already exist.","pos":[0,355],"nodes":[{"content":"If the relation is successfully added to the collection, the &lt;xref:System.Data.DataRelationCollection.CollectionChanged&gt; event occurs.","pos":[0,134],"source":"If the relation is successfully added to the collection, the <xref:System.Data.DataRelationCollection.CollectionChanged> event occurs."},{"content":"When a &lt;xref:System.Data.DataRelation&gt; object is added to the collection, &lt;xref:System.Data.ForeignKeyConstraint&gt; and &lt;xref:System.Data.UniqueConstraint&gt; objects are created by default if they do not already exist.","pos":[141,355],"source":"       When a <xref:System.Data.DataRelation> object is added to the collection, <xref:System.Data.ForeignKeyConstraint> and <xref:System.Data.UniqueConstraint> objects are created by default if they do not already exist."}]}]},{"pos":[6152,6258],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DataRelation\" name=\"DataRelation\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to add to the collection.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_DataRelation\" name=\"DataRelation\" href=\"\"></xref> to add to the collection."},{"pos":[6427,6479],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">relation</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is a null value.","needQuote":true,"needEscape":true,"source":"The <code>relation</code> parameter is a null value."},{"pos":[6574,6659],"content":"The relation already belongs to this collection, or it belongs to another collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The relation already belongs to this collection, or it belongs to another collection.","pos":[0,85]}]},{"pos":[6774,6876],"content":"The collection already has a relation with the specified name. (The comparison is not case sensitive.)","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection already has a relation with the specified name. (The comparison is not case sensitive.)","pos":[0,102],"nodes":[{"content":"The collection already has a relation with the specified name.","pos":[0,62]},{"content":"(The comparison is not case sensitive.)","pos":[63,102]}]}]},{"pos":[6999,7062],"content":"The relation has entered an invalid state since it was created.","needQuote":true,"needEscape":true,"nodes":[{"content":"The relation has entered an invalid state since it was created.","pos":[0,63]}]},{"pos":[7557,7685],"content":"Creates a <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRelation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with a specified parent and child column, and adds it to the collection.","needQuote":true,"needEscape":true,"source":"Creates a <xref href=\"System.Data.DataRelation\"></xref> with a specified parent and child column, and adds it to the collection."},{"pos":[7697,7911],"content":"When a <xref:System.Data.DataRelation> object is added to the collection, <xref:System.Data.ForeignKeyConstraint> and <xref:System.Data.UniqueConstraint> objects are created by default if they do not already exist.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When a &lt;xref:System.Data.DataRelation&gt; object is added to the collection, &lt;xref:System.Data.ForeignKeyConstraint&gt; and &lt;xref:System.Data.UniqueConstraint&gt; objects are created by default if they do not already exist.","pos":[0,214],"source":"When a <xref:System.Data.DataRelation> object is added to the collection, <xref:System.Data.ForeignKeyConstraint> and <xref:System.Data.UniqueConstraint> objects are created by default if they do not already exist."}]},{"pos":[8147,8181],"content":"The parent column of the relation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The parent column of the relation.","pos":[0,34]}]},{"pos":[8258,8291],"content":"The child column of the relation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The child column of the relation.","pos":[0,33]}]},{"pos":[8360,8381],"content":"The created relation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The created relation.","pos":[0,21]}]},{"pos":[8965,9096],"content":"Creates a <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRelation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the specified parent and child columns, and adds it to the collection.","needQuote":true,"needEscape":true,"source":"Creates a <xref href=\"System.Data.DataRelation\"></xref> with the specified parent and child columns, and adds it to the collection."},{"pos":[9108,9322],"content":"When a <xref:System.Data.DataRelation> object is added to the collection, <xref:System.Data.ForeignKeyConstraint> and <xref:System.Data.UniqueConstraint> objects are created by default if they do not already exist.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When a &lt;xref:System.Data.DataRelation&gt; object is added to the collection, &lt;xref:System.Data.ForeignKeyConstraint&gt; and &lt;xref:System.Data.UniqueConstraint&gt; objects are created by default if they do not already exist.","pos":[0,214],"source":"When a <xref:System.Data.DataRelation> object is added to the collection, <xref:System.Data.ForeignKeyConstraint> and <xref:System.Data.UniqueConstraint> objects are created by default if they do not already exist."}]},{"pos":[9567,9602],"content":"The parent columns of the relation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The parent columns of the relation.","pos":[0,35]}]},{"pos":[9682,9716],"content":"The child columns of the relation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The child columns of the relation.","pos":[0,34]}]},{"pos":[9785,9806],"content":"The created relation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The created relation.","pos":[0,21]}]},{"pos":[9975,10026],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">relation</ph><ept id=\"p1\">&lt;/code&gt;</ept> argument is a null value.","needQuote":true,"needEscape":true,"source":"The <code>relation</code> argument is a null value."},{"pos":[10121,10206],"content":"The relation already belongs to this collection, or it belongs to another collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The relation already belongs to this collection, or it belongs to another collection.","pos":[0,85]}]},{"pos":[10321,10418],"content":"The collection already has a relation with the same name. (The comparison is not case sensitive.)","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection already has a relation with the same name. (The comparison is not case sensitive.)","pos":[0,97],"nodes":[{"content":"The collection already has a relation with the same name.","pos":[0,57]},{"content":"(The comparison is not case sensitive.)","pos":[58,97]}]}]},{"pos":[10541,10604],"content":"The relation has entered an invalid state since it was created.","needQuote":true,"needEscape":true,"nodes":[{"content":"The relation has entered an invalid state since it was created.","pos":[0,63]}]},{"pos":[11148,11289],"content":"Creates a <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRelation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the specified name, and parent and child columns, and adds it to the collection.","needQuote":true,"needEscape":true,"source":"Creates a <xref href=\"System.Data.DataRelation\"></xref> with the specified name, and parent and child columns, and adds it to the collection."},{"pos":[11301,11515],"content":"When a <xref:System.Data.DataRelation> object is added to the collection, <xref:System.Data.ForeignKeyConstraint> and <xref:System.Data.UniqueConstraint> objects are created by default if they do not already exist.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When a &lt;xref:System.Data.DataRelation&gt; object is added to the collection, &lt;xref:System.Data.ForeignKeyConstraint&gt; and &lt;xref:System.Data.UniqueConstraint&gt; objects are created by default if they do not already exist.","pos":[0,214],"source":"When a <xref:System.Data.DataRelation> object is added to the collection, <xref:System.Data.ForeignKeyConstraint> and <xref:System.Data.UniqueConstraint> objects are created by default if they do not already exist."}]},{"pos":[11747,11772],"content":"The name of the relation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the relation.","pos":[0,25]}]},{"pos":[11850,11884],"content":"The parent column of the relation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The parent column of the relation.","pos":[0,34]}]},{"pos":[11961,11994],"content":"The child column of the relation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The child column of the relation.","pos":[0,33]}]},{"pos":[12063,12084],"content":"The created relation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The created relation.","pos":[0,21]}]},{"pos":[12717,12867],"content":"Creates a <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRelation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the specified name and arrays of parent and child columns, and adds it to the collection.","needQuote":true,"needEscape":true,"source":"Creates a <xref href=\"System.Data.DataRelation\"></xref> with the specified name and arrays of parent and child columns, and adds it to the collection."},{"pos":[12880,13237],"content":"If the relation is successfully added to the collection, the <xref:System.Data.DataRelationCollection.CollectionChanged> event occurs.       When a <xref:System.Data.DataRelation> object is added to the collection, <xref:System.Data.ForeignKeyConstraint> and <xref:System.Data.UniqueConstraint> objects are created by default if they do not already exist.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the relation is successfully added to the collection, the <xref:System.Data.DataRelationCollection.CollectionChanged> event occurs.       When a <xref:System.Data.DataRelation> object is added to the collection, <xref:System.Data.ForeignKeyConstraint> and <xref:System.Data.UniqueConstraint> objects are created by default if they do not already exist.","pos":[0,355],"nodes":[{"content":"If the relation is successfully added to the collection, the &lt;xref:System.Data.DataRelationCollection.CollectionChanged&gt; event occurs.","pos":[0,134],"source":"If the relation is successfully added to the collection, the <xref:System.Data.DataRelationCollection.CollectionChanged> event occurs."},{"content":"When a &lt;xref:System.Data.DataRelation&gt; object is added to the collection, &lt;xref:System.Data.ForeignKeyConstraint&gt; and &lt;xref:System.Data.UniqueConstraint&gt; objects are created by default if they do not already exist.","pos":[141,355],"source":"       When a <xref:System.Data.DataRelation> object is added to the collection, <xref:System.Data.ForeignKeyConstraint> and <xref:System.Data.UniqueConstraint> objects are created by default if they do not already exist."}]}]},{"pos":[13752,13855],"content":"The name of the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DataRelation\" name=\"DataRelation\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to create.","needQuote":true,"needEscape":true,"source":"The name of the <xref uid=\"langword_csharp_DataRelation\" name=\"DataRelation\" href=\"\"></xref> to create."},{"pos":[13936,14007],"content":"An array of parent <bpt id=\"p1\">&lt;xref href=\"System.Data.DataColumn\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"An array of parent <xref href=\"System.Data.DataColumn\"></xref> objects."},{"pos":[14087,14186],"content":"An array of child <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DataColumn\" name=\"DataColumn\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"An array of child <xref uid=\"langword_csharp_DataColumn\" name=\"DataColumn\" href=\"\"></xref> objects."},{"pos":[14255,14344],"content":"The created <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DataRelation\" name=\"DataRelation\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The created <xref uid=\"langword_csharp_DataRelation\" name=\"DataRelation\" href=\"\"></xref>."},{"pos":[14513,14547],"content":"The relation name is a null value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The relation name is a null value.","pos":[0,34]}]},{"pos":[14642,14727],"content":"The relation already belongs to this collection, or it belongs to another collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The relation already belongs to this collection, or it belongs to another collection.","pos":[0,85]}]},{"pos":[14842,14939],"content":"The collection already has a relation with the same name. (The comparison is not case sensitive.)","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection already has a relation with the same name. (The comparison is not case sensitive.)","pos":[0,97],"nodes":[{"content":"The collection already has a relation with the same name.","pos":[0,57]},{"content":"(The comparison is not case sensitive.)","pos":[58,97]}]}]},{"pos":[15062,15125],"content":"The relation has entered an invalid state since it was created.","needQuote":true,"needEscape":true,"nodes":[{"content":"The relation has entered an invalid state since it was created.","pos":[0,63]}]},{"pos":[15723,15958],"content":"Creates a <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRelation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the specified name, parent and child columns, with optional constraints according to the value of the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">createConstraints</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter, and adds it to the collection.","needQuote":true,"needEscape":true,"source":"Creates a <xref href=\"System.Data.DataRelation\"></xref> with the specified name, parent and child columns, with optional constraints according to the value of the <code>createConstraints</code> parameter, and adds it to the collection."},{"pos":[15970,16243],"content":"When a <xref:System.Data.DataRelation> object is added to the collection, <xref:System.Data.ForeignKeyConstraint> and <xref:System.Data.UniqueConstraint> objects are created by default if they do not already exist. To prevent this, you can set `createConstraints` to false.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When a &lt;xref:System.Data.DataRelation&gt; object is added to the collection, &lt;xref:System.Data.ForeignKeyConstraint&gt; and &lt;xref:System.Data.UniqueConstraint&gt; objects are created by default if they do not already exist.","pos":[0,214],"source":"When a <xref:System.Data.DataRelation> object is added to the collection, <xref:System.Data.ForeignKeyConstraint> and <xref:System.Data.UniqueConstraint> objects are created by default if they do not already exist."},{"content":"To prevent this, you can set <ph id=\"ph1\">`createConstraints`</ph> to false.","pos":[215,273],"source":" To prevent this, you can set `createConstraints` to false."}]},{"pos":[16499,16524],"content":"The name of the relation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the relation.","pos":[0,25]}]},{"pos":[16602,16636],"content":"The parent column of the relation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The parent column of the relation.","pos":[0,34]}]},{"pos":[16713,16746],"content":"The child column of the relation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The child column of the relation.","pos":[0,33]}]},{"pos":[16821,17057],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to create constraints; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. (The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>).","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to create constraints; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,157],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to create constraints; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"(The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>).","pos":[158,236],"source":" (The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>)."}]},{"pos":[17126,17147],"content":"The created relation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The created relation.","pos":[0,21]}]},{"pos":[17834,18034],"content":"Creates a <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRelation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the specified name, arrays of parent and child columns, and value specifying whether to create a constraint, and adds it to the collection.","needQuote":true,"needEscape":true,"source":"Creates a <xref href=\"System.Data.DataRelation\"></xref> with the specified name, arrays of parent and child columns, and value specifying whether to create a constraint, and adds it to the collection."},{"pos":[18046,18260],"content":"When a <xref:System.Data.DataRelation> object is added to the collection, <xref:System.Data.ForeignKeyConstraint> and <xref:System.Data.UniqueConstraint> objects are created by default if they do not already exist.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When a &lt;xref:System.Data.DataRelation&gt; object is added to the collection, &lt;xref:System.Data.ForeignKeyConstraint&gt; and &lt;xref:System.Data.UniqueConstraint&gt; objects are created by default if they do not already exist.","pos":[0,214],"source":"When a <xref:System.Data.DataRelation> object is added to the collection, <xref:System.Data.ForeignKeyConstraint> and <xref:System.Data.UniqueConstraint> objects are created by default if they do not already exist."}]},{"pos":[18522,18625],"content":"The name of the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DataRelation\" name=\"DataRelation\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to create.","needQuote":true,"needEscape":true,"source":"The name of the <xref uid=\"langword_csharp_DataRelation\" name=\"DataRelation\" href=\"\"></xref> to create."},{"pos":[18706,18777],"content":"An array of parent <bpt id=\"p1\">&lt;xref href=\"System.Data.DataColumn\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"An array of parent <xref href=\"System.Data.DataColumn\"></xref> objects."},{"pos":[18857,18956],"content":"An array of child <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DataColumn\" name=\"DataColumn\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"An array of child <xref uid=\"langword_csharp_DataColumn\" name=\"DataColumn\" href=\"\"></xref> objects."},{"pos":[19031,19189],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to create a constraint; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to create a constraint; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[19258,19279],"content":"The created relation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The created relation.","pos":[0,21]}]},{"pos":[19448,19482],"content":"The relation name is a null value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The relation name is a null value.","pos":[0,34]}]},{"pos":[19577,19662],"content":"The relation already belongs to this collection, or it belongs to another collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The relation already belongs to this collection, or it belongs to another collection.","pos":[0,85]}]},{"pos":[19777,19874],"content":"The collection already has a relation with the same name. (The comparison is not case sensitive.)","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection already has a relation with the same name. (The comparison is not case sensitive.)","pos":[0,97],"nodes":[{"content":"The collection already has a relation with the same name.","pos":[0,57]},{"content":"(The comparison is not case sensitive.)","pos":[58,97]}]}]},{"pos":[19997,20060],"content":"The relation has entered an invalid state since it was created.","needQuote":true,"needEscape":true,"nodes":[{"content":"The relation has entered an invalid state since it was created.","pos":[0,63]}]},{"pos":[20506,20541],"content":"Performs verification on the table.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs verification on the table.","pos":[0,35]}]},{"pos":[20724,20746],"content":"The relation to check.","needQuote":true,"needEscape":true,"nodes":[{"content":"The relation to check.","pos":[0,22]}]},{"pos":[20919,20940],"content":"The relation is null.","needQuote":true,"needEscape":true,"nodes":[{"content":"The relation is null.","pos":[0,21]}]},{"pos":[21035,21120],"content":"The relation already belongs to this collection, or it belongs to another collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The relation already belongs to this collection, or it belongs to another collection.","pos":[0,85]}]},{"pos":[21235,21332],"content":"The collection already has a relation with the same name. (The comparison is not case sensitive.)","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection already has a relation with the same name. (The comparison is not case sensitive.)","pos":[0,97],"nodes":[{"content":"The collection already has a relation with the same name.","pos":[0,57]},{"content":"(The comparison is not case sensitive.)","pos":[58,97]}]}]},{"pos":[21793,21911],"content":"Copies the elements of the specified <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRelation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> array to the end of the collection.","needQuote":true,"needEscape":true,"source":"Copies the elements of the specified <xref href=\"System.Data.DataRelation\"></xref> array to the end of the collection."},{"pos":[21923,22384],"content":"If <xref:System.Data.DataSet.BeginInit%2A> has been called, `AddRange` does not add any objects to the collection until <xref:System.Data.DataSet.EndInit%2A> is called. At the time that `EndInit` is called, the collection will be populated with the items specified in the most recent call to `AddRange`. If `AddRange` is called multiple times within a `BeginInit` / `EndInit` sequence, only those items specified in the most recent call to `AddRange` are added.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If &lt;xref:System.Data.DataSet.BeginInit%2A&gt; has been called, <ph id=\"ph1\">`AddRange`</ph> does not add any objects to the collection until &lt;xref:System.Data.DataSet.EndInit%2A&gt; is called.","pos":[0,168],"source":"If <xref:System.Data.DataSet.BeginInit%2A> has been called, `AddRange` does not add any objects to the collection until <xref:System.Data.DataSet.EndInit%2A> is called."},{"content":"At the time that <ph id=\"ph1\">`EndInit`</ph> is called, the collection will be populated with the items specified in the most recent call to <ph id=\"ph2\">`AddRange`</ph>.","pos":[169,303],"source":" At the time that `EndInit` is called, the collection will be populated with the items specified in the most recent call to `AddRange`."},{"content":"If <ph id=\"ph1\">`AddRange`</ph> is called multiple times within a <ph id=\"ph2\">`BeginInit`</ph><ph id=\"ph3\"> / </ph><ph id=\"ph4\">`EndInit`</ph> sequence, only those items specified in the most recent call to <ph id=\"ph5\">`AddRange`</ph> are added.","pos":[304,461],"source":" If `AddRange` is called multiple times within a `BeginInit` / `EndInit` sequence, only those items specified in the most recent call to `AddRange` are added."}]},{"pos":[22859,22951],"content":"The array of <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRelation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects to add to the collection.","needQuote":true,"needEscape":true,"source":"The array of <xref href=\"System.Data.DataRelation\"></xref> objects to add to the collection."},{"pos":[23481,23593],"content":"Verifies whether the specified <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRelation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> can be removed from the collection.","needQuote":true,"needEscape":true,"source":"Verifies whether the specified <xref href=\"System.Data.DataRelation\"></xref> can be removed from the collection."},{"pos":[23775,23817],"content":"The relation to perform the check against.","needQuote":true,"needEscape":true,"nodes":[{"content":"The relation to perform the check against.","pos":[0,42]}]},{"pos":[23876,24080],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Data.DataRelation\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> can be removed; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Data.DataRelation\"></xref> can be removed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[24503,24542],"content":"Clears the collection of any relations.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears the collection of any relations.","pos":[0,39]}]},{"pos":[25086,25125],"content":"Occurs when the collection has changed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the collection has changed.","pos":[0,39]}]},{"pos":[25326,25338],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25766,25898],"content":"Verifies whether a <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRelation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the specific name (case insensitive) exists in the collection.","needQuote":true,"needEscape":true,"source":"Verifies whether a <xref href=\"System.Data.DataRelation\"></xref> with the specific name (case insensitive) exists in the collection."},{"pos":[26042,26075],"content":"The name of the relation to find.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the relation to find.","pos":[0,33]}]},{"pos":[26134,26315],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, if a relation with the specified name exists; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, if a relation with the specified name exists; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[26884,26995],"content":"Copies the collection of <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRelation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects starting at the specified index.","needQuote":true,"needEscape":true,"source":"Copies the collection of <xref href=\"System.Data.DataRelation\"></xref> objects starting at the specified index."},{"pos":[27175,27268],"content":"The array of <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRelation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects to copy the collection to.","needQuote":true,"needEscape":true,"source":"The array of <xref href=\"System.Data.DataRelation\"></xref> objects to copy the collection to."},{"pos":[27329,27353],"content":"The index to start from.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index to start from.","pos":[0,24]}]},{"pos":[27798,27908],"content":"This method supports the .NET Framework infrastructure and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method supports the .NET Framework infrastructure and is not intended to be used directly from your code.","pos":[0,110]}]},{"pos":[28068,28091],"content":"The referenced DataSet.","needQuote":true,"needEscape":true,"nodes":[{"content":"The referenced DataSet.","pos":[0,23]}]},{"pos":[28613,28698],"content":"Gets the index of the specified <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRelation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets the index of the specified <xref href=\"System.Data.DataRelation\"></xref> object."},{"pos":[28877,28904],"content":"The relation to search for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The relation to search for.","pos":[0,27]}]},{"pos":[28961,29049],"content":"The 0-based index of the relation, or -1 if the relation is not found in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The 0-based index of the relation, or -1 if the relation is not found in the collection.","pos":[0,88]}]},{"pos":[29528,29614],"content":"Gets the index of the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRelation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> specified by name.","needQuote":true,"needEscape":true,"source":"Gets the index of the <xref href=\"System.Data.DataRelation\"></xref> specified by name."},{"pos":[29772,29805],"content":"The name of the relation to find.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the relation to find.","pos":[0,33]}]},{"pos":[29862,29979],"content":"The zero-based index of the relation with the specified name, or -1 if the relation does not exist in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the relation with the specified name, or -1 if the relation does not exist in the collection.","pos":[0,117]}]},{"pos":[30440,30525],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRelation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object at the specified index.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Data.DataRelation\"></xref> object at the specified index."},{"pos":[30691,30720],"content":"The zero-based index to find.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index to find.","pos":[0,29]}]},{"pos":[30789,30934],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRelation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, or a null value if the specified <bpt id=\"p2\">&lt;xref href=\"System.Data.DataRelation\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> does not exist.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Data.DataRelation\"></xref>, or a null value if the specified <xref href=\"System.Data.DataRelation\"></xref> does not exist."},{"pos":[31110,31180],"content":"The index value is greater than the number of items in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index value is greater than the number of items in the collection.","pos":[0,70]}]},{"pos":[31573,31653],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRelation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object specified by name.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Data.DataRelation\"></xref> object specified by name."},{"pos":[31821,31854],"content":"The name of the relation to find.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the relation to find.","pos":[0,33]}]},{"pos":[31923,32074],"content":"The named <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRelation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, or a null value if the specified <bpt id=\"p2\">&lt;xref href=\"System.Data.DataRelation\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> does not exist.","needQuote":true,"needEscape":true,"source":"The named <xref href=\"System.Data.DataRelation\"></xref>, or a null value if the specified <xref href=\"System.Data.DataRelation\"></xref> does not exist."},{"pos":[32735,32826],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRelationCollection.CollectionChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Data.DataRelationCollection.CollectionChanged\"></xref> event."},{"pos":[32839,33017],"content":"Raising an event invokes the event handler through a delegate. For an overview, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For an overview, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[63,178],"source":" For an overview, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."}]},{"pos":[33257,33357],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.CollectionChangeEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.ComponentModel.CollectionChangeEventArgs\"></xref> that contains the event data."},{"pos":[34038,34129],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRelationCollection.CollectionChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Data.DataRelationCollection.CollectionChanged\"></xref> event."},{"pos":[34142,34320],"content":"Raising an event invokes the event handler through a delegate. For an overview, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For an overview, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[63,178],"source":" For an overview, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."}]},{"pos":[34561,34661],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.CollectionChangeEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.ComponentModel.CollectionChangeEventArgs\"></xref> that contains the event data."},{"pos":[35188,35239],"content":"Removes the specified relation from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the specified relation from the collection.","pos":[0,51]}]},{"pos":[35251,35446],"content":"The <xref:System.Data.DataRelationCollection.CollectionChanged> event is fired if the remove operation succeeds. Note that removing the relation does not remove any associated constraint objects.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.Data.DataRelationCollection.CollectionChanged> event is fired if the remove operation succeeds. Note that removing the relation does not remove any associated constraint objects.","pos":[0,195],"nodes":[{"content":"The &lt;xref:System.Data.DataRelationCollection.CollectionChanged&gt; event is fired if the remove operation succeeds.","pos":[0,112],"source":"The <xref:System.Data.DataRelationCollection.CollectionChanged> event is fired if the remove operation succeeds."},{"content":"Note that removing the relation does not remove any associated constraint objects.","pos":[113,195]}]}]},{"pos":[35617,35640],"content":"The relation to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The relation to remove.","pos":[0,23]}]},{"pos":[35812,35841],"content":"The relation is a null value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The relation is a null value.","pos":[0,29]}]},{"pos":[35936,35983],"content":"The relation does not belong to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The relation does not belong to the collection.","pos":[0,47]}]},{"pos":[36384,36449],"content":"Removes the relation with the specified name from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the relation with the specified name from the collection.","pos":[0,65]}]},{"pos":[36461,36573],"content":"The <xref:System.Data.DataRelationCollection.CollectionChanged> event is fired if the remove operation succeeds.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Data.DataRelationCollection.CollectionChanged&gt; event is fired if the remove operation succeeds.","pos":[0,112],"source":"The <xref:System.Data.DataRelationCollection.CollectionChanged> event is fired if the remove operation succeeds."}]},{"pos":[36707,36742],"content":"The name of the relation to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the relation to remove.","pos":[0,35]}]},{"pos":[36920,36984],"content":"The collection does not have a relation with the specified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection does not have a relation with the specified name.","pos":[0,64]}]},{"pos":[37390,37454],"content":"Removes the relation at the specified index from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the relation at the specified index from the collection.","pos":[0,64]}]},{"pos":[37466,37578],"content":"The <xref:System.Data.DataRelationCollection.CollectionChanged> event is fired if the remove operation succeeds.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Data.DataRelationCollection.CollectionChanged&gt; event is fired if the remove operation succeeds.","pos":[0,112],"source":"The <xref:System.Data.DataRelationCollection.CollectionChanged> event is fired if the remove operation succeeds."}]},{"pos":[37712,37748],"content":"The index of the relation to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the relation to remove.","pos":[0,36]}]},{"pos":[37914,37977],"content":"The collection does not have a relation at the specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection does not have a relation at the specified index.","pos":[0,63]}]},{"pos":[38438,38532],"content":"Performs a verification on the specified <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRelation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Performs a verification on the specified <xref href=\"System.Data.DataRelation\"></xref> object."},{"pos":[38718,38816],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DataRelation\" name=\"DataRelation\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to verify.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_DataRelation\" name=\"DataRelation\" href=\"\"></xref> object to verify."},{"pos":[38992,39055],"content":"The collection does not have a relation at the specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection does not have a relation at the specified index.","pos":[0,63]}]},{"pos":[39150,39245],"content":"The specified relation does not belong to this collection, or it belongs to another collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified relation does not belong to this collection, or it belongs to another collection.","pos":[0,95]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.DataRelationCollection\n  id: DataRelationCollection\n  children:\n  - System.Data.DataRelationCollection.#ctor\n  - System.Data.DataRelationCollection.Add(System.Data.DataRelation)\n  - System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)\n  - System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])\n  - System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)\n  - System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])\n  - System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)\n  - System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)\n  - System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)\n  - System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])\n  - System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)\n  - System.Data.DataRelationCollection.Clear\n  - System.Data.DataRelationCollection.CollectionChanged\n  - System.Data.DataRelationCollection.Contains(System.String)\n  - System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)\n  - System.Data.DataRelationCollection.GetDataSet\n  - System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)\n  - System.Data.DataRelationCollection.IndexOf(System.String)\n  - System.Data.DataRelationCollection.Item(System.Int32)\n  - System.Data.DataRelationCollection.Item(System.String)\n  - System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)\n  - System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)\n  - System.Data.DataRelationCollection.Remove(System.Data.DataRelation)\n  - System.Data.DataRelationCollection.Remove(System.String)\n  - System.Data.DataRelationCollection.RemoveAt(System.Int32)\n  - System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)\n  langs:\n  - csharp\n  name: DataRelationCollection\n  nameWithType: DataRelationCollection\n  fullName: System.Data.DataRelationCollection\n  type: Class\n  summary: Represents the collection of <xref href=\"System.Data.DataRelation\"></xref> objects for this <xref href=\"System.Data.DataSet\"></xref>.\n  remarks: \"A DataRelationCollection object enables navigation between related parent/child <xref:System.Data.DataTable> objects.  \\n  \\n You create a DataRelationCollection object by defining it as a property of either the <xref:System.Data.DataSet> or the <xref:System.Data.DataTable>, instead of by directly using a constructor. (Use the <xref:System.Data.DataSet.Relations%2A> property of the <xref:System.Data.DataSet>, or the <xref:System.Data.DataTable.ParentRelations%2A> property of the <xref:System.Data.DataTable>.)  \\n  \\n To access the collection, use the <xref:System.Data.DataSet.Relations%2A> property of the <xref:System.Data.DataSet> object.  \\n  \\n As soon as the collection exists you can manage the objects it contains by using methods such as <xref:System.Data.DataRelationCollection.Add%2A>, <xref:System.Data.DataRelationCollection.Clear%2A>, and <xref:System.Data.DataRelationCollection.Remove%2A>.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.DefaultEvent(\"CollectionChanged\")]\n\n      [System.ComponentModel.DefaultProperty(\"Table\")]\n\n      [System.ComponentModel.Editor(\"Microsoft.VSDesigner.Data.Design.DataRelationCollectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\", \"System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\")]\n\n      public abstract class DataRelationCollection : System.Data.InternalDataCollectionBase\n  inheritance:\n  - System.Object\n  - System.Data.InternalDataCollectionBase\n  implements: []\n  inheritedMembers:\n  - System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)\n  - System.Data.InternalDataCollectionBase.Count\n  - System.Data.InternalDataCollectionBase.GetEnumerator\n  - System.Data.InternalDataCollectionBase.IsReadOnly\n  - System.Data.InternalDataCollectionBase.IsSynchronized\n  - System.Data.InternalDataCollectionBase.List\n  - System.Data.InternalDataCollectionBase.SyncRoot\n  platform:\n  - net462\n- uid: System.Data.DataRelationCollection.#ctor\n  id: '#ctor'\n  parent: System.Data.DataRelationCollection\n  langs:\n  - csharp\n  name: DataRelationCollection()\n  nameWithType: DataRelationCollection.DataRelationCollection()\n  fullName: System.Data.DataRelationCollection.DataRelationCollection()\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Initializes a new instance of the <xref href=\"System.Data.DataRelationCollection\"></xref> class.\n  syntax:\n    content: protected DataRelationCollection ();\n    parameters: []\n  overload: System.Data.DataRelationCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataRelationCollection.Add(System.Data.DataRelation)\n  id: Add(System.Data.DataRelation)\n  parent: System.Data.DataRelationCollection\n  langs:\n  - csharp\n  name: Add(DataRelation)\n  nameWithType: DataRelationCollection.Add(DataRelation)\n  fullName: System.Data.DataRelationCollection.Add(DataRelation)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Adds a <xref href=\"System.Data.DataRelation\"></xref> to the <xref href=\"System.Data.DataRelationCollection\"></xref>.\n  remarks: \"If the relation is successfully added to the collection, the <xref:System.Data.DataRelationCollection.CollectionChanged> event occurs.  \\n  \\n When a <xref:System.Data.DataRelation> object is added to the collection, <xref:System.Data.ForeignKeyConstraint> and <xref:System.Data.UniqueConstraint> objects are created by default if they do not already exist.\"\n  syntax:\n    content: public void Add (System.Data.DataRelation relation);\n    parameters:\n    - id: relation\n      type: System.Data.DataRelation\n      description: The <xref uid=\"langword_csharp_DataRelation\" name=\"DataRelation\" href=\"\"></xref> to add to the collection.\n  overload: System.Data.DataRelationCollection.Add*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>relation</code> parameter is a null value.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The relation already belongs to this collection, or it belongs to another collection.\n  - type: System.Data.DuplicateNameException\n    commentId: T:System.Data.DuplicateNameException\n    description: The collection already has a relation with the specified name. (The comparison is not case sensitive.)\n  - type: System.Data.InvalidConstraintException\n    commentId: T:System.Data.InvalidConstraintException\n    description: The relation has entered an invalid state since it was created.\n  platform:\n  - net462\n- uid: System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)\n  id: Add(System.Data.DataColumn,System.Data.DataColumn)\n  parent: System.Data.DataRelationCollection\n  langs:\n  - csharp\n  name: Add(DataColumn,DataColumn)\n  nameWithType: DataRelationCollection.Add(DataColumn,DataColumn)\n  fullName: System.Data.DataRelationCollection.Add(DataColumn,DataColumn)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Creates a <xref href=\"System.Data.DataRelation\"></xref> with a specified parent and child column, and adds it to the collection.\n  remarks: When a <xref:System.Data.DataRelation> object is added to the collection, <xref:System.Data.ForeignKeyConstraint> and <xref:System.Data.UniqueConstraint> objects are created by default if they do not already exist.\n  syntax:\n    content: public virtual System.Data.DataRelation Add (System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn);\n    parameters:\n    - id: parentColumn\n      type: System.Data.DataColumn\n      description: The parent column of the relation.\n    - id: childColumn\n      type: System.Data.DataColumn\n      description: The child column of the relation.\n    return:\n      type: System.Data.DataRelation\n      description: The created relation.\n  overload: System.Data.DataRelationCollection.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])\n  id: Add(System.Data.DataColumn[],System.Data.DataColumn[])\n  parent: System.Data.DataRelationCollection\n  langs:\n  - csharp\n  name: Add(DataColumn[],DataColumn[])\n  nameWithType: DataRelationCollection.Add(DataColumn[],DataColumn[])\n  fullName: System.Data.DataRelationCollection.Add(DataColumn[],DataColumn[])\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Creates a <xref href=\"System.Data.DataRelation\"></xref> with the specified parent and child columns, and adds it to the collection.\n  remarks: When a <xref:System.Data.DataRelation> object is added to the collection, <xref:System.Data.ForeignKeyConstraint> and <xref:System.Data.UniqueConstraint> objects are created by default if they do not already exist.\n  syntax:\n    content: public virtual System.Data.DataRelation Add (System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns);\n    parameters:\n    - id: parentColumns\n      type: System.Data.DataColumn[]\n      description: The parent columns of the relation.\n    - id: childColumns\n      type: System.Data.DataColumn[]\n      description: The child columns of the relation.\n    return:\n      type: System.Data.DataRelation\n      description: The created relation.\n  overload: System.Data.DataRelationCollection.Add*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>relation</code> argument is a null value.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The relation already belongs to this collection, or it belongs to another collection.\n  - type: System.Data.DuplicateNameException\n    commentId: T:System.Data.DuplicateNameException\n    description: The collection already has a relation with the same name. (The comparison is not case sensitive.)\n  - type: System.Data.InvalidConstraintException\n    commentId: T:System.Data.InvalidConstraintException\n    description: The relation has entered an invalid state since it was created.\n  platform:\n  - net462\n- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)\n  id: Add(System.String,System.Data.DataColumn,System.Data.DataColumn)\n  parent: System.Data.DataRelationCollection\n  langs:\n  - csharp\n  name: Add(String,DataColumn,DataColumn)\n  nameWithType: DataRelationCollection.Add(String,DataColumn,DataColumn)\n  fullName: System.Data.DataRelationCollection.Add(String,DataColumn,DataColumn)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Creates a <xref href=\"System.Data.DataRelation\"></xref> with the specified name, and parent and child columns, and adds it to the collection.\n  remarks: When a <xref:System.Data.DataRelation> object is added to the collection, <xref:System.Data.ForeignKeyConstraint> and <xref:System.Data.UniqueConstraint> objects are created by default if they do not already exist.\n  syntax:\n    content: public virtual System.Data.DataRelation Add (string name, System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the relation.\n    - id: parentColumn\n      type: System.Data.DataColumn\n      description: The parent column of the relation.\n    - id: childColumn\n      type: System.Data.DataColumn\n      description: The child column of the relation.\n    return:\n      type: System.Data.DataRelation\n      description: The created relation.\n  overload: System.Data.DataRelationCollection.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])\n  id: Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])\n  parent: System.Data.DataRelationCollection\n  langs:\n  - csharp\n  name: Add(String,DataColumn[],DataColumn[])\n  nameWithType: DataRelationCollection.Add(String,DataColumn[],DataColumn[])\n  fullName: System.Data.DataRelationCollection.Add(String,DataColumn[],DataColumn[])\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Creates a <xref href=\"System.Data.DataRelation\"></xref> with the specified name and arrays of parent and child columns, and adds it to the collection.\n  remarks: \"If the relation is successfully added to the collection, the <xref:System.Data.DataRelationCollection.CollectionChanged> event occurs.  \\n  \\n When a <xref:System.Data.DataRelation> object is added to the collection, <xref:System.Data.ForeignKeyConstraint> and <xref:System.Data.UniqueConstraint> objects are created by default if they do not already exist.\"\n  example:\n  - >-\n    [!code-vb[Classic WebData DataRelationCollection.Add1 Example#1](~/add/codesnippet/visualbasic/6b73537f-f1c2-4f94-8352-_1.vb)]\n     [!code-cs[Classic WebData DataRelationCollection.Add1 Example#1](~/add/codesnippet/csharp/6b73537f-f1c2-4f94-8352-_1.cs)]\n  syntax:\n    content: public virtual System.Data.DataRelation Add (string name, System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the <xref uid=\"langword_csharp_DataRelation\" name=\"DataRelation\" href=\"\"></xref> to create.\n    - id: parentColumns\n      type: System.Data.DataColumn[]\n      description: An array of parent <xref href=\"System.Data.DataColumn\"></xref> objects.\n    - id: childColumns\n      type: System.Data.DataColumn[]\n      description: An array of child <xref uid=\"langword_csharp_DataColumn\" name=\"DataColumn\" href=\"\"></xref> objects.\n    return:\n      type: System.Data.DataRelation\n      description: The created <xref uid=\"langword_csharp_DataRelation\" name=\"DataRelation\" href=\"\"></xref>.\n  overload: System.Data.DataRelationCollection.Add*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The relation name is a null value.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The relation already belongs to this collection, or it belongs to another collection.\n  - type: System.Data.DuplicateNameException\n    commentId: T:System.Data.DuplicateNameException\n    description: The collection already has a relation with the same name. (The comparison is not case sensitive.)\n  - type: System.Data.InvalidConstraintException\n    commentId: T:System.Data.InvalidConstraintException\n    description: The relation has entered an invalid state since it was created.\n  platform:\n  - net462\n- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)\n  id: Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)\n  parent: System.Data.DataRelationCollection\n  langs:\n  - csharp\n  name: Add(String,DataColumn,DataColumn,Boolean)\n  nameWithType: DataRelationCollection.Add(String,DataColumn,DataColumn,Boolean)\n  fullName: System.Data.DataRelationCollection.Add(String,DataColumn,DataColumn,Boolean)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Creates a <xref href=\"System.Data.DataRelation\"></xref> with the specified name, parent and child columns, with optional constraints according to the value of the <code>createConstraints</code> parameter, and adds it to the collection.\n  remarks: When a <xref:System.Data.DataRelation> object is added to the collection, <xref:System.Data.ForeignKeyConstraint> and <xref:System.Data.UniqueConstraint> objects are created by default if they do not already exist. To prevent this, you can set `createConstraints` to false.\n  syntax:\n    content: public virtual System.Data.DataRelation Add (string name, System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn, bool createConstraints);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the relation.\n    - id: parentColumn\n      type: System.Data.DataColumn\n      description: The parent column of the relation.\n    - id: childColumn\n      type: System.Data.DataColumn\n      description: The child column of the relation.\n    - id: createConstraints\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to create constraints; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. (The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>).\n    return:\n      type: System.Data.DataRelation\n      description: The created relation.\n  overload: System.Data.DataRelationCollection.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)\n  id: Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)\n  parent: System.Data.DataRelationCollection\n  langs:\n  - csharp\n  name: Add(String,DataColumn[],DataColumn[],Boolean)\n  nameWithType: DataRelationCollection.Add(String,DataColumn[],DataColumn[],Boolean)\n  fullName: System.Data.DataRelationCollection.Add(String,DataColumn[],DataColumn[],Boolean)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Creates a <xref href=\"System.Data.DataRelation\"></xref> with the specified name, arrays of parent and child columns, and value specifying whether to create a constraint, and adds it to the collection.\n  remarks: When a <xref:System.Data.DataRelation> object is added to the collection, <xref:System.Data.ForeignKeyConstraint> and <xref:System.Data.UniqueConstraint> objects are created by default if they do not already exist.\n  syntax:\n    content: public virtual System.Data.DataRelation Add (string name, System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns, bool createConstraints);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the <xref uid=\"langword_csharp_DataRelation\" name=\"DataRelation\" href=\"\"></xref> to create.\n    - id: parentColumns\n      type: System.Data.DataColumn[]\n      description: An array of parent <xref href=\"System.Data.DataColumn\"></xref> objects.\n    - id: childColumns\n      type: System.Data.DataColumn[]\n      description: An array of child <xref uid=\"langword_csharp_DataColumn\" name=\"DataColumn\" href=\"\"></xref> objects.\n    - id: createConstraints\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to create a constraint; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Data.DataRelation\n      description: The created relation.\n  overload: System.Data.DataRelationCollection.Add*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The relation name is a null value.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The relation already belongs to this collection, or it belongs to another collection.\n  - type: System.Data.DuplicateNameException\n    commentId: T:System.Data.DuplicateNameException\n    description: The collection already has a relation with the same name. (The comparison is not case sensitive.)\n  - type: System.Data.InvalidConstraintException\n    commentId: T:System.Data.InvalidConstraintException\n    description: The relation has entered an invalid state since it was created.\n  platform:\n  - net462\n- uid: System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)\n  id: AddCore(System.Data.DataRelation)\n  parent: System.Data.DataRelationCollection\n  langs:\n  - csharp\n  name: AddCore(DataRelation)\n  nameWithType: DataRelationCollection.AddCore(DataRelation)\n  fullName: System.Data.DataRelationCollection.AddCore(DataRelation)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Performs verification on the table.\n  syntax:\n    content: protected virtual void AddCore (System.Data.DataRelation relation);\n    parameters:\n    - id: relation\n      type: System.Data.DataRelation\n      description: The relation to check.\n  overload: System.Data.DataRelationCollection.AddCore*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The relation is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The relation already belongs to this collection, or it belongs to another collection.\n  - type: System.Data.DuplicateNameException\n    commentId: T:System.Data.DuplicateNameException\n    description: The collection already has a relation with the same name. (The comparison is not case sensitive.)\n  platform:\n  - net462\n- uid: System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])\n  id: AddRange(System.Data.DataRelation[])\n  parent: System.Data.DataRelationCollection\n  langs:\n  - csharp\n  name: AddRange(DataRelation[])\n  nameWithType: DataRelationCollection.AddRange(DataRelation[])\n  fullName: System.Data.DataRelationCollection.AddRange(DataRelation[])\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Copies the elements of the specified <xref href=\"System.Data.DataRelation\"></xref> array to the end of the collection.\n  remarks: If <xref:System.Data.DataSet.BeginInit%2A> has been called, `AddRange` does not add any objects to the collection until <xref:System.Data.DataSet.EndInit%2A> is called. At the time that `EndInit` is called, the collection will be populated with the items specified in the most recent call to `AddRange`. If `AddRange` is called multiple times within a `BeginInit` / `EndInit` sequence, only those items specified in the most recent call to `AddRange` are added.\n  example:\n  - >-\n    [!code-cs[Classic WebData DataRelationCollection.AddRange Example#1](~/add/codesnippet/csharp/m-system.data.datarelati_0_1.cs)]\n     [!code-vb[Classic WebData DataRelationCollection.AddRange Example#1](~/add/codesnippet/visualbasic/m-system.data.datarelati_0_1.vb)]\n  syntax:\n    content: public virtual void AddRange (System.Data.DataRelation[] relations);\n    parameters:\n    - id: relations\n      type: System.Data.DataRelation[]\n      description: The array of <xref href=\"System.Data.DataRelation\"></xref> objects to add to the collection.\n  overload: System.Data.DataRelationCollection.AddRange*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)\n  id: CanRemove(System.Data.DataRelation)\n  parent: System.Data.DataRelationCollection\n  langs:\n  - csharp\n  name: CanRemove(DataRelation)\n  nameWithType: DataRelationCollection.CanRemove(DataRelation)\n  fullName: System.Data.DataRelationCollection.CanRemove(DataRelation)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Verifies whether the specified <xref href=\"System.Data.DataRelation\"></xref> can be removed from the collection.\n  syntax:\n    content: public virtual bool CanRemove (System.Data.DataRelation relation);\n    parameters:\n    - id: relation\n      type: System.Data.DataRelation\n      description: The relation to perform the check against.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Data.DataRelation\"></xref> can be removed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.DataRelationCollection.CanRemove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataRelationCollection.Clear\n  id: Clear\n  parent: System.Data.DataRelationCollection\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: DataRelationCollection.Clear()\n  fullName: System.Data.DataRelationCollection.Clear()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Clears the collection of any relations.\n  syntax:\n    content: public virtual void Clear ();\n    parameters: []\n  overload: System.Data.DataRelationCollection.Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataRelationCollection.CollectionChanged\n  id: CollectionChanged\n  parent: System.Data.DataRelationCollection\n  langs:\n  - csharp\n  name: CollectionChanged\n  nameWithType: DataRelationCollection.CollectionChanged\n  fullName: System.Data.DataRelationCollection.CollectionChanged\n  type: Event\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Occurs when the collection has changed.\n  syntax:\n    content: public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;\n    return:\n      type: System.ComponentModel.CollectionChangeEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataRelationCollection.Contains(System.String)\n  id: Contains(System.String)\n  parent: System.Data.DataRelationCollection\n  langs:\n  - csharp\n  name: Contains(String)\n  nameWithType: DataRelationCollection.Contains(String)\n  fullName: System.Data.DataRelationCollection.Contains(String)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Verifies whether a <xref href=\"System.Data.DataRelation\"></xref> with the specific name (case insensitive) exists in the collection.\n  syntax:\n    content: public virtual bool Contains (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the relation to find.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, if a relation with the specified name exists; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.DataRelationCollection.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)\n  id: CopyTo(System.Data.DataRelation[],System.Int32)\n  parent: System.Data.DataRelationCollection\n  langs:\n  - csharp\n  name: CopyTo(DataRelation[],Int32)\n  nameWithType: DataRelationCollection.CopyTo(DataRelation[],Int32)\n  fullName: System.Data.DataRelationCollection.CopyTo(DataRelation[],Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Copies the collection of <xref href=\"System.Data.DataRelation\"></xref> objects starting at the specified index.\n  syntax:\n    content: public void CopyTo (System.Data.DataRelation[] array, int index);\n    parameters:\n    - id: array\n      type: System.Data.DataRelation[]\n      description: The array of <xref href=\"System.Data.DataRelation\"></xref> objects to copy the collection to.\n    - id: index\n      type: System.Int32\n      description: The index to start from.\n  overload: System.Data.DataRelationCollection.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataRelationCollection.GetDataSet\n  id: GetDataSet\n  parent: System.Data.DataRelationCollection\n  langs:\n  - csharp\n  name: GetDataSet()\n  nameWithType: DataRelationCollection.GetDataSet()\n  fullName: System.Data.DataRelationCollection.GetDataSet()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: This method supports the .NET Framework infrastructure and is not intended to be used directly from your code.\n  syntax:\n    content: protected abstract System.Data.DataSet GetDataSet ();\n    parameters: []\n    return:\n      type: System.Data.DataSet\n      description: The referenced DataSet.\n  overload: System.Data.DataRelationCollection.GetDataSet*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)\n  id: IndexOf(System.Data.DataRelation)\n  parent: System.Data.DataRelationCollection\n  langs:\n  - csharp\n  name: IndexOf(DataRelation)\n  nameWithType: DataRelationCollection.IndexOf(DataRelation)\n  fullName: System.Data.DataRelationCollection.IndexOf(DataRelation)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets the index of the specified <xref href=\"System.Data.DataRelation\"></xref> object.\n  syntax:\n    content: public virtual int IndexOf (System.Data.DataRelation relation);\n    parameters:\n    - id: relation\n      type: System.Data.DataRelation\n      description: The relation to search for.\n    return:\n      type: System.Int32\n      description: The 0-based index of the relation, or -1 if the relation is not found in the collection.\n  overload: System.Data.DataRelationCollection.IndexOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataRelationCollection.IndexOf(System.String)\n  id: IndexOf(System.String)\n  parent: System.Data.DataRelationCollection\n  langs:\n  - csharp\n  name: IndexOf(String)\n  nameWithType: DataRelationCollection.IndexOf(String)\n  fullName: System.Data.DataRelationCollection.IndexOf(String)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets the index of the <xref href=\"System.Data.DataRelation\"></xref> specified by name.\n  syntax:\n    content: public virtual int IndexOf (string relationName);\n    parameters:\n    - id: relationName\n      type: System.String\n      description: The name of the relation to find.\n    return:\n      type: System.Int32\n      description: The zero-based index of the relation with the specified name, or -1 if the relation does not exist in the collection.\n  overload: System.Data.DataRelationCollection.IndexOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataRelationCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Data.DataRelationCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: DataRelationCollection.Item(Int32)\n  fullName: System.Data.DataRelationCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets the <xref href=\"System.Data.DataRelation\"></xref> object at the specified index.\n  syntax:\n    content: public abstract System.Data.DataRelation this[int index] { get; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index to find.\n    return:\n      type: System.Data.DataRelation\n      description: The <xref href=\"System.Data.DataRelation\"></xref>, or a null value if the specified <xref href=\"System.Data.DataRelation\"></xref> does not exist.\n  overload: System.Data.DataRelationCollection.Item*\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: The index value is greater than the number of items in the collection.\n  platform:\n  - net462\n- uid: System.Data.DataRelationCollection.Item(System.String)\n  id: Item(System.String)\n  parent: System.Data.DataRelationCollection\n  langs:\n  - csharp\n  name: Item(String)\n  nameWithType: DataRelationCollection.Item(String)\n  fullName: System.Data.DataRelationCollection.Item(String)\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets the <xref href=\"System.Data.DataRelation\"></xref> object specified by name.\n  syntax:\n    content: public abstract System.Data.DataRelation this[string name] { get; }\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the relation to find.\n    return:\n      type: System.Data.DataRelation\n      description: The named <xref href=\"System.Data.DataRelation\"></xref>, or a null value if the specified <xref href=\"System.Data.DataRelation\"></xref> does not exist.\n  overload: System.Data.DataRelationCollection.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)\n  id: OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)\n  parent: System.Data.DataRelationCollection\n  langs:\n  - csharp\n  name: OnCollectionChanged(CollectionChangeEventArgs)\n  nameWithType: DataRelationCollection.OnCollectionChanged(CollectionChangeEventArgs)\n  fullName: System.Data.DataRelationCollection.OnCollectionChanged(CollectionChangeEventArgs)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Raises the <xref href=\"System.Data.DataRelationCollection.CollectionChanged\"></xref> event.\n  remarks: 'Raising an event invokes the event handler through a delegate. For an overview, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).'\n  syntax:\n    content: protected virtual void OnCollectionChanged (System.ComponentModel.CollectionChangeEventArgs ccevent);\n    parameters:\n    - id: ccevent\n      type: System.ComponentModel.CollectionChangeEventArgs\n      description: A <xref href=\"System.ComponentModel.CollectionChangeEventArgs\"></xref> that contains the event data.\n  overload: System.Data.DataRelationCollection.OnCollectionChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)\n  id: OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)\n  parent: System.Data.DataRelationCollection\n  langs:\n  - csharp\n  name: OnCollectionChanging(CollectionChangeEventArgs)\n  nameWithType: DataRelationCollection.OnCollectionChanging(CollectionChangeEventArgs)\n  fullName: System.Data.DataRelationCollection.OnCollectionChanging(CollectionChangeEventArgs)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Raises the <xref href=\"System.Data.DataRelationCollection.CollectionChanged\"></xref> event.\n  remarks: 'Raising an event invokes the event handler through a delegate. For an overview, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).'\n  syntax:\n    content: protected virtual void OnCollectionChanging (System.ComponentModel.CollectionChangeEventArgs ccevent);\n    parameters:\n    - id: ccevent\n      type: System.ComponentModel.CollectionChangeEventArgs\n      description: A <xref href=\"System.ComponentModel.CollectionChangeEventArgs\"></xref> that contains the event data.\n  overload: System.Data.DataRelationCollection.OnCollectionChanging*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataRelationCollection.Remove(System.Data.DataRelation)\n  id: Remove(System.Data.DataRelation)\n  parent: System.Data.DataRelationCollection\n  langs:\n  - csharp\n  name: Remove(DataRelation)\n  nameWithType: DataRelationCollection.Remove(DataRelation)\n  fullName: System.Data.DataRelationCollection.Remove(DataRelation)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Removes the specified relation from the collection.\n  remarks: The <xref:System.Data.DataRelationCollection.CollectionChanged> event is fired if the remove operation succeeds. Note that removing the relation does not remove any associated constraint objects.\n  syntax:\n    content: public void Remove (System.Data.DataRelation relation);\n    parameters:\n    - id: relation\n      type: System.Data.DataRelation\n      description: The relation to remove.\n  overload: System.Data.DataRelationCollection.Remove*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The relation is a null value.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The relation does not belong to the collection.\n  platform:\n  - net462\n- uid: System.Data.DataRelationCollection.Remove(System.String)\n  id: Remove(System.String)\n  parent: System.Data.DataRelationCollection\n  langs:\n  - csharp\n  name: Remove(String)\n  nameWithType: DataRelationCollection.Remove(String)\n  fullName: System.Data.DataRelationCollection.Remove(String)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Removes the relation with the specified name from the collection.\n  remarks: The <xref:System.Data.DataRelationCollection.CollectionChanged> event is fired if the remove operation succeeds.\n  syntax:\n    content: public void Remove (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the relation to remove.\n  overload: System.Data.DataRelationCollection.Remove*\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: The collection does not have a relation with the specified name.\n  platform:\n  - net462\n- uid: System.Data.DataRelationCollection.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Data.DataRelationCollection\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: DataRelationCollection.RemoveAt(Int32)\n  fullName: System.Data.DataRelationCollection.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Removes the relation at the specified index from the collection.\n  remarks: The <xref:System.Data.DataRelationCollection.CollectionChanged> event is fired if the remove operation succeeds.\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index of the relation to remove.\n  overload: System.Data.DataRelationCollection.RemoveAt*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The collection does not have a relation at the specified index.\n  platform:\n  - net462\n- uid: System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)\n  id: RemoveCore(System.Data.DataRelation)\n  parent: System.Data.DataRelationCollection\n  langs:\n  - csharp\n  name: RemoveCore(DataRelation)\n  nameWithType: DataRelationCollection.RemoveCore(DataRelation)\n  fullName: System.Data.DataRelationCollection.RemoveCore(DataRelation)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Performs a verification on the specified <xref href=\"System.Data.DataRelation\"></xref> object.\n  syntax:\n    content: protected virtual void RemoveCore (System.Data.DataRelation relation);\n    parameters:\n    - id: relation\n      type: System.Data.DataRelation\n      description: The <xref uid=\"langword_csharp_DataRelation\" name=\"DataRelation\" href=\"\"></xref> object to verify.\n  overload: System.Data.DataRelationCollection.RemoveCore*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The collection does not have a relation at the specified index.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The specified relation does not belong to this collection, or it belongs to another collection.\n  platform:\n  - net462\nreferences:\n- uid: System.Data.InternalDataCollectionBase\n  isExternal: false\n  name: System.Data.InternalDataCollectionBase\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Data.DuplicateNameException\n  parent: System.Data\n  isExternal: false\n  name: DuplicateNameException\n  nameWithType: DuplicateNameException\n  fullName: System.Data.DuplicateNameException\n- uid: System.Data.InvalidConstraintException\n  parent: System.Data\n  isExternal: false\n  name: InvalidConstraintException\n  nameWithType: InvalidConstraintException\n  fullName: System.Data.InvalidConstraintException\n- uid: System.IndexOutOfRangeException\n  isExternal: true\n  name: System.IndexOutOfRangeException\n- uid: System.Data.DataRelationCollection.#ctor\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: DataRelationCollection()\n  nameWithType: DataRelationCollection.DataRelationCollection()\n  fullName: System.Data.DataRelationCollection.DataRelationCollection()\n- uid: System.Data.DataRelationCollection.Add(System.Data.DataRelation)\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: Add(DataRelation)\n  nameWithType: DataRelationCollection.Add(DataRelation)\n  fullName: System.Data.DataRelationCollection.Add(DataRelation)\n- uid: System.Data.DataRelation\n  parent: System.Data\n  isExternal: false\n  name: DataRelation\n  nameWithType: DataRelation\n  fullName: System.Data.DataRelation\n- uid: System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: Add(DataColumn,DataColumn)\n  nameWithType: DataRelationCollection.Add(DataColumn,DataColumn)\n  fullName: System.Data.DataRelationCollection.Add(DataColumn,DataColumn)\n- uid: System.Data.DataColumn\n  parent: System.Data\n  isExternal: false\n  name: DataColumn\n  nameWithType: DataColumn\n  fullName: System.Data.DataColumn\n- uid: System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: Add(DataColumn[],DataColumn[])\n  nameWithType: DataRelationCollection.Add(DataColumn[],DataColumn[])\n  fullName: System.Data.DataRelationCollection.Add(DataColumn[],DataColumn[])\n- uid: System.Data.DataColumn[]\n  parent: System.Data\n  isExternal: false\n  name: DataColumn\n  nameWithType: DataColumn\n  fullName: System.Data.DataColumn[]\n  spec.csharp:\n  - uid: System.Data.DataColumn\n    name: DataColumn\n    nameWithType: DataColumn\n    fullName: DataColumn[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: Add(String,DataColumn,DataColumn)\n  nameWithType: DataRelationCollection.Add(String,DataColumn,DataColumn)\n  fullName: System.Data.DataRelationCollection.Add(String,DataColumn,DataColumn)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: Add(String,DataColumn[],DataColumn[])\n  nameWithType: DataRelationCollection.Add(String,DataColumn[],DataColumn[])\n  fullName: System.Data.DataRelationCollection.Add(String,DataColumn[],DataColumn[])\n- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: Add(String,DataColumn,DataColumn,Boolean)\n  nameWithType: DataRelationCollection.Add(String,DataColumn,DataColumn,Boolean)\n  fullName: System.Data.DataRelationCollection.Add(String,DataColumn,DataColumn,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: Add(String,DataColumn[],DataColumn[],Boolean)\n  nameWithType: DataRelationCollection.Add(String,DataColumn[],DataColumn[],Boolean)\n  fullName: System.Data.DataRelationCollection.Add(String,DataColumn[],DataColumn[],Boolean)\n- uid: System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: AddCore(DataRelation)\n  nameWithType: DataRelationCollection.AddCore(DataRelation)\n  fullName: System.Data.DataRelationCollection.AddCore(DataRelation)\n- uid: System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: AddRange(DataRelation[])\n  nameWithType: DataRelationCollection.AddRange(DataRelation[])\n  fullName: System.Data.DataRelationCollection.AddRange(DataRelation[])\n- uid: System.Data.DataRelation[]\n  parent: System.Data\n  isExternal: false\n  name: DataRelation\n  nameWithType: DataRelation\n  fullName: System.Data.DataRelation[]\n  spec.csharp:\n  - uid: System.Data.DataRelation\n    name: DataRelation\n    nameWithType: DataRelation\n    fullName: DataRelation[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: CanRemove(DataRelation)\n  nameWithType: DataRelationCollection.CanRemove(DataRelation)\n  fullName: System.Data.DataRelationCollection.CanRemove(DataRelation)\n- uid: System.Data.DataRelationCollection.Clear\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: Clear()\n  nameWithType: DataRelationCollection.Clear()\n  fullName: System.Data.DataRelationCollection.Clear()\n- uid: System.Data.DataRelationCollection.CollectionChanged\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: CollectionChanged\n  nameWithType: DataRelationCollection.CollectionChanged\n  fullName: System.Data.DataRelationCollection.CollectionChanged\n- uid: System.ComponentModel.CollectionChangeEventHandler\n  parent: System.ComponentModel\n  isExternal: false\n  name: CollectionChangeEventHandler\n  nameWithType: CollectionChangeEventHandler\n  fullName: System.ComponentModel.CollectionChangeEventHandler\n- uid: System.Data.DataRelationCollection.Contains(System.String)\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: Contains(String)\n  nameWithType: DataRelationCollection.Contains(String)\n  fullName: System.Data.DataRelationCollection.Contains(String)\n- uid: System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: CopyTo(DataRelation[],Int32)\n  nameWithType: DataRelationCollection.CopyTo(DataRelation[],Int32)\n  fullName: System.Data.DataRelationCollection.CopyTo(DataRelation[],Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.DataRelationCollection.GetDataSet\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: GetDataSet()\n  nameWithType: DataRelationCollection.GetDataSet()\n  fullName: System.Data.DataRelationCollection.GetDataSet()\n- uid: System.Data.DataSet\n  parent: System.Data\n  isExternal: false\n  name: DataSet\n  nameWithType: DataSet\n  fullName: System.Data.DataSet\n- uid: System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: IndexOf(DataRelation)\n  nameWithType: DataRelationCollection.IndexOf(DataRelation)\n  fullName: System.Data.DataRelationCollection.IndexOf(DataRelation)\n- uid: System.Data.DataRelationCollection.IndexOf(System.String)\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: IndexOf(String)\n  nameWithType: DataRelationCollection.IndexOf(String)\n  fullName: System.Data.DataRelationCollection.IndexOf(String)\n- uid: System.Data.DataRelationCollection.Item(System.Int32)\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: DataRelationCollection.Item(Int32)\n  fullName: System.Data.DataRelationCollection.Item(Int32)\n- uid: System.Data.DataRelationCollection.Item(System.String)\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: Item(String)\n  nameWithType: DataRelationCollection.Item(String)\n  fullName: System.Data.DataRelationCollection.Item(String)\n- uid: System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: OnCollectionChanged(CollectionChangeEventArgs)\n  nameWithType: DataRelationCollection.OnCollectionChanged(CollectionChangeEventArgs)\n  fullName: System.Data.DataRelationCollection.OnCollectionChanged(CollectionChangeEventArgs)\n- uid: System.ComponentModel.CollectionChangeEventArgs\n  parent: System.ComponentModel\n  isExternal: false\n  name: CollectionChangeEventArgs\n  nameWithType: CollectionChangeEventArgs\n  fullName: System.ComponentModel.CollectionChangeEventArgs\n- uid: System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: OnCollectionChanging(CollectionChangeEventArgs)\n  nameWithType: DataRelationCollection.OnCollectionChanging(CollectionChangeEventArgs)\n  fullName: System.Data.DataRelationCollection.OnCollectionChanging(CollectionChangeEventArgs)\n- uid: System.Data.DataRelationCollection.Remove(System.Data.DataRelation)\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: Remove(DataRelation)\n  nameWithType: DataRelationCollection.Remove(DataRelation)\n  fullName: System.Data.DataRelationCollection.Remove(DataRelation)\n- uid: System.Data.DataRelationCollection.Remove(System.String)\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: Remove(String)\n  nameWithType: DataRelationCollection.Remove(String)\n  fullName: System.Data.DataRelationCollection.Remove(String)\n- uid: System.Data.DataRelationCollection.RemoveAt(System.Int32)\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: DataRelationCollection.RemoveAt(Int32)\n  fullName: System.Data.DataRelationCollection.RemoveAt(Int32)\n- uid: System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: RemoveCore(DataRelation)\n  nameWithType: DataRelationCollection.RemoveCore(DataRelation)\n  fullName: System.Data.DataRelationCollection.RemoveCore(DataRelation)\n- uid: System.Data.DataRelationCollection.#ctor*\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: DataRelationCollection\n  nameWithType: DataRelationCollection.DataRelationCollection\n- uid: System.Data.DataRelationCollection.Add*\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: Add\n  nameWithType: DataRelationCollection.Add\n- uid: System.Data.DataRelationCollection.AddCore*\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: AddCore\n  nameWithType: DataRelationCollection.AddCore\n- uid: System.Data.DataRelationCollection.AddRange*\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: AddRange\n  nameWithType: DataRelationCollection.AddRange\n- uid: System.Data.DataRelationCollection.CanRemove*\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: CanRemove\n  nameWithType: DataRelationCollection.CanRemove\n- uid: System.Data.DataRelationCollection.Clear*\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: Clear\n  nameWithType: DataRelationCollection.Clear\n- uid: System.Data.DataRelationCollection.Contains*\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: Contains\n  nameWithType: DataRelationCollection.Contains\n- uid: System.Data.DataRelationCollection.CopyTo*\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: DataRelationCollection.CopyTo\n- uid: System.Data.DataRelationCollection.GetDataSet*\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: GetDataSet\n  nameWithType: DataRelationCollection.GetDataSet\n- uid: System.Data.DataRelationCollection.IndexOf*\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: IndexOf\n  nameWithType: DataRelationCollection.IndexOf\n- uid: System.Data.DataRelationCollection.Item*\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: Item\n  nameWithType: DataRelationCollection.Item\n- uid: System.Data.DataRelationCollection.OnCollectionChanged*\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: OnCollectionChanged\n  nameWithType: DataRelationCollection.OnCollectionChanged\n- uid: System.Data.DataRelationCollection.OnCollectionChanging*\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: OnCollectionChanging\n  nameWithType: DataRelationCollection.OnCollectionChanging\n- uid: System.Data.DataRelationCollection.Remove*\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: Remove\n  nameWithType: DataRelationCollection.Remove\n- uid: System.Data.DataRelationCollection.RemoveAt*\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: RemoveAt\n  nameWithType: DataRelationCollection.RemoveAt\n- uid: System.Data.DataRelationCollection.RemoveCore*\n  parent: System.Data.DataRelationCollection\n  isExternal: false\n  name: RemoveCore\n  nameWithType: DataRelationCollection.RemoveCore\n"}