{"nodes":[{"pos":[1045,1307],"content":"Represents a shortcut menu. Although <xref href=\"System.Windows.Forms.ContextMenuStrip\"></xref> replaces and adds functionality to the ContextMenu control of previous versions, ContextMenu is retained for both backward compatibility and future use if you choose.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a shortcut menu.","pos":[0,27]},{"content":"Although <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ContextMenuStrip\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> replaces and adds functionality to the ContextMenu control of previous versions, ContextMenu is retained for both backward compatibility and future use if you choose.","pos":[28,262],"source":" Although <xref href=\"System.Windows.Forms.ContextMenuStrip\"></xref> replaces and adds functionality to the ContextMenu control of previous versions, ContextMenu is retained for both backward compatibility and future use if you choose."}]},{"pos":[1320,3665],"content":"The ContextMenu class represents shortcut menus that can be displayed when the user clicks the right mouse button over a control or area of the form. Shortcut menus are typically used to combine different menu items from a <xref:System.Windows.Forms.MainMenu> of a form that are useful for the user given the context of the application. For example, you can use a shortcut menu assigned to a <xref:System.Windows.Forms.TextBox> control to provide menu items for changing the font of the text, finding text within the control, or Clipboard features for copying and pasting text. You can also display new <xref:System.Windows.Forms.MenuItem> objects in a shortcut menu that are not located within a <xref:System.Windows.Forms.MainMenu> to provide situation specific commands that are not appropriate for the <xref:System.Windows.Forms.MainMenu> to display.       Typically, a shortcut menu is displayed when a user clicks the right mouse button over a control or the form itself. Visible controls and <xref:System.Windows.Forms.Form> have a <xref:System.Windows.Forms.Control.ContextMenu%2A> property that binds the ContextMenu class to the control that displays the shortcut menu. More than one control can use a ContextMenu. You can use the <xref:System.Windows.Forms.ContextMenu.SourceControl%2A> property to determine which control last displayed the shortcut menu in order to perform tasks specific to the control or to modify the shortcut menu displayed for the control.       You might want to know when the shortcut menu is being displayed in order to set check marks, disable items, and perform other menu tasks before the menu is displayed to the user. You can handle the <xref:System.Windows.Forms.ContextMenu.Popup> event to determine when the shortcut menu is being displayed.      > [!NOTE] >  In order to reuse <xref:System.Windows.Forms.MenuItem> objects that are displayed in a <xref:System.Windows.Forms.MainMenu> for use in a ContextMenu, you must create a copy of the menu using the <xref:System.Windows.Forms.MenuItem.CloneMenu%2A> method of the <xref:System.Windows.Forms.MenuItem> class. You can also merge menu items and their submenu items into a single <xref:System.Windows.Forms.MenuItem> object using the <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> method of the <xref:System.Windows.Forms.MenuItem> class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ContextMenu class represents shortcut menus that can be displayed when the user clicks the right mouse button over a control or area of the form.","pos":[0,149]},{"content":"Shortcut menus are typically used to combine different menu items from a &lt;xref:System.Windows.Forms.MainMenu&gt; of a form that are useful for the user given the context of the application.","pos":[150,336],"source":" Shortcut menus are typically used to combine different menu items from a <xref:System.Windows.Forms.MainMenu> of a form that are useful for the user given the context of the application."},{"content":"For example, you can use a shortcut menu assigned to a &lt;xref:System.Windows.Forms.TextBox&gt; control to provide menu items for changing the font of the text, finding text within the control, or Clipboard features for copying and pasting text.","pos":[337,577],"source":" For example, you can use a shortcut menu assigned to a <xref:System.Windows.Forms.TextBox> control to provide menu items for changing the font of the text, finding text within the control, or Clipboard features for copying and pasting text."},{"content":"You can also display new &lt;xref:System.Windows.Forms.MenuItem&gt; objects in a shortcut menu that are not located within a &lt;xref:System.Windows.Forms.MainMenu&gt; to provide situation specific commands that are not appropriate for the &lt;xref:System.Windows.Forms.MainMenu&gt; to display.","pos":[578,854],"source":" You can also display new <xref:System.Windows.Forms.MenuItem> objects in a shortcut menu that are not located within a <xref:System.Windows.Forms.MainMenu> to provide situation specific commands that are not appropriate for the <xref:System.Windows.Forms.MainMenu> to display."},{"content":"Typically, a shortcut menu is displayed when a user clicks the right mouse button over a control or the form itself.","pos":[861,977]},{"content":"Visible controls and &lt;xref:System.Windows.Forms.Form&gt; have a &lt;xref:System.Windows.Forms.Control.ContextMenu%2A&gt; property that binds the ContextMenu class to the control that displays the shortcut menu.","pos":[978,1179],"source":" Visible controls and <xref:System.Windows.Forms.Form> have a <xref:System.Windows.Forms.Control.ContextMenu%2A> property that binds the ContextMenu class to the control that displays the shortcut menu."},{"content":"More than one control can use a ContextMenu.","pos":[1180,1224]},{"content":"You can use the &lt;xref:System.Windows.Forms.ContextMenu.SourceControl%2A&gt; property to determine which control last displayed the shortcut menu in order to perform tasks specific to the control or to modify the shortcut menu displayed for the control.","pos":[1225,1474],"source":" You can use the <xref:System.Windows.Forms.ContextMenu.SourceControl%2A> property to determine which control last displayed the shortcut menu in order to perform tasks specific to the control or to modify the shortcut menu displayed for the control."},{"content":"You might want to know when the shortcut menu is being displayed in order to set check marks, disable items, and perform other menu tasks before the menu is displayed to the user.","pos":[1481,1660]},{"content":"You can handle the &lt;xref:System.Windows.Forms.ContextMenu.Popup&gt; event to determine when the shortcut menu is being displayed.","pos":[1661,1787],"source":" You can handle the <xref:System.Windows.Forms.ContextMenu.Popup> event to determine when the shortcut menu is being displayed."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  In order to reuse &lt;xref:System.Windows.Forms.MenuItem&gt; objects that are displayed in a &lt;xref:System.Windows.Forms.MainMenu&gt; for use in a ContextMenu, you must create a copy of the menu using the &lt;xref:System.Windows.Forms.MenuItem.CloneMenu%2A&gt; method of the &lt;xref:System.Windows.Forms.MenuItem&gt; class.","pos":[1793,2108],"source":"      > [!NOTE] >  In order to reuse <xref:System.Windows.Forms.MenuItem> objects that are displayed in a <xref:System.Windows.Forms.MainMenu> for use in a ContextMenu, you must create a copy of the menu using the <xref:System.Windows.Forms.MenuItem.CloneMenu%2A> method of the <xref:System.Windows.Forms.MenuItem> class."},{"content":"You can also merge menu items and their submenu items into a single &lt;xref:System.Windows.Forms.MenuItem&gt; object using the &lt;xref:System.Windows.Forms.MenuItem.MergeMenu%2A&gt; method of the &lt;xref:System.Windows.Forms.MenuItem&gt; class.","pos":[2109,2338],"source":" You can also merge menu items and their submenu items into a single <xref:System.Windows.Forms.MenuItem> object using the <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> method of the <xref:System.Windows.Forms.MenuItem> class."}]},{"pos":[7100,7223],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ContextMenu\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with no menu items specified.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Forms.ContextMenu\"></xref> class with no menu items specified."},{"pos":[7235,7640],"content":"Once you have used this version of the constructor, you can add menu items to the <xref:System.Windows.Forms.ContextMenu> by using the <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A> method of the <xref:System.Windows.Forms.Menu.MenuItemCollection> class. You can access the <xref:System.Windows.Forms.Menu.MenuItemCollection> through the <xref:System.Windows.Forms.Menu.MenuItems%2A> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Once you have used this version of the constructor, you can add menu items to the <xref:System.Windows.Forms.ContextMenu> by using the <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A> method of the <xref:System.Windows.Forms.Menu.MenuItemCollection> class. You can access the <xref:System.Windows.Forms.Menu.MenuItemCollection> through the <xref:System.Windows.Forms.Menu.MenuItems%2A> property.","pos":[0,405],"nodes":[{"content":"Once you have used this version of the constructor, you can add menu items to the &lt;xref:System.Windows.Forms.ContextMenu&gt; by using the &lt;xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A&gt; method of the &lt;xref:System.Windows.Forms.Menu.MenuItemCollection&gt; class.","pos":[0,266],"source":"Once you have used this version of the constructor, you can add menu items to the <xref:System.Windows.Forms.ContextMenu> by using the <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A> method of the <xref:System.Windows.Forms.Menu.MenuItemCollection> class."},{"content":"You can access the &lt;xref:System.Windows.Forms.Menu.MenuItemCollection&gt; through the &lt;xref:System.Windows.Forms.Menu.MenuItems%2A&gt; property.","pos":[267,405],"source":" You can access the <xref:System.Windows.Forms.Menu.MenuItemCollection> through the <xref:System.Windows.Forms.Menu.MenuItems%2A> property."}]}]},{"pos":[8244,8421],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ContextMenu\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with a specified set of <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.MenuItem\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Forms.ContextMenu\"></xref> class with a specified set of <xref href=\"System.Windows.Forms.MenuItem\"></xref> objects."},{"pos":[8433,9006],"content":"You can use this version of the constructor to create a <xref:System.Windows.Forms.ContextMenu> that has its menu items specified at the time it is created. Once you have used this version of the constructor, you can add additional menu items to the <xref:System.Windows.Forms.ContextMenu> by using the <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A> method of the <xref:System.Windows.Forms.Menu.MenuItemCollection> class. You can access the <xref:System.Windows.Forms.Menu.MenuItemCollection> through the <xref:System.Windows.Forms.Menu.MenuItems%2A> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can use this version of the constructor to create a <xref:System.Windows.Forms.ContextMenu> that has its menu items specified at the time it is created. Once you have used this version of the constructor, you can add additional menu items to the <xref:System.Windows.Forms.ContextMenu> by using the <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A> method of the <xref:System.Windows.Forms.Menu.MenuItemCollection> class. You can access the <xref:System.Windows.Forms.Menu.MenuItemCollection> through the <xref:System.Windows.Forms.Menu.MenuItems%2A> property.","pos":[0,573],"nodes":[{"content":"You can use this version of the constructor to create a &lt;xref:System.Windows.Forms.ContextMenu&gt; that has its menu items specified at the time it is created.","pos":[0,156],"source":"You can use this version of the constructor to create a <xref:System.Windows.Forms.ContextMenu> that has its menu items specified at the time it is created."},{"content":"Once you have used this version of the constructor, you can add additional menu items to the &lt;xref:System.Windows.Forms.ContextMenu&gt; by using the &lt;xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A&gt; method of the &lt;xref:System.Windows.Forms.Menu.MenuItemCollection&gt; class.","pos":[157,434],"source":" Once you have used this version of the constructor, you can add additional menu items to the <xref:System.Windows.Forms.ContextMenu> by using the <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A> method of the <xref:System.Windows.Forms.Menu.MenuItemCollection> class."},{"content":"You can access the &lt;xref:System.Windows.Forms.Menu.MenuItemCollection&gt; through the &lt;xref:System.Windows.Forms.Menu.MenuItems%2A&gt; property.","pos":[435,573],"source":" You can access the <xref:System.Windows.Forms.Menu.MenuItemCollection> through the <xref:System.Windows.Forms.Menu.MenuItems%2A> property."}]}]},{"pos":[9859,9988],"content":"An array of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MenuItem\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects that represent the menu items to add to the shortcut menu.","needQuote":true,"needEscape":true,"source":"An array of <xref href=\"System.Windows.Forms.MenuItem\"></xref> objects that represent the menu items to add to the shortcut menu."},{"pos":[10414,10454],"content":"Occurs when the shortcut menu collapses.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the shortcut menu collapses.","pos":[0,40]}]},{"pos":[10466,10583],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"For more information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."},{"pos":[11715,11727],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12181,12261],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ContextMenu.Collapse\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Forms.ContextMenu.Collapse\"></xref> event."},{"pos":[12410,12466],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[12962,13038],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ContextMenu.Popup\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Forms.ContextMenu.Popup\"></xref> event"},{"pos":[13184,13240],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[13653,13698],"content":"Occurs before the shortcut menu is displayed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs before the shortcut menu is displayed.","pos":[0,45]}]},{"pos":[13711,14573],"content":"You can use this event to initialize the <xref:System.Windows.Forms.MenuItem> objects before they are displayed. For example, if you use a <xref:System.Windows.Forms.ContextMenu> for three <xref:System.Windows.Forms.TextBox> controls and you want to disable certain menu items in the <xref:System.Windows.Forms.ContextMenu> depending on which <xref:System.Windows.Forms.TextBox> is displaying the shortcut menu, you can create an event handler for this event. You could use the <xref:System.Windows.Forms.ContextMenu.SourceControl%2A> property to determine which <xref:System.Windows.Forms.TextBox> is about to display the <xref:System.Windows.Forms.ContextMenu> and disable the appropriate <xref:System.Windows.Forms.MenuItem> objects.       For more information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can use this event to initialize the &lt;xref:System.Windows.Forms.MenuItem&gt; objects before they are displayed.","pos":[0,112],"source":"You can use this event to initialize the <xref:System.Windows.Forms.MenuItem> objects before they are displayed."},{"content":"For example, if you use a &lt;xref:System.Windows.Forms.ContextMenu&gt; for three &lt;xref:System.Windows.Forms.TextBox&gt; controls and you want to disable certain menu items in the &lt;xref:System.Windows.Forms.ContextMenu&gt; depending on which &lt;xref:System.Windows.Forms.TextBox&gt; is displaying the shortcut menu, you can create an event handler for this event.","pos":[113,459],"source":" For example, if you use a <xref:System.Windows.Forms.ContextMenu> for three <xref:System.Windows.Forms.TextBox> controls and you want to disable certain menu items in the <xref:System.Windows.Forms.ContextMenu> depending on which <xref:System.Windows.Forms.TextBox> is displaying the shortcut menu, you can create an event handler for this event."},{"content":"You could use the &lt;xref:System.Windows.Forms.ContextMenu.SourceControl%2A&gt; property to determine which &lt;xref:System.Windows.Forms.TextBox&gt; is about to display the &lt;xref:System.Windows.Forms.ContextMenu&gt; and disable the appropriate &lt;xref:System.Windows.Forms.MenuItem&gt; objects.","pos":[460,736],"source":" You could use the <xref:System.Windows.Forms.ContextMenu.SourceControl%2A> property to determine which <xref:System.Windows.Forms.TextBox> is about to display the <xref:System.Windows.Forms.ContextMenu> and disable the appropriate <xref:System.Windows.Forms.MenuItem> objects."},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[743,860],"source":"       For more information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[16016,16028],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16666,16690],"content":"Processes a command key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Processes a command key.","pos":[0,24]}]},{"pos":[16703,17775],"content":"This method is called during message preprocessing to handle command keys. Command keys are keys that always take precedence over regular input keys. Examples of command keys include accelerators and menu shortcuts. The method must return `true` to indicate that it has processed the command key, or `false` to indicate that the key is not a command key. This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.       The ProcessCmdKey method first determines whether the control has a <xref:System.Windows.Forms.ContextMenu>, and if so, enables the <xref:System.Windows.Forms.ContextMenu> to process the command key. If the command key is not a menu shortcut and the control has a parent, the key is passed to the parent's ProcessCmdKey method. The net effect is that command keys are \"bubbled\" up the control hierarchy. In addition to the key the user pressed, the key data also indicates which, if any, modifier keys were pressed at the same time as the key. Modifier keys include the SHIFT, CTRL, and ALT keys.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is called during message preprocessing to handle command keys.","pos":[0,74]},{"content":"Command keys are keys that always take precedence over regular input keys.","pos":[75,149]},{"content":"Examples of command keys include accelerators and menu shortcuts.","pos":[150,215]},{"content":"The method must return <ph id=\"ph1\">`true`</ph> to indicate that it has processed the command key, or <ph id=\"ph2\">`false`</ph> to indicate that the key is not a command key.","pos":[216,354],"source":" The method must return `true` to indicate that it has processed the command key, or `false` to indicate that the key is not a command key."},{"content":"This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.","pos":[355,465]},{"content":"The ProcessCmdKey method first determines whether the control has a &lt;xref:System.Windows.Forms.ContextMenu&gt;, and if so, enables the &lt;xref:System.Windows.Forms.ContextMenu&gt; to process the command key.","pos":[472,671],"source":"       The ProcessCmdKey method first determines whether the control has a <xref:System.Windows.Forms.ContextMenu>, and if so, enables the <xref:System.Windows.Forms.ContextMenu> to process the command key."},{"content":"If the command key is not a menu shortcut and the control has a parent, the key is passed to the parent's ProcessCmdKey method.","pos":[672,799]},{"content":"The net effect is that command keys are \"bubbled\" up the control hierarchy.","pos":[800,875]},{"content":"In addition to the key the user pressed, the key data also indicates which, if any, modifier keys were pressed at the same time as the key.","pos":[876,1015]},{"content":"Modifier keys include the SHIFT, CTRL, and ALT keys.","pos":[1016,1068]}]},{"pos":[18040,18160],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Message\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, passed by reference, that represents the window message to process.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.Message\"></xref>, passed by reference, that represents the window message to process."},{"pos":[18236,18336],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Keys\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that represents the key to process.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Forms.Keys\"></xref> values that represents the key to process."},{"pos":[18415,18460],"content":"The control to which the command key applies.","needQuote":true,"needEscape":true,"nodes":[{"content":"The control to which the command key applies.","pos":[0,45]}]},{"pos":[18519,18701],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the character was processed by the control; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the character was processed by the control; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[19153,19255],"content":"Gets or sets a value indicating whether text displayed by the control is displayed from right to left.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether text displayed by the control is displayed from right to left.","pos":[0,102]}]},{"pos":[19268,19688],"content":"This property enables your menus to support languages that are written from right to left. When this property is set to `RightToLeft.Yes`, the menu item text is displayed from right to left instead of the default left to right method.      > [!NOTE] >  For more information about how enabling right-to-left alignment affects Windows Forms controls, see the <xref:System.Windows.Forms.Control.RightToLeft%2A> property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property enables your menus to support languages that are written from right to left.","pos":[0,90]},{"content":"When this property is set to <ph id=\"ph1\">`RightToLeft.Yes`</ph>, the menu item text is displayed from right to left instead of the default left to right method.","pos":[91,234],"source":" When this property is set to `RightToLeft.Yes`, the menu item text is displayed from right to left instead of the default left to right method."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  For more information about how enabling right-to-left alignment affects Windows Forms controls, see the &lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt; property.","pos":[240,417],"source":"      > [!NOTE] >  For more information about how enabling right-to-left alignment affects Windows Forms controls, see the <xref:System.Windows.Forms.Control.RightToLeft%2A> property."}]},{"pos":[19863,19935],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RightToLeft\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Forms.RightToLeft\"></xref> values."},{"pos":[20154,20284],"content":"The value assigned to the property is not a valid member of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RightToLeft\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration.","needQuote":true,"needEscape":true,"source":"The value assigned to the property is not a valid member of the <xref href=\"System.Windows.Forms.RightToLeft\"></xref> enumeration."},{"pos":[20769,20822],"content":"Displays the shortcut menu at the specified position.","needQuote":true,"needEscape":true,"nodes":[{"content":"Displays the shortcut menu at the specified position.","pos":[0,53]}]},{"pos":[20834,21217],"content":"Typically, a <xref:System.Windows.Forms.ContextMenu> is displayed when the user clicks the right mouse button on a control or area of the form that the <xref:System.Windows.Forms.ContextMenu> is bound to. You can use this method to manually display the shortcut menu at a specific location and bind it with a specific control. This method does not return until the menu is dismissed.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Typically, a <xref:System.Windows.Forms.ContextMenu> is displayed when the user clicks the right mouse button on a control or area of the form that the <xref:System.Windows.Forms.ContextMenu> is bound to. You can use this method to manually display the shortcut menu at a specific location and bind it with a specific control. This method does not return until the menu is dismissed.","pos":[0,383],"nodes":[{"content":"Typically, a &lt;xref:System.Windows.Forms.ContextMenu&gt; is displayed when the user clicks the right mouse button on a control or area of the form that the &lt;xref:System.Windows.Forms.ContextMenu&gt; is bound to.","pos":[0,204],"source":"Typically, a <xref:System.Windows.Forms.ContextMenu> is displayed when the user clicks the right mouse button on a control or area of the form that the <xref:System.Windows.Forms.ContextMenu> is bound to."},{"content":"You can use this method to manually display the shortcut menu at a specific location and bind it with a specific control.","pos":[205,326]},{"content":"This method does not return until the menu is dismissed.","pos":[327,383]}]}]},{"pos":[22032,22155],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the control with which this shortcut menu is associated.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.Control\"></xref> that specifies the control with which this shortcut menu is associated."},{"pos":[22222,22446],"content":"A <xref href=\"System.Drawing.Point\"></xref> that specifies the coordinates at which to display the menu. These coordinates are specified relative to the client coordinates of the control specified in the `control` parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the coordinates at which to display the menu.","pos":[0,104],"source":"A <xref href=\"System.Drawing.Point\"></xref> that specifies the coordinates at which to display the menu."},{"content":"These coordinates are specified relative to the client coordinates of the control specified in the <ph id=\"ph1\">`control`</ph> parameter.","pos":[105,224],"source":" These coordinates are specified relative to the client coordinates of the control specified in the `control` parameter."}]},{"pos":[22614,22713],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">control</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>control</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[22808,22879],"content":"The handle of the control does not exist or the control is not visible.","needQuote":true,"needEscape":true,"nodes":[{"content":"The handle of the control does not exist or the control is not visible.","pos":[0,71]}]},{"pos":[23501,23587],"content":"Displays the shortcut menu at the specified position and with the specified alignment.","needQuote":true,"needEscape":true,"nodes":[{"content":"Displays the shortcut menu at the specified position and with the specified alignment.","pos":[0,86]}]},{"pos":[23839,23962],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the control with which this shortcut menu is associated.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.Control\"></xref> that specifies the control with which this shortcut menu is associated."},{"pos":[24029,24253],"content":"A <xref href=\"System.Drawing.Point\"></xref> that specifies the coordinates at which to display the menu. These coordinates are specified relative to the client coordinates of the control specified in the `control` parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the coordinates at which to display the menu.","pos":[0,104],"source":"A <xref href=\"System.Drawing.Point\"></xref> that specifies the coordinates at which to display the menu."},{"content":"These coordinates are specified relative to the client coordinates of the control specified in the <ph id=\"ph1\">`control`</ph> parameter.","pos":[105,224],"source":" These coordinates are specified relative to the client coordinates of the control specified in the `control` parameter."}]},{"pos":[24345,24484],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.LeftRightAlignment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the alignment of the control relative to the <ph id=\"ph1\">`pos`</ph> parameter.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.LeftRightAlignment\"></xref> that specifies the alignment of the control relative to the `pos` parameter."},{"pos":[24937,24991],"content":"Gets the control that is displaying the shortcut menu.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the control that is displaying the shortcut menu.","pos":[0,54]}]},{"pos":[25003,25798],"content":"This property enables you to determine which control currently displays the shortcut menu defined in the <xref:System.Windows.Forms.ContextMenu>. If the shortcut menu is not currently displayed, you can use this property to determine which control last displayed the shortcut menu. You can use this property in the <xref:System.Windows.Forms.ContextMenu.Popup> event to ensure that the control displays the proper menu items. You can also use this property to pass a reference to the control to a method that performs the tasks associated with a menu command displayed in the shortcut menu. Since the <xref:System.Windows.Forms.Form> class inherits from <xref:System.Windows.Forms.Control>, you can also use this property if the <xref:System.Windows.Forms.ContextMenu> is associated with a form.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property enables you to determine which control currently displays the shortcut menu defined in the <xref:System.Windows.Forms.ContextMenu>. If the shortcut menu is not currently displayed, you can use this property to determine which control last displayed the shortcut menu. You can use this property in the <xref:System.Windows.Forms.ContextMenu.Popup> event to ensure that the control displays the proper menu items. You can also use this property to pass a reference to the control to a method that performs the tasks associated with a menu command displayed in the shortcut menu. Since the <xref:System.Windows.Forms.Form> class inherits from <xref:System.Windows.Forms.Control>, you can also use this property if the <xref:System.Windows.Forms.ContextMenu> is associated with a form.","pos":[0,795],"nodes":[{"content":"This property enables you to determine which control currently displays the shortcut menu defined in the &lt;xref:System.Windows.Forms.ContextMenu&gt;.","pos":[0,145],"source":"This property enables you to determine which control currently displays the shortcut menu defined in the <xref:System.Windows.Forms.ContextMenu>."},{"content":"If the shortcut menu is not currently displayed, you can use this property to determine which control last displayed the shortcut menu.","pos":[146,281]},{"content":"You can use this property in the &lt;xref:System.Windows.Forms.ContextMenu.Popup&gt; event to ensure that the control displays the proper menu items.","pos":[282,425],"source":" You can use this property in the <xref:System.Windows.Forms.ContextMenu.Popup> event to ensure that the control displays the proper menu items."},{"content":"You can also use this property to pass a reference to the control to a method that performs the tasks associated with a menu command displayed in the shortcut menu.","pos":[426,590]},{"content":"Since the &lt;xref:System.Windows.Forms.Form&gt; class inherits from &lt;xref:System.Windows.Forms.Control&gt;, you can also use this property if the &lt;xref:System.Windows.Forms.ContextMenu&gt; is associated with a form.","pos":[591,795],"source":" Since the <xref:System.Windows.Forms.Form> class inherits from <xref:System.Windows.Forms.Control>, you can also use this property if the <xref:System.Windows.Forms.ContextMenu> is associated with a form."}]}]},{"pos":[27312,27559],"content":"A <xref href=\"System.Windows.Forms.Control\"></xref> that represents the control that is displaying the shortcut menu. If no control has displayed the shortcut menu, the property returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the control that is displaying the shortcut menu.","pos":[0,117],"source":"A <xref href=\"System.Windows.Forms.Control\"></xref> that represents the control that is displaying the shortcut menu."},{"content":"If no control has displayed the shortcut menu, the property returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[118,247],"source":" If no control has displayed the shortcut menu, the property returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.ContextMenu\n  id: ContextMenu\n  children:\n  - System.Windows.Forms.ContextMenu.#ctor\n  - System.Windows.Forms.ContextMenu.#ctor(System.Windows.Forms.MenuItem[])\n  - System.Windows.Forms.ContextMenu.Collapse\n  - System.Windows.Forms.ContextMenu.OnCollapse(System.EventArgs)\n  - System.Windows.Forms.ContextMenu.OnPopup(System.EventArgs)\n  - System.Windows.Forms.ContextMenu.Popup\n  - System.Windows.Forms.ContextMenu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys,System.Windows.Forms.Control)\n  - System.Windows.Forms.ContextMenu.RightToLeft\n  - System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point)\n  - System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.LeftRightAlignment)\n  - System.Windows.Forms.ContextMenu.SourceControl\n  langs:\n  - csharp\n  name: ContextMenu\n  nameWithType: ContextMenu\n  fullName: System.Windows.Forms.ContextMenu\n  type: Class\n  summary: Represents a shortcut menu. Although <xref href=\"System.Windows.Forms.ContextMenuStrip\"></xref> replaces and adds functionality to the ContextMenu control of previous versions, ContextMenu is retained for both backward compatibility and future use if you choose.\n  remarks: \"The ContextMenu class represents shortcut menus that can be displayed when the user clicks the right mouse button over a control or area of the form. Shortcut menus are typically used to combine different menu items from a <xref:System.Windows.Forms.MainMenu> of a form that are useful for the user given the context of the application. For example, you can use a shortcut menu assigned to a <xref:System.Windows.Forms.TextBox> control to provide menu items for changing the font of the text, finding text within the control, or Clipboard features for copying and pasting text. You can also display new <xref:System.Windows.Forms.MenuItem> objects in a shortcut menu that are not located within a <xref:System.Windows.Forms.MainMenu> to provide situation specific commands that are not appropriate for the <xref:System.Windows.Forms.MainMenu> to display.  \\n  \\n Typically, a shortcut menu is displayed when a user clicks the right mouse button over a control or the form itself. Visible controls and <xref:System.Windows.Forms.Form> have a <xref:System.Windows.Forms.Control.ContextMenu%2A> property that binds the ContextMenu class to the control that displays the shortcut menu. More than one control can use a ContextMenu. You can use the <xref:System.Windows.Forms.ContextMenu.SourceControl%2A> property to determine which control last displayed the shortcut menu in order to perform tasks specific to the control or to modify the shortcut menu displayed for the control.  \\n  \\n You might want to know when the shortcut menu is being displayed in order to set check marks, disable items, and perform other menu tasks before the menu is displayed to the user. You can handle the <xref:System.Windows.Forms.ContextMenu.Popup> event to determine when the shortcut menu is being displayed.  \\n  \\n> [!NOTE]\\n>  In order to reuse <xref:System.Windows.Forms.MenuItem> objects that are displayed in a <xref:System.Windows.Forms.MainMenu> for use in a ContextMenu, you must create a copy of the menu using the <xref:System.Windows.Forms.MenuItem.CloneMenu%2A> method of the <xref:System.Windows.Forms.MenuItem> class. You can also merge menu items and their submenu items into a single <xref:System.Windows.Forms.MenuItem> object using the <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> method of the <xref:System.Windows.Forms.MenuItem> class.\"\n  example:\n  - \"The following code example creates an event handler for the <xref:System.Windows.Forms.ContextMenu.Popup> event of the ContextMenu. The code in the event handler determines which of two controls a <xref:System.Windows.Forms.PictureBox> named `pictureBox1` and a <xref:System.Windows.Forms.TextBox> named `textBox1` is the control displaying the shortcut menu. Depending on which control caused the ContextMenu to display its shortcut menu, the control adds the appropriate <xref:System.Windows.Forms.MenuItem> objects to the ContextMenu. This example requires that you have an instance of the ContextMenu class, named `contextMenu1`, defined within the form. This example also requires that you have a <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.PictureBox> added to a form and that the <xref:System.Windows.Forms.Control.ContextMenu%2A> property of these controls is set to `contextMenu1`.  \\n  \\n [!code-cs[Classic ContextMenu Example#1](~/add/codesnippet/csharp/t-system.windows.forms.c_16_1.cs)]\\n [!code-cpp[Classic ContextMenu Example#1](~/add/codesnippet/cpp/t-system.windows.forms.c_16_1.cpp)]\\n [!code-vb[Classic ContextMenu Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.c_16_1.vb)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.DefaultEvent(\"Popup\")]\n\n      public class ContextMenu : System.Windows.Forms.Menu\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.ComponentModel.Component\n  - System.Windows.Forms.Menu\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.Component.CanRaiseEvents\n  - System.ComponentModel.Component.Container\n  - System.ComponentModel.Component.DesignMode\n  - System.ComponentModel.Component.Dispose\n  - System.ComponentModel.Component.Disposed\n  - System.ComponentModel.Component.Events\n  - System.ComponentModel.Component.GetService(System.Type)\n  - System.ComponentModel.Component.Site\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Windows.Forms.Menu.CloneMenu(System.Windows.Forms.Menu)\n  - System.Windows.Forms.Menu.CreateMenuHandle\n  - System.Windows.Forms.Menu.Dispose(System.Boolean)\n  - System.Windows.Forms.Menu.FindHandle\n  - System.Windows.Forms.Menu.FindMenuItem(System.Int32,System.IntPtr)\n  - System.Windows.Forms.Menu.FindMergePosition(System.Int32)\n  - System.Windows.Forms.Menu.FindShortcut\n  - System.Windows.Forms.Menu.GetContextMenu\n  - System.Windows.Forms.Menu.GetMainMenu\n  - System.Windows.Forms.Menu.Handle\n  - System.Windows.Forms.Menu.IsParent\n  - System.Windows.Forms.Menu.MdiListItem\n  - System.Windows.Forms.Menu.MenuItems\n  - System.Windows.Forms.Menu.MergeMenu(System.Windows.Forms.Menu)\n  - System.Windows.Forms.Menu.Name\n  - System.Windows.Forms.Menu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)\n  - System.Windows.Forms.Menu.Tag\n  - System.Windows.Forms.Menu.ToString\n  platform:\n  - net462\n- uid: System.Windows.Forms.ContextMenu.#ctor\n  id: '#ctor'\n  parent: System.Windows.Forms.ContextMenu\n  langs:\n  - csharp\n  name: ContextMenu()\n  nameWithType: ContextMenu.ContextMenu()\n  fullName: System.Windows.Forms.ContextMenu.ContextMenu()\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Forms.ContextMenu\"></xref> class with no menu items specified.\n  remarks: Once you have used this version of the constructor, you can add menu items to the <xref:System.Windows.Forms.ContextMenu> by using the <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A> method of the <xref:System.Windows.Forms.Menu.MenuItemCollection> class. You can access the <xref:System.Windows.Forms.Menu.MenuItemCollection> through the <xref:System.Windows.Forms.Menu.MenuItems%2A> property.\n  syntax:\n    content: public ContextMenu ();\n    parameters: []\n  overload: System.Windows.Forms.ContextMenu.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ContextMenu.#ctor(System.Windows.Forms.MenuItem[])\n  id: '#ctor(System.Windows.Forms.MenuItem[])'\n  parent: System.Windows.Forms.ContextMenu\n  langs:\n  - csharp\n  name: ContextMenu(MenuItem[])\n  nameWithType: ContextMenu.ContextMenu(MenuItem[])\n  fullName: System.Windows.Forms.ContextMenu.ContextMenu(MenuItem[])\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Forms.ContextMenu\"></xref> class with a specified set of <xref href=\"System.Windows.Forms.MenuItem\"></xref> objects.\n  remarks: You can use this version of the constructor to create a <xref:System.Windows.Forms.ContextMenu> that has its menu items specified at the time it is created. Once you have used this version of the constructor, you can add additional menu items to the <xref:System.Windows.Forms.ContextMenu> by using the <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A> method of the <xref:System.Windows.Forms.Menu.MenuItemCollection> class. You can access the <xref:System.Windows.Forms.Menu.MenuItemCollection> through the <xref:System.Windows.Forms.Menu.MenuItems%2A> property.\n  example:\n  - \"The following code example demonstrates constructing a shortcut menu and using the <xref:System.Windows.Forms.ContextMenu.Show%2A> method. To run the example, paste the following code in a form containing a button named Button1. Ensure all events are associated with their event-handling methods.  \\n  \\n [!code-cpp[System.Windows.Forms.ManualContextMenu#1](~/add/codesnippet/cpp/m-system.windows.forms.c_19_1.cpp)]\\n [!code-cs[System.Windows.Forms.ManualContextMenu#1](~/add/codesnippet/csharp/m-system.windows.forms.c_19_1.cs)]\\n [!code-vb[System.Windows.Forms.ManualContextMenu#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_19_1.vb)]\"\n  syntax:\n    content: public ContextMenu (System.Windows.Forms.MenuItem[] menuItems);\n    parameters:\n    - id: menuItems\n      type: System.Windows.Forms.MenuItem[]\n      description: An array of <xref href=\"System.Windows.Forms.MenuItem\"></xref> objects that represent the menu items to add to the shortcut menu.\n  overload: System.Windows.Forms.ContextMenu.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ContextMenu.Collapse\n  id: Collapse\n  parent: System.Windows.Forms.ContextMenu\n  langs:\n  - csharp\n  name: Collapse\n  nameWithType: ContextMenu.Collapse\n  fullName: System.Windows.Forms.ContextMenu.Collapse\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the shortcut menu collapses.\n  remarks: For more information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the Collapse event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ContextMenu> named `ContextMenu1`. Then ensure that the event handler is associated with the Collapse event.  \\n  \\n [!code-cs[System.Windows.Forms.EventExamples#170](~/add/codesnippet/csharp/e-system.windows.forms.c_84_1.cs)]\\n [!code-vb[System.Windows.Forms.EventExamples#170](~/add/codesnippet/visualbasic/e-system.windows.forms.c_84_1.vb)]\"\n  syntax:\n    content: public event EventHandler Collapse;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ContextMenu.OnCollapse(System.EventArgs)\n  id: OnCollapse(System.EventArgs)\n  parent: System.Windows.Forms.ContextMenu\n  langs:\n  - csharp\n  name: OnCollapse(EventArgs)\n  nameWithType: ContextMenu.OnCollapse(EventArgs)\n  fullName: System.Windows.Forms.ContextMenu.OnCollapse(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.ContextMenu.Collapse\"></xref> event.\n  syntax:\n    content: protected virtual void OnCollapse (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.Windows.Forms.ContextMenu.OnCollapse*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ContextMenu.OnPopup(System.EventArgs)\n  id: OnPopup(System.EventArgs)\n  parent: System.Windows.Forms.ContextMenu\n  langs:\n  - csharp\n  name: OnPopup(EventArgs)\n  nameWithType: ContextMenu.OnPopup(EventArgs)\n  fullName: System.Windows.Forms.ContextMenu.OnPopup(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.ContextMenu.Popup\"></xref> event\n  syntax:\n    content: protected virtual void OnPopup (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.Windows.Forms.ContextMenu.OnPopup*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ContextMenu.Popup\n  id: Popup\n  parent: System.Windows.Forms.ContextMenu\n  langs:\n  - csharp\n  name: Popup\n  nameWithType: ContextMenu.Popup\n  fullName: System.Windows.Forms.ContextMenu.Popup\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs before the shortcut menu is displayed.\n  remarks: \"You can use this event to initialize the <xref:System.Windows.Forms.MenuItem> objects before they are displayed. For example, if you use a <xref:System.Windows.Forms.ContextMenu> for three <xref:System.Windows.Forms.TextBox> controls and you want to disable certain menu items in the <xref:System.Windows.Forms.ContextMenu> depending on which <xref:System.Windows.Forms.TextBox> is displaying the shortcut menu, you can create an event handler for this event. You could use the <xref:System.Windows.Forms.ContextMenu.SourceControl%2A> property to determine which <xref:System.Windows.Forms.TextBox> is about to display the <xref:System.Windows.Forms.ContextMenu> and disable the appropriate <xref:System.Windows.Forms.MenuItem> objects.  \\n  \\n For more information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following code example creates an event handler for the Popup event of the <xref:System.Windows.Forms.ContextMenu>. The code in the event handler determines which of two controls a <xref:System.Windows.Forms.PictureBox> named `pictureBox1` and a <xref:System.Windows.Forms.TextBox> named `textBox1` is the control displaying the shortcut menu. Depending on which control caused the <xref:System.Windows.Forms.ContextMenu> to display its shortcut menu, the control adds the appropriate <xref:System.Windows.Forms.MenuItem> objects to the <xref:System.Windows.Forms.ContextMenu>. This example requires that you have an instance of the <xref:System.Windows.Forms.ContextMenu> class, named `contextMenu1`, defined within the form. This example also requires that you have a <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.PictureBox> added to a form and that the <xref:System.Windows.Forms.Control.ContextMenu%2A> property of these controls is set to `contextMenu1`.  \\n  \\n [!code-cs[Classic ContextMenu Example#1](~/add/codesnippet/csharp/e-system.windows.forms.c_28_1.cs)]\\n [!code-cpp[Classic ContextMenu Example#1](~/add/codesnippet/cpp/e-system.windows.forms.c_28_1.cpp)]\\n [!code-vb[Classic ContextMenu Example#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_28_1.vb)]\"\n  syntax:\n    content: public event EventHandler Popup;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ContextMenu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys,System.Windows.Forms.Control)\n  id: ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys,System.Windows.Forms.Control)\n  parent: System.Windows.Forms.ContextMenu\n  langs:\n  - csharp\n  name: ProcessCmdKey(Message,Keys,Control)\n  nameWithType: ContextMenu.ProcessCmdKey(Message,Keys,Control)\n  fullName: System.Windows.Forms.ContextMenu.ProcessCmdKey(Message,Keys,Control)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Processes a command key.\n  remarks: \"This method is called during message preprocessing to handle command keys. Command keys are keys that always take precedence over regular input keys. Examples of command keys include accelerators and menu shortcuts. The method must return `true` to indicate that it has processed the command key, or `false` to indicate that the key is not a command key. This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.  \\n  \\n The ProcessCmdKey method first determines whether the control has a <xref:System.Windows.Forms.ContextMenu>, and if so, enables the <xref:System.Windows.Forms.ContextMenu> to process the command key. If the command key is not a menu shortcut and the control has a parent, the key is passed to the parent's ProcessCmdKey method. The net effect is that command keys are \\\"bubbled\\\" up the control hierarchy. In addition to the key the user pressed, the key data also indicates which, if any, modifier keys were pressed at the same time as the key. Modifier keys include the SHIFT, CTRL, and ALT keys.\"\n  syntax:\n    content: protected virtual bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData, System.Windows.Forms.Control control);\n    parameters:\n    - id: msg\n      type: System.Windows.Forms.Message\n      description: A <xref href=\"System.Windows.Forms.Message\"></xref>, passed by reference, that represents the window message to process.\n    - id: keyData\n      type: System.Windows.Forms.Keys\n      description: One of the <xref href=\"System.Windows.Forms.Keys\"></xref> values that represents the key to process.\n    - id: control\n      type: System.Windows.Forms.Control\n      description: The control to which the command key applies.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the character was processed by the control; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.ContextMenu.ProcessCmdKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ContextMenu.RightToLeft\n  id: RightToLeft\n  parent: System.Windows.Forms.ContextMenu\n  langs:\n  - csharp\n  name: RightToLeft\n  nameWithType: ContextMenu.RightToLeft\n  fullName: System.Windows.Forms.ContextMenu.RightToLeft\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether text displayed by the control is displayed from right to left.\n  remarks: \"This property enables your menus to support languages that are written from right to left. When this property is set to `RightToLeft.Yes`, the menu item text is displayed from right to left instead of the default left to right method.  \\n  \\n> [!NOTE]\\n>  For more information about how enabling right-to-left alignment affects Windows Forms controls, see the <xref:System.Windows.Forms.Control.RightToLeft%2A> property.\"\n  syntax:\n    content: public virtual System.Windows.Forms.RightToLeft RightToLeft { get; set; }\n    return:\n      type: System.Windows.Forms.RightToLeft\n      description: One of the <xref href=\"System.Windows.Forms.RightToLeft\"></xref> values.\n  overload: System.Windows.Forms.ContextMenu.RightToLeft*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The value assigned to the property is not a valid member of the <xref href=\"System.Windows.Forms.RightToLeft\"></xref> enumeration.\n  platform:\n  - net462\n- uid: System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point)\n  id: Show(System.Windows.Forms.Control,System.Drawing.Point)\n  parent: System.Windows.Forms.ContextMenu\n  langs:\n  - csharp\n  name: Show(Control,Point)\n  nameWithType: ContextMenu.Show(Control,Point)\n  fullName: System.Windows.Forms.ContextMenu.Show(Control,Point)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Displays the shortcut menu at the specified position.\n  remarks: Typically, a <xref:System.Windows.Forms.ContextMenu> is displayed when the user clicks the right mouse button on a control or area of the form that the <xref:System.Windows.Forms.ContextMenu> is bound to. You can use this method to manually display the shortcut menu at a specific location and bind it with a specific control. This method does not return until the menu is dismissed.\n  example:\n  - \"The following code example demonstrates constructing a shortcut menu and using the Show method. To run the example, paste the following code in a form containing a button named Button1. Ensure all events are associated with their event-handling methods.  \\n  \\n [!code-cpp[System.Windows.Forms.ManualContextMenu#1](~/add/codesnippet/cpp/c62c0647-656a-4f19-b841-_1.cpp)]\\n [!code-cs[System.Windows.Forms.ManualContextMenu#1](~/add/codesnippet/csharp/c62c0647-656a-4f19-b841-_1.cs)]\\n [!code-vb[System.Windows.Forms.ManualContextMenu#1](~/add/codesnippet/visualbasic/c62c0647-656a-4f19-b841-_1.vb)]\"\n  syntax:\n    content: public void Show (System.Windows.Forms.Control control, System.Drawing.Point pos);\n    parameters:\n    - id: control\n      type: System.Windows.Forms.Control\n      description: A <xref href=\"System.Windows.Forms.Control\"></xref> that specifies the control with which this shortcut menu is associated.\n    - id: pos\n      type: System.Drawing.Point\n      description: A <xref href=\"System.Drawing.Point\"></xref> that specifies the coordinates at which to display the menu. These coordinates are specified relative to the client coordinates of the control specified in the `control` parameter.\n  overload: System.Windows.Forms.ContextMenu.Show*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>control</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The handle of the control does not exist or the control is not visible.\n  platform:\n  - net462\n- uid: System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.LeftRightAlignment)\n  id: Show(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.LeftRightAlignment)\n  parent: System.Windows.Forms.ContextMenu\n  langs:\n  - csharp\n  name: Show(Control,Point,LeftRightAlignment)\n  nameWithType: ContextMenu.Show(Control,Point,LeftRightAlignment)\n  fullName: System.Windows.Forms.ContextMenu.Show(Control,Point,LeftRightAlignment)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Displays the shortcut menu at the specified position and with the specified alignment.\n  syntax:\n    content: public void Show (System.Windows.Forms.Control control, System.Drawing.Point pos, System.Windows.Forms.LeftRightAlignment alignment);\n    parameters:\n    - id: control\n      type: System.Windows.Forms.Control\n      description: A <xref href=\"System.Windows.Forms.Control\"></xref> that specifies the control with which this shortcut menu is associated.\n    - id: pos\n      type: System.Drawing.Point\n      description: A <xref href=\"System.Drawing.Point\"></xref> that specifies the coordinates at which to display the menu. These coordinates are specified relative to the client coordinates of the control specified in the `control` parameter.\n    - id: alignment\n      type: System.Windows.Forms.LeftRightAlignment\n      description: A <xref href=\"System.Windows.Forms.LeftRightAlignment\"></xref> that specifies the alignment of the control relative to the `pos` parameter.\n  overload: System.Windows.Forms.ContextMenu.Show*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ContextMenu.SourceControl\n  id: SourceControl\n  parent: System.Windows.Forms.ContextMenu\n  langs:\n  - csharp\n  name: SourceControl\n  nameWithType: ContextMenu.SourceControl\n  fullName: System.Windows.Forms.ContextMenu.SourceControl\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the control that is displaying the shortcut menu.\n  remarks: This property enables you to determine which control currently displays the shortcut menu defined in the <xref:System.Windows.Forms.ContextMenu>. If the shortcut menu is not currently displayed, you can use this property to determine which control last displayed the shortcut menu. You can use this property in the <xref:System.Windows.Forms.ContextMenu.Popup> event to ensure that the control displays the proper menu items. You can also use this property to pass a reference to the control to a method that performs the tasks associated with a menu command displayed in the shortcut menu. Since the <xref:System.Windows.Forms.Form> class inherits from <xref:System.Windows.Forms.Control>, you can also use this property if the <xref:System.Windows.Forms.ContextMenu> is associated with a form.\n  example:\n  - \"The following code example creates an event handler for the <xref:System.Windows.Forms.ContextMenu.Popup> event of the <xref:System.Windows.Forms.ContextMenu>. The code in the event handler determines which of two controls a <xref:System.Windows.Forms.PictureBox> named `pictureBox1` and a <xref:System.Windows.Forms.TextBox> named `textBox1` is the control displaying the shortcut menu. Depending on which control caused the <xref:System.Windows.Forms.ContextMenu> to display its shortcut menu, the control adds the appropriate <xref:System.Windows.Forms.MenuItem> objects to the <xref:System.Windows.Forms.ContextMenu>. This example requires that you have an instance of the <xref:System.Windows.Forms.ContextMenu> class, named `contextMenu1`, defined within the form. This example also requires that you have a <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.PictureBox> added to a form and that the <xref:System.Windows.Forms.Control.ContextMenu%2A> property of these controls is set to `contextMenu1`.  \\n  \\n [!code-cs[Classic ContextMenu Example#1](~/add/codesnippet/csharp/p-system.windows.forms.c_3_1.cs)]\\n [!code-cpp[Classic ContextMenu Example#1](~/add/codesnippet/cpp/p-system.windows.forms.c_3_1.cpp)]\\n [!code-vb[Classic ContextMenu Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_3_1.vb)]\"\n  syntax:\n    content: public System.Windows.Forms.Control SourceControl { get; }\n    return:\n      type: System.Windows.Forms.Control\n      description: A <xref href=\"System.Windows.Forms.Control\"></xref> that represents the control that is displaying the shortcut menu. If no control has displayed the shortcut menu, the property returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Windows.Forms.ContextMenu.SourceControl*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Forms.Menu\n  isExternal: false\n  name: System.Windows.Forms.Menu\n- uid: System.ComponentModel.InvalidEnumArgumentException\n  parent: System.ComponentModel\n  isExternal: false\n  name: InvalidEnumArgumentException\n  nameWithType: InvalidEnumArgumentException\n  fullName: System.ComponentModel.InvalidEnumArgumentException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Windows.Forms.ContextMenu.#ctor\n  parent: System.Windows.Forms.ContextMenu\n  isExternal: false\n  name: ContextMenu()\n  nameWithType: ContextMenu.ContextMenu()\n  fullName: System.Windows.Forms.ContextMenu.ContextMenu()\n- uid: System.Windows.Forms.ContextMenu.#ctor(System.Windows.Forms.MenuItem[])\n  parent: System.Windows.Forms.ContextMenu\n  isExternal: false\n  name: ContextMenu(MenuItem[])\n  nameWithType: ContextMenu.ContextMenu(MenuItem[])\n  fullName: System.Windows.Forms.ContextMenu.ContextMenu(MenuItem[])\n- uid: System.Windows.Forms.MenuItem[]\n  parent: System.Windows.Forms\n  isExternal: false\n  name: MenuItem\n  nameWithType: MenuItem\n  fullName: System.Windows.Forms.MenuItem[]\n  spec.csharp:\n  - uid: System.Windows.Forms.MenuItem\n    name: MenuItem\n    nameWithType: MenuItem\n    fullName: MenuItem[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Windows.Forms.ContextMenu.Collapse\n  parent: System.Windows.Forms.ContextMenu\n  isExternal: false\n  name: Collapse\n  nameWithType: ContextMenu.Collapse\n  fullName: System.Windows.Forms.ContextMenu.Collapse\n- uid: System.EventHandler\n  parent: System\n  isExternal: true\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Windows.Forms.ContextMenu.OnCollapse(System.EventArgs)\n  parent: System.Windows.Forms.ContextMenu\n  isExternal: false\n  name: OnCollapse(EventArgs)\n  nameWithType: ContextMenu.OnCollapse(EventArgs)\n  fullName: System.Windows.Forms.ContextMenu.OnCollapse(EventArgs)\n- uid: System.EventArgs\n  parent: System\n  isExternal: true\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Windows.Forms.ContextMenu.OnPopup(System.EventArgs)\n  parent: System.Windows.Forms.ContextMenu\n  isExternal: false\n  name: OnPopup(EventArgs)\n  nameWithType: ContextMenu.OnPopup(EventArgs)\n  fullName: System.Windows.Forms.ContextMenu.OnPopup(EventArgs)\n- uid: System.Windows.Forms.ContextMenu.Popup\n  parent: System.Windows.Forms.ContextMenu\n  isExternal: false\n  name: Popup\n  nameWithType: ContextMenu.Popup\n  fullName: System.Windows.Forms.ContextMenu.Popup\n- uid: System.Windows.Forms.ContextMenu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys,System.Windows.Forms.Control)\n  parent: System.Windows.Forms.ContextMenu\n  isExternal: false\n  name: ProcessCmdKey(Message,Keys,Control)\n  nameWithType: ContextMenu.ProcessCmdKey(Message,Keys,Control)\n  fullName: System.Windows.Forms.ContextMenu.ProcessCmdKey(Message,Keys,Control)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Forms.Message\n  parent: System.Windows.Forms\n  isExternal: false\n  name: Message\n  nameWithType: Message\n  fullName: System.Windows.Forms.Message\n- uid: System.Windows.Forms.Keys\n  parent: System.Windows.Forms\n  isExternal: false\n  name: Keys\n  nameWithType: Keys\n  fullName: System.Windows.Forms.Keys\n- uid: System.Windows.Forms.Control\n  parent: System.Windows.Forms\n  isExternal: false\n  name: Control\n  nameWithType: Control\n  fullName: System.Windows.Forms.Control\n- uid: System.Windows.Forms.ContextMenu.RightToLeft\n  parent: System.Windows.Forms.ContextMenu\n  isExternal: false\n  name: RightToLeft\n  nameWithType: ContextMenu.RightToLeft\n  fullName: System.Windows.Forms.ContextMenu.RightToLeft\n- uid: System.Windows.Forms.RightToLeft\n  parent: System.Windows.Forms\n  isExternal: false\n  name: RightToLeft\n  nameWithType: RightToLeft\n  fullName: System.Windows.Forms.RightToLeft\n- uid: System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point)\n  parent: System.Windows.Forms.ContextMenu\n  isExternal: false\n  name: Show(Control,Point)\n  nameWithType: ContextMenu.Show(Control,Point)\n  fullName: System.Windows.Forms.ContextMenu.Show(Control,Point)\n- uid: System.Drawing.Point\n  parent: System.Drawing\n  isExternal: false\n  name: Point\n  nameWithType: Point\n  fullName: System.Drawing.Point\n- uid: System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.LeftRightAlignment)\n  parent: System.Windows.Forms.ContextMenu\n  isExternal: false\n  name: Show(Control,Point,LeftRightAlignment)\n  nameWithType: ContextMenu.Show(Control,Point,LeftRightAlignment)\n  fullName: System.Windows.Forms.ContextMenu.Show(Control,Point,LeftRightAlignment)\n- uid: System.Windows.Forms.LeftRightAlignment\n  parent: System.Windows.Forms\n  isExternal: false\n  name: LeftRightAlignment\n  nameWithType: LeftRightAlignment\n  fullName: System.Windows.Forms.LeftRightAlignment\n- uid: System.Windows.Forms.ContextMenu.SourceControl\n  parent: System.Windows.Forms.ContextMenu\n  isExternal: false\n  name: SourceControl\n  nameWithType: ContextMenu.SourceControl\n  fullName: System.Windows.Forms.ContextMenu.SourceControl\n- uid: System.Windows.Forms.ContextMenu.#ctor*\n  parent: System.Windows.Forms.ContextMenu\n  isExternal: false\n  name: ContextMenu\n  nameWithType: ContextMenu.ContextMenu\n- uid: System.Windows.Forms.ContextMenu.OnCollapse*\n  parent: System.Windows.Forms.ContextMenu\n  isExternal: false\n  name: OnCollapse\n  nameWithType: ContextMenu.OnCollapse\n- uid: System.Windows.Forms.ContextMenu.OnPopup*\n  parent: System.Windows.Forms.ContextMenu\n  isExternal: false\n  name: OnPopup\n  nameWithType: ContextMenu.OnPopup\n- uid: System.Windows.Forms.ContextMenu.ProcessCmdKey*\n  parent: System.Windows.Forms.ContextMenu\n  isExternal: false\n  name: ProcessCmdKey\n  nameWithType: ContextMenu.ProcessCmdKey\n- uid: System.Windows.Forms.ContextMenu.RightToLeft*\n  parent: System.Windows.Forms.ContextMenu\n  isExternal: false\n  name: RightToLeft\n  nameWithType: ContextMenu.RightToLeft\n- uid: System.Windows.Forms.ContextMenu.Show*\n  parent: System.Windows.Forms.ContextMenu\n  isExternal: false\n  name: Show\n  nameWithType: ContextMenu.Show\n- uid: System.Windows.Forms.ContextMenu.SourceControl*\n  parent: System.Windows.Forms.ContextMenu\n  isExternal: false\n  name: SourceControl\n  nameWithType: ContextMenu.SourceControl\n"}