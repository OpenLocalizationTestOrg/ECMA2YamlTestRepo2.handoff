{"nodes":[{"pos":[1353,1558],"content":"An abstract base class that encapsulates functionality that is common to file dialogs, including <bpt id=\"p1\">&lt;xref href=\"Microsoft.Win32.OpenFileDialog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and <bpt id=\"p2\">&lt;xref href=\"Microsoft.Win32.SaveFileDialog\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An abstract base class that encapsulates functionality that is common to file dialogs, including <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> and <xref href=\"Microsoft.Win32.SaveFileDialog\"></xref>."},{"pos":[2308,2396],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"Microsoft.Win32.FileDialog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"Microsoft.Win32.FileDialog\"></xref> class."},{"pos":[2883,3015],"content":"Gets or sets a value indicating whether a file dialog automatically adds an extension to a file name if the user omits an extension.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether a file dialog automatically adds an extension to a file name if the user omits an extension.","pos":[0,132]}]},{"pos":[3136,3373],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if extensions are added; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if extensions are added; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,160],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if extensions are added; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[161,237],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[3815,3942],"content":"Gets or sets a value indicating whether a file dialog displays a warning if the user specifies a file name that does not exist.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether a file dialog displays a warning if the user specifies a file name that does not exist.","pos":[0,127]}]},{"pos":[3954,4050],"content":"The &lt;xref:Microsoft.Win32.OpenFileDialog&gt; class sets this property to <ph id=\"ph1\">`true`</ph> in its constructor.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The <xref:Microsoft.Win32.OpenFileDialog> class sets this property to `true` in its constructor."},{"pos":[4182,4442],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if warnings are displayed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default in this base class is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if warnings are displayed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,162],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if warnings are displayed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default in this base class is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[163,260],"source":" The default in this base class is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[4887,5001],"content":"Gets or sets a value that specifies whether warnings are displayed if the user types invalid paths and file names.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that specifies whether warnings are displayed if the user types invalid paths and file names.","pos":[0,114]}]},{"pos":[5125,5364],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if warnings are displayed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if warnings are displayed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,162],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if warnings are displayed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[163,239],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[5794,5855],"content":"Gets or sets the list of custom places for file dialog boxes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the list of custom places for file dialog boxes.","pos":[0,61]}]},{"pos":[5867,6259],"content":"Starting in [!INCLUDE[TLA2#tla_winvista](~/add/includes/tla2sharptla-winvista-md.md)], open and save file dialog boxes have a **Favorite Links** panel on the left side of the dialog box that allows the user to quickly navigate to a different location. These links are called custom places. This property allows you to modify the list that appears when your application uses a file dialog box.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Starting in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winvista](~/add/includes/tla2sharptla-winvista-md.md)]</ph>, open and save file dialog boxes have a <bpt id=\"p1\">**</bpt>Favorite Links<ept id=\"p1\">**</ept> panel on the left side of the dialog box that allows the user to quickly navigate to a different location.","pos":[0,251],"source":"Starting in [!INCLUDE[TLA2#tla_winvista](~/add/includes/tla2sharptla-winvista-md.md)], open and save file dialog boxes have a **Favorite Links** panel on the left side of the dialog box that allows the user to quickly navigate to a different location."},{"content":"These links are called custom places.","pos":[252,289]},{"content":"This property allows you to modify the list that appears when your application uses a file dialog box.","pos":[290,392]}]},{"pos":[6504,6530],"content":"The list of custom places.","needQuote":true,"needEscape":true,"nodes":[{"content":"The list of custom places.","pos":[0,26]}]},{"pos":[6947,7066],"content":"Gets or sets a value that specifies the default extension string to use to filter the list of files that are displayed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that specifies the default extension string to use to filter the list of files that are displayed.","pos":[0,119]}]},{"pos":[7079,7561],"content":"The extension string must contain the leading period. For example, set the DefaultExt property to \".txt\" to select all text files.       By default, the <xref:Microsoft.Win32.FileDialog.AddExtension%2A> property attempts to determine the extension to filter the displayed file list from the <xref:Microsoft.Win32.FileDialog.Filter%2A> property. If the extension cannot be determined from the <xref:Microsoft.Win32.FileDialog.Filter%2A> property, DefaultExt will be used instead.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The extension string must contain the leading period. For example, set the DefaultExt property to \".txt\" to select all text files.       By default, the <xref:Microsoft.Win32.FileDialog.AddExtension%2A> property attempts to determine the extension to filter the displayed file list from the <xref:Microsoft.Win32.FileDialog.Filter%2A> property. If the extension cannot be determined from the <xref:Microsoft.Win32.FileDialog.Filter%2A> property, DefaultExt will be used instead.","pos":[0,478],"nodes":[{"content":"The extension string must contain the leading period.","pos":[0,53]},{"content":"For example, set the DefaultExt property to \".txt\" to select all text files.","pos":[54,130]},{"content":"By default, the &lt;xref:Microsoft.Win32.FileDialog.AddExtension%2A&gt; property attempts to determine the extension to filter the displayed file list from the &lt;xref:Microsoft.Win32.FileDialog.Filter%2A&gt; property.","pos":[137,344],"source":"       By default, the <xref:Microsoft.Win32.FileDialog.AddExtension%2A> property attempts to determine the extension to filter the displayed file list from the <xref:Microsoft.Win32.FileDialog.Filter%2A> property."},{"content":"If the extension cannot be determined from the &lt;xref:Microsoft.Win32.FileDialog.Filter%2A&gt; property, DefaultExt will be used instead.","pos":[345,478],"source":" If the extension cannot be determined from the <xref:Microsoft.Win32.FileDialog.Filter%2A> property, DefaultExt will be used instead."}]}]},{"pos":[8190,8256],"content":"The default extension string. The default is <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default extension string. The default is <xref:System.String>.","pos":[0,66],"nodes":[{"content":"The default extension string.","pos":[0,29]},{"content":"The default is &lt;xref:System.String&gt;.","pos":[30,66],"source":" The default is <xref:System.String>."}]}]},{"pos":[8701,8864],"content":"Gets or sets a value indicating whether a file dialog returns either the location of the file referenced by a shortcut or the location of the shortcut file (.lnk).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether a file dialog returns either the location of the file referenced by a shortcut or the location of the shortcut file (.lnk).","pos":[0,163]}]},{"pos":[8989,9259],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to return the location referenced; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to return the shortcut location. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to return the location referenced; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to return the shortcut location.","pos":[0,191],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to return the location referenced; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to return the shortcut location."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[192,270],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[9670,9755],"content":"Gets or sets a string containing the full path of the file selected in a file dialog.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a string containing the full path of the file selected in a file dialog.","pos":[0,85]}]},{"pos":[9767,10036],"content":"If more than one file name is selected (length of <xref:Microsoft.Win32.FileDialog.FileNames%2A> is greater than one) then FileName contains the first selected file name. If no file name is selected, this property contains <xref:System.String.Empty> rather than `null`.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If more than one file name is selected (length of &lt;xref:Microsoft.Win32.FileDialog.FileNames%2A&gt; is greater than one) then FileName contains the first selected file name.","pos":[0,170],"source":"If more than one file name is selected (length of <xref:Microsoft.Win32.FileDialog.FileNames%2A> is greater than one) then FileName contains the first selected file name."},{"content":"If no file name is selected, this property contains &lt;xref:System.String.Empty&gt; rather than <ph id=\"ph1\">`null`</ph>.","pos":[171,269],"source":" If no file name is selected, this property contains <xref:System.String.Empty> rather than `null`."}]},{"pos":[10154,10276],"content":"A <xref:System.String> that is the full path of the file selected in the file dialog. The default is <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <xref:System.String> that is the full path of the file selected in the file dialog. The default is <xref:System.String>.","pos":[0,122],"nodes":[{"content":"A &lt;xref:System.String&gt; that is the full path of the file selected in the file dialog.","pos":[0,85],"source":"A <xref:System.String> that is the full path of the file selected in the file dialog."},{"content":"The default is &lt;xref:System.String&gt;.","pos":[86,122],"source":" The default is <xref:System.String>."}]}]},{"pos":[10684,10749],"content":"Gets an array that contains one file name for each selected file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an array that contains one file name for each selected file.","pos":[0,65]}]},{"pos":[10867,11031],"content":"An array of <xref:System.String> that contains one file name for each selected file. The default is an array with a single item whose value is <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of <xref:System.String> that contains one file name for each selected file. The default is an array with a single item whose value is <xref:System.String>.","pos":[0,164],"nodes":[{"content":"An array of &lt;xref:System.String&gt; that contains one file name for each selected file.","pos":[0,84],"source":"An array of <xref:System.String> that contains one file name for each selected file."},{"content":"The default is an array with a single item whose value is &lt;xref:System.String&gt;.","pos":[85,164],"source":" The default is an array with a single item whose value is <xref:System.String>."}]}]},{"pos":[11422,11643],"content":"Occurs when the user selects a file name by either clicking the <bpt id=\"p1\">**</bpt>Open<ept id=\"p1\">**</ept> button of the <bpt id=\"p2\">&lt;xref href=\"Microsoft.Win32.OpenFileDialog\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> or the <bpt id=\"p3\">**</bpt>Save<ept id=\"p3\">**</ept> button of the <bpt id=\"p4\">&lt;xref href=\"Microsoft.Win32.SaveFileDialog\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Occurs when the user selects a file name by either clicking the **Open** button of the <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> or the **Save** button of the <xref href=\"Microsoft.Win32.SaveFileDialog\"></xref>."},{"pos":[11655,11982],"content":"FileOk is raised after the user selects a file name, but before the dialog closes, which allows you to process the selection. If required, the user's selection can be cancelled by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> argument to `true`.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"FileOk is raised after the user selects a file name, but before the dialog closes, which allows you to process the selection.","pos":[0,125]},{"content":"If required, the user's selection can be cancelled by setting the &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt; property of the &lt;xref:System.ComponentModel.CancelEventArgs&gt; argument to <ph id=\"ph1\">`true`</ph>.","pos":[126,327],"source":" If required, the user's selection can be cancelled by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> argument to `true`."}]},{"pos":[12152,12164],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12508,12712],"content":"Gets or sets the filter string that determines what types of files are displayed from either the <bpt id=\"p1\">&lt;xref href=\"Microsoft.Win32.OpenFileDialog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"Microsoft.Win32.SaveFileDialog\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the filter string that determines what types of files are displayed from either the <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> or <xref href=\"Microsoft.Win32.SaveFileDialog\"></xref>."},{"pos":[20074,20231],"content":"A <xref:System.String> that contains the filter. The default is <xref:System.String>, which means that no filter is applied and all file types are displayed.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <xref:System.String> that contains the filter. The default is <xref:System.String>, which means that no filter is applied and all file types are displayed.","pos":[0,157],"nodes":[{"content":"A &lt;xref:System.String&gt; that contains the filter.","pos":[0,48],"source":"A <xref:System.String> that contains the filter."},{"content":"The default is &lt;xref:System.String&gt;, which means that no filter is applied and all file types are displayed.","pos":[49,157],"source":" The default is <xref:System.String>, which means that no filter is applied and all file types are displayed."}]}]},{"pos":[20387,20416],"content":"The filter string is invalid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The filter string is invalid.","pos":[0,29]}]},{"pos":[20768,20841],"content":"Gets or sets the index of the filter currently selected in a file dialog.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the index of the filter currently selected in a file dialog.","pos":[0,73]}]},{"pos":[20853,21071],"content":"This index is 1-based, not 0-based, due to compatibility requirements with the underlying <ph id=\"ph1\">[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]</ph> <ph id=\"ph2\">[!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)]</ph>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"This index is 1-based, not 0-based, due to compatibility requirements with the underlying [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] [!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)]."},{"pos":[21188,21271],"content":"The <xref:System.Int32> that is the index of the selected filter. The default is 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <xref:System.Int32> that is the index of the selected filter. The default is 1.","pos":[0,83],"nodes":[{"content":"The &lt;xref:System.Int32&gt; that is the index of the selected filter.","pos":[0,65],"source":"The <xref:System.Int32> that is the index of the selected filter."},{"content":"The default is 1.","pos":[66,83]}]}]},{"pos":[21871,21981],"content":"Defines the common file dialog hook procedure that is overridden to add common functionality to a file dialog.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines the common file dialog hook procedure that is overridden to add common functionality to a file dialog.","pos":[0,110]}]},{"pos":[22170,22267],"content":"Window handle for the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph> dialog.","needQuote":true,"needEscape":true,"source":"Window handle for the [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] dialog."},{"pos":[22326,22432],"content":"Message to be processed by the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph> dialog.","needQuote":true,"needEscape":true,"source":"Message to be processed by the [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] dialog."},{"pos":[22495,22525],"content":"Parameters for dialog actions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameters for dialog actions.","pos":[0,30]}]},{"pos":[22588,22618],"content":"Parameters for dialog actions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameters for dialog actions.","pos":[0,30]}]},{"pos":[22676,22786],"content":"Returns <xref:System.IntPtr> to indicate success; otherwise, a non-zero value is returned to indicate failure.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns &lt;xref:System.IntPtr&gt; to indicate success; otherwise, a non-zero value is returned to indicate failure.","pos":[0,110],"source":"Returns <xref:System.IntPtr> to indicate success; otherwise, a non-zero value is returned to indicate failure."}]},{"pos":[23229,23299],"content":"Gets or sets the initial directory that is displayed by a file dialog.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the initial directory that is displayed by a file dialog.","pos":[0,70]}]},{"pos":[23311,23423],"content":"If there is no initial directory set, this property will contain <xref:System.String> rather than a null string.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If there is no initial directory set, this property will contain &lt;xref:System.String&gt; rather than a null string.","pos":[0,112],"source":"If there is no initial directory set, this property will contain <xref:System.String> rather than a null string."}]},{"pos":[23549,23645],"content":"A <xref:System.String> that contains the initial directory. The default is <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <xref:System.String> that contains the initial directory. The default is <xref:System.String>.","pos":[0,96],"nodes":[{"content":"A &lt;xref:System.String&gt; that contains the initial directory.","pos":[0,59],"source":"A <xref:System.String> that contains the initial directory."},{"content":"The default is &lt;xref:System.String&gt;.","pos":[60,96],"source":" The default is <xref:System.String>."}]}]},{"pos":[24183,24255],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"Microsoft.Win32.FileDialog.FileOk\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"Microsoft.Win32.FileDialog.FileOk\"></xref> event."},{"pos":[24268,24548],"content":"OnFileOk raises the <xref:Microsoft.Win32.FileDialog.FileOk> event.       A type that derives from <xref:Microsoft.Win32.FileDialog> may override OnFileOk. The overridden method must call OnFileOk on the base class if <xref:Microsoft.Win32.FileDialog.FileOk> needs to be raised.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"OnFileOk raises the <xref:Microsoft.Win32.FileDialog.FileOk> event.       A type that derives from <xref:Microsoft.Win32.FileDialog> may override OnFileOk. The overridden method must call OnFileOk on the base class if <xref:Microsoft.Win32.FileDialog.FileOk> needs to be raised.","pos":[0,278],"nodes":[{"content":"OnFileOk raises the &lt;xref:Microsoft.Win32.FileDialog.FileOk&gt; event.","pos":[0,67],"source":"OnFileOk raises the <xref:Microsoft.Win32.FileDialog.FileOk> event."},{"content":"A type that derives from &lt;xref:Microsoft.Win32.FileDialog&gt; may override OnFileOk.","pos":[74,155],"source":"       A type that derives from <xref:Microsoft.Win32.FileDialog> may override OnFileOk."},{"content":"The overridden method must call OnFileOk on the base class if &lt;xref:Microsoft.Win32.FileDialog.FileOk&gt; needs to be raised.","pos":[156,278],"source":" The overridden method must call OnFileOk on the base class if <xref:Microsoft.Win32.FileDialog.FileOk> needs to be raised."}]}]},{"pos":[24737,24813],"content":"A <xref:System.ComponentModel.CancelEventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.ComponentModel.CancelEventArgs&gt; that contains the event data.","pos":[0,76],"source":"A <xref:System.ComponentModel.CancelEventArgs> that contains the event data."}]},{"pos":[25211,25360],"content":"Gets the <ph id=\"ph1\">[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]</ph> common file dialog flags that are used by file dialogs for initialization.","needQuote":true,"needEscape":true,"source":"Gets the [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] common file dialog flags that are used by file dialogs for initialization."},{"pos":[25372,25759],"content":"This value is used to display a file dialog with the current set of property values. The actual options are exposed as properties on the specific dialogs, but not documented as public flag values at this level, so the uses of this property are mainly internal, for use when implementing the derived classes <xref:Microsoft.Win32.OpenFileDialog> and <xref:Microsoft.Win32.SaveFileDialog>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This value is used to display a file dialog with the current set of property values. The actual options are exposed as properties on the specific dialogs, but not documented as public flag values at this level, so the uses of this property are mainly internal, for use when implementing the derived classes <xref:Microsoft.Win32.OpenFileDialog> and <xref:Microsoft.Win32.SaveFileDialog>.","pos":[0,387],"nodes":[{"content":"This value is used to display a file dialog with the current set of property values.","pos":[0,84]},{"content":"The actual options are exposed as properties on the specific dialogs, but not documented as public flag values at this level, so the uses of this property are mainly internal, for use when implementing the derived classes &lt;xref:Microsoft.Win32.OpenFileDialog&gt; and &lt;xref:Microsoft.Win32.SaveFileDialog&gt;.","pos":[85,387],"source":" The actual options are exposed as properties on the specific dialogs, but not documented as public flag values at this level, so the uses of this property are mainly internal, for use when implementing the derived classes <xref:Microsoft.Win32.OpenFileDialog> and <xref:Microsoft.Win32.SaveFileDialog>."}]}]},{"pos":[25870,26050],"content":"A &lt;xref:System.Int32&gt; that contains the <ph id=\"ph1\">[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]</ph> common file dialog flags that are used by file dialogs for initialization.","needQuote":true,"needEscape":true,"source":"A <xref:System.Int32> that contains the [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] common file dialog flags that are used by file dialogs for initialization."},{"pos":[26441,26507],"content":"Sets all properties of a file dialog back to their initial values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets all properties of a file dialog back to their initial values.","pos":[0,66]}]},{"pos":[27020,27053],"content":"This property is not implemented.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property is not implemented.","pos":[0,33]}]},{"pos":[27178,27194],"content":"Not implemented.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not implemented.","pos":[0,16]}]},{"pos":[27662,27880],"content":"&lt;xref:Microsoft.Win32.CommonDialog.RunDialog*&gt; is called to display a file dialog in a derived class, such as <bpt id=\"p1\">&lt;xref href=\"Microsoft.Win32.OpenFileDialog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and <bpt id=\"p2\">&lt;xref href=\"Microsoft.Win32.SaveFileDialog\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref:Microsoft.Win32.CommonDialog.RunDialog*> is called to display a file dialog in a derived class, such as <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> and <xref href=\"Microsoft.Win32.SaveFileDialog\"></xref>."},{"pos":[27892,28005],"content":"The dialog that is eventually shown is assigned an owner window, which is specified by the <ph id=\"ph1\">`hwndOwner`</ph> parameter.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The dialog that is eventually shown is assigned an owner window, which is specified by the `hwndOwner` parameter."},{"pos":[28164,28206],"content":"Handle to the window that owns the dialog.","needQuote":true,"needEscape":true,"nodes":[{"content":"Handle to the window that owns the dialog.","pos":[0,42]}]},{"pos":[28265,28590],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the user clicks the <bpt id=\"p2\">**</bpt>OK<ept id=\"p2\">**</ept> button of the dialog that is displayed (for example, <bpt id=\"p3\">&lt;xref href=\"Microsoft.Win32.OpenFileDialog\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, <bpt id=\"p4\">&lt;xref href=\"Microsoft.Win32.SaveFileDialog\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>); otherwise, <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user clicks the **OK** button of the dialog that is displayed (for example, <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref>, <xref href=\"Microsoft.Win32.SaveFileDialog\"></xref>); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[29014,29083],"content":"Gets a string that only contains the file name for the selected file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a string that only contains the file name for the selected file.","pos":[0,69]}]},{"pos":[29096,29684],"content":"This value is the <xref:Microsoft.Win32.FileDialog.FileName%2A> with all path information removed. Removing the paths makes the value appropriate for use in partial trust applications, since it prevents applications from discovering information about the local file system.       If more than one file name is selected (length of <xref:Microsoft.Win32.FileDialog.SafeFileNames%2A> is greater than one) then this property contains only the first selected file name.       See [Safe File Upload from an XBAP Sample](http://msdn.microsoft.com/en-us/01206dd3-acc7-45ff-aeb9-502c20aaad2c).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This value is the &lt;xref:Microsoft.Win32.FileDialog.FileName%2A&gt; with all path information removed.","pos":[0,98],"source":"This value is the <xref:Microsoft.Win32.FileDialog.FileName%2A> with all path information removed."},{"content":"Removing the paths makes the value appropriate for use in partial trust applications, since it prevents applications from discovering information about the local file system.","pos":[99,273]},{"content":"If more than one file name is selected (length of &lt;xref:Microsoft.Win32.FileDialog.SafeFileNames%2A&gt; is greater than one) then this property contains only the first selected file name.","pos":[280,464],"source":"       If more than one file name is selected (length of <xref:Microsoft.Win32.FileDialog.SafeFileNames%2A> is greater than one) then this property contains only the first selected file name."},{"content":"See <bpt id=\"p1\">[</bpt>Safe File Upload from an XBAP Sample<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01206dd3-acc7-45ff-aeb9-502c20aaad2c)</ept>.","pos":[471,584],"source":"       See [Safe File Upload from an XBAP Sample](http://msdn.microsoft.com/en-us/01206dd3-acc7-45ff-aeb9-502c20aaad2c)."}]},{"pos":[29802,30001],"content":"A <xref:System.String> that only contains the file name for the selected file. The default is <xref:System.String>, which is also the value when either no file is selected or a directory is selected.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <xref:System.String> that only contains the file name for the selected file. The default is <xref:System.String>, which is also the value when either no file is selected or a directory is selected.","pos":[0,199],"nodes":[{"content":"A &lt;xref:System.String&gt; that only contains the file name for the selected file.","pos":[0,78],"source":"A <xref:System.String> that only contains the file name for the selected file."},{"content":"The default is &lt;xref:System.String&gt;, which is also the value when either no file is selected or a directory is selected.","pos":[79,199],"source":" The default is <xref:System.String>, which is also the value when either no file is selected or a directory is selected."}]}]},{"pos":[30433,30503],"content":"Gets an array that contains one safe file name for each selected file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an array that contains one safe file name for each selected file.","pos":[0,70]}]},{"pos":[30515,30569],"content":"See <xref:Microsoft.Win32.FileDialog.SafeFileName%2A>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"See &lt;xref:Microsoft.Win32.FileDialog.SafeFileName%2A&gt;.","pos":[0,54],"source":"See <xref:Microsoft.Win32.FileDialog.SafeFileName%2A>."}]},{"pos":[30691,30860],"content":"An array of <xref:System.String> that contains one safe file name for each selected file. The default is an array with a single item whose value is <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of <xref:System.String> that contains one safe file name for each selected file. The default is an array with a single item whose value is <xref:System.String>.","pos":[0,169],"nodes":[{"content":"An array of &lt;xref:System.String&gt; that contains one safe file name for each selected file.","pos":[0,89],"source":"An array of <xref:System.String> that contains one safe file name for each selected file."},{"content":"The default is an array with a single item whose value is &lt;xref:System.String&gt;.","pos":[90,169],"source":" The default is an array with a single item whose value is <xref:System.String>."}]}]},{"pos":[31253,31322],"content":"Gets or sets the text that appears in the title bar of a file dialog.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the text that appears in the title bar of a file dialog.","pos":[0,69]}]},{"pos":[31334,31440],"content":"If Title is null or <xref:System.String>, a default, localized value is used, such as \"Save As\" or \"Open\".","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If Title is null or &lt;xref:System.String&gt;, a default, localized value is used, such as \"Save As\" or \"Open\".","pos":[0,106],"source":"If Title is null or <xref:System.String>, a default, localized value is used, such as \"Save As\" or \"Open\"."}]},{"pos":[31555,31679],"content":"A <xref:System.String> that is the text that appears in the title bar of a file dialog. The default is <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <xref:System.String> that is the text that appears in the title bar of a file dialog. The default is <xref:System.String>.","pos":[0,124],"nodes":[{"content":"A &lt;xref:System.String&gt; that is the text that appears in the title bar of a file dialog.","pos":[0,87],"source":"A <xref:System.String> that is the text that appears in the title bar of a file dialog."},{"content":"The default is &lt;xref:System.String&gt;.","pos":[88,124],"source":" The default is <xref:System.String>."}]}]},{"pos":[32083,32130],"content":"Returns a string that represents a file dialog.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a string that represents a file dialog.","pos":[0,47]}]},{"pos":[32266,32527],"content":"A &lt;xref:System.String&gt; representation of <bpt id=\"p1\">&lt;xref href=\"Microsoft.Win32.FileDialog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the full pathname for any files selected from either <bpt id=\"p2\">&lt;xref href=\"Microsoft.Win32.OpenFileDialog\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, <bpt id=\"p3\">&lt;xref href=\"Microsoft.Win32.SaveFileDialog\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref:System.String> representation of <xref href=\"Microsoft.Win32.FileDialog\"></xref> that contains the full pathname for any files selected from either <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref>, <xref href=\"Microsoft.Win32.SaveFileDialog\"></xref>."},{"pos":[32955,33104],"content":"Gets or sets a value indicating whether the dialog accepts only valid <ph id=\"ph1\">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph> file names.","needQuote":true,"needEscape":true,"source":"Gets or sets a value indicating whether the dialog accepts only valid [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] file names."},{"pos":[33226,33505],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if warnings will be shown when an invalid file name is provided; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if warnings will be shown when an invalid file name is provided; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,200],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if warnings will be shown when an invalid file name is provided; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[201,279],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.Win32.FileDialog\n  id: FileDialog\n  children:\n  - Microsoft.Win32.FileDialog.#ctor\n  - Microsoft.Win32.FileDialog.AddExtension\n  - Microsoft.Win32.FileDialog.CheckFileExists\n  - Microsoft.Win32.FileDialog.CheckPathExists\n  - Microsoft.Win32.FileDialog.CustomPlaces\n  - Microsoft.Win32.FileDialog.DefaultExt\n  - Microsoft.Win32.FileDialog.DereferenceLinks\n  - Microsoft.Win32.FileDialog.FileName\n  - Microsoft.Win32.FileDialog.FileNames\n  - Microsoft.Win32.FileDialog.FileOk\n  - Microsoft.Win32.FileDialog.Filter\n  - Microsoft.Win32.FileDialog.FilterIndex\n  - Microsoft.Win32.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)\n  - Microsoft.Win32.FileDialog.InitialDirectory\n  - Microsoft.Win32.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)\n  - Microsoft.Win32.FileDialog.Options\n  - Microsoft.Win32.FileDialog.Reset\n  - Microsoft.Win32.FileDialog.RestoreDirectory\n  - Microsoft.Win32.FileDialog.RunDialog(System.IntPtr)\n  - Microsoft.Win32.FileDialog.SafeFileName\n  - Microsoft.Win32.FileDialog.SafeFileNames\n  - Microsoft.Win32.FileDialog.Title\n  - Microsoft.Win32.FileDialog.ToString\n  - Microsoft.Win32.FileDialog.ValidateNames\n  langs:\n  - csharp\n  name: FileDialog\n  nameWithType: FileDialog\n  fullName: Microsoft.Win32.FileDialog\n  type: Class\n  summary: An abstract base class that encapsulates functionality that is common to file dialogs, including <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> and <xref href=\"Microsoft.Win32.SaveFileDialog\"></xref>.\n  syntax:\n    content: 'public abstract class FileDialog : Microsoft.Win32.CommonDialog'\n  inheritance:\n  - System.Object\n  - Microsoft.Win32.CommonDialog\n  implements: []\n  inheritedMembers:\n  - Microsoft.Win32.CommonDialog.CheckPermissionsToShowDialog\n  - Microsoft.Win32.CommonDialog.ShowDialog\n  - Microsoft.Win32.CommonDialog.ShowDialog(System.Windows.Window)\n  - Microsoft.Win32.CommonDialog.Tag\n  platform:\n  - net462\n- uid: Microsoft.Win32.FileDialog.#ctor\n  id: '#ctor'\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: FileDialog()\n  nameWithType: FileDialog.FileDialog()\n  fullName: Microsoft.Win32.FileDialog.FileDialog()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Initializes a new instance of the <xref href=\"Microsoft.Win32.FileDialog\"></xref> class.\n  syntax:\n    content: protected FileDialog ();\n    parameters: []\n  overload: Microsoft.Win32.FileDialog.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Win32.FileDialog.AddExtension\n  id: AddExtension\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: AddExtension\n  nameWithType: FileDialog.AddExtension\n  fullName: Microsoft.Win32.FileDialog.AddExtension\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets or sets a value indicating whether a file dialog automatically adds an extension to a file name if the user omits an extension.\n  syntax:\n    content: public bool AddExtension { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if extensions are added; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: Microsoft.Win32.FileDialog.AddExtension*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Win32.FileDialog.CheckFileExists\n  id: CheckFileExists\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: CheckFileExists\n  nameWithType: FileDialog.CheckFileExists\n  fullName: Microsoft.Win32.FileDialog.CheckFileExists\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets or sets a value indicating whether a file dialog displays a warning if the user specifies a file name that does not exist.\n  remarks: The <xref:Microsoft.Win32.OpenFileDialog> class sets this property to `true` in its constructor.\n  syntax:\n    content: public virtual bool CheckFileExists { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if warnings are displayed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default in this base class is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.Win32.FileDialog.CheckFileExists*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Win32.FileDialog.CheckPathExists\n  id: CheckPathExists\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: CheckPathExists\n  nameWithType: FileDialog.CheckPathExists\n  fullName: Microsoft.Win32.FileDialog.CheckPathExists\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets or sets a value that specifies whether warnings are displayed if the user types invalid paths and file names.\n  syntax:\n    content: public bool CheckPathExists { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if warnings are displayed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: Microsoft.Win32.FileDialog.CheckPathExists*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Win32.FileDialog.CustomPlaces\n  id: CustomPlaces\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: CustomPlaces\n  nameWithType: FileDialog.CustomPlaces\n  fullName: Microsoft.Win32.FileDialog.CustomPlaces\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets or sets the list of custom places for file dialog boxes.\n  remarks: Starting in [!INCLUDE[TLA2#tla_winvista](~/add/includes/tla2sharptla-winvista-md.md)], open and save file dialog boxes have a **Favorite Links** panel on the left side of the dialog box that allows the user to quickly navigate to a different location. These links are called custom places. This property allows you to modify the list that appears when your application uses a file dialog box.\n  syntax:\n    content: public System.Collections.Generic.IList<Microsoft.Win32.FileDialogCustomPlace> CustomPlaces { get; set; }\n    return:\n      type: System.Collections.Generic.IList{Microsoft.Win32.FileDialogCustomPlace}\n      description: The list of custom places.\n  overload: Microsoft.Win32.FileDialog.CustomPlaces*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Win32.FileDialog.DefaultExt\n  id: DefaultExt\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: DefaultExt\n  nameWithType: FileDialog.DefaultExt\n  fullName: Microsoft.Win32.FileDialog.DefaultExt\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets or sets a value that specifies the default extension string to use to filter the list of files that are displayed.\n  remarks: \"The extension string must contain the leading period. For example, set the DefaultExt property to \\\".txt\\\" to select all text files.  \\n  \\n By default, the <xref:Microsoft.Win32.FileDialog.AddExtension%2A> property attempts to determine the extension to filter the displayed file list from the <xref:Microsoft.Win32.FileDialog.Filter%2A> property. If the extension cannot be determined from the <xref:Microsoft.Win32.FileDialog.Filter%2A> property, DefaultExt will be used instead.\"\n  example:\n  - \"The following example shows how to create an <xref:Microsoft.Win32.OpenFileDialog> that contains a default file name and extension type.  \\n  \\n [!code-cs[DialogBoxesOverviewSnippets#OpenFileDialogBoxCODEBEHIND](~/add/codesnippet/csharp/DialogBoxesOverviewSnippets.CSharp/Window1.xaml.cs#openfiledialogboxcodebehind)]\\n [!code-vb[DialogBoxesOverviewSnippets#OpenFileDialogBoxCODEBEHIND](~/add/codesnippet/visualbasic/dialogboxesoverviewsnippets/window1.xaml.vb#openfiledialogboxcodebehind)]\"\n  syntax:\n    content: public string DefaultExt { get; set; }\n    return:\n      type: System.String\n      description: The default extension string. The default is <xref:System.String>.\n  overload: Microsoft.Win32.FileDialog.DefaultExt*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Win32.FileDialog.DereferenceLinks\n  id: DereferenceLinks\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: DereferenceLinks\n  nameWithType: FileDialog.DereferenceLinks\n  fullName: Microsoft.Win32.FileDialog.DereferenceLinks\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets or sets a value indicating whether a file dialog returns either the location of the file referenced by a shortcut or the location of the shortcut file (.lnk).\n  syntax:\n    content: public bool DereferenceLinks { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to return the location referenced; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to return the shortcut location. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.Win32.FileDialog.DereferenceLinks*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Win32.FileDialog.FileName\n  id: FileName\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: FileName\n  nameWithType: FileDialog.FileName\n  fullName: Microsoft.Win32.FileDialog.FileName\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets or sets a string containing the full path of the file selected in a file dialog.\n  remarks: If more than one file name is selected (length of <xref:Microsoft.Win32.FileDialog.FileNames%2A> is greater than one) then FileName contains the first selected file name. If no file name is selected, this property contains <xref:System.String.Empty> rather than `null`.\n  syntax:\n    content: public string FileName { get; set; }\n    return:\n      type: System.String\n      description: A <xref:System.String> that is the full path of the file selected in the file dialog. The default is <xref:System.String>.\n  overload: Microsoft.Win32.FileDialog.FileName*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Win32.FileDialog.FileNames\n  id: FileNames\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: FileNames\n  nameWithType: FileDialog.FileNames\n  fullName: Microsoft.Win32.FileDialog.FileNames\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets an array that contains one file name for each selected file.\n  syntax:\n    content: public string[] FileNames { get; }\n    return:\n      type: System.String[]\n      description: An array of <xref:System.String> that contains one file name for each selected file. The default is an array with a single item whose value is <xref:System.String>.\n  overload: Microsoft.Win32.FileDialog.FileNames*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Win32.FileDialog.FileOk\n  id: FileOk\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: FileOk\n  nameWithType: FileDialog.FileOk\n  fullName: Microsoft.Win32.FileDialog.FileOk\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Occurs when the user selects a file name by either clicking the **Open** button of the <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> or the **Save** button of the <xref href=\"Microsoft.Win32.SaveFileDialog\"></xref>.\n  remarks: FileOk is raised after the user selects a file name, but before the dialog closes, which allows you to process the selection. If required, the user's selection can be cancelled by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> argument to `true`.\n  syntax:\n    content: public event System.ComponentModel.CancelEventHandler FileOk;\n    return:\n      type: System.ComponentModel.CancelEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Win32.FileDialog.Filter\n  id: Filter\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: Filter\n  nameWithType: FileDialog.Filter\n  fullName: Microsoft.Win32.FileDialog.Filter\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets or sets the filter string that determines what types of files are displayed from either the <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> or <xref href=\"Microsoft.Win32.SaveFileDialog\"></xref>.\n  remarks: \"If Filter is either `null` or <xref:System.String>, all files are displayed, and folders are always displayed.  \\n  \\n You can specify a subset of file types to be displayed by setting the Filter property. Each file type can represent a specific type of file, such as the following:  \\n  \\n-   Word Documents (*.doc)  \\n  \\n-   Excel Worksheets (*.xls)  \\n  \\n-   PowerPoint Presentations (*.ppt)  \\n  \\n Alternatively, a file type can represent a group of related file types, such as the following:  \\n  \\n-   Office Files (*.doc, \\\\*.xls, \\\\*.ppt)  \\n  \\n-   All Files (*.\\\\*)  \\n  \\n To specify a subset of the types of files that are displayed, you set the Filter property with a string value (the *filter string*) that specifies one or more types of files to filter by. The following shows the expected format of the filter string:  \\n  \\n `FileType1[[|FileType2]...[|FileTypeN]]`  \\n  \\n You use the following format to describe each file type:  \\n  \\n `Label|Extension1[[;Extension2]...[;ExtensionN]]`  \\n  \\n The *Label* part is a human-readable string value that describes the file type, such as the following:  \\n  \\n-   \\\"Word Documents\\\"  \\n  \\n-   \\\"Excel Worksheets\\\"  \\n  \\n-   \\\"PowerPoint Presentations\\\"  \\n  \\n-   \\\"Office Files\\\"  \\n  \\n-   \\\"All Files\\\"  \\n  \\n Each file type must be described by at least one *Extension*. If more than one *Extension* is used, each *Extension* must be separated by a semicolon (\\\";\\\"). For example:  \\n  \\n-   \\\"*.doc\\\"  \\n  \\n-   \\\"*.xls;\\\"  \\n  \\n-   \\\"*.ppt\\\"  \\n  \\n-   \\\"*.doc;\\\\*.xls;\\\\*.ppt\\\"  \\n  \\n-   \\\"*.\\\\*\\\"  \\n  \\n The following are complete examples of valid Filter string values:  \\n  \\n-   `Word Documents|*.doc`  \\n  \\n-   `Excel Worksheets|*.xls`  \\n  \\n-   `PowerPoint Presentations|*.ppt`  \\n  \\n-   `Office Files|*.doc;*.xls;*.ppt`  \\n  \\n-   `All Files|*.*`  \\n  \\n-   `Word Documents|*.doc|Excel Worksheets|*.xls|PowerPoint Presentations|*.ppt|Office Files|*.doc;*.xls;*.ppt|All Files|*.*`  \\n  \\n Each file type that is included in the filter is added as a separate item to the **Files of type:** drop-down list in the <xref:Microsoft.Win32.OpenFileDialog> or <xref:Microsoft.Win32.SaveFileDialog>, as shown in the following figure.  \\n  \\n ![Using the FileDialog.Filter in the Open Dialog Box](~/add/media/filedialogfilterfigure1.png \\\"Using the FileDialog.Filter in the Open Dialog Box\\\")  \\n  \\n The user can choose a file type from this list to filter by. By default, the first item in the list (for example, the first file type) is selected when the <xref:Microsoft.Win32.OpenFileDialog> or <xref:Microsoft.Win32.SaveFileDialog> is displayed. To specify that another file type to be selected, you set the <xref:Microsoft.Win32.FileDialog.FilterIndex%2A> property before showing the <xref:Microsoft.Win32.OpenFileDialog> or <xref:Microsoft.Win32.SaveFileDialog> (by calling <xref:Microsoft.Win32.CommonDialog.ShowDialog%2A>).\"\n  example:\n  - \"The following examples demonstrate several types of filter strings that can be set by using the Filter property.  \\n  \\n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \\n[!code-cs[FileDialogFilterSnippets#FilterString1](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring1)]\\n[!code-vb[FileDialogFilterSnippets#FilterString1](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring1)]  \\n  \\n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \\n[!code-cs[FileDialogFilterSnippets#FilterString2](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring2)]\\n[!code-vb[FileDialogFilterSnippets#FilterString2](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring2)]  \\n  \\n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \\n[!code-cs[FileDialogFilterSnippets#FilterString3](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring3)]\\n[!code-vb[FileDialogFilterSnippets#FilterString3](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring3)]  \\n  \\n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \\n[!code-cs[FileDialogFilterSnippets#FilterString4](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring4)]\\n[!code-vb[FileDialogFilterSnippets#FilterString4](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring4)]  \\n  \\n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \\n[!code-cs[FileDialogFilterSnippets#FilterString5](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring5)]\\n[!code-vb[FileDialogFilterSnippets#FilterString5](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring5)]  \\n  \\n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \\n[!code-cs[FileDialogFilterSnippets#FilterString6](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring6)]\\n[!code-vb[FileDialogFilterSnippets#FilterString6](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring6)]  \\n  \\n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \\n[!code-cs[FileDialogFilterSnippets#FilterString7](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring7)]\\n[!code-vb[FileDialogFilterSnippets#FilterString7](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring7)]  \\n  \\n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \\n[!code-cs[FileDialogFilterSnippets#FilterString8](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring8)]\\n[!code-vb[FileDialogFilterSnippets#FilterString8](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring8)]\"\n  syntax:\n    content: public string Filter { get; set; }\n    return:\n      type: System.String\n      description: A <xref:System.String> that contains the filter. The default is <xref:System.String>, which means that no filter is applied and all file types are displayed.\n  overload: Microsoft.Win32.FileDialog.Filter*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The filter string is invalid.\n  platform:\n  - net462\n- uid: Microsoft.Win32.FileDialog.FilterIndex\n  id: FilterIndex\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: FilterIndex\n  nameWithType: FileDialog.FilterIndex\n  fullName: Microsoft.Win32.FileDialog.FilterIndex\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets or sets the index of the filter currently selected in a file dialog.\n  remarks: This index is 1-based, not 0-based, due to compatibility requirements with the underlying [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] [!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)].\n  syntax:\n    content: public int FilterIndex { get; set; }\n    return:\n      type: System.Int32\n      description: The <xref:System.Int32> that is the index of the selected filter. The default is 1.\n  overload: Microsoft.Win32.FileDialog.FilterIndex*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Win32.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)\n  id: HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: HookProc(IntPtr,Int32,IntPtr,IntPtr)\n  nameWithType: FileDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)\n  fullName: Microsoft.Win32.FileDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Defines the common file dialog hook procedure that is overridden to add common functionality to a file dialog.\n  syntax:\n    content: protected override IntPtr HookProc (IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam);\n    parameters:\n    - id: hwnd\n      type: System.IntPtr\n      description: Window handle for the [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] dialog.\n    - id: msg\n      type: System.Int32\n      description: Message to be processed by the [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] dialog.\n    - id: wParam\n      type: System.IntPtr\n      description: Parameters for dialog actions.\n    - id: lParam\n      type: System.IntPtr\n      description: Parameters for dialog actions.\n    return:\n      type: System.IntPtr\n      description: Returns <xref:System.IntPtr> to indicate success; otherwise, a non-zero value is returned to indicate failure.\n  overload: Microsoft.Win32.FileDialog.HookProc*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Win32.FileDialog.InitialDirectory\n  id: InitialDirectory\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: InitialDirectory\n  nameWithType: FileDialog.InitialDirectory\n  fullName: Microsoft.Win32.FileDialog.InitialDirectory\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets or sets the initial directory that is displayed by a file dialog.\n  remarks: If there is no initial directory set, this property will contain <xref:System.String> rather than a null string.\n  syntax:\n    content: public string InitialDirectory { get; set; }\n    return:\n      type: System.String\n      description: A <xref:System.String> that contains the initial directory. The default is <xref:System.String>.\n  overload: Microsoft.Win32.FileDialog.InitialDirectory*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Win32.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)\n  id: OnFileOk(System.ComponentModel.CancelEventArgs)\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: OnFileOk(CancelEventArgs)\n  nameWithType: FileDialog.OnFileOk(CancelEventArgs)\n  fullName: Microsoft.Win32.FileDialog.OnFileOk(CancelEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Raises the <xref href=\"Microsoft.Win32.FileDialog.FileOk\"></xref> event.\n  remarks: \"OnFileOk raises the <xref:Microsoft.Win32.FileDialog.FileOk> event.  \\n  \\n A type that derives from <xref:Microsoft.Win32.FileDialog> may override OnFileOk. The overridden method must call OnFileOk on the base class if <xref:Microsoft.Win32.FileDialog.FileOk> needs to be raised.\"\n  syntax:\n    content: protected void OnFileOk (System.ComponentModel.CancelEventArgs e);\n    parameters:\n    - id: e\n      type: System.ComponentModel.CancelEventArgs\n      description: A <xref:System.ComponentModel.CancelEventArgs> that contains the event data.\n  overload: Microsoft.Win32.FileDialog.OnFileOk*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Win32.FileDialog.Options\n  id: Options\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: Options\n  nameWithType: FileDialog.Options\n  fullName: Microsoft.Win32.FileDialog.Options\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets the [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] common file dialog flags that are used by file dialogs for initialization.\n  remarks: This value is used to display a file dialog with the current set of property values. The actual options are exposed as properties on the specific dialogs, but not documented as public flag values at this level, so the uses of this property are mainly internal, for use when implementing the derived classes <xref:Microsoft.Win32.OpenFileDialog> and <xref:Microsoft.Win32.SaveFileDialog>.\n  syntax:\n    content: protected int Options { get; }\n    return:\n      type: System.Int32\n      description: A <xref:System.Int32> that contains the [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] common file dialog flags that are used by file dialogs for initialization.\n  overload: Microsoft.Win32.FileDialog.Options*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Win32.FileDialog.Reset\n  id: Reset\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: Reset()\n  nameWithType: FileDialog.Reset()\n  fullName: Microsoft.Win32.FileDialog.Reset()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Sets all properties of a file dialog back to their initial values.\n  syntax:\n    content: public override void Reset ();\n    parameters: []\n  overload: Microsoft.Win32.FileDialog.Reset*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Win32.FileDialog.RestoreDirectory\n  id: RestoreDirectory\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: RestoreDirectory\n  nameWithType: FileDialog.RestoreDirectory\n  fullName: Microsoft.Win32.FileDialog.RestoreDirectory\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: This property is not implemented.\n  syntax:\n    content: public bool RestoreDirectory { get; set; }\n    return:\n      type: System.Boolean\n      description: Not implemented.\n  overload: Microsoft.Win32.FileDialog.RestoreDirectory*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Win32.FileDialog.RunDialog(System.IntPtr)\n  id: RunDialog(System.IntPtr)\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: RunDialog(IntPtr)\n  nameWithType: FileDialog.RunDialog(IntPtr)\n  fullName: Microsoft.Win32.FileDialog.RunDialog(IntPtr)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: <xref:Microsoft.Win32.CommonDialog.RunDialog*> is called to display a file dialog in a derived class, such as <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> and <xref href=\"Microsoft.Win32.SaveFileDialog\"></xref>.\n  remarks: The dialog that is eventually shown is assigned an owner window, which is specified by the `hwndOwner` parameter.\n  syntax:\n    content: protected override bool RunDialog (IntPtr hwndOwner);\n    parameters:\n    - id: hwndOwner\n      type: System.IntPtr\n      description: Handle to the window that owns the dialog.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user clicks the **OK** button of the dialog that is displayed (for example, <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref>, <xref href=\"Microsoft.Win32.SaveFileDialog\"></xref>); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.Win32.FileDialog.RunDialog*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Win32.FileDialog.SafeFileName\n  id: SafeFileName\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: SafeFileName\n  nameWithType: FileDialog.SafeFileName\n  fullName: Microsoft.Win32.FileDialog.SafeFileName\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets a string that only contains the file name for the selected file.\n  remarks: \"This value is the <xref:Microsoft.Win32.FileDialog.FileName%2A> with all path information removed. Removing the paths makes the value appropriate for use in partial trust applications, since it prevents applications from discovering information about the local file system.  \\n  \\n If more than one file name is selected (length of <xref:Microsoft.Win32.FileDialog.SafeFileNames%2A> is greater than one) then this property contains only the first selected file name.  \\n  \\n See [Safe File Upload from an XBAP Sample](http://msdn.microsoft.com/en-us/01206dd3-acc7-45ff-aeb9-502c20aaad2c).\"\n  syntax:\n    content: public string SafeFileName { get; }\n    return:\n      type: System.String\n      description: A <xref:System.String> that only contains the file name for the selected file. The default is <xref:System.String>, which is also the value when either no file is selected or a directory is selected.\n  overload: Microsoft.Win32.FileDialog.SafeFileName*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Win32.FileDialog.SafeFileNames\n  id: SafeFileNames\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: SafeFileNames\n  nameWithType: FileDialog.SafeFileNames\n  fullName: Microsoft.Win32.FileDialog.SafeFileNames\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets an array that contains one safe file name for each selected file.\n  remarks: See <xref:Microsoft.Win32.FileDialog.SafeFileName%2A>.\n  syntax:\n    content: public string[] SafeFileNames { get; }\n    return:\n      type: System.String[]\n      description: An array of <xref:System.String> that contains one safe file name for each selected file. The default is an array with a single item whose value is <xref:System.String>.\n  overload: Microsoft.Win32.FileDialog.SafeFileNames*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Win32.FileDialog.Title\n  id: Title\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: Title\n  nameWithType: FileDialog.Title\n  fullName: Microsoft.Win32.FileDialog.Title\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets or sets the text that appears in the title bar of a file dialog.\n  remarks: If Title is null or <xref:System.String>, a default, localized value is used, such as \"Save As\" or \"Open\".\n  syntax:\n    content: public string Title { get; set; }\n    return:\n      type: System.String\n      description: A <xref:System.String> that is the text that appears in the title bar of a file dialog. The default is <xref:System.String>.\n  overload: Microsoft.Win32.FileDialog.Title*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Win32.FileDialog.ToString\n  id: ToString\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: FileDialog.ToString()\n  fullName: Microsoft.Win32.FileDialog.ToString()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Returns a string that represents a file dialog.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A <xref:System.String> representation of <xref href=\"Microsoft.Win32.FileDialog\"></xref> that contains the full pathname for any files selected from either <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref>, <xref href=\"Microsoft.Win32.SaveFileDialog\"></xref>.\n  overload: Microsoft.Win32.FileDialog.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Win32.FileDialog.ValidateNames\n  id: ValidateNames\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: ValidateNames\n  nameWithType: FileDialog.ValidateNames\n  fullName: Microsoft.Win32.FileDialog.ValidateNames\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets or sets a value indicating whether the dialog accepts only valid [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] file names.\n  syntax:\n    content: public bool ValidateNames { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if warnings will be shown when an invalid file name is provided; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.Win32.FileDialog.ValidateNames*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: Microsoft.Win32.CommonDialog\n  isExternal: false\n  name: Microsoft.Win32.CommonDialog\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: Microsoft.Win32.FileDialog.#ctor\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: FileDialog()\n  nameWithType: FileDialog.FileDialog()\n  fullName: Microsoft.Win32.FileDialog.FileDialog()\n- uid: Microsoft.Win32.FileDialog.AddExtension\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: AddExtension\n  nameWithType: FileDialog.AddExtension\n  fullName: Microsoft.Win32.FileDialog.AddExtension\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.Win32.FileDialog.CheckFileExists\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: CheckFileExists\n  nameWithType: FileDialog.CheckFileExists\n  fullName: Microsoft.Win32.FileDialog.CheckFileExists\n- uid: Microsoft.Win32.FileDialog.CheckPathExists\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: CheckPathExists\n  nameWithType: FileDialog.CheckPathExists\n  fullName: Microsoft.Win32.FileDialog.CheckPathExists\n- uid: Microsoft.Win32.FileDialog.CustomPlaces\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: CustomPlaces\n  nameWithType: FileDialog.CustomPlaces\n  fullName: Microsoft.Win32.FileDialog.CustomPlaces\n- uid: System.Collections.Generic.IList{Microsoft.Win32.FileDialogCustomPlace}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IList<FileDialogCustomPlace>\n  nameWithType: IList<FileDialogCustomPlace>\n  fullName: System.Collections.Generic.IList<Microsoft.Win32.FileDialogCustomPlace>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: IList<Microsoft.Win32.FileDialogCustomPlace>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: Microsoft.Win32.FileDialogCustomPlace\n    name: FileDialogCustomPlace\n    nameWithType: FileDialogCustomPlace\n    fullName: FileDialogCustomPlace\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.Win32.FileDialog.DefaultExt\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: DefaultExt\n  nameWithType: FileDialog.DefaultExt\n  fullName: Microsoft.Win32.FileDialog.DefaultExt\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.Win32.FileDialog.DereferenceLinks\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: DereferenceLinks\n  nameWithType: FileDialog.DereferenceLinks\n  fullName: Microsoft.Win32.FileDialog.DereferenceLinks\n- uid: Microsoft.Win32.FileDialog.FileName\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: FileName\n  nameWithType: FileDialog.FileName\n  fullName: Microsoft.Win32.FileDialog.FileName\n- uid: Microsoft.Win32.FileDialog.FileNames\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: FileNames\n  nameWithType: FileDialog.FileNames\n  fullName: Microsoft.Win32.FileDialog.FileNames\n- uid: System.String[]\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: Microsoft.Win32.FileDialog.FileOk\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: FileOk\n  nameWithType: FileDialog.FileOk\n  fullName: Microsoft.Win32.FileDialog.FileOk\n- uid: System.ComponentModel.CancelEventHandler\n  parent: System.ComponentModel\n  isExternal: false\n  name: CancelEventHandler\n  nameWithType: CancelEventHandler\n  fullName: System.ComponentModel.CancelEventHandler\n- uid: Microsoft.Win32.FileDialog.Filter\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: Filter\n  nameWithType: FileDialog.Filter\n  fullName: Microsoft.Win32.FileDialog.Filter\n- uid: Microsoft.Win32.FileDialog.FilterIndex\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: FilterIndex\n  nameWithType: FileDialog.FilterIndex\n  fullName: Microsoft.Win32.FileDialog.FilterIndex\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.Win32.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: HookProc(IntPtr,Int32,IntPtr,IntPtr)\n  nameWithType: FileDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)\n  fullName: Microsoft.Win32.FileDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)\n- uid: System.IntPtr\n  parent: System\n  isExternal: true\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: Microsoft.Win32.FileDialog.InitialDirectory\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: InitialDirectory\n  nameWithType: FileDialog.InitialDirectory\n  fullName: Microsoft.Win32.FileDialog.InitialDirectory\n- uid: Microsoft.Win32.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: OnFileOk(CancelEventArgs)\n  nameWithType: FileDialog.OnFileOk(CancelEventArgs)\n  fullName: Microsoft.Win32.FileDialog.OnFileOk(CancelEventArgs)\n- uid: System.ComponentModel.CancelEventArgs\n  parent: System.ComponentModel\n  isExternal: true\n  name: CancelEventArgs\n  nameWithType: CancelEventArgs\n  fullName: System.ComponentModel.CancelEventArgs\n- uid: Microsoft.Win32.FileDialog.Options\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: Options\n  nameWithType: FileDialog.Options\n  fullName: Microsoft.Win32.FileDialog.Options\n- uid: Microsoft.Win32.FileDialog.Reset\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: Reset()\n  nameWithType: FileDialog.Reset()\n  fullName: Microsoft.Win32.FileDialog.Reset()\n- uid: Microsoft.Win32.FileDialog.RestoreDirectory\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: RestoreDirectory\n  nameWithType: FileDialog.RestoreDirectory\n  fullName: Microsoft.Win32.FileDialog.RestoreDirectory\n- uid: Microsoft.Win32.FileDialog.RunDialog(System.IntPtr)\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: RunDialog(IntPtr)\n  nameWithType: FileDialog.RunDialog(IntPtr)\n  fullName: Microsoft.Win32.FileDialog.RunDialog(IntPtr)\n- uid: Microsoft.Win32.FileDialog.SafeFileName\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: SafeFileName\n  nameWithType: FileDialog.SafeFileName\n  fullName: Microsoft.Win32.FileDialog.SafeFileName\n- uid: Microsoft.Win32.FileDialog.SafeFileNames\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: SafeFileNames\n  nameWithType: FileDialog.SafeFileNames\n  fullName: Microsoft.Win32.FileDialog.SafeFileNames\n- uid: Microsoft.Win32.FileDialog.Title\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: Title\n  nameWithType: FileDialog.Title\n  fullName: Microsoft.Win32.FileDialog.Title\n- uid: Microsoft.Win32.FileDialog.ToString\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: ToString()\n  nameWithType: FileDialog.ToString()\n  fullName: Microsoft.Win32.FileDialog.ToString()\n- uid: Microsoft.Win32.FileDialog.ValidateNames\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: ValidateNames\n  nameWithType: FileDialog.ValidateNames\n  fullName: Microsoft.Win32.FileDialog.ValidateNames\n- uid: Microsoft.Win32.FileDialog.#ctor*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: FileDialog\n  nameWithType: FileDialog.FileDialog\n- uid: Microsoft.Win32.FileDialog.AddExtension*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: AddExtension\n  nameWithType: FileDialog.AddExtension\n- uid: Microsoft.Win32.FileDialog.CheckFileExists*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: CheckFileExists\n  nameWithType: FileDialog.CheckFileExists\n- uid: Microsoft.Win32.FileDialog.CheckPathExists*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: CheckPathExists\n  nameWithType: FileDialog.CheckPathExists\n- uid: Microsoft.Win32.FileDialog.CustomPlaces*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: CustomPlaces\n  nameWithType: FileDialog.CustomPlaces\n- uid: Microsoft.Win32.FileDialog.DefaultExt*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: DefaultExt\n  nameWithType: FileDialog.DefaultExt\n- uid: Microsoft.Win32.FileDialog.DereferenceLinks*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: DereferenceLinks\n  nameWithType: FileDialog.DereferenceLinks\n- uid: Microsoft.Win32.FileDialog.FileName*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: FileName\n  nameWithType: FileDialog.FileName\n- uid: Microsoft.Win32.FileDialog.FileNames*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: FileNames\n  nameWithType: FileDialog.FileNames\n- uid: Microsoft.Win32.FileDialog.Filter*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: Filter\n  nameWithType: FileDialog.Filter\n- uid: Microsoft.Win32.FileDialog.FilterIndex*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: FilterIndex\n  nameWithType: FileDialog.FilterIndex\n- uid: Microsoft.Win32.FileDialog.HookProc*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: HookProc\n  nameWithType: FileDialog.HookProc\n- uid: Microsoft.Win32.FileDialog.InitialDirectory*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: InitialDirectory\n  nameWithType: FileDialog.InitialDirectory\n- uid: Microsoft.Win32.FileDialog.OnFileOk*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: OnFileOk\n  nameWithType: FileDialog.OnFileOk\n- uid: Microsoft.Win32.FileDialog.Options*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: Options\n  nameWithType: FileDialog.Options\n- uid: Microsoft.Win32.FileDialog.Reset*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: Reset\n  nameWithType: FileDialog.Reset\n- uid: Microsoft.Win32.FileDialog.RestoreDirectory*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: RestoreDirectory\n  nameWithType: FileDialog.RestoreDirectory\n- uid: Microsoft.Win32.FileDialog.RunDialog*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: RunDialog\n  nameWithType: FileDialog.RunDialog\n- uid: Microsoft.Win32.FileDialog.SafeFileName*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: SafeFileName\n  nameWithType: FileDialog.SafeFileName\n- uid: Microsoft.Win32.FileDialog.SafeFileNames*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: SafeFileNames\n  nameWithType: FileDialog.SafeFileNames\n- uid: Microsoft.Win32.FileDialog.Title*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: Title\n  nameWithType: FileDialog.Title\n- uid: Microsoft.Win32.FileDialog.ToString*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: ToString\n  nameWithType: FileDialog.ToString\n- uid: Microsoft.Win32.FileDialog.ValidateNames*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: ValidateNames\n  nameWithType: FileDialog.ValidateNames\n"}