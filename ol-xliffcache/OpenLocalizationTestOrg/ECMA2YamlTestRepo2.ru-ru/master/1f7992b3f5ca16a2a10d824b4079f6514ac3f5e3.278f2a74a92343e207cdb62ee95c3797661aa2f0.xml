{"nodes":[{"pos":[2166,2242],"content":"Specifies the appearance of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>","needQuote":true,"needEscape":true,"source":"Specifies the appearance of a <xref href=\"System.Windows.Ink.Stroke\"></xref>"},{"pos":[2255,3172],"content":"Use the <xref:System.Windows.Ink.Stroke.DrawingAttributes%2A> property to specify settings such as color, width, transparency, and the shape of the stylus tip for a <xref:System.Windows.Ink.Stroke>.       Use the <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> property to specify the drawing attributes for the strokes added to an <xref:System.Windows.Controls.InkCanvas>. Only strokes that are added after the <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> undergo change show the updated attributes. The appearance of the strokes that are already on the <xref:System.Windows.Controls.InkCanvas> does not change.       For a list of initial property values for an instance of the DrawingAttributes class, see the DrawingAttributes constructor.      <a name=\"xamlTextUsage_DrawingAttributes\"></a>    ## XAML Text Usage    This class is not typically used in XAML.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the &lt;xref:System.Windows.Ink.Stroke.DrawingAttributes%2A&gt; property to specify settings such as color, width, transparency, and the shape of the stylus tip for a &lt;xref:System.Windows.Ink.Stroke&gt;.","pos":[0,198],"source":"Use the <xref:System.Windows.Ink.Stroke.DrawingAttributes%2A> property to specify settings such as color, width, transparency, and the shape of the stylus tip for a <xref:System.Windows.Ink.Stroke>."},{"content":"Use the &lt;xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A&gt; property to specify the drawing attributes for the strokes added to an &lt;xref:System.Windows.Controls.InkCanvas&gt;.","pos":[205,394],"source":"       Use the <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> property to specify the drawing attributes for the strokes added to an <xref:System.Windows.Controls.InkCanvas>."},{"content":"Only strokes that are added after the &lt;xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A&gt; undergo change show the updated attributes.","pos":[395,545],"source":" Only strokes that are added after the <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> undergo change show the updated attributes."},{"content":"The appearance of the strokes that are already on the &lt;xref:System.Windows.Controls.InkCanvas&gt; does not change.","pos":[546,657],"source":" The appearance of the strokes that are already on the <xref:System.Windows.Controls.InkCanvas> does not change."},{"content":"For a list of initial property values for an instance of the DrawingAttributes class, see the DrawingAttributes constructor.","pos":[664,788]},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlTextUsage_DrawingAttributes\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Text Usage    This class is not typically used in XAML.","pos":[794,907],"source":"<a name=\"xamlTextUsage_DrawingAttributes\"></a>    ## XAML Text Usage    This class is not typically used in XAML."}]},{"pos":[4552,4650],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.DrawingAttributes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> class."},{"pos":[4663,5565],"content":"The following table shows initial property values for an instance of the <xref:System.Windows.Ink.DrawingAttributes> class.      |Property|Initial Value|   |--------------|-------------------|   |<xref:System.Windows.Ink.DrawingAttributes.Color%2A>|Black|   |<xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A>|`false`|   |<xref:System.Windows.Ink.DrawingAttributes.Height%2A>|2 device independent pixels (DIP)|   |<xref:System.Windows.Ink.DrawingAttributes.IgnorePressure%2A>|`false`|   |<xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A>|`false`|   |<xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>|<xref:System.Windows.Ink.StylusTip?displayProperty=fullName>|   |<xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A>|<xref:System.Windows.Media.Matrix.Identity%2A?displayProperty=fullName>|   |<xref:System.Windows.Ink.DrawingAttributes.Width%2A>|2 DIP|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The following table shows initial property values for an instance of the &lt;xref:System.Windows.Ink.DrawingAttributes&gt; class.","pos":[0,123],"source":"The following table shows initial property values for an instance of the <xref:System.Windows.Ink.DrawingAttributes> class."},{"content":"|Property|Initial Value|   |--------------|-------------------|   |&lt;xref:System.Windows.Ink.DrawingAttributes.Color%2A&gt;|Black|   |&lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt;|<ph id=\"ph1\">`false`</ph>|   |&lt;xref:System.Windows.Ink.DrawingAttributes.Height%2A&gt;|2 device independent pixels (DIP)|   |&lt;xref:System.Windows.Ink.DrawingAttributes.IgnorePressure%2A&gt;|<ph id=\"ph2\">`false`</ph>|   |&lt;xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A&gt;|<ph id=\"ph3\">`false`</ph>|   |&lt;xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A&gt;|&lt;xref:System.Windows.Ink.StylusTip?displayProperty=fullName&gt;|   |&lt;xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A&gt;|&lt;xref:System.Windows.Media.Matrix.Identity%2A?displayProperty=fullName&gt;|   |&lt;xref:System.Windows.Ink.DrawingAttributes.Width%2A&gt;|2 DIP|","pos":[129,891],"source":"      |Property|Initial Value|   |--------------|-------------------|   |<xref:System.Windows.Ink.DrawingAttributes.Color%2A>|Black|   |<xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A>|`false`|   |<xref:System.Windows.Ink.DrawingAttributes.Height%2A>|2 device independent pixels (DIP)|   |<xref:System.Windows.Ink.DrawingAttributes.IgnorePressure%2A>|`false`|   |<xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A>|`false`|   |<xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>|<xref:System.Windows.Ink.StylusTip?displayProperty=fullName>|   |<xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A>|<xref:System.Windows.Media.Matrix.Identity%2A?displayProperty=fullName>|   |<xref:System.Windows.Ink.DrawingAttributes.Width%2A>|2 DIP|"}]},{"pos":[6208,6303],"content":"Adds a custom property to the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.DrawingAttributes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Adds a custom property to the <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object."},{"pos":[6315,6522],"content":"The AddPropertyData method enables you to add custom properties to a <xref:System.Windows.Ink.DrawingAttributes> object. This is useful when you render your own strokes and want to provide extra information.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The AddPropertyData method enables you to add custom properties to a <xref:System.Windows.Ink.DrawingAttributes> object. This is useful when you render your own strokes and want to provide extra information.","pos":[0,207],"nodes":[{"content":"The AddPropertyData method enables you to add custom properties to a &lt;xref:System.Windows.Ink.DrawingAttributes&gt; object.","pos":[0,120],"source":"The AddPropertyData method enables you to add custom properties to a <xref:System.Windows.Ink.DrawingAttributes> object."},{"content":"This is useful when you render your own strokes and want to provide extra information.","pos":[121,207]}]}]},{"pos":[7620,7681],"content":"The <xref:System.Guid> to associate with the custom property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Guid&gt; to associate with the custom property.","pos":[0,61],"source":"The <xref:System.Guid> to associate with the custom property."}]},{"pos":[7750,8211],"content":"The value of the custom property. `propertyData` must be of type <xref:System.Char>, <xref:System.Byte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>, <xref:System.Single>, <xref:System.Double>, <xref:System.DateTime>, <xref:System.Boolean>, <xref:System.String>, <xref:System.Decimal> or an array of these data types; however it cannot be an array of type <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the custom property.","pos":[0,33]},{"content":"<ph id=\"ph1\">`propertyData`</ph> must be of type &lt;xref:System.Char&gt;, &lt;xref:System.Byte&gt;, &lt;xref:System.Int16&gt;, &lt;xref:System.UInt16&gt;, &lt;xref:System.Int32&gt;, &lt;xref:System.UInt32&gt;, &lt;xref:System.Int64&gt;, &lt;xref:System.UInt64&gt;, &lt;xref:System.Single&gt;, &lt;xref:System.Double&gt;, &lt;xref:System.DateTime&gt;, &lt;xref:System.Boolean&gt;, &lt;xref:System.String&gt;, &lt;xref:System.Decimal&gt; or an array of these data types; however it cannot be an array of type &lt;xref:System.String&gt;.","pos":[34,461],"source":"`propertyData` must be of type <xref:System.Char>, <xref:System.Byte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>, <xref:System.Single>, <xref:System.Double>, <xref:System.DateTime>, <xref:System.Boolean>, <xref:System.String>, <xref:System.Decimal> or an array of these data types; however it cannot be an array of type <xref:System.String>."}]},{"pos":[8394,8484],"content":"<ph id=\"ph1\">&lt;code&gt;propertyData&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>propertyData</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[8580,8825],"content":"<code>propertyDataId</code> is an empty <xref:System.Guid>.       -or-       <code>propertyData</code> is not one of the allowed data types listed in the <xref uid=\"langword_csharp_Parameters\" name=\"Parameters\" href=\"\"></xref> section.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;propertyDataId&lt;/code&gt;</ph> is an empty <ph id=\"ph2\">&lt;xref:System.Guid&gt;</ph>.","pos":[0,59],"source":"<code>propertyDataId</code> is an empty <xref:System.Guid>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;propertyData&lt;/code&gt;</ph> is not one of the allowed data types listed in the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Parameters\" name=\"Parameters\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> section.","pos":[66,235],"source":"       -or-       <code>propertyData</code> is not one of the allowed data types listed in the <xref uid=\"langword_csharp_Parameters\" name=\"Parameters\" href=\"\"></xref> section."}]},{"pos":[9235,9338],"content":"Occurs when a property in the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.DrawingAttributes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object changes.","needQuote":true,"needEscape":true,"source":"Occurs when a property in the <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object changes."},{"pos":[10040,10052],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10430,10506],"content":"Copies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.DrawingAttributes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Copies the <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object."},{"pos":[10518,10699],"content":"The Clone method creates a new <xref:System.Windows.Ink.DrawingAttributes> object and populates it with the same values as the current object. Any custom properties are also copied.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Clone method creates a new <xref:System.Windows.Ink.DrawingAttributes> object and populates it with the same values as the current object. Any custom properties are also copied.","pos":[0,181],"nodes":[{"content":"The Clone method creates a new &lt;xref:System.Windows.Ink.DrawingAttributes&gt; object and populates it with the same values as the current object.","pos":[0,142],"source":"The Clone method creates a new <xref:System.Windows.Ink.DrawingAttributes> object and populates it with the same values as the current object."},{"content":"Any custom properties are also copied.","pos":[143,181]}]}]},{"pos":[11217,11296],"content":"A copy of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.DrawingAttributes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A copy of the <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object."},{"pos":[11726,11801],"content":"Gets or sets the color of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the color of a <xref href=\"System.Windows.Ink.Stroke\"></xref>."},{"pos":[11814,11922],"content":"<bpt id=\"p1\">&lt;a name=\"xamlTextUsage_Color\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Text Usage    This property is not typically used in XAML.","needQuote":false,"needEscape":true,"extradata":"MT","source":"<a name=\"xamlTextUsage_Color\"></a>    ## XAML Text Usage    This property is not typically used in XAML."},{"pos":[12670,12732],"content":"The color of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The color of a <xref href=\"System.Windows.Ink.Stroke\"></xref>."},{"pos":[13279,13432],"content":"Returns a value that indicates whether the specified property data identifier is in the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.DrawingAttributes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Returns a value that indicates whether the specified property data identifier is in the <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object."},{"pos":[14530,14636],"content":"The &lt;xref:System.Guid&gt; to locate in the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.DrawingAttributes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object .","needQuote":true,"needEscape":true,"source":"The <xref:System.Guid> to locate in the <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object ."},{"pos":[14695,14948],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified property data identifier is in the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.DrawingAttributes\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified property data identifier is in the <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[15450,15637],"content":"Determines whether the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.DrawingAttributes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is equal to the current <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.DrawingAttributes\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Determines whether the specified <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object is equal to the current <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object."},{"pos":[15650,16396],"content":"Two &lt;xref:System.Windows.Ink.DrawingAttributes&gt; objects are equal if the following properties are equal:      -   &lt;xref:System.Windows.Ink.DrawingAttributes.Color%2A&gt;      -   &lt;xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A&gt;      -   &lt;xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A&gt;      -   &lt;xref:System.Windows.Ink.DrawingAttributes.Width%2A&gt;      -   &lt;xref:System.Windows.Ink.DrawingAttributes.Height%2A&gt;      -   &lt;xref:System.Windows.Ink.DrawingAttributes.IgnorePressure%2A&gt;      -   &lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt;      -   &lt;xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A&gt;      &gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The Equals method does not check the custom properties for equality.","needQuote":false,"needEscape":true,"extradata":"MT","source":"Two <xref:System.Windows.Ink.DrawingAttributes> objects are equal if the following properties are equal:      -   <xref:System.Windows.Ink.DrawingAttributes.Color%2A>      -   <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>      -   <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A>      -   <xref:System.Windows.Ink.DrawingAttributes.Width%2A>      -   <xref:System.Windows.Ink.DrawingAttributes.Height%2A>      -   <xref:System.Windows.Ink.DrawingAttributes.IgnorePressure%2A>      -   <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A>      -   <xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A>      > [!NOTE] >  The Equals method does not check the custom properties for equality."},{"pos":[17451,17611],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.DrawingAttributes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to compare to the current <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.DrawingAttributes\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object to compare to the current <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object."},{"pos":[17670,17831],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the objects are equal; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the objects are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[18287,18417],"content":"Gets or sets a value that indicates whether Bezier smoothing is used to render the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that indicates whether Bezier smoothing is used to render the <xref href=\"System.Windows.Ink.Stroke\"></xref>."},{"pos":[18430,18543],"content":"<bpt id=\"p1\">&lt;a name=\"xamlTextUsage_FitToCurve\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Text Usage    This property is not typically used in XAML.","needQuote":false,"needEscape":true,"extradata":"MT","source":"<a name=\"xamlTextUsage_FitToCurve\"></a>    ## XAML Text Usage    This property is not typically used in XAML."},{"pos":[19267,19566],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use Bezier smoothing to render the <xref href=\"System.Windows.Ink.Stroke\"></xref>; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use Bezier smoothing to render the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,220],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use Bezier smoothing to render the <xref href=\"System.Windows.Ink.Stroke\"></xref>; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[221,299],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[20035,20083],"content":"Serves as a hash function for a particular type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Serves as a hash function for a particular type.","pos":[0,48]}]},{"pos":[20218,20267],"content":"A hash code for the current <xref:System.Object>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A hash code for the current &lt;xref:System.Object&gt;.","pos":[0,49],"source":"A hash code for the current <xref:System.Object>."}]},{"pos":[20795,20882],"content":"Gets the value of the custom property associated with the specified <xref:System.Guid>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the custom property associated with the specified &lt;xref:System.Guid&gt;.","pos":[0,87],"source":"Gets the value of the custom property associated with the specified <xref:System.Guid>."}]},{"pos":[20894,21116],"content":"Use the GetPropertyData method to access custom properties you added to a <xref:System.Windows.Ink.DrawingAttributes> object. GetPropertyData returns the default value for the built-in property if a value has not been set.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the GetPropertyData method to access custom properties you added to a <xref:System.Windows.Ink.DrawingAttributes> object. GetPropertyData returns the default value for the built-in property if a value has not been set.","pos":[0,222],"nodes":[{"content":"Use the GetPropertyData method to access custom properties you added to a &lt;xref:System.Windows.Ink.DrawingAttributes&gt; object.","pos":[0,125],"source":"Use the GetPropertyData method to access custom properties you added to a <xref:System.Windows.Ink.DrawingAttributes> object."},{"content":"GetPropertyData returns the default value for the built-in property if a value has not been set.","pos":[126,222]}]}]},{"pos":[22195,22261],"content":"The <xref:System.Guid> associated with the custom property to get.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Guid&gt; associated with the custom property to get.","pos":[0,66],"source":"The <xref:System.Guid> associated with the custom property to get."}]},{"pos":[22319,22401],"content":"The value of the custom property associated with the specified <xref:System.Guid>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the custom property associated with the specified &lt;xref:System.Guid&gt;.","pos":[0,82],"source":"The value of the custom property associated with the specified <xref:System.Guid>."}]},{"pos":[22576,22717],"content":"<ph id=\"ph1\">&lt;code&gt;propertyDataId&lt;/code&gt;</ph> is not associated with a custom property of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.DrawingAttributes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"<code>propertyDataId</code> is not associated with a custom property of the <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object."},{"pos":[23143,23263],"content":"Returns the GUIDs of any custom properties associated with the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the GUIDs of any custom properties associated with the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."},{"pos":[23275,23433],"content":"The GUIDs for the built-in properties of the <xref:System.Windows.Ink.DrawingAttributes> class are in the <xref:System.Windows.Ink.DrawingAttributeIds> class.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GUIDs for the built-in properties of the &lt;xref:System.Windows.Ink.DrawingAttributes&gt; class are in the &lt;xref:System.Windows.Ink.DrawingAttributeIds&gt; class.","pos":[0,158],"source":"The GUIDs for the built-in properties of the <xref:System.Windows.Ink.DrawingAttributes> class are in the <xref:System.Windows.Ink.DrawingAttributeIds> class."}]},{"pos":[24045,24127],"content":"An array of type <xref:System.Guid> that represents the property data identifiers.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of type &lt;xref:System.Guid&gt; that represents the property data identifiers.","pos":[0,82],"source":"An array of type <xref:System.Guid> that represents the property data identifiers."}]},{"pos":[24575,24677],"content":"Gets or sets the height of the stylus used to draw the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the height of the stylus used to draw the <xref href=\"System.Windows.Ink.Stroke\"></xref>."},{"pos":[24690,25270],"content":"The following factors affect the height and width of a <xref:System.Windows.Ink.Stroke> when it is rendered, but not the value of the Height property.      -   The amount of pressure applied to the stylus when the <xref:System.Windows.Ink.Stroke> is drawn.      -   The value of the <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A> property.       If you set the Height property to 0 device independent pixels (DIP), it is changed to 2 DIP.      <a name=\"xamlTextUsage_Height\"></a>    ## XAML Text Usage    This property is not typically used in XAML.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The following factors affect the height and width of a &lt;xref:System.Windows.Ink.Stroke&gt; when it is rendered, but not the value of the Height property.","pos":[0,150],"source":"The following factors affect the height and width of a <xref:System.Windows.Ink.Stroke> when it is rendered, but not the value of the Height property."},{"content":"-   The amount of pressure applied to the stylus when the &lt;xref:System.Windows.Ink.Stroke&gt; is drawn.","pos":[156,256],"source":"      -   The amount of pressure applied to the stylus when the <xref:System.Windows.Ink.Stroke> is drawn."},{"content":"-   The value of the &lt;xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A&gt; property.","pos":[262,358],"source":"      -   The value of the <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A> property."},{"content":"If you set the Height property to 0 device independent pixels (DIP), it is changed to 2 DIP.","pos":[365,457]},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlTextUsage_Height\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Text Usage    This property is not typically used in XAML.","pos":[463,568],"source":"<a name=\"xamlTextUsage_Height\"></a>    ## XAML Text Usage    This property is not typically used in XAML."}]},{"pos":[25987,26101],"content":"The value that indicates the height of the stylus used to draw the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The value that indicates the height of the stylus used to draw the <xref href=\"System.Windows.Ink.Stroke\"></xref>."},{"pos":[26287,26439],"content":"The Height property is less than &lt;xref:System.Double.Epsilon?displayProperty=fullName&gt; or &lt;xref:System.Double.NaN?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Height property is less than <ph id=\"ph1\">&amp;lt;</ph>xref:System.Double.Epsilon?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> or <ph id=\"ph3\">&amp;lt;</ph>xref:System.Double.NaN?displayProperty=fullName<ph id=\"ph4\">&amp;gt;</ph>.","pos":[0,152],"source":"The Height property is less than &lt;xref:System.Double.Epsilon?displayProperty=fullName&gt; or &lt;xref:System.Double.NaN?displayProperty=fullName&gt;."}]},{"pos":[26841,27009],"content":"Gets or sets a value that indicates whether the thickness of a rendered <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> changes according the amount of pressure applied.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that indicates whether the thickness of a rendered <xref href=\"System.Windows.Ink.Stroke\"></xref> changes according the amount of pressure applied."},{"pos":[27022,27139],"content":"<bpt id=\"p1\">&lt;a name=\"xamlTextUsage_IgnorePressure\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Text Usage    This property is not typically used in XAML.","needQuote":false,"needEscape":true,"extradata":"MT","source":"<a name=\"xamlTextUsage_IgnorePressure\"></a>    ## XAML Text Usage    This property is not typically used in XAML."},{"pos":[27871,28260],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate that the thickness of the stroke is uniform; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to indicate that the thickness of a rendered <xref href=\"System.Windows.Ink.Stroke\"></xref> increases when pressure is increased. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to indicate that the thickness of the stroke is uniform; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to indicate that the thickness of a rendered <bpt id=\"p3\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> increases when pressure is increased.","pos":[0,310],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate that the thickness of the stroke is uniform; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to indicate that the thickness of a rendered <xref href=\"System.Windows.Ink.Stroke\"></xref> increases when pressure is increased."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[311,389],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[28739,28859],"content":"Gets or sets a value that indicates whether the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> looks like a highlighter.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that indicates whether the <xref href=\"System.Windows.Ink.Stroke\"></xref> looks like a highlighter."},{"pos":[28872,29154],"content":"When the IsHighlighter property is set to `true`, the <xref:System.Windows.Ink.Stroke> is slightly transparent, which allows the strokes underneath to appear.      <a name=\"xamlTextUsage_IsHighlighter\"></a>    ## XAML Text Usage    This property is not typically used in XAML.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When the IsHighlighter property is set to <ph id=\"ph1\">`true`</ph>, the &lt;xref:System.Windows.Ink.Stroke&gt; is slightly transparent, which allows the strokes underneath to appear.","pos":[0,158],"source":"When the IsHighlighter property is set to `true`, the <xref:System.Windows.Ink.Stroke> is slightly transparent, which allows the strokes underneath to appear."},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlTextUsage_IsHighlighter\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Text Usage    This property is not typically used in XAML.","pos":[164,276],"source":"<a name=\"xamlTextUsage_IsHighlighter\"></a>    ## XAML Text Usage    This property is not typically used in XAML."}]},{"pos":[29884,30177],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to render the <xref href=\"System.Windows.Ink.Stroke\"></xref> as a highlighter; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to render the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> as a highlighter; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,214],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to render the <xref href=\"System.Windows.Ink.Stroke\"></xref> as a highlighter; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[215,293],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[30632,30737],"content":"Specifies the largest value allowed for the <xref:System.Windows.Ink.DrawingAttributes.Height*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the largest value allowed for the &lt;xref:System.Windows.Ink.DrawingAttributes.Height*&gt; property.","pos":[0,105],"source":"Specifies the largest value allowed for the <xref:System.Windows.Ink.DrawingAttributes.Height*> property."}]},{"pos":[30749,30985],"content":"Use the MaxHeight field to check whether a value is within the limits allowed for the <xref:System.Windows.Ink.DrawingAttributes.Height%2A> property. Do this when the value comes from an unknown source, such as unconstrained user input.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the MaxHeight field to check whether a value is within the limits allowed for the <xref:System.Windows.Ink.DrawingAttributes.Height%2A> property. Do this when the value comes from an unknown source, such as unconstrained user input.","pos":[0,236],"nodes":[{"content":"Use the MaxHeight field to check whether a value is within the limits allowed for the &lt;xref:System.Windows.Ink.DrawingAttributes.Height%2A&gt; property.","pos":[0,149],"source":"Use the MaxHeight field to check whether a value is within the limits allowed for the <xref:System.Windows.Ink.DrawingAttributes.Height%2A> property."},{"content":"Do this when the value comes from an unknown source, such as unconstrained user input.","pos":[150,236]}]}]},{"pos":[31616,31628],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32014,32118],"content":"Specifies the largest value allowed for the <xref:System.Windows.Ink.DrawingAttributes.Width*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the largest value allowed for the &lt;xref:System.Windows.Ink.DrawingAttributes.Width*&gt; property.","pos":[0,104],"source":"Specifies the largest value allowed for the <xref:System.Windows.Ink.DrawingAttributes.Width*> property."}]},{"pos":[32130,32364],"content":"Use the MaxWidth field to check whether a value is within the limits allowed for the <xref:System.Windows.Ink.DrawingAttributes.Width%2A> property. Do this when the value comes from an unknown source, such as unconstrained user input.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the MaxWidth field to check whether a value is within the limits allowed for the <xref:System.Windows.Ink.DrawingAttributes.Width%2A> property. Do this when the value comes from an unknown source, such as unconstrained user input.","pos":[0,234],"nodes":[{"content":"Use the MaxWidth field to check whether a value is within the limits allowed for the &lt;xref:System.Windows.Ink.DrawingAttributes.Width%2A&gt; property.","pos":[0,147],"source":"Use the MaxWidth field to check whether a value is within the limits allowed for the <xref:System.Windows.Ink.DrawingAttributes.Width%2A> property."},{"content":"Do this when the value comes from an unknown source, such as unconstrained user input.","pos":[148,234]}]}]},{"pos":[32993,33005],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33396,33502],"content":"Specifies the smallest value allowed for the <xref:System.Windows.Ink.DrawingAttributes.Height*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the smallest value allowed for the &lt;xref:System.Windows.Ink.DrawingAttributes.Height*&gt; property.","pos":[0,106],"source":"Specifies the smallest value allowed for the <xref:System.Windows.Ink.DrawingAttributes.Height*> property."}]},{"pos":[33514,33750],"content":"Use the MinHeight field to check whether a value is within the limits allowed for the <xref:System.Windows.Ink.DrawingAttributes.Height%2A> property. Do this when the value comes from an unknown source, such as unconstrained user input.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the MinHeight field to check whether a value is within the limits allowed for the <xref:System.Windows.Ink.DrawingAttributes.Height%2A> property. Do this when the value comes from an unknown source, such as unconstrained user input.","pos":[0,236],"nodes":[{"content":"Use the MinHeight field to check whether a value is within the limits allowed for the &lt;xref:System.Windows.Ink.DrawingAttributes.Height%2A&gt; property.","pos":[0,149],"source":"Use the MinHeight field to check whether a value is within the limits allowed for the <xref:System.Windows.Ink.DrawingAttributes.Height%2A> property."},{"content":"Do this when the value comes from an unknown source, such as unconstrained user input.","pos":[150,236]}]}]},{"pos":[34381,34393],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[34779,34884],"content":"Specifies the smallest value allowed for the <xref:System.Windows.Ink.DrawingAttributes.Width*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the smallest value allowed for the &lt;xref:System.Windows.Ink.DrawingAttributes.Width*&gt; property.","pos":[0,105],"source":"Specifies the smallest value allowed for the <xref:System.Windows.Ink.DrawingAttributes.Width*> property."}]},{"pos":[34896,35130],"content":"Use the MinWidth field to check whether a value is within the limits allowed for the <xref:System.Windows.Ink.DrawingAttributes.Width%2A> property. Do this when the value comes from an unknown source, such as unconstrained user input.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the MinWidth field to check whether a value is within the limits allowed for the <xref:System.Windows.Ink.DrawingAttributes.Width%2A> property. Do this when the value comes from an unknown source, such as unconstrained user input.","pos":[0,234],"nodes":[{"content":"Use the MinWidth field to check whether a value is within the limits allowed for the &lt;xref:System.Windows.Ink.DrawingAttributes.Width%2A&gt; property.","pos":[0,147],"source":"Use the MinWidth field to check whether a value is within the limits allowed for the <xref:System.Windows.Ink.DrawingAttributes.Width%2A> property."},{"content":"Do this when the value comes from an unknown source, such as unconstrained user input.","pos":[148,234]}]}]},{"pos":[35759,35771],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[36396,36488],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.DrawingAttributes.AttributeChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Ink.DrawingAttributes.AttributeChanged\"></xref> event."},{"pos":[36501,36754],"content":"Raising an event invokes the event handler through a delegate.       The OnAttributeChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Raising an event invokes the event handler through a delegate.       The OnAttributeChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,251],"nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"The OnAttributeChanged method also allows derived classes to handle the event without attaching a delegate.","pos":[69,176]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[177,251]}]}]},{"pos":[36981,37081],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.PropertyDataChangedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Ink.PropertyDataChangedEventArgs\"></xref> that contains the event data."},{"pos":[37267,37346],"content":"<ph id=\"ph1\">&lt;code&gt;e&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>e</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[37935,38026],"content":"Occurs when any <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.DrawingAttributes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> property changes.","needQuote":true,"needEscape":true,"source":"Occurs when any <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> property changes."},{"pos":[38249,38258],"content":"EventArgs","needQuote":true,"needEscape":true,"nodes":[{"content":"EventArgs","pos":[0,9]}]},{"pos":[38966,39061],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.DrawingAttributes.PropertyDataChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Ink.DrawingAttributes.PropertyDataChanged\"></xref> event."},{"pos":[39074,39311],"content":"Raising an event invokes the event handler through a delegate.       The OnPropertyDataChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Raising an event invokes the event handler through a delegate.       The OnPropertyDataChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event.","pos":[0,235],"nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"The OnPropertyDataChanged method also allows derived classes to handle the event without attaching a delegate.","pos":[69,179]},{"content":"This is the preferred technique for handling the event.","pos":[180,235]}]}]},{"pos":[39541,39641],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.PropertyDataChangedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Ink.PropertyDataChangedEventArgs\"></xref> that contains the event data."},{"pos":[39830,39909],"content":"<ph id=\"ph1\">&lt;code&gt;e&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>e</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[40557,40666],"content":"Determines whether the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.DrawingAttributes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects are equal.","needQuote":true,"needEscape":true,"source":"Determines whether the specified <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> objects are equal."},{"pos":[40679,41427],"content":"Two &lt;xref:System.Windows.Ink.DrawingAttributes&gt; objects are equal if the following properties are equal:      -   &lt;xref:System.Windows.Ink.DrawingAttributes.Color%2A&gt;      -   &lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt;      -   &lt;xref:System.Windows.Ink.DrawingAttributes.Height%2A&gt;      -   &lt;xref:System.Windows.Ink.DrawingAttributes.IgnorePressure%2A&gt;      -   &lt;xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A&gt;      -   &lt;xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A&gt;      -   &lt;xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A&gt;      -   &lt;xref:System.Windows.Ink.DrawingAttributes.Width%2A&gt;      &gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The Equality method does not check the custom properties for equality.","needQuote":false,"needEscape":true,"extradata":"MT","source":"Two <xref:System.Windows.Ink.DrawingAttributes> objects are equal if the following properties are equal:      -   <xref:System.Windows.Ink.DrawingAttributes.Color%2A>      -   <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A>      -   <xref:System.Windows.Ink.DrawingAttributes.Height%2A>      -   <xref:System.Windows.Ink.DrawingAttributes.IgnorePressure%2A>      -   <xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A>      -   <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>      -   <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A>      -   <xref:System.Windows.Ink.DrawingAttributes.Width%2A>      > [!NOTE] >  The Equality method does not check the custom properties for equality."},{"pos":[42591,42677],"content":"The first <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.DrawingAttributes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to compare.","needQuote":true,"needEscape":true,"source":"The first <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object to compare."},{"pos":[42763,42850],"content":"The second <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.DrawingAttributes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to compare.","needQuote":true,"needEscape":true,"source":"The second <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object to compare."},{"pos":[42909,43070],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the objects are equal; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the objects are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[43807,43920],"content":"Determines whether the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.DrawingAttributes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects are not equal.","needQuote":true,"needEscape":true,"source":"Determines whether the specified <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> objects are not equal."},{"pos":[43933,44691],"content":"Two &lt;xref:System.Windows.Ink.DrawingAttributes&gt; objects are not equal if the following properties are not equal:      -   &lt;xref:System.Windows.Ink.DrawingAttributes.Color%2A&gt;      -   &lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt;      -   &lt;xref:System.Windows.Ink.DrawingAttributes.Height%2A&gt;      -   &lt;xref:System.Windows.Ink.DrawingAttributes.IgnorePressure%2A&gt;      -   &lt;xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A&gt;      -   &lt;xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A&gt;      -   &lt;xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A&gt;      -   &lt;xref:System.Windows.Ink.DrawingAttributes.Width%2A&gt;      &gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The Inequality method does not check the custom properties for equality.","needQuote":false,"needEscape":true,"extradata":"MT","source":"Two <xref:System.Windows.Ink.DrawingAttributes> objects are not equal if the following properties are not equal:      -   <xref:System.Windows.Ink.DrawingAttributes.Color%2A>      -   <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A>      -   <xref:System.Windows.Ink.DrawingAttributes.Height%2A>      -   <xref:System.Windows.Ink.DrawingAttributes.IgnorePressure%2A>      -   <xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A>      -   <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>      -   <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A>      -   <xref:System.Windows.Ink.DrawingAttributes.Width%2A>      > [!NOTE] >  The Inequality method does not check the custom properties for equality."},{"pos":[45859,45945],"content":"The first <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.DrawingAttributes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to compare.","needQuote":true,"needEscape":true,"source":"The first <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object to compare."},{"pos":[46031,46118],"content":"The second <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.DrawingAttributes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to compare.","needQuote":true,"needEscape":true,"source":"The second <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object to compare."},{"pos":[46177,46342],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the objects are not equal; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the objects are not equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[46847,46959],"content":"Occurs when property data is added or removed from the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Occurs when property data is added or removed from the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."},{"pos":[47845,47857],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[48338,48415],"content":"Removes the custom property associated with the specified <xref:System.Guid>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the custom property associated with the specified &lt;xref:System.Guid&gt;.","pos":[0,77],"source":"Removes the custom property associated with the specified <xref:System.Guid>."}]},{"pos":[48949,49018],"content":"The <xref:System.Guid> associated with the custom property to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Guid&gt; associated with the custom property to remove.","pos":[0,69],"source":"The <xref:System.Guid> associated with the custom property to remove."}]},{"pos":[49196,49337],"content":"<ph id=\"ph1\">&lt;code&gt;propertyDataId&lt;/code&gt;</ph> is not associated with a custom property of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.DrawingAttributes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"<code>propertyDataId</code> is not associated with a custom property of the <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object."},{"pos":[49714,49815],"content":"Gets or sets the shape of the stylus used to draw the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the shape of the stylus used to draw the <xref href=\"System.Windows.Ink.Stroke\"></xref>."},{"pos":[49828,49940],"content":"<bpt id=\"p1\">&lt;a name=\"xamlTextUsage_StylusTip\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Text Usage    This property is not typically used in XAML.","needQuote":false,"needEscape":true,"extradata":"MT","source":"<a name=\"xamlTextUsage_StylusTip\"></a>    ## XAML Text Usage    This property is not typically used in XAML."},{"pos":[50700,50770],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StylusShape\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Ink.StylusShape\"></xref> values."},{"pos":[51269,51399],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Matrix\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the transformation to perform on the stylus' tip.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Windows.Media.Matrix\"></xref> that specifies the transformation to perform on the stylus' tip."},{"pos":[51412,51618],"content":"Use the StylusTipTransform property to rotate, skew, or scale the stylus tip.      <a name=\"xamlTextUsage_StylusTipTransform\"></a>    ## XAML Text Usage    This property is not typically used in XAML.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the StylusTipTransform property to rotate, skew, or scale the stylus tip.","pos":[0,77]},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlTextUsage_StylusTipTransform\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Text Usage    This property is not typically used in XAML.","pos":[83,200],"source":"<a name=\"xamlTextUsage_StylusTipTransform\"></a>    ## XAML Text Usage    This property is not typically used in XAML."}]},{"pos":[52394,52509],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Matrix\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the transformation to perform on the stylus' tip.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Media.Matrix\"></xref> that specifies the transformation to perform on the stylus' tip."},{"pos":[52688,52905],"content":"The matrix set to StylusTipTransform is not an invertible matrix.       -or-       The <xref:System.Windows.Media.Matrix.OffsetX*> or <xref:System.Windows.Media.Matrix.OffsetY*> property of the matrix is not zero.","needQuote":false,"needEscape":true,"nodes":[{"content":"The matrix set to StylusTipTransform is not an invertible matrix.","pos":[0,65]},{"content":"-or-       The &lt;xref:System.Windows.Media.Matrix.OffsetX<bpt id=\"p1\">*</bpt>&gt; or &lt;xref:System.Windows.Media.Matrix.OffsetY<ept id=\"p1\">*</ept>&gt; property of the matrix is not zero.","pos":[72,213],"source":"       -or-       The <xref:System.Windows.Media.Matrix.OffsetX*> or <xref:System.Windows.Media.Matrix.OffsetY*> property of the matrix is not zero."}]},{"pos":[53263,53364],"content":"Gets or sets the width of the stylus used to draw the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the width of the stylus used to draw the <xref href=\"System.Windows.Ink.Stroke\"></xref>."},{"pos":[53377,53954],"content":"The following factors affect the height and width of a <xref:System.Windows.Ink.Stroke> when it is rendered, but not the value of the Width property.      -   The amount of pressure applied to the stylus when the <xref:System.Windows.Ink.Stroke> is drawn.      -   The value of the <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A> property.       If you set the Width property to 0 device independent pixels (DIP), it is changed to 2 DIP.      <a name=\"xamlTextUsage_Width\"></a>    ## XAML Text Usage    This property is not typically used in XAML.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The following factors affect the height and width of a &lt;xref:System.Windows.Ink.Stroke&gt; when it is rendered, but not the value of the Width property.","pos":[0,149],"source":"The following factors affect the height and width of a <xref:System.Windows.Ink.Stroke> when it is rendered, but not the value of the Width property."},{"content":"-   The amount of pressure applied to the stylus when the &lt;xref:System.Windows.Ink.Stroke&gt; is drawn.","pos":[155,255],"source":"      -   The amount of pressure applied to the stylus when the <xref:System.Windows.Ink.Stroke> is drawn."},{"content":"-   The value of the &lt;xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A&gt; property.","pos":[261,357],"source":"      -   The value of the <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A> property."},{"content":"If you set the Width property to 0 device independent pixels (DIP), it is changed to 2 DIP.","pos":[364,455]},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlTextUsage_Width\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Text Usage    This property is not typically used in XAML.","pos":[461,565],"source":"<a name=\"xamlTextUsage_Width\"></a>    ## XAML Text Usage    This property is not typically used in XAML."}]},{"pos":[54669,54757],"content":"The width of the stylus used to draw the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The width of the stylus used to draw the <xref href=\"System.Windows.Ink.Stroke\"></xref>."},{"pos":[54942,55093],"content":"The Width property is less than &lt;xref:System.Double.Epsilon?displayProperty=fullName&gt; or &lt;xref:System.Double.NaN?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Width property is less than <ph id=\"ph1\">&amp;lt;</ph>xref:System.Double.Epsilon?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> or <ph id=\"ph3\">&amp;lt;</ph>xref:System.Double.NaN?displayProperty=fullName<ph id=\"ph4\">&amp;gt;</ph>.","pos":[0,151],"source":"The Width property is less than &lt;xref:System.Double.Epsilon?displayProperty=fullName&gt; or &lt;xref:System.Double.NaN?displayProperty=fullName&gt;."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Ink.DrawingAttributes\n  id: DrawingAttributes\n  children:\n  - System.Windows.Ink.DrawingAttributes.#ctor\n  - System.Windows.Ink.DrawingAttributes.AddPropertyData(System.Guid,System.Object)\n  - System.Windows.Ink.DrawingAttributes.AttributeChanged\n  - System.Windows.Ink.DrawingAttributes.Clone\n  - System.Windows.Ink.DrawingAttributes.Color\n  - System.Windows.Ink.DrawingAttributes.ContainsPropertyData(System.Guid)\n  - System.Windows.Ink.DrawingAttributes.Equals(System.Object)\n  - System.Windows.Ink.DrawingAttributes.FitToCurve\n  - System.Windows.Ink.DrawingAttributes.GetHashCode\n  - System.Windows.Ink.DrawingAttributes.GetPropertyData(System.Guid)\n  - System.Windows.Ink.DrawingAttributes.GetPropertyDataIds\n  - System.Windows.Ink.DrawingAttributes.Height\n  - System.Windows.Ink.DrawingAttributes.IgnorePressure\n  - System.Windows.Ink.DrawingAttributes.IsHighlighter\n  - System.Windows.Ink.DrawingAttributes.MaxHeight\n  - System.Windows.Ink.DrawingAttributes.MaxWidth\n  - System.Windows.Ink.DrawingAttributes.MinHeight\n  - System.Windows.Ink.DrawingAttributes.MinWidth\n  - System.Windows.Ink.DrawingAttributes.OnAttributeChanged(System.Windows.Ink.PropertyDataChangedEventArgs)\n  - System.Windows.Ink.DrawingAttributes.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)\n  - System.Windows.Ink.DrawingAttributes.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)\n  - System.Windows.Ink.DrawingAttributes.op_Equality(System.Windows.Ink.DrawingAttributes,System.Windows.Ink.DrawingAttributes)\n  - System.Windows.Ink.DrawingAttributes.op_Inequality(System.Windows.Ink.DrawingAttributes,System.Windows.Ink.DrawingAttributes)\n  - System.Windows.Ink.DrawingAttributes.PropertyDataChanged\n  - System.Windows.Ink.DrawingAttributes.RemovePropertyData(System.Guid)\n  - System.Windows.Ink.DrawingAttributes.StylusTip\n  - System.Windows.Ink.DrawingAttributes.StylusTipTransform\n  - System.Windows.Ink.DrawingAttributes.Width\n  langs:\n  - csharp\n  name: DrawingAttributes\n  nameWithType: DrawingAttributes\n  fullName: System.Windows.Ink.DrawingAttributes\n  type: Class\n  summary: Specifies the appearance of a <xref href=\"System.Windows.Ink.Stroke\"></xref>\n  remarks: \"Use the <xref:System.Windows.Ink.Stroke.DrawingAttributes%2A> property to specify settings such as color, width, transparency, and the shape of the stylus tip for a <xref:System.Windows.Ink.Stroke>.  \\n  \\n Use the <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> property to specify the drawing attributes for the strokes added to an <xref:System.Windows.Controls.InkCanvas>. Only strokes that are added after the <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> undergo change show the updated attributes. The appearance of the strokes that are already on the <xref:System.Windows.Controls.InkCanvas> does not change.  \\n  \\n For a list of initial property values for an instance of the DrawingAttributes class, see the DrawingAttributes constructor.  \\n  \\n<a name=\\\"xamlTextUsage_DrawingAttributes\\\"></a>   \\n## XAML Text Usage  \\n This class is not typically used in XAML.\"\n  example:\n  - \"The following example demonstrates how to use two DrawingAttributes objects to simulate using a pen and a highlighter on the same <xref:System.Windows.Controls.InkCanvas>. The example assumes the root element in the XAML file is a <xref:System.Windows.Controls.DockPanel> called `root`. It also assumes that there is a <xref:System.Windows.Controls.Button> called `switchHighlighter` and that the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event is connected to the event handler defined in this example.  \\n  \\n [!code-cs[DrawingAttributes#3](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#3)]\\n [!code-vb[DrawingAttributes#3](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#3)]\"\n  syntax:\n    content: 'public class DrawingAttributes : System.ComponentModel.INotifyPropertyChanged'\n  inheritance:\n  - System.Object\n  implements:\n  - System.ComponentModel.INotifyPropertyChanged\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.DrawingAttributes.#ctor\n  id: '#ctor'\n  parent: System.Windows.Ink.DrawingAttributes\n  langs:\n  - csharp\n  name: DrawingAttributes()\n  nameWithType: DrawingAttributes.DrawingAttributes()\n  fullName: System.Windows.Ink.DrawingAttributes.DrawingAttributes()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> class.\n  remarks: \"The following table shows initial property values for an instance of the <xref:System.Windows.Ink.DrawingAttributes> class.  \\n  \\n|Property|Initial Value|  \\n|--------------|-------------------|  \\n|<xref:System.Windows.Ink.DrawingAttributes.Color%2A>|Black|  \\n|<xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A>|`false`|  \\n|<xref:System.Windows.Ink.DrawingAttributes.Height%2A>|2 device independent pixels (DIP)|  \\n|<xref:System.Windows.Ink.DrawingAttributes.IgnorePressure%2A>|`false`|  \\n|<xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A>|`false`|  \\n|<xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>|<xref:System.Windows.Ink.StylusTip?displayProperty=fullName>|  \\n|<xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A>|<xref:System.Windows.Media.Matrix.Identity%2A?displayProperty=fullName>|  \\n|<xref:System.Windows.Ink.DrawingAttributes.Width%2A>|2 DIP|\"\n  syntax:\n    content: public DrawingAttributes ();\n    parameters: []\n  overload: System.Windows.Ink.DrawingAttributes.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.DrawingAttributes.AddPropertyData(System.Guid,System.Object)\n  id: AddPropertyData(System.Guid,System.Object)\n  parent: System.Windows.Ink.DrawingAttributes\n  langs:\n  - csharp\n  name: AddPropertyData(Guid,Object)\n  nameWithType: DrawingAttributes.AddPropertyData(Guid,Object)\n  fullName: System.Windows.Ink.DrawingAttributes.AddPropertyData(Guid,Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Adds a custom property to the <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object.\n  remarks: The AddPropertyData method enables you to add custom properties to a <xref:System.Windows.Ink.DrawingAttributes> object. This is useful when you render your own strokes and want to provide extra information.\n  example:\n  - \"The following example demonstrates how to add and retrieve a custom property from the <xref:System.Windows.Ink.DrawingAttributes> object. The example adds a property that indicates whether the <xref:System.Windows.Ink.DrawingAttributes> object is a pen or a highlighter. The code in the `ChangeColors_Click` event handler renders a new color for strokes on the <xref:System.Windows.Controls.InkCanvas> that use the <xref:System.Windows.Ink.DrawingAttributes> object, `inkDA`. This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> named `inkCanvas1`, and that there are two <xref:System.Windows.Ink.DrawingAttributes> objects named `inkDA`, and `highlighterDA.`  \\n  \\n [!code-cs[DrawingAttributes#5](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#5)]\\n [!code-vb[DrawingAttributes#5](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#5)]\"\n  syntax:\n    content: public void AddPropertyData (Guid propertyDataId, object propertyData);\n    parameters:\n    - id: propertyDataId\n      type: System.Guid\n      description: The <xref:System.Guid> to associate with the custom property.\n    - id: propertyData\n      type: System.Object\n      description: The value of the custom property. `propertyData` must be of type <xref:System.Char>, <xref:System.Byte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>, <xref:System.Single>, <xref:System.Double>, <xref:System.DateTime>, <xref:System.Boolean>, <xref:System.String>, <xref:System.Decimal> or an array of these data types; however it cannot be an array of type <xref:System.String>.\n  overload: System.Windows.Ink.DrawingAttributes.AddPropertyData*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>propertyData</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>propertyDataId</code> is an empty <xref:System.Guid>.  \\n  \\n -or-  \\n  \\n <code>propertyData</code> is not one of the allowed data types listed in the <xref uid=\\\"langword_csharp_Parameters\\\" name=\\\"Parameters\\\" href=\\\"\\\"></xref> section.\"\n  platform:\n  - net462\n- uid: System.Windows.Ink.DrawingAttributes.AttributeChanged\n  id: AttributeChanged\n  parent: System.Windows.Ink.DrawingAttributes\n  langs:\n  - csharp\n  name: AttributeChanged\n  nameWithType: DrawingAttributes.AttributeChanged\n  fullName: System.Windows.Ink.DrawingAttributes.AttributeChanged\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Occurs when a property in the <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object changes.\n  remarks: ''\n  example:\n  - \"The following example handles the AttributeChanged event. This example assumes that there is a <xref:System.Windows.Ink.DrawingAttributes> object called `inkDA` and that the AttributeChanged event is connected to the event handler defined in this example.  \\n  \\n [!code-cs[DrawingAttributes#6](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#6)]\\n [!code-vb[DrawingAttributes#6](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#6)]\"\n  syntax:\n    content: public event System.Windows.Ink.PropertyDataChangedEventHandler AttributeChanged;\n    return:\n      type: System.Windows.Ink.PropertyDataChangedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.DrawingAttributes.Clone\n  id: Clone\n  parent: System.Windows.Ink.DrawingAttributes\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: DrawingAttributes.Clone()\n  fullName: System.Windows.Ink.DrawingAttributes.Clone()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Copies the <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object.\n  remarks: The Clone method creates a new <xref:System.Windows.Ink.DrawingAttributes> object and populates it with the same values as the current object. Any custom properties are also copied.\n  example:\n  - \"The following example demonstrates how to copy a <xref:System.Windows.Ink.DrawingAttributes> object.  \\n  \\n [!code-cs[DrawingAttributes#8](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#8)]\\n [!code-vb[DrawingAttributes#8](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#8)]\"\n  syntax:\n    content: public virtual System.Windows.Ink.DrawingAttributes Clone ();\n    parameters: []\n    return:\n      type: System.Windows.Ink.DrawingAttributes\n      description: A copy of the <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object.\n  overload: System.Windows.Ink.DrawingAttributes.Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.DrawingAttributes.Color\n  id: Color\n  parent: System.Windows.Ink.DrawingAttributes\n  langs:\n  - csharp\n  name: Color\n  nameWithType: DrawingAttributes.Color\n  fullName: System.Windows.Ink.DrawingAttributes.Color\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Gets or sets the color of a <xref href=\"System.Windows.Ink.Stroke\"></xref>.\n  remarks: \"<a name=\\\"xamlTextUsage_Color\\\"></a>   \\n## XAML Text Usage  \\n This property is not typically used in XAML.\"\n  example:\n  - \"The following example demonstrates how to set the Color property. The example assumes that your application has an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`, and two <xref:System.Windows.Ink.DrawingAttributes> objects called `inkDA` and `highlighterDA`. For the complete example, see the <xref:System.Windows.Ink.DrawingAttributes> class overview.  \\n  \\n [!code-cs[DrawingAttributes#1](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#1)]\\n [!code-vb[DrawingAttributes#1](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#1)]\"\n  syntax:\n    content: public System.Windows.Media.Color Color { get; set; }\n    return:\n      type: System.Windows.Media.Color\n      description: The color of a <xref href=\"System.Windows.Ink.Stroke\"></xref>.\n  overload: System.Windows.Ink.DrawingAttributes.Color*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.DrawingAttributes.ContainsPropertyData(System.Guid)\n  id: ContainsPropertyData(System.Guid)\n  parent: System.Windows.Ink.DrawingAttributes\n  langs:\n  - csharp\n  name: ContainsPropertyData(Guid)\n  nameWithType: DrawingAttributes.ContainsPropertyData(Guid)\n  fullName: System.Windows.Ink.DrawingAttributes.ContainsPropertyData(Guid)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Returns a value that indicates whether the specified property data identifier is in the <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to add and retrieve a custom property from the <xref:System.Windows.Ink.DrawingAttributes> object. The example adds a property that indicates whether the <xref:System.Windows.Ink.DrawingAttributes> object is a pen or a highlighter. The `ChangeColors_Click` event handler changes all the strokes that were put on the <xref:System.Windows.Controls.InkCanvas> with a <xref:System.Windows.Ink.DrawingAttributes> called `inkDA` to a new color. This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> named `inkCanvas1`, and that there are two <xref:System.Windows.Ink.DrawingAttributes> objects named `inkDA`, and `highlighterDA.`  \\n  \\n [!code-cs[DrawingAttributes#5](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#5)]\\n [!code-vb[DrawingAttributes#5](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#5)]\"\n  syntax:\n    content: public bool ContainsPropertyData (Guid propertyDataId);\n    parameters:\n    - id: propertyDataId\n      type: System.Guid\n      description: The <xref:System.Guid> to locate in the <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object .\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified property data identifier is in the <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Ink.DrawingAttributes.ContainsPropertyData*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.DrawingAttributes.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Windows.Ink.DrawingAttributes\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: DrawingAttributes.Equals(Object)\n  fullName: System.Windows.Ink.DrawingAttributes.Equals(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Determines whether the specified <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object is equal to the current <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object.\n  remarks: \"Two <xref:System.Windows.Ink.DrawingAttributes> objects are equal if the following properties are equal:  \\n  \\n-   <xref:System.Windows.Ink.DrawingAttributes.Color%2A>  \\n  \\n-   <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>  \\n  \\n-   <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A>  \\n  \\n-   <xref:System.Windows.Ink.DrawingAttributes.Width%2A>  \\n  \\n-   <xref:System.Windows.Ink.DrawingAttributes.Height%2A>  \\n  \\n-   <xref:System.Windows.Ink.DrawingAttributes.IgnorePressure%2A>  \\n  \\n-   <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A>  \\n  \\n-   <xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A>  \\n  \\n> [!NOTE]\\n>  The Equals method does not check the custom properties for equality.\"\n  example:\n  - \"The following example compares two <xref:System.Windows.Ink.DrawingAttributes> objects for equality. Because the <xref:System.Windows.Ink.DrawingAttributes.Color%2A>, <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>, <xref:System.Windows.Ink.DrawingAttributes.Height%2A>, and <xref:System.Windows.Ink.DrawingAttributes.Width%2A> properties on `attributes1` and `attributes2` are set to the same values, the \\\"The DrawingAttributes are equal\\\" message appears.  \\n  \\n [!code-cs[DrawingAttributes#10](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#10)]\\n [!code-vb[DrawingAttributes#10](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#10)]  \\n[!code-cs[DrawingAttributes#12](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#12)]\\n[!code-vb[DrawingAttributes#12](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#12)]\"\n  syntax:\n    content: public override bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: The <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object to compare to the current <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the objects are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Ink.DrawingAttributes.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.DrawingAttributes.FitToCurve\n  id: FitToCurve\n  parent: System.Windows.Ink.DrawingAttributes\n  langs:\n  - csharp\n  name: FitToCurve\n  nameWithType: DrawingAttributes.FitToCurve\n  fullName: System.Windows.Ink.DrawingAttributes.FitToCurve\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Gets or sets a value that indicates whether Bezier smoothing is used to render the <xref href=\"System.Windows.Ink.Stroke\"></xref>.\n  remarks: \"<a name=\\\"xamlTextUsage_FitToCurve\\\"></a>   \\n## XAML Text Usage  \\n This property is not typically used in XAML.\"\n  example:\n  - \"The following example demonstrates how to set the FitToCurve property. The example assumes that your application has an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`, and two <xref:System.Windows.Ink.DrawingAttributes> objects called `inkDA` and `highlighterDA`. For the complete example, see the <xref:System.Windows.Ink.DrawingAttributes> class overview.  \\n  \\n [!code-cs[DrawingAttributes#1](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#1)]\\n [!code-vb[DrawingAttributes#1](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#1)]\"\n  syntax:\n    content: public bool FitToCurve { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use Bezier smoothing to render the <xref href=\"System.Windows.Ink.Stroke\"></xref>; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Ink.DrawingAttributes.FitToCurve*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.DrawingAttributes.GetHashCode\n  id: GetHashCode\n  parent: System.Windows.Ink.DrawingAttributes\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: DrawingAttributes.GetHashCode()\n  fullName: System.Windows.Ink.DrawingAttributes.GetHashCode()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Serves as a hash function for a particular type.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for the current <xref:System.Object>.\n  overload: System.Windows.Ink.DrawingAttributes.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.DrawingAttributes.GetPropertyData(System.Guid)\n  id: GetPropertyData(System.Guid)\n  parent: System.Windows.Ink.DrawingAttributes\n  langs:\n  - csharp\n  name: GetPropertyData(Guid)\n  nameWithType: DrawingAttributes.GetPropertyData(Guid)\n  fullName: System.Windows.Ink.DrawingAttributes.GetPropertyData(Guid)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Gets the value of the custom property associated with the specified <xref:System.Guid>.\n  remarks: Use the GetPropertyData method to access custom properties you added to a <xref:System.Windows.Ink.DrawingAttributes> object. GetPropertyData returns the default value for the built-in property if a value has not been set.\n  example:\n  - \"The following example demonstrates how to add and retrieve a custom property from the <xref:System.Windows.Ink.DrawingAttributes> object. The example adds a property that indicates whether the <xref:System.Windows.Ink.DrawingAttributes> object is a pen or a highlighter. The code in the `ChangeColors_Click` event handler renders a new color for strokes on the <xref:System.Windows.Controls.InkCanvas> that use the <xref:System.Windows.Ink.DrawingAttributes> object, `inkDA`. This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> named `inkCanvas1`, and that there are two <xref:System.Windows.Ink.DrawingAttributes> objects named `inkDA`, and `highlighterDA.`  \\n  \\n [!code-cs[DrawingAttributes#5](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#5)]\\n [!code-vb[DrawingAttributes#5](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#5)]\"\n  syntax:\n    content: public object GetPropertyData (Guid propertyDataId);\n    parameters:\n    - id: propertyDataId\n      type: System.Guid\n      description: The <xref:System.Guid> associated with the custom property to get.\n    return:\n      type: System.Object\n      description: The value of the custom property associated with the specified <xref:System.Guid>.\n  overload: System.Windows.Ink.DrawingAttributes.GetPropertyData*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>propertyDataId</code> is not associated with a custom property of the <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object.\n  platform:\n  - net462\n- uid: System.Windows.Ink.DrawingAttributes.GetPropertyDataIds\n  id: GetPropertyDataIds\n  parent: System.Windows.Ink.DrawingAttributes\n  langs:\n  - csharp\n  name: GetPropertyDataIds()\n  nameWithType: DrawingAttributes.GetPropertyDataIds()\n  fullName: System.Windows.Ink.DrawingAttributes.GetPropertyDataIds()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Returns the GUIDs of any custom properties associated with the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  remarks: The GUIDs for the built-in properties of the <xref:System.Windows.Ink.DrawingAttributes> class are in the <xref:System.Windows.Ink.DrawingAttributeIds> class.\n  example:\n  - \"The following example demonstrates how to get the property data identifiers from the <xref:System.Windows.Ink.DrawingAttributes> object. This example assumes that a <xref:System.Windows.Ink.DrawingAttributes> called `inkDA` has been declared.  \\n  \\n [!code-cs[DrawingAttributes#7](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#7)]\\n [!code-vb[DrawingAttributes#7](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#7)]\"\n  syntax:\n    content: public Guid[] GetPropertyDataIds ();\n    parameters: []\n    return:\n      type: System.Guid[]\n      description: An array of type <xref:System.Guid> that represents the property data identifiers.\n  overload: System.Windows.Ink.DrawingAttributes.GetPropertyDataIds*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.DrawingAttributes.Height\n  id: Height\n  parent: System.Windows.Ink.DrawingAttributes\n  langs:\n  - csharp\n  name: Height\n  nameWithType: DrawingAttributes.Height\n  fullName: System.Windows.Ink.DrawingAttributes.Height\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Gets or sets the height of the stylus used to draw the <xref href=\"System.Windows.Ink.Stroke\"></xref>.\n  remarks: \"The following factors affect the height and width of a <xref:System.Windows.Ink.Stroke> when it is rendered, but not the value of the Height property.  \\n  \\n-   The amount of pressure applied to the stylus when the <xref:System.Windows.Ink.Stroke> is drawn.  \\n  \\n-   The value of the <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A> property.  \\n  \\n If you set the Height property to 0 device independent pixels (DIP), it is changed to 2 DIP.  \\n  \\n<a name=\\\"xamlTextUsage_Height\\\"></a>   \\n## XAML Text Usage  \\n This property is not typically used in XAML.\"\n  example:\n  - \"The following example demonstrates how to set the Height property. The example assumes that your application has an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`, and two <xref:System.Windows.Ink.DrawingAttributes> objects called `inkDA` and `highlighterDA`. For the complete example, see the <xref:System.Windows.Ink.DrawingAttributes> class overview.  \\n  \\n [!code-cs[DrawingAttributes#1](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#1)]\\n [!code-vb[DrawingAttributes#1](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#1)]\"\n  syntax:\n    content: public double Height { get; set; }\n    return:\n      type: System.Double\n      description: The value that indicates the height of the stylus used to draw the <xref href=\"System.Windows.Ink.Stroke\"></xref>.\n  overload: System.Windows.Ink.DrawingAttributes.Height*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The Height property is less than &lt;xref:System.Double.Epsilon?displayProperty=fullName&gt; or &lt;xref:System.Double.NaN?displayProperty=fullName&gt;.\n  platform:\n  - net462\n- uid: System.Windows.Ink.DrawingAttributes.IgnorePressure\n  id: IgnorePressure\n  parent: System.Windows.Ink.DrawingAttributes\n  langs:\n  - csharp\n  name: IgnorePressure\n  nameWithType: DrawingAttributes.IgnorePressure\n  fullName: System.Windows.Ink.DrawingAttributes.IgnorePressure\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Gets or sets a value that indicates whether the thickness of a rendered <xref href=\"System.Windows.Ink.Stroke\"></xref> changes according the amount of pressure applied.\n  remarks: \"<a name=\\\"xamlTextUsage_IgnorePressure\\\"></a>   \\n## XAML Text Usage  \\n This property is not typically used in XAML.\"\n  example:\n  - \"The following example demonstrates how to set the IgnorePressure property. The example assumes that your application has an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`, and two <xref:System.Windows.Ink.DrawingAttributes> objects called `inkDA` and `highlighterDA`. For the complete example, see the <xref:System.Windows.Ink.DrawingAttributes> class overview.  \\n  \\n [!code-cs[DrawingAttributes#1](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#1)]\\n [!code-vb[DrawingAttributes#1](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#1)]\"\n  syntax:\n    content: public bool IgnorePressure { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate that the thickness of the stroke is uniform; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to indicate that the thickness of a rendered <xref href=\"System.Windows.Ink.Stroke\"></xref> increases when pressure is increased. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Ink.DrawingAttributes.IgnorePressure*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.DrawingAttributes.IsHighlighter\n  id: IsHighlighter\n  parent: System.Windows.Ink.DrawingAttributes\n  langs:\n  - csharp\n  name: IsHighlighter\n  nameWithType: DrawingAttributes.IsHighlighter\n  fullName: System.Windows.Ink.DrawingAttributes.IsHighlighter\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Gets or sets a value that indicates whether the <xref href=\"System.Windows.Ink.Stroke\"></xref> looks like a highlighter.\n  remarks: \"When the IsHighlighter property is set to `true`, the <xref:System.Windows.Ink.Stroke> is slightly transparent, which allows the strokes underneath to appear.  \\n  \\n<a name=\\\"xamlTextUsage_IsHighlighter\\\"></a>   \\n## XAML Text Usage  \\n This property is not typically used in XAML.\"\n  example:\n  - \"The following example demonstrates how to set the IsHighlighter property. The example assumes that your application has an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`, and two <xref:System.Windows.Ink.DrawingAttributes> objects called `inkDA` and `highlighterDA`. For the complete example, see the <xref:System.Windows.Ink.DrawingAttributes> class overview.  \\n  \\n [!code-cs[DrawingAttributes#1](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#1)]\\n [!code-vb[DrawingAttributes#1](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#1)]\"\n  syntax:\n    content: public bool IsHighlighter { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to render the <xref href=\"System.Windows.Ink.Stroke\"></xref> as a highlighter; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Ink.DrawingAttributes.IsHighlighter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.DrawingAttributes.MaxHeight\n  id: MaxHeight\n  parent: System.Windows.Ink.DrawingAttributes\n  langs:\n  - csharp\n  name: MaxHeight\n  nameWithType: DrawingAttributes.MaxHeight\n  fullName: System.Windows.Ink.DrawingAttributes.MaxHeight\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Specifies the largest value allowed for the <xref:System.Windows.Ink.DrawingAttributes.Height*> property.\n  remarks: Use the MaxHeight field to check whether a value is within the limits allowed for the <xref:System.Windows.Ink.DrawingAttributes.Height%2A> property. Do this when the value comes from an unknown source, such as unconstrained user input.\n  example:\n  - \"The following example ensures the <xref:System.Windows.Ink.DrawingAttributes.Height%2A> property of the <xref:System.Windows.Ink.DrawingAttributes> is set to a legal value. This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`.  \\n  \\n [!code-cs[DrawingAttributes#14](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#14)]\\n [!code-vb[DrawingAttributes#14](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#14)]\"\n  syntax:\n    content: public static readonly double MaxHeight;\n    return:\n      type: System.Double\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.DrawingAttributes.MaxWidth\n  id: MaxWidth\n  parent: System.Windows.Ink.DrawingAttributes\n  langs:\n  - csharp\n  name: MaxWidth\n  nameWithType: DrawingAttributes.MaxWidth\n  fullName: System.Windows.Ink.DrawingAttributes.MaxWidth\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Specifies the largest value allowed for the <xref:System.Windows.Ink.DrawingAttributes.Width*> property.\n  remarks: Use the MaxWidth field to check whether a value is within the limits allowed for the <xref:System.Windows.Ink.DrawingAttributes.Width%2A> property. Do this when the value comes from an unknown source, such as unconstrained user input.\n  example:\n  - \"The following example ensures the <xref:System.Windows.Ink.DrawingAttributes.Width%2A> property of the <xref:System.Windows.Ink.DrawingAttributes> is set to a legal value. This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`.  \\n  \\n [!code-cs[DrawingAttributes#15](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#15)]\\n [!code-vb[DrawingAttributes#15](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#15)]\"\n  syntax:\n    content: public static readonly double MaxWidth;\n    return:\n      type: System.Double\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.DrawingAttributes.MinHeight\n  id: MinHeight\n  parent: System.Windows.Ink.DrawingAttributes\n  langs:\n  - csharp\n  name: MinHeight\n  nameWithType: DrawingAttributes.MinHeight\n  fullName: System.Windows.Ink.DrawingAttributes.MinHeight\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Specifies the smallest value allowed for the <xref:System.Windows.Ink.DrawingAttributes.Height*> property.\n  remarks: Use the MinHeight field to check whether a value is within the limits allowed for the <xref:System.Windows.Ink.DrawingAttributes.Height%2A> property. Do this when the value comes from an unknown source, such as unconstrained user input.\n  example:\n  - \"The following example ensures the <xref:System.Windows.Ink.DrawingAttributes.Height%2A> property of the <xref:System.Windows.Ink.DrawingAttributes> is set to a legal value. This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`.  \\n  \\n [!code-cs[DrawingAttributes#14](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#14)]\\n [!code-vb[DrawingAttributes#14](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#14)]\"\n  syntax:\n    content: public static readonly double MinHeight;\n    return:\n      type: System.Double\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.DrawingAttributes.MinWidth\n  id: MinWidth\n  parent: System.Windows.Ink.DrawingAttributes\n  langs:\n  - csharp\n  name: MinWidth\n  nameWithType: DrawingAttributes.MinWidth\n  fullName: System.Windows.Ink.DrawingAttributes.MinWidth\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Specifies the smallest value allowed for the <xref:System.Windows.Ink.DrawingAttributes.Width*> property.\n  remarks: Use the MinWidth field to check whether a value is within the limits allowed for the <xref:System.Windows.Ink.DrawingAttributes.Width%2A> property. Do this when the value comes from an unknown source, such as unconstrained user input.\n  example:\n  - \"The following example ensures the <xref:System.Windows.Ink.DrawingAttributes.Width%2A> property of the <xref:System.Windows.Ink.DrawingAttributes> is set to a legal value. This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`.  \\n  \\n [!code-cs[DrawingAttributes#15](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#15)]\\n [!code-vb[DrawingAttributes#15](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#15)]\"\n  syntax:\n    content: public static readonly double MinWidth;\n    return:\n      type: System.Double\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.DrawingAttributes.OnAttributeChanged(System.Windows.Ink.PropertyDataChangedEventArgs)\n  id: OnAttributeChanged(System.Windows.Ink.PropertyDataChangedEventArgs)\n  parent: System.Windows.Ink.DrawingAttributes\n  langs:\n  - csharp\n  name: OnAttributeChanged(PropertyDataChangedEventArgs)\n  nameWithType: DrawingAttributes.OnAttributeChanged(PropertyDataChangedEventArgs)\n  fullName: System.Windows.Ink.DrawingAttributes.OnAttributeChanged(PropertyDataChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Raises the <xref href=\"System.Windows.Ink.DrawingAttributes.AttributeChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate.  \\n  \\n The OnAttributeChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnAttributeChanged (System.Windows.Ink.PropertyDataChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Ink.PropertyDataChangedEventArgs\n      description: A <xref href=\"System.Windows.Ink.PropertyDataChangedEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Ink.DrawingAttributes.OnAttributeChanged*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>e</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Ink.DrawingAttributes.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)\n  id: OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)\n  parent: System.Windows.Ink.DrawingAttributes\n  langs:\n  - csharp\n  name: OnPropertyChanged(PropertyChangedEventArgs)\n  nameWithType: DrawingAttributes.OnPropertyChanged(PropertyChangedEventArgs)\n  fullName: System.Windows.Ink.DrawingAttributes.OnPropertyChanged(PropertyChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Occurs when any <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> property changes.\n  syntax:\n    content: protected virtual void OnPropertyChanged (System.ComponentModel.PropertyChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.ComponentModel.PropertyChangedEventArgs\n      description: EventArgs\n  overload: System.Windows.Ink.DrawingAttributes.OnPropertyChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.DrawingAttributes.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)\n  id: OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)\n  parent: System.Windows.Ink.DrawingAttributes\n  langs:\n  - csharp\n  name: OnPropertyDataChanged(PropertyDataChangedEventArgs)\n  nameWithType: DrawingAttributes.OnPropertyDataChanged(PropertyDataChangedEventArgs)\n  fullName: System.Windows.Ink.DrawingAttributes.OnPropertyDataChanged(PropertyDataChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Raises the <xref href=\"System.Windows.Ink.DrawingAttributes.PropertyDataChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate.  \\n  \\n The OnPropertyDataChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event.\"\n  syntax:\n    content: protected virtual void OnPropertyDataChanged (System.Windows.Ink.PropertyDataChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Ink.PropertyDataChangedEventArgs\n      description: A <xref href=\"System.Windows.Ink.PropertyDataChangedEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Ink.DrawingAttributes.OnPropertyDataChanged*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>e</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Ink.DrawingAttributes.op_Equality(System.Windows.Ink.DrawingAttributes,System.Windows.Ink.DrawingAttributes)\n  id: op_Equality(System.Windows.Ink.DrawingAttributes,System.Windows.Ink.DrawingAttributes)\n  parent: System.Windows.Ink.DrawingAttributes\n  langs:\n  - csharp\n  name: op_Equality(DrawingAttributes,DrawingAttributes)\n  nameWithType: DrawingAttributes.op_Equality(DrawingAttributes,DrawingAttributes)\n  fullName: System.Windows.Ink.DrawingAttributes.op_Equality(DrawingAttributes,DrawingAttributes)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Determines whether the specified <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> objects are equal.\n  remarks: \"Two <xref:System.Windows.Ink.DrawingAttributes> objects are equal if the following properties are equal:  \\n  \\n-   <xref:System.Windows.Ink.DrawingAttributes.Color%2A>  \\n  \\n-   <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A>  \\n  \\n-   <xref:System.Windows.Ink.DrawingAttributes.Height%2A>  \\n  \\n-   <xref:System.Windows.Ink.DrawingAttributes.IgnorePressure%2A>  \\n  \\n-   <xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A>  \\n  \\n-   <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>  \\n  \\n-   <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A>  \\n  \\n-   <xref:System.Windows.Ink.DrawingAttributes.Width%2A>  \\n  \\n> [!NOTE]\\n>  The Equality method does not check the custom properties for equality.\"\n  example:\n  - \"The following example compares two <xref:System.Windows.Ink.DrawingAttributes> objects for equality. Because the <xref:System.Windows.Ink.DrawingAttributes.Color%2A>, <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>, <xref:System.Windows.Ink.DrawingAttributes.Height%2A>, and <xref:System.Windows.Ink.DrawingAttributes.Width%2A> properties on `attributes1` and `attributes2` are set to the same values, the \\\"The DrawingAttributes are equal\\\" message appears.  \\n  \\n [!code-cs[DrawingAttributes#10](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#10)]\\n [!code-vb[DrawingAttributes#10](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#10)]  \\n[!code-cs[DrawingAttributes#11](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#11)]\\n[!code-vb[DrawingAttributes#11](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#11)]\"\n  syntax:\n    content: public static bool op_Equality (System.Windows.Ink.DrawingAttributes first, System.Windows.Ink.DrawingAttributes second);\n    parameters:\n    - id: first\n      type: System.Windows.Ink.DrawingAttributes\n      description: The first <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object to compare.\n    - id: second\n      type: System.Windows.Ink.DrawingAttributes\n      description: The second <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the objects are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Ink.DrawingAttributes.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.DrawingAttributes.op_Inequality(System.Windows.Ink.DrawingAttributes,System.Windows.Ink.DrawingAttributes)\n  id: op_Inequality(System.Windows.Ink.DrawingAttributes,System.Windows.Ink.DrawingAttributes)\n  parent: System.Windows.Ink.DrawingAttributes\n  langs:\n  - csharp\n  name: op_Inequality(DrawingAttributes,DrawingAttributes)\n  nameWithType: DrawingAttributes.op_Inequality(DrawingAttributes,DrawingAttributes)\n  fullName: System.Windows.Ink.DrawingAttributes.op_Inequality(DrawingAttributes,DrawingAttributes)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Determines whether the specified <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> objects are not equal.\n  remarks: \"Two <xref:System.Windows.Ink.DrawingAttributes> objects are not equal if the following properties are not equal:  \\n  \\n-   <xref:System.Windows.Ink.DrawingAttributes.Color%2A>  \\n  \\n-   <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A>  \\n  \\n-   <xref:System.Windows.Ink.DrawingAttributes.Height%2A>  \\n  \\n-   <xref:System.Windows.Ink.DrawingAttributes.IgnorePressure%2A>  \\n  \\n-   <xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A>  \\n  \\n-   <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>  \\n  \\n-   <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A>  \\n  \\n-   <xref:System.Windows.Ink.DrawingAttributes.Width%2A>  \\n  \\n> [!NOTE]\\n>  The Inequality method does not check the custom properties for equality.\"\n  example:\n  - \"The following example compares two <xref:System.Windows.Ink.DrawingAttributes> objects for inequality. Because the <xref:System.Windows.Ink.DrawingAttributes.Color%2A>, <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>, <xref:System.Windows.Ink.DrawingAttributes.Height%2A>, and <xref:System.Windows.Ink.DrawingAttributes.Width%2A> properties on `attributes1` and `attributes2` are set to the same values, the \\\"The DrawingAttributes are equal\\\" message appears.  \\n  \\n [!code-cs[DrawingAttributes#10](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#10)]\\n [!code-vb[DrawingAttributes#10](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#10)]  \\n[!code-cs[DrawingAttributes#13](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#13)]\\n[!code-vb[DrawingAttributes#13](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#13)]\"\n  syntax:\n    content: public static bool op_Inequality (System.Windows.Ink.DrawingAttributes first, System.Windows.Ink.DrawingAttributes second);\n    parameters:\n    - id: first\n      type: System.Windows.Ink.DrawingAttributes\n      description: The first <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object to compare.\n    - id: second\n      type: System.Windows.Ink.DrawingAttributes\n      description: The second <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the objects are not equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Ink.DrawingAttributes.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.DrawingAttributes.PropertyDataChanged\n  id: PropertyDataChanged\n  parent: System.Windows.Ink.DrawingAttributes\n  langs:\n  - csharp\n  name: PropertyDataChanged\n  nameWithType: DrawingAttributes.PropertyDataChanged\n  fullName: System.Windows.Ink.DrawingAttributes.PropertyDataChanged\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Occurs when property data is added or removed from the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example is part of a custom stroke that can draw a three-dimensional effect. The stroke defines and stores a custom property called `Shadowed`, which belongs to <xref:System.Windows.Ink.Stroke.DrawingAttributes%2A>. When the `Shadowed` property changes, the PropertyDataChanged event handler calls the <xref:System.Windows.Ink.Stroke.OnInvalidated%2A> method, which causes the stroke to be redrawn.  \\n  \\n [!code-vb[StrokeCollectionShadow#1](~/add/codesnippet/visualbasic/StrokeCollectionShadow/CustomRenderedStroke.vb#1)]\\n [!code-cs[StrokeCollectionShadow#1](~/add/codesnippet/csharp/StrokeCollectionShadow/CustomRenderedStroke.cs#1)]\"\n  syntax:\n    content: public event System.Windows.Ink.PropertyDataChangedEventHandler PropertyDataChanged;\n    return:\n      type: System.Windows.Ink.PropertyDataChangedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.DrawingAttributes.RemovePropertyData(System.Guid)\n  id: RemovePropertyData(System.Guid)\n  parent: System.Windows.Ink.DrawingAttributes\n  langs:\n  - csharp\n  name: RemovePropertyData(Guid)\n  nameWithType: DrawingAttributes.RemovePropertyData(Guid)\n  fullName: System.Windows.Ink.DrawingAttributes.RemovePropertyData(Guid)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Removes the custom property associated with the specified <xref:System.Guid>.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to remove a custom property from a <xref:System.Windows.Ink.DrawingAttributes> object.  \\n  \\n [!code-cs[DrawingAttributes#9](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#9)]\\n [!code-vb[DrawingAttributes#9](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#9)]\"\n  syntax:\n    content: public void RemovePropertyData (Guid propertyDataId);\n    parameters:\n    - id: propertyDataId\n      type: System.Guid\n      description: The <xref:System.Guid> associated with the custom property to remove.\n  overload: System.Windows.Ink.DrawingAttributes.RemovePropertyData*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>propertyDataId</code> is not associated with a custom property of the <xref href=\"System.Windows.Ink.DrawingAttributes\"></xref> object.\n  platform:\n  - net462\n- uid: System.Windows.Ink.DrawingAttributes.StylusTip\n  id: StylusTip\n  parent: System.Windows.Ink.DrawingAttributes\n  langs:\n  - csharp\n  name: StylusTip\n  nameWithType: DrawingAttributes.StylusTip\n  fullName: System.Windows.Ink.DrawingAttributes.StylusTip\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Gets or sets the shape of the stylus used to draw the <xref href=\"System.Windows.Ink.Stroke\"></xref>.\n  remarks: \"<a name=\\\"xamlTextUsage_StylusTip\\\"></a>   \\n## XAML Text Usage  \\n This property is not typically used in XAML.\"\n  example:\n  - \"The following example demonstrates how to set the StylusTip property. The example assumes that your application has an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`, and two <xref:System.Windows.Ink.DrawingAttributes> objects called `inkDA` and `highlighterDA`. For the complete example, see the <xref:System.Windows.Ink.DrawingAttributes> class overview.  \\n  \\n [!code-cs[DrawingAttributes#1](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#1)]\\n [!code-vb[DrawingAttributes#1](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#1)]\"\n  syntax:\n    content: public System.Windows.Ink.StylusTip StylusTip { get; set; }\n    return:\n      type: System.Windows.Ink.StylusTip\n      description: One of the <xref href=\"System.Windows.Ink.StylusShape\"></xref> values.\n  overload: System.Windows.Ink.DrawingAttributes.StylusTip*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.DrawingAttributes.StylusTipTransform\n  id: StylusTipTransform\n  parent: System.Windows.Ink.DrawingAttributes\n  langs:\n  - csharp\n  name: StylusTipTransform\n  nameWithType: DrawingAttributes.StylusTipTransform\n  fullName: System.Windows.Ink.DrawingAttributes.StylusTipTransform\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Gets or sets the <xref href=\"System.Windows.Media.Matrix\"></xref> that specifies the transformation to perform on the stylus' tip.\n  remarks: \"Use the StylusTipTransform property to rotate, skew, or scale the stylus tip.  \\n  \\n<a name=\\\"xamlTextUsage_StylusTipTransform\\\"></a>   \\n## XAML Text Usage  \\n This property is not typically used in XAML.\"\n  example:\n  - \"The following example demonstrates how to set the StylusTipTransform property. The example assumes that your application has an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`, and two <xref:System.Windows.Ink.DrawingAttributes> objects called `inkDA` and `highlighterDA`. For the complete example, see the <xref:System.Windows.Ink.DrawingAttributes> class overview.  \\n  \\n [!code-cs[DrawingAttributes#1](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#1)]\\n [!code-vb[DrawingAttributes#1](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#1)]\"\n  syntax:\n    content: public System.Windows.Media.Matrix StylusTipTransform { get; set; }\n    return:\n      type: System.Windows.Media.Matrix\n      description: A <xref href=\"System.Windows.Media.Matrix\"></xref> that specifies the transformation to perform on the stylus' tip.\n  overload: System.Windows.Ink.DrawingAttributes.StylusTipTransform*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The matrix set to StylusTipTransform is not an invertible matrix.  \\n  \\n -or-  \\n  \\n The <xref:System.Windows.Media.Matrix.OffsetX*> or <xref:System.Windows.Media.Matrix.OffsetY*> property of the matrix is not zero.\"\n  platform:\n  - net462\n- uid: System.Windows.Ink.DrawingAttributes.Width\n  id: Width\n  parent: System.Windows.Ink.DrawingAttributes\n  langs:\n  - csharp\n  name: Width\n  nameWithType: DrawingAttributes.Width\n  fullName: System.Windows.Ink.DrawingAttributes.Width\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Gets or sets the width of the stylus used to draw the <xref href=\"System.Windows.Ink.Stroke\"></xref>.\n  remarks: \"The following factors affect the height and width of a <xref:System.Windows.Ink.Stroke> when it is rendered, but not the value of the Width property.  \\n  \\n-   The amount of pressure applied to the stylus when the <xref:System.Windows.Ink.Stroke> is drawn.  \\n  \\n-   The value of the <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A> property.  \\n  \\n If you set the Width property to 0 device independent pixels (DIP), it is changed to 2 DIP.  \\n  \\n<a name=\\\"xamlTextUsage_Width\\\"></a>   \\n## XAML Text Usage  \\n This property is not typically used in XAML.\"\n  example:\n  - \"The following example demonstrates how to set the Width property. The example assumes that your application has an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`, and two <xref:System.Windows.Ink.DrawingAttributes> objects called `inkDA` and `highlighterDA`. For the complete example, see the <xref:System.Windows.Ink.DrawingAttributes> class overview.  \\n  \\n [!code-cs[DrawingAttributes#1](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#1)]\\n [!code-vb[DrawingAttributes#1](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#1)]\"\n  syntax:\n    content: public double Width { get; set; }\n    return:\n      type: System.Double\n      description: The width of the stylus used to draw the <xref href=\"System.Windows.Ink.Stroke\"></xref>.\n  overload: System.Windows.Ink.DrawingAttributes.Width*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The Width property is less than &lt;xref:System.Double.Epsilon?displayProperty=fullName&gt; or &lt;xref:System.Double.NaN?displayProperty=fullName&gt;.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.Windows.Ink.DrawingAttributes.#ctor\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: DrawingAttributes()\n  nameWithType: DrawingAttributes.DrawingAttributes()\n  fullName: System.Windows.Ink.DrawingAttributes.DrawingAttributes()\n- uid: System.Windows.Ink.DrawingAttributes.AddPropertyData(System.Guid,System.Object)\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: AddPropertyData(Guid,Object)\n  nameWithType: DrawingAttributes.AddPropertyData(Guid,Object)\n  fullName: System.Windows.Ink.DrawingAttributes.AddPropertyData(Guid,Object)\n- uid: System.Guid\n  parent: System\n  isExternal: true\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Windows.Ink.DrawingAttributes.AttributeChanged\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: AttributeChanged\n  nameWithType: DrawingAttributes.AttributeChanged\n  fullName: System.Windows.Ink.DrawingAttributes.AttributeChanged\n- uid: System.Windows.Ink.PropertyDataChangedEventHandler\n  parent: System.Windows.Ink\n  isExternal: false\n  name: PropertyDataChangedEventHandler\n  nameWithType: PropertyDataChangedEventHandler\n  fullName: System.Windows.Ink.PropertyDataChangedEventHandler\n- uid: System.Windows.Ink.DrawingAttributes.Clone\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: Clone()\n  nameWithType: DrawingAttributes.Clone()\n  fullName: System.Windows.Ink.DrawingAttributes.Clone()\n- uid: System.Windows.Ink.DrawingAttributes\n  parent: System.Windows.Ink\n  isExternal: false\n  name: DrawingAttributes\n  nameWithType: DrawingAttributes\n  fullName: System.Windows.Ink.DrawingAttributes\n- uid: System.Windows.Ink.DrawingAttributes.Color\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: Color\n  nameWithType: DrawingAttributes.Color\n  fullName: System.Windows.Ink.DrawingAttributes.Color\n- uid: System.Windows.Media.Color\n  parent: System.Windows.Media\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Windows.Media.Color\n- uid: System.Windows.Ink.DrawingAttributes.ContainsPropertyData(System.Guid)\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: ContainsPropertyData(Guid)\n  nameWithType: DrawingAttributes.ContainsPropertyData(Guid)\n  fullName: System.Windows.Ink.DrawingAttributes.ContainsPropertyData(Guid)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Ink.DrawingAttributes.Equals(System.Object)\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: DrawingAttributes.Equals(Object)\n  fullName: System.Windows.Ink.DrawingAttributes.Equals(Object)\n- uid: System.Windows.Ink.DrawingAttributes.FitToCurve\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: FitToCurve\n  nameWithType: DrawingAttributes.FitToCurve\n  fullName: System.Windows.Ink.DrawingAttributes.FitToCurve\n- uid: System.Windows.Ink.DrawingAttributes.GetHashCode\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: DrawingAttributes.GetHashCode()\n  fullName: System.Windows.Ink.DrawingAttributes.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Ink.DrawingAttributes.GetPropertyData(System.Guid)\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: GetPropertyData(Guid)\n  nameWithType: DrawingAttributes.GetPropertyData(Guid)\n  fullName: System.Windows.Ink.DrawingAttributes.GetPropertyData(Guid)\n- uid: System.Windows.Ink.DrawingAttributes.GetPropertyDataIds\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: GetPropertyDataIds()\n  nameWithType: DrawingAttributes.GetPropertyDataIds()\n  fullName: System.Windows.Ink.DrawingAttributes.GetPropertyDataIds()\n- uid: System.Guid[]\n  parent: System\n  isExternal: true\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid[]\n  spec.csharp:\n  - uid: System.Guid\n    name: Guid\n    nameWithType: Guid\n    fullName: Guid[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Windows.Ink.DrawingAttributes.Height\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: Height\n  nameWithType: DrawingAttributes.Height\n  fullName: System.Windows.Ink.DrawingAttributes.Height\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Ink.DrawingAttributes.IgnorePressure\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: IgnorePressure\n  nameWithType: DrawingAttributes.IgnorePressure\n  fullName: System.Windows.Ink.DrawingAttributes.IgnorePressure\n- uid: System.Windows.Ink.DrawingAttributes.IsHighlighter\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: IsHighlighter\n  nameWithType: DrawingAttributes.IsHighlighter\n  fullName: System.Windows.Ink.DrawingAttributes.IsHighlighter\n- uid: System.Windows.Ink.DrawingAttributes.MaxHeight\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: MaxHeight\n  nameWithType: DrawingAttributes.MaxHeight\n  fullName: System.Windows.Ink.DrawingAttributes.MaxHeight\n- uid: System.Windows.Ink.DrawingAttributes.MaxWidth\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: MaxWidth\n  nameWithType: DrawingAttributes.MaxWidth\n  fullName: System.Windows.Ink.DrawingAttributes.MaxWidth\n- uid: System.Windows.Ink.DrawingAttributes.MinHeight\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: MinHeight\n  nameWithType: DrawingAttributes.MinHeight\n  fullName: System.Windows.Ink.DrawingAttributes.MinHeight\n- uid: System.Windows.Ink.DrawingAttributes.MinWidth\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: MinWidth\n  nameWithType: DrawingAttributes.MinWidth\n  fullName: System.Windows.Ink.DrawingAttributes.MinWidth\n- uid: System.Windows.Ink.DrawingAttributes.OnAttributeChanged(System.Windows.Ink.PropertyDataChangedEventArgs)\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: OnAttributeChanged(PropertyDataChangedEventArgs)\n  nameWithType: DrawingAttributes.OnAttributeChanged(PropertyDataChangedEventArgs)\n  fullName: System.Windows.Ink.DrawingAttributes.OnAttributeChanged(PropertyDataChangedEventArgs)\n- uid: System.Windows.Ink.PropertyDataChangedEventArgs\n  parent: System.Windows.Ink\n  isExternal: false\n  name: PropertyDataChangedEventArgs\n  nameWithType: PropertyDataChangedEventArgs\n  fullName: System.Windows.Ink.PropertyDataChangedEventArgs\n- uid: System.Windows.Ink.DrawingAttributes.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: OnPropertyChanged(PropertyChangedEventArgs)\n  nameWithType: DrawingAttributes.OnPropertyChanged(PropertyChangedEventArgs)\n  fullName: System.Windows.Ink.DrawingAttributes.OnPropertyChanged(PropertyChangedEventArgs)\n- uid: System.ComponentModel.PropertyChangedEventArgs\n  parent: System.ComponentModel\n  isExternal: true\n  name: PropertyChangedEventArgs\n  nameWithType: PropertyChangedEventArgs\n  fullName: System.ComponentModel.PropertyChangedEventArgs\n- uid: System.Windows.Ink.DrawingAttributes.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: OnPropertyDataChanged(PropertyDataChangedEventArgs)\n  nameWithType: DrawingAttributes.OnPropertyDataChanged(PropertyDataChangedEventArgs)\n  fullName: System.Windows.Ink.DrawingAttributes.OnPropertyDataChanged(PropertyDataChangedEventArgs)\n- uid: System.Windows.Ink.DrawingAttributes.op_Equality(System.Windows.Ink.DrawingAttributes,System.Windows.Ink.DrawingAttributes)\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: op_Equality(DrawingAttributes,DrawingAttributes)\n  nameWithType: DrawingAttributes.op_Equality(DrawingAttributes,DrawingAttributes)\n  fullName: System.Windows.Ink.DrawingAttributes.op_Equality(DrawingAttributes,DrawingAttributes)\n- uid: System.Windows.Ink.DrawingAttributes.op_Inequality(System.Windows.Ink.DrawingAttributes,System.Windows.Ink.DrawingAttributes)\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: op_Inequality(DrawingAttributes,DrawingAttributes)\n  nameWithType: DrawingAttributes.op_Inequality(DrawingAttributes,DrawingAttributes)\n  fullName: System.Windows.Ink.DrawingAttributes.op_Inequality(DrawingAttributes,DrawingAttributes)\n- uid: System.Windows.Ink.DrawingAttributes.PropertyDataChanged\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: PropertyDataChanged\n  nameWithType: DrawingAttributes.PropertyDataChanged\n  fullName: System.Windows.Ink.DrawingAttributes.PropertyDataChanged\n- uid: System.Windows.Ink.DrawingAttributes.RemovePropertyData(System.Guid)\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: RemovePropertyData(Guid)\n  nameWithType: DrawingAttributes.RemovePropertyData(Guid)\n  fullName: System.Windows.Ink.DrawingAttributes.RemovePropertyData(Guid)\n- uid: System.Windows.Ink.DrawingAttributes.StylusTip\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: StylusTip\n  nameWithType: DrawingAttributes.StylusTip\n  fullName: System.Windows.Ink.DrawingAttributes.StylusTip\n- uid: System.Windows.Ink.StylusTip\n  parent: System.Windows.Ink\n  isExternal: false\n  name: StylusTip\n  nameWithType: StylusTip\n  fullName: System.Windows.Ink.StylusTip\n- uid: System.Windows.Ink.DrawingAttributes.StylusTipTransform\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: StylusTipTransform\n  nameWithType: DrawingAttributes.StylusTipTransform\n  fullName: System.Windows.Ink.DrawingAttributes.StylusTipTransform\n- uid: System.Windows.Media.Matrix\n  parent: System.Windows.Media\n  isExternal: false\n  name: Matrix\n  nameWithType: Matrix\n  fullName: System.Windows.Media.Matrix\n- uid: System.Windows.Ink.DrawingAttributes.Width\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: Width\n  nameWithType: DrawingAttributes.Width\n  fullName: System.Windows.Ink.DrawingAttributes.Width\n- uid: System.Windows.Ink.DrawingAttributes.#ctor*\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: DrawingAttributes\n  nameWithType: DrawingAttributes.DrawingAttributes\n- uid: System.Windows.Ink.DrawingAttributes.AddPropertyData*\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: AddPropertyData\n  nameWithType: DrawingAttributes.AddPropertyData\n- uid: System.Windows.Ink.DrawingAttributes.Clone*\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: Clone\n  nameWithType: DrawingAttributes.Clone\n- uid: System.Windows.Ink.DrawingAttributes.Color*\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: Color\n  nameWithType: DrawingAttributes.Color\n- uid: System.Windows.Ink.DrawingAttributes.ContainsPropertyData*\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: ContainsPropertyData\n  nameWithType: DrawingAttributes.ContainsPropertyData\n- uid: System.Windows.Ink.DrawingAttributes.Equals*\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: Equals\n  nameWithType: DrawingAttributes.Equals\n- uid: System.Windows.Ink.DrawingAttributes.FitToCurve*\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: FitToCurve\n  nameWithType: DrawingAttributes.FitToCurve\n- uid: System.Windows.Ink.DrawingAttributes.GetHashCode*\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: GetHashCode\n  nameWithType: DrawingAttributes.GetHashCode\n- uid: System.Windows.Ink.DrawingAttributes.GetPropertyData*\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: GetPropertyData\n  nameWithType: DrawingAttributes.GetPropertyData\n- uid: System.Windows.Ink.DrawingAttributes.GetPropertyDataIds*\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: GetPropertyDataIds\n  nameWithType: DrawingAttributes.GetPropertyDataIds\n- uid: System.Windows.Ink.DrawingAttributes.Height*\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: Height\n  nameWithType: DrawingAttributes.Height\n- uid: System.Windows.Ink.DrawingAttributes.IgnorePressure*\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: IgnorePressure\n  nameWithType: DrawingAttributes.IgnorePressure\n- uid: System.Windows.Ink.DrawingAttributes.IsHighlighter*\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: IsHighlighter\n  nameWithType: DrawingAttributes.IsHighlighter\n- uid: System.Windows.Ink.DrawingAttributes.OnAttributeChanged*\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: OnAttributeChanged\n  nameWithType: DrawingAttributes.OnAttributeChanged\n- uid: System.Windows.Ink.DrawingAttributes.OnPropertyChanged*\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: OnPropertyChanged\n  nameWithType: DrawingAttributes.OnPropertyChanged\n- uid: System.Windows.Ink.DrawingAttributes.OnPropertyDataChanged*\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: OnPropertyDataChanged\n  nameWithType: DrawingAttributes.OnPropertyDataChanged\n- uid: System.Windows.Ink.DrawingAttributes.op_Equality*\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: op_Equality\n  nameWithType: DrawingAttributes.op_Equality\n- uid: System.Windows.Ink.DrawingAttributes.op_Inequality*\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: op_Inequality\n  nameWithType: DrawingAttributes.op_Inequality\n- uid: System.Windows.Ink.DrawingAttributes.RemovePropertyData*\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: RemovePropertyData\n  nameWithType: DrawingAttributes.RemovePropertyData\n- uid: System.Windows.Ink.DrawingAttributes.StylusTip*\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: StylusTip\n  nameWithType: DrawingAttributes.StylusTip\n- uid: System.Windows.Ink.DrawingAttributes.StylusTipTransform*\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: StylusTipTransform\n  nameWithType: DrawingAttributes.StylusTipTransform\n- uid: System.Windows.Ink.DrawingAttributes.Width*\n  parent: System.Windows.Ink.DrawingAttributes\n  isExternal: false\n  name: Width\n  nameWithType: DrawingAttributes.Width\n"}