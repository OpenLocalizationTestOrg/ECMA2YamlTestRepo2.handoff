{"nodes":[{"pos":[495,706],"content":"Provides a means of reading one or more forward-only streams of result sets obtained by executing a command at a data source, and is implemented by .NET Framework data providers that access relational databases.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a means of reading one or more forward-only streams of result sets obtained by executing a command at a data source, and is implemented by .NET Framework data providers that access relational databases.","pos":[0,211]}]},{"pos":[719,1597],"content":"The IDataReader and <xref:System.Data.IDataRecord> interfaces allow an inheriting class to implement a `DataReader` class, which provides a means of reading one or more forward-only streams of result sets. For more information about `DataReader` classes, see [Retrieving Data Using a DataReader](~/add/includes/ajax-current-ext-md.md).       An application does not create an instance of the IDataReader interface directly, but creates an instance of a class that inherits IDataReader.       Classes that inherit IDataReader must implement the inherited members, and typically define additional members to add provider-specific functionality.       Changes made to a result set by another process or thread while data is being read may be visible to the user of a class that implements an `IDataReader`. However, the precise behavior is both provider and timing dependent.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The IDataReader and &lt;xref:System.Data.IDataRecord&gt; interfaces allow an inheriting class to implement a <ph id=\"ph1\">`DataReader`</ph> class, which provides a means of reading one or more forward-only streams of result sets.","pos":[0,205],"source":"The IDataReader and <xref:System.Data.IDataRecord> interfaces allow an inheriting class to implement a `DataReader` class, which provides a means of reading one or more forward-only streams of result sets."},{"content":"For more information about <ph id=\"ph1\">`DataReader`</ph> classes, see <bpt id=\"p1\">[</bpt>Retrieving Data Using a DataReader<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[206,335],"source":" For more information about `DataReader` classes, see [Retrieving Data Using a DataReader](~/add/includes/ajax-current-ext-md.md)."},{"content":"An application does not create an instance of the IDataReader interface directly, but creates an instance of a class that inherits IDataReader.","pos":[342,485]},{"content":"Classes that inherit IDataReader must implement the inherited members, and typically define additional members to add provider-specific functionality.","pos":[492,642]},{"content":"Changes made to a result set by another process or thread while data is being read may be visible to the user of a class that implements an <ph id=\"ph1\">`IDataReader`</ph>.","pos":[649,803],"source":"       Changes made to a result set by another process or thread while data is being read may be visible to the user of a class that implements an `IDataReader`."},{"content":"However, the precise behavior is both provider and timing dependent.","pos":[804,872]}]},{"pos":[2713,2776],"content":"Closes the <bpt id=\"p1\">&lt;xref href=\"System.Data.IDataReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> Object.","needQuote":true,"needEscape":true,"source":"Closes the <xref href=\"System.Data.IDataReader\"></xref> Object."},{"pos":[2788,2969],"content":"You must explicitly call the Close method when you are through using the <xref:System.Data.IDataReader> to use the associated <xref:System.Data.IDbConnection> for any other purpose.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"You must explicitly call the Close method when you are through using the &lt;xref:System.Data.IDataReader&gt; to use the associated &lt;xref:System.Data.IDbConnection&gt; for any other purpose.","pos":[0,181],"source":"You must explicitly call the Close method when you are through using the <xref:System.Data.IDataReader> to use the associated <xref:System.Data.IDbConnection> for any other purpose."}]},{"pos":[3393,3458],"content":"Gets a value indicating the depth of nesting for the current row.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating the depth of nesting for the current row.","pos":[0,65]}]},{"pos":[3470,3510],"content":"The outermost table has a depth of zero.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The outermost table has a depth of zero.","pos":[0,40]}]},{"pos":[3616,3637],"content":"The level of nesting.","needQuote":true,"needEscape":true,"nodes":[{"content":"The level of nesting.","pos":[0,21]}]},{"pos":[4046,4186],"content":"Returns a <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that describes the column metadata of the <bpt id=\"p2\">&lt;xref href=\"System.Data.IDataReader\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a <xref href=\"System.Data.DataTable\"></xref> that describes the column metadata of the <xref href=\"System.Data.IDataReader\"></xref>."},{"pos":[4199,5265],"content":"The implementation of GetSchemaTable method for the .NET Framework Data Provider for OLE DB maps to the OLE DB IColumnsRowset::GetColumnsRowset method, while implementations for other .NET Framework data providers do not use an OLE DB provider layer. The order in which GetSchemaTable returns metadata about each column in a table, and the DataReader columns that are returned, vary depending on which data provider you use. The following table lists data providers and members that implement GetSchemaTable.      |Data Provider|Member|   |-------------------|------------|   |.NET Data Provider for ODBC|<xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A?displayProperty=fullName>.|   |.NET Data Provider for OLE DB|<xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A?displayProperty=fullName>.|   |.NET Data Provider for Oracle|<xref:System.Data.OracleClient.OracleDataReader.GetSchemaTable%2A?displayProperty=fullName>.|   |.NET Data Provider for SQL Server|<xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A?displayProperty=fullName>.|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The implementation of GetSchemaTable method for the .NET Framework Data Provider for OLE DB maps to the OLE DB IColumnsRowset::GetColumnsRowset method, while implementations for other .NET Framework data providers do not use an OLE DB provider layer. The order in which GetSchemaTable returns metadata about each column in a table, and the DataReader columns that are returned, vary depending on which data provider you use. The following table lists data providers and members that implement GetSchemaTable.      |Data Provider|Member|   |-------------------|------------|   |.NET Data Provider for ODBC|<xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A?displayProperty=fullName>.|   |.NET Data Provider for OLE DB|<xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A?displayProperty=fullName>.|   |.NET Data Provider for Oracle|<xref:System.Data.OracleClient.OracleDataReader.GetSchemaTable%2A?displayProperty=fullName>.|   |.NET Data Provider for SQL Server|<xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A?displayProperty=fullName>.|","pos":[0,1059],"nodes":[{"content":"The implementation of GetSchemaTable method for the .NET Framework Data Provider for OLE DB maps to the OLE DB IColumnsRowset::GetColumnsRowset method, while implementations for other .NET Framework data providers do not use an OLE DB provider layer.","pos":[0,250]},{"content":"The order in which GetSchemaTable returns metadata about each column in a table, and the DataReader columns that are returned, vary depending on which data provider you use.","pos":[251,424]},{"content":"The following table lists data providers and members that implement GetSchemaTable.","pos":[425,508]},{"content":"|Data Provider|Member|   |-------------------|------------|   |.NET Data Provider for ODBC|&lt;xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A?displayProperty=fullName&gt;.|   |.NET Data Provider for OLE DB|&lt;xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A?displayProperty=fullName&gt;.|   |.NET Data Provider for Oracle|&lt;xref:System.Data.OracleClient.OracleDataReader.GetSchemaTable%2A?displayProperty=fullName&gt;.|   |.NET Data Provider for SQL Server|&lt;xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A?displayProperty=fullName&gt;.|","pos":[514,1059],"source":"      |Data Provider|Member|   |-------------------|------------|   |.NET Data Provider for ODBC|<xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A?displayProperty=fullName>.|   |.NET Data Provider for OLE DB|<xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A?displayProperty=fullName>.|   |.NET Data Provider for Oracle|<xref:System.Data.OracleClient.OracleDataReader.GetSchemaTable%2A?displayProperty=fullName>.|   |.NET Data Provider for SQL Server|<xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A?displayProperty=fullName>.|"}]}]},{"pos":[5422,5502],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that describes the column metadata.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.DataTable\"></xref> that describes the column metadata."},{"pos":[5679,5738],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Data.IDataReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is closed.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Data.IDataReader\"></xref> is closed."},{"pos":[6053,6111],"content":"Gets a value indicating whether the data reader is closed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the data reader is closed.","pos":[0,58]}]},{"pos":[6123,6279],"content":"IsClosed and <xref:System.Data.IDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.IDataReader> is closed.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"IsClosed and &lt;xref:System.Data.IDataReader.RecordsAffected%2A&gt; are the only properties that you can call after the &lt;xref:System.Data.IDataReader&gt; is closed.","pos":[0,156],"source":"IsClosed and <xref:System.Data.IDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.IDataReader> is closed."}]},{"pos":[6391,6556],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the data reader is closed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the data reader is closed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6948,7042],"content":"Advances the data reader to the next result, when reading the results of batch SQL statements.","needQuote":true,"needEscape":true,"nodes":[{"content":"Advances the data reader to the next result, when reading the results of batch SQL statements.","pos":[0,94]}]},{"pos":[7055,7421],"content":"Used to process multiple results, which can be obtained by executing batch SQL statements.       By default, the data reader is positioned on the first result.       [!code-vb[IDataReader_NextResult#1](~/add/codesnippet/visualbasic/m-system.data.idatareade_1_1.vb)]  [!code-cs[IDataReader_NextResult#1](~/add/codesnippet/csharp/m-system.data.idatareade_1_1.cs)]","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Used to process multiple results, which can be obtained by executing batch SQL statements.","pos":[0,90]},{"content":"By default, the data reader is positioned on the first result.","pos":[97,159]},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>IDataReader_NextResult#1<ept id=\"p2\">](~/add/codesnippet/visualbasic/m-system.data.idatareade_1_1.vb)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-cs</bpt><bpt id=\"p4\">[</bpt>IDataReader_NextResult#1<ept id=\"p4\">](~/add/codesnippet/csharp/m-system.data.idatareade_1_1.cs)</ept><ept id=\"p3\">]</ept>","pos":[166,361],"source":"[!code-vb[IDataReader_NextResult#1](~/add/codesnippet/visualbasic/m-system.data.idatareade_1_1.vb)]  [!code-cs[IDataReader_NextResult#1](~/add/codesnippet/csharp/m-system.data.idatareade_1_1.cs)]"}]},{"pos":[7550,7709],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if there are more rows; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if there are more rows; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8073,8150],"content":"Advances the <bpt id=\"p1\">&lt;xref href=\"System.Data.IDataReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to the next record.","needQuote":true,"needEscape":true,"source":"Advances the <xref href=\"System.Data.IDataReader\"></xref> to the next record."},{"pos":[8163,8502],"content":"The default position of the <xref:System.Data.IDataReader> is prior to the first record. Therefore you must call Read to begin accessing any data.       While the data reader is in use, the associated connection is busy serving the <xref:System.Data.IDataReader>. This is the case until <xref:System.Data.IDataReader.Close%2A> is called.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default position of the <xref:System.Data.IDataReader> is prior to the first record. Therefore you must call Read to begin accessing any data.       While the data reader is in use, the associated connection is busy serving the <xref:System.Data.IDataReader>. This is the case until <xref:System.Data.IDataReader.Close%2A> is called.","pos":[0,337],"nodes":[{"content":"The default position of the &lt;xref:System.Data.IDataReader&gt; is prior to the first record.","pos":[0,88],"source":"The default position of the <xref:System.Data.IDataReader> is prior to the first record."},{"content":"Therefore you must call Read to begin accessing any data.","pos":[89,146]},{"content":"While the data reader is in use, the associated connection is busy serving the &lt;xref:System.Data.IDataReader&gt;.","pos":[153,263],"source":"       While the data reader is in use, the associated connection is busy serving the <xref:System.Data.IDataReader>."},{"content":"This is the case until &lt;xref:System.Data.IDataReader.Close%2A&gt; is called.","pos":[264,337],"source":" This is the case until <xref:System.Data.IDataReader.Close%2A> is called."}]}]},{"pos":[9273,9432],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if there are more rows; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if there are more rows; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9841,9929],"content":"Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.","pos":[0,88]}]},{"pos":[9942,10220],"content":"The RecordsAffected property is not set until all rows are read and you close the <xref:System.Data.IDataReader>.       <xref:System.Data.IDataReader.IsClosed%2A> and RecordsAffected are the only properties that you can call after the <xref:System.Data.IDataReader> is closed.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The RecordsAffected property is not set until all rows are read and you close the <xref:System.Data.IDataReader>.       <xref:System.Data.IDataReader.IsClosed%2A> and RecordsAffected are the only properties that you can call after the <xref:System.Data.IDataReader> is closed.","pos":[0,276],"nodes":[{"content":"The RecordsAffected property is not set until all rows are read and you close the &lt;xref:System.Data.IDataReader&gt;.","pos":[0,113],"source":"The RecordsAffected property is not set until all rows are read and you close the <xref:System.Data.IDataReader>."},{"content":"&lt;xref:System.Data.IDataReader.IsClosed%2A&gt; and RecordsAffected are the only properties that you can call after the &lt;xref:System.Data.IDataReader&gt; is closed.","pos":[120,276],"source":"       <xref:System.Data.IDataReader.IsClosed%2A> and RecordsAffected are the only properties that you can call after the <xref:System.Data.IDataReader> is closed."}]}]},{"pos":[10337,10468],"content":"The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.","pos":[0,131]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.IDataReader\n  id: IDataReader\n  children:\n  - System.Data.IDataReader.Close\n  - System.Data.IDataReader.Depth\n  - System.Data.IDataReader.GetSchemaTable\n  - System.Data.IDataReader.IsClosed\n  - System.Data.IDataReader.NextResult\n  - System.Data.IDataReader.Read\n  - System.Data.IDataReader.RecordsAffected\n  langs:\n  - csharp\n  name: IDataReader\n  nameWithType: IDataReader\n  fullName: System.Data.IDataReader\n  type: Interface\n  summary: Provides a means of reading one or more forward-only streams of result sets obtained by executing a command at a data source, and is implemented by .NET Framework data providers that access relational databases.\n  remarks: \"The IDataReader and <xref:System.Data.IDataRecord> interfaces allow an inheriting class to implement a `DataReader` class, which provides a means of reading one or more forward-only streams of result sets. For more information about `DataReader` classes, see [Retrieving Data Using a DataReader](~/add/includes/ajax-current-ext-md.md).  \\n  \\n An application does not create an instance of the IDataReader interface directly, but creates an instance of a class that inherits IDataReader.  \\n  \\n Classes that inherit IDataReader must implement the inherited members, and typically define additional members to add provider-specific functionality.  \\n  \\n Changes made to a result set by another process or thread while data is being read may be visible to the user of a class that implements an `IDataReader`. However, the precise behavior is both provider and timing dependent.\"\n  example:\n  - \"The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, and <xref:System.Data.SqlClient.SqlDataReader>. The example reads through the data, writing it out to the console. Finally, the example closes the <xref:System.Data.SqlClient.SqlDataReader>, then the <xref:System.Data.SqlClient.SqlConnection>.  \\n  \\n [!code-cs[Classic WebData SqlDataReader.Read Example#1](~/add/codesnippet/csharp/t-system.data.idatareader_1.cs)]\\n [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/add/codesnippet/visualbasic/t-system.data.idatareader_1.vb)]\"\n  syntax:\n    content: 'public interface IDataReader : IDisposable, System.Data.IDataRecord'\n  implements:\n  - System.Data.IDataRecord\n  - System.IDisposable\n  platform:\n  - net462\n- uid: System.Data.IDataReader.Close\n  id: Close\n  parent: System.Data.IDataReader\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: IDataReader.Close()\n  fullName: System.Data.IDataReader.Close()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Closes the <xref href=\"System.Data.IDataReader\"></xref> Object.\n  remarks: You must explicitly call the Close method when you are through using the <xref:System.Data.IDataReader> to use the associated <xref:System.Data.IDbConnection> for any other purpose.\n  syntax:\n    content: public void Close ();\n    parameters: []\n  overload: System.Data.IDataReader.Close*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.IDataReader.Depth\n  id: Depth\n  parent: System.Data.IDataReader\n  langs:\n  - csharp\n  name: Depth\n  nameWithType: IDataReader.Depth\n  fullName: System.Data.IDataReader.Depth\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets a value indicating the depth of nesting for the current row.\n  remarks: The outermost table has a depth of zero.\n  syntax:\n    content: public int Depth { get; }\n    return:\n      type: System.Int32\n      description: The level of nesting.\n  overload: System.Data.IDataReader.Depth*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.IDataReader.GetSchemaTable\n  id: GetSchemaTable\n  parent: System.Data.IDataReader\n  langs:\n  - csharp\n  name: GetSchemaTable()\n  nameWithType: IDataReader.GetSchemaTable()\n  fullName: System.Data.IDataReader.GetSchemaTable()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Returns a <xref href=\"System.Data.DataTable\"></xref> that describes the column metadata of the <xref href=\"System.Data.IDataReader\"></xref>.\n  remarks: \"The implementation of GetSchemaTable method for the .NET Framework Data Provider for OLE DB maps to the OLE DB IColumnsRowset::GetColumnsRowset method, while implementations for other .NET Framework data providers do not use an OLE DB provider layer. The order in which GetSchemaTable returns metadata about each column in a table, and the DataReader columns that are returned, vary depending on which data provider you use. The following table lists data providers and members that implement GetSchemaTable.  \\n  \\n|Data Provider|Member|  \\n|-------------------|------------|  \\n|.NET Data Provider for ODBC|<xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A?displayProperty=fullName>.|  \\n|.NET Data Provider for OLE DB|<xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A?displayProperty=fullName>.|  \\n|.NET Data Provider for Oracle|<xref:System.Data.OracleClient.OracleDataReader.GetSchemaTable%2A?displayProperty=fullName>.|  \\n|.NET Data Provider for SQL Server|<xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A?displayProperty=fullName>.|\"\n  syntax:\n    content: public System.Data.DataTable GetSchemaTable ();\n    parameters: []\n    return:\n      type: System.Data.DataTable\n      description: A <xref href=\"System.Data.DataTable\"></xref> that describes the column metadata.\n  overload: System.Data.IDataReader.GetSchemaTable*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Data.IDataReader\"></xref> is closed.\n  platform:\n  - net462\n- uid: System.Data.IDataReader.IsClosed\n  id: IsClosed\n  parent: System.Data.IDataReader\n  langs:\n  - csharp\n  name: IsClosed\n  nameWithType: IDataReader.IsClosed\n  fullName: System.Data.IDataReader.IsClosed\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets a value indicating whether the data reader is closed.\n  remarks: IsClosed and <xref:System.Data.IDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.IDataReader> is closed.\n  syntax:\n    content: public bool IsClosed { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the data reader is closed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.IDataReader.IsClosed*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.IDataReader.NextResult\n  id: NextResult\n  parent: System.Data.IDataReader\n  langs:\n  - csharp\n  name: NextResult()\n  nameWithType: IDataReader.NextResult()\n  fullName: System.Data.IDataReader.NextResult()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Advances the data reader to the next result, when reading the results of batch SQL statements.\n  remarks: \"Used to process multiple results, which can be obtained by executing batch SQL statements.  \\n  \\n By default, the data reader is positioned on the first result.  \\n  \\n [!code-vb[IDataReader_NextResult#1](~/add/codesnippet/visualbasic/m-system.data.idatareade_1_1.vb)]\\n [!code-cs[IDataReader_NextResult#1](~/add/codesnippet/csharp/m-system.data.idatareade_1_1.cs)]\"\n  syntax:\n    content: public bool NextResult ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if there are more rows; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.IDataReader.NextResult*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.IDataReader.Read\n  id: Read\n  parent: System.Data.IDataReader\n  langs:\n  - csharp\n  name: Read()\n  nameWithType: IDataReader.Read()\n  fullName: System.Data.IDataReader.Read()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Advances the <xref href=\"System.Data.IDataReader\"></xref> to the next record.\n  remarks: \"The default position of the <xref:System.Data.IDataReader> is prior to the first record. Therefore you must call Read to begin accessing any data.  \\n  \\n While the data reader is in use, the associated connection is busy serving the <xref:System.Data.IDataReader>. This is the case until <xref:System.Data.IDataReader.Close%2A> is called.\"\n  example:\n  - \"The following example creates instances of three derived classes <xref:System.Data.OleDb.OleDbConnection>, an <xref:System.Data.OleDb.OleDbCommand>, and an <xref:System.Data.OleDb.OleDbDataReader>. The example reads through the data, writing it out to the console. Finally, the example closes the <xref:System.Data.OleDb.OleDbDataReader>, then the <xref:System.Data.OleDb.OleDbConnection>.  \\n  \\n [!code-cs[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/csharp/m-system.data.idatareade_0_1.cs)]\\n [!code-vb[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/visualbasic/m-system.data.idatareade_0_1.vb)]\"\n  syntax:\n    content: public bool Read ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if there are more rows; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.IDataReader.Read*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.IDataReader.RecordsAffected\n  id: RecordsAffected\n  parent: System.Data.IDataReader\n  langs:\n  - csharp\n  name: RecordsAffected\n  nameWithType: IDataReader.RecordsAffected\n  fullName: System.Data.IDataReader.RecordsAffected\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.\n  remarks: \"The RecordsAffected property is not set until all rows are read and you close the <xref:System.Data.IDataReader>.  \\n  \\n <xref:System.Data.IDataReader.IsClosed%2A> and RecordsAffected are the only properties that you can call after the <xref:System.Data.IDataReader> is closed.\"\n  syntax:\n    content: public int RecordsAffected { get; }\n    return:\n      type: System.Int32\n      description: The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.\n  overload: System.Data.IDataReader.RecordsAffected*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Data.IDataReader.Close\n  parent: System.Data.IDataReader\n  isExternal: false\n  name: Close()\n  nameWithType: IDataReader.Close()\n  fullName: System.Data.IDataReader.Close()\n- uid: System.Data.IDataReader.Depth\n  parent: System.Data.IDataReader\n  isExternal: false\n  name: Depth\n  nameWithType: IDataReader.Depth\n  fullName: System.Data.IDataReader.Depth\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.IDataReader.GetSchemaTable\n  parent: System.Data.IDataReader\n  isExternal: false\n  name: GetSchemaTable()\n  nameWithType: IDataReader.GetSchemaTable()\n  fullName: System.Data.IDataReader.GetSchemaTable()\n- uid: System.Data.DataTable\n  parent: System.Data\n  isExternal: false\n  name: DataTable\n  nameWithType: DataTable\n  fullName: System.Data.DataTable\n- uid: System.Data.IDataReader.IsClosed\n  parent: System.Data.IDataReader\n  isExternal: false\n  name: IsClosed\n  nameWithType: IDataReader.IsClosed\n  fullName: System.Data.IDataReader.IsClosed\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.IDataReader.NextResult\n  parent: System.Data.IDataReader\n  isExternal: false\n  name: NextResult()\n  nameWithType: IDataReader.NextResult()\n  fullName: System.Data.IDataReader.NextResult()\n- uid: System.Data.IDataReader.Read\n  parent: System.Data.IDataReader\n  isExternal: false\n  name: Read()\n  nameWithType: IDataReader.Read()\n  fullName: System.Data.IDataReader.Read()\n- uid: System.Data.IDataReader.RecordsAffected\n  parent: System.Data.IDataReader\n  isExternal: false\n  name: RecordsAffected\n  nameWithType: IDataReader.RecordsAffected\n  fullName: System.Data.IDataReader.RecordsAffected\n- uid: System.Data.IDataReader.Close*\n  parent: System.Data.IDataReader\n  isExternal: false\n  name: Close\n  nameWithType: IDataReader.Close\n- uid: System.Data.IDataReader.Depth*\n  parent: System.Data.IDataReader\n  isExternal: false\n  name: Depth\n  nameWithType: IDataReader.Depth\n- uid: System.Data.IDataReader.GetSchemaTable*\n  parent: System.Data.IDataReader\n  isExternal: false\n  name: GetSchemaTable\n  nameWithType: IDataReader.GetSchemaTable\n- uid: System.Data.IDataReader.IsClosed*\n  parent: System.Data.IDataReader\n  isExternal: false\n  name: IsClosed\n  nameWithType: IDataReader.IsClosed\n- uid: System.Data.IDataReader.NextResult*\n  parent: System.Data.IDataReader\n  isExternal: false\n  name: NextResult\n  nameWithType: IDataReader.NextResult\n- uid: System.Data.IDataReader.Read*\n  parent: System.Data.IDataReader\n  isExternal: false\n  name: Read\n  nameWithType: IDataReader.Read\n- uid: System.Data.IDataReader.RecordsAffected*\n  parent: System.Data.IDataReader\n  isExternal: false\n  name: RecordsAffected\n  nameWithType: IDataReader.RecordsAffected\n"}