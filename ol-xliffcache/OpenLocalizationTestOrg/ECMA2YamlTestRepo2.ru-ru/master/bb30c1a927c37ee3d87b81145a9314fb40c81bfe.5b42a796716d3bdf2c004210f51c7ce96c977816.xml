{"nodes":[{"pos":[2489,2501],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2538,2550],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3751,3763],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4551,4563],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4624,4636],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5298,5310],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6177,6189],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7122,7134],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9009,9021],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9080,9092],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10068,10080],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11066,11078],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11137,11149],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12197,12209],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13234,13246],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13307,13319],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14262,14274],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15190,15202],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16182,16194],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  id: SortedDictionary`2.ValueCollection\n  children:\n  - System.Collections.Generic.SortedDictionary`2.ValueCollection.#ctor(System.Collections.Generic.SortedDictionary{`0,`1})\n  - System.Collections.Generic.SortedDictionary`2.ValueCollection.CopyTo(`1[],System.Int32)\n  - System.Collections.Generic.SortedDictionary`2.ValueCollection.Count\n  - System.Collections.Generic.SortedDictionary`2.ValueCollection.GetEnumerator\n  - System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Add(`1)\n  - System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Clear\n  - System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Contains(`1)\n  - System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#IsReadOnly\n  - System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Remove(`1)\n  - System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#IEnumerable{TValue}#GetEnumerator\n  - System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#ICollection#IsSynchronized\n  - System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#ICollection#SyncRoot\n  - System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#IEnumerable#GetEnumerator\n  langs:\n  - csharp\n  name: SortedDictionary<TKey,TValue>+ValueCollection\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection\n  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+ValueCollection\n  type: Class\n  syntax:\n    content: >-\n      [System.Diagnostics.DebuggerDisplay(\"Count = {Count}\")]\n\n      [System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.System_DictionaryValueCollectionDebugView`2))]\n\n      public sealed class SortedDictionary<TKey,TValue>.ValueCollection : System.Collections.Generic.ICollection<TValue>, System.Collections.Generic.IEnumerable<TValue>, System.Collections.Generic.IReadOnlyCollection<TValue>, System.Collections.ICollection\n    typeParameters:\n    - id: TKey\n      description: To be added.\n    - id: TValue\n      description: To be added.\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.ICollection<TValue>\n  - System.Collections.Generic.IEnumerable<TValue>\n  - System.Collections.Generic.IReadOnlyCollection<TValue>\n  - System.Collections.ICollection\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.#ctor(System.Collections.Generic.SortedDictionary{`0,`1})\n  id: '#ctor(System.Collections.Generic.SortedDictionary{`0,`1})'\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  langs:\n  - csharp\n  name: SortedDictionary(SortedDictionary<TKey,TValue>)\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.SortedDictionary(SortedDictionary<TKey,TValue>)\n  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+ValueCollection.SortedDictionary(SortedDictionary<TKey,TValue>)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Collections.Generic\n  syntax:\n    content: public ValueCollection (System.Collections.Generic.SortedDictionary<TKey,TValue> dictionary);\n    parameters:\n    - id: dictionary\n      type: System.Collections.Generic.SortedDictionary{TKey,TValue}\n      description: To be added.\n  overload: System.Collections.Generic.SortedDictionary`2.ValueCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.CopyTo(`1[],System.Int32)\n  id: CopyTo(`1[],System.Int32)\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  langs:\n  - csharp\n  name: CopyTo(TValue[],Int32)\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.CopyTo(TValue[],Int32)\n  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+ValueCollection.CopyTo(TValue[],Int32)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Generic\n  syntax:\n    content: public void CopyTo (TValue[] array, int index);\n    parameters:\n    - id: array\n      type: TValue[]\n      description: To be added.\n    - id: index\n      type: System.Int32\n      description: To be added.\n  overload: System.Collections.Generic.SortedDictionary`2.ValueCollection.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.Count\n  id: Count\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.Count\n  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+ValueCollection.Count\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Collections.Generic\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System.Collections.Generic.SortedDictionary`2.ValueCollection.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.GetEnumerator()\n  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+ValueCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Generic\n  syntax:\n    content: public System.Collections.Generic.SortedDictionary<TKey,TValue>.ValueCollection.Enumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator\n      description: To be added.\n  overload: System.Collections.Generic.SortedDictionary`2.ValueCollection.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Add(`1)\n  id: System#Collections#Generic#ICollection{TValue}#Add(`1)\n  isEii: true\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection(TValue)\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection(TValue)\n  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection(TValue)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Generic\n  syntax:\n    content: void ICollection<TValue>.Add (TValue item);\n    parameters:\n    - id: item\n      type: TValue\n      description: To be added.\n  overload: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection<TValue>#Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Clear\n  id: System#Collections#Generic#ICollection{TValue}#Clear\n  isEii: true\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection()\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection()\n  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Generic\n  syntax:\n    content: void ICollection<TValue>.Clear ();\n    parameters: []\n  overload: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection<TValue>#Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Contains(`1)\n  id: System#Collections#Generic#ICollection{TValue}#Contains(`1)\n  isEii: true\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection(TValue)\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection(TValue)\n  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection(TValue)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Generic\n  syntax:\n    content: bool ICollection<TValue>.Contains (TValue item);\n    parameters:\n    - id: item\n      type: TValue\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection<TValue>#Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#IsReadOnly\n  id: System#Collections#Generic#ICollection{TValue}#IsReadOnly\n  isEii: true\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection\n  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Collections.Generic\n  syntax:\n    content: bool System.Collections.Generic.ICollection<TValue>.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection<TValue>#IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Remove(`1)\n  id: System#Collections#Generic#ICollection{TValue}#Remove(`1)\n  isEii: true\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection(TValue)\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection(TValue)\n  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection(TValue)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Generic\n  syntax:\n    content: bool ICollection<TValue>.Remove (TValue item);\n    parameters:\n    - id: item\n      type: TValue\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection<TValue>#Remove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#IEnumerable{TValue}#GetEnumerator\n  id: System#Collections#Generic#IEnumerable{TValue}#GetEnumerator\n  isEii: true\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  langs:\n  - csharp\n  name: System.Collections.Generic.IEnumerable()\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.IEnumerable()\n  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.IEnumerable()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Generic\n  syntax:\n    content: System.Collections.Generic.IEnumerator<TValue> IEnumerable<TValue>.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{TValue}\n      description: To be added.\n  overload: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#IEnumerable<TValue>#GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Generic\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: To be added.\n    - id: index\n      type: System.Int32\n      description: To be added.\n  overload: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#ICollection#CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Collections.Generic\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#ICollection#IsSynchronized*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Collections.Generic\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: To be added.\n  overload: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#ICollection#SyncRoot*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Generic\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: To be added.\n  overload: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.#ctor(System.Collections.Generic.SortedDictionary{`0,`1})\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  isExternal: false\n  name: SortedDictionary(SortedDictionary<TKey,TValue>)\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.SortedDictionary(SortedDictionary<TKey,TValue>)\n  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+ValueCollection.SortedDictionary(SortedDictionary<TKey,TValue>)\n- uid: System.Collections.Generic.SortedDictionary{TKey,TValue}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: SortedDictionary<TKey,TValue>\n  nameWithType: SortedDictionary<TKey,TValue>\n  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>\n  spec.csharp:\n  - uid: System.Collections.Generic.SortedDictionary`2\n    name: SortedDictionary\n    nameWithType: SortedDictionary\n    fullName: SortedDictionary<TKey,TValue>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TKey\n    name: TKey\n    nameWithType: TKey\n    fullName: TKey\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TValue\n    name: TValue\n    nameWithType: TValue\n    fullName: TValue\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.CopyTo(`1[],System.Int32)\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  isExternal: false\n  name: CopyTo(TValue[],Int32)\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.CopyTo(TValue[],Int32)\n  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+ValueCollection.CopyTo(TValue[],Int32)\n- uid: TValue[]\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue[]\n  spec.csharp:\n  - uid: TValue\n    name: TValue\n    nameWithType: TValue\n    fullName: TValue[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.Count\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  isExternal: false\n  name: Count\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.Count\n  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+ValueCollection.Count\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.GetEnumerator\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.GetEnumerator()\n  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+ValueCollection.GetEnumerator()\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator\n  parent: System.Collections.Generic\n  isExternal: false\n  name: SortedDictionary<TKey,TValue>+ValueCollection+Enumerator\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection+Enumerator\n  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+ValueCollection+Enumerator\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Add(`1)\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection(TValue)\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection(TValue)\n  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection(TValue)\n- uid: TValue\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Clear\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection()\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection()\n  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection()\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Contains(`1)\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection(TValue)\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection(TValue)\n  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection(TValue)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#IsReadOnly\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection\n  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Remove(`1)\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection(TValue)\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection(TValue)\n  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection(TValue)\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#IEnumerable{TValue}#GetEnumerator\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  isExternal: false\n  name: System.Collections.Generic.IEnumerable()\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.IEnumerable()\n  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.IEnumerable()\n- uid: System.Collections.Generic.IEnumerator{TValue}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerator<TValue>\n  nameWithType: IEnumerator<TValue>\n  fullName: System.Collections.Generic.IEnumerator<TValue>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    nameWithType: IEnumerator\n    fullName: IEnumerator<TValue>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TValue\n    name: TValue\n    nameWithType: TValue\n    fullName: TValue\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: true\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#ICollection#IsSynchronized\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.IsSynchronized\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#ICollection#SyncRoot\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.SyncRoot\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.#ctor*\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  isExternal: false\n  name: SortedDictionary<TKey,TValue>+ValueCollection\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.SortedDictionary<TKey,TValue>+ValueCollection\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.CopyTo*\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.CopyTo\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.Count*\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  isExternal: false\n  name: Count\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.Count\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.GetEnumerator*\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.GetEnumerator\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection<TValue>#Add*\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection<TValue>.Add\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection<TValue>.Add\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection<TValue>#Clear*\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection<TValue>.Clear\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection<TValue>.Clear\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection<TValue>#Contains*\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection<TValue>.Contains\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection<TValue>.Contains\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection<TValue>#IsReadOnly*\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection<TValue>.IsReadOnly\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection<TValue>.IsReadOnly\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection<TValue>#Remove*\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection<TValue>.Remove\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection<TValue>.Remove\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#IEnumerable<TValue>#GetEnumerator*\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  isExternal: false\n  name: System.Collections.Generic.IEnumerable<TValue>.GetEnumerator\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.IEnumerable<TValue>.GetEnumerator\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#ICollection#CopyTo*\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.CopyTo\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#ICollection#IsSynchronized*\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.IsSynchronized\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#ICollection#SyncRoot*\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.SyncRoot\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: SortedDictionary<TKey,TValue>+ValueCollection.System.Collections.IEnumerable.GetEnumerator\n"}