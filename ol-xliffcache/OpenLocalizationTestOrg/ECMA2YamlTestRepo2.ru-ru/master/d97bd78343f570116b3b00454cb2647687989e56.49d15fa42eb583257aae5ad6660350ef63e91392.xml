{"nodes":[{"pos":[321,441],"content":"Represents the method that will handle the <xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed> attached event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the method that will handle the &lt;xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed&gt; attached event.","pos":[0,120],"source":"Represents the method that will handle the <xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed> attached event."}]},{"pos":[453,1330],"content":"Access keys in [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] are handled by a manager class that acts somewhat like a service for access keys, and forwards access key input to the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] input system. Rather than handling access key pressed events specifically by attaching a handler for the <xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed> attached event on a specific object, it is generally a better practice to associate the access key with a particular command through a command binding, and then handle the routed commands through the corresponding routed events. This technique provides a unified event system for user input regardless of what input mode initiated the input. For more information, see [Input Overview](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Access keys in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> are handled by a manager class that acts somewhat like a service for access keys, and forwards access key input to the <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> input system.","pos":[0,299],"source":"Access keys in [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] are handled by a manager class that acts somewhat like a service for access keys, and forwards access key input to the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] input system."},{"content":"Rather than handling access key pressed events specifically by attaching a handler for the &lt;xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed&gt; attached event on a specific object, it is generally a better practice to associate the access key with a particular command through a command binding, and then handle the routed commands through the corresponding routed events.","pos":[300,681],"source":" Rather than handling access key pressed events specifically by attaching a handler for the <xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed> attached event on a specific object, it is generally a better practice to associate the access key with a particular command through a command binding, and then handle the routed commands through the corresponding routed events."},{"content":"This technique provides a unified event system for user input regardless of what input mode initiated the input.","pos":[682,794]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Input Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[795,877],"source":" For more information, see [Input Overview](~/add/includes/ajax-current-ext-md.md)."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.AccessKeyPressedEventHandler\n  id: AccessKeyPressedEventHandler\n  langs:\n  - csharp\n  name: AccessKeyPressedEventHandler\n  nameWithType: AccessKeyPressedEventHandler\n  fullName: System.Windows.Input.AccessKeyPressedEventHandler\n  type: Delegate\n  summary: Represents the method that will handle the <xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed> attached event.\n  remarks: Access keys in [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] are handled by a manager class that acts somewhat like a service for access keys, and forwards access key input to the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] input system. Rather than handling access key pressed events specifically by attaching a handler for the <xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed> attached event on a specific object, it is generally a better practice to associate the access key with a particular command through a command binding, and then handle the routed commands through the corresponding routed events. This technique provides a unified event system for user input regardless of what input mode initiated the input. For more information, see [Input Overview](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public delegate void AccessKeyPressedEventHandler(object sender, AccessKeyPressedEventArgs e);\n  inheritance:\n  - System.Delegate\n  platform:\n  - net462\nreferences:\n- uid: System.Delegate\n  isExternal: false\n  name: System.Delegate\n"}