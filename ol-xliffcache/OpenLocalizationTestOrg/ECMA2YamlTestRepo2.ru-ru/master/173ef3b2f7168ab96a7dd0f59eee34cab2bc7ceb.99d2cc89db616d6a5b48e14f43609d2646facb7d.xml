{"nodes":[{"pos":[1509,1593],"content":"Specifies access rights for specific key containers. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies access rights for specific key containers. This class cannot be inherited.","pos":[0,84],"nodes":[{"content":"Specifies access rights for specific key containers.","pos":[0,52]},{"content":"This class cannot be inherited.","pos":[53,84]}]}]},{"pos":[1605,1774],"content":"This permission is intended to enable users to easily manage key containers when either a small number of keys is involved, or access is to be granted to only some keys.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This permission is intended to enable users to easily manage key containers when either a small number of keys is involved, or access is to be granted to only some keys.","pos":[0,169]}]},{"pos":[2857,3072],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, using the specified cryptographic service provider (CSP) parameters and access permissions.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> class, using the specified cryptographic service provider (CSP) parameters and access permissions."},{"pos":[3084,3238],"content":"This constructor allows access rights to be assigned for specific key containers identified in a <xref:System.Security.Cryptography.CspParameters> object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This constructor allows access rights to be assigned for specific key containers identified in a &lt;xref:System.Security.Cryptography.CspParameters&gt; object.","pos":[0,154],"source":"This constructor allows access rights to be assigned for specific key containers identified in a <xref:System.Security.Cryptography.CspParameters> object."}]},{"pos":[4025,4164],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CspParameters\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the cryptographic service provider (CSP) parameters.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.Cryptography.CspParameters\"></xref> object that contains the cryptographic service provider (CSP) parameters."},{"pos":[4268,4381],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values."},{"pos":[4571,4622],"content":"The resulting entry would have unrestricted access.","needQuote":true,"needEscape":true,"nodes":[{"content":"The resulting entry would have unrestricted access.","pos":[0,51]}]},{"pos":[5410,5596],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, using the specified key container name and access permissions.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> class, using the specified key container name and access permissions."},{"pos":[5608,5767],"content":"This constructor allows you to specify access rights for specific key containers identified by name; use an asterisk (\"*\") to represent all the key containers.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This constructor allows you to specify access rights for specific key containers identified by name; use an asterisk (\"*\") to represent all the key containers.","pos":[0,159]}]},{"pos":[6501,6531],"content":"The name of the key container.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the key container.","pos":[0,30]}]},{"pos":[6635,6748],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values."},{"pos":[6938,6989],"content":"The resulting entry would have unrestricted access.","needQuote":true,"needEscape":true,"nodes":[{"content":"The resulting entry would have unrestricted access.","pos":[0,51]}]},{"pos":[7963,8121],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified property values.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> class with the specified property values."},{"pos":[8133,8523],"content":"This constructor allows access rights to be assigned for specific key containers. A `keySpec` or `providerType` value of –1 represents all key specifications or provider types. A `keyStore`, `providerName`, or `keyContainerName` of \"*\" represents all key stores, providers, or key containers. A `providerName` or `keyContainerName` that is `null` represents all providers or key containers.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This constructor allows access rights to be assigned for specific key containers.","pos":[0,81]},{"content":"A <ph id=\"ph1\">`keySpec`</ph> or <ph id=\"ph2\">`providerType`</ph> value of –1 represents all key specifications or provider types.","pos":[82,176],"source":" A `keySpec` or `providerType` value of –1 represents all key specifications or provider types."},{"content":"A <ph id=\"ph1\">`keyStore`</ph>, <ph id=\"ph2\">`providerName`</ph>, or <ph id=\"ph3\">`keyContainerName`</ph> of \"*\" represents all key stores, providers, or key containers.","pos":[177,292],"source":" A `keyStore`, `providerName`, or `keyContainerName` of \"*\" represents all key stores, providers, or key containers."},{"content":"A <ph id=\"ph1\">`providerName`</ph> or <ph id=\"ph2\">`keyContainerName`</ph> that is <ph id=\"ph3\">`null`</ph> represents all providers or key containers.","pos":[293,390],"source":" A `providerName` or `keyContainerName` that is `null` represents all providers or key containers."}]},{"pos":[9318,9344],"content":"The name of the key store.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the key store.","pos":[0,26]}]},{"pos":[9413,9438],"content":"The name of the provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the provider.","pos":[0,25]}]},{"pos":[9506,9649],"content":"The type code for the provider. See the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType*> property for values.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type code for the provider. See the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType*> property for values.","pos":[0,143],"nodes":[{"content":"The type code for the provider.","pos":[0,31]},{"content":"See the &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType*&gt; property for values.","pos":[32,143],"source":" See the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType*> property for values."}]}]},{"pos":[9722,9752],"content":"The name of the key container.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the key container.","pos":[0,30]}]},{"pos":[9815,9944],"content":"The key specification. See the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec*> property for values.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key specification. See the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec*> property for values.","pos":[0,129],"nodes":[{"content":"The key specification.","pos":[0,22]},{"content":"See the &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec*&gt; property for values.","pos":[23,129],"source":" See the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec*> property for values."}]}]},{"pos":[10048,10161],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values."},{"pos":[10351,10402],"content":"The resulting entry would have unrestricted access.","needQuote":true,"needEscape":true,"nodes":[{"content":"The resulting entry would have unrestricted access.","pos":[0,51]}]},{"pos":[10908,11064],"content":"Determines whether the specified <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is equal to the current instance.","needQuote":true,"needEscape":true,"source":"Determines whether the specified <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> object is equal to the current instance."},{"pos":[11076,11237],"content":"The Equals method compares the properties of the two <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> objects to determine if they are equal.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Equals method compares the properties of the two &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntry&gt; objects to determine if they are equal.","pos":[0,161],"source":"The Equals method compares the properties of the two <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> objects to determine if they are equal."}]},{"pos":[11374,11504],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to compare with the currentinstance.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> object to compare with the currentinstance."},{"pos":[11563,11913],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified <bpt id=\"p2\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is equal to the current <bpt id=\"p3\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> object; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> is equal to the current <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12461,12504],"content":"Gets or sets the key container permissions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the key container permissions.","pos":[0,43]}]},{"pos":[12517,13237],"content":"> [!CAUTION] >  Many of these flags are powerful and permit access to key containers that should only be granted to highly trusted code.       The most powerful of the flags are <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, and <xref:System.Security.Permissions.KeyContainerPermissionFlags>. For specific threats posed by the use of these flags, see individual flag descriptions.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">&gt; [!CAUTION]</ph> &gt;  Many of these flags are powerful and permit access to key containers that should only be granted to highly trusted code.","pos":[0,136],"source":"> [!CAUTION] >  Many of these flags are powerful and permit access to key containers that should only be granted to highly trusted code."},{"content":"The most powerful of the flags are &lt;xref:System.Security.Permissions.KeyContainerPermissionFlags&gt;, &lt;xref:System.Security.Permissions.KeyContainerPermissionFlags&gt;, &lt;xref:System.Security.Permissions.KeyContainerPermissionFlags&gt;, &lt;xref:System.Security.Permissions.KeyContainerPermissionFlags&gt;, &lt;xref:System.Security.Permissions.KeyContainerPermissionFlags&gt;, &lt;xref:System.Security.Permissions.KeyContainerPermissionFlags&gt;, and &lt;xref:System.Security.Permissions.KeyContainerPermissionFlags&gt;.","pos":[143,629],"source":"       The most powerful of the flags are <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, and <xref:System.Security.Permissions.KeyContainerPermissionFlags>."},{"content":"For specific threats posed by the use of these flags, see individual flag descriptions.","pos":[630,717]}]},{"pos":[13444,13650],"content":"A bitwise combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values. The default is <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,113],"source":"A bitwise combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[114,206],"source":" The default is <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref>."}]},{"pos":[14231,14361],"content":"Gets a hash code for the current instance that is suitable for use in hashing algorithms and data structures such as a hash table.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a hash code for the current instance that is suitable for use in hashing algorithms and data structures such as a hash table.","pos":[0,130]}]},{"pos":[14373,14557],"content":"Serves as a hash function for the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>, suitable for use in hashing algorithms and data structures such as a hash table.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Serves as a hash function for the &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntry&gt;, suitable for use in hashing algorithms and data structures such as a hash table.","pos":[0,184],"source":"Serves as a hash function for the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>, suitable for use in hashing algorithms and data structures such as a hash table."}]},{"pos":[14692,14810],"content":"A hash code for the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A hash code for the current <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> object."},{"pos":[15418,15454],"content":"Gets or sets the key container name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the key container name.","pos":[0,36]}]},{"pos":[15466,15586],"content":"Use a value of \"*\" to apply the access entry to all key containers within the specified provider name and provider type.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use a value of \"*\" to apply the access entry to all key containers within the specified provider name and provider type.","pos":[0,120]}]},{"pos":[15712,15742],"content":"The name of the key container.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the key container.","pos":[0,30]}]},{"pos":[15943,15994],"content":"The resulting entry would have unrestricted access.","needQuote":true,"needEscape":true,"nodes":[{"content":"The resulting entry would have unrestricted access.","pos":[0,51]}]},{"pos":[16453,16488],"content":"Gets or sets the key specification.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the key specification.","pos":[0,35]}]},{"pos":[16500,16634],"content":"Valid values for this property are AT_KEYEXCHANGE (1) and AT_SIGNATURE (2). The default value is –1, representing all possible values.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Valid values for this property are AT_KEYEXCHANGE (1) and AT_SIGNATURE (2). The default value is –1, representing all possible values.","pos":[0,134],"nodes":[{"content":"Valid values for this property are AT_KEYEXCHANGE (1) and AT_SIGNATURE (2).","pos":[0,75]},{"content":"The default value is –1, representing all possible values.","pos":[76,134]}]}]},{"pos":[16747,16807],"content":"One of the AT_ values defined in the Wincrypt.h header file.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the AT_ values defined in the Wincrypt.h header file.","pos":[0,60]}]},{"pos":[16999,17050],"content":"The resulting entry would have unrestricted access.","needQuote":true,"needEscape":true,"nodes":[{"content":"The resulting entry would have unrestricted access.","pos":[0,51]}]},{"pos":[17514,17553],"content":"Gets or sets the name of the key store.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the key store.","pos":[0,39]}]},{"pos":[17565,17658],"content":"Valid values are \"User\", \"Machine\", or \"*\". If `null` is specified, the value is set to \"\\*\".","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Valid values are \"User\", \"Machine\", or \"*\".","pos":[0,43]},{"content":"If <ph id=\"ph1\">`null`</ph> is specified, the value is set to \"<ph id=\"ph2\">\\*</ph>\".","pos":[44,93],"source":" If `null` is specified, the value is set to \"\\*\"."}]},{"pos":[17776,17802],"content":"The name of the key store.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the key store.","pos":[0,26]}]},{"pos":[17995,18046],"content":"The resulting entry would have unrestricted access.","needQuote":true,"needEscape":true,"nodes":[{"content":"The resulting entry would have unrestricted access.","pos":[0,51]}]},{"pos":[18530,18561],"content":"Gets or sets the provider name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the provider name.","pos":[0,31]}]},{"pos":[18573,18724],"content":"An example of a provider name is \"Microsoft Enhanced Cryptographic Provider\". If `null` is specified, the enhanced cryptographic provider name is used.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"An example of a provider name is \"Microsoft Enhanced Cryptographic Provider\".","pos":[0,77]},{"content":"If <ph id=\"ph1\">`null`</ph> is specified, the enhanced cryptographic provider name is used.","pos":[78,151],"source":" If `null` is specified, the enhanced cryptographic provider name is used."}]},{"pos":[18846,18871],"content":"The name of the provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the provider.","pos":[0,25]}]},{"pos":[19068,19119],"content":"The resulting entry would have unrestricted access.","needQuote":true,"needEscape":true,"nodes":[{"content":"The resulting entry would have unrestricted access.","pos":[0,51]}]},{"pos":[19603,19634],"content":"Gets or sets the provider type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the provider type.","pos":[0,31]}]},{"pos":[20584,20646],"content":"One of the PROV_ values defined in the Wincrypt.h header file.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the PROV_ values defined in the Wincrypt.h header file.","pos":[0,62]}]},{"pos":[20843,20894],"content":"The resulting entry would have unrestricted access.","needQuote":true,"needEscape":true,"nodes":[{"content":"The resulting entry would have unrestricted access.","pos":[0,51]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  id: KeyContainerPermissionAccessEntry\n  children:\n  - System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.Security.Cryptography.CspParameters,System.Security.Permissions.KeyContainerPermissionFlags)\n  - System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.Security.Permissions.KeyContainerPermissionFlags)\n  - System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.String,System.Int32,System.String,System.Int32,System.Security.Permissions.KeyContainerPermissionFlags)\n  - System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals(System.Object)\n  - System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags\n  - System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode\n  - System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName\n  - System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec\n  - System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore\n  - System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName\n  - System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType\n  langs:\n  - csharp\n  name: KeyContainerPermissionAccessEntry\n  nameWithType: KeyContainerPermissionAccessEntry\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  type: Class\n  summary: Specifies access rights for specific key containers. This class cannot be inherited.\n  remarks: This permission is intended to enable users to easily manage key containers when either a small number of keys is involved, or access is to be granted to only some keys.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class KeyContainerPermissionAccessEntry\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.Security.Cryptography.CspParameters,System.Security.Permissions.KeyContainerPermissionFlags)\n  id: '#ctor(System.Security.Cryptography.CspParameters,System.Security.Permissions.KeyContainerPermissionFlags)'\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  langs:\n  - csharp\n  name: KeyContainerPermissionAccessEntry(CspParameters,KeyContainerPermissionFlags)\n  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(CspParameters,KeyContainerPermissionFlags)\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(CspParameters,KeyContainerPermissionFlags)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> class, using the specified cryptographic service provider (CSP) parameters and access permissions.\n  remarks: This constructor allows access rights to be assigned for specific key containers identified in a <xref:System.Security.Cryptography.CspParameters> object.\n  example:\n  - \"The following code example shows the use of the KeyContainerPermissionAccessEntry constructor.  \\n  \\n [!code-cs[System.Security.Permissions.KeyContainerPermission#3](~/add/codesnippet/csharp/c73d5ebe-2b51-40a4-b31f-_1.cs)]\\n [!code-cpp[System.Security.Permissions.KeyContainerPermission#3](~/add/codesnippet/cpp/c73d5ebe-2b51-40a4-b31f-_1.cpp)]\\n [!code-vb[System.Security.Permissions.KeyContainerPermission#3](~/add/codesnippet/visualbasic/c73d5ebe-2b51-40a4-b31f-_1.vb)]\"\n  syntax:\n    content: public KeyContainerPermissionAccessEntry (System.Security.Cryptography.CspParameters parameters, System.Security.Permissions.KeyContainerPermissionFlags flags);\n    parameters:\n    - id: parameters\n      type: System.Security.Cryptography.CspParameters\n      description: A <xref href=\"System.Security.Cryptography.CspParameters\"></xref> object that contains the cryptographic service provider (CSP) parameters.\n    - id: flags\n      type: System.Security.Permissions.KeyContainerPermissionFlags\n      description: A bitwise combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values.\n  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The resulting entry would have unrestricted access.\n  platform:\n  - net462\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.Security.Permissions.KeyContainerPermissionFlags)\n  id: '#ctor(System.String,System.Security.Permissions.KeyContainerPermissionFlags)'\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  langs:\n  - csharp\n  name: KeyContainerPermissionAccessEntry(String,KeyContainerPermissionFlags)\n  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String,KeyContainerPermissionFlags)\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String,KeyContainerPermissionFlags)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> class, using the specified key container name and access permissions.\n  remarks: This constructor allows you to specify access rights for specific key containers identified by name; use an asterisk (\"*\") to represent all the key containers.\n  example:\n  - \"The following code example shows the use of the KeyContainerPermissionAccessEntry constructor.  \\n  \\n [!code-cs[System.Security.Permissions.KeyContainerPermission#2](~/add/codesnippet/csharp/cbd63005-8ff3-44be-953b-_1.cs)]\\n [!code-cpp[System.Security.Permissions.KeyContainerPermission#2](~/add/codesnippet/cpp/cbd63005-8ff3-44be-953b-_1.cpp)]\\n [!code-vb[System.Security.Permissions.KeyContainerPermission#2](~/add/codesnippet/visualbasic/cbd63005-8ff3-44be-953b-_1.vb)]\"\n  syntax:\n    content: public KeyContainerPermissionAccessEntry (string keyContainerName, System.Security.Permissions.KeyContainerPermissionFlags flags);\n    parameters:\n    - id: keyContainerName\n      type: System.String\n      description: The name of the key container.\n    - id: flags\n      type: System.Security.Permissions.KeyContainerPermissionFlags\n      description: A bitwise combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values.\n  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The resulting entry would have unrestricted access.\n  platform:\n  - net462\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.String,System.Int32,System.String,System.Int32,System.Security.Permissions.KeyContainerPermissionFlags)\n  id: '#ctor(System.String,System.String,System.Int32,System.String,System.Int32,System.Security.Permissions.KeyContainerPermissionFlags)'\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  langs:\n  - csharp\n  name: KeyContainerPermissionAccessEntry(String,String,Int32,String,Int32,KeyContainerPermissionFlags)\n  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String,String,Int32,String,Int32,KeyContainerPermissionFlags)\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String,String,Int32,String,Int32,KeyContainerPermissionFlags)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> class with the specified property values.\n  remarks: This constructor allows access rights to be assigned for specific key containers. A `keySpec` or `providerType` value of –1 represents all key specifications or provider types. A `keyStore`, `providerName`, or `keyContainerName` of \"*\" represents all key stores, providers, or key containers. A `providerName` or `keyContainerName` that is `null` represents all providers or key containers.\n  example:\n  - \"The following code example shows the use of the KeyContainerPermissionAccessEntry constructor.  \\n  \\n [!code-cs[System.Security.Permissions.KeyContainerPermission#4](~/add/codesnippet/csharp/323ccea4-2c50-40e8-9276-_1.cs)]\\n [!code-cpp[System.Security.Permissions.KeyContainerPermission#4](~/add/codesnippet/cpp/323ccea4-2c50-40e8-9276-_1.cpp)]\\n [!code-vb[System.Security.Permissions.KeyContainerPermission#4](~/add/codesnippet/visualbasic/323ccea4-2c50-40e8-9276-_1.vb)]\"\n  syntax:\n    content: public KeyContainerPermissionAccessEntry (string keyStore, string providerName, int providerType, string keyContainerName, int keySpec, System.Security.Permissions.KeyContainerPermissionFlags flags);\n    parameters:\n    - id: keyStore\n      type: System.String\n      description: The name of the key store.\n    - id: providerName\n      type: System.String\n      description: The name of the provider.\n    - id: providerType\n      type: System.Int32\n      description: The type code for the provider. See the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType*> property for values.\n    - id: keyContainerName\n      type: System.String\n      description: The name of the key container.\n    - id: keySpec\n      type: System.Int32\n      description: The key specification. See the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec*> property for values.\n    - id: flags\n      type: System.Security.Permissions.KeyContainerPermissionFlags\n      description: A bitwise combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values.\n  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The resulting entry would have unrestricted access.\n  platform:\n  - net462\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: KeyContainerPermissionAccessEntry.Equals(Object)\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Determines whether the specified <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> object is equal to the current instance.\n  remarks: The Equals method compares the properties of the two <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> objects to determine if they are equal.\n  syntax:\n    content: public override bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: The <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> object to compare with the currentinstance.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> is equal to the current <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags\n  id: Flags\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  langs:\n  - csharp\n  name: Flags\n  nameWithType: KeyContainerPermissionAccessEntry.Flags\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Gets or sets the key container permissions.\n  remarks: \"> [!CAUTION]\\n>  Many of these flags are powerful and permit access to key containers that should only be granted to highly trusted code.  \\n  \\n The most powerful of the flags are <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, and <xref:System.Security.Permissions.KeyContainerPermissionFlags>. For specific threats posed by the use of these flags, see individual flag descriptions.\"\n  syntax:\n    content: public System.Security.Permissions.KeyContainerPermissionFlags Flags { get; set; }\n    return:\n      type: System.Security.Permissions.KeyContainerPermissionFlags\n      description: A bitwise combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values. The default is <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref>.\n  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode\n  id: GetHashCode\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: KeyContainerPermissionAccessEntry.GetHashCode()\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Gets a hash code for the current instance that is suitable for use in hashing algorithms and data structures such as a hash table.\n  remarks: Serves as a hash function for the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>, suitable for use in hashing algorithms and data structures such as a hash table.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for the current <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> object.\n  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName\n  id: KeyContainerName\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  langs:\n  - csharp\n  name: KeyContainerName\n  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerName\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Gets or sets the key container name.\n  remarks: Use a value of \"*\" to apply the access entry to all key containers within the specified provider name and provider type.\n  syntax:\n    content: public string KeyContainerName { get; set; }\n    return:\n      type: System.String\n      description: The name of the key container.\n  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The resulting entry would have unrestricted access.\n  platform:\n  - net462\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec\n  id: KeySpec\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  langs:\n  - csharp\n  name: KeySpec\n  nameWithType: KeyContainerPermissionAccessEntry.KeySpec\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Gets or sets the key specification.\n  remarks: Valid values for this property are AT_KEYEXCHANGE (1) and AT_SIGNATURE (2). The default value is –1, representing all possible values.\n  syntax:\n    content: public int KeySpec { get; set; }\n    return:\n      type: System.Int32\n      description: One of the AT_ values defined in the Wincrypt.h header file.\n  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The resulting entry would have unrestricted access.\n  platform:\n  - net462\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore\n  id: KeyStore\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  langs:\n  - csharp\n  name: KeyStore\n  nameWithType: KeyContainerPermissionAccessEntry.KeyStore\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Gets or sets the name of the key store.\n  remarks: Valid values are \"User\", \"Machine\", or \"*\". If `null` is specified, the value is set to \"\\*\".\n  syntax:\n    content: public string KeyStore { get; set; }\n    return:\n      type: System.String\n      description: The name of the key store.\n  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The resulting entry would have unrestricted access.\n  platform:\n  - net462\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName\n  id: ProviderName\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  langs:\n  - csharp\n  name: ProviderName\n  nameWithType: KeyContainerPermissionAccessEntry.ProviderName\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Gets or sets the provider name.\n  remarks: An example of a provider name is \"Microsoft Enhanced Cryptographic Provider\". If `null` is specified, the enhanced cryptographic provider name is used.\n  syntax:\n    content: public string ProviderName { get; set; }\n    return:\n      type: System.String\n      description: The name of the provider.\n  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The resulting entry would have unrestricted access.\n  platform:\n  - net462\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType\n  id: ProviderType\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  langs:\n  - csharp\n  name: ProviderType\n  nameWithType: KeyContainerPermissionAccessEntry.ProviderType\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Gets or sets the provider type.\n  remarks: \"The default value is –1, representing all possible values.  \\n  \\n The Wincrypt.h header file defines the following values:  \\n  \\n-   \\\\#define PROV_RSA_FULL 1  \\n  \\n-   \\\\#define PROV_RSA_SIG 2  \\n  \\n-   \\\\#define PROV_DSS 3  \\n  \\n-   \\\\#define PROV_FORTEZZA 4  \\n  \\n-   \\\\#define PROV_MS_EXCHANGE 5  \\n  \\n-   \\\\#define PROV_SSL 6  \\n  \\n-   \\\\#define PROV_RSA_SCHANNEL 12  \\n  \\n-   \\\\#define PROV_DSS_DH 13  \\n  \\n-   \\\\#define PROV_EC_ECDSA_SIG 14  \\n  \\n-   \\\\#define PROV_EC_ECNRA_SIG 15  \\n  \\n-   \\\\#define PROV_EC_ECDSA_FULL 16  \\n  \\n-   \\\\#define PROV_EC_ECNRA_FULL 17  \\n  \\n-   \\\\#define PROV_DH_SCHANNEL 18  \\n  \\n-   \\\\#define PROV_SPYRUS_LYNKS 20  \\n  \\n-   \\\\#define PROV_RNG 21  \\n  \\n-   \\\\#define PROV_INTEL_SEC 22  \\n  \\n-   \\\\#define PROV_REPLACE_OWF 23  \\n  \\n-   \\\\#define PROV_RSA_AES 24\"\n  syntax:\n    content: public int ProviderType { get; set; }\n    return:\n      type: System.Int32\n      description: One of the PROV_ values defined in the Wincrypt.h header file.\n  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The resulting entry would have unrestricted access.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.Security.Cryptography.CspParameters,System.Security.Permissions.KeyContainerPermissionFlags)\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: KeyContainerPermissionAccessEntry(CspParameters,KeyContainerPermissionFlags)\n  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(CspParameters,KeyContainerPermissionFlags)\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(CspParameters,KeyContainerPermissionFlags)\n- uid: System.Security.Cryptography.CspParameters\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CspParameters\n  nameWithType: CspParameters\n  fullName: System.Security.Cryptography.CspParameters\n- uid: System.Security.Permissions.KeyContainerPermissionFlags\n  parent: System.Security.Permissions\n  isExternal: false\n  name: KeyContainerPermissionFlags\n  nameWithType: KeyContainerPermissionFlags\n  fullName: System.Security.Permissions.KeyContainerPermissionFlags\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.Security.Permissions.KeyContainerPermissionFlags)\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: KeyContainerPermissionAccessEntry(String,KeyContainerPermissionFlags)\n  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String,KeyContainerPermissionFlags)\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String,KeyContainerPermissionFlags)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.String,System.Int32,System.String,System.Int32,System.Security.Permissions.KeyContainerPermissionFlags)\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: KeyContainerPermissionAccessEntry(String,String,Int32,String,Int32,KeyContainerPermissionFlags)\n  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String,String,Int32,String,Int32,KeyContainerPermissionFlags)\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String,String,Int32,String,Int32,KeyContainerPermissionFlags)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals(System.Object)\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: KeyContainerPermissionAccessEntry.Equals(Object)\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: Flags\n  nameWithType: KeyContainerPermissionAccessEntry.Flags\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: KeyContainerPermissionAccessEntry.GetHashCode()\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode()\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: KeyContainerName\n  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerName\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: KeySpec\n  nameWithType: KeyContainerPermissionAccessEntry.KeySpec\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: KeyStore\n  nameWithType: KeyContainerPermissionAccessEntry.KeyStore\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: ProviderName\n  nameWithType: KeyContainerPermissionAccessEntry.ProviderName\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: ProviderType\n  nameWithType: KeyContainerPermissionAccessEntry.ProviderType\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor*\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: KeyContainerPermissionAccessEntry\n  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals*\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: Equals\n  nameWithType: KeyContainerPermissionAccessEntry.Equals\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags*\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: Flags\n  nameWithType: KeyContainerPermissionAccessEntry.Flags\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode*\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: GetHashCode\n  nameWithType: KeyContainerPermissionAccessEntry.GetHashCode\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName*\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: KeyContainerName\n  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerName\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec*\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: KeySpec\n  nameWithType: KeyContainerPermissionAccessEntry.KeySpec\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore*\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: KeyStore\n  nameWithType: KeyContainerPermissionAccessEntry.KeyStore\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName*\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: ProviderName\n  nameWithType: KeyContainerPermissionAccessEntry.ProviderName\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType*\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: ProviderType\n  nameWithType: KeyContainerPermissionAccessEntry.ProviderType\n"}