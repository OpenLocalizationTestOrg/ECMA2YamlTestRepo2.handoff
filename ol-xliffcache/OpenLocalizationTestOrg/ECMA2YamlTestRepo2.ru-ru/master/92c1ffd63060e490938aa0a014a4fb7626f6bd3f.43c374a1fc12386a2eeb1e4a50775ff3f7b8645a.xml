{"nodes":[{"pos":[976,1011],"content":"Represents a user or group account.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a user or group account.","pos":[0,35]}]},{"pos":[2011,2136],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by using the specified name.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Principal.NTAccount\"></xref> class by using the specified name."},{"pos":[2148,2382],"content":"The specified name is not required to correspond to an existing account or group, but translation into other <xref:System.Security.Principal.IdentityReference>-derived types will not be possible unless the account or group does exist.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The specified name is not required to correspond to an existing account or group, but translation into other &lt;xref:System.Security.Principal.IdentityReference&gt;-derived types will not be possible unless the account or group does exist.","pos":[0,234],"source":"The specified name is not required to correspond to an existing account or group, but translation into other <xref:System.Security.Principal.IdentityReference>-derived types will not be possible unless the account or group does exist."}]},{"pos":[2514,2712],"content":"The name used to create the <xref href=\"System.Security.Principal.NTAccount\"></xref> object. This parameter cannot be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name used to create the <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[0,92],"source":"The name used to create the <xref href=\"System.Security.Principal.NTAccount\"></xref> object."},{"content":"This parameter cannot be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or an empty string.","pos":[93,198],"source":" This parameter cannot be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string."}]},{"pos":[2884,2966],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>name</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[3062,3151],"content":"<code>name</code> is an empty string.       -or-       <code>name</code> is too long.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is an empty string.","pos":[0,37],"source":"<code>name</code> is an empty string."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is too long.","pos":[44,85],"source":"       -or-       <code>name</code> is too long."}]},{"pos":[3617,3766],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by using the specified domain name and account name.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Principal.NTAccount\"></xref> class by using the specified domain name and account name."},{"pos":[3778,4033],"content":"The specified domain and account names are not required to correspond to an existing account or group, but translation into other <xref:System.Security.Principal.IdentityReference>-derived types will not be possible unless the account or group does exist.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The specified domain and account names are not required to correspond to an existing account or group, but translation into other &lt;xref:System.Security.Principal.IdentityReference&gt;-derived types will not be possible unless the account or group does exist.","pos":[0,255],"source":"The specified domain and account names are not required to correspond to an existing account or group, but translation into other <xref:System.Security.Principal.IdentityReference>-derived types will not be possible unless the account or group does exist."}]},{"pos":[4197,4391],"content":"The name of the domain. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string. Domain names that are null values are treated like an empty string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the domain.","pos":[0,23]},{"content":"This parameter can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or an empty string.","pos":[24,126],"source":" This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string."},{"content":"Domain names that are null values are treated like an empty string.","pos":[127,194]}]},{"pos":[4459,4589],"content":"The name of the account. This parameter cannot be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the account.","pos":[0,24]},{"content":"This parameter cannot be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or an empty string.","pos":[25,130],"source":" This parameter cannot be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string."}]},{"pos":[4761,4850],"content":"<ph id=\"ph1\">&lt;code&gt;accountName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>accountName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[4946,5107],"content":"<code>accountName</code> is an empty string.       -or-       <code>accountName</code> is too long.       -or-       <code>domainName</code> is too long.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;accountName&lt;/code&gt;</ph> is an empty string.","pos":[0,44],"source":"<code>accountName</code> is an empty string."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;accountName&lt;/code&gt;</ph> is too long.","pos":[51,99],"source":"       -or-       <code>accountName</code> is too long."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;domainName&lt;/code&gt;</ph> is too long.","pos":[106,153],"source":"       -or-       <code>domainName</code> is too long."}]},{"pos":[5510,5649],"content":"Returns a value that indicates whether this <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is equal to a specified object.","needQuote":true,"needEscape":true,"source":"Returns a value that indicates whether this <xref href=\"System.Security.Principal.NTAccount\"></xref> object is equal to a specified object."},{"pos":[5786,5946],"content":"An object to compare with this <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object, or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An object to compare with this <xref href=\"System.Security.Principal.NTAccount\"></xref> object, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[6005,6284],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">o</ph><ept id=\"p2\">&lt;/code&gt;</ept> is an object with the same underlying type and value as this <bpt id=\"p3\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> object; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>o</code> is an object with the same underlying type and value as this <xref href=\"System.Security.Principal.NTAccount\"></xref> object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6736,6939],"content":"Serves as a hash function for the current <xref href=\"System.Security.Principal.NTAccount\"></xref> object. The GetHashCode method is suitable for hashing algorithms and data structures like a hash table.","needQuote":true,"needEscape":true,"nodes":[{"content":"Serves as a hash function for the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[0,106],"source":"Serves as a hash function for the current <xref href=\"System.Security.Principal.NTAccount\"></xref> object."},{"content":"The GetHashCode method is suitable for hashing algorithms and data structures like a hash table.","pos":[107,203]}]},{"pos":[7074,7167],"content":"A hash value for the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A hash value for the current <xref href=\"System.Security.Principal.NTAccount\"></xref> object."},{"pos":[7692,7849],"content":"Returns a value that indicates whether the specified type is a valid translation type for the <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Returns a value that indicates whether the specified type is a valid translation type for the <xref href=\"System.Security.Principal.NTAccount\"></xref> class."},{"pos":[8386,8647],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">targetType</ph><ept id=\"p2\">&lt;/code&gt;</ept> is a valid translation type for the <bpt id=\"p3\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> class; otherwise <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>targetType</code> is a valid translation type for the <xref href=\"System.Security.Principal.NTAccount\"></xref> class; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9315,9675],"content":"Compares two <xref href=\"System.Security.Principal.NTAccount\"></xref> objects to determine whether they are equal. They are considered equal if they have the same canonical name representation as the one returned by the <xref:System.Security.Principal.NTAccount.Value*> property or if they are both <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects to determine whether they are equal.","pos":[0,114],"source":"Compares two <xref href=\"System.Security.Principal.NTAccount\"></xref> objects to determine whether they are equal."},{"content":"They are considered equal if they have the same canonical name representation as the one returned by the &lt;xref:System.Security.Principal.NTAccount.Value*&gt; property or if they are both <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[115,360],"source":" They are considered equal if they have the same canonical name representation as the one returned by the <xref:System.Security.Principal.NTAccount.Value*> property or if they are both <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[9915,10051],"content":"The left operand to use for the equality comparison. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The left operand to use for the equality comparison.","pos":[0,52]},{"content":"This parameter can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[53,136],"source":" This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[10135,10272],"content":"The right operand to use for the equality comparison. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The right operand to use for the equality comparison.","pos":[0,53]},{"content":"This parameter can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[54,137],"source":" This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[10331,10520],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">right</ph><ept id=\"p3\">&lt;/code&gt;</ept> are equal; otherwise <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>left</code> and <code>right</code> are equal; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11192,11593],"content":"Compares two <xref href=\"System.Security.Principal.NTAccount\"></xref> objects to determine whether they are not equal. They are considered not equal if they have different canonical name representations than the one returned by the <xref:System.Security.Principal.NTAccount.Value*> property or if one of the objects is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and the other is not.","needQuote":true,"needEscape":true,"nodes":[{"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects to determine whether they are not equal.","pos":[0,118],"source":"Compares two <xref href=\"System.Security.Principal.NTAccount\"></xref> objects to determine whether they are not equal."},{"content":"They are considered not equal if they have different canonical name representations than the one returned by the &lt;xref:System.Security.Principal.NTAccount.Value*&gt; property or if one of the objects is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and the other is not.","pos":[119,401],"source":" They are considered not equal if they have different canonical name representations than the one returned by the <xref:System.Security.Principal.NTAccount.Value*> property or if one of the objects is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and the other is not."}]},{"pos":[11835,11973],"content":"The left operand to use for the inequality comparison. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The left operand to use for the inequality comparison.","pos":[0,54]},{"content":"This parameter can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[55,138],"source":" This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[12057,12196],"content":"The right operand to use for the inequality comparison. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The right operand to use for the inequality comparison.","pos":[0,55]},{"content":"This parameter can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[56,139],"source":" This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[12255,12448],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">right</ph><ept id=\"p3\">&lt;/code&gt;</ept> are not equal; otherwise <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>left</code> and <code>right</code> are not equal; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12892,13054],"content":"Returns the account name, in <bpt id=\"p1\">*</bpt>Domain<ept id=\"p1\">*</ept> <bpt id=\"p2\">**</bpt><ph id=\"ph1\">\\\\</ph><ept id=\"p2\">**</ept> <bpt id=\"p3\">*</bpt>Account<ept id=\"p3\">*</ept> format, for the account represented by the <bpt id=\"p4\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Returns the account name, in *Domain* **\\\\** *Account* format, for the account represented by the <xref href=\"System.Security.Principal.NTAccount\"></xref> object."},{"pos":[13190,13244],"content":"The account name, in <bpt id=\"p1\">*</bpt>Domain<ept id=\"p1\">*</ept> <bpt id=\"p2\">**</bpt><ph id=\"ph1\">\\\\</ph><ept id=\"p2\">**</ept> <bpt id=\"p3\">*</bpt>Account<ept id=\"p3\">*</ept> format.","needQuote":true,"needEscape":true,"source":"The account name, in *Domain* **\\\\** *Account* format."},{"pos":[13726,13928],"content":"Translates the account name represented by the <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object into another <bpt id=\"p2\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>-derived type.","needQuote":true,"needEscape":true,"source":"Translates the account name represented by the <xref href=\"System.Security.Principal.NTAccount\"></xref> object into another <xref href=\"System.Security.Principal.IdentityReference\"></xref>-derived type."},{"pos":[14121,14351],"content":"The target type for the conversion from <xref href=\"System.Security.Principal.NTAccount\"></xref>. The target type must be a type that is considered valid by the <xref:System.Security.Principal.NTAccount.IsValidTargetType*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target type for the conversion from <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,97],"source":"The target type for the conversion from <xref href=\"System.Security.Principal.NTAccount\"></xref>."},{"content":"The target type must be a type that is considered valid by the &lt;xref:System.Security.Principal.NTAccount.IsValidTargetType*&gt; method.","pos":[98,230],"source":" The target type must be a type that is considered valid by the <xref:System.Security.Principal.NTAccount.IsValidTargetType*> method."}]},{"pos":[14439,14462],"content":"The converted identity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The converted identity.","pos":[0,23]}]},{"pos":[14638,14726],"content":"<ph id=\"ph1\">&lt;code&gt;targetType &lt;/code&gt;</ph>is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>targetType </code>is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[14821,14925],"content":"<ph id=\"ph1\">&lt;code&gt;targetType &lt;/code&gt;</ph>is not an <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> type.","needQuote":true,"needEscape":true,"source":"<code>targetType </code>is not an <xref href=\"System.Security.Principal.IdentityReference\"></xref> type."},{"pos":[15076,15132],"content":"Some or all identity references could not be translated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Some or all identity references could not be translated.","pos":[0,56]}]},{"pos":[15224,15314],"content":"The source account name is too long.       -or-       A Win32 error code was returned.","needQuote":false,"needEscape":true,"nodes":[{"content":"The source account name is too long.       -or-       A Win32 error code was returned.","pos":[0,86],"nodes":[{"content":"The source account name is too long.","pos":[0,36]},{"content":"-or-       A Win32 error code was returned.","pos":[43,86]}]}]},{"pos":[15660,15775],"content":"Returns an uppercase string representation of this <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Returns an uppercase string representation of this <xref href=\"System.Security.Principal.NTAccount\"></xref> object."},{"pos":[15894,16002],"content":"The uppercase string representation of this <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The uppercase string representation of this <xref href=\"System.Security.Principal.NTAccount\"></xref> object."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Principal.NTAccount\n  id: NTAccount\n  children:\n  - System.Security.Principal.NTAccount.#ctor(System.String)\n  - System.Security.Principal.NTAccount.#ctor(System.String,System.String)\n  - System.Security.Principal.NTAccount.Equals(System.Object)\n  - System.Security.Principal.NTAccount.GetHashCode\n  - System.Security.Principal.NTAccount.IsValidTargetType(System.Type)\n  - System.Security.Principal.NTAccount.op_Equality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)\n  - System.Security.Principal.NTAccount.op_Inequality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)\n  - System.Security.Principal.NTAccount.ToString\n  - System.Security.Principal.NTAccount.Translate(System.Type)\n  - System.Security.Principal.NTAccount.Value\n  langs:\n  - csharp\n  name: NTAccount\n  nameWithType: NTAccount\n  fullName: System.Security.Principal.NTAccount\n  type: Class\n  summary: Represents a user or group account.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public sealed class NTAccount : System.Security.Principal.IdentityReference\n  inheritance:\n  - System.Object\n  - System.Security.Principal.IdentityReference\n  implements: []\n  inheritedMembers:\n  - System.Security.Principal.IdentityReference.op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)\n  - System.Security.Principal.IdentityReference.op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)\n  platform:\n  - net462\n- uid: System.Security.Principal.NTAccount.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Security.Principal.NTAccount\n  langs:\n  - csharp\n  name: NTAccount(String)\n  nameWithType: NTAccount.NTAccount(String)\n  fullName: System.Security.Principal.NTAccount.NTAccount(String)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Initializes a new instance of the <xref href=\"System.Security.Principal.NTAccount\"></xref> class by using the specified name.\n  remarks: The specified name is not required to correspond to an existing account or group, but translation into other <xref:System.Security.Principal.IdentityReference>-derived types will not be possible unless the account or group does exist.\n  syntax:\n    content: public NTAccount (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name used to create the <xref href=\"System.Security.Principal.NTAccount\"></xref> object. This parameter cannot be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string.\n  overload: System.Security.Principal.NTAccount.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>name</code> is an empty string.  \\n  \\n -or-  \\n  \\n <code>name</code> is too long.\"\n  platform:\n  - net462\n- uid: System.Security.Principal.NTAccount.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.Security.Principal.NTAccount\n  langs:\n  - csharp\n  name: NTAccount(String,String)\n  nameWithType: NTAccount.NTAccount(String,String)\n  fullName: System.Security.Principal.NTAccount.NTAccount(String,String)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Initializes a new instance of the <xref href=\"System.Security.Principal.NTAccount\"></xref> class by using the specified domain name and account name.\n  remarks: The specified domain and account names are not required to correspond to an existing account or group, but translation into other <xref:System.Security.Principal.IdentityReference>-derived types will not be possible unless the account or group does exist.\n  syntax:\n    content: public NTAccount (string domainName, string accountName);\n    parameters:\n    - id: domainName\n      type: System.String\n      description: The name of the domain. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string. Domain names that are null values are treated like an empty string.\n    - id: accountName\n      type: System.String\n      description: The name of the account. This parameter cannot be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string.\n  overload: System.Security.Principal.NTAccount.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>accountName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>accountName</code> is an empty string.  \\n  \\n -or-  \\n  \\n <code>accountName</code> is too long.  \\n  \\n -or-  \\n  \\n <code>domainName</code> is too long.\"\n  platform:\n  - net462\n- uid: System.Security.Principal.NTAccount.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Security.Principal.NTAccount\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: NTAccount.Equals(Object)\n  fullName: System.Security.Principal.NTAccount.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Returns a value that indicates whether this <xref href=\"System.Security.Principal.NTAccount\"></xref> object is equal to a specified object.\n  syntax:\n    content: public override bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: An object to compare with this <xref href=\"System.Security.Principal.NTAccount\"></xref> object, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>o</code> is an object with the same underlying type and value as this <xref href=\"System.Security.Principal.NTAccount\"></xref> object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Principal.NTAccount.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Principal.NTAccount.GetHashCode\n  id: GetHashCode\n  parent: System.Security.Principal.NTAccount\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: NTAccount.GetHashCode()\n  fullName: System.Security.Principal.NTAccount.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Serves as a hash function for the current <xref href=\"System.Security.Principal.NTAccount\"></xref> object. The GetHashCode method is suitable for hashing algorithms and data structures like a hash table.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash value for the current <xref href=\"System.Security.Principal.NTAccount\"></xref> object.\n  overload: System.Security.Principal.NTAccount.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Principal.NTAccount.IsValidTargetType(System.Type)\n  id: IsValidTargetType(System.Type)\n  parent: System.Security.Principal.NTAccount\n  langs:\n  - csharp\n  name: IsValidTargetType(Type)\n  nameWithType: NTAccount.IsValidTargetType(Type)\n  fullName: System.Security.Principal.NTAccount.IsValidTargetType(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Returns a value that indicates whether the specified type is a valid translation type for the <xref href=\"System.Security.Principal.NTAccount\"></xref> class.\n  syntax:\n    content: public override bool IsValidTargetType (Type targetType);\n    parameters:\n    - id: targetType\n      type: System.Type\n      description: \"The type being queried for validity to serve as a conversion from <xref href=\\\"System.Security.Principal.NTAccount\\\"></xref>. The following target types are valid:  \\n  \\n \\\\- <xref href=\\\"System.Security.Principal.NTAccount\\\"></xref>  \\n  \\n \\\\- <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\"></xref>\"\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>targetType</code> is a valid translation type for the <xref href=\"System.Security.Principal.NTAccount\"></xref> class; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Principal.NTAccount.IsValidTargetType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Principal.NTAccount.op_Equality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)\n  id: op_Equality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)\n  parent: System.Security.Principal.NTAccount\n  langs:\n  - csharp\n  name: op_Equality(NTAccount,NTAccount)\n  nameWithType: NTAccount.op_Equality(NTAccount,NTAccount)\n  fullName: System.Security.Principal.NTAccount.op_Equality(NTAccount,NTAccount)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Compares two <xref href=\"System.Security.Principal.NTAccount\"></xref> objects to determine whether they are equal. They are considered equal if they have the same canonical name representation as the one returned by the <xref:System.Security.Principal.NTAccount.Value*> property or if they are both <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  syntax:\n    content: public static bool op_Equality (System.Security.Principal.NTAccount left, System.Security.Principal.NTAccount right);\n    parameters:\n    - id: left\n      type: System.Security.Principal.NTAccount\n      description: The left operand to use for the equality comparison. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    - id: right\n      type: System.Security.Principal.NTAccount\n      description: The right operand to use for the equality comparison. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>left</code> and <code>right</code> are equal; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Principal.NTAccount.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Principal.NTAccount.op_Inequality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)\n  id: op_Inequality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)\n  parent: System.Security.Principal.NTAccount\n  langs:\n  - csharp\n  name: op_Inequality(NTAccount,NTAccount)\n  nameWithType: NTAccount.op_Inequality(NTAccount,NTAccount)\n  fullName: System.Security.Principal.NTAccount.op_Inequality(NTAccount,NTAccount)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Compares two <xref href=\"System.Security.Principal.NTAccount\"></xref> objects to determine whether they are not equal. They are considered not equal if they have different canonical name representations than the one returned by the <xref:System.Security.Principal.NTAccount.Value*> property or if one of the objects is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and the other is not.\n  syntax:\n    content: public static bool op_Inequality (System.Security.Principal.NTAccount left, System.Security.Principal.NTAccount right);\n    parameters:\n    - id: left\n      type: System.Security.Principal.NTAccount\n      description: The left operand to use for the inequality comparison. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    - id: right\n      type: System.Security.Principal.NTAccount\n      description: The right operand to use for the inequality comparison. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>left</code> and <code>right</code> are not equal; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Principal.NTAccount.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Principal.NTAccount.ToString\n  id: ToString\n  parent: System.Security.Principal.NTAccount\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: NTAccount.ToString()\n  fullName: System.Security.Principal.NTAccount.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Returns the account name, in *Domain* **\\\\** *Account* format, for the account represented by the <xref href=\"System.Security.Principal.NTAccount\"></xref> object.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The account name, in *Domain* **\\\\** *Account* format.\n  overload: System.Security.Principal.NTAccount.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Principal.NTAccount.Translate(System.Type)\n  id: Translate(System.Type)\n  parent: System.Security.Principal.NTAccount\n  langs:\n  - csharp\n  name: Translate(Type)\n  nameWithType: NTAccount.Translate(Type)\n  fullName: System.Security.Principal.NTAccount.Translate(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Translates the account name represented by the <xref href=\"System.Security.Principal.NTAccount\"></xref> object into another <xref href=\"System.Security.Principal.IdentityReference\"></xref>-derived type.\n  syntax:\n    content: public override System.Security.Principal.IdentityReference Translate (Type targetType);\n    parameters:\n    - id: targetType\n      type: System.Type\n      description: The target type for the conversion from <xref href=\"System.Security.Principal.NTAccount\"></xref>. The target type must be a type that is considered valid by the <xref:System.Security.Principal.NTAccount.IsValidTargetType*> method.\n    return:\n      type: System.Security.Principal.IdentityReference\n      description: The converted identity.\n  overload: System.Security.Principal.NTAccount.Translate*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetType </code>is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>targetType </code>is not an <xref href=\"System.Security.Principal.IdentityReference\"></xref> type.\n  - type: System.Security.Principal.IdentityNotMappedException\n    commentId: T:System.Security.Principal.IdentityNotMappedException\n    description: Some or all identity references could not be translated.\n  - type: System.SystemException\n    commentId: T:System.SystemException\n    description: \"The source account name is too long.  \\n  \\n -or-  \\n  \\n A Win32 error code was returned.\"\n  platform:\n  - net462\n- uid: System.Security.Principal.NTAccount.Value\n  id: Value\n  parent: System.Security.Principal.NTAccount\n  langs:\n  - csharp\n  name: Value\n  nameWithType: NTAccount.Value\n  fullName: System.Security.Principal.NTAccount.Value\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Returns an uppercase string representation of this <xref href=\"System.Security.Principal.NTAccount\"></xref> object.\n  syntax:\n    content: public override string Value { get; }\n    return:\n      type: System.String\n      description: The uppercase string representation of this <xref href=\"System.Security.Principal.NTAccount\"></xref> object.\n  overload: System.Security.Principal.NTAccount.Value*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.Principal.IdentityReference\n  isExternal: false\n  name: System.Security.Principal.IdentityReference\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Security.Principal.IdentityNotMappedException\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityNotMappedException\n  nameWithType: IdentityNotMappedException\n  fullName: System.Security.Principal.IdentityNotMappedException\n- uid: System.SystemException\n  parent: System\n  isExternal: false\n  name: SystemException\n  nameWithType: SystemException\n  fullName: System.SystemException\n- uid: System.Security.Principal.NTAccount.#ctor(System.String)\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: NTAccount(String)\n  nameWithType: NTAccount.NTAccount(String)\n  fullName: System.Security.Principal.NTAccount.NTAccount(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Principal.NTAccount.#ctor(System.String,System.String)\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: NTAccount(String,String)\n  nameWithType: NTAccount.NTAccount(String,String)\n  fullName: System.Security.Principal.NTAccount.NTAccount(String,String)\n- uid: System.Security.Principal.NTAccount.Equals(System.Object)\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: NTAccount.Equals(Object)\n  fullName: System.Security.Principal.NTAccount.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.Principal.NTAccount.GetHashCode\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: NTAccount.GetHashCode()\n  fullName: System.Security.Principal.NTAccount.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Principal.NTAccount.IsValidTargetType(System.Type)\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: IsValidTargetType(Type)\n  nameWithType: NTAccount.IsValidTargetType(Type)\n  fullName: System.Security.Principal.NTAccount.IsValidTargetType(Type)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Security.Principal.NTAccount.op_Equality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: op_Equality(NTAccount,NTAccount)\n  nameWithType: NTAccount.op_Equality(NTAccount,NTAccount)\n  fullName: System.Security.Principal.NTAccount.op_Equality(NTAccount,NTAccount)\n- uid: System.Security.Principal.NTAccount\n  parent: System.Security.Principal\n  isExternal: false\n  name: NTAccount\n  nameWithType: NTAccount\n  fullName: System.Security.Principal.NTAccount\n- uid: System.Security.Principal.NTAccount.op_Inequality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: op_Inequality(NTAccount,NTAccount)\n  nameWithType: NTAccount.op_Inequality(NTAccount,NTAccount)\n  fullName: System.Security.Principal.NTAccount.op_Inequality(NTAccount,NTAccount)\n- uid: System.Security.Principal.NTAccount.ToString\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: ToString()\n  nameWithType: NTAccount.ToString()\n  fullName: System.Security.Principal.NTAccount.ToString()\n- uid: System.Security.Principal.NTAccount.Translate(System.Type)\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: Translate(Type)\n  nameWithType: NTAccount.Translate(Type)\n  fullName: System.Security.Principal.NTAccount.Translate(Type)\n- uid: System.Security.Principal.NTAccount.Value\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: Value\n  nameWithType: NTAccount.Value\n  fullName: System.Security.Principal.NTAccount.Value\n- uid: System.Security.Principal.NTAccount.#ctor*\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: NTAccount\n  nameWithType: NTAccount.NTAccount\n- uid: System.Security.Principal.NTAccount.Equals*\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: Equals\n  nameWithType: NTAccount.Equals\n- uid: System.Security.Principal.NTAccount.GetHashCode*\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: GetHashCode\n  nameWithType: NTAccount.GetHashCode\n- uid: System.Security.Principal.NTAccount.IsValidTargetType*\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: IsValidTargetType\n  nameWithType: NTAccount.IsValidTargetType\n- uid: System.Security.Principal.NTAccount.op_Equality*\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: op_Equality\n  nameWithType: NTAccount.op_Equality\n- uid: System.Security.Principal.NTAccount.op_Inequality*\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: op_Inequality\n  nameWithType: NTAccount.op_Inequality\n- uid: System.Security.Principal.NTAccount.ToString*\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: ToString\n  nameWithType: NTAccount.ToString\n- uid: System.Security.Principal.NTAccount.Translate*\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: Translate\n  nameWithType: NTAccount.Translate\n- uid: System.Security.Principal.NTAccount.Value*\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: Value\n  nameWithType: NTAccount.Value\n"}